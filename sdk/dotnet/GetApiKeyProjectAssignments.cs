// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetApiKeyProjectAssignments
    {
        /// <summary>
        /// ## # Data Source: mongodbatlas.getApiKeyProjectAssignments
        /// 
        /// `mongodbatlas.getApiKeyProjectAssignments` provides an API Key Project Assignments data source. The data source lets you list all API key project assignments for an organization.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = new Mongodbatlas.ApiKey("this", new()
        ///     {
        ///         OrgId = orgId,
        ///         Description = "Test API Key",
        ///         RoleNames = new[]
        ///         {
        ///             "ORG_READ_ONLY",
        ///         },
        ///     });
        /// 
        ///     var firstProject = new Mongodbatlas.Project("first_project", new()
        ///     {
        ///         Name = "First Project",
        ///         OrgId = orgId,
        ///     });
        /// 
        ///     var secondProject = new Mongodbatlas.Project("second_project", new()
        ///     {
        ///         Name = "Second Project",
        ///         OrgId = orgId,
        ///     });
        /// 
        ///     var firstAssignment = new Mongodbatlas.ApiKeyProjectAssignment("first_assignment", new()
        ///     {
        ///         ProjectId = firstProject.Id,
        ///         ApiKeyId = @this.ApiKeyId,
        ///         Roles = new[]
        ///         {
        ///             "GROUP_OWNER",
        ///         },
        ///     });
        /// 
        ///     var secondAssignment = new Mongodbatlas.ApiKeyProjectAssignment("second_assignment", new()
        ///     {
        ///         ProjectId = secondProject.Id,
        ///         ApiKeyId = @this.ApiKeyId,
        ///         Roles = new[]
        ///         {
        ///             "GROUP_OWNER",
        ///         },
        ///     });
        /// 
        ///     // Add IP Access List Entry to Programmatic API Key 
        ///     var thisAccessListApiKey = new Mongodbatlas.AccessListApiKey("this", new()
        ///     {
        ///         OrgId = orgId,
        ///         CidrBlock = "0.0.0.0/1",
        ///         ApiKeyId = @this.ApiKeyId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApiKeyProjectAssignmentsResult> InvokeAsync(GetApiKeyProjectAssignmentsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiKeyProjectAssignmentsResult>("mongodbatlas:index/getApiKeyProjectAssignments:getApiKeyProjectAssignments", args ?? new GetApiKeyProjectAssignmentsArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.getApiKeyProjectAssignments
        /// 
        /// `mongodbatlas.getApiKeyProjectAssignments` provides an API Key Project Assignments data source. The data source lets you list all API key project assignments for an organization.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = new Mongodbatlas.ApiKey("this", new()
        ///     {
        ///         OrgId = orgId,
        ///         Description = "Test API Key",
        ///         RoleNames = new[]
        ///         {
        ///             "ORG_READ_ONLY",
        ///         },
        ///     });
        /// 
        ///     var firstProject = new Mongodbatlas.Project("first_project", new()
        ///     {
        ///         Name = "First Project",
        ///         OrgId = orgId,
        ///     });
        /// 
        ///     var secondProject = new Mongodbatlas.Project("second_project", new()
        ///     {
        ///         Name = "Second Project",
        ///         OrgId = orgId,
        ///     });
        /// 
        ///     var firstAssignment = new Mongodbatlas.ApiKeyProjectAssignment("first_assignment", new()
        ///     {
        ///         ProjectId = firstProject.Id,
        ///         ApiKeyId = @this.ApiKeyId,
        ///         Roles = new[]
        ///         {
        ///             "GROUP_OWNER",
        ///         },
        ///     });
        /// 
        ///     var secondAssignment = new Mongodbatlas.ApiKeyProjectAssignment("second_assignment", new()
        ///     {
        ///         ProjectId = secondProject.Id,
        ///         ApiKeyId = @this.ApiKeyId,
        ///         Roles = new[]
        ///         {
        ///             "GROUP_OWNER",
        ///         },
        ///     });
        /// 
        ///     // Add IP Access List Entry to Programmatic API Key 
        ///     var thisAccessListApiKey = new Mongodbatlas.AccessListApiKey("this", new()
        ///     {
        ///         OrgId = orgId,
        ///         CidrBlock = "0.0.0.0/1",
        ///         ApiKeyId = @this.ApiKeyId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiKeyProjectAssignmentsResult> Invoke(GetApiKeyProjectAssignmentsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiKeyProjectAssignmentsResult>("mongodbatlas:index/getApiKeyProjectAssignments:getApiKeyProjectAssignments", args ?? new GetApiKeyProjectAssignmentsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.getApiKeyProjectAssignments
        /// 
        /// `mongodbatlas.getApiKeyProjectAssignments` provides an API Key Project Assignments data source. The data source lets you list all API key project assignments for an organization.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = new Mongodbatlas.ApiKey("this", new()
        ///     {
        ///         OrgId = orgId,
        ///         Description = "Test API Key",
        ///         RoleNames = new[]
        ///         {
        ///             "ORG_READ_ONLY",
        ///         },
        ///     });
        /// 
        ///     var firstProject = new Mongodbatlas.Project("first_project", new()
        ///     {
        ///         Name = "First Project",
        ///         OrgId = orgId,
        ///     });
        /// 
        ///     var secondProject = new Mongodbatlas.Project("second_project", new()
        ///     {
        ///         Name = "Second Project",
        ///         OrgId = orgId,
        ///     });
        /// 
        ///     var firstAssignment = new Mongodbatlas.ApiKeyProjectAssignment("first_assignment", new()
        ///     {
        ///         ProjectId = firstProject.Id,
        ///         ApiKeyId = @this.ApiKeyId,
        ///         Roles = new[]
        ///         {
        ///             "GROUP_OWNER",
        ///         },
        ///     });
        /// 
        ///     var secondAssignment = new Mongodbatlas.ApiKeyProjectAssignment("second_assignment", new()
        ///     {
        ///         ProjectId = secondProject.Id,
        ///         ApiKeyId = @this.ApiKeyId,
        ///         Roles = new[]
        ///         {
        ///             "GROUP_OWNER",
        ///         },
        ///     });
        /// 
        ///     // Add IP Access List Entry to Programmatic API Key 
        ///     var thisAccessListApiKey = new Mongodbatlas.AccessListApiKey("this", new()
        ///     {
        ///         OrgId = orgId,
        ///         CidrBlock = "0.0.0.0/1",
        ///         ApiKeyId = @this.ApiKeyId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiKeyProjectAssignmentsResult> Invoke(GetApiKeyProjectAssignmentsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiKeyProjectAssignmentsResult>("mongodbatlas:index/getApiKeyProjectAssignments:getApiKeyProjectAssignments", args ?? new GetApiKeyProjectAssignmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiKeyProjectAssignmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetApiKeyProjectAssignmentsArgs()
        {
        }
        public static new GetApiKeyProjectAssignmentsArgs Empty => new GetApiKeyProjectAssignmentsArgs();
    }

    public sealed class GetApiKeyProjectAssignmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetApiKeyProjectAssignmentsInvokeArgs()
        {
        }
        public static new GetApiKeyProjectAssignmentsInvokeArgs Empty => new GetApiKeyProjectAssignmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiKeyProjectAssignmentsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        public readonly string ProjectId;
        public readonly ImmutableArray<Outputs.GetApiKeyProjectAssignmentsResultResult> Results;

        [OutputConstructor]
        private GetApiKeyProjectAssignmentsResult(
            string id,

            string projectId,

            ImmutableArray<Outputs.GetApiKeyProjectAssignmentsResultResult> results)
        {
            Id = id;
            ProjectId = projectId;
            Results = results;
        }
    }
}
