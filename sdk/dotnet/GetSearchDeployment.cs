// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetSearchDeployment
    {
        /// <summary>
        /// `mongodbatlas.SearchDeployment` describes a search node deployment.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Mongodbatlas.GetSearchDeployment.Invoke(new()
        ///     {
        ///         ClusterName = "&lt;CLUSTER_NAME&gt;",
        ///         ProjectId = "&lt;PROJECT_ID&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSearchDeploymentResult> InvokeAsync(GetSearchDeploymentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSearchDeploymentResult>("mongodbatlas:index/getSearchDeployment:getSearchDeployment", args ?? new GetSearchDeploymentArgs(), options.WithDefaults());

        /// <summary>
        /// `mongodbatlas.SearchDeployment` describes a search node deployment.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Mongodbatlas.GetSearchDeployment.Invoke(new()
        ///     {
        ///         ClusterName = "&lt;CLUSTER_NAME&gt;",
        ///         ProjectId = "&lt;PROJECT_ID&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSearchDeploymentResult> Invoke(GetSearchDeploymentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSearchDeploymentResult>("mongodbatlas:index/getSearchDeployment:getSearchDeployment", args ?? new GetSearchDeploymentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSearchDeploymentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster containing a search node deployment.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetSearchDeploymentArgs()
        {
        }
        public static new GetSearchDeploymentArgs Empty => new GetSearchDeploymentArgs();
    }

    public sealed class GetSearchDeploymentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster containing a search node deployment.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetSearchDeploymentInvokeArgs()
        {
        }
        public static new GetSearchDeploymentInvokeArgs Empty => new GetSearchDeploymentInvokeArgs();
    }


    [OutputType]
    public sealed class GetSearchDeploymentResult
    {
        public readonly string ClusterName;
        public readonly string Id;
        public readonly string ProjectId;
        /// <summary>
        /// List of settings that configure the search nodes for your cluster. See specs.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSearchDeploymentSpecResult> Specs;
        /// <summary>
        /// Human-readable label that indicates the current operating condition of this search node deployment.
        /// </summary>
        public readonly string StateName;

        [OutputConstructor]
        private GetSearchDeploymentResult(
            string clusterName,

            string id,

            string projectId,

            ImmutableArray<Outputs.GetSearchDeploymentSpecResult> specs,

            string stateName)
        {
            ClusterName = clusterName;
            Id = id;
            ProjectId = projectId;
            Specs = specs;
            StateName = stateName;
        }
    }
}
