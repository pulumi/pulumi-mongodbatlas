// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetResourcePolicy
    {
        /// <summary>
        /// ## # Data Source: mongodbatlas.ResourcePolicy
        /// 
        /// `mongodbatlas.ResourcePolicy` describes a resource policy in an organization.
        /// 
        /// ## Example Usage
        /// </summary>
        public static Task<GetResourcePolicyResult> InvokeAsync(GetResourcePolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResourcePolicyResult>("mongodbatlas:index/getResourcePolicy:getResourcePolicy", args ?? new GetResourcePolicyArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.ResourcePolicy
        /// 
        /// `mongodbatlas.ResourcePolicy` describes a resource policy in an organization.
        /// 
        /// ## Example Usage
        /// </summary>
        public static Output<GetResourcePolicyResult> Invoke(GetResourcePolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourcePolicyResult>("mongodbatlas:index/getResourcePolicy:getResourcePolicy", args ?? new GetResourcePolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.ResourcePolicy
        /// 
        /// `mongodbatlas.ResourcePolicy` describes a resource policy in an organization.
        /// 
        /// ## Example Usage
        /// </summary>
        public static Output<GetResourcePolicyResult> Invoke(GetResourcePolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourcePolicyResult>("mongodbatlas:index/getResourcePolicy:getResourcePolicy", args ?? new GetResourcePolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourcePolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies an Atlas resource policy.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
        /// </summary>
        [Input("orgId", required: true)]
        public string OrgId { get; set; } = null!;

        public GetResourcePolicyArgs()
        {
        }
        public static new GetResourcePolicyArgs Empty => new GetResourcePolicyArgs();
    }

    public sealed class GetResourcePolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies an Atlas resource policy.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
        /// </summary>
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        public GetResourcePolicyInvokeArgs()
        {
        }
        public static new GetResourcePolicyInvokeArgs Empty => new GetResourcePolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourcePolicyResult
    {
        /// <summary>
        /// The user that last updated the Atlas resource policy.
        /// </summary>
        public readonly Outputs.GetResourcePolicyCreatedByUserResult CreatedByUser;
        /// <summary>
        /// Date and time in UTC when the Atlas resource policy was created.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// Description of the Atlas resource policy.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies an Atlas resource policy.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The user that last updated the Atlas resource policy.
        /// </summary>
        public readonly Outputs.GetResourcePolicyLastUpdatedByUserResult LastUpdatedByUser;
        /// <summary>
        /// Date and time in UTC when the Atlas resource policy was last updated.
        /// </summary>
        public readonly string LastUpdatedDate;
        /// <summary>
        /// Human-readable label that describes the Atlas resource policy.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
        /// </summary>
        public readonly string OrgId;
        /// <summary>
        /// List of policies that make up the Atlas resource policy.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResourcePolicyPolicyResult> Policies;
        /// <summary>
        /// A string that identifies the version of the Atlas resource policy.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetResourcePolicyResult(
            Outputs.GetResourcePolicyCreatedByUserResult createdByUser,

            string createdDate,

            string description,

            string id,

            Outputs.GetResourcePolicyLastUpdatedByUserResult lastUpdatedByUser,

            string lastUpdatedDate,

            string name,

            string orgId,

            ImmutableArray<Outputs.GetResourcePolicyPolicyResult> policies,

            string version)
        {
            CreatedByUser = createdByUser;
            CreatedDate = createdDate;
            Description = description;
            Id = id;
            LastUpdatedByUser = lastUpdatedByUser;
            LastUpdatedDate = lastUpdatedDate;
            Name = name;
            OrgId = orgId;
            Policies = policies;
            Version = version;
        }
    }
}
