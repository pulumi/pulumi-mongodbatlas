// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetBackupCompliancePolicy
    {
        public static Task<GetBackupCompliancePolicyResult> InvokeAsync(GetBackupCompliancePolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackupCompliancePolicyResult>("mongodbatlas:index/getBackupCompliancePolicy:getBackupCompliancePolicy", args ?? new GetBackupCompliancePolicyArgs(), options.WithDefaults());

        public static Output<GetBackupCompliancePolicyResult> Invoke(GetBackupCompliancePolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupCompliancePolicyResult>("mongodbatlas:index/getBackupCompliancePolicy:getBackupCompliancePolicy", args ?? new GetBackupCompliancePolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupCompliancePolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("onDemandPolicyItem")]
        public Inputs.GetBackupCompliancePolicyOnDemandPolicyItemArgs? OnDemandPolicyItem { get; set; }

        [Input("policyItemDaily")]
        public Inputs.GetBackupCompliancePolicyPolicyItemDailyArgs? PolicyItemDaily { get; set; }

        [Input("policyItemHourly")]
        public Inputs.GetBackupCompliancePolicyPolicyItemHourlyArgs? PolicyItemHourly { get; set; }

        [Input("policyItemMonthlies")]
        private List<Inputs.GetBackupCompliancePolicyPolicyItemMonthlyArgs>? _policyItemMonthlies;
        public List<Inputs.GetBackupCompliancePolicyPolicyItemMonthlyArgs> PolicyItemMonthlies
        {
            get => _policyItemMonthlies ?? (_policyItemMonthlies = new List<Inputs.GetBackupCompliancePolicyPolicyItemMonthlyArgs>());
            set => _policyItemMonthlies = value;
        }

        [Input("policyItemWeeklies")]
        private List<Inputs.GetBackupCompliancePolicyPolicyItemWeeklyArgs>? _policyItemWeeklies;
        public List<Inputs.GetBackupCompliancePolicyPolicyItemWeeklyArgs> PolicyItemWeeklies
        {
            get => _policyItemWeeklies ?? (_policyItemWeeklies = new List<Inputs.GetBackupCompliancePolicyPolicyItemWeeklyArgs>());
            set => _policyItemWeeklies = value;
        }

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetBackupCompliancePolicyArgs()
        {
        }
        public static new GetBackupCompliancePolicyArgs Empty => new GetBackupCompliancePolicyArgs();
    }

    public sealed class GetBackupCompliancePolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("onDemandPolicyItem")]
        public Input<Inputs.GetBackupCompliancePolicyOnDemandPolicyItemInputArgs>? OnDemandPolicyItem { get; set; }

        [Input("policyItemDaily")]
        public Input<Inputs.GetBackupCompliancePolicyPolicyItemDailyInputArgs>? PolicyItemDaily { get; set; }

        [Input("policyItemHourly")]
        public Input<Inputs.GetBackupCompliancePolicyPolicyItemHourlyInputArgs>? PolicyItemHourly { get; set; }

        [Input("policyItemMonthlies")]
        private InputList<Inputs.GetBackupCompliancePolicyPolicyItemMonthlyInputArgs>? _policyItemMonthlies;
        public InputList<Inputs.GetBackupCompliancePolicyPolicyItemMonthlyInputArgs> PolicyItemMonthlies
        {
            get => _policyItemMonthlies ?? (_policyItemMonthlies = new InputList<Inputs.GetBackupCompliancePolicyPolicyItemMonthlyInputArgs>());
            set => _policyItemMonthlies = value;
        }

        [Input("policyItemWeeklies")]
        private InputList<Inputs.GetBackupCompliancePolicyPolicyItemWeeklyInputArgs>? _policyItemWeeklies;
        public InputList<Inputs.GetBackupCompliancePolicyPolicyItemWeeklyInputArgs> PolicyItemWeeklies
        {
            get => _policyItemWeeklies ?? (_policyItemWeeklies = new InputList<Inputs.GetBackupCompliancePolicyPolicyItemWeeklyInputArgs>());
            set => _policyItemWeeklies = value;
        }

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetBackupCompliancePolicyInvokeArgs()
        {
        }
        public static new GetBackupCompliancePolicyInvokeArgs Empty => new GetBackupCompliancePolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackupCompliancePolicyResult
    {
        /// <summary>
        /// Email address of the user who is authorized to update the Backup Compliance Policy settings.
        /// </summary>
        public readonly string AuthorizedEmail;
        /// <summary>
        /// Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
        /// </summary>
        public readonly bool CopyProtectionEnabled;
        /// <summary>
        /// Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
        /// </summary>
        public readonly bool EncryptionAtRestEnabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetBackupCompliancePolicyOnDemandPolicyItemResult? OnDemandPolicyItem;
        /// <summary>
        /// Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
        /// </summary>
        public readonly bool PitEnabled;
        public readonly Outputs.GetBackupCompliancePolicyPolicyItemDailyResult? PolicyItemDaily;
        public readonly Outputs.GetBackupCompliancePolicyPolicyItemHourlyResult? PolicyItemHourly;
        public readonly ImmutableArray<Outputs.GetBackupCompliancePolicyPolicyItemMonthlyResult> PolicyItemMonthlies;
        public readonly ImmutableArray<Outputs.GetBackupCompliancePolicyPolicyItemWeeklyResult> PolicyItemWeeklies;
        public readonly string ProjectId;
        /// <summary>
        /// Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
        /// </summary>
        public readonly int RestoreWindowDays;
        /// <summary>
        /// Label that indicates the state of the Backup Compliance Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// ISO 8601 timestamp format in UTC that indicates when the user updated the Data Protection Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
        /// </summary>
        public readonly string UpdatedDate;
        /// <summary>
        /// Email address that identifies the user who updated the Backup Compliance Policy settings. MongoDB Cloud ignores this email setting when you enable or update the Backup Compliance Policy settings.
        /// </summary>
        public readonly string UpdatedUser;

        [OutputConstructor]
        private GetBackupCompliancePolicyResult(
            string authorizedEmail,

            bool copyProtectionEnabled,

            bool encryptionAtRestEnabled,

            string id,

            Outputs.GetBackupCompliancePolicyOnDemandPolicyItemResult? onDemandPolicyItem,

            bool pitEnabled,

            Outputs.GetBackupCompliancePolicyPolicyItemDailyResult? policyItemDaily,

            Outputs.GetBackupCompliancePolicyPolicyItemHourlyResult? policyItemHourly,

            ImmutableArray<Outputs.GetBackupCompliancePolicyPolicyItemMonthlyResult> policyItemMonthlies,

            ImmutableArray<Outputs.GetBackupCompliancePolicyPolicyItemWeeklyResult> policyItemWeeklies,

            string projectId,

            int restoreWindowDays,

            string state,

            string updatedDate,

            string updatedUser)
        {
            AuthorizedEmail = authorizedEmail;
            CopyProtectionEnabled = copyProtectionEnabled;
            EncryptionAtRestEnabled = encryptionAtRestEnabled;
            Id = id;
            OnDemandPolicyItem = onDemandPolicyItem;
            PitEnabled = pitEnabled;
            PolicyItemDaily = policyItemDaily;
            PolicyItemHourly = policyItemHourly;
            PolicyItemMonthlies = policyItemMonthlies;
            PolicyItemWeeklies = policyItemWeeklies;
            ProjectId = projectId;
            RestoreWindowDays = restoreWindowDays;
            State = state;
            UpdatedDate = updatedDate;
            UpdatedUser = updatedUser;
        }
    }
}
