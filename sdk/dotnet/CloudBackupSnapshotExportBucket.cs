// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    /// <summary>
    /// # Resource: mongodbatlas.CloudBackupSnapshotExportBucket
    /// 
    /// `mongodbatlas.CloudBackupSnapshotExportBucket` allows you to create an export snapshot bucket for the specified project.
    /// 
    /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
    /// 
    /// ## Example Usage
    /// 
    /// ### AWS Example
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Mongodbatlas = Pulumi.Mongodbatlas;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Mongodbatlas.CloudBackupSnapshotExportBucket("test", new()
    ///     {
    ///         ProjectId = "{PROJECT_ID}",
    ///         IamRoleId = "{IAM_ROLE_ID}",
    ///         BucketName = "example-bucket",
    ///         CloudProvider = "AWS",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Azure Example
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Mongodbatlas = Pulumi.Mongodbatlas;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Mongodbatlas.CloudBackupSnapshotExportBucket("test", new()
    ///     {
    ///         ProjectId = "{PROJECT_ID}",
    ///         RoleId = "{ROLE_ID}",
    ///         ServiceUrl = "{SERVICE_URL}",
    ///         TenantId = "{TENANT_ID}",
    ///         BucketName = "example-bucket",
    ///         CloudProvider = "AZURE",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cloud Backup Snapshot Export Backup entries can be imported using project project_id, and bucket_id (Unique identifier of the snapshot export bucket), in the format `PROJECTID-BUCKETID`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import mongodbatlas:index/cloudBackupSnapshotExportBucket:CloudBackupSnapshotExportBucket test 5d0f1f73cf09a29120e173cf-5d116d82014b764445b2f9b5
    /// ```
    /// For more information see: [MongoDB Atlas API Reference.](https://docs.atlas.mongodb.com/reference/api/cloud-backup/export/create-one-export-bucket/)
    /// </summary>
    [MongodbatlasResourceType("mongodbatlas:index/cloudBackupSnapshotExportBucket:CloudBackupSnapshotExportBucket")]
    public partial class CloudBackupSnapshotExportBucket : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the bucket that the provided role ID is authorized to access.
        /// </summary>
        [Output("bucketName")]
        public Output<string> BucketName { get; private set; } = null!;

        /// <summary>
        /// Name of the provider of the cloud service where Atlas can access the S3 bucket.
        /// </summary>
        [Output("cloudProvider")]
        public Output<string> CloudProvider { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the snapshot export bucket.
        /// </summary>
        [Output("exportBucketId")]
        public Output<string> ExportBucketId { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the role that Atlas can use to access the bucket. Required if `cloud_provider` is set to `AWS`.
        /// </summary>
        [Output("iamRoleId")]
        public Output<string?> IamRoleId { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the project for the Atlas cluster.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the Azure Service Principal that Atlas can use to access the Azure Blob Storage Container. Required if `cloud_provider` is set to `AZURE`.
        /// </summary>
        [Output("roleId")]
        public Output<string?> RoleId { get; private set; } = null!;

        /// <summary>
        /// URL that identifies the blob Endpoint of the Azure Blob Storage Account. Required if `cloud_provider` is set to `AZURE`.
        /// </summary>
        [Output("serviceUrl")]
        public Output<string?> ServiceUrl { get; private set; } = null!;

        /// <summary>
        /// UUID that identifies the Azure Active Directory Tenant ID. Required if `cloud_provider` is set to `AZURE`.
        /// </summary>
        [Output("tenantId")]
        public Output<string?> TenantId { get; private set; } = null!;


        /// <summary>
        /// Create a CloudBackupSnapshotExportBucket resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudBackupSnapshotExportBucket(string name, CloudBackupSnapshotExportBucketArgs args, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/cloudBackupSnapshotExportBucket:CloudBackupSnapshotExportBucket", name, args ?? new CloudBackupSnapshotExportBucketArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudBackupSnapshotExportBucket(string name, Input<string> id, CloudBackupSnapshotExportBucketState? state = null, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/cloudBackupSnapshotExportBucket:CloudBackupSnapshotExportBucket", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudBackupSnapshotExportBucket resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudBackupSnapshotExportBucket Get(string name, Input<string> id, CloudBackupSnapshotExportBucketState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudBackupSnapshotExportBucket(name, id, state, options);
        }
    }

    public sealed class CloudBackupSnapshotExportBucketArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the bucket that the provided role ID is authorized to access.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        /// <summary>
        /// Name of the provider of the cloud service where Atlas can access the S3 bucket.
        /// </summary>
        [Input("cloudProvider", required: true)]
        public Input<string> CloudProvider { get; set; } = null!;

        /// <summary>
        /// Unique identifier of the role that Atlas can use to access the bucket. Required if `cloud_provider` is set to `AWS`.
        /// </summary>
        [Input("iamRoleId")]
        public Input<string>? IamRoleId { get; set; }

        /// <summary>
        /// The unique identifier of the project for the Atlas cluster.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// Unique identifier of the Azure Service Principal that Atlas can use to access the Azure Blob Storage Container. Required if `cloud_provider` is set to `AZURE`.
        /// </summary>
        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        /// <summary>
        /// URL that identifies the blob Endpoint of the Azure Blob Storage Account. Required if `cloud_provider` is set to `AZURE`.
        /// </summary>
        [Input("serviceUrl")]
        public Input<string>? ServiceUrl { get; set; }

        /// <summary>
        /// UUID that identifies the Azure Active Directory Tenant ID. Required if `cloud_provider` is set to `AZURE`.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public CloudBackupSnapshotExportBucketArgs()
        {
        }
        public static new CloudBackupSnapshotExportBucketArgs Empty => new CloudBackupSnapshotExportBucketArgs();
    }

    public sealed class CloudBackupSnapshotExportBucketState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the bucket that the provided role ID is authorized to access.
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// Name of the provider of the cloud service where Atlas can access the S3 bucket.
        /// </summary>
        [Input("cloudProvider")]
        public Input<string>? CloudProvider { get; set; }

        /// <summary>
        /// Unique identifier of the snapshot export bucket.
        /// </summary>
        [Input("exportBucketId")]
        public Input<string>? ExportBucketId { get; set; }

        /// <summary>
        /// Unique identifier of the role that Atlas can use to access the bucket. Required if `cloud_provider` is set to `AWS`.
        /// </summary>
        [Input("iamRoleId")]
        public Input<string>? IamRoleId { get; set; }

        /// <summary>
        /// The unique identifier of the project for the Atlas cluster.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Unique identifier of the Azure Service Principal that Atlas can use to access the Azure Blob Storage Container. Required if `cloud_provider` is set to `AZURE`.
        /// </summary>
        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        /// <summary>
        /// URL that identifies the blob Endpoint of the Azure Blob Storage Account. Required if `cloud_provider` is set to `AZURE`.
        /// </summary>
        [Input("serviceUrl")]
        public Input<string>? ServiceUrl { get; set; }

        /// <summary>
        /// UUID that identifies the Azure Active Directory Tenant ID. Required if `cloud_provider` is set to `AZURE`.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public CloudBackupSnapshotExportBucketState()
        {
        }
        public static new CloudBackupSnapshotExportBucketState Empty => new CloudBackupSnapshotExportBucketState();
    }
}
