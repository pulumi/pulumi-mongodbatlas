// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetOrgInvitation
    {
        /// <summary>
        /// `mongodbatlas.OrgInvitation` describes an invitation for a user to join an Atlas organization.
        /// </summary>
        public static Task<GetOrgInvitationResult> InvokeAsync(GetOrgInvitationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOrgInvitationResult>("mongodbatlas:index/getOrgInvitation:getOrgInvitation", args ?? new GetOrgInvitationArgs(), options.WithDefaults());

        /// <summary>
        /// `mongodbatlas.OrgInvitation` describes an invitation for a user to join an Atlas organization.
        /// </summary>
        public static Output<GetOrgInvitationResult> Invoke(GetOrgInvitationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetOrgInvitationResult>("mongodbatlas:index/getOrgInvitation:getOrgInvitation", args ?? new GetOrgInvitationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrgInvitationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies the invitation in Atlas.
        /// </summary>
        [Input("invitationId", required: true)]
        public string InvitationId { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies the organization to which you invited the user.
        /// </summary>
        [Input("orgId", required: true)]
        public string OrgId { get; set; } = null!;

        /// <summary>
        /// Email address of the invited user. This is the address to which Atlas sends the invite. If the user accepts the invitation, they log in to Atlas with this username.
        /// </summary>
        [Input("username", required: true)]
        public string Username { get; set; } = null!;

        public GetOrgInvitationArgs()
        {
        }
    }

    public sealed class GetOrgInvitationInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies the invitation in Atlas.
        /// </summary>
        [Input("invitationId", required: true)]
        public Input<string> InvitationId { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies the organization to which you invited the user.
        /// </summary>
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        /// <summary>
        /// Email address of the invited user. This is the address to which Atlas sends the invite. If the user accepts the invitation, they log in to Atlas with this username.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public GetOrgInvitationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOrgInvitationResult
    {
        /// <summary>
        /// Timestamp in ISO 8601 date and time format in UTC when Atlas sent the invitation.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Timestamp in ISO 8601 date and time format in UTC when the invitation expires. Users have 30 days to accept an invitation.
        /// </summary>
        public readonly string ExpiresAt;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InvitationId;
        /// <summary>
        /// Atlas user who invited `username` to the organization.
        /// </summary>
        public readonly string InviterUsername;
        public readonly string OrgId;
        /// <summary>
        /// Atlas roles to assign to the invited user. If the user accepts the invitation, Atlas assigns these roles to them. The following options are available:
        /// * ORG_OWNER
        /// * ORG_GROUP_CREATOR
        /// * ORG_BILLING_ADMIN
        /// * ORG_READ_ONLY
        /// * ORG_MEMBER
        /// </summary>
        public readonly ImmutableArray<string> Roles;
        /// <summary>
        /// An array of unique 24-hexadecimal digit strings that identify the teams that the user was invited to join.
        /// </summary>
        public readonly ImmutableArray<string> TeamsIds;
        public readonly string Username;

        [OutputConstructor]
        private GetOrgInvitationResult(
            string createdAt,

            string expiresAt,

            string id,

            string invitationId,

            string inviterUsername,

            string orgId,

            ImmutableArray<string> roles,

            ImmutableArray<string> teamsIds,

            string username)
        {
            CreatedAt = createdAt;
            ExpiresAt = expiresAt;
            Id = id;
            InvitationId = invitationId;
            InviterUsername = inviterUsername;
            OrgId = orgId;
            Roles = roles;
            TeamsIds = teamsIds;
            Username = username;
        }
    }
}
