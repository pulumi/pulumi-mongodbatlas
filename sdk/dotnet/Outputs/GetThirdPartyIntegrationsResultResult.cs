// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas.Outputs
{

    [OutputType]
    public sealed class GetThirdPartyIntegrationsResultResult
    {
        public readonly string AccountId;
        /// <summary>
        /// Your API Key.
        /// </summary>
        public readonly string ApiKey;
        public readonly string ChannelName;
        /// <summary>
        /// Whether your cluster has Prometheus enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Unique identifier of the integration.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Your Microsoft Teams incoming webhook URL.
        /// * `PROMETHEUS`
        /// </summary>
        public readonly string MicrosoftTeamsWebhookUrl;
        /// <summary>
        /// The unique ID for the project to get all Third-Party service integrations
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// Two-letter code that indicates which API URL to use. See the `Region` response field of [MongoDB API Third-Party Service Integration documentation](https://www.mongodb.com/docs/api/doc/atlas-admin-api-v2/operation/operation-getthirdpartyintegration) for more details. Opsgenie will use US by default.
        /// * `VICTOR_OPS`
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// An optional field for your Routing Key.
        /// * `WEBHOOK`
        /// </summary>
        public readonly string RoutingKey;
        /// <summary>
        /// An optional field for your webhook secret.
        /// * `MICROSOFT_TEAMS`
        /// </summary>
        public readonly string Secret;
        /// <summary>
        /// Toggle sending collection latency metrics that includes database names and collection names and latency metrics on reads, writes, commands, and transactions.
        /// </summary>
        public readonly bool SendCollectionLatencyMetrics;
        /// <summary>
        /// Toggle sending database metrics that includes database names and metrics on the number of collections, storage size, and index size.
        /// </summary>
        public readonly bool SendDatabaseMetrics;
        /// <summary>
        /// Toggle sending user provided group and cluster resource tags with the datadog metrics.
        /// * `OPS_GENIE`
        /// </summary>
        public readonly bool SendUserProvidedResourceTags;
        /// <summary>
        /// Indicates which service discovery method is used, either file or http.
        /// </summary>
        public readonly string ServiceDiscovery;
        /// <summary>
        /// Your Service Key.
        /// * `DATADOG`
        /// </summary>
        public readonly string ServiceKey;
        public readonly string TeamName;
        /// <summary>
        /// Thirt-Party service integration type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Your webhook URL.
        /// </summary>
        public readonly string Url;
        /// <summary>
        /// Your Prometheus username.
        /// </summary>
        public readonly string UserName;

        [OutputConstructor]
        private GetThirdPartyIntegrationsResultResult(
            string accountId,

            string apiKey,

            string channelName,

            bool enabled,

            string id,

            string microsoftTeamsWebhookUrl,

            string projectId,

            string region,

            string routingKey,

            string secret,

            bool sendCollectionLatencyMetrics,

            bool sendDatabaseMetrics,

            bool sendUserProvidedResourceTags,

            string serviceDiscovery,

            string serviceKey,

            string teamName,

            string type,

            string url,

            string userName)
        {
            AccountId = accountId;
            ApiKey = apiKey;
            ChannelName = channelName;
            Enabled = enabled;
            Id = id;
            MicrosoftTeamsWebhookUrl = microsoftTeamsWebhookUrl;
            ProjectId = projectId;
            Region = region;
            RoutingKey = routingKey;
            Secret = secret;
            SendCollectionLatencyMetrics = sendCollectionLatencyMetrics;
            SendDatabaseMetrics = sendDatabaseMetrics;
            SendUserProvidedResourceTags = sendUserProvidedResourceTags;
            ServiceDiscovery = serviceDiscovery;
            ServiceKey = serviceKey;
            TeamName = teamName;
            Type = type;
            Url = url;
            UserName = userName;
        }
    }
}
