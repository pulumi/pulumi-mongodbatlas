// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas.Outputs
{

    [OutputType]
    public sealed class AdvancedClusterReplicationSpecRegionConfig
    {
        /// <summary>
        /// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. Analytics nodes handle analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only and can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary). If you don't specify this parameter, no analytics nodes deploy to this region. See below
        /// </summary>
        public readonly Outputs.AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs? AnalyticsSpecs;
        /// <summary>
        /// Configuration for the Collection of settings that configures auto-scaling information for the cluster. The values for the `auto_scaling` parameter must be the same for every item in the `replication_specs` array. See below
        /// </summary>
        public readonly Outputs.AdvancedClusterReplicationSpecRegionConfigAutoScaling? AutoScaling;
        /// <summary>
        /// Cloud service provider on which you provision the host for a multi-tenant cluster. Use this only when a `provider_name` is `TENANT` and `instance_size` of a specs is `M2` or `M5`.
        /// </summary>
        public readonly string? BackingProviderName;
        /// <summary>
        /// Hardware specifications for electable nodes in the region. Electable nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you do not specify this option, no electable nodes are deployed to the region. See below
        /// </summary>
        public readonly Outputs.AdvancedClusterReplicationSpecRegionConfigElectableSpecs? ElectableSpecs;
        /// <summary>
        /// Election priority of the region. For regions with only read-only nodes, set this value to 0.
        /// * If you have multiple `region_configs` objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is 7.
        /// * If your region has set `region_configs.#.electable_specs.0.node_count` to 1 or higher, it must have a priority of exactly one (1) less than another region in the `replication_specs.#.region_configs.#` array. The highest-priority region must have a priority of 7. The lowest possible priority is 1.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// Cloud service provider on which the servers are provisioned.
        /// The possible values are:
        /// </summary>
        public readonly string ProviderName;
        /// <summary>
        /// Hardware specifications for read-only nodes in the region. Read-only nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you don't specify this parameter, no read-only nodes are deployed to the region. See below
        /// </summary>
        public readonly Outputs.AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs? ReadOnlySpecs;
        /// <summary>
        /// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
        /// </summary>
        public readonly string RegionName;

        [OutputConstructor]
        private AdvancedClusterReplicationSpecRegionConfig(
            Outputs.AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs? analyticsSpecs,

            Outputs.AdvancedClusterReplicationSpecRegionConfigAutoScaling? autoScaling,

            string? backingProviderName,

            Outputs.AdvancedClusterReplicationSpecRegionConfigElectableSpecs? electableSpecs,

            int priority,

            string providerName,

            Outputs.AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs? readOnlySpecs,

            string regionName)
        {
            AnalyticsSpecs = analyticsSpecs;
            AutoScaling = autoScaling;
            BackingProviderName = backingProviderName;
            ElectableSpecs = electableSpecs;
            Priority = priority;
            ProviderName = providerName;
            ReadOnlySpecs = readOnlySpecs;
            RegionName = regionName;
        }
    }
}
