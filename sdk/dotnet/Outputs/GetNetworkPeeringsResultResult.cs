// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas.Outputs
{

    [OutputType]
    public sealed class GetNetworkPeeringsResultResult
    {
        /// <summary>
        /// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
        /// </summary>
        public readonly string AccepterRegionName;
        /// <summary>
        /// Unique identifier for an Azure AD directory.
        /// </summary>
        public readonly string AtlasCidrBlock;
        /// <summary>
        /// Account ID of the owner of the peer VPC.
        /// </summary>
        public readonly string AwsAccountId;
        /// <summary>
        /// Unique identifier for an Azure AD directory.
        /// </summary>
        public readonly string AzureDirectoryId;
        /// <summary>
        /// Unique identifer of the Azure subscription in which the VNet resides.
        /// </summary>
        public readonly string AzureSubscriptionId;
        /// <summary>
        /// Unique identifier for the peering connection.
        /// </summary>
        public readonly string ConnectionId;
        public readonly string ContainerId;
        /// <summary>
        /// When `"status" : "FAILED"`, Atlas provides a description of the error.
        /// </summary>
        public readonly string ErrorMessage;
        /// <summary>
        /// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
        /// </summary>
        public readonly string ErrorState;
        /// <summary>
        /// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
        /// </summary>
        public readonly string ErrorStateName;
        /// <summary>
        /// GCP project ID of the owner of the network peer.
        /// </summary>
        public readonly string GcpProjectId;
        /// <summary>
        /// Name of the network peer to which Atlas connects.
        /// </summary>
        public readonly string NetworkName;
        /// <summary>
        /// Atlas assigned unique ID for the peering connection.
        /// </summary>
        public readonly string PeeringId;
        /// <summary>
        /// Cloud provider for this VPC peering connection. If omitted, Atlas sets this parameter to AWS. (Possible Values `AWS`, `AZURE`, `GCP`).
        /// </summary>
        public readonly string ProviderName;
        /// <summary>
        /// Name of your Azure resource group.
        /// </summary>
        public readonly string ResourceGroupName;
        /// <summary>
        /// Peer VPC CIDR block or subnet.
        /// </summary>
        public readonly string RouteTableCidrBlock;
        /// <summary>
        /// Status of the Atlas network peering connection: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING`, `WAITING_FOR_USER`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
        /// </summary>
        public readonly string StatusName;
        /// <summary>
        /// Name of your Azure VNet.
        /// </summary>
        public readonly string VnetName;
        /// <summary>
        /// Unique identifier of the peer VPC.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private GetNetworkPeeringsResultResult(
            string accepterRegionName,

            string atlasCidrBlock,

            string awsAccountId,

            string azureDirectoryId,

            string azureSubscriptionId,

            string connectionId,

            string containerId,

            string errorMessage,

            string errorState,

            string errorStateName,

            string gcpProjectId,

            string networkName,

            string peeringId,

            string providerName,

            string resourceGroupName,

            string routeTableCidrBlock,

            string status,

            string statusName,

            string vnetName,

            string vpcId)
        {
            AccepterRegionName = accepterRegionName;
            AtlasCidrBlock = atlasCidrBlock;
            AwsAccountId = awsAccountId;
            AzureDirectoryId = azureDirectoryId;
            AzureSubscriptionId = azureSubscriptionId;
            ConnectionId = connectionId;
            ContainerId = containerId;
            ErrorMessage = errorMessage;
            ErrorState = errorState;
            ErrorStateName = errorStateName;
            GcpProjectId = gcpProjectId;
            NetworkName = networkName;
            PeeringId = peeringId;
            ProviderName = providerName;
            ResourceGroupName = resourceGroupName;
            RouteTableCidrBlock = routeTableCidrBlock;
            Status = status;
            StatusName = statusName;
            VnetName = vnetName;
            VpcId = vpcId;
        }
    }
}
