// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas.Outputs
{

    [OutputType]
    public sealed class EncryptionAtRestGoogleCloudKmsConfig
    {
        /// <summary>
        /// Flag that indicates whether someone enabled encryption at rest for the specified  project. To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Resource path that displays the key version resource ID for your Google Cloud KMS.
        /// </summary>
        public readonly string? KeyVersionResourceId;
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies the Google Cloud Provider Access Role that MongoDB Cloud uses to access the Google Cloud KMS.
        /// </summary>
        public readonly string? RoleId;
        /// <summary>
        /// JavaScript Object Notation (JSON) object that contains the Google Cloud Key Management Service (KMS). Format the JSON as a string and not as an object.
        /// </summary>
        public readonly string? ServiceAccountKey;
        /// <summary>
        /// Flag that indicates whether the Google Cloud Key Management Service (KMS) encryption key can encrypt and decrypt data.
        /// </summary>
        public readonly bool? Valid;

        [OutputConstructor]
        private EncryptionAtRestGoogleCloudKmsConfig(
            bool? enabled,

            string? keyVersionResourceId,

            string? roleId,

            string? serviceAccountKey,

            bool? valid)
        {
            Enabled = enabled;
            KeyVersionResourceId = keyVersionResourceId;
            RoleId = roleId;
            ServiceAccountKey = serviceAccountKey;
            Valid = valid;
        }
    }
}
