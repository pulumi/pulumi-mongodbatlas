// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas.Outputs
{

    [OutputType]
    public sealed class GetCloudBackupSnapshotsResultResult
    {
        /// <summary>
        /// Cloud provider that stores this snapshot.
        /// </summary>
        public readonly string CloudProvider;
        /// <summary>
        /// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// UDescription of the snapshot. Only present for on-demand snapshots.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
        /// </summary>
        public readonly string ExpiresAt;
        /// <summary>
        /// Unique identifier for the sharded cluster snapshot.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
        /// </summary>
        public readonly string MasterKeyUuid;
        /// <summary>
        /// Block of List of snapshots and the cloud provider where the snapshots are stored. See below
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudBackupSnapshotsResultMemberResult> Members;
        /// <summary>
        /// Version of the MongoDB server.
        /// </summary>
        public readonly string MongodVersion;
        /// <summary>
        /// Label given to a shard or config server from which Atlas took this snapshot.
        /// </summary>
        public readonly string ReplicaSetName;
        /// <summary>
        /// Unique identifiers of the snapshots created for the shards and config server for a sharded cluster.
        /// </summary>
        public readonly ImmutableArray<string> SnapshotIds;
        /// <summary>
        /// Specified the type of snapshot. Valid values are onDemand and scheduled.
        /// </summary>
        public readonly string SnapshotType;
        /// <summary>
        /// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Specifies the size of the snapshot in bytes.
        /// </summary>
        public readonly int StorageSizeBytes;
        /// <summary>
        /// Specifies the type of cluster: replicaSet or shardedCluster.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetCloudBackupSnapshotsResultResult(
            string cloudProvider,

            string createdAt,

            string description,

            string expiresAt,

            string id,

            string masterKeyUuid,

            ImmutableArray<Outputs.GetCloudBackupSnapshotsResultMemberResult> members,

            string mongodVersion,

            string replicaSetName,

            ImmutableArray<string> snapshotIds,

            string snapshotType,

            string status,

            int storageSizeBytes,

            string type)
        {
            CloudProvider = cloudProvider;
            CreatedAt = createdAt;
            Description = description;
            ExpiresAt = expiresAt;
            Id = id;
            MasterKeyUuid = masterKeyUuid;
            Members = members;
            MongodVersion = mongodVersion;
            ReplicaSetName = replicaSetName;
            SnapshotIds = snapshotIds;
            SnapshotType = snapshotType;
            Status = status;
            StorageSizeBytes = storageSizeBytes;
            Type = type;
        }
    }
}
