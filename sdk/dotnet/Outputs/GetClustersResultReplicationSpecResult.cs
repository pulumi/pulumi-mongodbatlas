// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas.Outputs
{

    [OutputType]
    public sealed class GetClustersResultReplicationSpecResult
    {
        /// <summary>
        /// Unique identifer of the replication document for a zone in a Global Cluster. This value corresponds to the legacy sharding schema (no independent shard scaling) and is different from the Shard ID you may see in the Atlas UI.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Number of shards to deploy in the specified zone.
        /// </summary>
        public readonly int NumShards;
        /// <summary>
        /// Describes the physical location of the region. Each regionsConfig document describes the regionâ€™s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClustersResultReplicationSpecRegionsConfigResult> RegionsConfigs;
        /// <summary>
        /// Indicates the n ame for the zone in a Global Cluster.
        /// </summary>
        public readonly string ZoneName;

        [OutputConstructor]
        private GetClustersResultReplicationSpecResult(
            string id,

            int numShards,

            ImmutableArray<Outputs.GetClustersResultReplicationSpecRegionsConfigResult> regionsConfigs,

            string zoneName)
        {
            Id = id;
            NumShards = numShards;
            RegionsConfigs = regionsConfigs;
            ZoneName = zoneName;
        }
    }
}
