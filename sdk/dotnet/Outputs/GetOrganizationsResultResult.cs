// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas.Outputs
{

    [OutputType]
    public sealed class GetOrganizationsResultResult
    {
        /// <summary>
        /// Flag that indicates whether to require API operations to originate from an IP Address added to the API access list for the specified organization.
        /// </summary>
        public readonly bool ApiAccessListRequired;
        /// <summary>
        /// Flag that indicates whether this organization has access to generative AI features. This setting only applies to Atlas Commercial and defaults to `True`. With this setting on, Project Owners may be able to enable or disable individual AI features at the project level. To learn more, see https://www.mongodb.com/docs/generative-ai-faq/.
        /// </summary>
        public readonly bool GenAiFeaturesEnabled;
        /// <summary>
        /// Autogenerated Unique ID for this data source.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Flag that indicates whether this organization has been deleted.
        /// </summary>
        public readonly bool IsDeleted;
        public readonly ImmutableArray<Outputs.GetOrganizationsResultLinkResult> Links;
        /// <summary>
        /// Flag that indicates whether to require users to set up Multi-Factor Authentication (MFA) before accessing the specified organization. To learn more, see: https://www.mongodb.com/docs/atlas/security-multi-factor-authentication/.
        /// </summary>
        public readonly bool MultiFactorAuthRequired;
        /// <summary>
        /// Human-readable label that identifies the organization.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Flag that indicates whether to block MongoDB Support from accessing Atlas infrastructure for any deployment in the specified organization without explicit permission. Once this setting is turned on, you can grant MongoDB Support a 24-hour bypass access to the Atlas deployment to resolve support issues. To learn more, see: https://www.mongodb.com/docs/atlas/security-restrict-support-access/.
        /// </summary>
        public readonly bool RestrictEmployeeAccess;
        /// <summary>
        /// String that specifies a single email address for the specified organization to receive security-related notifications. Specifying a security contact does not grant them authorization or access to Atlas for security decisions or approvals.
        /// </summary>
        public readonly string SecurityContact;
        public readonly bool SkipDefaultAlertsSettings;

        [OutputConstructor]
        private GetOrganizationsResultResult(
            bool apiAccessListRequired,

            bool genAiFeaturesEnabled,

            string id,

            bool isDeleted,

            ImmutableArray<Outputs.GetOrganizationsResultLinkResult> links,

            bool multiFactorAuthRequired,

            string name,

            bool restrictEmployeeAccess,

            string securityContact,

            bool skipDefaultAlertsSettings)
        {
            ApiAccessListRequired = apiAccessListRequired;
            GenAiFeaturesEnabled = genAiFeaturesEnabled;
            Id = id;
            IsDeleted = isDeleted;
            Links = links;
            MultiFactorAuthRequired = multiFactorAuthRequired;
            Name = name;
            RestrictEmployeeAccess = restrictEmployeeAccess;
            SecurityContact = securityContact;
            SkipDefaultAlertsSettings = skipDefaultAlertsSettings;
        }
    }
}
