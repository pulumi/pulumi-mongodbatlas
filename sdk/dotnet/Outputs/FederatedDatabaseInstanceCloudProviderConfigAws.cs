// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas.Outputs
{

    [OutputType]
    public sealed class FederatedDatabaseInstanceCloudProviderConfigAws
    {
        /// <summary>
        /// Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
        /// </summary>
        public readonly string? ExternalId;
        /// <summary>
        /// Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
        /// * `s3:GetObject`
        /// * `s3:ListBucket`
        /// * `s3:GetObjectVersion`
        /// </summary>
        public readonly string? IamAssumedRoleArn;
        /// <summary>
        /// Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
        /// </summary>
        public readonly string? IamUserArn;
        /// <summary>
        /// Unique identifier of the role that the Federated Instance can use to access the data stores. If necessary, use the Atlas [UI](https://docs.atlas.mongodb.com/security/manage-iam-roles/) or [API](https://docs.atlas.mongodb.com/reference/api/cloud-provider-access-get-roles/) to retrieve the role ID. You must also specify the `test_s3_bucket`.
        /// </summary>
        public readonly string RoleId;
        /// <summary>
        /// Name of the S3 data bucket that the provided role ID is authorized to access. You must also specify the `role_id`.
        /// </summary>
        public readonly string TestS3Bucket;

        [OutputConstructor]
        private FederatedDatabaseInstanceCloudProviderConfigAws(
            string? externalId,

            string? iamAssumedRoleArn,

            string? iamUserArn,

            string roleId,

            string testS3Bucket)
        {
            ExternalId = externalId;
            IamAssumedRoleArn = iamAssumedRoleArn;
            IamUserArn = iamUserArn;
            RoleId = roleId;
            TestS3Bucket = testS3Bucket;
        }
    }
}
