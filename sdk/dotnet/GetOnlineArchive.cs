// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetOnlineArchive
    {
        /// <summary>
        /// `mongodbatlas.OnlineArchive` describes an Online Archive
        /// 
        /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Mongodbatlas.GetOnlineArchive.InvokeAsync(new Mongodbatlas.GetOnlineArchiveArgs
        ///         {
        ///             ProjectId = @var.Project_id,
        ///             ClusterName = @var.Cluster_name,
        ///             ArchiveId = "5ebad3c1fe9c0ab8d37d61e1",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Attributes reference
        /// 
        /// * `db_name`          -  Name of the database that contains the collection.
        /// * `coll_name`        -  Name of the collection.
        /// * `criteria`         -  Criteria to use for archiving data.
        /// * `criteria.type`          - Type of criteria (DATE, CUSTOM)
        /// * `criteria.date_field`    - Name of an already indexed date field from the documents. Data is archived when the current date is greater than the value of the date field specified here plus the number of days specified via the `expire_after_days` parameter.
        /// * `criteria.date_format`   - the date format. Valid values:  ISODATE (default), EPOCH_SECONDS, EPOCH_MILLIS, EPOCH_NANOSECONDS
        /// * `criteria.expire_after_days` - Number of days that specifies the age limit for the data in the live Atlas cluster.
        /// * `criteria.query` - JSON query to use to select documents for archiving. Only for `CUSTOM` type
        /// * `partition_fields` -  Fields to use to partition data.
        /// * `partition_fields.field_name` - Name of the field. To specify a nested field, use the dot notation.
        /// * `partition_fields.order` - Position of the field in the partition. Value can be: 0,1,2
        /// By default, the date field specified in the criteria.dateField parameter is in the first position of the partition.
        /// * `partitio_fields.field_type` - Type of the partition field
        /// * `state`    - Status of the online archive. Valid values are: Pending, Archiving, Idle, Pausing, Paused, Orphaned and Deleted
        /// 
        /// See [MongoDB Atlas API](https://docs.atlas.mongodb.com/reference/api/online-archive-get-one/) Documentation for more information.
        /// </summary>
        public static Task<GetOnlineArchiveResult> InvokeAsync(GetOnlineArchiveArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOnlineArchiveResult>("mongodbatlas:index/getOnlineArchive:getOnlineArchive", args ?? new GetOnlineArchiveArgs(), options.WithDefaults());

        /// <summary>
        /// `mongodbatlas.OnlineArchive` describes an Online Archive
        /// 
        /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Mongodbatlas.GetOnlineArchive.InvokeAsync(new Mongodbatlas.GetOnlineArchiveArgs
        ///         {
        ///             ProjectId = @var.Project_id,
        ///             ClusterName = @var.Cluster_name,
        ///             ArchiveId = "5ebad3c1fe9c0ab8d37d61e1",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Attributes reference
        /// 
        /// * `db_name`          -  Name of the database that contains the collection.
        /// * `coll_name`        -  Name of the collection.
        /// * `criteria`         -  Criteria to use for archiving data.
        /// * `criteria.type`          - Type of criteria (DATE, CUSTOM)
        /// * `criteria.date_field`    - Name of an already indexed date field from the documents. Data is archived when the current date is greater than the value of the date field specified here plus the number of days specified via the `expire_after_days` parameter.
        /// * `criteria.date_format`   - the date format. Valid values:  ISODATE (default), EPOCH_SECONDS, EPOCH_MILLIS, EPOCH_NANOSECONDS
        /// * `criteria.expire_after_days` - Number of days that specifies the age limit for the data in the live Atlas cluster.
        /// * `criteria.query` - JSON query to use to select documents for archiving. Only for `CUSTOM` type
        /// * `partition_fields` -  Fields to use to partition data.
        /// * `partition_fields.field_name` - Name of the field. To specify a nested field, use the dot notation.
        /// * `partition_fields.order` - Position of the field in the partition. Value can be: 0,1,2
        /// By default, the date field specified in the criteria.dateField parameter is in the first position of the partition.
        /// * `partitio_fields.field_type` - Type of the partition field
        /// * `state`    - Status of the online archive. Valid values are: Pending, Archiving, Idle, Pausing, Paused, Orphaned and Deleted
        /// 
        /// See [MongoDB Atlas API](https://docs.atlas.mongodb.com/reference/api/online-archive-get-one/) Documentation for more information.
        /// </summary>
        public static Output<GetOnlineArchiveResult> Invoke(GetOnlineArchiveInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetOnlineArchiveResult>("mongodbatlas:index/getOnlineArchive:getOnlineArchive", args ?? new GetOnlineArchiveInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOnlineArchiveArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the online archive.
        /// </summary>
        [Input("archiveId", required: true)]
        public string ArchiveId { get; set; } = null!;

        /// <summary>
        /// Name of the cluster that contains the collection.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The unique ID for the project.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetOnlineArchiveArgs()
        {
        }
    }

    public sealed class GetOnlineArchiveInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the online archive.
        /// </summary>
        [Input("archiveId", required: true)]
        public Input<string> ArchiveId { get; set; } = null!;

        /// <summary>
        /// Name of the cluster that contains the collection.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The unique ID for the project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetOnlineArchiveInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOnlineArchiveResult
    {
        public readonly string ArchiveId;
        public readonly string ClusterName;
        public readonly string CollName;
        public readonly ImmutableArray<Outputs.GetOnlineArchiveCriteriaResult> Criterias;
        public readonly string DbName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetOnlineArchivePartitionFieldResult> PartitionFields;
        public readonly bool Paused;
        public readonly string ProjectId;
        public readonly string State;

        [OutputConstructor]
        private GetOnlineArchiveResult(
            string archiveId,

            string clusterName,

            string collName,

            ImmutableArray<Outputs.GetOnlineArchiveCriteriaResult> criterias,

            string dbName,

            string id,

            ImmutableArray<Outputs.GetOnlineArchivePartitionFieldResult> partitionFields,

            bool paused,

            string projectId,

            string state)
        {
            ArchiveId = archiveId;
            ClusterName = clusterName;
            CollName = collName;
            Criterias = criterias;
            DbName = dbName;
            Id = id;
            PartitionFields = partitionFields;
            Paused = paused;
            ProjectId = projectId;
            State = state;
        }
    }
}
