// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetOnlineArchives
    {
        /// <summary>
        /// `mongodbatlas.OnlineArchive` Describes the list of all the online archives for a cluster
        /// 
        /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Mongodbatlas.GetOnlineArchives.InvokeAsync(new Mongodbatlas.GetOnlineArchivesArgs
        ///         {
        ///             ProjectId = @var.Project_id,
        ///             ClusterName = @var.Cluster_name,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Attributes reference 
        /// 
        /// Each object in the results array represents an online archive with the following attributes:
        /// 
        /// * `archive_id`         - ID of the online archive.
        /// * `db_name`          -  Name of the database that contains the collection.
        /// * `coll_name`        -  Name of the collection.
        /// * `criteria`         -  Criteria to use for archiving data.
        /// * `criteria.type`          - Type of criteria (DATE, CUSTOM)
        /// * `criteria.date_field`    - Name of an already indexed date field from the documents. Data is archived when the current date is greater than the value of the date field specified here plus the number of days specified via the `expire_after_days` parameter.
        /// * `criteria.date_format`   - the date format. Valid values:  ISODATE (default), EPOCH_SECONDS, EPOCH_MILLIS, EPOCH_NANOSECONDS
        /// * `criteria.expire_after_days` - Number of days that specifies the age limit for the data in the live Atlas cluster.
        /// * `criteria.query` - JSON query to use to select documents for archiving. Only for `CUSTOM` type
        /// * `partition_fields` -  Fields to use to partition data.
        /// * `partition_fields.field_name` - Name of the field. To specify a nested field, use the dot notation.
        /// * `partition_fields.order` - Position of the field in the partition. Value can be: 0,1,2
        /// By default, the date field specified in the criteria.dateField parameter is in the first position of the partition.
        /// * `partitio_fields.field_type` - Type of the partition field
        /// * `state`    - Status of the online archive. Valid values are: Pending, Archiving, Idle, Pausing, Paused, Orphaned and Deleted
        /// 
        /// See [MongoDB Atlas API](https://docs.atlas.mongodb.com/reference/api/online-archive-get-all-for-cluster/) Documentation for more information.
        /// </summary>
        public static Task<GetOnlineArchivesResult> InvokeAsync(GetOnlineArchivesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOnlineArchivesResult>("mongodbatlas:index/getOnlineArchives:getOnlineArchives", args ?? new GetOnlineArchivesArgs(), options.WithDefaults());

        /// <summary>
        /// `mongodbatlas.OnlineArchive` Describes the list of all the online archives for a cluster
        /// 
        /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Mongodbatlas.GetOnlineArchives.InvokeAsync(new Mongodbatlas.GetOnlineArchivesArgs
        ///         {
        ///             ProjectId = @var.Project_id,
        ///             ClusterName = @var.Cluster_name,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Attributes reference 
        /// 
        /// Each object in the results array represents an online archive with the following attributes:
        /// 
        /// * `archive_id`         - ID of the online archive.
        /// * `db_name`          -  Name of the database that contains the collection.
        /// * `coll_name`        -  Name of the collection.
        /// * `criteria`         -  Criteria to use for archiving data.
        /// * `criteria.type`          - Type of criteria (DATE, CUSTOM)
        /// * `criteria.date_field`    - Name of an already indexed date field from the documents. Data is archived when the current date is greater than the value of the date field specified here plus the number of days specified via the `expire_after_days` parameter.
        /// * `criteria.date_format`   - the date format. Valid values:  ISODATE (default), EPOCH_SECONDS, EPOCH_MILLIS, EPOCH_NANOSECONDS
        /// * `criteria.expire_after_days` - Number of days that specifies the age limit for the data in the live Atlas cluster.
        /// * `criteria.query` - JSON query to use to select documents for archiving. Only for `CUSTOM` type
        /// * `partition_fields` -  Fields to use to partition data.
        /// * `partition_fields.field_name` - Name of the field. To specify a nested field, use the dot notation.
        /// * `partition_fields.order` - Position of the field in the partition. Value can be: 0,1,2
        /// By default, the date field specified in the criteria.dateField parameter is in the first position of the partition.
        /// * `partitio_fields.field_type` - Type of the partition field
        /// * `state`    - Status of the online archive. Valid values are: Pending, Archiving, Idle, Pausing, Paused, Orphaned and Deleted
        /// 
        /// See [MongoDB Atlas API](https://docs.atlas.mongodb.com/reference/api/online-archive-get-all-for-cluster/) Documentation for more information.
        /// </summary>
        public static Output<GetOnlineArchivesResult> Invoke(GetOnlineArchivesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetOnlineArchivesResult>("mongodbatlas:index/getOnlineArchives:getOnlineArchives", args ?? new GetOnlineArchivesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOnlineArchivesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the cluster that contains the collection.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The unique ID for the project.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetOnlineArchivesArgs()
        {
        }
    }

    public sealed class GetOnlineArchivesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the cluster that contains the collection.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The unique ID for the project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetOnlineArchivesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOnlineArchivesResult
    {
        public readonly string ClusterName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ProjectId;
        public readonly ImmutableArray<Outputs.GetOnlineArchivesResultResult> Results;
        public readonly int TotalCount;

        [OutputConstructor]
        private GetOnlineArchivesResult(
            string clusterName,

            string id,

            string projectId,

            ImmutableArray<Outputs.GetOnlineArchivesResultResult> results,

            int totalCount)
        {
            ClusterName = clusterName;
            Id = id;
            ProjectId = projectId;
            Results = results;
            TotalCount = totalCount;
        }
    }
}
