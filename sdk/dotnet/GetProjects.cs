// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetProjects
    {
        /// <summary>
        /// `mongodbatlas.getProjects` describe all Projects. This represents projects that have been created.
        /// 
        /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProject = new Mongodbatlas.Project("testProject", new()
        ///     {
        ///         ApiKeys = new[]
        ///         {
        ///             new Mongodbatlas.Inputs.ProjectApiKeyArgs
        ///             {
        ///                 ApiKeyId = "61003b299dda8d54a9d7d10c",
        ///                 RoleNames = new[]
        ///                 {
        ///                     "GROUP_READ_ONLY",
        ///                 },
        ///             },
        ///         },
        ///         OrgId = "&lt;ORG_ID&gt;",
        ///         Teams = new[]
        ///         {
        ///             new Mongodbatlas.Inputs.ProjectTeamArgs
        ///             {
        ///                 RoleNames = new[]
        ///                 {
        ///                     "GROUP_OWNER",
        ///                 },
        ///                 TeamId = "5e0fa8c99ccf641c722fe645",
        ///             },
        ///             new Mongodbatlas.Inputs.ProjectTeamArgs
        ///             {
        ///                 RoleNames = new[]
        ///                 {
        ///                     "GROUP_READ_ONLY",
        ///                     "GROUP_DATA_ACCESS_READ_WRITE",
        ///                 },
        ///                 TeamId = "5e1dd7b4f2a30ba80a70cd4rw",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var testProjects = Mongodbatlas.GetProjects.Invoke(new()
        ///     {
        ///         ItemsPerPage = 5,
        ///         PageNum = 1,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetProjectsResult> InvokeAsync(GetProjectsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectsResult>("mongodbatlas:index/getProjects:getProjects", args ?? new GetProjectsArgs(), options.WithDefaults());

        /// <summary>
        /// `mongodbatlas.getProjects` describe all Projects. This represents projects that have been created.
        /// 
        /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testProject = new Mongodbatlas.Project("testProject", new()
        ///     {
        ///         ApiKeys = new[]
        ///         {
        ///             new Mongodbatlas.Inputs.ProjectApiKeyArgs
        ///             {
        ///                 ApiKeyId = "61003b299dda8d54a9d7d10c",
        ///                 RoleNames = new[]
        ///                 {
        ///                     "GROUP_READ_ONLY",
        ///                 },
        ///             },
        ///         },
        ///         OrgId = "&lt;ORG_ID&gt;",
        ///         Teams = new[]
        ///         {
        ///             new Mongodbatlas.Inputs.ProjectTeamArgs
        ///             {
        ///                 RoleNames = new[]
        ///                 {
        ///                     "GROUP_OWNER",
        ///                 },
        ///                 TeamId = "5e0fa8c99ccf641c722fe645",
        ///             },
        ///             new Mongodbatlas.Inputs.ProjectTeamArgs
        ///             {
        ///                 RoleNames = new[]
        ///                 {
        ///                     "GROUP_READ_ONLY",
        ///                     "GROUP_DATA_ACCESS_READ_WRITE",
        ///                 },
        ///                 TeamId = "5e1dd7b4f2a30ba80a70cd4rw",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var testProjects = Mongodbatlas.GetProjects.Invoke(new()
        ///     {
        ///         ItemsPerPage = 5,
        ///         PageNum = 1,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetProjectsResult> Invoke(GetProjectsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectsResult>("mongodbatlas:index/getProjects:getProjects", args ?? new GetProjectsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Number of items to return per page, up to a maximum of 500. Defaults to `100`.
        /// </summary>
        [Input("itemsPerPage")]
        public int? ItemsPerPage { get; set; }

        /// <summary>
        /// The page to return. Defaults to `1`.
        /// </summary>
        [Input("pageNum")]
        public int? PageNum { get; set; }

        public GetProjectsArgs()
        {
        }
        public static new GetProjectsArgs Empty => new GetProjectsArgs();
    }

    public sealed class GetProjectsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Number of items to return per page, up to a maximum of 500. Defaults to `100`.
        /// </summary>
        [Input("itemsPerPage")]
        public Input<int>? ItemsPerPage { get; set; }

        /// <summary>
        /// The page to return. Defaults to `1`.
        /// </summary>
        [Input("pageNum")]
        public Input<int>? PageNum { get; set; }

        public GetProjectsInvokeArgs()
        {
        }
        public static new GetProjectsInvokeArgs Empty => new GetProjectsInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? ItemsPerPage;
        public readonly int? PageNum;
        public readonly ImmutableArray<Outputs.GetProjectsResultResult> Results;
        public readonly int TotalCount;

        [OutputConstructor]
        private GetProjectsResult(
            string id,

            int? itemsPerPage,

            int? pageNum,

            ImmutableArray<Outputs.GetProjectsResultResult> results,

            int totalCount)
        {
            Id = id;
            ItemsPerPage = itemsPerPage;
            PageNum = pageNum;
            Results = results;
            TotalCount = totalCount;
        }
    }
}
