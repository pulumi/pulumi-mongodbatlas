// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetStreamInstance
    {
        /// <summary>
        /// ## # Data Source: mongodbatlas.StreamInstance
        /// 
        /// `mongodbatlas.StreamInstance` describes a stream instance.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Mongodbatlas.GetStreamInstance.Invoke(new()
        ///     {
        ///         ProjectId = "&lt;PROJECT_ID&gt;",
        ///         InstanceName = "&lt;INSTANCE_NAME&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetStreamInstanceResult> InvokeAsync(GetStreamInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreamInstanceResult>("mongodbatlas:index/getStreamInstance:getStreamInstance", args ?? new GetStreamInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.StreamInstance
        /// 
        /// `mongodbatlas.StreamInstance` describes a stream instance.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Mongodbatlas.GetStreamInstance.Invoke(new()
        ///     {
        ///         ProjectId = "&lt;PROJECT_ID&gt;",
        ///         InstanceName = "&lt;INSTANCE_NAME&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetStreamInstanceResult> Invoke(GetStreamInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamInstanceResult>("mongodbatlas:index/getStreamInstance:getStreamInstance", args ?? new GetStreamInstanceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.StreamInstance
        /// 
        /// `mongodbatlas.StreamInstance` describes a stream instance.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Mongodbatlas.GetStreamInstance.Invoke(new()
        ///     {
        ///         ProjectId = "&lt;PROJECT_ID&gt;",
        ///         InstanceName = "&lt;INSTANCE_NAME&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetStreamInstanceResult> Invoke(GetStreamInstanceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamInstanceResult>("mongodbatlas:index/getStreamInstance:getStreamInstance", args ?? new GetStreamInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Human-readable label that identifies the stream instance.
        /// </summary>
        [Input("instanceName", required: true)]
        public string InstanceName { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetStreamInstanceArgs()
        {
        }
        public static new GetStreamInstanceArgs Empty => new GetStreamInstanceArgs();
    }

    public sealed class GetStreamInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Human-readable label that identifies the stream instance.
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetStreamInstanceInvokeArgs()
        {
        }
        public static new GetStreamInstanceInvokeArgs Empty => new GetStreamInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamInstanceResult
    {
        /// <summary>
        /// Defines the cloud service provider and region where MongoDB Cloud performs stream processing. See data process region.
        /// </summary>
        public readonly Outputs.GetStreamInstanceDataProcessRegionResult DataProcessRegion;
        /// <summary>
        /// List that contains the hostnames assigned to the stream instance.
        /// </summary>
        public readonly ImmutableArray<string> Hostnames;
        public readonly string Id;
        public readonly string InstanceName;
        public readonly string ProjectId;
        /// <summary>
        /// Defines the configuration options for an Atlas Stream Processing Instance. See stream config
        /// </summary>
        public readonly Outputs.GetStreamInstanceStreamConfigResult StreamConfig;

        [OutputConstructor]
        private GetStreamInstanceResult(
            Outputs.GetStreamInstanceDataProcessRegionResult dataProcessRegion,

            ImmutableArray<string> hostnames,

            string id,

            string instanceName,

            string projectId,

            Outputs.GetStreamInstanceStreamConfigResult streamConfig)
        {
            DataProcessRegion = dataProcessRegion;
            Hostnames = hostnames;
            Id = id;
            InstanceName = instanceName;
            ProjectId = projectId;
            StreamConfig = streamConfig;
        }
    }
}
