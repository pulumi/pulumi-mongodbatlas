// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetStreamProcessors
    {
        /// <summary>
        /// ## # Data Source: mongodbatlas.getStreamProcessors
        /// 
        /// `mongodbatlas.getStreamProcessors` returns all stream processors in a stream instance.
        /// 
        /// ## Example Usage
        /// </summary>
        public static Task<GetStreamProcessorsResult> InvokeAsync(GetStreamProcessorsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreamProcessorsResult>("mongodbatlas:index/getStreamProcessors:getStreamProcessors", args ?? new GetStreamProcessorsArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.getStreamProcessors
        /// 
        /// `mongodbatlas.getStreamProcessors` returns all stream processors in a stream instance.
        /// 
        /// ## Example Usage
        /// </summary>
        public static Output<GetStreamProcessorsResult> Invoke(GetStreamProcessorsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamProcessorsResult>("mongodbatlas:index/getStreamProcessors:getStreamProcessors", args ?? new GetStreamProcessorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamProcessorsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Human-readable label that identifies the stream instance.
        /// </summary>
        [Input("instanceName", required: true)]
        public string InstanceName { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetStreamProcessorsArgs()
        {
        }
        public static new GetStreamProcessorsArgs Empty => new GetStreamProcessorsArgs();
    }

    public sealed class GetStreamProcessorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Human-readable label that identifies the stream instance.
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetStreamProcessorsInvokeArgs()
        {
        }
        public static new GetStreamProcessorsInvokeArgs Empty => new GetStreamProcessorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamProcessorsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Human-readable label that identifies the stream instance.
        /// </summary>
        public readonly string InstanceName;
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        public readonly string ProjectId;
        public readonly ImmutableArray<Outputs.GetStreamProcessorsResultResult> Results;

        [OutputConstructor]
        private GetStreamProcessorsResult(
            string id,

            string instanceName,

            string projectId,

            ImmutableArray<Outputs.GetStreamProcessorsResultResult> results)
        {
            Id = id;
            InstanceName = instanceName;
            ProjectId = projectId;
            Results = results;
        }
    }
}
