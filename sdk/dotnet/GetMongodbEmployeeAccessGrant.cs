// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetMongodbEmployeeAccessGrant
    {
        /// <summary>
        /// ## # Data Source: mongodbatlas.MongodbEmployeeAccessGrant
        /// 
        /// `mongodbatlas.MongodbEmployeeAccessGrant` describes a MongoDB employee access grant.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = new Mongodbatlas.MongodbEmployeeAccessGrant("example", new()
        ///     {
        ///         ProjectId = projectId,
        ///         ClusterName = clusterName,
        ///         GrantType = "CLUSTER_INFRASTRUCTURE_AND_APP_SERVICES_SYNC_DATA",
        ///         ExpirationTime = "2025-01-01T12:00:00Z",
        ///     });
        /// 
        ///     var dsExample = Mongodbatlas.GetMongodbEmployeeAccessGrant.Invoke(new()
        ///     {
        ///         ProjectId = projectId,
        ///         ClusterName = clusterName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["grantType"] = dsExample.Apply(getMongodbEmployeeAccessGrantResult =&gt; getMongodbEmployeeAccessGrantResult.GrantType),
        ///         ["expirationTime"] = dsExample.Apply(getMongodbEmployeeAccessGrantResult =&gt; getMongodbEmployeeAccessGrantResult.ExpirationTime),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetMongodbEmployeeAccessGrantResult> InvokeAsync(GetMongodbEmployeeAccessGrantArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMongodbEmployeeAccessGrantResult>("mongodbatlas:index/getMongodbEmployeeAccessGrant:getMongodbEmployeeAccessGrant", args ?? new GetMongodbEmployeeAccessGrantArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.MongodbEmployeeAccessGrant
        /// 
        /// `mongodbatlas.MongodbEmployeeAccessGrant` describes a MongoDB employee access grant.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = new Mongodbatlas.MongodbEmployeeAccessGrant("example", new()
        ///     {
        ///         ProjectId = projectId,
        ///         ClusterName = clusterName,
        ///         GrantType = "CLUSTER_INFRASTRUCTURE_AND_APP_SERVICES_SYNC_DATA",
        ///         ExpirationTime = "2025-01-01T12:00:00Z",
        ///     });
        /// 
        ///     var dsExample = Mongodbatlas.GetMongodbEmployeeAccessGrant.Invoke(new()
        ///     {
        ///         ProjectId = projectId,
        ///         ClusterName = clusterName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["grantType"] = dsExample.Apply(getMongodbEmployeeAccessGrantResult =&gt; getMongodbEmployeeAccessGrantResult.GrantType),
        ///         ["expirationTime"] = dsExample.Apply(getMongodbEmployeeAccessGrantResult =&gt; getMongodbEmployeeAccessGrantResult.ExpirationTime),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetMongodbEmployeeAccessGrantResult> Invoke(GetMongodbEmployeeAccessGrantInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMongodbEmployeeAccessGrantResult>("mongodbatlas:index/getMongodbEmployeeAccessGrant:getMongodbEmployeeAccessGrant", args ?? new GetMongodbEmployeeAccessGrantInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.MongodbEmployeeAccessGrant
        /// 
        /// `mongodbatlas.MongodbEmployeeAccessGrant` describes a MongoDB employee access grant.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = new Mongodbatlas.MongodbEmployeeAccessGrant("example", new()
        ///     {
        ///         ProjectId = projectId,
        ///         ClusterName = clusterName,
        ///         GrantType = "CLUSTER_INFRASTRUCTURE_AND_APP_SERVICES_SYNC_DATA",
        ///         ExpirationTime = "2025-01-01T12:00:00Z",
        ///     });
        /// 
        ///     var dsExample = Mongodbatlas.GetMongodbEmployeeAccessGrant.Invoke(new()
        ///     {
        ///         ProjectId = projectId,
        ///         ClusterName = clusterName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["grantType"] = dsExample.Apply(getMongodbEmployeeAccessGrantResult =&gt; getMongodbEmployeeAccessGrantResult.GrantType),
        ///         ["expirationTime"] = dsExample.Apply(getMongodbEmployeeAccessGrantResult =&gt; getMongodbEmployeeAccessGrantResult.ExpirationTime),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetMongodbEmployeeAccessGrantResult> Invoke(GetMongodbEmployeeAccessGrantInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMongodbEmployeeAccessGrantResult>("mongodbatlas:index/getMongodbEmployeeAccessGrant:getMongodbEmployeeAccessGrant", args ?? new GetMongodbEmployeeAccessGrantInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMongodbEmployeeAccessGrantArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Human-readable label that identifies this cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetMongodbEmployeeAccessGrantArgs()
        {
        }
        public static new GetMongodbEmployeeAccessGrantArgs Empty => new GetMongodbEmployeeAccessGrantArgs();
    }

    public sealed class GetMongodbEmployeeAccessGrantInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Human-readable label that identifies this cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetMongodbEmployeeAccessGrantInvokeArgs()
        {
        }
        public static new GetMongodbEmployeeAccessGrantInvokeArgs Empty => new GetMongodbEmployeeAccessGrantInvokeArgs();
    }


    [OutputType]
    public sealed class GetMongodbEmployeeAccessGrantResult
    {
        /// <summary>
        /// Human-readable label that identifies this cluster.
        /// </summary>
        public readonly string ClusterName;
        public readonly string ExpirationTime;
        public readonly string GrantType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        public readonly string ProjectId;

        [OutputConstructor]
        private GetMongodbEmployeeAccessGrantResult(
            string clusterName,

            string expirationTime,

            string grantType,

            string id,

            string projectId)
        {
            ClusterName = clusterName;
            ExpirationTime = expirationTime;
            GrantType = grantType;
            Id = id;
            ProjectId = projectId;
        }
    }
}
