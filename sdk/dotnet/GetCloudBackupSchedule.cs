// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetCloudBackupSchedule
    {
        /// <summary>
        /// ## # Data Source: mongodbatlas.CloudBackupSchedule
        /// 
        /// `mongodbatlas.CloudBackupSchedule` provides a Cloud Backup Schedule datasource. An Atlas Cloud Backup Schedule provides the current cloud backup schedule for the cluster. 
        /// 
        /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
        /// </summary>
        public static Task<GetCloudBackupScheduleResult> InvokeAsync(GetCloudBackupScheduleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudBackupScheduleResult>("mongodbatlas:index/getCloudBackupSchedule:getCloudBackupSchedule", args ?? new GetCloudBackupScheduleArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.CloudBackupSchedule
        /// 
        /// `mongodbatlas.CloudBackupSchedule` provides a Cloud Backup Schedule datasource. An Atlas Cloud Backup Schedule provides the current cloud backup schedule for the cluster. 
        /// 
        /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
        /// </summary>
        public static Output<GetCloudBackupScheduleResult> Invoke(GetCloudBackupScheduleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudBackupScheduleResult>("mongodbatlas:index/getCloudBackupSchedule:getCloudBackupSchedule", args ?? new GetCloudBackupScheduleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.CloudBackupSchedule
        /// 
        /// `mongodbatlas.CloudBackupSchedule` provides a Cloud Backup Schedule datasource. An Atlas Cloud Backup Schedule provides the current cloud backup schedule for the cluster. 
        /// 
        /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
        /// </summary>
        public static Output<GetCloudBackupScheduleResult> Invoke(GetCloudBackupScheduleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudBackupScheduleResult>("mongodbatlas:index/getCloudBackupSchedule:getCloudBackupSchedule", args ?? new GetCloudBackupScheduleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudBackupScheduleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Atlas cluster that contains the snapshots backup policy you want to retrieve.
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        /// <summary>
        /// The unique identifier of the project for the Atlas cluster.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        /// <summary>
        /// Set this field to `true` to allow the data source to use the latest schema that populates `copy_settings.#.zone_id` instead of the deprecated `copy_settings.#.replication_spec_id`. These fields also enable you to reference cluster zones using independent shard scaling, which no longer supports `replication_spec.*.id`. To learn more, see the 1.18.0 upgrade guide.
        /// </summary>
        [Input("useZoneIdForCopySettings")]
        public bool? UseZoneIdForCopySettings { get; set; }

        public GetCloudBackupScheduleArgs()
        {
        }
        public static new GetCloudBackupScheduleArgs Empty => new GetCloudBackupScheduleArgs();
    }

    public sealed class GetCloudBackupScheduleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Atlas cluster that contains the snapshots backup policy you want to retrieve.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The unique identifier of the project for the Atlas cluster.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// Set this field to `true` to allow the data source to use the latest schema that populates `copy_settings.#.zone_id` instead of the deprecated `copy_settings.#.replication_spec_id`. These fields also enable you to reference cluster zones using independent shard scaling, which no longer supports `replication_spec.*.id`. To learn more, see the 1.18.0 upgrade guide.
        /// </summary>
        [Input("useZoneIdForCopySettings")]
        public Input<bool>? UseZoneIdForCopySettings { get; set; }

        public GetCloudBackupScheduleInvokeArgs()
        {
        }
        public static new GetCloudBackupScheduleInvokeArgs Empty => new GetCloudBackupScheduleInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudBackupScheduleResult
    {
        /// <summary>
        /// Flag that indicates whether MongoDB Cloud automatically exports Cloud Backup Snapshots to the Export Bucket. Value can be one of the following:
        /// * true - Enables automatic export of cloud backup snapshots to the Export Bucket.
        /// * false - Disables automatic export of cloud backup snapshots to the Export Bucket. (default)
        /// </summary>
        public readonly bool AutoExportEnabled;
        /// <summary>
        /// Unique identifier of the Atlas cluster.
        /// </summary>
        public readonly string ClusterId;
        public readonly string ClusterName;
        /// <summary>
        /// List that contains a document for each copy setting item in the desired backup policy. See below
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudBackupScheduleCopySettingResult> CopySettings;
        /// <summary>
        /// Policy for automatically exporting Cloud Backup Snapshots. See below
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudBackupScheduleExportResult> Exports;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Unique identifier of the backup policy.
        /// </summary>
        public readonly string IdPolicy;
        /// <summary>
        /// UTC ISO 8601 formatted point in time when Atlas will take the next snapshot.
        /// </summary>
        public readonly string NextSnapshot;
        /// <summary>
        /// (Optional) Daily policy item. See below
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudBackupSchedulePolicyItemDailyResult> PolicyItemDailies;
        /// <summary>
        /// (Optional) Hourly policy item. See below
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudBackupSchedulePolicyItemHourlyResult> PolicyItemHourlies;
        /// <summary>
        /// (Optional) Monthly policy item. See below
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudBackupSchedulePolicyItemMonthlyResult> PolicyItemMonthlies;
        /// <summary>
        /// (Optional) Weekly policy item. See below
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudBackupSchedulePolicyItemWeeklyResult> PolicyItemWeeklies;
        /// <summary>
        /// (Optional) Yearly policy item. See below
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudBackupSchedulePolicyItemYearlyResult> PolicyItemYearlies;
        public readonly string ProjectId;
        /// <summary>
        /// UTC Hour of day between 0 and 23 representing which hour of the day that Atlas takes a snapshot.
        /// </summary>
        public readonly int ReferenceHourOfDay;
        /// <summary>
        /// UTC Minute of day between 0 and 59 representing which minute of the `reference_hour_of_day` that Atlas takes the snapshot.
        /// </summary>
        public readonly int ReferenceMinuteOfHour;
        /// <summary>
        /// Specifies a restore window in days for cloud backup to maintain.
        /// </summary>
        public readonly int RestoreWindowDays;
        /// <summary>
        /// Specify true to use organization and project names instead of organization and project UUIDs in the path for the metadata files that Atlas uploads to your bucket after it finishes exporting the snapshots. To learn more about the metadata files that Atlas uploads, see [Export Cloud Backup Snapshot](https://www.mongodb.com/docs/atlas/backup/cloud-backup/export/#std-label-cloud-provider-snapshot-export).
        /// </summary>
        public readonly bool UseOrgAndGroupNamesInExportPrefix;
        public readonly bool? UseZoneIdForCopySettings;

        [OutputConstructor]
        private GetCloudBackupScheduleResult(
            bool autoExportEnabled,

            string clusterId,

            string clusterName,

            ImmutableArray<Outputs.GetCloudBackupScheduleCopySettingResult> copySettings,

            ImmutableArray<Outputs.GetCloudBackupScheduleExportResult> exports,

            string id,

            string idPolicy,

            string nextSnapshot,

            ImmutableArray<Outputs.GetCloudBackupSchedulePolicyItemDailyResult> policyItemDailies,

            ImmutableArray<Outputs.GetCloudBackupSchedulePolicyItemHourlyResult> policyItemHourlies,

            ImmutableArray<Outputs.GetCloudBackupSchedulePolicyItemMonthlyResult> policyItemMonthlies,

            ImmutableArray<Outputs.GetCloudBackupSchedulePolicyItemWeeklyResult> policyItemWeeklies,

            ImmutableArray<Outputs.GetCloudBackupSchedulePolicyItemYearlyResult> policyItemYearlies,

            string projectId,

            int referenceHourOfDay,

            int referenceMinuteOfHour,

            int restoreWindowDays,

            bool useOrgAndGroupNamesInExportPrefix,

            bool? useZoneIdForCopySettings)
        {
            AutoExportEnabled = autoExportEnabled;
            ClusterId = clusterId;
            ClusterName = clusterName;
            CopySettings = copySettings;
            Exports = exports;
            Id = id;
            IdPolicy = idPolicy;
            NextSnapshot = nextSnapshot;
            PolicyItemDailies = policyItemDailies;
            PolicyItemHourlies = policyItemHourlies;
            PolicyItemMonthlies = policyItemMonthlies;
            PolicyItemWeeklies = policyItemWeeklies;
            PolicyItemYearlies = policyItemYearlies;
            ProjectId = projectId;
            ReferenceHourOfDay = referenceHourOfDay;
            ReferenceMinuteOfHour = referenceMinuteOfHour;
            RestoreWindowDays = restoreWindowDays;
            UseOrgAndGroupNamesInExportPrefix = useOrgAndGroupNamesInExportPrefix;
            UseZoneIdForCopySettings = useZoneIdForCopySettings;
        }
    }
}
