// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetPrivateEndpointRegionalMode
    {
        /// <summary>
        /// ## # Data Source: private_endpoint_regional_mode
        /// 
        /// `private_endpoint_regional_mode` describes a Private Endpoint Regional Mode. This represents a Private Endpoint Regional Mode Connection that wants to retrieve settings of an Atlas project.
        /// 
        /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.
        /// </summary>
        public static Task<GetPrivateEndpointRegionalModeResult> InvokeAsync(GetPrivateEndpointRegionalModeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrivateEndpointRegionalModeResult>("mongodbatlas:index/getPrivateEndpointRegionalMode:getPrivateEndpointRegionalMode", args ?? new GetPrivateEndpointRegionalModeArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: private_endpoint_regional_mode
        /// 
        /// `private_endpoint_regional_mode` describes a Private Endpoint Regional Mode. This represents a Private Endpoint Regional Mode Connection that wants to retrieve settings of an Atlas project.
        /// 
        /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.
        /// </summary>
        public static Output<GetPrivateEndpointRegionalModeResult> Invoke(GetPrivateEndpointRegionalModeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateEndpointRegionalModeResult>("mongodbatlas:index/getPrivateEndpointRegionalMode:getPrivateEndpointRegionalMode", args ?? new GetPrivateEndpointRegionalModeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrivateEndpointRegionalModeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Flag that indicates whether the regionalized private endpoitn setting is enabled for the project.
        /// </summary>
        [Input("enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Unique identifier for the project.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetPrivateEndpointRegionalModeArgs()
        {
        }
        public static new GetPrivateEndpointRegionalModeArgs Empty => new GetPrivateEndpointRegionalModeArgs();
    }

    public sealed class GetPrivateEndpointRegionalModeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Flag that indicates whether the regionalized private endpoitn setting is enabled for the project.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Unique identifier for the project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetPrivateEndpointRegionalModeInvokeArgs()
        {
        }
        public static new GetPrivateEndpointRegionalModeInvokeArgs Empty => new GetPrivateEndpointRegionalModeInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrivateEndpointRegionalModeResult
    {
        public readonly bool? Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ProjectId;

        [OutputConstructor]
        private GetPrivateEndpointRegionalModeResult(
            bool? enabled,

            string id,

            string projectId)
        {
            Enabled = enabled;
            Id = id;
            ProjectId = projectId;
        }
    }
}
