// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetControlPlaneIpAddresses
    {
        /// <summary>
        /// ## # Data Source: mongodbatlas.getControlPlaneIpAddresses
        /// 
        /// `mongodbatlas.getControlPlaneIpAddresses` returns all control plane IP addresses.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Mongodbatlas.GetControlPlaneIpAddresses.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["outbound-aws-ip-addresses"] = test.Apply(getControlPlaneIpAddressesResult =&gt; getControlPlaneIpAddressesResult.Outbound?.Aws),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetControlPlaneIpAddressesResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetControlPlaneIpAddressesResult>("mongodbatlas:index/getControlPlaneIpAddresses:getControlPlaneIpAddresses", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.getControlPlaneIpAddresses
        /// 
        /// `mongodbatlas.getControlPlaneIpAddresses` returns all control plane IP addresses.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Mongodbatlas.GetControlPlaneIpAddresses.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["outbound-aws-ip-addresses"] = test.Apply(getControlPlaneIpAddressesResult =&gt; getControlPlaneIpAddressesResult.Outbound?.Aws),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetControlPlaneIpAddressesResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetControlPlaneIpAddressesResult>("mongodbatlas:index/getControlPlaneIpAddresses:getControlPlaneIpAddresses", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.getControlPlaneIpAddresses
        /// 
        /// `mongodbatlas.getControlPlaneIpAddresses` returns all control plane IP addresses.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Mongodbatlas.GetControlPlaneIpAddresses.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["outbound-aws-ip-addresses"] = test.Apply(getControlPlaneIpAddressesResult =&gt; getControlPlaneIpAddressesResult.Outbound?.Aws),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetControlPlaneIpAddressesResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetControlPlaneIpAddressesResult>("mongodbatlas:index/getControlPlaneIpAddresses:getControlPlaneIpAddresses", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetControlPlaneIpAddressesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of inbound IP addresses to the Atlas control plane, categorized by cloud provider. If your application allows outbound HTTP requests only to specific IP addresses, you must allow access to the following IP addresses so that your API requests can reach the Atlas control plane.
        /// </summary>
        public readonly Outputs.GetControlPlaneIpAddressesInboundResult Inbound;
        /// <summary>
        /// List of outbound IP addresses from the Atlas control plane, categorized by cloud provider. If your network allows inbound HTTP requests only from specific IP addresses, you must allow access from the following IP addresses so that Atlas can communicate with your webhooks and KMS.
        /// </summary>
        public readonly Outputs.GetControlPlaneIpAddressesOutboundResult Outbound;

        [OutputConstructor]
        private GetControlPlaneIpAddressesResult(
            string id,

            Outputs.GetControlPlaneIpAddressesInboundResult inbound,

            Outputs.GetControlPlaneIpAddressesOutboundResult outbound)
        {
            Id = id;
            Inbound = inbound;
            Outbound = outbound;
        }
    }
}
