// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    /// <summary>
    /// ## # Resource: mongodbatlas.SearchDeployment
    /// 
    /// `mongodbatlas.SearchDeployment` provides a Search Deployment resource. The resource lets you create, edit and delete dedicated search nodes in a cluster.
    /// 
    /// &gt; **NOTE:** For details on supported cloud providers and existing limitations you can visit the [Search Node Documentation](https://www.mongodb.com/docs/atlas/cluster-config/multi-cloud-distribution/#search-nodes-for-workload-isolation).
    /// 
    /// &gt; **NOTE:** Only a single search deployment resource can be defined for each cluster.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Search node resource can be imported using the project ID and cluster name, in the format `PROJECT_ID-CLUSTER_NAME`, e.g.
    /// 
    /// After an import, a non-empty plan is expected if the configuration defines the `skip_wait_on_update` attribute. However, the update will not have any effect on the search deployment since `skip_wait_on_update` only relates to the update operations wait time.
    /// 
    /// For more information see: [MongoDB Atlas API - Search Node](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Atlas-Search/operation/createAtlasSearchDeployment) Documentation.
    /// </summary>
    [MongodbatlasResourceType("mongodbatlas:index/searchDeployment:SearchDeployment")]
    public partial class SearchDeployment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Label that identifies the cluster to return the search nodes for.
        /// </summary>
        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        /// <summary>
        /// Flag that indicates whether to delete the search deployment if the creation times out, default is false.
        /// </summary>
        [Output("deleteOnCreateTimeout")]
        public Output<bool?> DeleteOnCreateTimeout { get; private set; } = null!;

        /// <summary>
        /// Cloud service provider that manages your customer keys to provide an additional layer of Encryption At Rest for the cluster.
        /// </summary>
        [Output("encryptionAtRestProvider")]
        public Output<string> EncryptionAtRestProvider { get; private set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        [Output("skipWaitOnUpdate")]
        public Output<bool?> SkipWaitOnUpdate { get; private set; } = null!;

        /// <summary>
        /// List of settings that configure the search nodes for your cluster. This list is currently limited to defining a single element.
        /// </summary>
        [Output("specs")]
        public Output<ImmutableArray<Outputs.SearchDeploymentSpec>> Specs { get; private set; } = null!;

        /// <summary>
        /// Human-readable label that indicates the current operating condition of this search deployment.
        /// </summary>
        [Output("stateName")]
        public Output<string> StateName { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.SearchDeploymentTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a SearchDeployment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SearchDeployment(string name, SearchDeploymentArgs args, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/searchDeployment:SearchDeployment", name, args ?? new SearchDeploymentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SearchDeployment(string name, Input<string> id, SearchDeploymentState? state = null, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/searchDeployment:SearchDeployment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SearchDeployment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SearchDeployment Get(string name, Input<string> id, SearchDeploymentState? state = null, CustomResourceOptions? options = null)
        {
            return new SearchDeployment(name, id, state, options);
        }
    }

    public sealed class SearchDeploymentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Label that identifies the cluster to return the search nodes for.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// Flag that indicates whether to delete the search deployment if the creation times out, default is false.
        /// </summary>
        [Input("deleteOnCreateTimeout")]
        public Input<bool>? DeleteOnCreateTimeout { get; set; }

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("skipWaitOnUpdate")]
        public Input<bool>? SkipWaitOnUpdate { get; set; }

        [Input("specs", required: true)]
        private InputList<Inputs.SearchDeploymentSpecArgs>? _specs;

        /// <summary>
        /// List of settings that configure the search nodes for your cluster. This list is currently limited to defining a single element.
        /// </summary>
        public InputList<Inputs.SearchDeploymentSpecArgs> Specs
        {
            get => _specs ?? (_specs = new InputList<Inputs.SearchDeploymentSpecArgs>());
            set => _specs = value;
        }

        [Input("timeouts")]
        public Input<Inputs.SearchDeploymentTimeoutsArgs>? Timeouts { get; set; }

        public SearchDeploymentArgs()
        {
        }
        public static new SearchDeploymentArgs Empty => new SearchDeploymentArgs();
    }

    public sealed class SearchDeploymentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Label that identifies the cluster to return the search nodes for.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Flag that indicates whether to delete the search deployment if the creation times out, default is false.
        /// </summary>
        [Input("deleteOnCreateTimeout")]
        public Input<bool>? DeleteOnCreateTimeout { get; set; }

        /// <summary>
        /// Cloud service provider that manages your customer keys to provide an additional layer of Encryption At Rest for the cluster.
        /// </summary>
        [Input("encryptionAtRestProvider")]
        public Input<string>? EncryptionAtRestProvider { get; set; }

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("skipWaitOnUpdate")]
        public Input<bool>? SkipWaitOnUpdate { get; set; }

        [Input("specs")]
        private InputList<Inputs.SearchDeploymentSpecGetArgs>? _specs;

        /// <summary>
        /// List of settings that configure the search nodes for your cluster. This list is currently limited to defining a single element.
        /// </summary>
        public InputList<Inputs.SearchDeploymentSpecGetArgs> Specs
        {
            get => _specs ?? (_specs = new InputList<Inputs.SearchDeploymentSpecGetArgs>());
            set => _specs = value;
        }

        /// <summary>
        /// Human-readable label that indicates the current operating condition of this search deployment.
        /// </summary>
        [Input("stateName")]
        public Input<string>? StateName { get; set; }

        [Input("timeouts")]
        public Input<Inputs.SearchDeploymentTimeoutsGetArgs>? Timeouts { get; set; }

        public SearchDeploymentState()
        {
        }
        public static new SearchDeploymentState Empty => new SearchDeploymentState();
    }
}
