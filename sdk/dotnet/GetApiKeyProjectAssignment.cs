// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetApiKeyProjectAssignment
    {
        /// <summary>
        /// ## # Data Source: mongodbatlas.ApiKeyProjectAssignment
        /// 
        /// `mongodbatlas.ApiKeyProjectAssignment` describes an API Key Project Assignment.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = new Mongodbatlas.ApiKey("this", new()
        ///     {
        ///         OrgId = orgId,
        ///         Description = "Test API Key",
        ///         RoleNames = new[]
        ///         {
        ///             "ORG_READ_ONLY",
        ///         },
        ///     });
        /// 
        ///     var firstProject = new Mongodbatlas.Project("first_project", new()
        ///     {
        ///         Name = "First Project",
        ///         OrgId = orgId,
        ///     });
        /// 
        ///     var secondProject = new Mongodbatlas.Project("second_project", new()
        ///     {
        ///         Name = "Second Project",
        ///         OrgId = orgId,
        ///     });
        /// 
        ///     var firstAssignment = new Mongodbatlas.ApiKeyProjectAssignment("first_assignment", new()
        ///     {
        ///         ProjectId = firstProject.Id,
        ///         ApiKeyId = @this.ApiKeyId,
        ///         Roles = new[]
        ///         {
        ///             "GROUP_OWNER",
        ///         },
        ///     });
        /// 
        ///     var secondAssignment = new Mongodbatlas.ApiKeyProjectAssignment("second_assignment", new()
        ///     {
        ///         ProjectId = secondProject.Id,
        ///         ApiKeyId = @this.ApiKeyId,
        ///         Roles = new[]
        ///         {
        ///             "GROUP_OWNER",
        ///         },
        ///     });
        /// 
        ///     // Add IP Access List Entry to Programmatic API Key 
        ///     var thisAccessListApiKey = new Mongodbatlas.AccessListApiKey("this", new()
        ///     {
        ///         OrgId = orgId,
        ///         CidrBlock = "0.0.0.0/1",
        ///         ApiKeyId = @this.ApiKeyId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApiKeyProjectAssignmentResult> InvokeAsync(GetApiKeyProjectAssignmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiKeyProjectAssignmentResult>("mongodbatlas:index/getApiKeyProjectAssignment:getApiKeyProjectAssignment", args ?? new GetApiKeyProjectAssignmentArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.ApiKeyProjectAssignment
        /// 
        /// `mongodbatlas.ApiKeyProjectAssignment` describes an API Key Project Assignment.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = new Mongodbatlas.ApiKey("this", new()
        ///     {
        ///         OrgId = orgId,
        ///         Description = "Test API Key",
        ///         RoleNames = new[]
        ///         {
        ///             "ORG_READ_ONLY",
        ///         },
        ///     });
        /// 
        ///     var firstProject = new Mongodbatlas.Project("first_project", new()
        ///     {
        ///         Name = "First Project",
        ///         OrgId = orgId,
        ///     });
        /// 
        ///     var secondProject = new Mongodbatlas.Project("second_project", new()
        ///     {
        ///         Name = "Second Project",
        ///         OrgId = orgId,
        ///     });
        /// 
        ///     var firstAssignment = new Mongodbatlas.ApiKeyProjectAssignment("first_assignment", new()
        ///     {
        ///         ProjectId = firstProject.Id,
        ///         ApiKeyId = @this.ApiKeyId,
        ///         Roles = new[]
        ///         {
        ///             "GROUP_OWNER",
        ///         },
        ///     });
        /// 
        ///     var secondAssignment = new Mongodbatlas.ApiKeyProjectAssignment("second_assignment", new()
        ///     {
        ///         ProjectId = secondProject.Id,
        ///         ApiKeyId = @this.ApiKeyId,
        ///         Roles = new[]
        ///         {
        ///             "GROUP_OWNER",
        ///         },
        ///     });
        /// 
        ///     // Add IP Access List Entry to Programmatic API Key 
        ///     var thisAccessListApiKey = new Mongodbatlas.AccessListApiKey("this", new()
        ///     {
        ///         OrgId = orgId,
        ///         CidrBlock = "0.0.0.0/1",
        ///         ApiKeyId = @this.ApiKeyId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiKeyProjectAssignmentResult> Invoke(GetApiKeyProjectAssignmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiKeyProjectAssignmentResult>("mongodbatlas:index/getApiKeyProjectAssignment:getApiKeyProjectAssignment", args ?? new GetApiKeyProjectAssignmentInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.ApiKeyProjectAssignment
        /// 
        /// `mongodbatlas.ApiKeyProjectAssignment` describes an API Key Project Assignment.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = new Mongodbatlas.ApiKey("this", new()
        ///     {
        ///         OrgId = orgId,
        ///         Description = "Test API Key",
        ///         RoleNames = new[]
        ///         {
        ///             "ORG_READ_ONLY",
        ///         },
        ///     });
        /// 
        ///     var firstProject = new Mongodbatlas.Project("first_project", new()
        ///     {
        ///         Name = "First Project",
        ///         OrgId = orgId,
        ///     });
        /// 
        ///     var secondProject = new Mongodbatlas.Project("second_project", new()
        ///     {
        ///         Name = "Second Project",
        ///         OrgId = orgId,
        ///     });
        /// 
        ///     var firstAssignment = new Mongodbatlas.ApiKeyProjectAssignment("first_assignment", new()
        ///     {
        ///         ProjectId = firstProject.Id,
        ///         ApiKeyId = @this.ApiKeyId,
        ///         Roles = new[]
        ///         {
        ///             "GROUP_OWNER",
        ///         },
        ///     });
        /// 
        ///     var secondAssignment = new Mongodbatlas.ApiKeyProjectAssignment("second_assignment", new()
        ///     {
        ///         ProjectId = secondProject.Id,
        ///         ApiKeyId = @this.ApiKeyId,
        ///         Roles = new[]
        ///         {
        ///             "GROUP_OWNER",
        ///         },
        ///     });
        /// 
        ///     // Add IP Access List Entry to Programmatic API Key 
        ///     var thisAccessListApiKey = new Mongodbatlas.AccessListApiKey("this", new()
        ///     {
        ///         OrgId = orgId,
        ///         CidrBlock = "0.0.0.0/1",
        ///         ApiKeyId = @this.ApiKeyId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiKeyProjectAssignmentResult> Invoke(GetApiKeyProjectAssignmentInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiKeyProjectAssignmentResult>("mongodbatlas:index/getApiKeyProjectAssignment:getApiKeyProjectAssignment", args ?? new GetApiKeyProjectAssignmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiKeyProjectAssignmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies this organization API key that you want to assign to one project.
        /// </summary>
        [Input("apiKeyId", required: true)]
        public string ApiKeyId { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetApiKeyProjectAssignmentArgs()
        {
        }
        public static new GetApiKeyProjectAssignmentArgs Empty => new GetApiKeyProjectAssignmentArgs();
    }

    public sealed class GetApiKeyProjectAssignmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies this organization API key that you want to assign to one project.
        /// </summary>
        [Input("apiKeyId", required: true)]
        public Input<string> ApiKeyId { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetApiKeyProjectAssignmentInvokeArgs()
        {
        }
        public static new GetApiKeyProjectAssignmentInvokeArgs Empty => new GetApiKeyProjectAssignmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiKeyProjectAssignmentResult
    {
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies this organization API key that you want to assign to one project.
        /// </summary>
        public readonly string ApiKeyId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        public readonly string ProjectId;
        public readonly ImmutableArray<string> Roles;

        [OutputConstructor]
        private GetApiKeyProjectAssignmentResult(
            string apiKeyId,

            string id,

            string projectId,

            ImmutableArray<string> roles)
        {
            ApiKeyId = apiKeyId;
            Id = id;
            ProjectId = projectId;
            Roles = roles;
        }
    }
}
