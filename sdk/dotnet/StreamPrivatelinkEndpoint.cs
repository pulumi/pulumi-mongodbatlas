// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    /// <summary>
    /// ## # Resource: mongodbatlas.StreamPrivatelinkEndpoint
    /// 
    /// `mongodbatlas.StreamPrivatelinkEndpoint` describes a Privatelink Endpoint for Streams.
    /// 
    /// ## Example Usage
    /// 
    /// ### S
    /// </summary>
    [MongodbatlasResourceType("mongodbatlas:index/streamPrivatelinkEndpoint:StreamPrivatelinkEndpoint")]
    public partial class StreamPrivatelinkEndpoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN). Required for AWS Provider and MSK vendor.
        /// </summary>
        [Output("arn")]
        public Output<string?> Arn { get; private set; } = null!;

        /// <summary>
        /// The domain hostname. Required for the following provider and vendor combinations:\n\n- AWS provider with CONFLUENT vendor.\n\n- AZURE provider with EVENTHUB or CONFLUENT vendor.
        /// </summary>
        [Output("dnsDomain")]
        public Output<string?> DnsDomain { get; private set; } = null!;

        /// <summary>
        /// Sub-Domain name of Confluent cluster. These are typically your availability zones. Required for AWS Provider and CONFLUENT vendor. If your AWS CONFLUENT cluster doesn't use subdomains, you must set this to the empty array [].
        /// </summary>
        [Output("dnsSubDomains")]
        public Output<ImmutableArray<string>> DnsSubDomains { get; private set; } = null!;

        /// <summary>
        /// Error message if the connection is in a failed state.
        /// </summary>
        [Output("errorMessage")]
        public Output<string> ErrorMessage { get; private set; } = null!;

        /// <summary>
        /// Interface endpoint ID that is created from the specified service endpoint ID.
        /// </summary>
        [Output("interfaceEndpointId")]
        public Output<string> InterfaceEndpointId { get; private set; } = null!;

        /// <summary>
        /// Name of interface endpoint that is created from the specified service endpoint ID.
        /// </summary>
        [Output("interfaceEndpointName")]
        public Output<string> InterfaceEndpointName { get; private set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.\n\n**NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group or project id remains the same. The resource and corresponding endpoints use the term groups.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Account ID from the cloud provider.
        /// </summary>
        [Output("providerAccountId")]
        public Output<string> ProviderAccountId { get; private set; } = null!;

        /// <summary>
        /// Provider where the Kafka cluster is deployed. Valid values are AWS and AZURE.
        /// </summary>
        [Output("providerName")]
        public Output<string> ProviderName { get; private set; } = null!;

        /// <summary>
        /// The region of the Provider’s cluster. See [AZURE](https://www.mongodb.com/docs/atlas/reference/microsoft-azure/#stream-processing-instances) and [AWS](https://www.mongodb.com/docs/atlas/reference/amazon-aws/#stream-processing-instances) supported regions. When the vendor is `CONFLUENT`, this is the domain name of Confluent cluster. When the vendor is `MSK`, this is computed by the API from the provided `arn`.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// For AZURE EVENTHUB, this is the [namespace endpoint ID](https://learn.microsoft.com/en-us/rest/api/eventhub/namespaces/get). For AWS CONFLUENT cluster, this is the [VPC Endpoint service name](https://docs.confluent.io/cloud/current/networking/private-links/aws-privatelink.html).
        /// </summary>
        [Output("serviceEndpointId")]
        public Output<string?> ServiceEndpointId { get; private set; } = null!;

        /// <summary>
        /// Status of the connection.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Vendor that manages the Kafka cluster. The following are the vendor values per provider:\n\n- MSK and CONFLUENT for the AWS provider.\n\n- EVENTHUB and CONFLUENT for the AZURE provider.
        /// </summary>
        [Output("vendor")]
        public Output<string> Vendor { get; private set; } = null!;


        /// <summary>
        /// Create a StreamPrivatelinkEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StreamPrivatelinkEndpoint(string name, StreamPrivatelinkEndpointArgs args, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/streamPrivatelinkEndpoint:StreamPrivatelinkEndpoint", name, args ?? new StreamPrivatelinkEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StreamPrivatelinkEndpoint(string name, Input<string> id, StreamPrivatelinkEndpointState? state = null, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/streamPrivatelinkEndpoint:StreamPrivatelinkEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StreamPrivatelinkEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StreamPrivatelinkEndpoint Get(string name, Input<string> id, StreamPrivatelinkEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new StreamPrivatelinkEndpoint(name, id, state, options);
        }
    }

    public sealed class StreamPrivatelinkEndpointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN). Required for AWS Provider and MSK vendor.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The domain hostname. Required for the following provider and vendor combinations:\n\n- AWS provider with CONFLUENT vendor.\n\n- AZURE provider with EVENTHUB or CONFLUENT vendor.
        /// </summary>
        [Input("dnsDomain")]
        public Input<string>? DnsDomain { get; set; }

        [Input("dnsSubDomains")]
        private InputList<string>? _dnsSubDomains;

        /// <summary>
        /// Sub-Domain name of Confluent cluster. These are typically your availability zones. Required for AWS Provider and CONFLUENT vendor. If your AWS CONFLUENT cluster doesn't use subdomains, you must set this to the empty array [].
        /// </summary>
        public InputList<string> DnsSubDomains
        {
            get => _dnsSubDomains ?? (_dnsSubDomains = new InputList<string>());
            set => _dnsSubDomains = value;
        }

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.\n\n**NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group or project id remains the same. The resource and corresponding endpoints use the term groups.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// Provider where the Kafka cluster is deployed. Valid values are AWS and AZURE.
        /// </summary>
        [Input("providerName", required: true)]
        public Input<string> ProviderName { get; set; } = null!;

        /// <summary>
        /// The region of the Provider’s cluster. See [AZURE](https://www.mongodb.com/docs/atlas/reference/microsoft-azure/#stream-processing-instances) and [AWS](https://www.mongodb.com/docs/atlas/reference/amazon-aws/#stream-processing-instances) supported regions. When the vendor is `CONFLUENT`, this is the domain name of Confluent cluster. When the vendor is `MSK`, this is computed by the API from the provided `arn`.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// For AZURE EVENTHUB, this is the [namespace endpoint ID](https://learn.microsoft.com/en-us/rest/api/eventhub/namespaces/get). For AWS CONFLUENT cluster, this is the [VPC Endpoint service name](https://docs.confluent.io/cloud/current/networking/private-links/aws-privatelink.html).
        /// </summary>
        [Input("serviceEndpointId")]
        public Input<string>? ServiceEndpointId { get; set; }

        /// <summary>
        /// Vendor that manages the Kafka cluster. The following are the vendor values per provider:\n\n- MSK and CONFLUENT for the AWS provider.\n\n- EVENTHUB and CONFLUENT for the AZURE provider.
        /// </summary>
        [Input("vendor", required: true)]
        public Input<string> Vendor { get; set; } = null!;

        public StreamPrivatelinkEndpointArgs()
        {
        }
        public static new StreamPrivatelinkEndpointArgs Empty => new StreamPrivatelinkEndpointArgs();
    }

    public sealed class StreamPrivatelinkEndpointState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN). Required for AWS Provider and MSK vendor.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The domain hostname. Required for the following provider and vendor combinations:\n\n- AWS provider with CONFLUENT vendor.\n\n- AZURE provider with EVENTHUB or CONFLUENT vendor.
        /// </summary>
        [Input("dnsDomain")]
        public Input<string>? DnsDomain { get; set; }

        [Input("dnsSubDomains")]
        private InputList<string>? _dnsSubDomains;

        /// <summary>
        /// Sub-Domain name of Confluent cluster. These are typically your availability zones. Required for AWS Provider and CONFLUENT vendor. If your AWS CONFLUENT cluster doesn't use subdomains, you must set this to the empty array [].
        /// </summary>
        public InputList<string> DnsSubDomains
        {
            get => _dnsSubDomains ?? (_dnsSubDomains = new InputList<string>());
            set => _dnsSubDomains = value;
        }

        /// <summary>
        /// Error message if the connection is in a failed state.
        /// </summary>
        [Input("errorMessage")]
        public Input<string>? ErrorMessage { get; set; }

        /// <summary>
        /// Interface endpoint ID that is created from the specified service endpoint ID.
        /// </summary>
        [Input("interfaceEndpointId")]
        public Input<string>? InterfaceEndpointId { get; set; }

        /// <summary>
        /// Name of interface endpoint that is created from the specified service endpoint ID.
        /// </summary>
        [Input("interfaceEndpointName")]
        public Input<string>? InterfaceEndpointName { get; set; }

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.\n\n**NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group or project id remains the same. The resource and corresponding endpoints use the term groups.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Account ID from the cloud provider.
        /// </summary>
        [Input("providerAccountId")]
        public Input<string>? ProviderAccountId { get; set; }

        /// <summary>
        /// Provider where the Kafka cluster is deployed. Valid values are AWS and AZURE.
        /// </summary>
        [Input("providerName")]
        public Input<string>? ProviderName { get; set; }

        /// <summary>
        /// The region of the Provider’s cluster. See [AZURE](https://www.mongodb.com/docs/atlas/reference/microsoft-azure/#stream-processing-instances) and [AWS](https://www.mongodb.com/docs/atlas/reference/amazon-aws/#stream-processing-instances) supported regions. When the vendor is `CONFLUENT`, this is the domain name of Confluent cluster. When the vendor is `MSK`, this is computed by the API from the provided `arn`.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// For AZURE EVENTHUB, this is the [namespace endpoint ID](https://learn.microsoft.com/en-us/rest/api/eventhub/namespaces/get). For AWS CONFLUENT cluster, this is the [VPC Endpoint service name](https://docs.confluent.io/cloud/current/networking/private-links/aws-privatelink.html).
        /// </summary>
        [Input("serviceEndpointId")]
        public Input<string>? ServiceEndpointId { get; set; }

        /// <summary>
        /// Status of the connection.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Vendor that manages the Kafka cluster. The following are the vendor values per provider:\n\n- MSK and CONFLUENT for the AWS provider.\n\n- EVENTHUB and CONFLUENT for the AZURE provider.
        /// </summary>
        [Input("vendor")]
        public Input<string>? Vendor { get; set; }

        public StreamPrivatelinkEndpointState()
        {
        }
        public static new StreamPrivatelinkEndpointState Empty => new StreamPrivatelinkEndpointState();
    }
}
