// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetNetworkContainers
    {
        /// <summary>
        /// `mongodbatlas.getNetworkContainers` describes all Network Peering Containers. The data source requires your Project ID.
        /// 
        /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find **group_id** in the official documentation.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetNetworkContainersResult> InvokeAsync(GetNetworkContainersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkContainersResult>("mongodbatlas:index/getNetworkContainers:getNetworkContainers", args ?? new GetNetworkContainersArgs(), options.WithDefaults());

        /// <summary>
        /// `mongodbatlas.getNetworkContainers` describes all Network Peering Containers. The data source requires your Project ID.
        /// 
        /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find **group_id** in the official documentation.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetNetworkContainersResult> Invoke(GetNetworkContainersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkContainersResult>("mongodbatlas:index/getNetworkContainers:getNetworkContainers", args ?? new GetNetworkContainersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkContainersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique ID for the project to create the database user.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        /// <summary>
        /// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
        /// </summary>
        [Input("providerName", required: true)]
        public string ProviderName { get; set; } = null!;

        public GetNetworkContainersArgs()
        {
        }
        public static new GetNetworkContainersArgs Empty => new GetNetworkContainersArgs();
    }

    public sealed class GetNetworkContainersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique ID for the project to create the database user.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
        /// </summary>
        [Input("providerName", required: true)]
        public Input<string> ProviderName { get; set; } = null!;

        public GetNetworkContainersInvokeArgs()
        {
        }
        public static new GetNetworkContainersInvokeArgs Empty => new GetNetworkContainersInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkContainersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ProjectId;
        /// <summary>
        /// Cloud provider for this Network Peering connection. If omitted, Atlas sets this parameter to AWS.
        /// </summary>
        public readonly string ProviderName;
        /// <summary>
        /// A list where each represents a Network Peering Container.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkContainersResultResult> Results;

        [OutputConstructor]
        private GetNetworkContainersResult(
            string id,

            string projectId,

            string providerName,

            ImmutableArray<Outputs.GetNetworkContainersResultResult> results)
        {
            Id = id;
            ProjectId = projectId;
            ProviderName = providerName;
            Results = results;
        }
    }
}
