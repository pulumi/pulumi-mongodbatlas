// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    /// <summary>
    /// `mongodbatlas.ProjectIpAccessList` provides an IP Access List entry resource. The access list grants access from IPs, CIDRs or AWS Security Groups (if VPC Peering is enabled) to clusters within the Project.
    /// 
    /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
    /// 
    /// &gt; **IMPORTANT:**
    /// When you remove an entry from the access list, existing connections from the removed address(es) may remain open for a variable amount of time. How much time passes before Atlas closes the connection depends on several factors, including how the connection was established, the particular behavior of the application or driver using the address, and the connection protocol (e.g., TCP or UDP). This is particularly important to consider when changing an existing IP address or CIDR block as they cannot be updated via the Provider (comments can however), hence a change will force the destruction and recreation of entries.
    /// 
    /// ## Example Usage
    /// 
    /// ### Using CIDR Block
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Mongodbatlas = Pulumi.Mongodbatlas;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Mongodbatlas.ProjectIpAccessList("test", new()
    ///     {
    ///         ProjectId = "&lt;PROJECT-ID&gt;",
    ///         CidrBlock = "1.2.3.4/32",
    ///         Comment = "cidr block for tf acc testing",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Using IP Address
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Mongodbatlas = Pulumi.Mongodbatlas;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Mongodbatlas.ProjectIpAccessList("test", new()
    ///     {
    ///         ProjectId = "&lt;PROJECT-ID&gt;",
    ///         IpAddress = "2.3.4.5",
    ///         Comment = "ip address for tf acc testing",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Using an AWS Security Group
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Mongodbatlas = Pulumi.Mongodbatlas;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Mongodbatlas.NetworkContainer("test", new()
    ///     {
    ///         ProjectId = "&lt;PROJECT-ID&gt;",
    ///         AtlasCidrBlock = "192.168.208.0/21",
    ///         ProviderName = "AWS",
    ///         RegionName = "US_EAST_1",
    ///     });
    /// 
    ///     var testNetworkPeering = new Mongodbatlas.NetworkPeering("test", new()
    ///     {
    ///         ProjectId = "&lt;PROJECT-ID&gt;",
    ///         ContainerId = test.ContainerId,
    ///         AccepterRegionName = "us-east-1",
    ///         ProviderName = "AWS",
    ///         RouteTableCidrBlock = "172.31.0.0/16",
    ///         VpcId = "vpc-0d93d6f69f1578bd8",
    ///         AwsAccountId = "232589400519",
    ///     });
    /// 
    ///     var testProjectIpAccessList = new Mongodbatlas.ProjectIpAccessList("test", new()
    ///     {
    ///         ProjectId = "&lt;PROJECT-ID&gt;",
    ///         AwsSecurityGroup = "sg-0026348ec11780bd1",
    ///         Comment = "TestAcc for awsSecurityGroup",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             testNetworkPeering, 
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// &gt; **IMPORTANT:** In order to use AWS Security Group(s) VPC Peering must be enabled like above example.
    /// 
    /// ## Import
    /// 
    /// IP Access List entries can be imported using the `project_id` and `cidr_block` or `ip_address`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import mongodbatlas:index/projectIpAccessList:ProjectIpAccessList test 5d0f1f74cf09a29120e123cd-10.242.88.0/21
    /// ```
    /// For more information see: [MongoDB Atlas API Reference.](https://docs.atlas.mongodb.com/reference/api/access-lists/)
    /// </summary>
    [MongodbatlasResourceType("mongodbatlas:index/projectIpAccessList:ProjectIpAccessList")]
    public partial class ProjectIpAccessList : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Unique identifier of the AWS security group to add to the access list. Your access list entry can include only one `awsSecurityGroup`, one `cidrBlock`, or one `ipAddress`.
        /// </summary>
        [Output("awsSecurityGroup")]
        public Output<string> AwsSecurityGroup { get; private set; } = null!;

        /// <summary>
        /// Range of IP addresses in CIDR notation to be added to the access list. Your access list entry can include only one `awsSecurityGroup`, one `cidrBlock`, or one `ipAddress`.
        /// </summary>
        [Output("cidrBlock")]
        public Output<string> CidrBlock { get; private set; } = null!;

        /// <summary>
        /// Comment to add to the access list entry.
        /// 
        /// &gt; **NOTE:** One of the following attributes must set:  `aws_security_group`, `cidr_block`  or `ip_address`.
        /// </summary>
        [Output("comment")]
        public Output<string> Comment { get; private set; } = null!;

        /// <summary>
        /// Single IP address to be added to the access list. Mutually exclusive with `awsSecurityGroup` and `cidrBlock`.
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// Unique identifier for the project to which you want to add one or more access list entries.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.ProjectIpAccessListTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectIpAccessList resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectIpAccessList(string name, ProjectIpAccessListArgs args, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/projectIpAccessList:ProjectIpAccessList", name, args ?? new ProjectIpAccessListArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProjectIpAccessList(string name, Input<string> id, ProjectIpAccessListState? state = null, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/projectIpAccessList:ProjectIpAccessList", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectIpAccessList resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectIpAccessList Get(string name, Input<string> id, ProjectIpAccessListState? state = null, CustomResourceOptions? options = null)
        {
            return new ProjectIpAccessList(name, id, state, options);
        }
    }

    public sealed class ProjectIpAccessListArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unique identifier of the AWS security group to add to the access list. Your access list entry can include only one `awsSecurityGroup`, one `cidrBlock`, or one `ipAddress`.
        /// </summary>
        [Input("awsSecurityGroup")]
        public Input<string>? AwsSecurityGroup { get; set; }

        /// <summary>
        /// Range of IP addresses in CIDR notation to be added to the access list. Your access list entry can include only one `awsSecurityGroup`, one `cidrBlock`, or one `ipAddress`.
        /// </summary>
        [Input("cidrBlock")]
        public Input<string>? CidrBlock { get; set; }

        /// <summary>
        /// Comment to add to the access list entry.
        /// 
        /// &gt; **NOTE:** One of the following attributes must set:  `aws_security_group`, `cidr_block`  or `ip_address`.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Single IP address to be added to the access list. Mutually exclusive with `awsSecurityGroup` and `cidrBlock`.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// Unique identifier for the project to which you want to add one or more access list entries.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.ProjectIpAccessListTimeoutsArgs>? Timeouts { get; set; }

        public ProjectIpAccessListArgs()
        {
        }
        public static new ProjectIpAccessListArgs Empty => new ProjectIpAccessListArgs();
    }

    public sealed class ProjectIpAccessListState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unique identifier of the AWS security group to add to the access list. Your access list entry can include only one `awsSecurityGroup`, one `cidrBlock`, or one `ipAddress`.
        /// </summary>
        [Input("awsSecurityGroup")]
        public Input<string>? AwsSecurityGroup { get; set; }

        /// <summary>
        /// Range of IP addresses in CIDR notation to be added to the access list. Your access list entry can include only one `awsSecurityGroup`, one `cidrBlock`, or one `ipAddress`.
        /// </summary>
        [Input("cidrBlock")]
        public Input<string>? CidrBlock { get; set; }

        /// <summary>
        /// Comment to add to the access list entry.
        /// 
        /// &gt; **NOTE:** One of the following attributes must set:  `aws_security_group`, `cidr_block`  or `ip_address`.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Single IP address to be added to the access list. Mutually exclusive with `awsSecurityGroup` and `cidrBlock`.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// Unique identifier for the project to which you want to add one or more access list entries.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("timeouts")]
        public Input<Inputs.ProjectIpAccessListTimeoutsGetArgs>? Timeouts { get; set; }

        public ProjectIpAccessListState()
        {
        }
        public static new ProjectIpAccessListState Empty => new ProjectIpAccessListState();
    }
}
