// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetStreamAccountDetails
    {
        /// <summary>
        /// ## # Data Source: mongodbatlas.getStreamAccountDetails
        /// 
        /// `mongodbatlas.getStreamAccountDetails` returns the AWS Account ID/Azure Subscription ID, and the AWS VPC ID/Azure Virtual Network Name for the group, cloud provider, and region that you specify.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accountDetails = Mongodbatlas.GetStreamAccountDetails.Invoke(new()
        ///     {
        ///         ProjectId = projectId,
        ///         CloudProvider = "aws",
        ///         RegionName = "US_EAST_1",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["awsAccountId"] = accountDetails.Apply(getStreamAccountDetailsResult =&gt; getStreamAccountDetailsResult.AwsAccountId),
        ///         ["cidrBlock"] = accountDetails.Apply(getStreamAccountDetailsResult =&gt; getStreamAccountDetailsResult.CidrBlock),
        ///         ["cloudProvider"] = accountDetails.Apply(getStreamAccountDetailsResult =&gt; getStreamAccountDetailsResult.CloudProvider),
        ///         ["vpcId"] = accountDetails.Apply(getStreamAccountDetailsResult =&gt; getStreamAccountDetailsResult.VpcId),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetStreamAccountDetailsResult> InvokeAsync(GetStreamAccountDetailsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreamAccountDetailsResult>("mongodbatlas:index/getStreamAccountDetails:getStreamAccountDetails", args ?? new GetStreamAccountDetailsArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.getStreamAccountDetails
        /// 
        /// `mongodbatlas.getStreamAccountDetails` returns the AWS Account ID/Azure Subscription ID, and the AWS VPC ID/Azure Virtual Network Name for the group, cloud provider, and region that you specify.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accountDetails = Mongodbatlas.GetStreamAccountDetails.Invoke(new()
        ///     {
        ///         ProjectId = projectId,
        ///         CloudProvider = "aws",
        ///         RegionName = "US_EAST_1",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["awsAccountId"] = accountDetails.Apply(getStreamAccountDetailsResult =&gt; getStreamAccountDetailsResult.AwsAccountId),
        ///         ["cidrBlock"] = accountDetails.Apply(getStreamAccountDetailsResult =&gt; getStreamAccountDetailsResult.CidrBlock),
        ///         ["cloudProvider"] = accountDetails.Apply(getStreamAccountDetailsResult =&gt; getStreamAccountDetailsResult.CloudProvider),
        ///         ["vpcId"] = accountDetails.Apply(getStreamAccountDetailsResult =&gt; getStreamAccountDetailsResult.VpcId),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetStreamAccountDetailsResult> Invoke(GetStreamAccountDetailsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamAccountDetailsResult>("mongodbatlas:index/getStreamAccountDetails:getStreamAccountDetails", args ?? new GetStreamAccountDetailsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.getStreamAccountDetails
        /// 
        /// `mongodbatlas.getStreamAccountDetails` returns the AWS Account ID/Azure Subscription ID, and the AWS VPC ID/Azure Virtual Network Name for the group, cloud provider, and region that you specify.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var accountDetails = Mongodbatlas.GetStreamAccountDetails.Invoke(new()
        ///     {
        ///         ProjectId = projectId,
        ///         CloudProvider = "aws",
        ///         RegionName = "US_EAST_1",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["awsAccountId"] = accountDetails.Apply(getStreamAccountDetailsResult =&gt; getStreamAccountDetailsResult.AwsAccountId),
        ///         ["cidrBlock"] = accountDetails.Apply(getStreamAccountDetailsResult =&gt; getStreamAccountDetailsResult.CidrBlock),
        ///         ["cloudProvider"] = accountDetails.Apply(getStreamAccountDetailsResult =&gt; getStreamAccountDetailsResult.CloudProvider),
        ///         ["vpcId"] = accountDetails.Apply(getStreamAccountDetailsResult =&gt; getStreamAccountDetailsResult.VpcId),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetStreamAccountDetailsResult> Invoke(GetStreamAccountDetailsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamAccountDetailsResult>("mongodbatlas:index/getStreamAccountDetails:getStreamAccountDetails", args ?? new GetStreamAccountDetailsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamAccountDetailsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// One of `aws` or `azure`.
        /// </summary>
        [Input("cloudProvider", required: true)]
        public string CloudProvider { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](https://www.mongodb.com/docs/api/doc/atlas-admin-api-v2/operation/operation-listprojects) endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        [Input("regionName", required: true)]
        public string RegionName { get; set; } = null!;

        public GetStreamAccountDetailsArgs()
        {
        }
        public static new GetStreamAccountDetailsArgs Empty => new GetStreamAccountDetailsArgs();
    }

    public sealed class GetStreamAccountDetailsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// One of `aws` or `azure`.
        /// </summary>
        [Input("cloudProvider", required: true)]
        public Input<string> CloudProvider { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](https://www.mongodb.com/docs/api/doc/atlas-admin-api-v2/operation/operation-listprojects) endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("regionName", required: true)]
        public Input<string> RegionName { get; set; } = null!;

        public GetStreamAccountDetailsInvokeArgs()
        {
        }
        public static new GetStreamAccountDetailsInvokeArgs Empty => new GetStreamAccountDetailsInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamAccountDetailsResult
    {
        public readonly string AwsAccountId;
        public readonly string AzureSubscriptionId;
        public readonly string CidrBlock;
        /// <summary>
        /// One of `aws` or `azure`.
        /// </summary>
        public readonly string CloudProvider;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](https://www.mongodb.com/docs/api/doc/atlas-admin-api-v2/operation/operation-listprojects) endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        public readonly string ProjectId;
        public readonly string RegionName;
        public readonly string VirtualNetworkName;
        public readonly string VpcId;

        [OutputConstructor]
        private GetStreamAccountDetailsResult(
            string awsAccountId,

            string azureSubscriptionId,

            string cidrBlock,

            string cloudProvider,

            string id,

            string projectId,

            string regionName,

            string virtualNetworkName,

            string vpcId)
        {
            AwsAccountId = awsAccountId;
            AzureSubscriptionId = azureSubscriptionId;
            CidrBlock = cidrBlock;
            CloudProvider = cloudProvider;
            Id = id;
            ProjectId = projectId;
            RegionName = regionName;
            VirtualNetworkName = virtualNetworkName;
            VpcId = vpcId;
        }
    }
}
