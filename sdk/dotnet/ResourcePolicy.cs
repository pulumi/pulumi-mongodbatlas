// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    /// <summary>
    /// ## # Resource: mongodbatlas.ResourcePolicy
    /// 
    /// `mongodbatlas.ResourcePolicy` provides a Resource Policy resource. The resource lets you create, edit and delete resource policies to prevent misconfigurations and reduce the need for corrective interventions in your organization.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Resource Policy resource can be imported using the org ID and policy ID, in the format `{ORG_ID}-{POLICY_ID}`, e.g.
    /// 
    /// For more information see: [MongoDB Atlas API - Resource Policies](https://www.mongodb.com/docs/api/doc/atlas-admin-api-v2/group/endpoint-resource-policies) Documentation.
    /// </summary>
    [MongodbatlasResourceType("mongodbatlas:index/resourcePolicy:ResourcePolicy")]
    public partial class ResourcePolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The user that last updated the Atlas resource policy.
        /// </summary>
        [Output("createdByUser")]
        public Output<Outputs.ResourcePolicyCreatedByUser> CreatedByUser { get; private set; } = null!;

        /// <summary>
        /// Date and time in UTC when the Atlas resource policy was created.
        /// </summary>
        [Output("createdDate")]
        public Output<string> CreatedDate { get; private set; } = null!;

        /// <summary>
        /// Description of the Atlas resource policy.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The user that last updated the Atlas resource policy.
        /// </summary>
        [Output("lastUpdatedByUser")]
        public Output<Outputs.ResourcePolicyLastUpdatedByUser> LastUpdatedByUser { get; private set; } = null!;

        /// <summary>
        /// Date and time in UTC when the Atlas resource policy was last updated.
        /// </summary>
        [Output("lastUpdatedDate")]
        public Output<string> LastUpdatedDate { get; private set; } = null!;

        /// <summary>
        /// Human-readable label that describes the Atlas resource policy.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
        /// </summary>
        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        /// <summary>
        /// List of policies that make up the Atlas resource policy.
        /// </summary>
        [Output("policies")]
        public Output<ImmutableArray<Outputs.ResourcePolicyPolicy>> Policies { get; private set; } = null!;

        /// <summary>
        /// A string that identifies the version of the Atlas resource policy.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a ResourcePolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResourcePolicy(string name, ResourcePolicyArgs args, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/resourcePolicy:ResourcePolicy", name, args ?? new ResourcePolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ResourcePolicy(string name, Input<string> id, ResourcePolicyState? state = null, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/resourcePolicy:ResourcePolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResourcePolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResourcePolicy Get(string name, Input<string> id, ResourcePolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new ResourcePolicy(name, id, state, options);
        }
    }

    public sealed class ResourcePolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the Atlas resource policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Human-readable label that describes the Atlas resource policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
        /// </summary>
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        [Input("policies", required: true)]
        private InputList<Inputs.ResourcePolicyPolicyArgs>? _policies;

        /// <summary>
        /// List of policies that make up the Atlas resource policy.
        /// </summary>
        public InputList<Inputs.ResourcePolicyPolicyArgs> Policies
        {
            get => _policies ?? (_policies = new InputList<Inputs.ResourcePolicyPolicyArgs>());
            set => _policies = value;
        }

        public ResourcePolicyArgs()
        {
        }
        public static new ResourcePolicyArgs Empty => new ResourcePolicyArgs();
    }

    public sealed class ResourcePolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The user that last updated the Atlas resource policy.
        /// </summary>
        [Input("createdByUser")]
        public Input<Inputs.ResourcePolicyCreatedByUserGetArgs>? CreatedByUser { get; set; }

        /// <summary>
        /// Date and time in UTC when the Atlas resource policy was created.
        /// </summary>
        [Input("createdDate")]
        public Input<string>? CreatedDate { get; set; }

        /// <summary>
        /// Description of the Atlas resource policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The user that last updated the Atlas resource policy.
        /// </summary>
        [Input("lastUpdatedByUser")]
        public Input<Inputs.ResourcePolicyLastUpdatedByUserGetArgs>? LastUpdatedByUser { get; set; }

        /// <summary>
        /// Date and time in UTC when the Atlas resource policy was last updated.
        /// </summary>
        [Input("lastUpdatedDate")]
        public Input<string>? LastUpdatedDate { get; set; }

        /// <summary>
        /// Human-readable label that describes the Atlas resource policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        [Input("policies")]
        private InputList<Inputs.ResourcePolicyPolicyGetArgs>? _policies;

        /// <summary>
        /// List of policies that make up the Atlas resource policy.
        /// </summary>
        public InputList<Inputs.ResourcePolicyPolicyGetArgs> Policies
        {
            get => _policies ?? (_policies = new InputList<Inputs.ResourcePolicyPolicyGetArgs>());
            set => _policies = value;
        }

        /// <summary>
        /// A string that identifies the version of the Atlas resource policy.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ResourcePolicyState()
        {
        }
        public static new ResourcePolicyState Empty => new ResourcePolicyState();
    }
}
