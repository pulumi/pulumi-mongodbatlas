// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetFlexSnapshot
    {
        /// <summary>
        /// ## # Data Source: mongodbatlas.getFlexSnapshot
        /// 
        /// `mongodbatlas.getFlexSnapshot` describes a flex snapshot.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var snapshot = Mongodbatlas.GetFlexSnapshot.Invoke(new()
        ///     {
        ///         ProjectId = projectId,
        ///         Name = example_cluster.Name,
        ///         SnapshotId = snapshotId,
        ///     });
        /// 
        ///     var snapshots = Mongodbatlas.GetFlexSnapshots.Invoke(new()
        ///     {
        ///         ProjectId = projectId,
        ///         Name = example_cluster.Name,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["mongodbatlasFlexSnapshot"] = snapshot.Apply(getFlexSnapshotResult =&gt; getFlexSnapshotResult.Name),
        ///         ["mongodbatlasFlexSnapshots"] = .Select(snapshot =&gt; 
        ///         {
        ///             return snapshot.Apply(getFlexSnapshotResult =&gt; getFlexSnapshotResult.SnapshotId);
        ///         }).ToList(),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetFlexSnapshotResult> InvokeAsync(GetFlexSnapshotArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFlexSnapshotResult>("mongodbatlas:index/getFlexSnapshot:getFlexSnapshot", args ?? new GetFlexSnapshotArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.getFlexSnapshot
        /// 
        /// `mongodbatlas.getFlexSnapshot` describes a flex snapshot.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var snapshot = Mongodbatlas.GetFlexSnapshot.Invoke(new()
        ///     {
        ///         ProjectId = projectId,
        ///         Name = example_cluster.Name,
        ///         SnapshotId = snapshotId,
        ///     });
        /// 
        ///     var snapshots = Mongodbatlas.GetFlexSnapshots.Invoke(new()
        ///     {
        ///         ProjectId = projectId,
        ///         Name = example_cluster.Name,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["mongodbatlasFlexSnapshot"] = snapshot.Apply(getFlexSnapshotResult =&gt; getFlexSnapshotResult.Name),
        ///         ["mongodbatlasFlexSnapshots"] = .Select(snapshot =&gt; 
        ///         {
        ///             return snapshot.Apply(getFlexSnapshotResult =&gt; getFlexSnapshotResult.SnapshotId);
        ///         }).ToList(),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetFlexSnapshotResult> Invoke(GetFlexSnapshotInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlexSnapshotResult>("mongodbatlas:index/getFlexSnapshot:getFlexSnapshot", args ?? new GetFlexSnapshotInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Data Source: mongodbatlas.getFlexSnapshot
        /// 
        /// `mongodbatlas.getFlexSnapshot` describes a flex snapshot.
        /// 
        /// ## Example Usage
        /// 
        /// ### S
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var snapshot = Mongodbatlas.GetFlexSnapshot.Invoke(new()
        ///     {
        ///         ProjectId = projectId,
        ///         Name = example_cluster.Name,
        ///         SnapshotId = snapshotId,
        ///     });
        /// 
        ///     var snapshots = Mongodbatlas.GetFlexSnapshots.Invoke(new()
        ///     {
        ///         ProjectId = projectId,
        ///         Name = example_cluster.Name,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["mongodbatlasFlexSnapshot"] = snapshot.Apply(getFlexSnapshotResult =&gt; getFlexSnapshotResult.Name),
        ///         ["mongodbatlasFlexSnapshots"] = .Select(snapshot =&gt; 
        ///         {
        ///             return snapshot.Apply(getFlexSnapshotResult =&gt; getFlexSnapshotResult.SnapshotId);
        ///         }).ToList(),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetFlexSnapshotResult> Invoke(GetFlexSnapshotInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlexSnapshotResult>("mongodbatlas:index/getFlexSnapshot:getFlexSnapshot", args ?? new GetFlexSnapshotInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFlexSnapshotArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Human-readable label that identifies the flex cluster whose snapshot you want to restore.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        [Input("snapshotId", required: true)]
        public string SnapshotId { get; set; } = null!;

        public GetFlexSnapshotArgs()
        {
        }
        public static new GetFlexSnapshotArgs Empty => new GetFlexSnapshotArgs();
    }

    public sealed class GetFlexSnapshotInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Human-readable label that identifies the flex cluster whose snapshot you want to restore.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("snapshotId", required: true)]
        public Input<string> SnapshotId { get; set; } = null!;

        public GetFlexSnapshotInvokeArgs()
        {
        }
        public static new GetFlexSnapshotInvokeArgs Empty => new GetFlexSnapshotInvokeArgs();
    }


    [OutputType]
    public sealed class GetFlexSnapshotResult
    {
        public readonly string Expiration;
        public readonly string FinishTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string MongoDbVersion;
        /// <summary>
        /// Human-readable label that identifies the flex cluster whose snapshot you want to restore.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
        /// </summary>
        public readonly string ProjectId;
        public readonly string ScheduledTime;
        public readonly string SnapshotId;
        public readonly string StartTime;
        public readonly string Status;

        [OutputConstructor]
        private GetFlexSnapshotResult(
            string expiration,

            string finishTime,

            string id,

            string mongoDbVersion,

            string name,

            string projectId,

            string scheduledTime,

            string snapshotId,

            string startTime,

            string status)
        {
            Expiration = expiration;
            FinishTime = finishTime;
            Id = id;
            MongoDbVersion = mongoDbVersion;
            Name = name;
            ProjectId = projectId;
            ScheduledTime = scheduledTime;
            SnapshotId = snapshotId;
            StartTime = startTime;
            Status = status;
        }
    }
}
