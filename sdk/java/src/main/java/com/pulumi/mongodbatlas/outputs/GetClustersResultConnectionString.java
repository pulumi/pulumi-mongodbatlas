// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetClustersResultConnectionStringPrivateEndpoint;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetClustersResultConnectionString {
    private Map<String,Object> awsPrivateLink;
    private Map<String,Object> awsPrivateLinkSrv;
    /**
     * @return [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
     * 
     */
    private String private_;
    private List<GetClustersResultConnectionStringPrivateEndpoint> privateEndpoints;
    /**
     * @return [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
     * - `connection_strings.private_endpoint.#.connection_string` - Private-endpoint-aware `mongodb://`connection string for this private endpoint.
     * - `connection_strings.private_endpoint.#.srv_connection_string` - Private-endpoint-aware `mongodb+srv://` connection string for this private endpoint.
     * - `connection_strings.private_endpoint.#.srv_shard_optimized_connection_string` - Private endpoint-aware connection string optimized for sharded clusters that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint.
     * - `connection_strings.private_endpoint.#.type` - Type of MongoDB process that you connect to with the connection strings. Atlas returns `MONGOD` for replica sets, or `MONGOS` for sharded clusters.
     * - `connection_strings.private_endpoint.#.endpoints` - Private endpoint through which you connect to Atlas when you use `connection_strings.private_endpoint[n].connection_string` or `connection_strings.private_endpoint[n].srv_connection_string`
     * - `connection_strings.private_endpoint.#.endpoints.#.endpoint_id` - Unique identifier of the private endpoint.
     * - `connection_strings.private_endpoint.#.endpoints.#.provider_name` - Cloud provider to which you deployed the private endpoint. Atlas returns `AWS` or `AZURE`.
     * - `connection_strings.private_endpoint.#.endpoints.#.region` - Region to which you deployed the private endpoint.
     * 
     */
    private String privateSrv;
    /**
     * @return Public mongodb:// connection string for this cluster.
     * 
     */
    private String standard;
    /**
     * @return Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.standard.
     * 
     */
    private String standardSrv;

    private GetClustersResultConnectionString() {}
    public Map<String,Object> awsPrivateLink() {
        return this.awsPrivateLink;
    }
    public Map<String,Object> awsPrivateLinkSrv() {
        return this.awsPrivateLinkSrv;
    }
    /**
     * @return [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
     * 
     */
    public String private_() {
        return this.private_;
    }
    public List<GetClustersResultConnectionStringPrivateEndpoint> privateEndpoints() {
        return this.privateEndpoints;
    }
    /**
     * @return [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
     * - `connection_strings.private_endpoint.#.connection_string` - Private-endpoint-aware `mongodb://`connection string for this private endpoint.
     * - `connection_strings.private_endpoint.#.srv_connection_string` - Private-endpoint-aware `mongodb+srv://` connection string for this private endpoint.
     * - `connection_strings.private_endpoint.#.srv_shard_optimized_connection_string` - Private endpoint-aware connection string optimized for sharded clusters that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint.
     * - `connection_strings.private_endpoint.#.type` - Type of MongoDB process that you connect to with the connection strings. Atlas returns `MONGOD` for replica sets, or `MONGOS` for sharded clusters.
     * - `connection_strings.private_endpoint.#.endpoints` - Private endpoint through which you connect to Atlas when you use `connection_strings.private_endpoint[n].connection_string` or `connection_strings.private_endpoint[n].srv_connection_string`
     * - `connection_strings.private_endpoint.#.endpoints.#.endpoint_id` - Unique identifier of the private endpoint.
     * - `connection_strings.private_endpoint.#.endpoints.#.provider_name` - Cloud provider to which you deployed the private endpoint. Atlas returns `AWS` or `AZURE`.
     * - `connection_strings.private_endpoint.#.endpoints.#.region` - Region to which you deployed the private endpoint.
     * 
     */
    public String privateSrv() {
        return this.privateSrv;
    }
    /**
     * @return Public mongodb:// connection string for this cluster.
     * 
     */
    public String standard() {
        return this.standard;
    }
    /**
     * @return Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.standard.
     * 
     */
    public String standardSrv() {
        return this.standardSrv;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClustersResultConnectionString defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Object> awsPrivateLink;
        private Map<String,Object> awsPrivateLinkSrv;
        private String private_;
        private List<GetClustersResultConnectionStringPrivateEndpoint> privateEndpoints;
        private String privateSrv;
        private String standard;
        private String standardSrv;
        public Builder() {}
        public Builder(GetClustersResultConnectionString defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsPrivateLink = defaults.awsPrivateLink;
    	      this.awsPrivateLinkSrv = defaults.awsPrivateLinkSrv;
    	      this.private_ = defaults.private_;
    	      this.privateEndpoints = defaults.privateEndpoints;
    	      this.privateSrv = defaults.privateSrv;
    	      this.standard = defaults.standard;
    	      this.standardSrv = defaults.standardSrv;
        }

        @CustomType.Setter
        public Builder awsPrivateLink(Map<String,Object> awsPrivateLink) {
            if (awsPrivateLink == null) {
              throw new MissingRequiredPropertyException("GetClustersResultConnectionString", "awsPrivateLink");
            }
            this.awsPrivateLink = awsPrivateLink;
            return this;
        }
        @CustomType.Setter
        public Builder awsPrivateLinkSrv(Map<String,Object> awsPrivateLinkSrv) {
            if (awsPrivateLinkSrv == null) {
              throw new MissingRequiredPropertyException("GetClustersResultConnectionString", "awsPrivateLinkSrv");
            }
            this.awsPrivateLinkSrv = awsPrivateLinkSrv;
            return this;
        }
        @CustomType.Setter("private")
        public Builder private_(String private_) {
            if (private_ == null) {
              throw new MissingRequiredPropertyException("GetClustersResultConnectionString", "private_");
            }
            this.private_ = private_;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpoints(List<GetClustersResultConnectionStringPrivateEndpoint> privateEndpoints) {
            if (privateEndpoints == null) {
              throw new MissingRequiredPropertyException("GetClustersResultConnectionString", "privateEndpoints");
            }
            this.privateEndpoints = privateEndpoints;
            return this;
        }
        public Builder privateEndpoints(GetClustersResultConnectionStringPrivateEndpoint... privateEndpoints) {
            return privateEndpoints(List.of(privateEndpoints));
        }
        @CustomType.Setter
        public Builder privateSrv(String privateSrv) {
            if (privateSrv == null) {
              throw new MissingRequiredPropertyException("GetClustersResultConnectionString", "privateSrv");
            }
            this.privateSrv = privateSrv;
            return this;
        }
        @CustomType.Setter
        public Builder standard(String standard) {
            if (standard == null) {
              throw new MissingRequiredPropertyException("GetClustersResultConnectionString", "standard");
            }
            this.standard = standard;
            return this;
        }
        @CustomType.Setter
        public Builder standardSrv(String standardSrv) {
            if (standardSrv == null) {
              throw new MissingRequiredPropertyException("GetClustersResultConnectionString", "standardSrv");
            }
            this.standardSrv = standardSrv;
            return this;
        }
        public GetClustersResultConnectionString build() {
            final var _resultValue = new GetClustersResultConnectionString();
            _resultValue.awsPrivateLink = awsPrivateLink;
            _resultValue.awsPrivateLinkSrv = awsPrivateLinkSrv;
            _resultValue.private_ = private_;
            _resultValue.privateEndpoints = privateEndpoints;
            _resultValue.privateSrv = privateSrv;
            _resultValue.standard = standard;
            _resultValue.standardSrv = standardSrv;
            return _resultValue;
        }
    }
}
