// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProjectLimit {
    private @Nullable Integer currentUsage;
    private @Nullable Integer defaultLimit;
    private @Nullable Integer maximumLimit;
    /**
     * @return Human-readable label that identifies this project limit. See [Project Limit Documentation](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects/operation/setProjectLimit) under `limitName` parameter to find all the limits that can be defined.
     * 
     */
    private String name;
    /**
     * @return Amount to set the limit to. Use the [Project Limit Documentation](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects/operation/setProjectLimit) under `limitName` parameter to verify the override limits.
     * 
     */
    private Integer value;

    private ProjectLimit() {}
    public Optional<Integer> currentUsage() {
        return Optional.ofNullable(this.currentUsage);
    }
    public Optional<Integer> defaultLimit() {
        return Optional.ofNullable(this.defaultLimit);
    }
    public Optional<Integer> maximumLimit() {
        return Optional.ofNullable(this.maximumLimit);
    }
    /**
     * @return Human-readable label that identifies this project limit. See [Project Limit Documentation](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects/operation/setProjectLimit) under `limitName` parameter to find all the limits that can be defined.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Amount to set the limit to. Use the [Project Limit Documentation](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects/operation/setProjectLimit) under `limitName` parameter to verify the override limits.
     * 
     */
    public Integer value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectLimit defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer currentUsage;
        private @Nullable Integer defaultLimit;
        private @Nullable Integer maximumLimit;
        private String name;
        private Integer value;
        public Builder() {}
        public Builder(ProjectLimit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentUsage = defaults.currentUsage;
    	      this.defaultLimit = defaults.defaultLimit;
    	      this.maximumLimit = defaults.maximumLimit;
    	      this.name = defaults.name;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder currentUsage(@Nullable Integer currentUsage) {

            this.currentUsage = currentUsage;
            return this;
        }
        @CustomType.Setter
        public Builder defaultLimit(@Nullable Integer defaultLimit) {

            this.defaultLimit = defaultLimit;
            return this;
        }
        @CustomType.Setter
        public Builder maximumLimit(@Nullable Integer maximumLimit) {

            this.maximumLimit = maximumLimit;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ProjectLimit", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder value(Integer value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("ProjectLimit", "value");
            }
            this.value = value;
            return this;
        }
        public ProjectLimit build() {
            final var _resultValue = new ProjectLimit();
            _resultValue.currentUsage = currentUsage;
            _resultValue.defaultLimit = defaultLimit;
            _resultValue.maximumLimit = maximumLimit;
            _resultValue.name = name;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
