// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetThirdPartyIntegrationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetThirdPartyIntegrationArgs Empty = new GetThirdPartyIntegrationArgs();

    /**
     * The unique ID for the project to get all Third-Party service integrations
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The unique ID for the project to get all Third-Party service integrations
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Third-Party service integration type
     * * PAGER_DUTY
     * * DATADOG
     * * OPS_GENIE
     * * VICTOR_OPS
     * * WEBHOOK
     * * MICROSOFT_TEAMS
     * * PROMETHEUS
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Third-Party service integration type
     * * PAGER_DUTY
     * * DATADOG
     * * OPS_GENIE
     * * VICTOR_OPS
     * * WEBHOOK
     * * MICROSOFT_TEAMS
     * * PROMETHEUS
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private GetThirdPartyIntegrationArgs() {}

    private GetThirdPartyIntegrationArgs(GetThirdPartyIntegrationArgs $) {
        this.projectId = $.projectId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetThirdPartyIntegrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetThirdPartyIntegrationArgs $;

        public Builder() {
            $ = new GetThirdPartyIntegrationArgs();
        }

        public Builder(GetThirdPartyIntegrationArgs defaults) {
            $ = new GetThirdPartyIntegrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param projectId The unique ID for the project to get all Third-Party service integrations
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The unique ID for the project to get all Third-Party service integrations
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param type Third-Party service integration type
         * * PAGER_DUTY
         * * DATADOG
         * * OPS_GENIE
         * * VICTOR_OPS
         * * WEBHOOK
         * * MICROSOFT_TEAMS
         * * PROMETHEUS
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Third-Party service integration type
         * * PAGER_DUTY
         * * DATADOG
         * * OPS_GENIE
         * * VICTOR_OPS
         * * WEBHOOK
         * * MICROSOFT_TEAMS
         * * PROMETHEUS
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetThirdPartyIntegrationArgs build() {
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetThirdPartyIntegrationArgs", "projectId");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetThirdPartyIntegrationArgs", "type");
            }
            return $;
        }
    }

}
