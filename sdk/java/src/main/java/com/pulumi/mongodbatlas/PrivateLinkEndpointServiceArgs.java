// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.inputs.PrivateLinkEndpointServiceEndpointArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateLinkEndpointServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrivateLinkEndpointServiceArgs Empty = new PrivateLinkEndpointServiceArgs();

    /**
     * Unique identifier of the interface endpoint you created in your VPC with the `AWS`, `AZURE` or `GCP` resource.
     * 
     */
    @Import(name="endpointServiceId", required=true)
    private Output<String> endpointServiceId;

    /**
     * @return Unique identifier of the interface endpoint you created in your VPC with the `AWS`, `AZURE` or `GCP` resource.
     * 
     */
    public Output<String> endpointServiceId() {
        return this.endpointServiceId;
    }

    /**
     * Collection of individual private endpoints that comprise your endpoint group. Only for `GCP`. See below.
     * 
     */
    @Import(name="endpoints")
    private @Nullable Output<List<PrivateLinkEndpointServiceEndpointArgs>> endpoints;

    /**
     * @return Collection of individual private endpoints that comprise your endpoint group. Only for `GCP`. See below.
     * 
     */
    public Optional<Output<List<PrivateLinkEndpointServiceEndpointArgs>>> endpoints() {
        return Optional.ofNullable(this.endpoints);
    }

    /**
     * Unique identifier of the GCP project in which you created your endpoints. Only for `GCP`.
     * 
     */
    @Import(name="gcpProjectId")
    private @Nullable Output<String> gcpProjectId;

    /**
     * @return Unique identifier of the GCP project in which you created your endpoints. Only for `GCP`.
     * 
     */
    public Optional<Output<String>> gcpProjectId() {
        return Optional.ofNullable(this.gcpProjectId);
    }

    /**
     * Private IP address of the private endpoint network interface you created in your Azure VNet. Only for `AZURE`.
     * 
     */
    @Import(name="privateEndpointIpAddress")
    private @Nullable Output<String> privateEndpointIpAddress;

    /**
     * @return Private IP address of the private endpoint network interface you created in your Azure VNet. Only for `AZURE`.
     * 
     */
    public Optional<Output<String>> privateEndpointIpAddress() {
        return Optional.ofNullable(this.privateEndpointIpAddress);
    }

    /**
     * Unique identifier of the `AWS` or `AZURE` PrivateLink connection which is created by `mongodbatlas.PrivateLinkEndpoint` resource.
     * 
     */
    @Import(name="privateLinkId", required=true)
    private Output<String> privateLinkId;

    /**
     * @return Unique identifier of the `AWS` or `AZURE` PrivateLink connection which is created by `mongodbatlas.PrivateLinkEndpoint` resource.
     * 
     */
    public Output<String> privateLinkId() {
        return this.privateLinkId;
    }

    /**
     * Unique identifier for the project.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return Unique identifier for the project.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Cloud provider for which you want to create a private endpoint. Atlas accepts `AWS`, `AZURE` or `GCP`.
     * 
     */
    @Import(name="providerName", required=true)
    private Output<String> providerName;

    /**
     * @return Cloud provider for which you want to create a private endpoint. Atlas accepts `AWS`, `AZURE` or `GCP`.
     * 
     */
    public Output<String> providerName() {
        return this.providerName;
    }

    private PrivateLinkEndpointServiceArgs() {}

    private PrivateLinkEndpointServiceArgs(PrivateLinkEndpointServiceArgs $) {
        this.endpointServiceId = $.endpointServiceId;
        this.endpoints = $.endpoints;
        this.gcpProjectId = $.gcpProjectId;
        this.privateEndpointIpAddress = $.privateEndpointIpAddress;
        this.privateLinkId = $.privateLinkId;
        this.projectId = $.projectId;
        this.providerName = $.providerName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateLinkEndpointServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateLinkEndpointServiceArgs $;

        public Builder() {
            $ = new PrivateLinkEndpointServiceArgs();
        }

        public Builder(PrivateLinkEndpointServiceArgs defaults) {
            $ = new PrivateLinkEndpointServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpointServiceId Unique identifier of the interface endpoint you created in your VPC with the `AWS`, `AZURE` or `GCP` resource.
         * 
         * @return builder
         * 
         */
        public Builder endpointServiceId(Output<String> endpointServiceId) {
            $.endpointServiceId = endpointServiceId;
            return this;
        }

        /**
         * @param endpointServiceId Unique identifier of the interface endpoint you created in your VPC with the `AWS`, `AZURE` or `GCP` resource.
         * 
         * @return builder
         * 
         */
        public Builder endpointServiceId(String endpointServiceId) {
            return endpointServiceId(Output.of(endpointServiceId));
        }

        /**
         * @param endpoints Collection of individual private endpoints that comprise your endpoint group. Only for `GCP`. See below.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(@Nullable Output<List<PrivateLinkEndpointServiceEndpointArgs>> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        /**
         * @param endpoints Collection of individual private endpoints that comprise your endpoint group. Only for `GCP`. See below.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(List<PrivateLinkEndpointServiceEndpointArgs> endpoints) {
            return endpoints(Output.of(endpoints));
        }

        /**
         * @param endpoints Collection of individual private endpoints that comprise your endpoint group. Only for `GCP`. See below.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(PrivateLinkEndpointServiceEndpointArgs... endpoints) {
            return endpoints(List.of(endpoints));
        }

        /**
         * @param gcpProjectId Unique identifier of the GCP project in which you created your endpoints. Only for `GCP`.
         * 
         * @return builder
         * 
         */
        public Builder gcpProjectId(@Nullable Output<String> gcpProjectId) {
            $.gcpProjectId = gcpProjectId;
            return this;
        }

        /**
         * @param gcpProjectId Unique identifier of the GCP project in which you created your endpoints. Only for `GCP`.
         * 
         * @return builder
         * 
         */
        public Builder gcpProjectId(String gcpProjectId) {
            return gcpProjectId(Output.of(gcpProjectId));
        }

        /**
         * @param privateEndpointIpAddress Private IP address of the private endpoint network interface you created in your Azure VNet. Only for `AZURE`.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointIpAddress(@Nullable Output<String> privateEndpointIpAddress) {
            $.privateEndpointIpAddress = privateEndpointIpAddress;
            return this;
        }

        /**
         * @param privateEndpointIpAddress Private IP address of the private endpoint network interface you created in your Azure VNet. Only for `AZURE`.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointIpAddress(String privateEndpointIpAddress) {
            return privateEndpointIpAddress(Output.of(privateEndpointIpAddress));
        }

        /**
         * @param privateLinkId Unique identifier of the `AWS` or `AZURE` PrivateLink connection which is created by `mongodbatlas.PrivateLinkEndpoint` resource.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkId(Output<String> privateLinkId) {
            $.privateLinkId = privateLinkId;
            return this;
        }

        /**
         * @param privateLinkId Unique identifier of the `AWS` or `AZURE` PrivateLink connection which is created by `mongodbatlas.PrivateLinkEndpoint` resource.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkId(String privateLinkId) {
            return privateLinkId(Output.of(privateLinkId));
        }

        /**
         * @param projectId Unique identifier for the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Unique identifier for the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param providerName Cloud provider for which you want to create a private endpoint. Atlas accepts `AWS`, `AZURE` or `GCP`.
         * 
         * @return builder
         * 
         */
        public Builder providerName(Output<String> providerName) {
            $.providerName = providerName;
            return this;
        }

        /**
         * @param providerName Cloud provider for which you want to create a private endpoint. Atlas accepts `AWS`, `AZURE` or `GCP`.
         * 
         * @return builder
         * 
         */
        public Builder providerName(String providerName) {
            return providerName(Output.of(providerName));
        }

        public PrivateLinkEndpointServiceArgs build() {
            if ($.endpointServiceId == null) {
                throw new MissingRequiredPropertyException("PrivateLinkEndpointServiceArgs", "endpointServiceId");
            }
            if ($.privateLinkId == null) {
                throw new MissingRequiredPropertyException("PrivateLinkEndpointServiceArgs", "privateLinkId");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("PrivateLinkEndpointServiceArgs", "projectId");
            }
            if ($.providerName == null) {
                throw new MissingRequiredPropertyException("PrivateLinkEndpointServiceArgs", "providerName");
            }
            return $;
        }
    }

}
