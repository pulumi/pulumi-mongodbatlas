// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetLdapVerifyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLdapVerifyArgs Empty = new GetLdapVerifyArgs();

    /**
     * Unique identifier for the Atlas project associated with the verification request.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return Unique identifier for the Atlas project associated with the verification request.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Unique identifier of a request to verify an LDAP configuration.
     * 
     */
    @Import(name="requestId", required=true)
    private Output<String> requestId;

    /**
     * @return Unique identifier of a request to verify an LDAP configuration.
     * 
     */
    public Output<String> requestId() {
        return this.requestId;
    }

    private GetLdapVerifyArgs() {}

    private GetLdapVerifyArgs(GetLdapVerifyArgs $) {
        this.projectId = $.projectId;
        this.requestId = $.requestId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLdapVerifyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLdapVerifyArgs $;

        public Builder() {
            $ = new GetLdapVerifyArgs();
        }

        public Builder(GetLdapVerifyArgs defaults) {
            $ = new GetLdapVerifyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param projectId Unique identifier for the Atlas project associated with the verification request.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Unique identifier for the Atlas project associated with the verification request.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param requestId Unique identifier of a request to verify an LDAP configuration.
         * 
         * @return builder
         * 
         */
        public Builder requestId(Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        /**
         * @param requestId Unique identifier of a request to verify an LDAP configuration.
         * 
         * @return builder
         * 
         */
        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        public GetLdapVerifyArgs build() {
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetLdapVerifyArgs", "projectId");
            }
            if ($.requestId == null) {
                throw new MissingRequiredPropertyException("GetLdapVerifyArgs", "requestId");
            }
            return $;
        }
    }

}
