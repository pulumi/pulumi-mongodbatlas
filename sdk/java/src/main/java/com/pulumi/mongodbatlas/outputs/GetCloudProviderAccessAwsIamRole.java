// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetCloudProviderAccessAwsIamRoleFeatureUsage;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudProviderAccessAwsIamRole {
    /**
     * @return Unique external ID Atlas uses when assuming the IAM role in your AWS account.
     * 
     */
    private String atlasAssumedRoleExternalId;
    /**
     * @return ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
     * 
     */
    private String atlasAwsAccountArn;
    /**
     * @return Date on which this role was authorized.
     * 
     */
    private String authorizedDate;
    /**
     * @return Date on which this role was created.
     * 
     */
    private String createdDate;
    /**
     * @return Atlas features this AWS IAM role is linked to.
     * 
     */
    private List<GetCloudProviderAccessAwsIamRoleFeatureUsage> featureUsages;
    /**
     * @return ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account.
     * 
     */
    private String iamAssumedRoleArn;
    /**
     * @return Name of the cloud provider. Currently limited to AWS.
     * 
     */
    private String providerName;
    /**
     * @return Unique ID of this role.
     * 
     */
    private String roleId;

    private GetCloudProviderAccessAwsIamRole() {}
    /**
     * @return Unique external ID Atlas uses when assuming the IAM role in your AWS account.
     * 
     */
    public String atlasAssumedRoleExternalId() {
        return this.atlasAssumedRoleExternalId;
    }
    /**
     * @return ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
     * 
     */
    public String atlasAwsAccountArn() {
        return this.atlasAwsAccountArn;
    }
    /**
     * @return Date on which this role was authorized.
     * 
     */
    public String authorizedDate() {
        return this.authorizedDate;
    }
    /**
     * @return Date on which this role was created.
     * 
     */
    public String createdDate() {
        return this.createdDate;
    }
    /**
     * @return Atlas features this AWS IAM role is linked to.
     * 
     */
    public List<GetCloudProviderAccessAwsIamRoleFeatureUsage> featureUsages() {
        return this.featureUsages;
    }
    /**
     * @return ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account.
     * 
     */
    public String iamAssumedRoleArn() {
        return this.iamAssumedRoleArn;
    }
    /**
     * @return Name of the cloud provider. Currently limited to AWS.
     * 
     */
    public String providerName() {
        return this.providerName;
    }
    /**
     * @return Unique ID of this role.
     * 
     */
    public String roleId() {
        return this.roleId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudProviderAccessAwsIamRole defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String atlasAssumedRoleExternalId;
        private String atlasAwsAccountArn;
        private String authorizedDate;
        private String createdDate;
        private List<GetCloudProviderAccessAwsIamRoleFeatureUsage> featureUsages;
        private String iamAssumedRoleArn;
        private String providerName;
        private String roleId;
        public Builder() {}
        public Builder(GetCloudProviderAccessAwsIamRole defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.atlasAssumedRoleExternalId = defaults.atlasAssumedRoleExternalId;
    	      this.atlasAwsAccountArn = defaults.atlasAwsAccountArn;
    	      this.authorizedDate = defaults.authorizedDate;
    	      this.createdDate = defaults.createdDate;
    	      this.featureUsages = defaults.featureUsages;
    	      this.iamAssumedRoleArn = defaults.iamAssumedRoleArn;
    	      this.providerName = defaults.providerName;
    	      this.roleId = defaults.roleId;
        }

        @CustomType.Setter
        public Builder atlasAssumedRoleExternalId(String atlasAssumedRoleExternalId) {
            if (atlasAssumedRoleExternalId == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessAwsIamRole", "atlasAssumedRoleExternalId");
            }
            this.atlasAssumedRoleExternalId = atlasAssumedRoleExternalId;
            return this;
        }
        @CustomType.Setter
        public Builder atlasAwsAccountArn(String atlasAwsAccountArn) {
            if (atlasAwsAccountArn == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessAwsIamRole", "atlasAwsAccountArn");
            }
            this.atlasAwsAccountArn = atlasAwsAccountArn;
            return this;
        }
        @CustomType.Setter
        public Builder authorizedDate(String authorizedDate) {
            if (authorizedDate == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessAwsIamRole", "authorizedDate");
            }
            this.authorizedDate = authorizedDate;
            return this;
        }
        @CustomType.Setter
        public Builder createdDate(String createdDate) {
            if (createdDate == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessAwsIamRole", "createdDate");
            }
            this.createdDate = createdDate;
            return this;
        }
        @CustomType.Setter
        public Builder featureUsages(List<GetCloudProviderAccessAwsIamRoleFeatureUsage> featureUsages) {
            if (featureUsages == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessAwsIamRole", "featureUsages");
            }
            this.featureUsages = featureUsages;
            return this;
        }
        public Builder featureUsages(GetCloudProviderAccessAwsIamRoleFeatureUsage... featureUsages) {
            return featureUsages(List.of(featureUsages));
        }
        @CustomType.Setter
        public Builder iamAssumedRoleArn(String iamAssumedRoleArn) {
            if (iamAssumedRoleArn == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessAwsIamRole", "iamAssumedRoleArn");
            }
            this.iamAssumedRoleArn = iamAssumedRoleArn;
            return this;
        }
        @CustomType.Setter
        public Builder providerName(String providerName) {
            if (providerName == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessAwsIamRole", "providerName");
            }
            this.providerName = providerName;
            return this;
        }
        @CustomType.Setter
        public Builder roleId(String roleId) {
            if (roleId == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessAwsIamRole", "roleId");
            }
            this.roleId = roleId;
            return this;
        }
        public GetCloudProviderAccessAwsIamRole build() {
            final var _resultValue = new GetCloudProviderAccessAwsIamRole();
            _resultValue.atlasAssumedRoleExternalId = atlasAssumedRoleExternalId;
            _resultValue.atlasAwsAccountArn = atlasAwsAccountArn;
            _resultValue.authorizedDate = authorizedDate;
            _resultValue.createdDate = createdDate;
            _resultValue.featureUsages = featureUsages;
            _resultValue.iamAssumedRoleArn = iamAssumedRoleArn;
            _resultValue.providerName = providerName;
            _resultValue.roleId = roleId;
            return _resultValue;
        }
    }
}
