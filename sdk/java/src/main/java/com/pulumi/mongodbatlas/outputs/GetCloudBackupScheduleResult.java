// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.mongodbatlas.outputs.GetCloudBackupScheduleCopySetting;
import com.pulumi.mongodbatlas.outputs.GetCloudBackupScheduleExport;
import com.pulumi.mongodbatlas.outputs.GetCloudBackupSchedulePolicyItemDaily;
import com.pulumi.mongodbatlas.outputs.GetCloudBackupSchedulePolicyItemHourly;
import com.pulumi.mongodbatlas.outputs.GetCloudBackupSchedulePolicyItemMonthly;
import com.pulumi.mongodbatlas.outputs.GetCloudBackupSchedulePolicyItemWeekly;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudBackupScheduleResult {
    /**
     * @return Flag that indicates whether automatic export of cloud backup snapshots to the AWS bucket is enabled. Value can be one of the following:
     * 
     */
    private Boolean autoExportEnabled;
    /**
     * @return Unique identifier of the Atlas cluster.
     * 
     */
    private String clusterId;
    private String clusterName;
    private List<GetCloudBackupScheduleCopySetting> copySettings;
    private List<GetCloudBackupScheduleExport> exports;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Unique identifier of the backup policy.
     * 
     */
    private String idPolicy;
    /**
     * @return UTC ISO 8601 formatted point in time when Atlas will take the next snapshot.
     * 
     */
    private String nextSnapshot;
    /**
     * @return Daily policy item
     * 
     */
    private List<GetCloudBackupSchedulePolicyItemDaily> policyItemDailies;
    /**
     * @return Hourly policy item
     * 
     */
    private List<GetCloudBackupSchedulePolicyItemHourly> policyItemHourlies;
    /**
     * @return Monthly policy item
     * 
     */
    private List<GetCloudBackupSchedulePolicyItemMonthly> policyItemMonthlies;
    /**
     * @return Weekly policy item
     * 
     */
    private List<GetCloudBackupSchedulePolicyItemWeekly> policyItemWeeklies;
    private String projectId;
    /**
     * @return UTC Hour of day between 0 and 23 representing which hour of the day that Atlas takes a snapshot.
     * 
     */
    private Integer referenceHourOfDay;
    /**
     * @return UTC Minute of day between 0 and 59 representing which minute of the `reference_hour_of_day` that Atlas takes the snapshot.
     * 
     */
    private Integer referenceMinuteOfHour;
    /**
     * @return Specifies a restore window in days for cloud backup to maintain.
     * 
     */
    private Integer restoreWindowDays;
    /**
     * @return Specify true to use organization and project names instead of organization and project UUIDs in the path for the metadata files that Atlas uploads to your S3 bucket after it finishes exporting the snapshots. To learn more about the metadata files that Atlas uploads, see [Export Cloud Backup Snapshot](https://www.mongodb.com/docs/atlas/backup/cloud-backup/export/#std-label-cloud-provider-snapshot-export).
     * 
     */
    private Boolean useOrgAndGroupNamesInExportPrefix;

    private GetCloudBackupScheduleResult() {}
    /**
     * @return Flag that indicates whether automatic export of cloud backup snapshots to the AWS bucket is enabled. Value can be one of the following:
     * 
     */
    public Boolean autoExportEnabled() {
        return this.autoExportEnabled;
    }
    /**
     * @return Unique identifier of the Atlas cluster.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    public String clusterName() {
        return this.clusterName;
    }
    public List<GetCloudBackupScheduleCopySetting> copySettings() {
        return this.copySettings;
    }
    public List<GetCloudBackupScheduleExport> exports() {
        return this.exports;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique identifier of the backup policy.
     * 
     */
    public String idPolicy() {
        return this.idPolicy;
    }
    /**
     * @return UTC ISO 8601 formatted point in time when Atlas will take the next snapshot.
     * 
     */
    public String nextSnapshot() {
        return this.nextSnapshot;
    }
    /**
     * @return Daily policy item
     * 
     */
    public List<GetCloudBackupSchedulePolicyItemDaily> policyItemDailies() {
        return this.policyItemDailies;
    }
    /**
     * @return Hourly policy item
     * 
     */
    public List<GetCloudBackupSchedulePolicyItemHourly> policyItemHourlies() {
        return this.policyItemHourlies;
    }
    /**
     * @return Monthly policy item
     * 
     */
    public List<GetCloudBackupSchedulePolicyItemMonthly> policyItemMonthlies() {
        return this.policyItemMonthlies;
    }
    /**
     * @return Weekly policy item
     * 
     */
    public List<GetCloudBackupSchedulePolicyItemWeekly> policyItemWeeklies() {
        return this.policyItemWeeklies;
    }
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return UTC Hour of day between 0 and 23 representing which hour of the day that Atlas takes a snapshot.
     * 
     */
    public Integer referenceHourOfDay() {
        return this.referenceHourOfDay;
    }
    /**
     * @return UTC Minute of day between 0 and 59 representing which minute of the `reference_hour_of_day` that Atlas takes the snapshot.
     * 
     */
    public Integer referenceMinuteOfHour() {
        return this.referenceMinuteOfHour;
    }
    /**
     * @return Specifies a restore window in days for cloud backup to maintain.
     * 
     */
    public Integer restoreWindowDays() {
        return this.restoreWindowDays;
    }
    /**
     * @return Specify true to use organization and project names instead of organization and project UUIDs in the path for the metadata files that Atlas uploads to your S3 bucket after it finishes exporting the snapshots. To learn more about the metadata files that Atlas uploads, see [Export Cloud Backup Snapshot](https://www.mongodb.com/docs/atlas/backup/cloud-backup/export/#std-label-cloud-provider-snapshot-export).
     * 
     */
    public Boolean useOrgAndGroupNamesInExportPrefix() {
        return this.useOrgAndGroupNamesInExportPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudBackupScheduleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean autoExportEnabled;
        private String clusterId;
        private String clusterName;
        private List<GetCloudBackupScheduleCopySetting> copySettings;
        private List<GetCloudBackupScheduleExport> exports;
        private String id;
        private String idPolicy;
        private String nextSnapshot;
        private List<GetCloudBackupSchedulePolicyItemDaily> policyItemDailies;
        private List<GetCloudBackupSchedulePolicyItemHourly> policyItemHourlies;
        private List<GetCloudBackupSchedulePolicyItemMonthly> policyItemMonthlies;
        private List<GetCloudBackupSchedulePolicyItemWeekly> policyItemWeeklies;
        private String projectId;
        private Integer referenceHourOfDay;
        private Integer referenceMinuteOfHour;
        private Integer restoreWindowDays;
        private Boolean useOrgAndGroupNamesInExportPrefix;
        public Builder() {}
        public Builder(GetCloudBackupScheduleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoExportEnabled = defaults.autoExportEnabled;
    	      this.clusterId = defaults.clusterId;
    	      this.clusterName = defaults.clusterName;
    	      this.copySettings = defaults.copySettings;
    	      this.exports = defaults.exports;
    	      this.id = defaults.id;
    	      this.idPolicy = defaults.idPolicy;
    	      this.nextSnapshot = defaults.nextSnapshot;
    	      this.policyItemDailies = defaults.policyItemDailies;
    	      this.policyItemHourlies = defaults.policyItemHourlies;
    	      this.policyItemMonthlies = defaults.policyItemMonthlies;
    	      this.policyItemWeeklies = defaults.policyItemWeeklies;
    	      this.projectId = defaults.projectId;
    	      this.referenceHourOfDay = defaults.referenceHourOfDay;
    	      this.referenceMinuteOfHour = defaults.referenceMinuteOfHour;
    	      this.restoreWindowDays = defaults.restoreWindowDays;
    	      this.useOrgAndGroupNamesInExportPrefix = defaults.useOrgAndGroupNamesInExportPrefix;
        }

        @CustomType.Setter
        public Builder autoExportEnabled(Boolean autoExportEnabled) {
            this.autoExportEnabled = Objects.requireNonNull(autoExportEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }
        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            this.clusterName = Objects.requireNonNull(clusterName);
            return this;
        }
        @CustomType.Setter
        public Builder copySettings(List<GetCloudBackupScheduleCopySetting> copySettings) {
            this.copySettings = Objects.requireNonNull(copySettings);
            return this;
        }
        public Builder copySettings(GetCloudBackupScheduleCopySetting... copySettings) {
            return copySettings(List.of(copySettings));
        }
        @CustomType.Setter
        public Builder exports(List<GetCloudBackupScheduleExport> exports) {
            this.exports = Objects.requireNonNull(exports);
            return this;
        }
        public Builder exports(GetCloudBackupScheduleExport... exports) {
            return exports(List.of(exports));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder idPolicy(String idPolicy) {
            this.idPolicy = Objects.requireNonNull(idPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder nextSnapshot(String nextSnapshot) {
            this.nextSnapshot = Objects.requireNonNull(nextSnapshot);
            return this;
        }
        @CustomType.Setter
        public Builder policyItemDailies(List<GetCloudBackupSchedulePolicyItemDaily> policyItemDailies) {
            this.policyItemDailies = Objects.requireNonNull(policyItemDailies);
            return this;
        }
        public Builder policyItemDailies(GetCloudBackupSchedulePolicyItemDaily... policyItemDailies) {
            return policyItemDailies(List.of(policyItemDailies));
        }
        @CustomType.Setter
        public Builder policyItemHourlies(List<GetCloudBackupSchedulePolicyItemHourly> policyItemHourlies) {
            this.policyItemHourlies = Objects.requireNonNull(policyItemHourlies);
            return this;
        }
        public Builder policyItemHourlies(GetCloudBackupSchedulePolicyItemHourly... policyItemHourlies) {
            return policyItemHourlies(List.of(policyItemHourlies));
        }
        @CustomType.Setter
        public Builder policyItemMonthlies(List<GetCloudBackupSchedulePolicyItemMonthly> policyItemMonthlies) {
            this.policyItemMonthlies = Objects.requireNonNull(policyItemMonthlies);
            return this;
        }
        public Builder policyItemMonthlies(GetCloudBackupSchedulePolicyItemMonthly... policyItemMonthlies) {
            return policyItemMonthlies(List.of(policyItemMonthlies));
        }
        @CustomType.Setter
        public Builder policyItemWeeklies(List<GetCloudBackupSchedulePolicyItemWeekly> policyItemWeeklies) {
            this.policyItemWeeklies = Objects.requireNonNull(policyItemWeeklies);
            return this;
        }
        public Builder policyItemWeeklies(GetCloudBackupSchedulePolicyItemWeekly... policyItemWeeklies) {
            return policyItemWeeklies(List.of(policyItemWeeklies));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder referenceHourOfDay(Integer referenceHourOfDay) {
            this.referenceHourOfDay = Objects.requireNonNull(referenceHourOfDay);
            return this;
        }
        @CustomType.Setter
        public Builder referenceMinuteOfHour(Integer referenceMinuteOfHour) {
            this.referenceMinuteOfHour = Objects.requireNonNull(referenceMinuteOfHour);
            return this;
        }
        @CustomType.Setter
        public Builder restoreWindowDays(Integer restoreWindowDays) {
            this.restoreWindowDays = Objects.requireNonNull(restoreWindowDays);
            return this;
        }
        @CustomType.Setter
        public Builder useOrgAndGroupNamesInExportPrefix(Boolean useOrgAndGroupNamesInExportPrefix) {
            this.useOrgAndGroupNamesInExportPrefix = Objects.requireNonNull(useOrgAndGroupNamesInExportPrefix);
            return this;
        }
        public GetCloudBackupScheduleResult build() {
            final var o = new GetCloudBackupScheduleResult();
            o.autoExportEnabled = autoExportEnabled;
            o.clusterId = clusterId;
            o.clusterName = clusterName;
            o.copySettings = copySettings;
            o.exports = exports;
            o.id = id;
            o.idPolicy = idPolicy;
            o.nextSnapshot = nextSnapshot;
            o.policyItemDailies = policyItemDailies;
            o.policyItemHourlies = policyItemHourlies;
            o.policyItemMonthlies = policyItemMonthlies;
            o.policyItemWeeklies = policyItemWeeklies;
            o.projectId = projectId;
            o.referenceHourOfDay = referenceHourOfDay;
            o.referenceMinuteOfHour = referenceMinuteOfHour;
            o.restoreWindowDays = restoreWindowDays;
            o.useOrgAndGroupNamesInExportPrefix = useOrgAndGroupNamesInExportPrefix;
            return o;
        }
    }
}
