// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class MaintenanceWindowProtectedHoursArgs extends com.pulumi.resources.ResourceArgs {

    public static final MaintenanceWindowProtectedHoursArgs Empty = new MaintenanceWindowProtectedHoursArgs();

    /**
     * Zero-based integer that represents the end hour of the day for the protected hours window.
     * 
     */
    @Import(name="endHourOfDay", required=true)
    private Output<Integer> endHourOfDay;

    /**
     * @return Zero-based integer that represents the end hour of the day for the protected hours window.
     * 
     */
    public Output<Integer> endHourOfDay() {
        return this.endHourOfDay;
    }

    /**
     * Zero-based integer that represents the beginning hour of the day for the protected hours window.
     * 
     */
    @Import(name="startHourOfDay", required=true)
    private Output<Integer> startHourOfDay;

    /**
     * @return Zero-based integer that represents the beginning hour of the day for the protected hours window.
     * 
     */
    public Output<Integer> startHourOfDay() {
        return this.startHourOfDay;
    }

    private MaintenanceWindowProtectedHoursArgs() {}

    private MaintenanceWindowProtectedHoursArgs(MaintenanceWindowProtectedHoursArgs $) {
        this.endHourOfDay = $.endHourOfDay;
        this.startHourOfDay = $.startHourOfDay;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MaintenanceWindowProtectedHoursArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MaintenanceWindowProtectedHoursArgs $;

        public Builder() {
            $ = new MaintenanceWindowProtectedHoursArgs();
        }

        public Builder(MaintenanceWindowProtectedHoursArgs defaults) {
            $ = new MaintenanceWindowProtectedHoursArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endHourOfDay Zero-based integer that represents the end hour of the day for the protected hours window.
         * 
         * @return builder
         * 
         */
        public Builder endHourOfDay(Output<Integer> endHourOfDay) {
            $.endHourOfDay = endHourOfDay;
            return this;
        }

        /**
         * @param endHourOfDay Zero-based integer that represents the end hour of the day for the protected hours window.
         * 
         * @return builder
         * 
         */
        public Builder endHourOfDay(Integer endHourOfDay) {
            return endHourOfDay(Output.of(endHourOfDay));
        }

        /**
         * @param startHourOfDay Zero-based integer that represents the beginning hour of the day for the protected hours window.
         * 
         * @return builder
         * 
         */
        public Builder startHourOfDay(Output<Integer> startHourOfDay) {
            $.startHourOfDay = startHourOfDay;
            return this;
        }

        /**
         * @param startHourOfDay Zero-based integer that represents the beginning hour of the day for the protected hours window.
         * 
         * @return builder
         * 
         */
        public Builder startHourOfDay(Integer startHourOfDay) {
            return startHourOfDay(Output.of(startHourOfDay));
        }

        public MaintenanceWindowProtectedHoursArgs build() {
            if ($.endHourOfDay == null) {
                throw new MissingRequiredPropertyException("MaintenanceWindowProtectedHoursArgs", "endHourOfDay");
            }
            if ($.startHourOfDay == null) {
                throw new MissingRequiredPropertyException("MaintenanceWindowProtectedHoursArgs", "startHourOfDay");
            }
            return $;
        }
    }

}
