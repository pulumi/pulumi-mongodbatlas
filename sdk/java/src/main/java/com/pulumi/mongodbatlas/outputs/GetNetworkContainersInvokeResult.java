// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetNetworkContainersResult;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNetworkContainersInvokeResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String projectId;
    /**
     * @return Cloud provider for this Network Peering connection. If omitted, Atlas sets this parameter to AWS.
     * 
     */
    private String providerName;
    /**
     * @return A list where each represents a Network Peering Container.
     * 
     */
    private List<GetNetworkContainersResult> results;

    private GetNetworkContainersInvokeResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return Cloud provider for this Network Peering connection. If omitted, Atlas sets this parameter to AWS.
     * 
     */
    public String providerName() {
        return this.providerName;
    }
    /**
     * @return A list where each represents a Network Peering Container.
     * 
     */
    public List<GetNetworkContainersResult> results() {
        return this.results;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkContainersInvokeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String projectId;
        private String providerName;
        private List<GetNetworkContainersResult> results;
        public Builder() {}
        public Builder(GetNetworkContainersInvokeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.projectId = defaults.projectId;
    	      this.providerName = defaults.providerName;
    	      this.results = defaults.results;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNetworkContainersInvokeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetNetworkContainersInvokeResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder providerName(String providerName) {
            if (providerName == null) {
              throw new MissingRequiredPropertyException("GetNetworkContainersInvokeResult", "providerName");
            }
            this.providerName = providerName;
            return this;
        }
        @CustomType.Setter
        public Builder results(List<GetNetworkContainersResult> results) {
            if (results == null) {
              throw new MissingRequiredPropertyException("GetNetworkContainersInvokeResult", "results");
            }
            this.results = results;
            return this;
        }
        public Builder results(GetNetworkContainersResult... results) {
            return results(List.of(results));
        }
        public GetNetworkContainersInvokeResult build() {
            final var _resultValue = new GetNetworkContainersInvokeResult();
            _resultValue.id = id;
            _resultValue.projectId = projectId;
            _resultValue.providerName = providerName;
            _resultValue.results = results;
            return _resultValue;
        }
    }
}
