// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPrivateLinkEndpointServiceEndpoint {
    /**
     * @return Forwarding rule that corresponds to the endpoint you created in GCP.
     * 
     */
    private String endpointName;
    /**
     * @return Private IP address of the network endpoint group you created in GCP.
     * 
     */
    private String ipAddress;
    /**
     * @return Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
     * 
     */
    private String serviceAttachmentName;
    /**
     * @return Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
     * 
     */
    private String status;

    private GetPrivateLinkEndpointServiceEndpoint() {}
    /**
     * @return Forwarding rule that corresponds to the endpoint you created in GCP.
     * 
     */
    public String endpointName() {
        return this.endpointName;
    }
    /**
     * @return Private IP address of the network endpoint group you created in GCP.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
     * 
     */
    public String serviceAttachmentName() {
        return this.serviceAttachmentName;
    }
    /**
     * @return Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrivateLinkEndpointServiceEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String endpointName;
        private String ipAddress;
        private String serviceAttachmentName;
        private String status;
        public Builder() {}
        public Builder(GetPrivateLinkEndpointServiceEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpointName = defaults.endpointName;
    	      this.ipAddress = defaults.ipAddress;
    	      this.serviceAttachmentName = defaults.serviceAttachmentName;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder endpointName(String endpointName) {
            if (endpointName == null) {
              throw new MissingRequiredPropertyException("GetPrivateLinkEndpointServiceEndpoint", "endpointName");
            }
            this.endpointName = endpointName;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            if (ipAddress == null) {
              throw new MissingRequiredPropertyException("GetPrivateLinkEndpointServiceEndpoint", "ipAddress");
            }
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAttachmentName(String serviceAttachmentName) {
            if (serviceAttachmentName == null) {
              throw new MissingRequiredPropertyException("GetPrivateLinkEndpointServiceEndpoint", "serviceAttachmentName");
            }
            this.serviceAttachmentName = serviceAttachmentName;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetPrivateLinkEndpointServiceEndpoint", "status");
            }
            this.status = status;
            return this;
        }
        public GetPrivateLinkEndpointServiceEndpoint build() {
            final var _resultValue = new GetPrivateLinkEndpointServiceEndpoint();
            _resultValue.endpointName = endpointName;
            _resultValue.ipAddress = ipAddress;
            _resultValue.serviceAttachmentName = serviceAttachmentName;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
