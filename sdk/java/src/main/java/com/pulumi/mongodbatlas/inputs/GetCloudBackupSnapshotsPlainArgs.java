// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudBackupSnapshotsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudBackupSnapshotsPlainArgs Empty = new GetCloudBackupSnapshotsPlainArgs();

    /**
     * The name of the Atlas cluster that contains the snapshot you want to retrieve.
     * 
     */
    @Import(name="clusterName", required=true)
    private String clusterName;

    /**
     * @return The name of the Atlas cluster that contains the snapshot you want to retrieve.
     * 
     */
    public String clusterName() {
        return this.clusterName;
    }

    /**
     * Number of items to return per page, up to a maximum of 500. Defaults to `100`.
     * 
     */
    @Import(name="itemsPerPage")
    private @Nullable Integer itemsPerPage;

    /**
     * @return Number of items to return per page, up to a maximum of 500. Defaults to `100`.
     * 
     */
    public Optional<Integer> itemsPerPage() {
        return Optional.ofNullable(this.itemsPerPage);
    }

    /**
     * The page to return. Defaults to `1`.
     * 
     */
    @Import(name="pageNum")
    private @Nullable Integer pageNum;

    /**
     * @return The page to return. Defaults to `1`.
     * 
     */
    public Optional<Integer> pageNum() {
        return Optional.ofNullable(this.pageNum);
    }

    @Import(name="projectId", required=true)
    private String projectId;

    public String projectId() {
        return this.projectId;
    }

    private GetCloudBackupSnapshotsPlainArgs() {}

    private GetCloudBackupSnapshotsPlainArgs(GetCloudBackupSnapshotsPlainArgs $) {
        this.clusterName = $.clusterName;
        this.itemsPerPage = $.itemsPerPage;
        this.pageNum = $.pageNum;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudBackupSnapshotsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudBackupSnapshotsPlainArgs $;

        public Builder() {
            $ = new GetCloudBackupSnapshotsPlainArgs();
        }

        public Builder(GetCloudBackupSnapshotsPlainArgs defaults) {
            $ = new GetCloudBackupSnapshotsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName The name of the Atlas cluster that contains the snapshot you want to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param itemsPerPage Number of items to return per page, up to a maximum of 500. Defaults to `100`.
         * 
         * @return builder
         * 
         */
        public Builder itemsPerPage(@Nullable Integer itemsPerPage) {
            $.itemsPerPage = itemsPerPage;
            return this;
        }

        /**
         * @param pageNum The page to return. Defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder pageNum(@Nullable Integer pageNum) {
            $.pageNum = pageNum;
            return this;
        }

        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetCloudBackupSnapshotsPlainArgs build() {
            if ($.clusterName == null) {
                throw new MissingRequiredPropertyException("GetCloudBackupSnapshotsPlainArgs", "clusterName");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetCloudBackupSnapshotsPlainArgs", "projectId");
            }
            return $;
        }
    }

}
