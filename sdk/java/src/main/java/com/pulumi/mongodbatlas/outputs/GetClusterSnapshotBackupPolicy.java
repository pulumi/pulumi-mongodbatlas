// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetClusterSnapshotBackupPolicyPolicy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterSnapshotBackupPolicy {
    private String clusterId;
    private String clusterName;
    private String nextSnapshot;
    private List<GetClusterSnapshotBackupPolicyPolicy> policies;
    private Integer referenceHourOfDay;
    private Integer referenceMinuteOfHour;
    private Integer restoreWindowDays;
    private Boolean updateSnapshots;

    private GetClusterSnapshotBackupPolicy() {}
    public String clusterId() {
        return this.clusterId;
    }
    public String clusterName() {
        return this.clusterName;
    }
    public String nextSnapshot() {
        return this.nextSnapshot;
    }
    public List<GetClusterSnapshotBackupPolicyPolicy> policies() {
        return this.policies;
    }
    public Integer referenceHourOfDay() {
        return this.referenceHourOfDay;
    }
    public Integer referenceMinuteOfHour() {
        return this.referenceMinuteOfHour;
    }
    public Integer restoreWindowDays() {
        return this.restoreWindowDays;
    }
    public Boolean updateSnapshots() {
        return this.updateSnapshots;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterSnapshotBackupPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterId;
        private String clusterName;
        private String nextSnapshot;
        private List<GetClusterSnapshotBackupPolicyPolicy> policies;
        private Integer referenceHourOfDay;
        private Integer referenceMinuteOfHour;
        private Integer restoreWindowDays;
        private Boolean updateSnapshots;
        public Builder() {}
        public Builder(GetClusterSnapshotBackupPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.clusterName = defaults.clusterName;
    	      this.nextSnapshot = defaults.nextSnapshot;
    	      this.policies = defaults.policies;
    	      this.referenceHourOfDay = defaults.referenceHourOfDay;
    	      this.referenceMinuteOfHour = defaults.referenceMinuteOfHour;
    	      this.restoreWindowDays = defaults.restoreWindowDays;
    	      this.updateSnapshots = defaults.updateSnapshots;
        }

        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetClusterSnapshotBackupPolicy", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            if (clusterName == null) {
              throw new MissingRequiredPropertyException("GetClusterSnapshotBackupPolicy", "clusterName");
            }
            this.clusterName = clusterName;
            return this;
        }
        @CustomType.Setter
        public Builder nextSnapshot(String nextSnapshot) {
            if (nextSnapshot == null) {
              throw new MissingRequiredPropertyException("GetClusterSnapshotBackupPolicy", "nextSnapshot");
            }
            this.nextSnapshot = nextSnapshot;
            return this;
        }
        @CustomType.Setter
        public Builder policies(List<GetClusterSnapshotBackupPolicyPolicy> policies) {
            if (policies == null) {
              throw new MissingRequiredPropertyException("GetClusterSnapshotBackupPolicy", "policies");
            }
            this.policies = policies;
            return this;
        }
        public Builder policies(GetClusterSnapshotBackupPolicyPolicy... policies) {
            return policies(List.of(policies));
        }
        @CustomType.Setter
        public Builder referenceHourOfDay(Integer referenceHourOfDay) {
            if (referenceHourOfDay == null) {
              throw new MissingRequiredPropertyException("GetClusterSnapshotBackupPolicy", "referenceHourOfDay");
            }
            this.referenceHourOfDay = referenceHourOfDay;
            return this;
        }
        @CustomType.Setter
        public Builder referenceMinuteOfHour(Integer referenceMinuteOfHour) {
            if (referenceMinuteOfHour == null) {
              throw new MissingRequiredPropertyException("GetClusterSnapshotBackupPolicy", "referenceMinuteOfHour");
            }
            this.referenceMinuteOfHour = referenceMinuteOfHour;
            return this;
        }
        @CustomType.Setter
        public Builder restoreWindowDays(Integer restoreWindowDays) {
            if (restoreWindowDays == null) {
              throw new MissingRequiredPropertyException("GetClusterSnapshotBackupPolicy", "restoreWindowDays");
            }
            this.restoreWindowDays = restoreWindowDays;
            return this;
        }
        @CustomType.Setter
        public Builder updateSnapshots(Boolean updateSnapshots) {
            if (updateSnapshots == null) {
              throw new MissingRequiredPropertyException("GetClusterSnapshotBackupPolicy", "updateSnapshots");
            }
            this.updateSnapshots = updateSnapshots;
            return this;
        }
        public GetClusterSnapshotBackupPolicy build() {
            final var _resultValue = new GetClusterSnapshotBackupPolicy();
            _resultValue.clusterId = clusterId;
            _resultValue.clusterName = clusterName;
            _resultValue.nextSnapshot = nextSnapshot;
            _resultValue.policies = policies;
            _resultValue.referenceHourOfDay = referenceHourOfDay;
            _resultValue.referenceMinuteOfHour = referenceMinuteOfHour;
            _resultValue.restoreWindowDays = restoreWindowDays;
            _resultValue.updateSnapshots = updateSnapshots;
            return _resultValue;
        }
    }
}
