// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.mongodbatlas.inputs.ClusterAdvancedConfigurationArgs;
import com.pulumi.mongodbatlas.inputs.ClusterBiConnectorConfigArgs;
import com.pulumi.mongodbatlas.inputs.ClusterLabelArgs;
import com.pulumi.mongodbatlas.inputs.ClusterReplicationSpecArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    @Import(name="advancedConfiguration")
    private @Nullable Output<ClusterAdvancedConfigurationArgs> advancedConfiguration;

    public Optional<Output<ClusterAdvancedConfigurationArgs>> advancedConfiguration() {
        return Optional.ofNullable(this.advancedConfiguration);
    }

    /**
     * Specifies whether cluster tier auto-scaling is enabled. The default is false.
     * - Set to `true` to enable cluster tier auto-scaling. If enabled, you must specify a value for `providerSettings.autoScaling.compute.maxInstanceSize`.
     * - Set to `false` to disable cluster tier auto-scaling.
     * 
     */
    @Import(name="autoScalingComputeEnabled")
    private @Nullable Output<Boolean> autoScalingComputeEnabled;

    /**
     * @return Specifies whether cluster tier auto-scaling is enabled. The default is false.
     * - Set to `true` to enable cluster tier auto-scaling. If enabled, you must specify a value for `providerSettings.autoScaling.compute.maxInstanceSize`.
     * - Set to `false` to disable cluster tier auto-scaling.
     * 
     */
    public Optional<Output<Boolean>> autoScalingComputeEnabled() {
        return Optional.ofNullable(this.autoScalingComputeEnabled);
    }

    /**
     * Set to `true` to enable the cluster tier to scale down. This option is only available if `autoScaling.compute.enabled` is `true`.
     * - If this option is enabled, you must specify a value for `providerSettings.autoScaling.compute.minInstanceSize`
     * 
     */
    @Import(name="autoScalingComputeScaleDownEnabled")
    private @Nullable Output<Boolean> autoScalingComputeScaleDownEnabled;

    /**
     * @return Set to `true` to enable the cluster tier to scale down. This option is only available if `autoScaling.compute.enabled` is `true`.
     * - If this option is enabled, you must specify a value for `providerSettings.autoScaling.compute.minInstanceSize`
     * 
     */
    public Optional<Output<Boolean>> autoScalingComputeScaleDownEnabled() {
        return Optional.ofNullable(this.autoScalingComputeScaleDownEnabled);
    }

    /**
     * Specifies whether disk auto-scaling is enabled. The default is true.
     * - Set to `true` to enable disk auto-scaling.
     * - Set to `false` to disable disk auto-scaling.
     * 
     */
    @Import(name="autoScalingDiskGbEnabled")
    private @Nullable Output<Boolean> autoScalingDiskGbEnabled;

    /**
     * @return Specifies whether disk auto-scaling is enabled. The default is true.
     * - Set to `true` to enable disk auto-scaling.
     * - Set to `false` to disable disk auto-scaling.
     * 
     */
    public Optional<Output<Boolean>> autoScalingDiskGbEnabled() {
        return Optional.ofNullable(this.autoScalingDiskGbEnabled);
    }

    /**
     * Cloud service provider on which the server for a multi-tenant cluster is provisioned.
     * 
     */
    @Import(name="backingProviderName")
    private @Nullable Output<String> backingProviderName;

    /**
     * @return Cloud service provider on which the server for a multi-tenant cluster is provisioned.
     * 
     */
    public Optional<Output<String>> backingProviderName() {
        return Optional.ofNullable(this.backingProviderName);
    }

    /**
     * Clusters running MongoDB FCV 4.2 or later and any new Atlas clusters of any type do not support this parameter
     * 
     */
    @Import(name="backupEnabled")
    private @Nullable Output<Boolean> backupEnabled;

    /**
     * @return Clusters running MongoDB FCV 4.2 or later and any new Atlas clusters of any type do not support this parameter
     * 
     */
    public Optional<Output<Boolean>> backupEnabled() {
        return Optional.ofNullable(this.backupEnabled);
    }

    /**
     * Specifies BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details. **DEPRECATED** Use `bi_connector_config` instead.
     * 
     * @deprecated
     * use bi_connector_config instead
     * 
     */
    @Deprecated /* use bi_connector_config instead */
    @Import(name="biConnector")
    private @Nullable Output<Map<String,String>> biConnector;

    /**
     * @return Specifies BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details. **DEPRECATED** Use `bi_connector_config` instead.
     * 
     * @deprecated
     * use bi_connector_config instead
     * 
     */
    @Deprecated /* use bi_connector_config instead */
    public Optional<Output<Map<String,String>>> biConnector() {
        return Optional.ofNullable(this.biConnector);
    }

    /**
     * Specifies BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
     * 
     */
    @Import(name="biConnectorConfig")
    private @Nullable Output<ClusterBiConnectorConfigArgs> biConnectorConfig;

    /**
     * @return Specifies BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
     * 
     */
    public Optional<Output<ClusterBiConnectorConfigArgs>> biConnectorConfig() {
        return Optional.ofNullable(this.biConnectorConfig);
    }

    /**
     * Flag indicating if the cluster uses Cloud Backup for backups.
     * 
     */
    @Import(name="cloudBackup")
    private @Nullable Output<Boolean> cloudBackup;

    /**
     * @return Flag indicating if the cluster uses Cloud Backup for backups.
     * 
     */
    public Optional<Output<Boolean>> cloudBackup() {
        return Optional.ofNullable(this.cloudBackup);
    }

    /**
     * Specifies the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
     * 
     */
    @Import(name="clusterType")
    private @Nullable Output<String> clusterType;

    /**
     * @return Specifies the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
     * 
     */
    public Optional<Output<String>> clusterType() {
        return Optional.ofNullable(this.clusterType);
    }

    /**
     * Capacity, in gigabytes, of the host’s root volume. Increase this number to add capacity, up to a maximum possible value of 4096 (i.e., 4 TB). This value must be a positive integer.
     * * The minimum disk size for dedicated clusters is 10GB for AWS and GCP. If you specify diskSizeGB with a lower disk size, Atlas defaults to the minimum disk size value.
     * * Note: The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require additional storage space beyond this limitation, consider upgrading your cluster to a higher tier.
     * * Cannot be used with clusters with local NVMe SSDs
     * * Cannot be used with Azure clusters
     * 
     */
    @Import(name="diskSizeGb")
    private @Nullable Output<Double> diskSizeGb;

    /**
     * @return Capacity, in gigabytes, of the host’s root volume. Increase this number to add capacity, up to a maximum possible value of 4096 (i.e., 4 TB). This value must be a positive integer.
     * * The minimum disk size for dedicated clusters is 10GB for AWS and GCP. If you specify diskSizeGB with a lower disk size, Atlas defaults to the minimum disk size value.
     * * Note: The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require additional storage space beyond this limitation, consider upgrading your cluster to a higher tier.
     * * Cannot be used with clusters with local NVMe SSDs
     * * Cannot be used with Azure clusters
     * 
     */
    public Optional<Output<Double>> diskSizeGb() {
        return Optional.ofNullable(this.diskSizeGb);
    }

    /**
     * Possible values are AWS, GCP, AZURE or NONE.  Only needed if you desire to manage the keys, see [Encryption at Rest using Customer Key Management](https://docs.atlas.mongodb.com/security-aws-kms/) for complete documentation.  You must configure encryption at rest for the Atlas project before enabling it on any cluster in the project. For complete documentation on configuring Encryption at Rest, see Encryption at Rest using Customer Key Management. Requires M10 or greater. and for legacy backups, backup_enabled, to be false or omitted. **Note: Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default**.
     * 
     */
    @Import(name="encryptionAtRestProvider")
    private @Nullable Output<String> encryptionAtRestProvider;

    /**
     * @return Possible values are AWS, GCP, AZURE or NONE.  Only needed if you desire to manage the keys, see [Encryption at Rest using Customer Key Management](https://docs.atlas.mongodb.com/security-aws-kms/) for complete documentation.  You must configure encryption at rest for the Atlas project before enabling it on any cluster in the project. For complete documentation on configuring Encryption at Rest, see Encryption at Rest using Customer Key Management. Requires M10 or greater. and for legacy backups, backup_enabled, to be false or omitted. **Note: Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default**.
     * 
     */
    public Optional<Output<String>> encryptionAtRestProvider() {
        return Optional.ofNullable(this.encryptionAtRestProvider);
    }

    @Import(name="labels")
    private @Nullable Output<List<ClusterLabelArgs>> labels;

    public Optional<Output<List<ClusterLabelArgs>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Version of the cluster to deploy. Atlas supports the following MongoDB versions for M10+ clusters: `4.2`, `4.4`, `5.0`, or `6.0`. If omitted, Atlas deploys a cluster that runs MongoDB 5.0. If `provider_instance_size_name`: `M0`, `M2` or `M5`, Atlas deploys MongoDB 5.0. Atlas always deploys the cluster with the latest stable release of the specified version. See [Release Notes](https://www.mongodb.com/docs/upcoming/release-notes/) for latest Current Stable Release.
     * 
     */
    @Import(name="mongoDbMajorVersion")
    private @Nullable Output<String> mongoDbMajorVersion;

    /**
     * @return Version of the cluster to deploy. Atlas supports the following MongoDB versions for M10+ clusters: `4.2`, `4.4`, `5.0`, or `6.0`. If omitted, Atlas deploys a cluster that runs MongoDB 5.0. If `provider_instance_size_name`: `M0`, `M2` or `M5`, Atlas deploys MongoDB 5.0. Atlas always deploys the cluster with the latest stable release of the specified version. See [Release Notes](https://www.mongodb.com/docs/upcoming/release-notes/) for latest Current Stable Release.
     * 
     */
    public Optional<Output<String>> mongoDbMajorVersion() {
        return Optional.ofNullable(this.mongoDbMajorVersion);
    }

    /**
     * Name of the cluster as it appears in Atlas. Once the cluster is created, its name cannot be changed. **WARNING** Changing the name will result in destruction of the existing cluster and the creation of a new cluster.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the cluster as it appears in Atlas. Once the cluster is created, its name cannot be changed. **WARNING** Changing the name will result in destruction of the existing cluster and the creation of a new cluster.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
     * 
     */
    @Import(name="numShards")
    private @Nullable Output<Integer> numShards;

    /**
     * @return Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
     * 
     */
    public Optional<Output<Integer>> numShards() {
        return Optional.ofNullable(this.numShards);
    }

    @Import(name="paused")
    private @Nullable Output<Boolean> paused;

    public Optional<Output<Boolean>> paused() {
        return Optional.ofNullable(this.paused);
    }

    /**
     * Flag that indicates if the cluster uses Continuous Cloud Backup. If set to true, cloud_backup must also be set to true.
     * 
     */
    @Import(name="pitEnabled")
    private @Nullable Output<Boolean> pitEnabled;

    /**
     * @return Flag that indicates if the cluster uses Continuous Cloud Backup. If set to true, cloud_backup must also be set to true.
     * 
     */
    public Optional<Output<Boolean>> pitEnabled() {
        return Optional.ofNullable(this.pitEnabled);
    }

    /**
     * The unique ID for the project to create the database user.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The unique ID for the project to create the database user.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Maximum instance size to which your cluster can automatically scale (e.g., M40). Required if `autoScaling.compute.enabled` is `true`.
     * 
     */
    @Import(name="providerAutoScalingComputeMaxInstanceSize")
    private @Nullable Output<String> providerAutoScalingComputeMaxInstanceSize;

    /**
     * @return Maximum instance size to which your cluster can automatically scale (e.g., M40). Required if `autoScaling.compute.enabled` is `true`.
     * 
     */
    public Optional<Output<String>> providerAutoScalingComputeMaxInstanceSize() {
        return Optional.ofNullable(this.providerAutoScalingComputeMaxInstanceSize);
    }

    /**
     * Minimum instance size to which your cluster can automatically scale (e.g., M10). Required if `autoScaling.compute.scaleDownEnabled` is `true`.
     * 
     */
    @Import(name="providerAutoScalingComputeMinInstanceSize")
    private @Nullable Output<String> providerAutoScalingComputeMinInstanceSize;

    /**
     * @return Minimum instance size to which your cluster can automatically scale (e.g., M10). Required if `autoScaling.compute.scaleDownEnabled` is `true`.
     * 
     */
    public Optional<Output<String>> providerAutoScalingComputeMinInstanceSize() {
        return Optional.ofNullable(this.providerAutoScalingComputeMinInstanceSize);
    }

    /**
     * Flag indicating if the cluster uses Cloud Backup for backups. **Deprecated** use `cloud_backup` instead.
     * 
     * @deprecated
     * This field is deprecated,please use cloud_backup instead
     * 
     */
    @Deprecated /* This field is deprecated,please use cloud_backup instead */
    @Import(name="providerBackupEnabled")
    private @Nullable Output<Boolean> providerBackupEnabled;

    /**
     * @return Flag indicating if the cluster uses Cloud Backup for backups. **Deprecated** use `cloud_backup` instead.
     * 
     * @deprecated
     * This field is deprecated,please use cloud_backup instead
     * 
     */
    @Deprecated /* This field is deprecated,please use cloud_backup instead */
    public Optional<Output<Boolean>> providerBackupEnabled() {
        return Optional.ofNullable(this.providerBackupEnabled);
    }

    /**
     * The maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected `provider_instance_size_name` and `disk_size_gb`.  This setting requires that `provider_instance_size_name` to be M30 or greater and cannot be used with clusters with local NVMe SSDs.  The default value for `provider_disk_iops` is the same as the cluster tier&#39;s Standard IOPS value, as viewable in the Atlas console.  It is used in cases where a higher number of IOPS is needed and possible.  If a value is submitted that is lower or equal to the default IOPS value for the cluster tier Atlas ignores the requested value and uses the default.  More details available under the providerSettings.diskIOPS parameter: [MongoDB API Clusters](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/)
     * * You do not need to configure IOPS for a STANDARD disk configuration but only for a PROVISIONED configuration.
     * 
     */
    @Import(name="providerDiskIops")
    private @Nullable Output<Integer> providerDiskIops;

    /**
     * @return The maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected `provider_instance_size_name` and `disk_size_gb`.  This setting requires that `provider_instance_size_name` to be M30 or greater and cannot be used with clusters with local NVMe SSDs.  The default value for `provider_disk_iops` is the same as the cluster tier&#39;s Standard IOPS value, as viewable in the Atlas console.  It is used in cases where a higher number of IOPS is needed and possible.  If a value is submitted that is lower or equal to the default IOPS value for the cluster tier Atlas ignores the requested value and uses the default.  More details available under the providerSettings.diskIOPS parameter: [MongoDB API Clusters](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/)
     * * You do not need to configure IOPS for a STANDARD disk configuration but only for a PROVISIONED configuration.
     * 
     */
    public Optional<Output<Integer>> providerDiskIops() {
        return Optional.ofNullable(this.providerDiskIops);
    }

    /**
     * Azure disk type of the server’s root volume. If omitted, Atlas uses the default disk type for the selected providerSettings.instanceSizeName.  Example disk types and associated storage sizes: P4 - 32GB, P6 - 64GB, P10 - 128GB, P15 - 256GB, P20 - 512GB, P30 - 1024GB, P40 - 2048GB, P50 - 4095GB.  More information and the most update to date disk types/storage sizes can be located at https://docs.atlas.mongodb.com/reference/api/clusters-create-one/.
     * 
     */
    @Import(name="providerDiskTypeName")
    private @Nullable Output<String> providerDiskTypeName;

    /**
     * @return Azure disk type of the server’s root volume. If omitted, Atlas uses the default disk type for the selected providerSettings.instanceSizeName.  Example disk types and associated storage sizes: P4 - 32GB, P6 - 64GB, P10 - 128GB, P15 - 256GB, P20 - 512GB, P30 - 1024GB, P40 - 2048GB, P50 - 4095GB.  More information and the most update to date disk types/storage sizes can be located at https://docs.atlas.mongodb.com/reference/api/clusters-create-one/.
     * 
     */
    public Optional<Output<String>> providerDiskTypeName() {
        return Optional.ofNullable(this.providerDiskTypeName);
    }

    /**
     * **(Deprecated) The Flag is always true.** Flag that indicates whether the Amazon EBS encryption feature encrypts the host&#39;s root volume for both data at rest within the volume and for data moving between the volume and the cluster. Note: This setting is always enabled for clusters with local NVMe SSDs. **Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default.**.
     * 
     * @deprecated
     * All EBS volumes are encrypted by default, the option to disable encryption has been removed
     * 
     */
    @Deprecated /* All EBS volumes are encrypted by default, the option to disable encryption has been removed */
    @Import(name="providerEncryptEbsVolume")
    private @Nullable Output<Boolean> providerEncryptEbsVolume;

    /**
     * @return **(Deprecated) The Flag is always true.** Flag that indicates whether the Amazon EBS encryption feature encrypts the host&#39;s root volume for both data at rest within the volume and for data moving between the volume and the cluster. Note: This setting is always enabled for clusters with local NVMe SSDs. **Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default.**.
     * 
     * @deprecated
     * All EBS volumes are encrypted by default, the option to disable encryption has been removed
     * 
     */
    @Deprecated /* All EBS volumes are encrypted by default, the option to disable encryption has been removed */
    public Optional<Output<Boolean>> providerEncryptEbsVolume() {
        return Optional.ofNullable(this.providerEncryptEbsVolume);
    }

    /**
     * Atlas provides different instance sizes, each with a default storage capacity and RAM size. The instance size you select is used for all the data-bearing servers in your cluster. See [Create a Cluster](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/) `providerSettings.instanceSizeName` for valid values and default resources.
     * 
     */
    @Import(name="providerInstanceSizeName", required=true)
    private Output<String> providerInstanceSizeName;

    /**
     * @return Atlas provides different instance sizes, each with a default storage capacity and RAM size. The instance size you select is used for all the data-bearing servers in your cluster. See [Create a Cluster](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/) `providerSettings.instanceSizeName` for valid values and default resources.
     * 
     */
    public Output<String> providerInstanceSizeName() {
        return this.providerInstanceSizeName;
    }

    /**
     * Cloud service provider on which the servers are provisioned.
     * 
     */
    @Import(name="providerName", required=true)
    private Output<String> providerName;

    /**
     * @return Cloud service provider on which the servers are provisioned.
     * 
     */
    public Output<String> providerName() {
        return this.providerName;
    }

    /**
     * Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     * Do not specify this field when creating a multi-region cluster using the replicationSpec document or a Global Cluster with the replicationSpecs array.
     * 
     */
    @Import(name="providerRegionName")
    private @Nullable Output<String> providerRegionName;

    /**
     * @return Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     * Do not specify this field when creating a multi-region cluster using the replicationSpec document or a Global Cluster with the replicationSpecs array.
     * 
     */
    public Optional<Output<String>> providerRegionName() {
        return Optional.ofNullable(this.providerRegionName);
    }

    /**
     * The type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.  `PROVISIONED` is ONLY required if setting IOPS higher than the default instance IOPS.
     * 
     */
    @Import(name="providerVolumeType")
    private @Nullable Output<String> providerVolumeType;

    /**
     * @return The type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.  `PROVISIONED` is ONLY required if setting IOPS higher than the default instance IOPS.
     * 
     */
    public Optional<Output<String>> providerVolumeType() {
        return Optional.ofNullable(this.providerVolumeType);
    }

    /**
     * Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
     * 
     */
    @Import(name="replicationFactor")
    private @Nullable Output<Integer> replicationFactor;

    /**
     * @return Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
     * 
     */
    public Optional<Output<Integer>> replicationFactor() {
        return Optional.ofNullable(this.replicationFactor);
    }

    /**
     * Configuration for cluster regions.  See Replication Spec below for more details.
     * 
     */
    @Import(name="replicationSpecs")
    private @Nullable Output<List<ClusterReplicationSpecArgs>> replicationSpecs;

    /**
     * @return Configuration for cluster regions.  See Replication Spec below for more details.
     * 
     */
    public Optional<Output<List<ClusterReplicationSpecArgs>>> replicationSpecs() {
        return Optional.ofNullable(this.replicationSpecs);
    }

    /**
     * Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won&#39;t delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
     * 
     */
    @Import(name="terminationProtectionEnabled")
    private @Nullable Output<Boolean> terminationProtectionEnabled;

    /**
     * @return Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won&#39;t delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
     * 
     */
    public Optional<Output<Boolean>> terminationProtectionEnabled() {
        return Optional.ofNullable(this.terminationProtectionEnabled);
    }

    /**
     * Release cadence that Atlas uses for this cluster. This parameter defaults to `LTS`. If you set this field to `CONTINUOUS`, you must omit the `mongo_db_major_version` field. Atlas accepts:
     * 
     */
    @Import(name="versionReleaseSystem")
    private @Nullable Output<String> versionReleaseSystem;

    /**
     * @return Release cadence that Atlas uses for this cluster. This parameter defaults to `LTS`. If you set this field to `CONTINUOUS`, you must omit the `mongo_db_major_version` field. Atlas accepts:
     * 
     */
    public Optional<Output<String>> versionReleaseSystem() {
        return Optional.ofNullable(this.versionReleaseSystem);
    }

    private ClusterArgs() {}

    private ClusterArgs(ClusterArgs $) {
        this.advancedConfiguration = $.advancedConfiguration;
        this.autoScalingComputeEnabled = $.autoScalingComputeEnabled;
        this.autoScalingComputeScaleDownEnabled = $.autoScalingComputeScaleDownEnabled;
        this.autoScalingDiskGbEnabled = $.autoScalingDiskGbEnabled;
        this.backingProviderName = $.backingProviderName;
        this.backupEnabled = $.backupEnabled;
        this.biConnector = $.biConnector;
        this.biConnectorConfig = $.biConnectorConfig;
        this.cloudBackup = $.cloudBackup;
        this.clusterType = $.clusterType;
        this.diskSizeGb = $.diskSizeGb;
        this.encryptionAtRestProvider = $.encryptionAtRestProvider;
        this.labels = $.labels;
        this.mongoDbMajorVersion = $.mongoDbMajorVersion;
        this.name = $.name;
        this.numShards = $.numShards;
        this.paused = $.paused;
        this.pitEnabled = $.pitEnabled;
        this.projectId = $.projectId;
        this.providerAutoScalingComputeMaxInstanceSize = $.providerAutoScalingComputeMaxInstanceSize;
        this.providerAutoScalingComputeMinInstanceSize = $.providerAutoScalingComputeMinInstanceSize;
        this.providerBackupEnabled = $.providerBackupEnabled;
        this.providerDiskIops = $.providerDiskIops;
        this.providerDiskTypeName = $.providerDiskTypeName;
        this.providerEncryptEbsVolume = $.providerEncryptEbsVolume;
        this.providerInstanceSizeName = $.providerInstanceSizeName;
        this.providerName = $.providerName;
        this.providerRegionName = $.providerRegionName;
        this.providerVolumeType = $.providerVolumeType;
        this.replicationFactor = $.replicationFactor;
        this.replicationSpecs = $.replicationSpecs;
        this.terminationProtectionEnabled = $.terminationProtectionEnabled;
        this.versionReleaseSystem = $.versionReleaseSystem;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterArgs $;

        public Builder() {
            $ = new ClusterArgs();
        }

        public Builder(ClusterArgs defaults) {
            $ = new ClusterArgs(Objects.requireNonNull(defaults));
        }

        public Builder advancedConfiguration(@Nullable Output<ClusterAdvancedConfigurationArgs> advancedConfiguration) {
            $.advancedConfiguration = advancedConfiguration;
            return this;
        }

        public Builder advancedConfiguration(ClusterAdvancedConfigurationArgs advancedConfiguration) {
            return advancedConfiguration(Output.of(advancedConfiguration));
        }

        /**
         * @param autoScalingComputeEnabled Specifies whether cluster tier auto-scaling is enabled. The default is false.
         * - Set to `true` to enable cluster tier auto-scaling. If enabled, you must specify a value for `providerSettings.autoScaling.compute.maxInstanceSize`.
         * - Set to `false` to disable cluster tier auto-scaling.
         * 
         * @return builder
         * 
         */
        public Builder autoScalingComputeEnabled(@Nullable Output<Boolean> autoScalingComputeEnabled) {
            $.autoScalingComputeEnabled = autoScalingComputeEnabled;
            return this;
        }

        /**
         * @param autoScalingComputeEnabled Specifies whether cluster tier auto-scaling is enabled. The default is false.
         * - Set to `true` to enable cluster tier auto-scaling. If enabled, you must specify a value for `providerSettings.autoScaling.compute.maxInstanceSize`.
         * - Set to `false` to disable cluster tier auto-scaling.
         * 
         * @return builder
         * 
         */
        public Builder autoScalingComputeEnabled(Boolean autoScalingComputeEnabled) {
            return autoScalingComputeEnabled(Output.of(autoScalingComputeEnabled));
        }

        /**
         * @param autoScalingComputeScaleDownEnabled Set to `true` to enable the cluster tier to scale down. This option is only available if `autoScaling.compute.enabled` is `true`.
         * - If this option is enabled, you must specify a value for `providerSettings.autoScaling.compute.minInstanceSize`
         * 
         * @return builder
         * 
         */
        public Builder autoScalingComputeScaleDownEnabled(@Nullable Output<Boolean> autoScalingComputeScaleDownEnabled) {
            $.autoScalingComputeScaleDownEnabled = autoScalingComputeScaleDownEnabled;
            return this;
        }

        /**
         * @param autoScalingComputeScaleDownEnabled Set to `true` to enable the cluster tier to scale down. This option is only available if `autoScaling.compute.enabled` is `true`.
         * - If this option is enabled, you must specify a value for `providerSettings.autoScaling.compute.minInstanceSize`
         * 
         * @return builder
         * 
         */
        public Builder autoScalingComputeScaleDownEnabled(Boolean autoScalingComputeScaleDownEnabled) {
            return autoScalingComputeScaleDownEnabled(Output.of(autoScalingComputeScaleDownEnabled));
        }

        /**
         * @param autoScalingDiskGbEnabled Specifies whether disk auto-scaling is enabled. The default is true.
         * - Set to `true` to enable disk auto-scaling.
         * - Set to `false` to disable disk auto-scaling.
         * 
         * @return builder
         * 
         */
        public Builder autoScalingDiskGbEnabled(@Nullable Output<Boolean> autoScalingDiskGbEnabled) {
            $.autoScalingDiskGbEnabled = autoScalingDiskGbEnabled;
            return this;
        }

        /**
         * @param autoScalingDiskGbEnabled Specifies whether disk auto-scaling is enabled. The default is true.
         * - Set to `true` to enable disk auto-scaling.
         * - Set to `false` to disable disk auto-scaling.
         * 
         * @return builder
         * 
         */
        public Builder autoScalingDiskGbEnabled(Boolean autoScalingDiskGbEnabled) {
            return autoScalingDiskGbEnabled(Output.of(autoScalingDiskGbEnabled));
        }

        /**
         * @param backingProviderName Cloud service provider on which the server for a multi-tenant cluster is provisioned.
         * 
         * @return builder
         * 
         */
        public Builder backingProviderName(@Nullable Output<String> backingProviderName) {
            $.backingProviderName = backingProviderName;
            return this;
        }

        /**
         * @param backingProviderName Cloud service provider on which the server for a multi-tenant cluster is provisioned.
         * 
         * @return builder
         * 
         */
        public Builder backingProviderName(String backingProviderName) {
            return backingProviderName(Output.of(backingProviderName));
        }

        /**
         * @param backupEnabled Clusters running MongoDB FCV 4.2 or later and any new Atlas clusters of any type do not support this parameter
         * 
         * @return builder
         * 
         */
        public Builder backupEnabled(@Nullable Output<Boolean> backupEnabled) {
            $.backupEnabled = backupEnabled;
            return this;
        }

        /**
         * @param backupEnabled Clusters running MongoDB FCV 4.2 or later and any new Atlas clusters of any type do not support this parameter
         * 
         * @return builder
         * 
         */
        public Builder backupEnabled(Boolean backupEnabled) {
            return backupEnabled(Output.of(backupEnabled));
        }

        /**
         * @param biConnector Specifies BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details. **DEPRECATED** Use `bi_connector_config` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * use bi_connector_config instead
         * 
         */
        @Deprecated /* use bi_connector_config instead */
        public Builder biConnector(@Nullable Output<Map<String,String>> biConnector) {
            $.biConnector = biConnector;
            return this;
        }

        /**
         * @param biConnector Specifies BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details. **DEPRECATED** Use `bi_connector_config` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * use bi_connector_config instead
         * 
         */
        @Deprecated /* use bi_connector_config instead */
        public Builder biConnector(Map<String,String> biConnector) {
            return biConnector(Output.of(biConnector));
        }

        /**
         * @param biConnectorConfig Specifies BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
         * 
         * @return builder
         * 
         */
        public Builder biConnectorConfig(@Nullable Output<ClusterBiConnectorConfigArgs> biConnectorConfig) {
            $.biConnectorConfig = biConnectorConfig;
            return this;
        }

        /**
         * @param biConnectorConfig Specifies BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
         * 
         * @return builder
         * 
         */
        public Builder biConnectorConfig(ClusterBiConnectorConfigArgs biConnectorConfig) {
            return biConnectorConfig(Output.of(biConnectorConfig));
        }

        /**
         * @param cloudBackup Flag indicating if the cluster uses Cloud Backup for backups.
         * 
         * @return builder
         * 
         */
        public Builder cloudBackup(@Nullable Output<Boolean> cloudBackup) {
            $.cloudBackup = cloudBackup;
            return this;
        }

        /**
         * @param cloudBackup Flag indicating if the cluster uses Cloud Backup for backups.
         * 
         * @return builder
         * 
         */
        public Builder cloudBackup(Boolean cloudBackup) {
            return cloudBackup(Output.of(cloudBackup));
        }

        /**
         * @param clusterType Specifies the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
         * 
         * @return builder
         * 
         */
        public Builder clusterType(@Nullable Output<String> clusterType) {
            $.clusterType = clusterType;
            return this;
        }

        /**
         * @param clusterType Specifies the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
         * 
         * @return builder
         * 
         */
        public Builder clusterType(String clusterType) {
            return clusterType(Output.of(clusterType));
        }

        /**
         * @param diskSizeGb Capacity, in gigabytes, of the host’s root volume. Increase this number to add capacity, up to a maximum possible value of 4096 (i.e., 4 TB). This value must be a positive integer.
         * * The minimum disk size for dedicated clusters is 10GB for AWS and GCP. If you specify diskSizeGB with a lower disk size, Atlas defaults to the minimum disk size value.
         * * Note: The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require additional storage space beyond this limitation, consider upgrading your cluster to a higher tier.
         * * Cannot be used with clusters with local NVMe SSDs
         * * Cannot be used with Azure clusters
         * 
         * @return builder
         * 
         */
        public Builder diskSizeGb(@Nullable Output<Double> diskSizeGb) {
            $.diskSizeGb = diskSizeGb;
            return this;
        }

        /**
         * @param diskSizeGb Capacity, in gigabytes, of the host’s root volume. Increase this number to add capacity, up to a maximum possible value of 4096 (i.e., 4 TB). This value must be a positive integer.
         * * The minimum disk size for dedicated clusters is 10GB for AWS and GCP. If you specify diskSizeGB with a lower disk size, Atlas defaults to the minimum disk size value.
         * * Note: The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require additional storage space beyond this limitation, consider upgrading your cluster to a higher tier.
         * * Cannot be used with clusters with local NVMe SSDs
         * * Cannot be used with Azure clusters
         * 
         * @return builder
         * 
         */
        public Builder diskSizeGb(Double diskSizeGb) {
            return diskSizeGb(Output.of(diskSizeGb));
        }

        /**
         * @param encryptionAtRestProvider Possible values are AWS, GCP, AZURE or NONE.  Only needed if you desire to manage the keys, see [Encryption at Rest using Customer Key Management](https://docs.atlas.mongodb.com/security-aws-kms/) for complete documentation.  You must configure encryption at rest for the Atlas project before enabling it on any cluster in the project. For complete documentation on configuring Encryption at Rest, see Encryption at Rest using Customer Key Management. Requires M10 or greater. and for legacy backups, backup_enabled, to be false or omitted. **Note: Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default**.
         * 
         * @return builder
         * 
         */
        public Builder encryptionAtRestProvider(@Nullable Output<String> encryptionAtRestProvider) {
            $.encryptionAtRestProvider = encryptionAtRestProvider;
            return this;
        }

        /**
         * @param encryptionAtRestProvider Possible values are AWS, GCP, AZURE or NONE.  Only needed if you desire to manage the keys, see [Encryption at Rest using Customer Key Management](https://docs.atlas.mongodb.com/security-aws-kms/) for complete documentation.  You must configure encryption at rest for the Atlas project before enabling it on any cluster in the project. For complete documentation on configuring Encryption at Rest, see Encryption at Rest using Customer Key Management. Requires M10 or greater. and for legacy backups, backup_enabled, to be false or omitted. **Note: Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default**.
         * 
         * @return builder
         * 
         */
        public Builder encryptionAtRestProvider(String encryptionAtRestProvider) {
            return encryptionAtRestProvider(Output.of(encryptionAtRestProvider));
        }

        public Builder labels(@Nullable Output<List<ClusterLabelArgs>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(List<ClusterLabelArgs> labels) {
            return labels(Output.of(labels));
        }

        public Builder labels(ClusterLabelArgs... labels) {
            return labels(List.of(labels));
        }

        /**
         * @param mongoDbMajorVersion Version of the cluster to deploy. Atlas supports the following MongoDB versions for M10+ clusters: `4.2`, `4.4`, `5.0`, or `6.0`. If omitted, Atlas deploys a cluster that runs MongoDB 5.0. If `provider_instance_size_name`: `M0`, `M2` or `M5`, Atlas deploys MongoDB 5.0. Atlas always deploys the cluster with the latest stable release of the specified version. See [Release Notes](https://www.mongodb.com/docs/upcoming/release-notes/) for latest Current Stable Release.
         * 
         * @return builder
         * 
         */
        public Builder mongoDbMajorVersion(@Nullable Output<String> mongoDbMajorVersion) {
            $.mongoDbMajorVersion = mongoDbMajorVersion;
            return this;
        }

        /**
         * @param mongoDbMajorVersion Version of the cluster to deploy. Atlas supports the following MongoDB versions for M10+ clusters: `4.2`, `4.4`, `5.0`, or `6.0`. If omitted, Atlas deploys a cluster that runs MongoDB 5.0. If `provider_instance_size_name`: `M0`, `M2` or `M5`, Atlas deploys MongoDB 5.0. Atlas always deploys the cluster with the latest stable release of the specified version. See [Release Notes](https://www.mongodb.com/docs/upcoming/release-notes/) for latest Current Stable Release.
         * 
         * @return builder
         * 
         */
        public Builder mongoDbMajorVersion(String mongoDbMajorVersion) {
            return mongoDbMajorVersion(Output.of(mongoDbMajorVersion));
        }

        /**
         * @param name Name of the cluster as it appears in Atlas. Once the cluster is created, its name cannot be changed. **WARNING** Changing the name will result in destruction of the existing cluster and the creation of a new cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the cluster as it appears in Atlas. Once the cluster is created, its name cannot be changed. **WARNING** Changing the name will result in destruction of the existing cluster and the creation of a new cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param numShards Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
         * 
         * @return builder
         * 
         */
        public Builder numShards(@Nullable Output<Integer> numShards) {
            $.numShards = numShards;
            return this;
        }

        /**
         * @param numShards Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
         * 
         * @return builder
         * 
         */
        public Builder numShards(Integer numShards) {
            return numShards(Output.of(numShards));
        }

        public Builder paused(@Nullable Output<Boolean> paused) {
            $.paused = paused;
            return this;
        }

        public Builder paused(Boolean paused) {
            return paused(Output.of(paused));
        }

        /**
         * @param pitEnabled Flag that indicates if the cluster uses Continuous Cloud Backup. If set to true, cloud_backup must also be set to true.
         * 
         * @return builder
         * 
         */
        public Builder pitEnabled(@Nullable Output<Boolean> pitEnabled) {
            $.pitEnabled = pitEnabled;
            return this;
        }

        /**
         * @param pitEnabled Flag that indicates if the cluster uses Continuous Cloud Backup. If set to true, cloud_backup must also be set to true.
         * 
         * @return builder
         * 
         */
        public Builder pitEnabled(Boolean pitEnabled) {
            return pitEnabled(Output.of(pitEnabled));
        }

        /**
         * @param projectId The unique ID for the project to create the database user.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The unique ID for the project to create the database user.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param providerAutoScalingComputeMaxInstanceSize Maximum instance size to which your cluster can automatically scale (e.g., M40). Required if `autoScaling.compute.enabled` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder providerAutoScalingComputeMaxInstanceSize(@Nullable Output<String> providerAutoScalingComputeMaxInstanceSize) {
            $.providerAutoScalingComputeMaxInstanceSize = providerAutoScalingComputeMaxInstanceSize;
            return this;
        }

        /**
         * @param providerAutoScalingComputeMaxInstanceSize Maximum instance size to which your cluster can automatically scale (e.g., M40). Required if `autoScaling.compute.enabled` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder providerAutoScalingComputeMaxInstanceSize(String providerAutoScalingComputeMaxInstanceSize) {
            return providerAutoScalingComputeMaxInstanceSize(Output.of(providerAutoScalingComputeMaxInstanceSize));
        }

        /**
         * @param providerAutoScalingComputeMinInstanceSize Minimum instance size to which your cluster can automatically scale (e.g., M10). Required if `autoScaling.compute.scaleDownEnabled` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder providerAutoScalingComputeMinInstanceSize(@Nullable Output<String> providerAutoScalingComputeMinInstanceSize) {
            $.providerAutoScalingComputeMinInstanceSize = providerAutoScalingComputeMinInstanceSize;
            return this;
        }

        /**
         * @param providerAutoScalingComputeMinInstanceSize Minimum instance size to which your cluster can automatically scale (e.g., M10). Required if `autoScaling.compute.scaleDownEnabled` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder providerAutoScalingComputeMinInstanceSize(String providerAutoScalingComputeMinInstanceSize) {
            return providerAutoScalingComputeMinInstanceSize(Output.of(providerAutoScalingComputeMinInstanceSize));
        }

        /**
         * @param providerBackupEnabled Flag indicating if the cluster uses Cloud Backup for backups. **Deprecated** use `cloud_backup` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * This field is deprecated,please use cloud_backup instead
         * 
         */
        @Deprecated /* This field is deprecated,please use cloud_backup instead */
        public Builder providerBackupEnabled(@Nullable Output<Boolean> providerBackupEnabled) {
            $.providerBackupEnabled = providerBackupEnabled;
            return this;
        }

        /**
         * @param providerBackupEnabled Flag indicating if the cluster uses Cloud Backup for backups. **Deprecated** use `cloud_backup` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * This field is deprecated,please use cloud_backup instead
         * 
         */
        @Deprecated /* This field is deprecated,please use cloud_backup instead */
        public Builder providerBackupEnabled(Boolean providerBackupEnabled) {
            return providerBackupEnabled(Output.of(providerBackupEnabled));
        }

        /**
         * @param providerDiskIops The maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected `provider_instance_size_name` and `disk_size_gb`.  This setting requires that `provider_instance_size_name` to be M30 or greater and cannot be used with clusters with local NVMe SSDs.  The default value for `provider_disk_iops` is the same as the cluster tier&#39;s Standard IOPS value, as viewable in the Atlas console.  It is used in cases where a higher number of IOPS is needed and possible.  If a value is submitted that is lower or equal to the default IOPS value for the cluster tier Atlas ignores the requested value and uses the default.  More details available under the providerSettings.diskIOPS parameter: [MongoDB API Clusters](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/)
         * * You do not need to configure IOPS for a STANDARD disk configuration but only for a PROVISIONED configuration.
         * 
         * @return builder
         * 
         */
        public Builder providerDiskIops(@Nullable Output<Integer> providerDiskIops) {
            $.providerDiskIops = providerDiskIops;
            return this;
        }

        /**
         * @param providerDiskIops The maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected `provider_instance_size_name` and `disk_size_gb`.  This setting requires that `provider_instance_size_name` to be M30 or greater and cannot be used with clusters with local NVMe SSDs.  The default value for `provider_disk_iops` is the same as the cluster tier&#39;s Standard IOPS value, as viewable in the Atlas console.  It is used in cases where a higher number of IOPS is needed and possible.  If a value is submitted that is lower or equal to the default IOPS value for the cluster tier Atlas ignores the requested value and uses the default.  More details available under the providerSettings.diskIOPS parameter: [MongoDB API Clusters](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/)
         * * You do not need to configure IOPS for a STANDARD disk configuration but only for a PROVISIONED configuration.
         * 
         * @return builder
         * 
         */
        public Builder providerDiskIops(Integer providerDiskIops) {
            return providerDiskIops(Output.of(providerDiskIops));
        }

        /**
         * @param providerDiskTypeName Azure disk type of the server’s root volume. If omitted, Atlas uses the default disk type for the selected providerSettings.instanceSizeName.  Example disk types and associated storage sizes: P4 - 32GB, P6 - 64GB, P10 - 128GB, P15 - 256GB, P20 - 512GB, P30 - 1024GB, P40 - 2048GB, P50 - 4095GB.  More information and the most update to date disk types/storage sizes can be located at https://docs.atlas.mongodb.com/reference/api/clusters-create-one/.
         * 
         * @return builder
         * 
         */
        public Builder providerDiskTypeName(@Nullable Output<String> providerDiskTypeName) {
            $.providerDiskTypeName = providerDiskTypeName;
            return this;
        }

        /**
         * @param providerDiskTypeName Azure disk type of the server’s root volume. If omitted, Atlas uses the default disk type for the selected providerSettings.instanceSizeName.  Example disk types and associated storage sizes: P4 - 32GB, P6 - 64GB, P10 - 128GB, P15 - 256GB, P20 - 512GB, P30 - 1024GB, P40 - 2048GB, P50 - 4095GB.  More information and the most update to date disk types/storage sizes can be located at https://docs.atlas.mongodb.com/reference/api/clusters-create-one/.
         * 
         * @return builder
         * 
         */
        public Builder providerDiskTypeName(String providerDiskTypeName) {
            return providerDiskTypeName(Output.of(providerDiskTypeName));
        }

        /**
         * @param providerEncryptEbsVolume **(Deprecated) The Flag is always true.** Flag that indicates whether the Amazon EBS encryption feature encrypts the host&#39;s root volume for both data at rest within the volume and for data moving between the volume and the cluster. Note: This setting is always enabled for clusters with local NVMe SSDs. **Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default.**.
         * 
         * @return builder
         * 
         * @deprecated
         * All EBS volumes are encrypted by default, the option to disable encryption has been removed
         * 
         */
        @Deprecated /* All EBS volumes are encrypted by default, the option to disable encryption has been removed */
        public Builder providerEncryptEbsVolume(@Nullable Output<Boolean> providerEncryptEbsVolume) {
            $.providerEncryptEbsVolume = providerEncryptEbsVolume;
            return this;
        }

        /**
         * @param providerEncryptEbsVolume **(Deprecated) The Flag is always true.** Flag that indicates whether the Amazon EBS encryption feature encrypts the host&#39;s root volume for both data at rest within the volume and for data moving between the volume and the cluster. Note: This setting is always enabled for clusters with local NVMe SSDs. **Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default.**.
         * 
         * @return builder
         * 
         * @deprecated
         * All EBS volumes are encrypted by default, the option to disable encryption has been removed
         * 
         */
        @Deprecated /* All EBS volumes are encrypted by default, the option to disable encryption has been removed */
        public Builder providerEncryptEbsVolume(Boolean providerEncryptEbsVolume) {
            return providerEncryptEbsVolume(Output.of(providerEncryptEbsVolume));
        }

        /**
         * @param providerInstanceSizeName Atlas provides different instance sizes, each with a default storage capacity and RAM size. The instance size you select is used for all the data-bearing servers in your cluster. See [Create a Cluster](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/) `providerSettings.instanceSizeName` for valid values and default resources.
         * 
         * @return builder
         * 
         */
        public Builder providerInstanceSizeName(Output<String> providerInstanceSizeName) {
            $.providerInstanceSizeName = providerInstanceSizeName;
            return this;
        }

        /**
         * @param providerInstanceSizeName Atlas provides different instance sizes, each with a default storage capacity and RAM size. The instance size you select is used for all the data-bearing servers in your cluster. See [Create a Cluster](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/) `providerSettings.instanceSizeName` for valid values and default resources.
         * 
         * @return builder
         * 
         */
        public Builder providerInstanceSizeName(String providerInstanceSizeName) {
            return providerInstanceSizeName(Output.of(providerInstanceSizeName));
        }

        /**
         * @param providerName Cloud service provider on which the servers are provisioned.
         * 
         * @return builder
         * 
         */
        public Builder providerName(Output<String> providerName) {
            $.providerName = providerName;
            return this;
        }

        /**
         * @param providerName Cloud service provider on which the servers are provisioned.
         * 
         * @return builder
         * 
         */
        public Builder providerName(String providerName) {
            return providerName(Output.of(providerName));
        }

        /**
         * @param providerRegionName Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
         * Do not specify this field when creating a multi-region cluster using the replicationSpec document or a Global Cluster with the replicationSpecs array.
         * 
         * @return builder
         * 
         */
        public Builder providerRegionName(@Nullable Output<String> providerRegionName) {
            $.providerRegionName = providerRegionName;
            return this;
        }

        /**
         * @param providerRegionName Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
         * Do not specify this field when creating a multi-region cluster using the replicationSpec document or a Global Cluster with the replicationSpecs array.
         * 
         * @return builder
         * 
         */
        public Builder providerRegionName(String providerRegionName) {
            return providerRegionName(Output.of(providerRegionName));
        }

        /**
         * @param providerVolumeType The type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.  `PROVISIONED` is ONLY required if setting IOPS higher than the default instance IOPS.
         * 
         * @return builder
         * 
         */
        public Builder providerVolumeType(@Nullable Output<String> providerVolumeType) {
            $.providerVolumeType = providerVolumeType;
            return this;
        }

        /**
         * @param providerVolumeType The type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.  `PROVISIONED` is ONLY required if setting IOPS higher than the default instance IOPS.
         * 
         * @return builder
         * 
         */
        public Builder providerVolumeType(String providerVolumeType) {
            return providerVolumeType(Output.of(providerVolumeType));
        }

        /**
         * @param replicationFactor Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
         * 
         * @return builder
         * 
         */
        public Builder replicationFactor(@Nullable Output<Integer> replicationFactor) {
            $.replicationFactor = replicationFactor;
            return this;
        }

        /**
         * @param replicationFactor Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
         * 
         * @return builder
         * 
         */
        public Builder replicationFactor(Integer replicationFactor) {
            return replicationFactor(Output.of(replicationFactor));
        }

        /**
         * @param replicationSpecs Configuration for cluster regions.  See Replication Spec below for more details.
         * 
         * @return builder
         * 
         */
        public Builder replicationSpecs(@Nullable Output<List<ClusterReplicationSpecArgs>> replicationSpecs) {
            $.replicationSpecs = replicationSpecs;
            return this;
        }

        /**
         * @param replicationSpecs Configuration for cluster regions.  See Replication Spec below for more details.
         * 
         * @return builder
         * 
         */
        public Builder replicationSpecs(List<ClusterReplicationSpecArgs> replicationSpecs) {
            return replicationSpecs(Output.of(replicationSpecs));
        }

        /**
         * @param replicationSpecs Configuration for cluster regions.  See Replication Spec below for more details.
         * 
         * @return builder
         * 
         */
        public Builder replicationSpecs(ClusterReplicationSpecArgs... replicationSpecs) {
            return replicationSpecs(List.of(replicationSpecs));
        }

        /**
         * @param terminationProtectionEnabled Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won&#39;t delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
         * 
         * @return builder
         * 
         */
        public Builder terminationProtectionEnabled(@Nullable Output<Boolean> terminationProtectionEnabled) {
            $.terminationProtectionEnabled = terminationProtectionEnabled;
            return this;
        }

        /**
         * @param terminationProtectionEnabled Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won&#39;t delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
         * 
         * @return builder
         * 
         */
        public Builder terminationProtectionEnabled(Boolean terminationProtectionEnabled) {
            return terminationProtectionEnabled(Output.of(terminationProtectionEnabled));
        }

        /**
         * @param versionReleaseSystem Release cadence that Atlas uses for this cluster. This parameter defaults to `LTS`. If you set this field to `CONTINUOUS`, you must omit the `mongo_db_major_version` field. Atlas accepts:
         * 
         * @return builder
         * 
         */
        public Builder versionReleaseSystem(@Nullable Output<String> versionReleaseSystem) {
            $.versionReleaseSystem = versionReleaseSystem;
            return this;
        }

        /**
         * @param versionReleaseSystem Release cadence that Atlas uses for this cluster. This parameter defaults to `LTS`. If you set this field to `CONTINUOUS`, you must omit the `mongo_db_major_version` field. Atlas accepts:
         * 
         * @return builder
         * 
         */
        public Builder versionReleaseSystem(String versionReleaseSystem) {
            return versionReleaseSystem(Output.of(versionReleaseSystem));
        }

        public ClusterArgs build() {
            $.projectId = Objects.requireNonNull($.projectId, "expected parameter 'projectId' to be non-null");
            $.providerInstanceSizeName = Objects.requireNonNull($.providerInstanceSizeName, "expected parameter 'providerInstanceSizeName' to be non-null");
            $.providerName = Objects.requireNonNull($.providerName, "expected parameter 'providerName' to be non-null");
            return $;
        }
    }

}
