// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAlertConfigurationOutput {
    private @Nullable String label;
    private String type;
    /**
     * @return Value to test with the specified operator. If `field_name` is set to TYPE_NAME, you can match on the following values:
     * 
     */
    private String value;

    private GetAlertConfigurationOutput() {}
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }
    public String type() {
        return this.type;
    }
    /**
     * @return Value to test with the specified operator. If `field_name` is set to TYPE_NAME, you can match on the following values:
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertConfigurationOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String label;
        private String type;
        private String value;
        public Builder() {}
        public Builder(GetAlertConfigurationOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.label = defaults.label;
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder label(@Nullable String label) {
            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public GetAlertConfigurationOutput build() {
            final var o = new GetAlertConfigurationOutput();
            o.label = label;
            o.type = type;
            o.value = value;
            return o;
        }
    }
}
