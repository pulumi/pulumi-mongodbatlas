// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetClusterOutageSimulationOutageFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterOutageSimulationResult {
    private String clusterName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return List of settings that specify the type of cluster outage simulation.
     * 
     */
    private List<GetClusterOutageSimulationOutageFilter> outageFilters;
    private String projectId;
    /**
     * @return Unique 24-hexadecimal character string that identifies the outage simulation.
     * 
     */
    private String simulationId;
    /**
     * @return Date and time when MongoDB Cloud started the regional outage simulation.
     * 
     */
    private String startRequestDate;
    /**
     * @return Current phase of the outage simulation:
     * * `START_REQUESTED` - User has requested cluster outage simulation.
     * * `STARTING` - MongoDB Cloud is starting cluster outage simulation.
     * * `SIMULATING` - MongoDB Cloud is simulating cluster outage.
     * * `RECOVERY_REQUESTED` - User has requested recovery from the simulated outage.
     * * `RECOVERING` - MongoDB Cloud is recovering the cluster from the simulated outage.
     * * `COMPLETE` - MongoDB Cloud has completed the cluster outage simulation.
     * 
     */
    private String state;

    private GetClusterOutageSimulationResult() {}
    public String clusterName() {
        return this.clusterName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of settings that specify the type of cluster outage simulation.
     * 
     */
    public List<GetClusterOutageSimulationOutageFilter> outageFilters() {
        return this.outageFilters;
    }
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return Unique 24-hexadecimal character string that identifies the outage simulation.
     * 
     */
    public String simulationId() {
        return this.simulationId;
    }
    /**
     * @return Date and time when MongoDB Cloud started the regional outage simulation.
     * 
     */
    public String startRequestDate() {
        return this.startRequestDate;
    }
    /**
     * @return Current phase of the outage simulation:
     * * `START_REQUESTED` - User has requested cluster outage simulation.
     * * `STARTING` - MongoDB Cloud is starting cluster outage simulation.
     * * `SIMULATING` - MongoDB Cloud is simulating cluster outage.
     * * `RECOVERY_REQUESTED` - User has requested recovery from the simulated outage.
     * * `RECOVERING` - MongoDB Cloud is recovering the cluster from the simulated outage.
     * * `COMPLETE` - MongoDB Cloud has completed the cluster outage simulation.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterOutageSimulationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterName;
        private String id;
        private List<GetClusterOutageSimulationOutageFilter> outageFilters;
        private String projectId;
        private String simulationId;
        private String startRequestDate;
        private String state;
        public Builder() {}
        public Builder(GetClusterOutageSimulationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterName = defaults.clusterName;
    	      this.id = defaults.id;
    	      this.outageFilters = defaults.outageFilters;
    	      this.projectId = defaults.projectId;
    	      this.simulationId = defaults.simulationId;
    	      this.startRequestDate = defaults.startRequestDate;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            if (clusterName == null) {
              throw new MissingRequiredPropertyException("GetClusterOutageSimulationResult", "clusterName");
            }
            this.clusterName = clusterName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClusterOutageSimulationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder outageFilters(List<GetClusterOutageSimulationOutageFilter> outageFilters) {
            if (outageFilters == null) {
              throw new MissingRequiredPropertyException("GetClusterOutageSimulationResult", "outageFilters");
            }
            this.outageFilters = outageFilters;
            return this;
        }
        public Builder outageFilters(GetClusterOutageSimulationOutageFilter... outageFilters) {
            return outageFilters(List.of(outageFilters));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetClusterOutageSimulationResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder simulationId(String simulationId) {
            if (simulationId == null) {
              throw new MissingRequiredPropertyException("GetClusterOutageSimulationResult", "simulationId");
            }
            this.simulationId = simulationId;
            return this;
        }
        @CustomType.Setter
        public Builder startRequestDate(String startRequestDate) {
            if (startRequestDate == null) {
              throw new MissingRequiredPropertyException("GetClusterOutageSimulationResult", "startRequestDate");
            }
            this.startRequestDate = startRequestDate;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetClusterOutageSimulationResult", "state");
            }
            this.state = state;
            return this;
        }
        public GetClusterOutageSimulationResult build() {
            final var _resultValue = new GetClusterOutageSimulationResult();
            _resultValue.clusterName = clusterName;
            _resultValue.id = id;
            _resultValue.outageFilters = outageFilters;
            _resultValue.projectId = projectId;
            _resultValue.simulationId = simulationId;
            _resultValue.startRequestDate = startRequestDate;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
