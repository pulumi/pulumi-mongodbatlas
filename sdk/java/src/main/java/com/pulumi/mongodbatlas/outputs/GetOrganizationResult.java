// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.mongodbatlas.outputs.GetOrganizationLink;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetOrganizationResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Flag that indicates whether this organization has been deleted.
     * 
     */
    private Boolean isDeleted;
    private List<GetOrganizationLink> links;
    /**
     * @return Human-readable label that identifies the organization.
     * 
     */
    private String name;
    private String orgId;

    private GetOrganizationResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Flag that indicates whether this organization has been deleted.
     * 
     */
    public Boolean isDeleted() {
        return this.isDeleted;
    }
    public List<GetOrganizationLink> links() {
        return this.links;
    }
    /**
     * @return Human-readable label that identifies the organization.
     * 
     */
    public String name() {
        return this.name;
    }
    public String orgId() {
        return this.orgId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private Boolean isDeleted;
        private List<GetOrganizationLink> links;
        private String name;
        private String orgId;
        public Builder() {}
        public Builder(GetOrganizationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.isDeleted = defaults.isDeleted;
    	      this.links = defaults.links;
    	      this.name = defaults.name;
    	      this.orgId = defaults.orgId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isDeleted(Boolean isDeleted) {
            this.isDeleted = Objects.requireNonNull(isDeleted);
            return this;
        }
        @CustomType.Setter
        public Builder links(List<GetOrganizationLink> links) {
            this.links = Objects.requireNonNull(links);
            return this;
        }
        public Builder links(GetOrganizationLink... links) {
            return links(List.of(links));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder orgId(String orgId) {
            this.orgId = Objects.requireNonNull(orgId);
            return this;
        }
        public GetOrganizationResult build() {
            final var o = new GetOrganizationResult();
            o.id = id;
            o.isDeleted = isDeleted;
            o.links = links;
            o.name = name;
            o.orgId = orgId;
            return o;
        }
    }
}
