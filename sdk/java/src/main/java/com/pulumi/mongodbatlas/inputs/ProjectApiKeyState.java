// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.mongodbatlas.inputs.ProjectApiKeyProjectAssignmentArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectApiKeyState extends com.pulumi.resources.ResourceArgs {

    public static final ProjectApiKeyState Empty = new ProjectApiKeyState();

    /**
     * Unique identifier for this Project API key.
     * 
     */
    @Import(name="apiKeyId")
    private @Nullable Output<String> apiKeyId;

    /**
     * @return Unique identifier for this Project API key.
     * 
     */
    public Optional<Output<String>> apiKeyId() {
        return Optional.ofNullable(this.apiKeyId);
    }

    /**
     * Description of this Project API key.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of this Project API key.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="privateKey")
    private @Nullable Output<String> privateKey;

    public Optional<Output<String>> privateKey() {
        return Optional.ofNullable(this.privateKey);
    }

    @Import(name="projectAssignments")
    private @Nullable Output<List<ProjectApiKeyProjectAssignmentArgs>> projectAssignments;

    public Optional<Output<List<ProjectApiKeyProjectAssignmentArgs>>> projectAssignments() {
        return Optional.ofNullable(this.projectAssignments);
    }

    /**
     * Unique 24-hexadecimal digit string that identifies your project. **WARNING:** this parameter is deprecated as it no longer needs to be defined. It will be removed in version 1.16.0.
     * 
     * &gt; **NOTE:** Project created by API Keys must belong to an existing organization.
     * 
     * @deprecated
     * this parameter is deprecated and will be removed in version 1.16.0
     * 
     */
    @Deprecated /* this parameter is deprecated and will be removed in version 1.16.0 */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies your project. **WARNING:** this parameter is deprecated as it no longer needs to be defined. It will be removed in version 1.16.0.
     * 
     * &gt; **NOTE:** Project created by API Keys must belong to an existing organization.
     * 
     * @deprecated
     * this parameter is deprecated and will be removed in version 1.16.0
     * 
     */
    @Deprecated /* this parameter is deprecated and will be removed in version 1.16.0 */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    @Import(name="publicKey")
    private @Nullable Output<String> publicKey;

    public Optional<Output<String>> publicKey() {
        return Optional.ofNullable(this.publicKey);
    }

    private ProjectApiKeyState() {}

    private ProjectApiKeyState(ProjectApiKeyState $) {
        this.apiKeyId = $.apiKeyId;
        this.description = $.description;
        this.privateKey = $.privateKey;
        this.projectAssignments = $.projectAssignments;
        this.projectId = $.projectId;
        this.publicKey = $.publicKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectApiKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectApiKeyState $;

        public Builder() {
            $ = new ProjectApiKeyState();
        }

        public Builder(ProjectApiKeyState defaults) {
            $ = new ProjectApiKeyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiKeyId Unique identifier for this Project API key.
         * 
         * @return builder
         * 
         */
        public Builder apiKeyId(@Nullable Output<String> apiKeyId) {
            $.apiKeyId = apiKeyId;
            return this;
        }

        /**
         * @param apiKeyId Unique identifier for this Project API key.
         * 
         * @return builder
         * 
         */
        public Builder apiKeyId(String apiKeyId) {
            return apiKeyId(Output.of(apiKeyId));
        }

        /**
         * @param description Description of this Project API key.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of this Project API key.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder privateKey(@Nullable Output<String> privateKey) {
            $.privateKey = privateKey;
            return this;
        }

        public Builder privateKey(String privateKey) {
            return privateKey(Output.of(privateKey));
        }

        public Builder projectAssignments(@Nullable Output<List<ProjectApiKeyProjectAssignmentArgs>> projectAssignments) {
            $.projectAssignments = projectAssignments;
            return this;
        }

        public Builder projectAssignments(List<ProjectApiKeyProjectAssignmentArgs> projectAssignments) {
            return projectAssignments(Output.of(projectAssignments));
        }

        public Builder projectAssignments(ProjectApiKeyProjectAssignmentArgs... projectAssignments) {
            return projectAssignments(List.of(projectAssignments));
        }

        /**
         * @param projectId Unique 24-hexadecimal digit string that identifies your project. **WARNING:** this parameter is deprecated as it no longer needs to be defined. It will be removed in version 1.16.0.
         * 
         * &gt; **NOTE:** Project created by API Keys must belong to an existing organization.
         * 
         * @return builder
         * 
         * @deprecated
         * this parameter is deprecated and will be removed in version 1.16.0
         * 
         */
        @Deprecated /* this parameter is deprecated and will be removed in version 1.16.0 */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Unique 24-hexadecimal digit string that identifies your project. **WARNING:** this parameter is deprecated as it no longer needs to be defined. It will be removed in version 1.16.0.
         * 
         * &gt; **NOTE:** Project created by API Keys must belong to an existing organization.
         * 
         * @return builder
         * 
         * @deprecated
         * this parameter is deprecated and will be removed in version 1.16.0
         * 
         */
        @Deprecated /* this parameter is deprecated and will be removed in version 1.16.0 */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public Builder publicKey(@Nullable Output<String> publicKey) {
            $.publicKey = publicKey;
            return this;
        }

        public Builder publicKey(String publicKey) {
            return publicKey(Output.of(publicKey));
        }

        public ProjectApiKeyState build() {
            return $;
        }
    }

}
