// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAdvancedClustersArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAdvancedClustersArgs Empty = new GetAdvancedClustersArgs();

    /**
     * The unique ID for the project to get the clusters.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The unique ID for the project to get the clusters.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Set this field to true to allow the data source to use the latest schema representing each shard with an individual `replication_specs` object. This enables representing clusters with independent shard scaling. **Note:** If not set to true, this data source return all clusters except clusters with asymmetric shards.
     * 
     */
    @Import(name="useReplicationSpecPerShard")
    private @Nullable Output<Boolean> useReplicationSpecPerShard;

    /**
     * @return Set this field to true to allow the data source to use the latest schema representing each shard with an individual `replication_specs` object. This enables representing clusters with independent shard scaling. **Note:** If not set to true, this data source return all clusters except clusters with asymmetric shards.
     * 
     */
    public Optional<Output<Boolean>> useReplicationSpecPerShard() {
        return Optional.ofNullable(this.useReplicationSpecPerShard);
    }

    private GetAdvancedClustersArgs() {}

    private GetAdvancedClustersArgs(GetAdvancedClustersArgs $) {
        this.projectId = $.projectId;
        this.useReplicationSpecPerShard = $.useReplicationSpecPerShard;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAdvancedClustersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAdvancedClustersArgs $;

        public Builder() {
            $ = new GetAdvancedClustersArgs();
        }

        public Builder(GetAdvancedClustersArgs defaults) {
            $ = new GetAdvancedClustersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param projectId The unique ID for the project to get the clusters.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The unique ID for the project to get the clusters.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param useReplicationSpecPerShard Set this field to true to allow the data source to use the latest schema representing each shard with an individual `replication_specs` object. This enables representing clusters with independent shard scaling. **Note:** If not set to true, this data source return all clusters except clusters with asymmetric shards.
         * 
         * @return builder
         * 
         */
        public Builder useReplicationSpecPerShard(@Nullable Output<Boolean> useReplicationSpecPerShard) {
            $.useReplicationSpecPerShard = useReplicationSpecPerShard;
            return this;
        }

        /**
         * @param useReplicationSpecPerShard Set this field to true to allow the data source to use the latest schema representing each shard with an individual `replication_specs` object. This enables representing clusters with independent shard scaling. **Note:** If not set to true, this data source return all clusters except clusters with asymmetric shards.
         * 
         * @return builder
         * 
         */
        public Builder useReplicationSpecPerShard(Boolean useReplicationSpecPerShard) {
            return useReplicationSpecPerShard(Output.of(useReplicationSpecPerShard));
        }

        public GetAdvancedClustersArgs build() {
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetAdvancedClustersArgs", "projectId");
            }
            return $;
        }
    }

}
