// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.mongodbatlas.inputs.CloudBackupScheduleCopySettingArgs;
import com.pulumi.mongodbatlas.inputs.CloudBackupScheduleExportArgs;
import com.pulumi.mongodbatlas.inputs.CloudBackupSchedulePolicyItemDailyArgs;
import com.pulumi.mongodbatlas.inputs.CloudBackupSchedulePolicyItemHourlyArgs;
import com.pulumi.mongodbatlas.inputs.CloudBackupSchedulePolicyItemMonthlyArgs;
import com.pulumi.mongodbatlas.inputs.CloudBackupSchedulePolicyItemWeeklyArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudBackupScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudBackupScheduleArgs Empty = new CloudBackupScheduleArgs();

    /**
     * Flag that indicates whether automatic export of cloud backup snapshots to the AWS bucket is enabled. Value can be one of the following:
     * 
     */
    @Import(name="autoExportEnabled")
    private @Nullable Output<Boolean> autoExportEnabled;

    /**
     * @return Flag that indicates whether automatic export of cloud backup snapshots to the AWS bucket is enabled. Value can be one of the following:
     * 
     */
    public Optional<Output<Boolean>> autoExportEnabled() {
        return Optional.ofNullable(this.autoExportEnabled);
    }

    /**
     * The name of the Atlas cluster that contains the snapshot backup policy you want to retrieve.
     * 
     */
    @Import(name="clusterName", required=true)
    private Output<String> clusterName;

    /**
     * @return The name of the Atlas cluster that contains the snapshot backup policy you want to retrieve.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }

    @Import(name="copySettings")
    private @Nullable Output<List<CloudBackupScheduleCopySettingArgs>> copySettings;

    public Optional<Output<List<CloudBackupScheduleCopySettingArgs>>> copySettings() {
        return Optional.ofNullable(this.copySettings);
    }

    @Import(name="export")
    private @Nullable Output<CloudBackupScheduleExportArgs> export;

    public Optional<Output<CloudBackupScheduleExportArgs>> export() {
        return Optional.ofNullable(this.export);
    }

    /**
     * Daily policy item
     * 
     */
    @Import(name="policyItemDaily")
    private @Nullable Output<CloudBackupSchedulePolicyItemDailyArgs> policyItemDaily;

    /**
     * @return Daily policy item
     * 
     */
    public Optional<Output<CloudBackupSchedulePolicyItemDailyArgs>> policyItemDaily() {
        return Optional.ofNullable(this.policyItemDaily);
    }

    /**
     * Hourly policy item
     * 
     */
    @Import(name="policyItemHourly")
    private @Nullable Output<CloudBackupSchedulePolicyItemHourlyArgs> policyItemHourly;

    /**
     * @return Hourly policy item
     * 
     */
    public Optional<Output<CloudBackupSchedulePolicyItemHourlyArgs>> policyItemHourly() {
        return Optional.ofNullable(this.policyItemHourly);
    }

    /**
     * Monthly policy item
     * 
     */
    @Import(name="policyItemMonthlies")
    private @Nullable Output<List<CloudBackupSchedulePolicyItemMonthlyArgs>> policyItemMonthlies;

    /**
     * @return Monthly policy item
     * 
     */
    public Optional<Output<List<CloudBackupSchedulePolicyItemMonthlyArgs>>> policyItemMonthlies() {
        return Optional.ofNullable(this.policyItemMonthlies);
    }

    /**
     * Weekly policy item
     * 
     */
    @Import(name="policyItemWeeklies")
    private @Nullable Output<List<CloudBackupSchedulePolicyItemWeeklyArgs>> policyItemWeeklies;

    /**
     * @return Weekly policy item
     * 
     */
    public Optional<Output<List<CloudBackupSchedulePolicyItemWeeklyArgs>>> policyItemWeeklies() {
        return Optional.ofNullable(this.policyItemWeeklies);
    }

    /**
     * The unique identifier of the project for the Atlas cluster.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The unique identifier of the project for the Atlas cluster.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * UTC Hour of day between 0 and 23, inclusive, representing which hour of the day that Atlas takes snapshots for backup policy items.
     * 
     */
    @Import(name="referenceHourOfDay")
    private @Nullable Output<Integer> referenceHourOfDay;

    /**
     * @return UTC Hour of day between 0 and 23, inclusive, representing which hour of the day that Atlas takes snapshots for backup policy items.
     * 
     */
    public Optional<Output<Integer>> referenceHourOfDay() {
        return Optional.ofNullable(this.referenceHourOfDay);
    }

    /**
     * UTC Minutes after `reference_hour_of_day` that Atlas takes snapshots for backup policy items. Must be between 0 and 59, inclusive.
     * 
     */
    @Import(name="referenceMinuteOfHour")
    private @Nullable Output<Integer> referenceMinuteOfHour;

    /**
     * @return UTC Minutes after `reference_hour_of_day` that Atlas takes snapshots for backup policy items. Must be between 0 and 59, inclusive.
     * 
     */
    public Optional<Output<Integer>> referenceMinuteOfHour() {
        return Optional.ofNullable(this.referenceMinuteOfHour);
    }

    /**
     * Number of days back in time you can restore to with point-in-time accuracy. Must be a positive, non-zero integer.
     * 
     */
    @Import(name="restoreWindowDays")
    private @Nullable Output<Integer> restoreWindowDays;

    /**
     * @return Number of days back in time you can restore to with point-in-time accuracy. Must be a positive, non-zero integer.
     * 
     */
    public Optional<Output<Integer>> restoreWindowDays() {
        return Optional.ofNullable(this.restoreWindowDays);
    }

    /**
     * Specify true to apply the retention changes in the updated backup policy to snapshots that Atlas took previously.
     * 
     */
    @Import(name="updateSnapshots")
    private @Nullable Output<Boolean> updateSnapshots;

    /**
     * @return Specify true to apply the retention changes in the updated backup policy to snapshots that Atlas took previously.
     * 
     */
    public Optional<Output<Boolean>> updateSnapshots() {
        return Optional.ofNullable(this.updateSnapshots);
    }

    /**
     * Specify true to use organization and project names instead of organization and project UUIDs in the path for the metadata files that Atlas uploads to your S3 bucket after it finishes exporting the snapshots. To learn more about the metadata files that Atlas uploads, see [Export Cloud Backup Snapshot](https://www.mongodb.com/docs/atlas/backup/cloud-backup/export/#std-label-cloud-provider-snapshot-export).
     * 
     */
    @Import(name="useOrgAndGroupNamesInExportPrefix")
    private @Nullable Output<Boolean> useOrgAndGroupNamesInExportPrefix;

    /**
     * @return Specify true to use organization and project names instead of organization and project UUIDs in the path for the metadata files that Atlas uploads to your S3 bucket after it finishes exporting the snapshots. To learn more about the metadata files that Atlas uploads, see [Export Cloud Backup Snapshot](https://www.mongodb.com/docs/atlas/backup/cloud-backup/export/#std-label-cloud-provider-snapshot-export).
     * 
     */
    public Optional<Output<Boolean>> useOrgAndGroupNamesInExportPrefix() {
        return Optional.ofNullable(this.useOrgAndGroupNamesInExportPrefix);
    }

    private CloudBackupScheduleArgs() {}

    private CloudBackupScheduleArgs(CloudBackupScheduleArgs $) {
        this.autoExportEnabled = $.autoExportEnabled;
        this.clusterName = $.clusterName;
        this.copySettings = $.copySettings;
        this.export = $.export;
        this.policyItemDaily = $.policyItemDaily;
        this.policyItemHourly = $.policyItemHourly;
        this.policyItemMonthlies = $.policyItemMonthlies;
        this.policyItemWeeklies = $.policyItemWeeklies;
        this.projectId = $.projectId;
        this.referenceHourOfDay = $.referenceHourOfDay;
        this.referenceMinuteOfHour = $.referenceMinuteOfHour;
        this.restoreWindowDays = $.restoreWindowDays;
        this.updateSnapshots = $.updateSnapshots;
        this.useOrgAndGroupNamesInExportPrefix = $.useOrgAndGroupNamesInExportPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudBackupScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudBackupScheduleArgs $;

        public Builder() {
            $ = new CloudBackupScheduleArgs();
        }

        public Builder(CloudBackupScheduleArgs defaults) {
            $ = new CloudBackupScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoExportEnabled Flag that indicates whether automatic export of cloud backup snapshots to the AWS bucket is enabled. Value can be one of the following:
         * 
         * @return builder
         * 
         */
        public Builder autoExportEnabled(@Nullable Output<Boolean> autoExportEnabled) {
            $.autoExportEnabled = autoExportEnabled;
            return this;
        }

        /**
         * @param autoExportEnabled Flag that indicates whether automatic export of cloud backup snapshots to the AWS bucket is enabled. Value can be one of the following:
         * 
         * @return builder
         * 
         */
        public Builder autoExportEnabled(Boolean autoExportEnabled) {
            return autoExportEnabled(Output.of(autoExportEnabled));
        }

        /**
         * @param clusterName The name of the Atlas cluster that contains the snapshot backup policy you want to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName The name of the Atlas cluster that contains the snapshot backup policy you want to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        public Builder copySettings(@Nullable Output<List<CloudBackupScheduleCopySettingArgs>> copySettings) {
            $.copySettings = copySettings;
            return this;
        }

        public Builder copySettings(List<CloudBackupScheduleCopySettingArgs> copySettings) {
            return copySettings(Output.of(copySettings));
        }

        public Builder copySettings(CloudBackupScheduleCopySettingArgs... copySettings) {
            return copySettings(List.of(copySettings));
        }

        public Builder export(@Nullable Output<CloudBackupScheduleExportArgs> export) {
            $.export = export;
            return this;
        }

        public Builder export(CloudBackupScheduleExportArgs export) {
            return export(Output.of(export));
        }

        /**
         * @param policyItemDaily Daily policy item
         * 
         * @return builder
         * 
         */
        public Builder policyItemDaily(@Nullable Output<CloudBackupSchedulePolicyItemDailyArgs> policyItemDaily) {
            $.policyItemDaily = policyItemDaily;
            return this;
        }

        /**
         * @param policyItemDaily Daily policy item
         * 
         * @return builder
         * 
         */
        public Builder policyItemDaily(CloudBackupSchedulePolicyItemDailyArgs policyItemDaily) {
            return policyItemDaily(Output.of(policyItemDaily));
        }

        /**
         * @param policyItemHourly Hourly policy item
         * 
         * @return builder
         * 
         */
        public Builder policyItemHourly(@Nullable Output<CloudBackupSchedulePolicyItemHourlyArgs> policyItemHourly) {
            $.policyItemHourly = policyItemHourly;
            return this;
        }

        /**
         * @param policyItemHourly Hourly policy item
         * 
         * @return builder
         * 
         */
        public Builder policyItemHourly(CloudBackupSchedulePolicyItemHourlyArgs policyItemHourly) {
            return policyItemHourly(Output.of(policyItemHourly));
        }

        /**
         * @param policyItemMonthlies Monthly policy item
         * 
         * @return builder
         * 
         */
        public Builder policyItemMonthlies(@Nullable Output<List<CloudBackupSchedulePolicyItemMonthlyArgs>> policyItemMonthlies) {
            $.policyItemMonthlies = policyItemMonthlies;
            return this;
        }

        /**
         * @param policyItemMonthlies Monthly policy item
         * 
         * @return builder
         * 
         */
        public Builder policyItemMonthlies(List<CloudBackupSchedulePolicyItemMonthlyArgs> policyItemMonthlies) {
            return policyItemMonthlies(Output.of(policyItemMonthlies));
        }

        /**
         * @param policyItemMonthlies Monthly policy item
         * 
         * @return builder
         * 
         */
        public Builder policyItemMonthlies(CloudBackupSchedulePolicyItemMonthlyArgs... policyItemMonthlies) {
            return policyItemMonthlies(List.of(policyItemMonthlies));
        }

        /**
         * @param policyItemWeeklies Weekly policy item
         * 
         * @return builder
         * 
         */
        public Builder policyItemWeeklies(@Nullable Output<List<CloudBackupSchedulePolicyItemWeeklyArgs>> policyItemWeeklies) {
            $.policyItemWeeklies = policyItemWeeklies;
            return this;
        }

        /**
         * @param policyItemWeeklies Weekly policy item
         * 
         * @return builder
         * 
         */
        public Builder policyItemWeeklies(List<CloudBackupSchedulePolicyItemWeeklyArgs> policyItemWeeklies) {
            return policyItemWeeklies(Output.of(policyItemWeeklies));
        }

        /**
         * @param policyItemWeeklies Weekly policy item
         * 
         * @return builder
         * 
         */
        public Builder policyItemWeeklies(CloudBackupSchedulePolicyItemWeeklyArgs... policyItemWeeklies) {
            return policyItemWeeklies(List.of(policyItemWeeklies));
        }

        /**
         * @param projectId The unique identifier of the project for the Atlas cluster.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The unique identifier of the project for the Atlas cluster.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param referenceHourOfDay UTC Hour of day between 0 and 23, inclusive, representing which hour of the day that Atlas takes snapshots for backup policy items.
         * 
         * @return builder
         * 
         */
        public Builder referenceHourOfDay(@Nullable Output<Integer> referenceHourOfDay) {
            $.referenceHourOfDay = referenceHourOfDay;
            return this;
        }

        /**
         * @param referenceHourOfDay UTC Hour of day between 0 and 23, inclusive, representing which hour of the day that Atlas takes snapshots for backup policy items.
         * 
         * @return builder
         * 
         */
        public Builder referenceHourOfDay(Integer referenceHourOfDay) {
            return referenceHourOfDay(Output.of(referenceHourOfDay));
        }

        /**
         * @param referenceMinuteOfHour UTC Minutes after `reference_hour_of_day` that Atlas takes snapshots for backup policy items. Must be between 0 and 59, inclusive.
         * 
         * @return builder
         * 
         */
        public Builder referenceMinuteOfHour(@Nullable Output<Integer> referenceMinuteOfHour) {
            $.referenceMinuteOfHour = referenceMinuteOfHour;
            return this;
        }

        /**
         * @param referenceMinuteOfHour UTC Minutes after `reference_hour_of_day` that Atlas takes snapshots for backup policy items. Must be between 0 and 59, inclusive.
         * 
         * @return builder
         * 
         */
        public Builder referenceMinuteOfHour(Integer referenceMinuteOfHour) {
            return referenceMinuteOfHour(Output.of(referenceMinuteOfHour));
        }

        /**
         * @param restoreWindowDays Number of days back in time you can restore to with point-in-time accuracy. Must be a positive, non-zero integer.
         * 
         * @return builder
         * 
         */
        public Builder restoreWindowDays(@Nullable Output<Integer> restoreWindowDays) {
            $.restoreWindowDays = restoreWindowDays;
            return this;
        }

        /**
         * @param restoreWindowDays Number of days back in time you can restore to with point-in-time accuracy. Must be a positive, non-zero integer.
         * 
         * @return builder
         * 
         */
        public Builder restoreWindowDays(Integer restoreWindowDays) {
            return restoreWindowDays(Output.of(restoreWindowDays));
        }

        /**
         * @param updateSnapshots Specify true to apply the retention changes in the updated backup policy to snapshots that Atlas took previously.
         * 
         * @return builder
         * 
         */
        public Builder updateSnapshots(@Nullable Output<Boolean> updateSnapshots) {
            $.updateSnapshots = updateSnapshots;
            return this;
        }

        /**
         * @param updateSnapshots Specify true to apply the retention changes in the updated backup policy to snapshots that Atlas took previously.
         * 
         * @return builder
         * 
         */
        public Builder updateSnapshots(Boolean updateSnapshots) {
            return updateSnapshots(Output.of(updateSnapshots));
        }

        /**
         * @param useOrgAndGroupNamesInExportPrefix Specify true to use organization and project names instead of organization and project UUIDs in the path for the metadata files that Atlas uploads to your S3 bucket after it finishes exporting the snapshots. To learn more about the metadata files that Atlas uploads, see [Export Cloud Backup Snapshot](https://www.mongodb.com/docs/atlas/backup/cloud-backup/export/#std-label-cloud-provider-snapshot-export).
         * 
         * @return builder
         * 
         */
        public Builder useOrgAndGroupNamesInExportPrefix(@Nullable Output<Boolean> useOrgAndGroupNamesInExportPrefix) {
            $.useOrgAndGroupNamesInExportPrefix = useOrgAndGroupNamesInExportPrefix;
            return this;
        }

        /**
         * @param useOrgAndGroupNamesInExportPrefix Specify true to use organization and project names instead of organization and project UUIDs in the path for the metadata files that Atlas uploads to your S3 bucket after it finishes exporting the snapshots. To learn more about the metadata files that Atlas uploads, see [Export Cloud Backup Snapshot](https://www.mongodb.com/docs/atlas/backup/cloud-backup/export/#std-label-cloud-provider-snapshot-export).
         * 
         * @return builder
         * 
         */
        public Builder useOrgAndGroupNamesInExportPrefix(Boolean useOrgAndGroupNamesInExportPrefix) {
            return useOrgAndGroupNamesInExportPrefix(Output.of(useOrgAndGroupNamesInExportPrefix));
        }

        public CloudBackupScheduleArgs build() {
            $.clusterName = Objects.requireNonNull($.clusterName, "expected parameter 'clusterName' to be non-null");
            $.projectId = Objects.requireNonNull($.projectId, "expected parameter 'projectId' to be non-null");
            return $;
        }
    }

}
