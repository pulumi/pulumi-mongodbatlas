// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlexClusterProviderSettings {
    /**
     * @return Cloud service provider on which MongoDB Cloud provisioned the flex cluster.
     * 
     */
    private String backingProviderName;
    /**
     * @return Storage capacity available to the flex cluster expressed in gigabytes.
     * 
     */
    private @Nullable Double diskSizeGb;
    /**
     * @return Human-readable label that identifies the cloud service provider.
     * 
     */
    private @Nullable String providerName;
    /**
     * @return Human-readable label that identifies the geographic location of your MongoDB flex cluster. The region you choose can affect network latency for clients accessing your databases. For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     * 
     */
    private String regionName;

    private FlexClusterProviderSettings() {}
    /**
     * @return Cloud service provider on which MongoDB Cloud provisioned the flex cluster.
     * 
     */
    public String backingProviderName() {
        return this.backingProviderName;
    }
    /**
     * @return Storage capacity available to the flex cluster expressed in gigabytes.
     * 
     */
    public Optional<Double> diskSizeGb() {
        return Optional.ofNullable(this.diskSizeGb);
    }
    /**
     * @return Human-readable label that identifies the cloud service provider.
     * 
     */
    public Optional<String> providerName() {
        return Optional.ofNullable(this.providerName);
    }
    /**
     * @return Human-readable label that identifies the geographic location of your MongoDB flex cluster. The region you choose can affect network latency for clients accessing your databases. For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     * 
     */
    public String regionName() {
        return this.regionName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlexClusterProviderSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backingProviderName;
        private @Nullable Double diskSizeGb;
        private @Nullable String providerName;
        private String regionName;
        public Builder() {}
        public Builder(FlexClusterProviderSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backingProviderName = defaults.backingProviderName;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.providerName = defaults.providerName;
    	      this.regionName = defaults.regionName;
        }

        @CustomType.Setter
        public Builder backingProviderName(String backingProviderName) {
            if (backingProviderName == null) {
              throw new MissingRequiredPropertyException("FlexClusterProviderSettings", "backingProviderName");
            }
            this.backingProviderName = backingProviderName;
            return this;
        }
        @CustomType.Setter
        public Builder diskSizeGb(@Nullable Double diskSizeGb) {

            this.diskSizeGb = diskSizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder providerName(@Nullable String providerName) {

            this.providerName = providerName;
            return this;
        }
        @CustomType.Setter
        public Builder regionName(String regionName) {
            if (regionName == null) {
              throw new MissingRequiredPropertyException("FlexClusterProviderSettings", "regionName");
            }
            this.regionName = regionName;
            return this;
        }
        public FlexClusterProviderSettings build() {
            final var _resultValue = new FlexClusterProviderSettings();
            _resultValue.backingProviderName = backingProviderName;
            _resultValue.diskSizeGb = diskSizeGb;
            _resultValue.providerName = providerName;
            _resultValue.regionName = regionName;
            return _resultValue;
        }
    }
}
