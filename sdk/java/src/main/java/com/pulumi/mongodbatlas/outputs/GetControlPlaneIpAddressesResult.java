// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetControlPlaneIpAddressesInbound;
import com.pulumi.mongodbatlas.outputs.GetControlPlaneIpAddressesOutbound;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetControlPlaneIpAddressesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return List of inbound IP addresses to the Atlas control plane, categorized by cloud provider. If your application allows outbound HTTP requests only to specific IP addresses, you must allow access to the following IP addresses so that your API requests can reach the Atlas control plane.
     * 
     */
    private GetControlPlaneIpAddressesInbound inbound;
    /**
     * @return List of outbound IP addresses from the Atlas control plane, categorized by cloud provider. If your network allows inbound HTTP requests only from specific IP addresses, you must allow access from the following IP addresses so that Atlas can communicate with your webhooks and KMS.
     * 
     */
    private GetControlPlaneIpAddressesOutbound outbound;

    private GetControlPlaneIpAddressesResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of inbound IP addresses to the Atlas control plane, categorized by cloud provider. If your application allows outbound HTTP requests only to specific IP addresses, you must allow access to the following IP addresses so that your API requests can reach the Atlas control plane.
     * 
     */
    public GetControlPlaneIpAddressesInbound inbound() {
        return this.inbound;
    }
    /**
     * @return List of outbound IP addresses from the Atlas control plane, categorized by cloud provider. If your network allows inbound HTTP requests only from specific IP addresses, you must allow access from the following IP addresses so that Atlas can communicate with your webhooks and KMS.
     * 
     */
    public GetControlPlaneIpAddressesOutbound outbound() {
        return this.outbound;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetControlPlaneIpAddressesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private GetControlPlaneIpAddressesInbound inbound;
        private GetControlPlaneIpAddressesOutbound outbound;
        public Builder() {}
        public Builder(GetControlPlaneIpAddressesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.inbound = defaults.inbound;
    	      this.outbound = defaults.outbound;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetControlPlaneIpAddressesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inbound(GetControlPlaneIpAddressesInbound inbound) {
            if (inbound == null) {
              throw new MissingRequiredPropertyException("GetControlPlaneIpAddressesResult", "inbound");
            }
            this.inbound = inbound;
            return this;
        }
        @CustomType.Setter
        public Builder outbound(GetControlPlaneIpAddressesOutbound outbound) {
            if (outbound == null) {
              throw new MissingRequiredPropertyException("GetControlPlaneIpAddressesResult", "outbound");
            }
            this.outbound = outbound;
            return this;
        }
        public GetControlPlaneIpAddressesResult build() {
            final var _resultValue = new GetControlPlaneIpAddressesResult();
            _resultValue.id = id;
            _resultValue.inbound = inbound;
            _resultValue.outbound = outbound;
            return _resultValue;
        }
    }
}
