// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudBackupScheduleCopySetting {
    /**
     * @return Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. &#34;AWS&#34; &#34;AZURE&#34; &#34;GCP&#34;
     * 
     */
    private String cloudProvider;
    /**
     * @return List that describes which types of snapshots to copy. i.e. &#34;HOURLY&#34; &#34;DAILY&#34; &#34;WEEKLY&#34; &#34;MONTHLY&#34; &#34;YEARLY&#34; &#34;ON_DEMAND&#34;
     * 
     */
    private List<String> frequencies;
    /**
     * @return Target region to copy snapshots belonging to replicationSpecId to. Please supply the &#39;Atlas Region&#39; which can be found under &lt;https://www.mongodb.com/docs/atlas/reference/cloud-providers/&gt; &#39;regions&#39; link
     * 
     */
    private String regionName;
    /**
     * @return Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, consult the replicationSpecs array returned from [Return One Multi-Cloud Cluster in One Project](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/getCluster). **(DEPRECATED)** Use `zone_id` instead. To learn more, see the 1.18.0 upgrade guide.
     * 
     * @deprecated
     * This parameter is deprecated. Please transition to `copy_settings.#.zone_id`. To learn more, see our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide.html.markdown
     * 
     */
    @Deprecated /* This parameter is deprecated. Please transition to `copy_settings.#.zone_id`. To learn more, see our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide.html.markdown */
    private String replicationSpecId;
    /**
     * @return Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
     * 
     */
    private Boolean shouldCopyOplogs;
    /**
     * @return Unique 24-hexadecimal digit string that identifies the zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster.
     * 
     */
    private String zoneId;

    private GetCloudBackupScheduleCopySetting() {}
    /**
     * @return Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. &#34;AWS&#34; &#34;AZURE&#34; &#34;GCP&#34;
     * 
     */
    public String cloudProvider() {
        return this.cloudProvider;
    }
    /**
     * @return List that describes which types of snapshots to copy. i.e. &#34;HOURLY&#34; &#34;DAILY&#34; &#34;WEEKLY&#34; &#34;MONTHLY&#34; &#34;YEARLY&#34; &#34;ON_DEMAND&#34;
     * 
     */
    public List<String> frequencies() {
        return this.frequencies;
    }
    /**
     * @return Target region to copy snapshots belonging to replicationSpecId to. Please supply the &#39;Atlas Region&#39; which can be found under &lt;https://www.mongodb.com/docs/atlas/reference/cloud-providers/&gt; &#39;regions&#39; link
     * 
     */
    public String regionName() {
        return this.regionName;
    }
    /**
     * @return Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, consult the replicationSpecs array returned from [Return One Multi-Cloud Cluster in One Project](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/getCluster). **(DEPRECATED)** Use `zone_id` instead. To learn more, see the 1.18.0 upgrade guide.
     * 
     * @deprecated
     * This parameter is deprecated. Please transition to `copy_settings.#.zone_id`. To learn more, see our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide.html.markdown
     * 
     */
    @Deprecated /* This parameter is deprecated. Please transition to `copy_settings.#.zone_id`. To learn more, see our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide.html.markdown */
    public String replicationSpecId() {
        return this.replicationSpecId;
    }
    /**
     * @return Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
     * 
     */
    public Boolean shouldCopyOplogs() {
        return this.shouldCopyOplogs;
    }
    /**
     * @return Unique 24-hexadecimal digit string that identifies the zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudBackupScheduleCopySetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cloudProvider;
        private List<String> frequencies;
        private String regionName;
        private String replicationSpecId;
        private Boolean shouldCopyOplogs;
        private String zoneId;
        public Builder() {}
        public Builder(GetCloudBackupScheduleCopySetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudProvider = defaults.cloudProvider;
    	      this.frequencies = defaults.frequencies;
    	      this.regionName = defaults.regionName;
    	      this.replicationSpecId = defaults.replicationSpecId;
    	      this.shouldCopyOplogs = defaults.shouldCopyOplogs;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder cloudProvider(String cloudProvider) {
            if (cloudProvider == null) {
              throw new MissingRequiredPropertyException("GetCloudBackupScheduleCopySetting", "cloudProvider");
            }
            this.cloudProvider = cloudProvider;
            return this;
        }
        @CustomType.Setter
        public Builder frequencies(List<String> frequencies) {
            if (frequencies == null) {
              throw new MissingRequiredPropertyException("GetCloudBackupScheduleCopySetting", "frequencies");
            }
            this.frequencies = frequencies;
            return this;
        }
        public Builder frequencies(String... frequencies) {
            return frequencies(List.of(frequencies));
        }
        @CustomType.Setter
        public Builder regionName(String regionName) {
            if (regionName == null) {
              throw new MissingRequiredPropertyException("GetCloudBackupScheduleCopySetting", "regionName");
            }
            this.regionName = regionName;
            return this;
        }
        @CustomType.Setter
        public Builder replicationSpecId(String replicationSpecId) {
            if (replicationSpecId == null) {
              throw new MissingRequiredPropertyException("GetCloudBackupScheduleCopySetting", "replicationSpecId");
            }
            this.replicationSpecId = replicationSpecId;
            return this;
        }
        @CustomType.Setter
        public Builder shouldCopyOplogs(Boolean shouldCopyOplogs) {
            if (shouldCopyOplogs == null) {
              throw new MissingRequiredPropertyException("GetCloudBackupScheduleCopySetting", "shouldCopyOplogs");
            }
            this.shouldCopyOplogs = shouldCopyOplogs;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetCloudBackupScheduleCopySetting", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetCloudBackupScheduleCopySetting build() {
            final var _resultValue = new GetCloudBackupScheduleCopySetting();
            _resultValue.cloudProvider = cloudProvider;
            _resultValue.frequencies = frequencies;
            _resultValue.regionName = regionName;
            _resultValue.replicationSpecId = replicationSpecId;
            _resultValue.shouldCopyOplogs = shouldCopyOplogs;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
