// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetCustomDbRoleAction;
import com.pulumi.mongodbatlas.outputs.GetCustomDbRoleInheritedRole;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetCustomDbRoleResult {
    private List<GetCustomDbRoleAction> actions;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable List<GetCustomDbRoleInheritedRole> inheritedRoles;
    private String projectId;
    /**
     * @return (Required) Name of the inherited role. This can either be another custom role or a built-in role.
     * 
     */
    private String roleName;

    private GetCustomDbRoleResult() {}
    public List<GetCustomDbRoleAction> actions() {
        return this.actions;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetCustomDbRoleInheritedRole> inheritedRoles() {
        return this.inheritedRoles == null ? List.of() : this.inheritedRoles;
    }
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return (Required) Name of the inherited role. This can either be another custom role or a built-in role.
     * 
     */
    public String roleName() {
        return this.roleName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomDbRoleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCustomDbRoleAction> actions;
        private String id;
        private @Nullable List<GetCustomDbRoleInheritedRole> inheritedRoles;
        private String projectId;
        private String roleName;
        public Builder() {}
        public Builder(GetCustomDbRoleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.id = defaults.id;
    	      this.inheritedRoles = defaults.inheritedRoles;
    	      this.projectId = defaults.projectId;
    	      this.roleName = defaults.roleName;
        }

        @CustomType.Setter
        public Builder actions(List<GetCustomDbRoleAction> actions) {
            if (actions == null) {
              throw new MissingRequiredPropertyException("GetCustomDbRoleResult", "actions");
            }
            this.actions = actions;
            return this;
        }
        public Builder actions(GetCustomDbRoleAction... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCustomDbRoleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inheritedRoles(@Nullable List<GetCustomDbRoleInheritedRole> inheritedRoles) {

            this.inheritedRoles = inheritedRoles;
            return this;
        }
        public Builder inheritedRoles(GetCustomDbRoleInheritedRole... inheritedRoles) {
            return inheritedRoles(List.of(inheritedRoles));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetCustomDbRoleResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder roleName(String roleName) {
            if (roleName == null) {
              throw new MissingRequiredPropertyException("GetCustomDbRoleResult", "roleName");
            }
            this.roleName = roleName;
            return this;
        }
        public GetCustomDbRoleResult build() {
            final var _resultValue = new GetCustomDbRoleResult();
            _resultValue.actions = actions;
            _resultValue.id = id;
            _resultValue.inheritedRoles = inheritedRoles;
            _resultValue.projectId = projectId;
            _resultValue.roleName = roleName;
            return _resultValue;
        }
    }
}
