// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuditingArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuditingArgs Empty = new AuditingArgs();

    /**
     * Indicates whether the auditing system captures successful authentication attempts for audit filters using the &#34;atype&#34; : &#34;authCheck&#34; auditing event. For more information, see [auditAuthorizationSuccess](https://docs.mongodb.com/manual/reference/parameters/#param.auditAuthorizationSuccess).  **Warning! Enabling Audit authorization successes can severely impact cluster performance. Enable this option with caution.**
     * 
     */
    @Import(name="auditAuthorizationSuccess")
    private @Nullable Output<Boolean> auditAuthorizationSuccess;

    /**
     * @return Indicates whether the auditing system captures successful authentication attempts for audit filters using the &#34;atype&#34; : &#34;authCheck&#34; auditing event. For more information, see [auditAuthorizationSuccess](https://docs.mongodb.com/manual/reference/parameters/#param.auditAuthorizationSuccess).  **Warning! Enabling Audit authorization successes can severely impact cluster performance. Enable this option with caution.**
     * 
     */
    public Optional<Output<Boolean>> auditAuthorizationSuccess() {
        return Optional.ofNullable(this.auditAuthorizationSuccess);
    }

    /**
     * JSON-formatted audit filter. For complete documentation on custom auditing filters, see [Configure Audit Filters](https://docs.mongodb.com/manual/tutorial/configure-audit-filters/).
     * 
     */
    @Import(name="auditFilter")
    private @Nullable Output<String> auditFilter;

    /**
     * @return JSON-formatted audit filter. For complete documentation on custom auditing filters, see [Configure Audit Filters](https://docs.mongodb.com/manual/tutorial/configure-audit-filters/).
     * 
     */
    public Optional<Output<String>> auditFilter() {
        return Optional.ofNullable(this.auditFilter);
    }

    /**
     * Denotes whether or not the project associated with the {project_id} has database auditing enabled.  Defaults to false.
     * 
     * &gt; **NOTE:** Auditing created by API Keys must belong to an existing organization.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Denotes whether or not the project associated with the {project_id} has database auditing enabled.  Defaults to false.
     * 
     * &gt; **NOTE:** Auditing created by API Keys must belong to an existing organization.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The unique ID for the project to configure auditing. **Note: When changing this value to a different project_id it will delete the current audit settings for the original project that was assigned to.**
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The unique ID for the project to configure auditing. **Note: When changing this value to a different project_id it will delete the current audit settings for the original project that was assigned to.**
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    private AuditingArgs() {}

    private AuditingArgs(AuditingArgs $) {
        this.auditAuthorizationSuccess = $.auditAuthorizationSuccess;
        this.auditFilter = $.auditFilter;
        this.enabled = $.enabled;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuditingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuditingArgs $;

        public Builder() {
            $ = new AuditingArgs();
        }

        public Builder(AuditingArgs defaults) {
            $ = new AuditingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditAuthorizationSuccess Indicates whether the auditing system captures successful authentication attempts for audit filters using the &#34;atype&#34; : &#34;authCheck&#34; auditing event. For more information, see [auditAuthorizationSuccess](https://docs.mongodb.com/manual/reference/parameters/#param.auditAuthorizationSuccess).  **Warning! Enabling Audit authorization successes can severely impact cluster performance. Enable this option with caution.**
         * 
         * @return builder
         * 
         */
        public Builder auditAuthorizationSuccess(@Nullable Output<Boolean> auditAuthorizationSuccess) {
            $.auditAuthorizationSuccess = auditAuthorizationSuccess;
            return this;
        }

        /**
         * @param auditAuthorizationSuccess Indicates whether the auditing system captures successful authentication attempts for audit filters using the &#34;atype&#34; : &#34;authCheck&#34; auditing event. For more information, see [auditAuthorizationSuccess](https://docs.mongodb.com/manual/reference/parameters/#param.auditAuthorizationSuccess).  **Warning! Enabling Audit authorization successes can severely impact cluster performance. Enable this option with caution.**
         * 
         * @return builder
         * 
         */
        public Builder auditAuthorizationSuccess(Boolean auditAuthorizationSuccess) {
            return auditAuthorizationSuccess(Output.of(auditAuthorizationSuccess));
        }

        /**
         * @param auditFilter JSON-formatted audit filter. For complete documentation on custom auditing filters, see [Configure Audit Filters](https://docs.mongodb.com/manual/tutorial/configure-audit-filters/).
         * 
         * @return builder
         * 
         */
        public Builder auditFilter(@Nullable Output<String> auditFilter) {
            $.auditFilter = auditFilter;
            return this;
        }

        /**
         * @param auditFilter JSON-formatted audit filter. For complete documentation on custom auditing filters, see [Configure Audit Filters](https://docs.mongodb.com/manual/tutorial/configure-audit-filters/).
         * 
         * @return builder
         * 
         */
        public Builder auditFilter(String auditFilter) {
            return auditFilter(Output.of(auditFilter));
        }

        /**
         * @param enabled Denotes whether or not the project associated with the {project_id} has database auditing enabled.  Defaults to false.
         * 
         * &gt; **NOTE:** Auditing created by API Keys must belong to an existing organization.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Denotes whether or not the project associated with the {project_id} has database auditing enabled.  Defaults to false.
         * 
         * &gt; **NOTE:** Auditing created by API Keys must belong to an existing organization.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param projectId The unique ID for the project to configure auditing. **Note: When changing this value to a different project_id it will delete the current audit settings for the original project that was assigned to.**
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The unique ID for the project to configure auditing. **Note: When changing this value to a different project_id it will delete the current audit settings for the original project that was assigned to.**
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public AuditingArgs build() {
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("AuditingArgs", "projectId");
            }
            return $;
        }
    }

}
