// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetFederatedDatabaseInstanceCloudProviderConfigAzure extends com.pulumi.resources.InvokeArgs {

    public static final GetFederatedDatabaseInstanceCloudProviderConfigAzure Empty = new GetFederatedDatabaseInstanceCloudProviderConfigAzure();

    @Import(name="atlasAppId", required=true)
    private String atlasAppId;

    public String atlasAppId() {
        return this.atlasAppId;
    }

    /**
     * Unique identifier of the role that the Federated Database Instance can use to access the data stores.
     * 
     */
    @Import(name="roleId", required=true)
    private String roleId;

    /**
     * @return Unique identifier of the role that the Federated Database Instance can use to access the data stores.
     * 
     */
    public String roleId() {
        return this.roleId;
    }

    /**
     * Unique identifier of the Azure service principal that the Federated Database instance uses to access Azure Blob Storage.
     * 
     */
    @Import(name="servicePrincipalId", required=true)
    private String servicePrincipalId;

    /**
     * @return Unique identifier of the Azure service principal that the Federated Database instance uses to access Azure Blob Storage.
     * 
     */
    public String servicePrincipalId() {
        return this.servicePrincipalId;
    }

    /**
     * Unique identifier of the Azure Active Directory tenant where the service principal resides.
     * 
     */
    @Import(name="tenantId", required=true)
    private String tenantId;

    /**
     * @return Unique identifier of the Azure Active Directory tenant where the service principal resides.
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }

    private GetFederatedDatabaseInstanceCloudProviderConfigAzure() {}

    private GetFederatedDatabaseInstanceCloudProviderConfigAzure(GetFederatedDatabaseInstanceCloudProviderConfigAzure $) {
        this.atlasAppId = $.atlasAppId;
        this.roleId = $.roleId;
        this.servicePrincipalId = $.servicePrincipalId;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFederatedDatabaseInstanceCloudProviderConfigAzure defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFederatedDatabaseInstanceCloudProviderConfigAzure $;

        public Builder() {
            $ = new GetFederatedDatabaseInstanceCloudProviderConfigAzure();
        }

        public Builder(GetFederatedDatabaseInstanceCloudProviderConfigAzure defaults) {
            $ = new GetFederatedDatabaseInstanceCloudProviderConfigAzure(Objects.requireNonNull(defaults));
        }

        public Builder atlasAppId(String atlasAppId) {
            $.atlasAppId = atlasAppId;
            return this;
        }

        /**
         * @param roleId Unique identifier of the role that the Federated Database Instance can use to access the data stores.
         * 
         * @return builder
         * 
         */
        public Builder roleId(String roleId) {
            $.roleId = roleId;
            return this;
        }

        /**
         * @param servicePrincipalId Unique identifier of the Azure service principal that the Federated Database instance uses to access Azure Blob Storage.
         * 
         * @return builder
         * 
         */
        public Builder servicePrincipalId(String servicePrincipalId) {
            $.servicePrincipalId = servicePrincipalId;
            return this;
        }

        /**
         * @param tenantId Unique identifier of the Azure Active Directory tenant where the service principal resides.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public GetFederatedDatabaseInstanceCloudProviderConfigAzure build() {
            if ($.atlasAppId == null) {
                throw new MissingRequiredPropertyException("GetFederatedDatabaseInstanceCloudProviderConfigAzure", "atlasAppId");
            }
            if ($.roleId == null) {
                throw new MissingRequiredPropertyException("GetFederatedDatabaseInstanceCloudProviderConfigAzure", "roleId");
            }
            if ($.servicePrincipalId == null) {
                throw new MissingRequiredPropertyException("GetFederatedDatabaseInstanceCloudProviderConfigAzure", "servicePrincipalId");
            }
            if ($.tenantId == null) {
                throw new MissingRequiredPropertyException("GetFederatedDatabaseInstanceCloudProviderConfigAzure", "tenantId");
            }
            return $;
        }
    }

}
