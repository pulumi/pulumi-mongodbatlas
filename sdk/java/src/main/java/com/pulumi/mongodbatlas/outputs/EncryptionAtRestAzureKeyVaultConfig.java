// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EncryptionAtRestAzureKeyVaultConfig {
    /**
     * @return Azure environment in which your account credentials reside.
     * 
     */
    private @Nullable String azureEnvironment;
    /**
     * @return Unique 36-hexadecimal character string that identifies an Azure application associated with your Azure Active Directory tenant.
     * 
     */
    private @Nullable String clientId;
    /**
     * @return Flag that indicates whether someone enabled encryption at rest for the specified  project. To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Web address with a unique key that identifies for your Azure Key Vault.
     * 
     */
    private @Nullable String keyIdentifier;
    /**
     * @return Unique string that identifies the Azure Key Vault that contains your key.
     * 
     */
    private @Nullable String keyVaultName;
    /**
     * @return Enable connection to your Azure Key Vault over private networking.
     * 
     */
    private @Nullable Boolean requirePrivateNetworking;
    /**
     * @return Name of the Azure resource group that contains your Azure Key Vault.
     * 
     */
    private @Nullable String resourceGroupName;
    /**
     * @return Private data that you need secured and that belongs to the specified Azure Key Vault (AKV) tenant (**azureKeyVault.tenantID**). This data can include any type of sensitive data such as passwords, database connection strings, API keys, and the like. AKV stores this information as encrypted binary data.
     * 
     */
    private @Nullable String secret;
    /**
     * @return Unique 36-hexadecimal character string that identifies your Azure subscription.
     * 
     */
    private @Nullable String subscriptionId;
    /**
     * @return Unique 36-hexadecimal character string that identifies the Azure Active Directory tenant within your Azure subscription.
     * 
     */
    private @Nullable String tenantId;
    /**
     * @return Flag that indicates whether the Azure encryption key can encrypt and decrypt data.
     * 
     */
    private @Nullable Boolean valid;

    private EncryptionAtRestAzureKeyVaultConfig() {}
    /**
     * @return Azure environment in which your account credentials reside.
     * 
     */
    public Optional<String> azureEnvironment() {
        return Optional.ofNullable(this.azureEnvironment);
    }
    /**
     * @return Unique 36-hexadecimal character string that identifies an Azure application associated with your Azure Active Directory tenant.
     * 
     */
    public Optional<String> clientId() {
        return Optional.ofNullable(this.clientId);
    }
    /**
     * @return Flag that indicates whether someone enabled encryption at rest for the specified  project. To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Web address with a unique key that identifies for your Azure Key Vault.
     * 
     */
    public Optional<String> keyIdentifier() {
        return Optional.ofNullable(this.keyIdentifier);
    }
    /**
     * @return Unique string that identifies the Azure Key Vault that contains your key.
     * 
     */
    public Optional<String> keyVaultName() {
        return Optional.ofNullable(this.keyVaultName);
    }
    /**
     * @return Enable connection to your Azure Key Vault over private networking.
     * 
     */
    public Optional<Boolean> requirePrivateNetworking() {
        return Optional.ofNullable(this.requirePrivateNetworking);
    }
    /**
     * @return Name of the Azure resource group that contains your Azure Key Vault.
     * 
     */
    public Optional<String> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }
    /**
     * @return Private data that you need secured and that belongs to the specified Azure Key Vault (AKV) tenant (**azureKeyVault.tenantID**). This data can include any type of sensitive data such as passwords, database connection strings, API keys, and the like. AKV stores this information as encrypted binary data.
     * 
     */
    public Optional<String> secret() {
        return Optional.ofNullable(this.secret);
    }
    /**
     * @return Unique 36-hexadecimal character string that identifies your Azure subscription.
     * 
     */
    public Optional<String> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }
    /**
     * @return Unique 36-hexadecimal character string that identifies the Azure Active Directory tenant within your Azure subscription.
     * 
     */
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }
    /**
     * @return Flag that indicates whether the Azure encryption key can encrypt and decrypt data.
     * 
     */
    public Optional<Boolean> valid() {
        return Optional.ofNullable(this.valid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EncryptionAtRestAzureKeyVaultConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String azureEnvironment;
        private @Nullable String clientId;
        private @Nullable Boolean enabled;
        private @Nullable String keyIdentifier;
        private @Nullable String keyVaultName;
        private @Nullable Boolean requirePrivateNetworking;
        private @Nullable String resourceGroupName;
        private @Nullable String secret;
        private @Nullable String subscriptionId;
        private @Nullable String tenantId;
        private @Nullable Boolean valid;
        public Builder() {}
        public Builder(EncryptionAtRestAzureKeyVaultConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureEnvironment = defaults.azureEnvironment;
    	      this.clientId = defaults.clientId;
    	      this.enabled = defaults.enabled;
    	      this.keyIdentifier = defaults.keyIdentifier;
    	      this.keyVaultName = defaults.keyVaultName;
    	      this.requirePrivateNetworking = defaults.requirePrivateNetworking;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.secret = defaults.secret;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.tenantId = defaults.tenantId;
    	      this.valid = defaults.valid;
        }

        @CustomType.Setter
        public Builder azureEnvironment(@Nullable String azureEnvironment) {

            this.azureEnvironment = azureEnvironment;
            return this;
        }
        @CustomType.Setter
        public Builder clientId(@Nullable String clientId) {

            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder keyIdentifier(@Nullable String keyIdentifier) {

            this.keyIdentifier = keyIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder keyVaultName(@Nullable String keyVaultName) {

            this.keyVaultName = keyVaultName;
            return this;
        }
        @CustomType.Setter
        public Builder requirePrivateNetworking(@Nullable Boolean requirePrivateNetworking) {

            this.requirePrivateNetworking = requirePrivateNetworking;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(@Nullable String resourceGroupName) {

            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder secret(@Nullable String secret) {

            this.secret = secret;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(@Nullable String subscriptionId) {

            this.subscriptionId = subscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(@Nullable String tenantId) {

            this.tenantId = tenantId;
            return this;
        }
        @CustomType.Setter
        public Builder valid(@Nullable Boolean valid) {

            this.valid = valid;
            return this;
        }
        public EncryptionAtRestAzureKeyVaultConfig build() {
            final var _resultValue = new EncryptionAtRestAzureKeyVaultConfig();
            _resultValue.azureEnvironment = azureEnvironment;
            _resultValue.clientId = clientId;
            _resultValue.enabled = enabled;
            _resultValue.keyIdentifier = keyIdentifier;
            _resultValue.keyVaultName = keyVaultName;
            _resultValue.requirePrivateNetworking = requirePrivateNetworking;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.secret = secret;
            _resultValue.subscriptionId = subscriptionId;
            _resultValue.tenantId = tenantId;
            _resultValue.valid = valid;
            return _resultValue;
        }
    }
}
