// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.mongodbatlas.inputs.CloudProviderAccessFeatureUsageArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudProviderAccessState extends com.pulumi.resources.ResourceArgs {

    public static final CloudProviderAccessState Empty = new CloudProviderAccessState();

    /**
     * Unique external ID Atlas uses when assuming the IAM role in your AWS account.
     * 
     */
    @Import(name="atlasAssumedRoleExternalId")
    private @Nullable Output<String> atlasAssumedRoleExternalId;

    /**
     * @return Unique external ID Atlas uses when assuming the IAM role in your AWS account.
     * 
     */
    public Optional<Output<String>> atlasAssumedRoleExternalId() {
        return Optional.ofNullable(this.atlasAssumedRoleExternalId);
    }

    /**
     * ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
     * 
     */
    @Import(name="atlasAwsAccountArn")
    private @Nullable Output<String> atlasAwsAccountArn;

    /**
     * @return ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
     * 
     */
    public Optional<Output<String>> atlasAwsAccountArn() {
        return Optional.ofNullable(this.atlasAwsAccountArn);
    }

    /**
     * Date on which this role was authorized.
     * 
     */
    @Import(name="authorizedDate")
    private @Nullable Output<String> authorizedDate;

    /**
     * @return Date on which this role was authorized.
     * 
     */
    public Optional<Output<String>> authorizedDate() {
        return Optional.ofNullable(this.authorizedDate);
    }

    /**
     * Date on which this role was created.
     * 
     */
    @Import(name="createdDate")
    private @Nullable Output<String> createdDate;

    /**
     * @return Date on which this role was created.
     * 
     */
    public Optional<Output<String>> createdDate() {
        return Optional.ofNullable(this.createdDate);
    }

    /**
     * Atlas features this AWS IAM role is linked to.
     * 
     */
    @Import(name="featureUsages")
    private @Nullable Output<List<CloudProviderAccessFeatureUsageArgs>> featureUsages;

    /**
     * @return Atlas features this AWS IAM role is linked to.
     * 
     */
    public Optional<Output<List<CloudProviderAccessFeatureUsageArgs>>> featureUsages() {
        return Optional.ofNullable(this.featureUsages);
    }

    /**
     * ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account. This value is required after the creation (register of the role) as part of [Set Up Unified AWS Access](https://docs.atlas.mongodb.com/security/set-up-unified-aws-access/#set-up-unified-aws-access).
     * 
     */
    @Import(name="iamAssumedRoleArn")
    private @Nullable Output<String> iamAssumedRoleArn;

    /**
     * @return ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account. This value is required after the creation (register of the role) as part of [Set Up Unified AWS Access](https://docs.atlas.mongodb.com/security/set-up-unified-aws-access/#set-up-unified-aws-access).
     * 
     */
    public Optional<Output<String>> iamAssumedRoleArn() {
        return Optional.ofNullable(this.iamAssumedRoleArn);
    }

    /**
     * The unique ID for the project
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The unique ID for the project
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The cloud provider for which to create a new role. Currently only AWS is supported.
     * 
     */
    @Import(name="providerName")
    private @Nullable Output<String> providerName;

    /**
     * @return The cloud provider for which to create a new role. Currently only AWS is supported.
     * 
     */
    public Optional<Output<String>> providerName() {
        return Optional.ofNullable(this.providerName);
    }

    /**
     * Unique ID of this role returned by mongodb atlas api
     * 
     * Conditional
     * 
     */
    @Import(name="roleId")
    private @Nullable Output<String> roleId;

    /**
     * @return Unique ID of this role returned by mongodb atlas api
     * 
     * Conditional
     * 
     */
    public Optional<Output<String>> roleId() {
        return Optional.ofNullable(this.roleId);
    }

    private CloudProviderAccessState() {}

    private CloudProviderAccessState(CloudProviderAccessState $) {
        this.atlasAssumedRoleExternalId = $.atlasAssumedRoleExternalId;
        this.atlasAwsAccountArn = $.atlasAwsAccountArn;
        this.authorizedDate = $.authorizedDate;
        this.createdDate = $.createdDate;
        this.featureUsages = $.featureUsages;
        this.iamAssumedRoleArn = $.iamAssumedRoleArn;
        this.projectId = $.projectId;
        this.providerName = $.providerName;
        this.roleId = $.roleId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudProviderAccessState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudProviderAccessState $;

        public Builder() {
            $ = new CloudProviderAccessState();
        }

        public Builder(CloudProviderAccessState defaults) {
            $ = new CloudProviderAccessState(Objects.requireNonNull(defaults));
        }

        /**
         * @param atlasAssumedRoleExternalId Unique external ID Atlas uses when assuming the IAM role in your AWS account.
         * 
         * @return builder
         * 
         */
        public Builder atlasAssumedRoleExternalId(@Nullable Output<String> atlasAssumedRoleExternalId) {
            $.atlasAssumedRoleExternalId = atlasAssumedRoleExternalId;
            return this;
        }

        /**
         * @param atlasAssumedRoleExternalId Unique external ID Atlas uses when assuming the IAM role in your AWS account.
         * 
         * @return builder
         * 
         */
        public Builder atlasAssumedRoleExternalId(String atlasAssumedRoleExternalId) {
            return atlasAssumedRoleExternalId(Output.of(atlasAssumedRoleExternalId));
        }

        /**
         * @param atlasAwsAccountArn ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
         * 
         * @return builder
         * 
         */
        public Builder atlasAwsAccountArn(@Nullable Output<String> atlasAwsAccountArn) {
            $.atlasAwsAccountArn = atlasAwsAccountArn;
            return this;
        }

        /**
         * @param atlasAwsAccountArn ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
         * 
         * @return builder
         * 
         */
        public Builder atlasAwsAccountArn(String atlasAwsAccountArn) {
            return atlasAwsAccountArn(Output.of(atlasAwsAccountArn));
        }

        /**
         * @param authorizedDate Date on which this role was authorized.
         * 
         * @return builder
         * 
         */
        public Builder authorizedDate(@Nullable Output<String> authorizedDate) {
            $.authorizedDate = authorizedDate;
            return this;
        }

        /**
         * @param authorizedDate Date on which this role was authorized.
         * 
         * @return builder
         * 
         */
        public Builder authorizedDate(String authorizedDate) {
            return authorizedDate(Output.of(authorizedDate));
        }

        /**
         * @param createdDate Date on which this role was created.
         * 
         * @return builder
         * 
         */
        public Builder createdDate(@Nullable Output<String> createdDate) {
            $.createdDate = createdDate;
            return this;
        }

        /**
         * @param createdDate Date on which this role was created.
         * 
         * @return builder
         * 
         */
        public Builder createdDate(String createdDate) {
            return createdDate(Output.of(createdDate));
        }

        /**
         * @param featureUsages Atlas features this AWS IAM role is linked to.
         * 
         * @return builder
         * 
         */
        public Builder featureUsages(@Nullable Output<List<CloudProviderAccessFeatureUsageArgs>> featureUsages) {
            $.featureUsages = featureUsages;
            return this;
        }

        /**
         * @param featureUsages Atlas features this AWS IAM role is linked to.
         * 
         * @return builder
         * 
         */
        public Builder featureUsages(List<CloudProviderAccessFeatureUsageArgs> featureUsages) {
            return featureUsages(Output.of(featureUsages));
        }

        /**
         * @param featureUsages Atlas features this AWS IAM role is linked to.
         * 
         * @return builder
         * 
         */
        public Builder featureUsages(CloudProviderAccessFeatureUsageArgs... featureUsages) {
            return featureUsages(List.of(featureUsages));
        }

        /**
         * @param iamAssumedRoleArn ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account. This value is required after the creation (register of the role) as part of [Set Up Unified AWS Access](https://docs.atlas.mongodb.com/security/set-up-unified-aws-access/#set-up-unified-aws-access).
         * 
         * @return builder
         * 
         */
        public Builder iamAssumedRoleArn(@Nullable Output<String> iamAssumedRoleArn) {
            $.iamAssumedRoleArn = iamAssumedRoleArn;
            return this;
        }

        /**
         * @param iamAssumedRoleArn ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account. This value is required after the creation (register of the role) as part of [Set Up Unified AWS Access](https://docs.atlas.mongodb.com/security/set-up-unified-aws-access/#set-up-unified-aws-access).
         * 
         * @return builder
         * 
         */
        public Builder iamAssumedRoleArn(String iamAssumedRoleArn) {
            return iamAssumedRoleArn(Output.of(iamAssumedRoleArn));
        }

        /**
         * @param projectId The unique ID for the project
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The unique ID for the project
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param providerName The cloud provider for which to create a new role. Currently only AWS is supported.
         * 
         * @return builder
         * 
         */
        public Builder providerName(@Nullable Output<String> providerName) {
            $.providerName = providerName;
            return this;
        }

        /**
         * @param providerName The cloud provider for which to create a new role. Currently only AWS is supported.
         * 
         * @return builder
         * 
         */
        public Builder providerName(String providerName) {
            return providerName(Output.of(providerName));
        }

        /**
         * @param roleId Unique ID of this role returned by mongodb atlas api
         * 
         * Conditional
         * 
         * @return builder
         * 
         */
        public Builder roleId(@Nullable Output<String> roleId) {
            $.roleId = roleId;
            return this;
        }

        /**
         * @param roleId Unique ID of this role returned by mongodb atlas api
         * 
         * Conditional
         * 
         * @return builder
         * 
         */
        public Builder roleId(String roleId) {
            return roleId(Output.of(roleId));
        }

        public CloudProviderAccessState build() {
            return $;
        }
    }

}
