// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetStreamAccountDetailsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStreamAccountDetailsArgs Empty = new GetStreamAccountDetailsArgs();

    /**
     * One of `aws` or `azure`.
     * 
     */
    @Import(name="cloudProvider", required=true)
    private Output<String> cloudProvider;

    /**
     * @return One of `aws` or `azure`.
     * 
     */
    public Output<String> cloudProvider() {
        return this.cloudProvider;
    }

    /**
     * Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    @Import(name="regionName", required=true)
    private Output<String> regionName;

    public Output<String> regionName() {
        return this.regionName;
    }

    private GetStreamAccountDetailsArgs() {}

    private GetStreamAccountDetailsArgs(GetStreamAccountDetailsArgs $) {
        this.cloudProvider = $.cloudProvider;
        this.projectId = $.projectId;
        this.regionName = $.regionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStreamAccountDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStreamAccountDetailsArgs $;

        public Builder() {
            $ = new GetStreamAccountDetailsArgs();
        }

        public Builder(GetStreamAccountDetailsArgs defaults) {
            $ = new GetStreamAccountDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudProvider One of `aws` or `azure`.
         * 
         * @return builder
         * 
         */
        public Builder cloudProvider(Output<String> cloudProvider) {
            $.cloudProvider = cloudProvider;
            return this;
        }

        /**
         * @param cloudProvider One of `aws` or `azure`.
         * 
         * @return builder
         * 
         */
        public Builder cloudProvider(String cloudProvider) {
            return cloudProvider(Output.of(cloudProvider));
        }

        /**
         * @param projectId Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public Builder regionName(Output<String> regionName) {
            $.regionName = regionName;
            return this;
        }

        public Builder regionName(String regionName) {
            return regionName(Output.of(regionName));
        }

        public GetStreamAccountDetailsArgs build() {
            if ($.cloudProvider == null) {
                throw new MissingRequiredPropertyException("GetStreamAccountDetailsArgs", "cloudProvider");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetStreamAccountDetailsArgs", "projectId");
            }
            if ($.regionName == null) {
                throw new MissingRequiredPropertyException("GetStreamAccountDetailsArgs", "regionName");
            }
            return $;
        }
    }

}
