// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudProviderAccessArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudProviderAccessArgs Empty = new CloudProviderAccessArgs();

    /**
     * ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account. This value is required after the creation (register of the role) as part of [Set Up Unified AWS Access](https://docs.atlas.mongodb.com/security/set-up-unified-aws-access/#set-up-unified-aws-access).
     * 
     */
    @Import(name="iamAssumedRoleArn")
    private @Nullable Output<String> iamAssumedRoleArn;

    /**
     * @return ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account. This value is required after the creation (register of the role) as part of [Set Up Unified AWS Access](https://docs.atlas.mongodb.com/security/set-up-unified-aws-access/#set-up-unified-aws-access).
     * 
     */
    public Optional<Output<String>> iamAssumedRoleArn() {
        return Optional.ofNullable(this.iamAssumedRoleArn);
    }

    /**
     * The unique ID for the project
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The unique ID for the project
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * The cloud provider for which to create a new role. Currently only AWS is supported.
     * 
     */
    @Import(name="providerName", required=true)
    private Output<String> providerName;

    /**
     * @return The cloud provider for which to create a new role. Currently only AWS is supported.
     * 
     */
    public Output<String> providerName() {
        return this.providerName;
    }

    private CloudProviderAccessArgs() {}

    private CloudProviderAccessArgs(CloudProviderAccessArgs $) {
        this.iamAssumedRoleArn = $.iamAssumedRoleArn;
        this.projectId = $.projectId;
        this.providerName = $.providerName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudProviderAccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudProviderAccessArgs $;

        public Builder() {
            $ = new CloudProviderAccessArgs();
        }

        public Builder(CloudProviderAccessArgs defaults) {
            $ = new CloudProviderAccessArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param iamAssumedRoleArn ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account. This value is required after the creation (register of the role) as part of [Set Up Unified AWS Access](https://docs.atlas.mongodb.com/security/set-up-unified-aws-access/#set-up-unified-aws-access).
         * 
         * @return builder
         * 
         */
        public Builder iamAssumedRoleArn(@Nullable Output<String> iamAssumedRoleArn) {
            $.iamAssumedRoleArn = iamAssumedRoleArn;
            return this;
        }

        /**
         * @param iamAssumedRoleArn ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account. This value is required after the creation (register of the role) as part of [Set Up Unified AWS Access](https://docs.atlas.mongodb.com/security/set-up-unified-aws-access/#set-up-unified-aws-access).
         * 
         * @return builder
         * 
         */
        public Builder iamAssumedRoleArn(String iamAssumedRoleArn) {
            return iamAssumedRoleArn(Output.of(iamAssumedRoleArn));
        }

        /**
         * @param projectId The unique ID for the project
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The unique ID for the project
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param providerName The cloud provider for which to create a new role. Currently only AWS is supported.
         * 
         * @return builder
         * 
         */
        public Builder providerName(Output<String> providerName) {
            $.providerName = providerName;
            return this;
        }

        /**
         * @param providerName The cloud provider for which to create a new role. Currently only AWS is supported.
         * 
         * @return builder
         * 
         */
        public Builder providerName(String providerName) {
            return providerName(Output.of(providerName));
        }

        public CloudProviderAccessArgs build() {
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("CloudProviderAccessArgs", "projectId");
            }
            if ($.providerName == null) {
                throw new MissingRequiredPropertyException("CloudProviderAccessArgs", "providerName");
            }
            return $;
        }
    }

}
