// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterReplicationSpecRegionsConfig {
    /**
     * @return The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
     * 
     */
    private @Nullable Integer analyticsNodes;
    /**
     * @return Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
     * * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
     * * Specify 0 if you do not want any electable nodes in the region.
     * * You cannot create electable nodes in a region if `priority` is 0.
     * 
     */
    private @Nullable Integer electableNodes;
    /**
     * @return Election priority of the region. For regions with only read-only nodes, set this value to 0.
     * * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
     * * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
     * * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
     * 
     */
    private @Nullable Integer priority;
    /**
     * @return Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
     * 
     */
    private @Nullable Integer readOnlyNodes;
    /**
     * @return Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     * 
     */
    private String regionName;

    private ClusterReplicationSpecRegionsConfig() {}
    /**
     * @return The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
     * 
     */
    public Optional<Integer> analyticsNodes() {
        return Optional.ofNullable(this.analyticsNodes);
    }
    /**
     * @return Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
     * * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
     * * Specify 0 if you do not want any electable nodes in the region.
     * * You cannot create electable nodes in a region if `priority` is 0.
     * 
     */
    public Optional<Integer> electableNodes() {
        return Optional.ofNullable(this.electableNodes);
    }
    /**
     * @return Election priority of the region. For regions with only read-only nodes, set this value to 0.
     * * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
     * * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
     * * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
     * 
     */
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }
    /**
     * @return Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
     * 
     */
    public Optional<Integer> readOnlyNodes() {
        return Optional.ofNullable(this.readOnlyNodes);
    }
    /**
     * @return Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     * 
     */
    public String regionName() {
        return this.regionName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterReplicationSpecRegionsConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer analyticsNodes;
        private @Nullable Integer electableNodes;
        private @Nullable Integer priority;
        private @Nullable Integer readOnlyNodes;
        private String regionName;
        public Builder() {}
        public Builder(ClusterReplicationSpecRegionsConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.analyticsNodes = defaults.analyticsNodes;
    	      this.electableNodes = defaults.electableNodes;
    	      this.priority = defaults.priority;
    	      this.readOnlyNodes = defaults.readOnlyNodes;
    	      this.regionName = defaults.regionName;
        }

        @CustomType.Setter
        public Builder analyticsNodes(@Nullable Integer analyticsNodes) {

            this.analyticsNodes = analyticsNodes;
            return this;
        }
        @CustomType.Setter
        public Builder electableNodes(@Nullable Integer electableNodes) {

            this.electableNodes = electableNodes;
            return this;
        }
        @CustomType.Setter
        public Builder priority(@Nullable Integer priority) {

            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder readOnlyNodes(@Nullable Integer readOnlyNodes) {

            this.readOnlyNodes = readOnlyNodes;
            return this;
        }
        @CustomType.Setter
        public Builder regionName(String regionName) {
            if (regionName == null) {
              throw new MissingRequiredPropertyException("ClusterReplicationSpecRegionsConfig", "regionName");
            }
            this.regionName = regionName;
            return this;
        }
        public ClusterReplicationSpecRegionsConfig build() {
            final var _resultValue = new ClusterReplicationSpecRegionsConfig();
            _resultValue.analyticsNodes = analyticsNodes;
            _resultValue.electableNodes = electableNodes;
            _resultValue.priority = priority;
            _resultValue.readOnlyNodes = readOnlyNodes;
            _resultValue.regionName = regionName;
            return _resultValue;
        }
    }
}
