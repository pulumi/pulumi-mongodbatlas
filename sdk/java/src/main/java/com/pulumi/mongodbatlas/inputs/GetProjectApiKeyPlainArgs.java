// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetProjectApiKeyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProjectApiKeyPlainArgs Empty = new GetProjectApiKeyPlainArgs();

    @Import(name="apiKeyId", required=true)
    private String apiKeyId;

    public String apiKeyId() {
        return this.apiKeyId;
    }

    /**
     * The unique ID for the project.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return The unique ID for the project.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    private GetProjectApiKeyPlainArgs() {}

    private GetProjectApiKeyPlainArgs(GetProjectApiKeyPlainArgs $) {
        this.apiKeyId = $.apiKeyId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProjectApiKeyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProjectApiKeyPlainArgs $;

        public Builder() {
            $ = new GetProjectApiKeyPlainArgs();
        }

        public Builder(GetProjectApiKeyPlainArgs defaults) {
            $ = new GetProjectApiKeyPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiKeyId(String apiKeyId) {
            $.apiKeyId = apiKeyId;
            return this;
        }

        /**
         * @param projectId The unique ID for the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetProjectApiKeyPlainArgs build() {
            $.apiKeyId = Objects.requireNonNull($.apiKeyId, "expected parameter 'apiKeyId' to be non-null");
            $.projectId = Objects.requireNonNull($.projectId, "expected parameter 'projectId' to be non-null");
            return $;
        }
    }

}
