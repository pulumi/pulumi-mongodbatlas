// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetSearchIndexPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSearchIndexPlainArgs Empty = new GetSearchIndexPlainArgs();

    /**
     * The name of the cluster containing the collection with one or more Atlas Search indexes.
     * 
     */
    @Import(name="clusterName", required=true)
    private String clusterName;

    /**
     * @return The name of the cluster containing the collection with one or more Atlas Search indexes.
     * 
     */
    public String clusterName() {
        return this.clusterName;
    }

    /**
     * The unique identifier of the Atlas Search index. Use the `mongodbatlas.getSearchIndexes`datasource to find the IDs of all Atlas Search indexes.
     * 
     */
    @Import(name="indexId", required=true)
    private String indexId;

    /**
     * @return The unique identifier of the Atlas Search index. Use the `mongodbatlas.getSearchIndexes`datasource to find the IDs of all Atlas Search indexes.
     * 
     */
    public String indexId() {
        return this.indexId;
    }

    /**
     * The unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return The unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    private GetSearchIndexPlainArgs() {}

    private GetSearchIndexPlainArgs(GetSearchIndexPlainArgs $) {
        this.clusterName = $.clusterName;
        this.indexId = $.indexId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSearchIndexPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSearchIndexPlainArgs $;

        public Builder() {
            $ = new GetSearchIndexPlainArgs();
        }

        public Builder(GetSearchIndexPlainArgs defaults) {
            $ = new GetSearchIndexPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName The name of the cluster containing the collection with one or more Atlas Search indexes.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param indexId The unique identifier of the Atlas Search index. Use the `mongodbatlas.getSearchIndexes`datasource to find the IDs of all Atlas Search indexes.
         * 
         * @return builder
         * 
         */
        public Builder indexId(String indexId) {
            $.indexId = indexId;
            return this;
        }

        /**
         * @param projectId The unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetSearchIndexPlainArgs build() {
            if ($.clusterName == null) {
                throw new MissingRequiredPropertyException("GetSearchIndexPlainArgs", "clusterName");
            }
            if ($.indexId == null) {
                throw new MissingRequiredPropertyException("GetSearchIndexPlainArgs", "indexId");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetSearchIndexPlainArgs", "projectId");
            }
            return $;
        }
    }

}
