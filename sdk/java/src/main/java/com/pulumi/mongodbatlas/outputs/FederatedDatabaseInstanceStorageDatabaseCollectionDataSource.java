// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FederatedDatabaseInstanceStorageDatabaseCollectionDataSource {
    private @Nullable Boolean allowInsecure;
    private @Nullable String collection;
    private @Nullable String collectionRegex;
    private @Nullable String database;
    private @Nullable String databaseRegex;
    private @Nullable String datasetName;
    private @Nullable String defaultFormat;
    private @Nullable String path;
    private @Nullable String provenanceFieldName;
    private @Nullable String storeName;
    private @Nullable List<String> urls;

    private FederatedDatabaseInstanceStorageDatabaseCollectionDataSource() {}
    public Optional<Boolean> allowInsecure() {
        return Optional.ofNullable(this.allowInsecure);
    }
    public Optional<String> collection() {
        return Optional.ofNullable(this.collection);
    }
    public Optional<String> collectionRegex() {
        return Optional.ofNullable(this.collectionRegex);
    }
    public Optional<String> database() {
        return Optional.ofNullable(this.database);
    }
    public Optional<String> databaseRegex() {
        return Optional.ofNullable(this.databaseRegex);
    }
    public Optional<String> datasetName() {
        return Optional.ofNullable(this.datasetName);
    }
    public Optional<String> defaultFormat() {
        return Optional.ofNullable(this.defaultFormat);
    }
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    public Optional<String> provenanceFieldName() {
        return Optional.ofNullable(this.provenanceFieldName);
    }
    public Optional<String> storeName() {
        return Optional.ofNullable(this.storeName);
    }
    public List<String> urls() {
        return this.urls == null ? List.of() : this.urls;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FederatedDatabaseInstanceStorageDatabaseCollectionDataSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowInsecure;
        private @Nullable String collection;
        private @Nullable String collectionRegex;
        private @Nullable String database;
        private @Nullable String databaseRegex;
        private @Nullable String datasetName;
        private @Nullable String defaultFormat;
        private @Nullable String path;
        private @Nullable String provenanceFieldName;
        private @Nullable String storeName;
        private @Nullable List<String> urls;
        public Builder() {}
        public Builder(FederatedDatabaseInstanceStorageDatabaseCollectionDataSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowInsecure = defaults.allowInsecure;
    	      this.collection = defaults.collection;
    	      this.collectionRegex = defaults.collectionRegex;
    	      this.database = defaults.database;
    	      this.databaseRegex = defaults.databaseRegex;
    	      this.datasetName = defaults.datasetName;
    	      this.defaultFormat = defaults.defaultFormat;
    	      this.path = defaults.path;
    	      this.provenanceFieldName = defaults.provenanceFieldName;
    	      this.storeName = defaults.storeName;
    	      this.urls = defaults.urls;
        }

        @CustomType.Setter
        public Builder allowInsecure(@Nullable Boolean allowInsecure) {

            this.allowInsecure = allowInsecure;
            return this;
        }
        @CustomType.Setter
        public Builder collection(@Nullable String collection) {

            this.collection = collection;
            return this;
        }
        @CustomType.Setter
        public Builder collectionRegex(@Nullable String collectionRegex) {

            this.collectionRegex = collectionRegex;
            return this;
        }
        @CustomType.Setter
        public Builder database(@Nullable String database) {

            this.database = database;
            return this;
        }
        @CustomType.Setter
        public Builder databaseRegex(@Nullable String databaseRegex) {

            this.databaseRegex = databaseRegex;
            return this;
        }
        @CustomType.Setter
        public Builder datasetName(@Nullable String datasetName) {

            this.datasetName = datasetName;
            return this;
        }
        @CustomType.Setter
        public Builder defaultFormat(@Nullable String defaultFormat) {

            this.defaultFormat = defaultFormat;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder provenanceFieldName(@Nullable String provenanceFieldName) {

            this.provenanceFieldName = provenanceFieldName;
            return this;
        }
        @CustomType.Setter
        public Builder storeName(@Nullable String storeName) {

            this.storeName = storeName;
            return this;
        }
        @CustomType.Setter
        public Builder urls(@Nullable List<String> urls) {

            this.urls = urls;
            return this;
        }
        public Builder urls(String... urls) {
            return urls(List.of(urls));
        }
        public FederatedDatabaseInstanceStorageDatabaseCollectionDataSource build() {
            final var _resultValue = new FederatedDatabaseInstanceStorageDatabaseCollectionDataSource();
            _resultValue.allowInsecure = allowInsecure;
            _resultValue.collection = collection;
            _resultValue.collectionRegex = collectionRegex;
            _resultValue.database = database;
            _resultValue.databaseRegex = databaseRegex;
            _resultValue.datasetName = datasetName;
            _resultValue.defaultFormat = defaultFormat;
            _resultValue.path = path;
            _resultValue.provenanceFieldName = provenanceFieldName;
            _resultValue.storeName = storeName;
            _resultValue.urls = urls;
            return _resultValue;
        }
    }
}
