// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPrivateLinkEndpointResult {
    /**
     * @return GCP network endpoint groups corresponding to the Private Service Connect endpoint service.
     * 
     */
    private List<String> endpointGroupNames;
    /**
     * @return Name of the PrivateLink endpoint service in AWS. Returns null while the endpoint service is being created.
     * 
     */
    private String endpointServiceName;
    /**
     * @return Error message pertaining to the AWS PrivateLink connection. Returns null if there are no errors.
     * 
     */
    private String errorMessage;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Unique identifiers of the interface endpoints in your VPC that you added to the AWS PrivateLink connection.
     * 
     */
    private List<String> interfaceEndpoints;
    /**
     * @return All private endpoints that you have added to this Azure Private Link Service.
     * 
     */
    private List<String> privateEndpoints;
    private String privateLinkId;
    /**
     * @return Name of the Azure Private Link Service that Atlas manages.
     * 
     */
    private String privateLinkServiceName;
    /**
     * @return Resource ID of the Azure Private Link Service that Atlas manages.
     * 
     */
    private String privateLinkServiceResourceId;
    private String projectId;
    private String providerName;
    /**
     * @return GCP region for the Private Service Connect endpoint service.
     * 
     */
    private String regionName;
    /**
     * @return Unique alphanumeric and special character strings that identify the service attachments associated with the GCP Private Service Connect endpoint service.
     * 
     */
    private List<String> serviceAttachmentNames;
    /**
     * @return Status of the AWS PrivateLink connection.
     * Returns one of the following values:
     * 
     */
    private String status;

    private GetPrivateLinkEndpointResult() {}
    /**
     * @return GCP network endpoint groups corresponding to the Private Service Connect endpoint service.
     * 
     */
    public List<String> endpointGroupNames() {
        return this.endpointGroupNames;
    }
    /**
     * @return Name of the PrivateLink endpoint service in AWS. Returns null while the endpoint service is being created.
     * 
     */
    public String endpointServiceName() {
        return this.endpointServiceName;
    }
    /**
     * @return Error message pertaining to the AWS PrivateLink connection. Returns null if there are no errors.
     * 
     */
    public String errorMessage() {
        return this.errorMessage;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique identifiers of the interface endpoints in your VPC that you added to the AWS PrivateLink connection.
     * 
     */
    public List<String> interfaceEndpoints() {
        return this.interfaceEndpoints;
    }
    /**
     * @return All private endpoints that you have added to this Azure Private Link Service.
     * 
     */
    public List<String> privateEndpoints() {
        return this.privateEndpoints;
    }
    public String privateLinkId() {
        return this.privateLinkId;
    }
    /**
     * @return Name of the Azure Private Link Service that Atlas manages.
     * 
     */
    public String privateLinkServiceName() {
        return this.privateLinkServiceName;
    }
    /**
     * @return Resource ID of the Azure Private Link Service that Atlas manages.
     * 
     */
    public String privateLinkServiceResourceId() {
        return this.privateLinkServiceResourceId;
    }
    public String projectId() {
        return this.projectId;
    }
    public String providerName() {
        return this.providerName;
    }
    /**
     * @return GCP region for the Private Service Connect endpoint service.
     * 
     */
    public String regionName() {
        return this.regionName;
    }
    /**
     * @return Unique alphanumeric and special character strings that identify the service attachments associated with the GCP Private Service Connect endpoint service.
     * 
     */
    public List<String> serviceAttachmentNames() {
        return this.serviceAttachmentNames;
    }
    /**
     * @return Status of the AWS PrivateLink connection.
     * Returns one of the following values:
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrivateLinkEndpointResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> endpointGroupNames;
        private String endpointServiceName;
        private String errorMessage;
        private String id;
        private List<String> interfaceEndpoints;
        private List<String> privateEndpoints;
        private String privateLinkId;
        private String privateLinkServiceName;
        private String privateLinkServiceResourceId;
        private String projectId;
        private String providerName;
        private String regionName;
        private List<String> serviceAttachmentNames;
        private String status;
        public Builder() {}
        public Builder(GetPrivateLinkEndpointResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpointGroupNames = defaults.endpointGroupNames;
    	      this.endpointServiceName = defaults.endpointServiceName;
    	      this.errorMessage = defaults.errorMessage;
    	      this.id = defaults.id;
    	      this.interfaceEndpoints = defaults.interfaceEndpoints;
    	      this.privateEndpoints = defaults.privateEndpoints;
    	      this.privateLinkId = defaults.privateLinkId;
    	      this.privateLinkServiceName = defaults.privateLinkServiceName;
    	      this.privateLinkServiceResourceId = defaults.privateLinkServiceResourceId;
    	      this.projectId = defaults.projectId;
    	      this.providerName = defaults.providerName;
    	      this.regionName = defaults.regionName;
    	      this.serviceAttachmentNames = defaults.serviceAttachmentNames;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder endpointGroupNames(List<String> endpointGroupNames) {
            this.endpointGroupNames = Objects.requireNonNull(endpointGroupNames);
            return this;
        }
        public Builder endpointGroupNames(String... endpointGroupNames) {
            return endpointGroupNames(List.of(endpointGroupNames));
        }
        @CustomType.Setter
        public Builder endpointServiceName(String endpointServiceName) {
            this.endpointServiceName = Objects.requireNonNull(endpointServiceName);
            return this;
        }
        @CustomType.Setter
        public Builder errorMessage(String errorMessage) {
            this.errorMessage = Objects.requireNonNull(errorMessage);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder interfaceEndpoints(List<String> interfaceEndpoints) {
            this.interfaceEndpoints = Objects.requireNonNull(interfaceEndpoints);
            return this;
        }
        public Builder interfaceEndpoints(String... interfaceEndpoints) {
            return interfaceEndpoints(List.of(interfaceEndpoints));
        }
        @CustomType.Setter
        public Builder privateEndpoints(List<String> privateEndpoints) {
            this.privateEndpoints = Objects.requireNonNull(privateEndpoints);
            return this;
        }
        public Builder privateEndpoints(String... privateEndpoints) {
            return privateEndpoints(List.of(privateEndpoints));
        }
        @CustomType.Setter
        public Builder privateLinkId(String privateLinkId) {
            this.privateLinkId = Objects.requireNonNull(privateLinkId);
            return this;
        }
        @CustomType.Setter
        public Builder privateLinkServiceName(String privateLinkServiceName) {
            this.privateLinkServiceName = Objects.requireNonNull(privateLinkServiceName);
            return this;
        }
        @CustomType.Setter
        public Builder privateLinkServiceResourceId(String privateLinkServiceResourceId) {
            this.privateLinkServiceResourceId = Objects.requireNonNull(privateLinkServiceResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder providerName(String providerName) {
            this.providerName = Objects.requireNonNull(providerName);
            return this;
        }
        @CustomType.Setter
        public Builder regionName(String regionName) {
            this.regionName = Objects.requireNonNull(regionName);
            return this;
        }
        @CustomType.Setter
        public Builder serviceAttachmentNames(List<String> serviceAttachmentNames) {
            this.serviceAttachmentNames = Objects.requireNonNull(serviceAttachmentNames);
            return this;
        }
        public Builder serviceAttachmentNames(String... serviceAttachmentNames) {
            return serviceAttachmentNames(List.of(serviceAttachmentNames));
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public GetPrivateLinkEndpointResult build() {
            final var _resultValue = new GetPrivateLinkEndpointResult();
            _resultValue.endpointGroupNames = endpointGroupNames;
            _resultValue.endpointServiceName = endpointServiceName;
            _resultValue.errorMessage = errorMessage;
            _resultValue.id = id;
            _resultValue.interfaceEndpoints = interfaceEndpoints;
            _resultValue.privateEndpoints = privateEndpoints;
            _resultValue.privateLinkId = privateLinkId;
            _resultValue.privateLinkServiceName = privateLinkServiceName;
            _resultValue.privateLinkServiceResourceId = privateLinkServiceResourceId;
            _resultValue.projectId = projectId;
            _resultValue.providerName = providerName;
            _resultValue.regionName = regionName;
            _resultValue.serviceAttachmentNames = serviceAttachmentNames;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
