// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterAdvancedConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterAdvancedConfigurationArgs Empty = new ClusterAdvancedConfigurationArgs();

    /**
     * The minimum pre- and post-image retention time in seconds. This option corresponds to the `changeStreamOptions.preAndPostImages.expireAfterSeconds` cluster parameter. Defaults to `-1`(off). This setting controls the retention policy of change stream pre- and post-images. Pre- and post-images are the versions of a document before and after document modification, respectively.`expireAfterSeconds` controls how long MongoDB retains pre- and post-images. When set to -1 (off), MongoDB uses the default retention policy: pre- and post-images are retained until the corresponding change stream events are removed from the oplog. To set the minimum pre- and post-image retention time, specify an integer value greater than zero. Setting this too low could increase the risk of interrupting Realm sync or triggers processing. This parameter is only supported for MongoDB version 6.0 and above.
     * 
     */
    @Import(name="changeStreamOptionsPreAndPostImagesExpireAfterSeconds")
    private @Nullable Output<Integer> changeStreamOptionsPreAndPostImagesExpireAfterSeconds;

    /**
     * @return The minimum pre- and post-image retention time in seconds. This option corresponds to the `changeStreamOptions.preAndPostImages.expireAfterSeconds` cluster parameter. Defaults to `-1`(off). This setting controls the retention policy of change stream pre- and post-images. Pre- and post-images are the versions of a document before and after document modification, respectively.`expireAfterSeconds` controls how long MongoDB retains pre- and post-images. When set to -1 (off), MongoDB uses the default retention policy: pre- and post-images are retained until the corresponding change stream events are removed from the oplog. To set the minimum pre- and post-image retention time, specify an integer value greater than zero. Setting this too low could increase the risk of interrupting Realm sync or triggers processing. This parameter is only supported for MongoDB version 6.0 and above.
     * 
     */
    public Optional<Output<Integer>> changeStreamOptionsPreAndPostImagesExpireAfterSeconds() {
        return Optional.ofNullable(this.changeStreamOptionsPreAndPostImagesExpireAfterSeconds);
    }

    /**
     * The custom OpenSSL cipher suite list for TLS 1.2. This field is only valid when `tls_cipher_config_mode` is set to `CUSTOM`.
     * 
     */
    @Import(name="customOpensslCipherConfigTls12s")
    private @Nullable Output<List<String>> customOpensslCipherConfigTls12s;

    /**
     * @return The custom OpenSSL cipher suite list for TLS 1.2. This field is only valid when `tls_cipher_config_mode` is set to `CUSTOM`.
     * 
     */
    public Optional<Output<List<String>>> customOpensslCipherConfigTls12s() {
        return Optional.ofNullable(this.customOpensslCipherConfigTls12s);
    }

    @Import(name="defaultMaxTimeMs")
    private @Nullable Output<Integer> defaultMaxTimeMs;

    public Optional<Output<Integer>> defaultMaxTimeMs() {
        return Optional.ofNullable(this.defaultMaxTimeMs);
    }

    /**
     * [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. **(DEPRECATED)** MongoDB 6.0 and later clusters default to `local`. To use a custom read concern level, please refer to your driver documentation.
     * 
     * @deprecated
     * This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     * 
     */
    @Deprecated /* This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide */
    @Import(name="defaultReadConcern")
    private @Nullable Output<String> defaultReadConcern;

    /**
     * @return [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. **(DEPRECATED)** MongoDB 6.0 and later clusters default to `local`. To use a custom read concern level, please refer to your driver documentation.
     * 
     * @deprecated
     * This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     * 
     */
    @Deprecated /* This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide */
    public Optional<Output<String>> defaultReadConcern() {
        return Optional.ofNullable(this.defaultReadConcern);
    }

    /**
     * [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 6.0 clusters default to [majority](https://docs.mongodb.com/manual/reference/write-concern/).
     * 
     */
    @Import(name="defaultWriteConcern")
    private @Nullable Output<String> defaultWriteConcern;

    /**
     * @return [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 6.0 clusters default to [majority](https://docs.mongodb.com/manual/reference/write-concern/).
     * 
     */
    public Optional<Output<String>> defaultWriteConcern() {
        return Optional.ofNullable(this.defaultWriteConcern);
    }

    /**
     * **(DEPRECATED)** (Optional) When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
     * 
     * @deprecated
     * This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     * 
     */
    @Deprecated /* This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide */
    @Import(name="failIndexKeyTooLong")
    private @Nullable Output<Boolean> failIndexKeyTooLong;

    /**
     * @return **(DEPRECATED)** (Optional) When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
     * 
     * @deprecated
     * This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     * 
     */
    @Deprecated /* This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide */
    public Optional<Output<Boolean>> failIndexKeyTooLong() {
        return Optional.ofNullable(this.failIndexKeyTooLong);
    }

    /**
     * When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
     * 
     */
    @Import(name="javascriptEnabled")
    private @Nullable Output<Boolean> javascriptEnabled;

    /**
     * @return When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
     * 
     */
    public Optional<Output<Boolean>> javascriptEnabled() {
        return Optional.ofNullable(this.javascriptEnabled);
    }

    /**
     * Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections. Valid values are:
     * - TLS1_0
     * - TLS1_1
     * - TLS1_2
     * 
     */
    @Import(name="minimumEnabledTlsProtocol")
    private @Nullable Output<String> minimumEnabledTlsProtocol;

    /**
     * @return Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections. Valid values are:
     * - TLS1_0
     * - TLS1_1
     * - TLS1_2
     * 
     */
    public Optional<Output<String>> minimumEnabledTlsProtocol() {
        return Optional.ofNullable(this.minimumEnabledTlsProtocol);
    }

    /**
     * When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
     * 
     */
    @Import(name="noTableScan")
    private @Nullable Output<Boolean> noTableScan;

    /**
     * @return When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
     * 
     */
    public Optional<Output<Boolean>> noTableScan() {
        return Optional.ofNullable(this.noTableScan);
    }

    /**
     * Minimum retention window for cluster&#39;s oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
     * * **Note**  A minimum oplog retention is required when seeking to change a cluster&#39;s class to Local NVMe SSD. To learn more and for latest guidance see  [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
     * 
     */
    @Import(name="oplogMinRetentionHours")
    private @Nullable Output<Double> oplogMinRetentionHours;

    /**
     * @return Minimum retention window for cluster&#39;s oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
     * * **Note**  A minimum oplog retention is required when seeking to change a cluster&#39;s class to Local NVMe SSD. To learn more and for latest guidance see  [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
     * 
     */
    public Optional<Output<Double>> oplogMinRetentionHours() {
        return Optional.ofNullable(this.oplogMinRetentionHours);
    }

    /**
     * The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
     * 
     */
    @Import(name="oplogSizeMb")
    private @Nullable Output<Integer> oplogSizeMb;

    /**
     * @return The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
     * 
     */
    public Optional<Output<Integer>> oplogSizeMb() {
        return Optional.ofNullable(this.oplogSizeMb);
    }

    /**
     * Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     * 
     */
    @Import(name="sampleRefreshIntervalBiConnector")
    private @Nullable Output<Integer> sampleRefreshIntervalBiConnector;

    /**
     * @return Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     * 
     */
    public Optional<Output<Integer>> sampleRefreshIntervalBiConnector() {
        return Optional.ofNullable(this.sampleRefreshIntervalBiConnector);
    }

    /**
     * Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     * 
     */
    @Import(name="sampleSizeBiConnector")
    private @Nullable Output<Integer> sampleSizeBiConnector;

    /**
     * @return Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     * 
     */
    public Optional<Output<Integer>> sampleSizeBiConnector() {
        return Optional.ofNullable(this.sampleSizeBiConnector);
    }

    /**
     * The TLS cipher suite configuration mode. Valid values include `CUSTOM` or `DEFAULT`. The `DEFAULT` mode uses the default cipher suites. The `CUSTOM` mode allows you to specify custom cipher suites for both TLS 1.2 and TLS 1.3. To unset, this should be set back to `DEFAULT`.
     * 
     */
    @Import(name="tlsCipherConfigMode")
    private @Nullable Output<String> tlsCipherConfigMode;

    /**
     * @return The TLS cipher suite configuration mode. Valid values include `CUSTOM` or `DEFAULT`. The `DEFAULT` mode uses the default cipher suites. The `CUSTOM` mode allows you to specify custom cipher suites for both TLS 1.2 and TLS 1.3. To unset, this should be set back to `DEFAULT`.
     * 
     */
    public Optional<Output<String>> tlsCipherConfigMode() {
        return Optional.ofNullable(this.tlsCipherConfigMode);
    }

    /**
     * Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
     * 
     */
    @Import(name="transactionLifetimeLimitSeconds")
    private @Nullable Output<Integer> transactionLifetimeLimitSeconds;

    /**
     * @return Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
     * 
     */
    public Optional<Output<Integer>> transactionLifetimeLimitSeconds() {
        return Optional.ofNullable(this.transactionLifetimeLimitSeconds);
    }

    private ClusterAdvancedConfigurationArgs() {}

    private ClusterAdvancedConfigurationArgs(ClusterAdvancedConfigurationArgs $) {
        this.changeStreamOptionsPreAndPostImagesExpireAfterSeconds = $.changeStreamOptionsPreAndPostImagesExpireAfterSeconds;
        this.customOpensslCipherConfigTls12s = $.customOpensslCipherConfigTls12s;
        this.defaultMaxTimeMs = $.defaultMaxTimeMs;
        this.defaultReadConcern = $.defaultReadConcern;
        this.defaultWriteConcern = $.defaultWriteConcern;
        this.failIndexKeyTooLong = $.failIndexKeyTooLong;
        this.javascriptEnabled = $.javascriptEnabled;
        this.minimumEnabledTlsProtocol = $.minimumEnabledTlsProtocol;
        this.noTableScan = $.noTableScan;
        this.oplogMinRetentionHours = $.oplogMinRetentionHours;
        this.oplogSizeMb = $.oplogSizeMb;
        this.sampleRefreshIntervalBiConnector = $.sampleRefreshIntervalBiConnector;
        this.sampleSizeBiConnector = $.sampleSizeBiConnector;
        this.tlsCipherConfigMode = $.tlsCipherConfigMode;
        this.transactionLifetimeLimitSeconds = $.transactionLifetimeLimitSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterAdvancedConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterAdvancedConfigurationArgs $;

        public Builder() {
            $ = new ClusterAdvancedConfigurationArgs();
        }

        public Builder(ClusterAdvancedConfigurationArgs defaults) {
            $ = new ClusterAdvancedConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param changeStreamOptionsPreAndPostImagesExpireAfterSeconds The minimum pre- and post-image retention time in seconds. This option corresponds to the `changeStreamOptions.preAndPostImages.expireAfterSeconds` cluster parameter. Defaults to `-1`(off). This setting controls the retention policy of change stream pre- and post-images. Pre- and post-images are the versions of a document before and after document modification, respectively.`expireAfterSeconds` controls how long MongoDB retains pre- and post-images. When set to -1 (off), MongoDB uses the default retention policy: pre- and post-images are retained until the corresponding change stream events are removed from the oplog. To set the minimum pre- and post-image retention time, specify an integer value greater than zero. Setting this too low could increase the risk of interrupting Realm sync or triggers processing. This parameter is only supported for MongoDB version 6.0 and above.
         * 
         * @return builder
         * 
         */
        public Builder changeStreamOptionsPreAndPostImagesExpireAfterSeconds(@Nullable Output<Integer> changeStreamOptionsPreAndPostImagesExpireAfterSeconds) {
            $.changeStreamOptionsPreAndPostImagesExpireAfterSeconds = changeStreamOptionsPreAndPostImagesExpireAfterSeconds;
            return this;
        }

        /**
         * @param changeStreamOptionsPreAndPostImagesExpireAfterSeconds The minimum pre- and post-image retention time in seconds. This option corresponds to the `changeStreamOptions.preAndPostImages.expireAfterSeconds` cluster parameter. Defaults to `-1`(off). This setting controls the retention policy of change stream pre- and post-images. Pre- and post-images are the versions of a document before and after document modification, respectively.`expireAfterSeconds` controls how long MongoDB retains pre- and post-images. When set to -1 (off), MongoDB uses the default retention policy: pre- and post-images are retained until the corresponding change stream events are removed from the oplog. To set the minimum pre- and post-image retention time, specify an integer value greater than zero. Setting this too low could increase the risk of interrupting Realm sync or triggers processing. This parameter is only supported for MongoDB version 6.0 and above.
         * 
         * @return builder
         * 
         */
        public Builder changeStreamOptionsPreAndPostImagesExpireAfterSeconds(Integer changeStreamOptionsPreAndPostImagesExpireAfterSeconds) {
            return changeStreamOptionsPreAndPostImagesExpireAfterSeconds(Output.of(changeStreamOptionsPreAndPostImagesExpireAfterSeconds));
        }

        /**
         * @param customOpensslCipherConfigTls12s The custom OpenSSL cipher suite list for TLS 1.2. This field is only valid when `tls_cipher_config_mode` is set to `CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder customOpensslCipherConfigTls12s(@Nullable Output<List<String>> customOpensslCipherConfigTls12s) {
            $.customOpensslCipherConfigTls12s = customOpensslCipherConfigTls12s;
            return this;
        }

        /**
         * @param customOpensslCipherConfigTls12s The custom OpenSSL cipher suite list for TLS 1.2. This field is only valid when `tls_cipher_config_mode` is set to `CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder customOpensslCipherConfigTls12s(List<String> customOpensslCipherConfigTls12s) {
            return customOpensslCipherConfigTls12s(Output.of(customOpensslCipherConfigTls12s));
        }

        /**
         * @param customOpensslCipherConfigTls12s The custom OpenSSL cipher suite list for TLS 1.2. This field is only valid when `tls_cipher_config_mode` is set to `CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder customOpensslCipherConfigTls12s(String... customOpensslCipherConfigTls12s) {
            return customOpensslCipherConfigTls12s(List.of(customOpensslCipherConfigTls12s));
        }

        public Builder defaultMaxTimeMs(@Nullable Output<Integer> defaultMaxTimeMs) {
            $.defaultMaxTimeMs = defaultMaxTimeMs;
            return this;
        }

        public Builder defaultMaxTimeMs(Integer defaultMaxTimeMs) {
            return defaultMaxTimeMs(Output.of(defaultMaxTimeMs));
        }

        /**
         * @param defaultReadConcern [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. **(DEPRECATED)** MongoDB 6.0 and later clusters default to `local`. To use a custom read concern level, please refer to your driver documentation.
         * 
         * @return builder
         * 
         * @deprecated
         * This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
         * 
         */
        @Deprecated /* This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide */
        public Builder defaultReadConcern(@Nullable Output<String> defaultReadConcern) {
            $.defaultReadConcern = defaultReadConcern;
            return this;
        }

        /**
         * @param defaultReadConcern [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. **(DEPRECATED)** MongoDB 6.0 and later clusters default to `local`. To use a custom read concern level, please refer to your driver documentation.
         * 
         * @return builder
         * 
         * @deprecated
         * This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
         * 
         */
        @Deprecated /* This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide */
        public Builder defaultReadConcern(String defaultReadConcern) {
            return defaultReadConcern(Output.of(defaultReadConcern));
        }

        /**
         * @param defaultWriteConcern [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 6.0 clusters default to [majority](https://docs.mongodb.com/manual/reference/write-concern/).
         * 
         * @return builder
         * 
         */
        public Builder defaultWriteConcern(@Nullable Output<String> defaultWriteConcern) {
            $.defaultWriteConcern = defaultWriteConcern;
            return this;
        }

        /**
         * @param defaultWriteConcern [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 6.0 clusters default to [majority](https://docs.mongodb.com/manual/reference/write-concern/).
         * 
         * @return builder
         * 
         */
        public Builder defaultWriteConcern(String defaultWriteConcern) {
            return defaultWriteConcern(Output.of(defaultWriteConcern));
        }

        /**
         * @param failIndexKeyTooLong **(DEPRECATED)** (Optional) When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
         * 
         * @return builder
         * 
         * @deprecated
         * This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
         * 
         */
        @Deprecated /* This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide */
        public Builder failIndexKeyTooLong(@Nullable Output<Boolean> failIndexKeyTooLong) {
            $.failIndexKeyTooLong = failIndexKeyTooLong;
            return this;
        }

        /**
         * @param failIndexKeyTooLong **(DEPRECATED)** (Optional) When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
         * 
         * @return builder
         * 
         * @deprecated
         * This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
         * 
         */
        @Deprecated /* This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide */
        public Builder failIndexKeyTooLong(Boolean failIndexKeyTooLong) {
            return failIndexKeyTooLong(Output.of(failIndexKeyTooLong));
        }

        /**
         * @param javascriptEnabled When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
         * 
         * @return builder
         * 
         */
        public Builder javascriptEnabled(@Nullable Output<Boolean> javascriptEnabled) {
            $.javascriptEnabled = javascriptEnabled;
            return this;
        }

        /**
         * @param javascriptEnabled When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
         * 
         * @return builder
         * 
         */
        public Builder javascriptEnabled(Boolean javascriptEnabled) {
            return javascriptEnabled(Output.of(javascriptEnabled));
        }

        /**
         * @param minimumEnabledTlsProtocol Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections. Valid values are:
         * - TLS1_0
         * - TLS1_1
         * - TLS1_2
         * 
         * @return builder
         * 
         */
        public Builder minimumEnabledTlsProtocol(@Nullable Output<String> minimumEnabledTlsProtocol) {
            $.minimumEnabledTlsProtocol = minimumEnabledTlsProtocol;
            return this;
        }

        /**
         * @param minimumEnabledTlsProtocol Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections. Valid values are:
         * - TLS1_0
         * - TLS1_1
         * - TLS1_2
         * 
         * @return builder
         * 
         */
        public Builder minimumEnabledTlsProtocol(String minimumEnabledTlsProtocol) {
            return minimumEnabledTlsProtocol(Output.of(minimumEnabledTlsProtocol));
        }

        /**
         * @param noTableScan When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
         * 
         * @return builder
         * 
         */
        public Builder noTableScan(@Nullable Output<Boolean> noTableScan) {
            $.noTableScan = noTableScan;
            return this;
        }

        /**
         * @param noTableScan When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
         * 
         * @return builder
         * 
         */
        public Builder noTableScan(Boolean noTableScan) {
            return noTableScan(Output.of(noTableScan));
        }

        /**
         * @param oplogMinRetentionHours Minimum retention window for cluster&#39;s oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
         * * **Note**  A minimum oplog retention is required when seeking to change a cluster&#39;s class to Local NVMe SSD. To learn more and for latest guidance see  [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
         * 
         * @return builder
         * 
         */
        public Builder oplogMinRetentionHours(@Nullable Output<Double> oplogMinRetentionHours) {
            $.oplogMinRetentionHours = oplogMinRetentionHours;
            return this;
        }

        /**
         * @param oplogMinRetentionHours Minimum retention window for cluster&#39;s oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
         * * **Note**  A minimum oplog retention is required when seeking to change a cluster&#39;s class to Local NVMe SSD. To learn more and for latest guidance see  [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
         * 
         * @return builder
         * 
         */
        public Builder oplogMinRetentionHours(Double oplogMinRetentionHours) {
            return oplogMinRetentionHours(Output.of(oplogMinRetentionHours));
        }

        /**
         * @param oplogSizeMb The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
         * 
         * @return builder
         * 
         */
        public Builder oplogSizeMb(@Nullable Output<Integer> oplogSizeMb) {
            $.oplogSizeMb = oplogSizeMb;
            return this;
        }

        /**
         * @param oplogSizeMb The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
         * 
         * @return builder
         * 
         */
        public Builder oplogSizeMb(Integer oplogSizeMb) {
            return oplogSizeMb(Output.of(oplogSizeMb));
        }

        /**
         * @param sampleRefreshIntervalBiConnector Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
         * 
         * @return builder
         * 
         */
        public Builder sampleRefreshIntervalBiConnector(@Nullable Output<Integer> sampleRefreshIntervalBiConnector) {
            $.sampleRefreshIntervalBiConnector = sampleRefreshIntervalBiConnector;
            return this;
        }

        /**
         * @param sampleRefreshIntervalBiConnector Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
         * 
         * @return builder
         * 
         */
        public Builder sampleRefreshIntervalBiConnector(Integer sampleRefreshIntervalBiConnector) {
            return sampleRefreshIntervalBiConnector(Output.of(sampleRefreshIntervalBiConnector));
        }

        /**
         * @param sampleSizeBiConnector Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
         * 
         * @return builder
         * 
         */
        public Builder sampleSizeBiConnector(@Nullable Output<Integer> sampleSizeBiConnector) {
            $.sampleSizeBiConnector = sampleSizeBiConnector;
            return this;
        }

        /**
         * @param sampleSizeBiConnector Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
         * 
         * @return builder
         * 
         */
        public Builder sampleSizeBiConnector(Integer sampleSizeBiConnector) {
            return sampleSizeBiConnector(Output.of(sampleSizeBiConnector));
        }

        /**
         * @param tlsCipherConfigMode The TLS cipher suite configuration mode. Valid values include `CUSTOM` or `DEFAULT`. The `DEFAULT` mode uses the default cipher suites. The `CUSTOM` mode allows you to specify custom cipher suites for both TLS 1.2 and TLS 1.3. To unset, this should be set back to `DEFAULT`.
         * 
         * @return builder
         * 
         */
        public Builder tlsCipherConfigMode(@Nullable Output<String> tlsCipherConfigMode) {
            $.tlsCipherConfigMode = tlsCipherConfigMode;
            return this;
        }

        /**
         * @param tlsCipherConfigMode The TLS cipher suite configuration mode. Valid values include `CUSTOM` or `DEFAULT`. The `DEFAULT` mode uses the default cipher suites. The `CUSTOM` mode allows you to specify custom cipher suites for both TLS 1.2 and TLS 1.3. To unset, this should be set back to `DEFAULT`.
         * 
         * @return builder
         * 
         */
        public Builder tlsCipherConfigMode(String tlsCipherConfigMode) {
            return tlsCipherConfigMode(Output.of(tlsCipherConfigMode));
        }

        /**
         * @param transactionLifetimeLimitSeconds Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
         * 
         * @return builder
         * 
         */
        public Builder transactionLifetimeLimitSeconds(@Nullable Output<Integer> transactionLifetimeLimitSeconds) {
            $.transactionLifetimeLimitSeconds = transactionLifetimeLimitSeconds;
            return this;
        }

        /**
         * @param transactionLifetimeLimitSeconds Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
         * 
         * @return builder
         * 
         */
        public Builder transactionLifetimeLimitSeconds(Integer transactionLifetimeLimitSeconds) {
            return transactionLifetimeLimitSeconds(Output.of(transactionLifetimeLimitSeconds));
        }

        public ClusterAdvancedConfigurationArgs build() {
            return $;
        }
    }

}
