// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetSearchDeploymentSpec;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSearchDeploymentResult {
    /**
     * @return Label that identifies the cluster to return the search nodes for.
     * 
     */
    private String clusterName;
    /**
     * @return Unique 24-hexadecimal digit string that identifies the search deployment.
     * 
     */
    private String id;
    /**
     * @return Unique 24-hexadecimal digit string that identifies your project.
     * 
     */
    private String projectId;
    /**
     * @return List of settings that configure the search nodes for your cluster. This list is currently limited to defining a single element.
     * 
     */
    private List<GetSearchDeploymentSpec> specs;
    /**
     * @return Human-readable label that indicates the current operating condition of this search deployment.
     * 
     */
    private String stateName;

    private GetSearchDeploymentResult() {}
    /**
     * @return Label that identifies the cluster to return the search nodes for.
     * 
     */
    public String clusterName() {
        return this.clusterName;
    }
    /**
     * @return Unique 24-hexadecimal digit string that identifies the search deployment.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique 24-hexadecimal digit string that identifies your project.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return List of settings that configure the search nodes for your cluster. This list is currently limited to defining a single element.
     * 
     */
    public List<GetSearchDeploymentSpec> specs() {
        return this.specs;
    }
    /**
     * @return Human-readable label that indicates the current operating condition of this search deployment.
     * 
     */
    public String stateName() {
        return this.stateName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSearchDeploymentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterName;
        private String id;
        private String projectId;
        private List<GetSearchDeploymentSpec> specs;
        private String stateName;
        public Builder() {}
        public Builder(GetSearchDeploymentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterName = defaults.clusterName;
    	      this.id = defaults.id;
    	      this.projectId = defaults.projectId;
    	      this.specs = defaults.specs;
    	      this.stateName = defaults.stateName;
        }

        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            if (clusterName == null) {
              throw new MissingRequiredPropertyException("GetSearchDeploymentResult", "clusterName");
            }
            this.clusterName = clusterName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSearchDeploymentResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetSearchDeploymentResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder specs(List<GetSearchDeploymentSpec> specs) {
            if (specs == null) {
              throw new MissingRequiredPropertyException("GetSearchDeploymentResult", "specs");
            }
            this.specs = specs;
            return this;
        }
        public Builder specs(GetSearchDeploymentSpec... specs) {
            return specs(List.of(specs));
        }
        @CustomType.Setter
        public Builder stateName(String stateName) {
            if (stateName == null) {
              throw new MissingRequiredPropertyException("GetSearchDeploymentResult", "stateName");
            }
            this.stateName = stateName;
            return this;
        }
        public GetSearchDeploymentResult build() {
            final var _resultValue = new GetSearchDeploymentResult();
            _resultValue.clusterName = clusterName;
            _resultValue.id = id;
            _resultValue.projectId = projectId;
            _resultValue.specs = specs;
            _resultValue.stateName = stateName;
            return _resultValue;
        }
    }
}
