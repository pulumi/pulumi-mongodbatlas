// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAlertConfigurationsResultMetricThresholdConfig {
    private String metricName;
    private String mode;
    private String operator;
    private Double threshold;
    private String units;

    private GetAlertConfigurationsResultMetricThresholdConfig() {}
    public String metricName() {
        return this.metricName;
    }
    public String mode() {
        return this.mode;
    }
    public String operator() {
        return this.operator;
    }
    public Double threshold() {
        return this.threshold;
    }
    public String units() {
        return this.units;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertConfigurationsResultMetricThresholdConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String metricName;
        private String mode;
        private String operator;
        private Double threshold;
        private String units;
        public Builder() {}
        public Builder(GetAlertConfigurationsResultMetricThresholdConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metricName = defaults.metricName;
    	      this.mode = defaults.mode;
    	      this.operator = defaults.operator;
    	      this.threshold = defaults.threshold;
    	      this.units = defaults.units;
        }

        @CustomType.Setter
        public Builder metricName(String metricName) {
            this.metricName = Objects.requireNonNull(metricName);
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        @CustomType.Setter
        public Builder operator(String operator) {
            this.operator = Objects.requireNonNull(operator);
            return this;
        }
        @CustomType.Setter
        public Builder threshold(Double threshold) {
            this.threshold = Objects.requireNonNull(threshold);
            return this;
        }
        @CustomType.Setter
        public Builder units(String units) {
            this.units = Objects.requireNonNull(units);
            return this;
        }
        public GetAlertConfigurationsResultMetricThresholdConfig build() {
            final var o = new GetAlertConfigurationsResultMetricThresholdConfig();
            o.metricName = metricName;
            o.mode = mode;
            o.operator = operator;
            o.threshold = threshold;
            o.units = units;
            return o;
        }
    }
}
