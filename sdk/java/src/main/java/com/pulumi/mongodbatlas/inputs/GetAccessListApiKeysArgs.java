// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAccessListApiKeysArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAccessListApiKeysArgs Empty = new GetAccessListApiKeysArgs();

    @Import(name="apiKeyId", required=true)
    private Output<String> apiKeyId;

    public Output<String> apiKeyId() {
        return this.apiKeyId;
    }

    /**
     * Number of items to return per page, up to a maximum of 500. Defaults to `100`.
     * 
     */
    @Import(name="itemsPerPage")
    private @Nullable Output<Integer> itemsPerPage;

    /**
     * @return Number of items to return per page, up to a maximum of 500. Defaults to `100`.
     * 
     */
    public Optional<Output<Integer>> itemsPerPage() {
        return Optional.ofNullable(this.itemsPerPage);
    }

    @Import(name="orgId", required=true)
    private Output<String> orgId;

    public Output<String> orgId() {
        return this.orgId;
    }

    /**
     * The page to return. Defaults to `1`.
     * 
     */
    @Import(name="pageNum")
    private @Nullable Output<Integer> pageNum;

    /**
     * @return The page to return. Defaults to `1`.
     * 
     */
    public Optional<Output<Integer>> pageNum() {
        return Optional.ofNullable(this.pageNum);
    }

    private GetAccessListApiKeysArgs() {}

    private GetAccessListApiKeysArgs(GetAccessListApiKeysArgs $) {
        this.apiKeyId = $.apiKeyId;
        this.itemsPerPage = $.itemsPerPage;
        this.orgId = $.orgId;
        this.pageNum = $.pageNum;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccessListApiKeysArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccessListApiKeysArgs $;

        public Builder() {
            $ = new GetAccessListApiKeysArgs();
        }

        public Builder(GetAccessListApiKeysArgs defaults) {
            $ = new GetAccessListApiKeysArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiKeyId(Output<String> apiKeyId) {
            $.apiKeyId = apiKeyId;
            return this;
        }

        public Builder apiKeyId(String apiKeyId) {
            return apiKeyId(Output.of(apiKeyId));
        }

        /**
         * @param itemsPerPage Number of items to return per page, up to a maximum of 500. Defaults to `100`.
         * 
         * @return builder
         * 
         */
        public Builder itemsPerPage(@Nullable Output<Integer> itemsPerPage) {
            $.itemsPerPage = itemsPerPage;
            return this;
        }

        /**
         * @param itemsPerPage Number of items to return per page, up to a maximum of 500. Defaults to `100`.
         * 
         * @return builder
         * 
         */
        public Builder itemsPerPage(Integer itemsPerPage) {
            return itemsPerPage(Output.of(itemsPerPage));
        }

        public Builder orgId(Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param pageNum The page to return. Defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder pageNum(@Nullable Output<Integer> pageNum) {
            $.pageNum = pageNum;
            return this;
        }

        /**
         * @param pageNum The page to return. Defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder pageNum(Integer pageNum) {
            return pageNum(Output.of(pageNum));
        }

        public GetAccessListApiKeysArgs build() {
            if ($.apiKeyId == null) {
                throw new MissingRequiredPropertyException("GetAccessListApiKeysArgs", "apiKeyId");
            }
            if ($.orgId == null) {
                throw new MissingRequiredPropertyException("GetAccessListApiKeysArgs", "orgId");
            }
            return $;
        }
    }

}
