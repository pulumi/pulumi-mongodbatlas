// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetNetworkContainerArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkContainerArgs Empty = new GetNetworkContainerArgs();

    /**
     * The Network Peering Container ID.
     * 
     */
    @Import(name="containerId", required=true)
    private Output<String> containerId;

    /**
     * @return The Network Peering Container ID.
     * 
     */
    public Output<String> containerId() {
        return this.containerId;
    }

    /**
     * The unique ID for the project to create the database user.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The unique ID for the project to create the database user.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    private GetNetworkContainerArgs() {}

    private GetNetworkContainerArgs(GetNetworkContainerArgs $) {
        this.containerId = $.containerId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkContainerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkContainerArgs $;

        public Builder() {
            $ = new GetNetworkContainerArgs();
        }

        public Builder(GetNetworkContainerArgs defaults) {
            $ = new GetNetworkContainerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerId The Network Peering Container ID.
         * 
         * @return builder
         * 
         */
        public Builder containerId(Output<String> containerId) {
            $.containerId = containerId;
            return this;
        }

        /**
         * @param containerId The Network Peering Container ID.
         * 
         * @return builder
         * 
         */
        public Builder containerId(String containerId) {
            return containerId(Output.of(containerId));
        }

        /**
         * @param projectId The unique ID for the project to create the database user.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The unique ID for the project to create the database user.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public GetNetworkContainerArgs build() {
            if ($.containerId == null) {
                throw new MissingRequiredPropertyException("GetNetworkContainerArgs", "containerId");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetNetworkContainerArgs", "projectId");
            }
            return $;
        }
    }

}
