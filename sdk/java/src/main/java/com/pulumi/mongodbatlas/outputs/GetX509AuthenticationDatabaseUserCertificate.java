// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetX509AuthenticationDatabaseUserCertificate {
    private String createdAt;
    private String groupId;
    private Integer id;
    private String notAfter;
    private String subject;

    private GetX509AuthenticationDatabaseUserCertificate() {}
    public String createdAt() {
        return this.createdAt;
    }
    public String groupId() {
        return this.groupId;
    }
    public Integer id() {
        return this.id;
    }
    public String notAfter() {
        return this.notAfter;
    }
    public String subject() {
        return this.subject;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetX509AuthenticationDatabaseUserCertificate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdAt;
        private String groupId;
        private Integer id;
        private String notAfter;
        private String subject;
        public Builder() {}
        public Builder(GetX509AuthenticationDatabaseUserCertificate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.notAfter = defaults.notAfter;
    	      this.subject = defaults.subject;
        }

        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetX509AuthenticationDatabaseUserCertificate", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetX509AuthenticationDatabaseUserCertificate", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetX509AuthenticationDatabaseUserCertificate", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder notAfter(String notAfter) {
            if (notAfter == null) {
              throw new MissingRequiredPropertyException("GetX509AuthenticationDatabaseUserCertificate", "notAfter");
            }
            this.notAfter = notAfter;
            return this;
        }
        @CustomType.Setter
        public Builder subject(String subject) {
            if (subject == null) {
              throw new MissingRequiredPropertyException("GetX509AuthenticationDatabaseUserCertificate", "subject");
            }
            this.subject = subject;
            return this;
        }
        public GetX509AuthenticationDatabaseUserCertificate build() {
            final var _resultValue = new GetX509AuthenticationDatabaseUserCertificate();
            _resultValue.createdAt = createdAt;
            _resultValue.groupId = groupId;
            _resultValue.id = id;
            _resultValue.notAfter = notAfter;
            _resultValue.subject = subject;
            return _resultValue;
        }
    }
}
