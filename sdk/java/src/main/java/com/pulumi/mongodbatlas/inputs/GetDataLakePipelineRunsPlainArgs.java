// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetDataLakePipelineRunsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDataLakePipelineRunsPlainArgs Empty = new GetDataLakePipelineRunsPlainArgs();

    /**
     * Human-readable label that identifies the Data Lake Pipeline.
     * 
     */
    @Import(name="pipelineName", required=true)
    private String pipelineName;

    /**
     * @return Human-readable label that identifies the Data Lake Pipeline.
     * 
     */
    public String pipelineName() {
        return this.pipelineName;
    }

    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies your project.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    private GetDataLakePipelineRunsPlainArgs() {}

    private GetDataLakePipelineRunsPlainArgs(GetDataLakePipelineRunsPlainArgs $) {
        this.pipelineName = $.pipelineName;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDataLakePipelineRunsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDataLakePipelineRunsPlainArgs $;

        public Builder() {
            $ = new GetDataLakePipelineRunsPlainArgs();
        }

        public Builder(GetDataLakePipelineRunsPlainArgs defaults) {
            $ = new GetDataLakePipelineRunsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pipelineName Human-readable label that identifies the Data Lake Pipeline.
         * 
         * @return builder
         * 
         */
        public Builder pipelineName(String pipelineName) {
            $.pipelineName = pipelineName;
            return this;
        }

        /**
         * @param projectId Unique 24-hexadecimal digit string that identifies your project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetDataLakePipelineRunsPlainArgs build() {
            $.pipelineName = Objects.requireNonNull($.pipelineName, "expected parameter 'pipelineName' to be non-null");
            $.projectId = Objects.requireNonNull($.projectId, "expected parameter 'projectId' to be non-null");
            return $;
        }
    }

}
