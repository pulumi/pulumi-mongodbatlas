// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetProjectApiKeyResult {
    private String apiKeyId;
    /**
     * @return Description of this Project API key.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Private key for this Organization API key.
     * 
     */
    private String privateKey;
    /**
     * @return Unique identifier for the project whose API keys you want to retrieve. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     * 
     */
    private String projectId;
    /**
     * @return Public key for this Organization API key.
     * 
     */
    private String publicKey;
    /**
     * @return Name of the role. This resource returns all the roles the user has in Atlas.
     * The following are valid roles:
     * 
     */
    private List<String> roleNames;

    private GetProjectApiKeyResult() {}
    public String apiKeyId() {
        return this.apiKeyId;
    }
    /**
     * @return Description of this Project API key.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Private key for this Organization API key.
     * 
     */
    public String privateKey() {
        return this.privateKey;
    }
    /**
     * @return Unique identifier for the project whose API keys you want to retrieve. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return Public key for this Organization API key.
     * 
     */
    public String publicKey() {
        return this.publicKey;
    }
    /**
     * @return Name of the role. This resource returns all the roles the user has in Atlas.
     * The following are valid roles:
     * 
     */
    public List<String> roleNames() {
        return this.roleNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectApiKeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiKeyId;
        private String description;
        private String id;
        private String privateKey;
        private String projectId;
        private String publicKey;
        private List<String> roleNames;
        public Builder() {}
        public Builder(GetProjectApiKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKeyId = defaults.apiKeyId;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.privateKey = defaults.privateKey;
    	      this.projectId = defaults.projectId;
    	      this.publicKey = defaults.publicKey;
    	      this.roleNames = defaults.roleNames;
        }

        @CustomType.Setter
        public Builder apiKeyId(String apiKeyId) {
            this.apiKeyId = Objects.requireNonNull(apiKeyId);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder privateKey(String privateKey) {
            this.privateKey = Objects.requireNonNull(privateKey);
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder publicKey(String publicKey) {
            this.publicKey = Objects.requireNonNull(publicKey);
            return this;
        }
        @CustomType.Setter
        public Builder roleNames(List<String> roleNames) {
            this.roleNames = Objects.requireNonNull(roleNames);
            return this;
        }
        public Builder roleNames(String... roleNames) {
            return roleNames(List.of(roleNames));
        }
        public GetProjectApiKeyResult build() {
            final var o = new GetProjectApiKeyResult();
            o.apiKeyId = apiKeyId;
            o.description = description;
            o.id = id;
            o.privateKey = privateKey;
            o.projectId = projectId;
            o.publicKey = publicKey;
            o.roleNames = roleNames;
            return o;
        }
    }
}
