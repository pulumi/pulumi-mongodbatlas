// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OnlineArchiveSchedule {
    /**
     * @return Day of the month when the scheduled archive starts. This field should be provided only when schedule `type` is `MONTHLY`.
     * 
     */
    private @Nullable Integer dayOfMonth;
    /**
     * @return Day of the week when the scheduled archive starts. The week starts with Monday (1) and ends with Sunday (7). This field should be provided only when schedule `type` is `WEEKLY`.
     * 
     */
    private @Nullable Integer dayOfWeek;
    /**
     * @return Hour of the day when the scheduled window to run one online archive ends.
     * 
     */
    private @Nullable Integer endHour;
    /**
     * @return Minute of the hour when the scheduled window to run one online archive ends.
     * 
     */
    private @Nullable Integer endMinute;
    /**
     * @return Hour of the day when the when the scheduled window to run one online archive starts.
     * 
     */
    private @Nullable Integer startHour;
    /**
     * @return Minute of the hour when the scheduled window to run one online archive starts.
     * 
     */
    private @Nullable Integer startMinute;
    /**
     * @return Type of schedule (`DEFAULT`, `DAILY`, `MONTHLY`, `WEEKLY`).
     * 
     */
    private String type;

    private OnlineArchiveSchedule() {}
    /**
     * @return Day of the month when the scheduled archive starts. This field should be provided only when schedule `type` is `MONTHLY`.
     * 
     */
    public Optional<Integer> dayOfMonth() {
        return Optional.ofNullable(this.dayOfMonth);
    }
    /**
     * @return Day of the week when the scheduled archive starts. The week starts with Monday (1) and ends with Sunday (7). This field should be provided only when schedule `type` is `WEEKLY`.
     * 
     */
    public Optional<Integer> dayOfWeek() {
        return Optional.ofNullable(this.dayOfWeek);
    }
    /**
     * @return Hour of the day when the scheduled window to run one online archive ends.
     * 
     */
    public Optional<Integer> endHour() {
        return Optional.ofNullable(this.endHour);
    }
    /**
     * @return Minute of the hour when the scheduled window to run one online archive ends.
     * 
     */
    public Optional<Integer> endMinute() {
        return Optional.ofNullable(this.endMinute);
    }
    /**
     * @return Hour of the day when the when the scheduled window to run one online archive starts.
     * 
     */
    public Optional<Integer> startHour() {
        return Optional.ofNullable(this.startHour);
    }
    /**
     * @return Minute of the hour when the scheduled window to run one online archive starts.
     * 
     */
    public Optional<Integer> startMinute() {
        return Optional.ofNullable(this.startMinute);
    }
    /**
     * @return Type of schedule (`DEFAULT`, `DAILY`, `MONTHLY`, `WEEKLY`).
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OnlineArchiveSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer dayOfMonth;
        private @Nullable Integer dayOfWeek;
        private @Nullable Integer endHour;
        private @Nullable Integer endMinute;
        private @Nullable Integer startHour;
        private @Nullable Integer startMinute;
        private String type;
        public Builder() {}
        public Builder(OnlineArchiveSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dayOfMonth = defaults.dayOfMonth;
    	      this.dayOfWeek = defaults.dayOfWeek;
    	      this.endHour = defaults.endHour;
    	      this.endMinute = defaults.endMinute;
    	      this.startHour = defaults.startHour;
    	      this.startMinute = defaults.startMinute;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder dayOfMonth(@Nullable Integer dayOfMonth) {
            this.dayOfMonth = dayOfMonth;
            return this;
        }
        @CustomType.Setter
        public Builder dayOfWeek(@Nullable Integer dayOfWeek) {
            this.dayOfWeek = dayOfWeek;
            return this;
        }
        @CustomType.Setter
        public Builder endHour(@Nullable Integer endHour) {
            this.endHour = endHour;
            return this;
        }
        @CustomType.Setter
        public Builder endMinute(@Nullable Integer endMinute) {
            this.endMinute = endMinute;
            return this;
        }
        @CustomType.Setter
        public Builder startHour(@Nullable Integer startHour) {
            this.startHour = startHour;
            return this;
        }
        @CustomType.Setter
        public Builder startMinute(@Nullable Integer startMinute) {
            this.startMinute = startMinute;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public OnlineArchiveSchedule build() {
            final var o = new OnlineArchiveSchedule();
            o.dayOfMonth = dayOfMonth;
            o.dayOfWeek = dayOfWeek;
            o.endHour = endHour;
            o.endMinute = endMinute;
            o.startHour = startHour;
            o.startMinute = startMinute;
            o.type = type;
            return o;
        }
    }
}
