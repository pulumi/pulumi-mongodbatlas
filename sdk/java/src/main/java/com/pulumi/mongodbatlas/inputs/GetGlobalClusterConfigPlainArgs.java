// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.inputs.GetGlobalClusterConfigManagedNamespace;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGlobalClusterConfigPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGlobalClusterConfigPlainArgs Empty = new GetGlobalClusterConfigPlainArgs();

    /**
     * The name of the Global Cluster.
     * 
     */
    @Import(name="clusterName", required=true)
    private String clusterName;

    /**
     * @return The name of the Global Cluster.
     * 
     */
    public String clusterName() {
        return this.clusterName;
    }

    /**
     * Add a managed namespaces to a Global Cluster. For more information about managed namespaces, see [Global Clusters](https://docs.atlas.mongodb.com/reference/api/global-clusters/). See Managed Namespace below for more details.
     * 
     */
    @Import(name="managedNamespaces")
    private @Nullable List<GetGlobalClusterConfigManagedNamespace> managedNamespaces;

    /**
     * @return Add a managed namespaces to a Global Cluster. For more information about managed namespaces, see [Global Clusters](https://docs.atlas.mongodb.com/reference/api/global-clusters/). See Managed Namespace below for more details.
     * 
     */
    public Optional<List<GetGlobalClusterConfigManagedNamespace>> managedNamespaces() {
        return Optional.ofNullable(this.managedNamespaces);
    }

    /**
     * The unique ID for the project.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return The unique ID for the project.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    private GetGlobalClusterConfigPlainArgs() {}

    private GetGlobalClusterConfigPlainArgs(GetGlobalClusterConfigPlainArgs $) {
        this.clusterName = $.clusterName;
        this.managedNamespaces = $.managedNamespaces;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGlobalClusterConfigPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGlobalClusterConfigPlainArgs $;

        public Builder() {
            $ = new GetGlobalClusterConfigPlainArgs();
        }

        public Builder(GetGlobalClusterConfigPlainArgs defaults) {
            $ = new GetGlobalClusterConfigPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName The name of the Global Cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param managedNamespaces Add a managed namespaces to a Global Cluster. For more information about managed namespaces, see [Global Clusters](https://docs.atlas.mongodb.com/reference/api/global-clusters/). See Managed Namespace below for more details.
         * 
         * @return builder
         * 
         */
        public Builder managedNamespaces(@Nullable List<GetGlobalClusterConfigManagedNamespace> managedNamespaces) {
            $.managedNamespaces = managedNamespaces;
            return this;
        }

        /**
         * @param managedNamespaces Add a managed namespaces to a Global Cluster. For more information about managed namespaces, see [Global Clusters](https://docs.atlas.mongodb.com/reference/api/global-clusters/). See Managed Namespace below for more details.
         * 
         * @return builder
         * 
         */
        public Builder managedNamespaces(GetGlobalClusterConfigManagedNamespace... managedNamespaces) {
            return managedNamespaces(List.of(managedNamespaces));
        }

        /**
         * @param projectId The unique ID for the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetGlobalClusterConfigPlainArgs build() {
            if ($.clusterName == null) {
                throw new MissingRequiredPropertyException("GetGlobalClusterConfigPlainArgs", "clusterName");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetGlobalClusterConfigPlainArgs", "projectId");
            }
            return $;
        }
    }

}
