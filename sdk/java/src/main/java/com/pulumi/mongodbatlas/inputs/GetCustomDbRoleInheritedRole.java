// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetCustomDbRoleInheritedRole extends com.pulumi.resources.InvokeArgs {

    public static final GetCustomDbRoleInheritedRole Empty = new GetCustomDbRoleInheritedRole();

    /**
     * (Required) Database on which the inherited role is granted.
     * 
     */
    @Import(name="databaseName", required=true)
    private String databaseName;

    /**
     * @return (Required) Database on which the inherited role is granted.
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }

    /**
     * Name of the custom role.
     * 
     */
    @Import(name="roleName", required=true)
    private String roleName;

    /**
     * @return Name of the custom role.
     * 
     */
    public String roleName() {
        return this.roleName;
    }

    private GetCustomDbRoleInheritedRole() {}

    private GetCustomDbRoleInheritedRole(GetCustomDbRoleInheritedRole $) {
        this.databaseName = $.databaseName;
        this.roleName = $.roleName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCustomDbRoleInheritedRole defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCustomDbRoleInheritedRole $;

        public Builder() {
            $ = new GetCustomDbRoleInheritedRole();
        }

        public Builder(GetCustomDbRoleInheritedRole defaults) {
            $ = new GetCustomDbRoleInheritedRole(Objects.requireNonNull(defaults));
        }

        /**
         * @param databaseName (Required) Database on which the inherited role is granted.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param roleName Name of the custom role.
         * 
         * @return builder
         * 
         */
        public Builder roleName(String roleName) {
            $.roleName = roleName;
            return this;
        }

        public GetCustomDbRoleInheritedRole build() {
            if ($.databaseName == null) {
                throw new MissingRequiredPropertyException("GetCustomDbRoleInheritedRole", "databaseName");
            }
            if ($.roleName == null) {
                throw new MissingRequiredPropertyException("GetCustomDbRoleInheritedRole", "roleName");
            }
            return $;
        }
    }

}
