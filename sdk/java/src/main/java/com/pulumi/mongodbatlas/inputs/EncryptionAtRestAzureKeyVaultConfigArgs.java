// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EncryptionAtRestAzureKeyVaultConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final EncryptionAtRestAzureKeyVaultConfigArgs Empty = new EncryptionAtRestAzureKeyVaultConfigArgs();

    /**
     * Azure environment in which your account credentials reside.
     * 
     */
    @Import(name="azureEnvironment")
    private @Nullable Output<String> azureEnvironment;

    /**
     * @return Azure environment in which your account credentials reside.
     * 
     */
    public Optional<Output<String>> azureEnvironment() {
        return Optional.ofNullable(this.azureEnvironment);
    }

    /**
     * Unique 36-hexadecimal character string that identifies an Azure application associated with your Azure Active Directory tenant.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return Unique 36-hexadecimal character string that identifies an Azure application associated with your Azure Active Directory tenant.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Flag that indicates whether someone enabled encryption at rest for the specified  project. To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Flag that indicates whether someone enabled encryption at rest for the specified  project. To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Web address with a unique key that identifies for your Azure Key Vault.
     * 
     */
    @Import(name="keyIdentifier")
    private @Nullable Output<String> keyIdentifier;

    /**
     * @return Web address with a unique key that identifies for your Azure Key Vault.
     * 
     */
    public Optional<Output<String>> keyIdentifier() {
        return Optional.ofNullable(this.keyIdentifier);
    }

    /**
     * Unique string that identifies the Azure Key Vault that contains your key.
     * 
     */
    @Import(name="keyVaultName")
    private @Nullable Output<String> keyVaultName;

    /**
     * @return Unique string that identifies the Azure Key Vault that contains your key.
     * 
     */
    public Optional<Output<String>> keyVaultName() {
        return Optional.ofNullable(this.keyVaultName);
    }

    /**
     * Enable connection to your Azure Key Vault over private networking.
     * 
     */
    @Import(name="requirePrivateNetworking")
    private @Nullable Output<Boolean> requirePrivateNetworking;

    /**
     * @return Enable connection to your Azure Key Vault over private networking.
     * 
     */
    public Optional<Output<Boolean>> requirePrivateNetworking() {
        return Optional.ofNullable(this.requirePrivateNetworking);
    }

    /**
     * Name of the Azure resource group that contains your Azure Key Vault.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return Name of the Azure resource group that contains your Azure Key Vault.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * Private data that you need secured and that belongs to the specified Azure Key Vault (AKV) tenant (**azureKeyVault.tenantID**). This data can include any type of sensitive data such as passwords, database connection strings, API keys, and the like. AKV stores this information as encrypted binary data.
     * 
     */
    @Import(name="secret")
    private @Nullable Output<String> secret;

    /**
     * @return Private data that you need secured and that belongs to the specified Azure Key Vault (AKV) tenant (**azureKeyVault.tenantID**). This data can include any type of sensitive data such as passwords, database connection strings, API keys, and the like. AKV stores this information as encrypted binary data.
     * 
     */
    public Optional<Output<String>> secret() {
        return Optional.ofNullable(this.secret);
    }

    /**
     * Unique 36-hexadecimal character string that identifies your Azure subscription.
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable Output<String> subscriptionId;

    /**
     * @return Unique 36-hexadecimal character string that identifies your Azure subscription.
     * 
     */
    public Optional<Output<String>> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    /**
     * Unique 36-hexadecimal character string that identifies the Azure Active Directory tenant within your Azure subscription.
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    /**
     * @return Unique 36-hexadecimal character string that identifies the Azure Active Directory tenant within your Azure subscription.
     * 
     */
    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    /**
     * Flag that indicates whether the Azure encryption key can encrypt and decrypt data.
     * 
     */
    @Import(name="valid")
    private @Nullable Output<Boolean> valid;

    /**
     * @return Flag that indicates whether the Azure encryption key can encrypt and decrypt data.
     * 
     */
    public Optional<Output<Boolean>> valid() {
        return Optional.ofNullable(this.valid);
    }

    private EncryptionAtRestAzureKeyVaultConfigArgs() {}

    private EncryptionAtRestAzureKeyVaultConfigArgs(EncryptionAtRestAzureKeyVaultConfigArgs $) {
        this.azureEnvironment = $.azureEnvironment;
        this.clientId = $.clientId;
        this.enabled = $.enabled;
        this.keyIdentifier = $.keyIdentifier;
        this.keyVaultName = $.keyVaultName;
        this.requirePrivateNetworking = $.requirePrivateNetworking;
        this.resourceGroupName = $.resourceGroupName;
        this.secret = $.secret;
        this.subscriptionId = $.subscriptionId;
        this.tenantId = $.tenantId;
        this.valid = $.valid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionAtRestAzureKeyVaultConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionAtRestAzureKeyVaultConfigArgs $;

        public Builder() {
            $ = new EncryptionAtRestAzureKeyVaultConfigArgs();
        }

        public Builder(EncryptionAtRestAzureKeyVaultConfigArgs defaults) {
            $ = new EncryptionAtRestAzureKeyVaultConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param azureEnvironment Azure environment in which your account credentials reside.
         * 
         * @return builder
         * 
         */
        public Builder azureEnvironment(@Nullable Output<String> azureEnvironment) {
            $.azureEnvironment = azureEnvironment;
            return this;
        }

        /**
         * @param azureEnvironment Azure environment in which your account credentials reside.
         * 
         * @return builder
         * 
         */
        public Builder azureEnvironment(String azureEnvironment) {
            return azureEnvironment(Output.of(azureEnvironment));
        }

        /**
         * @param clientId Unique 36-hexadecimal character string that identifies an Azure application associated with your Azure Active Directory tenant.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId Unique 36-hexadecimal character string that identifies an Azure application associated with your Azure Active Directory tenant.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param enabled Flag that indicates whether someone enabled encryption at rest for the specified  project. To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Flag that indicates whether someone enabled encryption at rest for the specified  project. To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param keyIdentifier Web address with a unique key that identifies for your Azure Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyIdentifier(@Nullable Output<String> keyIdentifier) {
            $.keyIdentifier = keyIdentifier;
            return this;
        }

        /**
         * @param keyIdentifier Web address with a unique key that identifies for your Azure Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyIdentifier(String keyIdentifier) {
            return keyIdentifier(Output.of(keyIdentifier));
        }

        /**
         * @param keyVaultName Unique string that identifies the Azure Key Vault that contains your key.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultName(@Nullable Output<String> keyVaultName) {
            $.keyVaultName = keyVaultName;
            return this;
        }

        /**
         * @param keyVaultName Unique string that identifies the Azure Key Vault that contains your key.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultName(String keyVaultName) {
            return keyVaultName(Output.of(keyVaultName));
        }

        /**
         * @param requirePrivateNetworking Enable connection to your Azure Key Vault over private networking.
         * 
         * @return builder
         * 
         */
        public Builder requirePrivateNetworking(@Nullable Output<Boolean> requirePrivateNetworking) {
            $.requirePrivateNetworking = requirePrivateNetworking;
            return this;
        }

        /**
         * @param requirePrivateNetworking Enable connection to your Azure Key Vault over private networking.
         * 
         * @return builder
         * 
         */
        public Builder requirePrivateNetworking(Boolean requirePrivateNetworking) {
            return requirePrivateNetworking(Output.of(requirePrivateNetworking));
        }

        /**
         * @param resourceGroupName Name of the Azure resource group that contains your Azure Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the Azure resource group that contains your Azure Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param secret Private data that you need secured and that belongs to the specified Azure Key Vault (AKV) tenant (**azureKeyVault.tenantID**). This data can include any type of sensitive data such as passwords, database connection strings, API keys, and the like. AKV stores this information as encrypted binary data.
         * 
         * @return builder
         * 
         */
        public Builder secret(@Nullable Output<String> secret) {
            $.secret = secret;
            return this;
        }

        /**
         * @param secret Private data that you need secured and that belongs to the specified Azure Key Vault (AKV) tenant (**azureKeyVault.tenantID**). This data can include any type of sensitive data such as passwords, database connection strings, API keys, and the like. AKV stores this information as encrypted binary data.
         * 
         * @return builder
         * 
         */
        public Builder secret(String secret) {
            return secret(Output.of(secret));
        }

        /**
         * @param subscriptionId Unique 36-hexadecimal character string that identifies your Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId Unique 36-hexadecimal character string that identifies your Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        /**
         * @param tenantId Unique 36-hexadecimal character string that identifies the Azure Active Directory tenant within your Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId Unique 36-hexadecimal character string that identifies the Azure Active Directory tenant within your Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        /**
         * @param valid Flag that indicates whether the Azure encryption key can encrypt and decrypt data.
         * 
         * @return builder
         * 
         */
        public Builder valid(@Nullable Output<Boolean> valid) {
            $.valid = valid;
            return this;
        }

        /**
         * @param valid Flag that indicates whether the Azure encryption key can encrypt and decrypt data.
         * 
         * @return builder
         * 
         */
        public Builder valid(Boolean valid) {
            return valid(Output.of(valid));
        }

        public EncryptionAtRestAzureKeyVaultConfigArgs build() {
            return $;
        }
    }

}
