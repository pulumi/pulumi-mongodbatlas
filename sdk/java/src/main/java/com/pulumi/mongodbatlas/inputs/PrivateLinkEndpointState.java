// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateLinkEndpointState extends com.pulumi.resources.ResourceArgs {

    public static final PrivateLinkEndpointState Empty = new PrivateLinkEndpointState();

    /**
     * GCP network endpoint groups corresponding to the Private Service Connect endpoint service.
     * 
     */
    @Import(name="endpointGroupNames")
    private @Nullable Output<List<String>> endpointGroupNames;

    /**
     * @return GCP network endpoint groups corresponding to the Private Service Connect endpoint service.
     * 
     */
    public Optional<Output<List<String>>> endpointGroupNames() {
        return Optional.ofNullable(this.endpointGroupNames);
    }

    /**
     * Name of the PrivateLink endpoint service in AWS. Returns null while the endpoint service is being created.
     * 
     */
    @Import(name="endpointServiceName")
    private @Nullable Output<String> endpointServiceName;

    /**
     * @return Name of the PrivateLink endpoint service in AWS. Returns null while the endpoint service is being created.
     * 
     */
    public Optional<Output<String>> endpointServiceName() {
        return Optional.ofNullable(this.endpointServiceName);
    }

    /**
     * Error message pertaining to the AWS PrivateLink connection. Returns null if there are no errors.
     * AWS:
     * 
     */
    @Import(name="errorMessage")
    private @Nullable Output<String> errorMessage;

    /**
     * @return Error message pertaining to the AWS PrivateLink connection. Returns null if there are no errors.
     * AWS:
     * 
     */
    public Optional<Output<String>> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }

    /**
     * Unique identifiers of the interface endpoints in your VPC that you added to the AWS PrivateLink connection.
     * AZURE:
     * 
     */
    @Import(name="interfaceEndpoints")
    private @Nullable Output<List<String>> interfaceEndpoints;

    /**
     * @return Unique identifiers of the interface endpoints in your VPC that you added to the AWS PrivateLink connection.
     * AZURE:
     * 
     */
    public Optional<Output<List<String>>> interfaceEndpoints() {
        return Optional.ofNullable(this.interfaceEndpoints);
    }

    /**
     * All private endpoints that you have added to this Azure Private Link Service.
     * 
     */
    @Import(name="privateEndpoints")
    private @Nullable Output<List<String>> privateEndpoints;

    /**
     * @return All private endpoints that you have added to this Azure Private Link Service.
     * 
     */
    public Optional<Output<List<String>>> privateEndpoints() {
        return Optional.ofNullable(this.privateEndpoints);
    }

    /**
     * Unique identifier of the AWS PrivateLink connection.
     * 
     */
    @Import(name="privateLinkId")
    private @Nullable Output<String> privateLinkId;

    /**
     * @return Unique identifier of the AWS PrivateLink connection.
     * 
     */
    public Optional<Output<String>> privateLinkId() {
        return Optional.ofNullable(this.privateLinkId);
    }

    /**
     * Name of the Azure Private Link Service that Atlas manages.
     * GCP:
     * 
     */
    @Import(name="privateLinkServiceName")
    private @Nullable Output<String> privateLinkServiceName;

    /**
     * @return Name of the Azure Private Link Service that Atlas manages.
     * GCP:
     * 
     */
    public Optional<Output<String>> privateLinkServiceName() {
        return Optional.ofNullable(this.privateLinkServiceName);
    }

    @Import(name="privateLinkServiceResourceId")
    private @Nullable Output<String> privateLinkServiceResourceId;

    public Optional<Output<String>> privateLinkServiceResourceId() {
        return Optional.ofNullable(this.privateLinkServiceResourceId);
    }

    /**
     * Required 	Unique identifier for the project.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return Required 	Unique identifier for the project.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * Name of the cloud provider for which you want to create the private endpoint service. Atlas accepts `AWS`, `AZURE` or `GCP`.
     * 
     */
    @Import(name="providerName")
    private @Nullable Output<String> providerName;

    /**
     * @return Name of the cloud provider for which you want to create the private endpoint service. Atlas accepts `AWS`, `AZURE` or `GCP`.
     * 
     */
    public Optional<Output<String>> providerName() {
        return Optional.ofNullable(this.providerName);
    }

    /**
     * Cloud provider region in which you want to create the private endpoint connection.
     * Accepted values are: [AWS regions](https://docs.atlas.mongodb.com/reference/amazon-aws/#amazon-aws), [AZURE regions](https://docs.atlas.mongodb.com/reference/microsoft-azure/#microsoft-azure) and [GCP regions](https://docs.atlas.mongodb.com/reference/google-gcp/#std-label-google-gcp)
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Cloud provider region in which you want to create the private endpoint connection.
     * Accepted values are: [AWS regions](https://docs.atlas.mongodb.com/reference/amazon-aws/#amazon-aws), [AZURE regions](https://docs.atlas.mongodb.com/reference/microsoft-azure/#microsoft-azure) and [GCP regions](https://docs.atlas.mongodb.com/reference/google-gcp/#std-label-google-gcp)
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * GCP region for the Private Service Connect endpoint service.
     * 
     */
    @Import(name="regionName")
    private @Nullable Output<String> regionName;

    /**
     * @return GCP region for the Private Service Connect endpoint service.
     * 
     */
    public Optional<Output<String>> regionName() {
        return Optional.ofNullable(this.regionName);
    }

    /**
     * Unique alphanumeric and special character strings that identify the service attachments associated with the GCP Private Service Connect endpoint service. Returns an empty list while Atlas creates the service attachments.
     * 
     */
    @Import(name="serviceAttachmentNames")
    private @Nullable Output<List<String>> serviceAttachmentNames;

    /**
     * @return Unique alphanumeric and special character strings that identify the service attachments associated with the GCP Private Service Connect endpoint service. Returns an empty list while Atlas creates the service attachments.
     * 
     */
    public Optional<Output<List<String>>> serviceAttachmentNames() {
        return Optional.ofNullable(this.serviceAttachmentNames);
    }

    /**
     * Status of the AWS PrivateLink connection or Status of the Azure Private Link Service. Atlas returns one of the following values:
     * AWS:
     * * `AVAILABLE` 	Atlas is creating the network load balancer and VPC endpoint service.
     * * `WAITING_FOR_USER` The Atlas network load balancer and VPC endpoint service are created and ready to receive connection requests. When you receive this status, create an interface endpoint to continue configuring the AWS PrivateLink connection.
     * * `FAILED` 	A system failure has occurred.
     * * `DELETING` 	The AWS PrivateLink connection is being deleted.
     *   AZURE:
     * * `AVAILABLE` 	Atlas created the load balancer and the Private Link Service.
     * * `INITIATING` 	Atlas is creating the load balancer and the Private Link Service.
     * * `FAILED` 	Atlas failed to create the load balancer and the Private Link service.
     * * `DELETING` 	Atlas is deleting the Private Link service.
     *   GCP:
     * * `AVAILABLE` 	Atlas created the load balancer and the GCP Private Service Connect service.
     * * `INITIATING` 	Atlas is creating the load balancer and the GCP Private Service Connect service.
     * * `FAILED`  	Atlas failed to create the load balancer and the GCP Private Service Connect service.
     * * `DELETING` 	Atlas is deleting the GCP Private Service Connect service.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of the AWS PrivateLink connection or Status of the Azure Private Link Service. Atlas returns one of the following values:
     * AWS:
     * * `AVAILABLE` 	Atlas is creating the network load balancer and VPC endpoint service.
     * * `WAITING_FOR_USER` The Atlas network load balancer and VPC endpoint service are created and ready to receive connection requests. When you receive this status, create an interface endpoint to continue configuring the AWS PrivateLink connection.
     * * `FAILED` 	A system failure has occurred.
     * * `DELETING` 	The AWS PrivateLink connection is being deleted.
     *   AZURE:
     * * `AVAILABLE` 	Atlas created the load balancer and the Private Link Service.
     * * `INITIATING` 	Atlas is creating the load balancer and the Private Link Service.
     * * `FAILED` 	Atlas failed to create the load balancer and the Private Link service.
     * * `DELETING` 	Atlas is deleting the Private Link service.
     *   GCP:
     * * `AVAILABLE` 	Atlas created the load balancer and the GCP Private Service Connect service.
     * * `INITIATING` 	Atlas is creating the load balancer and the GCP Private Service Connect service.
     * * `FAILED`  	Atlas failed to create the load balancer and the GCP Private Service Connect service.
     * * `DELETING` 	Atlas is deleting the GCP Private Service Connect service.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private PrivateLinkEndpointState() {}

    private PrivateLinkEndpointState(PrivateLinkEndpointState $) {
        this.endpointGroupNames = $.endpointGroupNames;
        this.endpointServiceName = $.endpointServiceName;
        this.errorMessage = $.errorMessage;
        this.interfaceEndpoints = $.interfaceEndpoints;
        this.privateEndpoints = $.privateEndpoints;
        this.privateLinkId = $.privateLinkId;
        this.privateLinkServiceName = $.privateLinkServiceName;
        this.privateLinkServiceResourceId = $.privateLinkServiceResourceId;
        this.projectId = $.projectId;
        this.providerName = $.providerName;
        this.region = $.region;
        this.regionName = $.regionName;
        this.serviceAttachmentNames = $.serviceAttachmentNames;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateLinkEndpointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateLinkEndpointState $;

        public Builder() {
            $ = new PrivateLinkEndpointState();
        }

        public Builder(PrivateLinkEndpointState defaults) {
            $ = new PrivateLinkEndpointState(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpointGroupNames GCP network endpoint groups corresponding to the Private Service Connect endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder endpointGroupNames(@Nullable Output<List<String>> endpointGroupNames) {
            $.endpointGroupNames = endpointGroupNames;
            return this;
        }

        /**
         * @param endpointGroupNames GCP network endpoint groups corresponding to the Private Service Connect endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder endpointGroupNames(List<String> endpointGroupNames) {
            return endpointGroupNames(Output.of(endpointGroupNames));
        }

        /**
         * @param endpointGroupNames GCP network endpoint groups corresponding to the Private Service Connect endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder endpointGroupNames(String... endpointGroupNames) {
            return endpointGroupNames(List.of(endpointGroupNames));
        }

        /**
         * @param endpointServiceName Name of the PrivateLink endpoint service in AWS. Returns null while the endpoint service is being created.
         * 
         * @return builder
         * 
         */
        public Builder endpointServiceName(@Nullable Output<String> endpointServiceName) {
            $.endpointServiceName = endpointServiceName;
            return this;
        }

        /**
         * @param endpointServiceName Name of the PrivateLink endpoint service in AWS. Returns null while the endpoint service is being created.
         * 
         * @return builder
         * 
         */
        public Builder endpointServiceName(String endpointServiceName) {
            return endpointServiceName(Output.of(endpointServiceName));
        }

        /**
         * @param errorMessage Error message pertaining to the AWS PrivateLink connection. Returns null if there are no errors.
         * AWS:
         * 
         * @return builder
         * 
         */
        public Builder errorMessage(@Nullable Output<String> errorMessage) {
            $.errorMessage = errorMessage;
            return this;
        }

        /**
         * @param errorMessage Error message pertaining to the AWS PrivateLink connection. Returns null if there are no errors.
         * AWS:
         * 
         * @return builder
         * 
         */
        public Builder errorMessage(String errorMessage) {
            return errorMessage(Output.of(errorMessage));
        }

        /**
         * @param interfaceEndpoints Unique identifiers of the interface endpoints in your VPC that you added to the AWS PrivateLink connection.
         * AZURE:
         * 
         * @return builder
         * 
         */
        public Builder interfaceEndpoints(@Nullable Output<List<String>> interfaceEndpoints) {
            $.interfaceEndpoints = interfaceEndpoints;
            return this;
        }

        /**
         * @param interfaceEndpoints Unique identifiers of the interface endpoints in your VPC that you added to the AWS PrivateLink connection.
         * AZURE:
         * 
         * @return builder
         * 
         */
        public Builder interfaceEndpoints(List<String> interfaceEndpoints) {
            return interfaceEndpoints(Output.of(interfaceEndpoints));
        }

        /**
         * @param interfaceEndpoints Unique identifiers of the interface endpoints in your VPC that you added to the AWS PrivateLink connection.
         * AZURE:
         * 
         * @return builder
         * 
         */
        public Builder interfaceEndpoints(String... interfaceEndpoints) {
            return interfaceEndpoints(List.of(interfaceEndpoints));
        }

        /**
         * @param privateEndpoints All private endpoints that you have added to this Azure Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpoints(@Nullable Output<List<String>> privateEndpoints) {
            $.privateEndpoints = privateEndpoints;
            return this;
        }

        /**
         * @param privateEndpoints All private endpoints that you have added to this Azure Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpoints(List<String> privateEndpoints) {
            return privateEndpoints(Output.of(privateEndpoints));
        }

        /**
         * @param privateEndpoints All private endpoints that you have added to this Azure Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpoints(String... privateEndpoints) {
            return privateEndpoints(List.of(privateEndpoints));
        }

        /**
         * @param privateLinkId Unique identifier of the AWS PrivateLink connection.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkId(@Nullable Output<String> privateLinkId) {
            $.privateLinkId = privateLinkId;
            return this;
        }

        /**
         * @param privateLinkId Unique identifier of the AWS PrivateLink connection.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkId(String privateLinkId) {
            return privateLinkId(Output.of(privateLinkId));
        }

        /**
         * @param privateLinkServiceName Name of the Azure Private Link Service that Atlas manages.
         * GCP:
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceName(@Nullable Output<String> privateLinkServiceName) {
            $.privateLinkServiceName = privateLinkServiceName;
            return this;
        }

        /**
         * @param privateLinkServiceName Name of the Azure Private Link Service that Atlas manages.
         * GCP:
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceName(String privateLinkServiceName) {
            return privateLinkServiceName(Output.of(privateLinkServiceName));
        }

        public Builder privateLinkServiceResourceId(@Nullable Output<String> privateLinkServiceResourceId) {
            $.privateLinkServiceResourceId = privateLinkServiceResourceId;
            return this;
        }

        public Builder privateLinkServiceResourceId(String privateLinkServiceResourceId) {
            return privateLinkServiceResourceId(Output.of(privateLinkServiceResourceId));
        }

        /**
         * @param projectId Required 	Unique identifier for the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Required 	Unique identifier for the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param providerName Name of the cloud provider for which you want to create the private endpoint service. Atlas accepts `AWS`, `AZURE` or `GCP`.
         * 
         * @return builder
         * 
         */
        public Builder providerName(@Nullable Output<String> providerName) {
            $.providerName = providerName;
            return this;
        }

        /**
         * @param providerName Name of the cloud provider for which you want to create the private endpoint service. Atlas accepts `AWS`, `AZURE` or `GCP`.
         * 
         * @return builder
         * 
         */
        public Builder providerName(String providerName) {
            return providerName(Output.of(providerName));
        }

        /**
         * @param region Cloud provider region in which you want to create the private endpoint connection.
         * Accepted values are: [AWS regions](https://docs.atlas.mongodb.com/reference/amazon-aws/#amazon-aws), [AZURE regions](https://docs.atlas.mongodb.com/reference/microsoft-azure/#microsoft-azure) and [GCP regions](https://docs.atlas.mongodb.com/reference/google-gcp/#std-label-google-gcp)
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Cloud provider region in which you want to create the private endpoint connection.
         * Accepted values are: [AWS regions](https://docs.atlas.mongodb.com/reference/amazon-aws/#amazon-aws), [AZURE regions](https://docs.atlas.mongodb.com/reference/microsoft-azure/#microsoft-azure) and [GCP regions](https://docs.atlas.mongodb.com/reference/google-gcp/#std-label-google-gcp)
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param regionName GCP region for the Private Service Connect endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder regionName(@Nullable Output<String> regionName) {
            $.regionName = regionName;
            return this;
        }

        /**
         * @param regionName GCP region for the Private Service Connect endpoint service.
         * 
         * @return builder
         * 
         */
        public Builder regionName(String regionName) {
            return regionName(Output.of(regionName));
        }

        /**
         * @param serviceAttachmentNames Unique alphanumeric and special character strings that identify the service attachments associated with the GCP Private Service Connect endpoint service. Returns an empty list while Atlas creates the service attachments.
         * 
         * @return builder
         * 
         */
        public Builder serviceAttachmentNames(@Nullable Output<List<String>> serviceAttachmentNames) {
            $.serviceAttachmentNames = serviceAttachmentNames;
            return this;
        }

        /**
         * @param serviceAttachmentNames Unique alphanumeric and special character strings that identify the service attachments associated with the GCP Private Service Connect endpoint service. Returns an empty list while Atlas creates the service attachments.
         * 
         * @return builder
         * 
         */
        public Builder serviceAttachmentNames(List<String> serviceAttachmentNames) {
            return serviceAttachmentNames(Output.of(serviceAttachmentNames));
        }

        /**
         * @param serviceAttachmentNames Unique alphanumeric and special character strings that identify the service attachments associated with the GCP Private Service Connect endpoint service. Returns an empty list while Atlas creates the service attachments.
         * 
         * @return builder
         * 
         */
        public Builder serviceAttachmentNames(String... serviceAttachmentNames) {
            return serviceAttachmentNames(List.of(serviceAttachmentNames));
        }

        /**
         * @param status Status of the AWS PrivateLink connection or Status of the Azure Private Link Service. Atlas returns one of the following values:
         * AWS:
         * * `AVAILABLE` 	Atlas is creating the network load balancer and VPC endpoint service.
         * * `WAITING_FOR_USER` The Atlas network load balancer and VPC endpoint service are created and ready to receive connection requests. When you receive this status, create an interface endpoint to continue configuring the AWS PrivateLink connection.
         * * `FAILED` 	A system failure has occurred.
         * * `DELETING` 	The AWS PrivateLink connection is being deleted.
         *   AZURE:
         * * `AVAILABLE` 	Atlas created the load balancer and the Private Link Service.
         * * `INITIATING` 	Atlas is creating the load balancer and the Private Link Service.
         * * `FAILED` 	Atlas failed to create the load balancer and the Private Link service.
         * * `DELETING` 	Atlas is deleting the Private Link service.
         *   GCP:
         * * `AVAILABLE` 	Atlas created the load balancer and the GCP Private Service Connect service.
         * * `INITIATING` 	Atlas is creating the load balancer and the GCP Private Service Connect service.
         * * `FAILED`  	Atlas failed to create the load balancer and the GCP Private Service Connect service.
         * * `DELETING` 	Atlas is deleting the GCP Private Service Connect service.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of the AWS PrivateLink connection or Status of the Azure Private Link Service. Atlas returns one of the following values:
         * AWS:
         * * `AVAILABLE` 	Atlas is creating the network load balancer and VPC endpoint service.
         * * `WAITING_FOR_USER` The Atlas network load balancer and VPC endpoint service are created and ready to receive connection requests. When you receive this status, create an interface endpoint to continue configuring the AWS PrivateLink connection.
         * * `FAILED` 	A system failure has occurred.
         * * `DELETING` 	The AWS PrivateLink connection is being deleted.
         *   AZURE:
         * * `AVAILABLE` 	Atlas created the load balancer and the Private Link Service.
         * * `INITIATING` 	Atlas is creating the load balancer and the Private Link Service.
         * * `FAILED` 	Atlas failed to create the load balancer and the Private Link service.
         * * `DELETING` 	Atlas is deleting the Private Link service.
         *   GCP:
         * * `AVAILABLE` 	Atlas created the load balancer and the GCP Private Service Connect service.
         * * `INITIATING` 	Atlas is creating the load balancer and the GCP Private Service Connect service.
         * * `FAILED`  	Atlas failed to create the load balancer and the GCP Private Service Connect service.
         * * `DELETING` 	Atlas is deleting the GCP Private Service Connect service.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public PrivateLinkEndpointState build() {
            return $;
        }
    }

}
