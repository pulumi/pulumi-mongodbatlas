// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetProjectInvitationPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProjectInvitationPlainArgs Empty = new GetProjectInvitationPlainArgs();

    /**
     * Unique 24-hexadecimal digit string that identifies the invitation in Atlas.
     * 
     */
    @Import(name="invitationId", required=true)
    private String invitationId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies the invitation in Atlas.
     * 
     */
    public String invitationId() {
        return this.invitationId;
    }

    /**
     * Unique 24-hexadecimal digit string that identifies the project to which you invited the user.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies the project to which you invited the user.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    /**
     * Email address of the invited user. This is the address to which Atlas sends the invite. If the user accepts the invitation, they log in to Atlas with this username.
     * 
     */
    @Import(name="username", required=true)
    private String username;

    /**
     * @return Email address of the invited user. This is the address to which Atlas sends the invite. If the user accepts the invitation, they log in to Atlas with this username.
     * 
     */
    public String username() {
        return this.username;
    }

    private GetProjectInvitationPlainArgs() {}

    private GetProjectInvitationPlainArgs(GetProjectInvitationPlainArgs $) {
        this.invitationId = $.invitationId;
        this.projectId = $.projectId;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProjectInvitationPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProjectInvitationPlainArgs $;

        public Builder() {
            $ = new GetProjectInvitationPlainArgs();
        }

        public Builder(GetProjectInvitationPlainArgs defaults) {
            $ = new GetProjectInvitationPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param invitationId Unique 24-hexadecimal digit string that identifies the invitation in Atlas.
         * 
         * @return builder
         * 
         */
        public Builder invitationId(String invitationId) {
            $.invitationId = invitationId;
            return this;
        }

        /**
         * @param projectId Unique 24-hexadecimal digit string that identifies the project to which you invited the user.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param username Email address of the invited user. This is the address to which Atlas sends the invite. If the user accepts the invitation, they log in to Atlas with this username.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            $.username = username;
            return this;
        }

        public GetProjectInvitationPlainArgs build() {
            if ($.invitationId == null) {
                throw new MissingRequiredPropertyException("GetProjectInvitationPlainArgs", "invitationId");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetProjectInvitationPlainArgs", "projectId");
            }
            if ($.username == null) {
                throw new MissingRequiredPropertyException("GetProjectInvitationPlainArgs", "username");
            }
            return $;
        }
    }

}
