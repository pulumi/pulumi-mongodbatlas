// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFederatedDatabaseInstancesResultCloudProviderConfigAzure {
    private String atlasAppId;
    /**
     * @return Unique identifier of the role that the Federated Database Instance can use to access the data stores.
     * 
     */
    private String roleId;
    /**
     * @return Unique identifier of the Azure service principal that the Federated Database instance uses to access Azure Blob Storage.
     * 
     */
    private String servicePrincipalId;
    /**
     * @return Unique identifier of the Azure Active Directory tenant where the service principal resides.
     * 
     */
    private String tenantId;

    private GetFederatedDatabaseInstancesResultCloudProviderConfigAzure() {}
    public String atlasAppId() {
        return this.atlasAppId;
    }
    /**
     * @return Unique identifier of the role that the Federated Database Instance can use to access the data stores.
     * 
     */
    public String roleId() {
        return this.roleId;
    }
    /**
     * @return Unique identifier of the Azure service principal that the Federated Database instance uses to access Azure Blob Storage.
     * 
     */
    public String servicePrincipalId() {
        return this.servicePrincipalId;
    }
    /**
     * @return Unique identifier of the Azure Active Directory tenant where the service principal resides.
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFederatedDatabaseInstancesResultCloudProviderConfigAzure defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String atlasAppId;
        private String roleId;
        private String servicePrincipalId;
        private String tenantId;
        public Builder() {}
        public Builder(GetFederatedDatabaseInstancesResultCloudProviderConfigAzure defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.atlasAppId = defaults.atlasAppId;
    	      this.roleId = defaults.roleId;
    	      this.servicePrincipalId = defaults.servicePrincipalId;
    	      this.tenantId = defaults.tenantId;
        }

        @CustomType.Setter
        public Builder atlasAppId(String atlasAppId) {
            if (atlasAppId == null) {
              throw new MissingRequiredPropertyException("GetFederatedDatabaseInstancesResultCloudProviderConfigAzure", "atlasAppId");
            }
            this.atlasAppId = atlasAppId;
            return this;
        }
        @CustomType.Setter
        public Builder roleId(String roleId) {
            if (roleId == null) {
              throw new MissingRequiredPropertyException("GetFederatedDatabaseInstancesResultCloudProviderConfigAzure", "roleId");
            }
            this.roleId = roleId;
            return this;
        }
        @CustomType.Setter
        public Builder servicePrincipalId(String servicePrincipalId) {
            if (servicePrincipalId == null) {
              throw new MissingRequiredPropertyException("GetFederatedDatabaseInstancesResultCloudProviderConfigAzure", "servicePrincipalId");
            }
            this.servicePrincipalId = servicePrincipalId;
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(String tenantId) {
            if (tenantId == null) {
              throw new MissingRequiredPropertyException("GetFederatedDatabaseInstancesResultCloudProviderConfigAzure", "tenantId");
            }
            this.tenantId = tenantId;
            return this;
        }
        public GetFederatedDatabaseInstancesResultCloudProviderConfigAzure build() {
            final var _resultValue = new GetFederatedDatabaseInstancesResultCloudProviderConfigAzure();
            _resultValue.atlasAppId = atlasAppId;
            _resultValue.roleId = roleId;
            _resultValue.servicePrincipalId = servicePrincipalId;
            _resultValue.tenantId = tenantId;
            return _resultValue;
        }
    }
}
