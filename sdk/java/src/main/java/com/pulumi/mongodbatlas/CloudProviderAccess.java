// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.mongodbatlas.CloudProviderAccessArgs;
import com.pulumi.mongodbatlas.Utilities;
import com.pulumi.mongodbatlas.inputs.CloudProviderAccessState;
import com.pulumi.mongodbatlas.outputs.CloudProviderAccessFeatureUsage;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.mongodbatlas.CloudProviderAccess;
 * import com.pulumi.mongodbatlas.CloudProviderAccessArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testRole = new CloudProviderAccess(&#34;testRole&#34;, CloudProviderAccessArgs.builder()        
 *             .projectId(&#34;64259ee860c43338194b0f8e&#34;)
 *             .providerName(&#34;AWS&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### With AWS
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.mongodbatlas.CloudProviderAccessSetup;
 * import com.pulumi.mongodbatlas.CloudProviderAccessSetupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testRole = new CloudProviderAccessSetup(&#34;testRole&#34;, CloudProviderAccessSetupArgs.builder()        
 *             .projectId(&#34;64259ee860c43338194b0f8e&#34;)
 *             .providerName(&#34;AWS&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### With Azure
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.mongodbatlas.CloudProviderAccessSetup;
 * import com.pulumi.mongodbatlas.CloudProviderAccessSetupArgs;
 * import com.pulumi.mongodbatlas.inputs.CloudProviderAccessSetupAzureConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testRole = new CloudProviderAccessSetup(&#34;testRole&#34;, CloudProviderAccessSetupArgs.builder()        
 *             .azureConfigs(CloudProviderAccessSetupAzureConfigArgs.builder()
 *                 .atlasAzureAppId(&#34;9f2deb0d-be22-4524-a403-df531868bac0&#34;)
 *                 .servicePrincipalId(&#34;22f1d2a6-d0e9-482a-83a4-b8dd7dddc2c1&#34;)
 *                 .tenantId(&#34;91402384-d71e-22f5-22dd-759e272cdc1c&#34;)
 *                 .build())
 *             .projectId(&#34;64259ee860c43338194b0f8e&#34;)
 *             .providerName(&#34;AZURE&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ## Authorize role
 * 
 * Once the resource is created add the field `iam_assumed_role_arn` see [Set Up Unified AWS Access](https://docs.atlas.mongodb.com/security/set-up-unified-aws-access/#set-up-unified-aws-access) , and execute a new `pulumi up` this will create a PATCH request.
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.mongodbatlas.CloudProviderAccess;
 * import com.pulumi.mongodbatlas.CloudProviderAccessArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testRole = new CloudProviderAccess(&#34;testRole&#34;, CloudProviderAccessArgs.builder()        
 *             .iamAssumedRoleArn(&#34;arn:aws:iam::772401394250:role/test-user-role&#34;)
 *             .projectId(&#34;&lt;PROJECT-ID&gt;&#34;)
 *             .providerName(&#34;AWS&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * The Cloud Provider Access resource can be imported using project ID and the provider name and mongodbatlas role id, in the format `project_id`-`provider_name`-`role_id`, e.g.
 * 
 * ```sh
 *  $ pulumi import mongodbatlas:index/cloudProviderAccess:CloudProviderAccess my_role 1112222b3bf99403840e8934-AWS-5fc17d476f7a33224f5b224e
 * ```
 * 
 *  See [MongoDB Atlas API](https://docs.atlas.mongodb.com/reference/api/cloud-provider-access-create-one-role/) Documentation for more information.
 * 
 */
@ResourceType(type="mongodbatlas:index/cloudProviderAccess:CloudProviderAccess")
public class CloudProviderAccess extends com.pulumi.resources.CustomResource {
    /**
     * Unique external ID Atlas uses when assuming the IAM role in your AWS account.
     * 
     */
    @Export(name="atlasAssumedRoleExternalId", type=String.class, parameters={})
    private Output<String> atlasAssumedRoleExternalId;

    /**
     * @return Unique external ID Atlas uses when assuming the IAM role in your AWS account.
     * 
     */
    public Output<String> atlasAssumedRoleExternalId() {
        return this.atlasAssumedRoleExternalId;
    }
    /**
     * ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
     * 
     */
    @Export(name="atlasAwsAccountArn", type=String.class, parameters={})
    private Output<String> atlasAwsAccountArn;

    /**
     * @return ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
     * 
     */
    public Output<String> atlasAwsAccountArn() {
        return this.atlasAwsAccountArn;
    }
    /**
     * Date on which this role was authorized.
     * 
     */
    @Export(name="authorizedDate", type=String.class, parameters={})
    private Output<String> authorizedDate;

    /**
     * @return Date on which this role was authorized.
     * 
     */
    public Output<String> authorizedDate() {
        return this.authorizedDate;
    }
    /**
     * Date on which this role was created.
     * 
     */
    @Export(name="createdDate", type=String.class, parameters={})
    private Output<String> createdDate;

    /**
     * @return Date on which this role was created.
     * 
     */
    public Output<String> createdDate() {
        return this.createdDate;
    }
    /**
     * Atlas features this AWS IAM role is linked to.
     * 
     */
    @Export(name="featureUsages", type=List.class, parameters={CloudProviderAccessFeatureUsage.class})
    private Output<List<CloudProviderAccessFeatureUsage>> featureUsages;

    /**
     * @return Atlas features this AWS IAM role is linked to.
     * 
     */
    public Output<List<CloudProviderAccessFeatureUsage>> featureUsages() {
        return this.featureUsages;
    }
    /**
     * ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account. This value is required after the creation (register of the role) as part of [Set Up Unified AWS Access](https://docs.atlas.mongodb.com/security/set-up-unified-aws-access/#set-up-unified-aws-access).
     * 
     */
    @Export(name="iamAssumedRoleArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> iamAssumedRoleArn;

    /**
     * @return ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account. This value is required after the creation (register of the role) as part of [Set Up Unified AWS Access](https://docs.atlas.mongodb.com/security/set-up-unified-aws-access/#set-up-unified-aws-access).
     * 
     */
    public Output<Optional<String>> iamAssumedRoleArn() {
        return Codegen.optional(this.iamAssumedRoleArn);
    }
    /**
     * The unique ID for the project
     * 
     */
    @Export(name="projectId", type=String.class, parameters={})
    private Output<String> projectId;

    /**
     * @return The unique ID for the project
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * The cloud provider for which to create a new role. Currently only AWS is supported.
     * 
     */
    @Export(name="providerName", type=String.class, parameters={})
    private Output<String> providerName;

    /**
     * @return The cloud provider for which to create a new role. Currently only AWS is supported.
     * 
     */
    public Output<String> providerName() {
        return this.providerName;
    }
    /**
     * Unique ID of this role returned by mongodb atlas api
     * 
     * Conditional
     * 
     */
    @Export(name="roleId", type=String.class, parameters={})
    private Output<String> roleId;

    /**
     * @return Unique ID of this role returned by mongodb atlas api
     * 
     * Conditional
     * 
     */
    public Output<String> roleId() {
        return this.roleId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CloudProviderAccess(String name) {
        this(name, CloudProviderAccessArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CloudProviderAccess(String name, CloudProviderAccessArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CloudProviderAccess(String name, CloudProviderAccessArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("mongodbatlas:index/cloudProviderAccess:CloudProviderAccess", name, args == null ? CloudProviderAccessArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CloudProviderAccess(String name, Output<String> id, @Nullable CloudProviderAccessState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("mongodbatlas:index/cloudProviderAccess:CloudProviderAccess", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CloudProviderAccess get(String name, Output<String> id, @Nullable CloudProviderAccessState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CloudProviderAccess(name, id, state, options);
    }
}
