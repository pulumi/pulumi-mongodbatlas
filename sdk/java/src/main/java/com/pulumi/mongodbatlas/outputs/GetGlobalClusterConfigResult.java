// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.mongodbatlas.outputs.GetGlobalClusterConfigManagedNamespace;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetGlobalClusterConfigResult {
    private String clusterName;
    /**
     * @return A map of all custom zone mappings defined for the Global Cluster. Atlas automatically maps each location code to the closest geographical zone. Custom zone mappings allow administrators to override these automatic mappings. If your Global Cluster does not have any custom zone mappings, this document is empty.
     * 
     */
    private Map<String,Object> customZoneMapping;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Add a managed namespaces to a Global Cluster. For more information about managed namespaces, see [Global Clusters](https://docs.atlas.mongodb.com/reference/api/global-clusters/). See Managed Namespace below for more details.
     * 
     */
    private List<GetGlobalClusterConfigManagedNamespace> managedNamespaces;
    private String projectId;

    private GetGlobalClusterConfigResult() {}
    public String clusterName() {
        return this.clusterName;
    }
    /**
     * @return A map of all custom zone mappings defined for the Global Cluster. Atlas automatically maps each location code to the closest geographical zone. Custom zone mappings allow administrators to override these automatic mappings. If your Global Cluster does not have any custom zone mappings, this document is empty.
     * 
     */
    public Map<String,Object> customZoneMapping() {
        return this.customZoneMapping;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Add a managed namespaces to a Global Cluster. For more information about managed namespaces, see [Global Clusters](https://docs.atlas.mongodb.com/reference/api/global-clusters/). See Managed Namespace below for more details.
     * 
     */
    public List<GetGlobalClusterConfigManagedNamespace> managedNamespaces() {
        return this.managedNamespaces;
    }
    public String projectId() {
        return this.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalClusterConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterName;
        private Map<String,Object> customZoneMapping;
        private String id;
        private List<GetGlobalClusterConfigManagedNamespace> managedNamespaces;
        private String projectId;
        public Builder() {}
        public Builder(GetGlobalClusterConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterName = defaults.clusterName;
    	      this.customZoneMapping = defaults.customZoneMapping;
    	      this.id = defaults.id;
    	      this.managedNamespaces = defaults.managedNamespaces;
    	      this.projectId = defaults.projectId;
        }

        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            this.clusterName = Objects.requireNonNull(clusterName);
            return this;
        }
        @CustomType.Setter
        public Builder customZoneMapping(Map<String,Object> customZoneMapping) {
            this.customZoneMapping = Objects.requireNonNull(customZoneMapping);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder managedNamespaces(List<GetGlobalClusterConfigManagedNamespace> managedNamespaces) {
            this.managedNamespaces = Objects.requireNonNull(managedNamespaces);
            return this;
        }
        public Builder managedNamespaces(GetGlobalClusterConfigManagedNamespace... managedNamespaces) {
            return managedNamespaces(List.of(managedNamespaces));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        public GetGlobalClusterConfigResult build() {
            final var _resultValue = new GetGlobalClusterConfigResult();
            _resultValue.clusterName = clusterName;
            _resultValue.customZoneMapping = customZoneMapping;
            _resultValue.id = id;
            _resultValue.managedNamespaces = managedNamespaces;
            _resultValue.projectId = projectId;
            return _resultValue;
        }
    }
}
