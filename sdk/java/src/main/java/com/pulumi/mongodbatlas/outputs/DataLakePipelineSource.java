// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataLakePipelineSource {
    /**
     * @return Human-readable name that identifies the cluster.
     * 
     */
    private @Nullable String clusterName;
    /**
     * @return Human-readable name that identifies the collection.
     * 
     */
    private @Nullable String collectionName;
    /**
     * @return Human-readable name that identifies the database.
     * 
     */
    private @Nullable String databaseName;
    private @Nullable String policyItemId;
    /**
     * @return The unique ID for the project to create a data lake pipeline.
     * 
     */
    private @Nullable String projectId;
    /**
     * @return Type of ingestion source of this Data Lake Pipeline.
     * 
     */
    private @Nullable String type;

    private DataLakePipelineSource() {}
    /**
     * @return Human-readable name that identifies the cluster.
     * 
     */
    public Optional<String> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }
    /**
     * @return Human-readable name that identifies the collection.
     * 
     */
    public Optional<String> collectionName() {
        return Optional.ofNullable(this.collectionName);
    }
    /**
     * @return Human-readable name that identifies the database.
     * 
     */
    public Optional<String> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }
    public Optional<String> policyItemId() {
        return Optional.ofNullable(this.policyItemId);
    }
    /**
     * @return The unique ID for the project to create a data lake pipeline.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return Type of ingestion source of this Data Lake Pipeline.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataLakePipelineSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String clusterName;
        private @Nullable String collectionName;
        private @Nullable String databaseName;
        private @Nullable String policyItemId;
        private @Nullable String projectId;
        private @Nullable String type;
        public Builder() {}
        public Builder(DataLakePipelineSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterName = defaults.clusterName;
    	      this.collectionName = defaults.collectionName;
    	      this.databaseName = defaults.databaseName;
    	      this.policyItemId = defaults.policyItemId;
    	      this.projectId = defaults.projectId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder clusterName(@Nullable String clusterName) {

            this.clusterName = clusterName;
            return this;
        }
        @CustomType.Setter
        public Builder collectionName(@Nullable String collectionName) {

            this.collectionName = collectionName;
            return this;
        }
        @CustomType.Setter
        public Builder databaseName(@Nullable String databaseName) {

            this.databaseName = databaseName;
            return this;
        }
        @CustomType.Setter
        public Builder policyItemId(@Nullable String policyItemId) {

            this.policyItemId = policyItemId;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {

            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public DataLakePipelineSource build() {
            final var _resultValue = new DataLakePipelineSource();
            _resultValue.clusterName = clusterName;
            _resultValue.collectionName = collectionName;
            _resultValue.databaseName = databaseName;
            _resultValue.policyItemId = policyItemId;
            _resultValue.projectId = projectId;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
