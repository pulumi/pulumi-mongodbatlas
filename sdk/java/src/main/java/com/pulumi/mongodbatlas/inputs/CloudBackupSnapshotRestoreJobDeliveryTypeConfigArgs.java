// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs Empty = new CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs();

    /**
     * Set to `true` to use the automated configuration.
     * 
     */
    @Import(name="automated")
    private @Nullable Output<Boolean> automated;

    /**
     * @return Set to `true` to use the automated configuration.
     * 
     */
    public Optional<Output<Boolean>> automated() {
        return Optional.ofNullable(this.automated);
    }

    /**
     * Set to `true` to use the download configuration.
     * 
     */
    @Import(name="download")
    private @Nullable Output<Boolean> download;

    /**
     * @return Set to `true` to use the download configuration.
     * 
     */
    public Optional<Output<Boolean>> download() {
        return Optional.ofNullable(this.download);
    }

    /**
     * Optional setting for **pointInTime** configuration. Oplog operation number from which to you want to restore this snapshot. This is the second part of an Oplog timestamp. Used in conjunction with `oplog_ts`.
     * 
     */
    @Import(name="oplogInc")
    private @Nullable Output<Integer> oplogInc;

    /**
     * @return Optional setting for **pointInTime** configuration. Oplog operation number from which to you want to restore this snapshot. This is the second part of an Oplog timestamp. Used in conjunction with `oplog_ts`.
     * 
     */
    public Optional<Output<Integer>> oplogInc() {
        return Optional.ofNullable(this.oplogInc);
    }

    /**
     * Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which to you want to restore this snapshot. This is the first part of an Oplog timestamp.
     * 
     */
    @Import(name="oplogTs")
    private @Nullable Output<Integer> oplogTs;

    /**
     * @return Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which to you want to restore this snapshot. This is the first part of an Oplog timestamp.
     * 
     */
    public Optional<Output<Integer>> oplogTs() {
        return Optional.ofNullable(this.oplogTs);
    }

    @Import(name="pointInTime")
    private @Nullable Output<Boolean> pointInTime;

    public Optional<Output<Boolean>> pointInTime() {
        return Optional.ofNullable(this.pointInTime);
    }

    /**
     * Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which you want to restore this snapshot. Used instead of oplog settings.
     * 
     */
    @Import(name="pointInTimeUtcSeconds")
    private @Nullable Output<Integer> pointInTimeUtcSeconds;

    /**
     * @return Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which you want to restore this snapshot. Used instead of oplog settings.
     * 
     */
    public Optional<Output<Integer>> pointInTimeUtcSeconds() {
        return Optional.ofNullable(this.pointInTimeUtcSeconds);
    }

    /**
     * Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
     * 
     */
    @Import(name="targetClusterName")
    private @Nullable Output<String> targetClusterName;

    /**
     * @return Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
     * 
     */
    public Optional<Output<String>> targetClusterName() {
        return Optional.ofNullable(this.targetClusterName);
    }

    /**
     * Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
     * 
     */
    @Import(name="targetProjectId")
    private @Nullable Output<String> targetProjectId;

    /**
     * @return Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
     * 
     */
    public Optional<Output<String>> targetProjectId() {
        return Optional.ofNullable(this.targetProjectId);
    }

    private CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs() {}

    private CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs(CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs $) {
        this.automated = $.automated;
        this.download = $.download;
        this.oplogInc = $.oplogInc;
        this.oplogTs = $.oplogTs;
        this.pointInTime = $.pointInTime;
        this.pointInTimeUtcSeconds = $.pointInTimeUtcSeconds;
        this.targetClusterName = $.targetClusterName;
        this.targetProjectId = $.targetProjectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs $;

        public Builder() {
            $ = new CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs();
        }

        public Builder(CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs defaults) {
            $ = new CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automated Set to `true` to use the automated configuration.
         * 
         * @return builder
         * 
         */
        public Builder automated(@Nullable Output<Boolean> automated) {
            $.automated = automated;
            return this;
        }

        /**
         * @param automated Set to `true` to use the automated configuration.
         * 
         * @return builder
         * 
         */
        public Builder automated(Boolean automated) {
            return automated(Output.of(automated));
        }

        /**
         * @param download Set to `true` to use the download configuration.
         * 
         * @return builder
         * 
         */
        public Builder download(@Nullable Output<Boolean> download) {
            $.download = download;
            return this;
        }

        /**
         * @param download Set to `true` to use the download configuration.
         * 
         * @return builder
         * 
         */
        public Builder download(Boolean download) {
            return download(Output.of(download));
        }

        /**
         * @param oplogInc Optional setting for **pointInTime** configuration. Oplog operation number from which to you want to restore this snapshot. This is the second part of an Oplog timestamp. Used in conjunction with `oplog_ts`.
         * 
         * @return builder
         * 
         */
        public Builder oplogInc(@Nullable Output<Integer> oplogInc) {
            $.oplogInc = oplogInc;
            return this;
        }

        /**
         * @param oplogInc Optional setting for **pointInTime** configuration. Oplog operation number from which to you want to restore this snapshot. This is the second part of an Oplog timestamp. Used in conjunction with `oplog_ts`.
         * 
         * @return builder
         * 
         */
        public Builder oplogInc(Integer oplogInc) {
            return oplogInc(Output.of(oplogInc));
        }

        /**
         * @param oplogTs Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which to you want to restore this snapshot. This is the first part of an Oplog timestamp.
         * 
         * @return builder
         * 
         */
        public Builder oplogTs(@Nullable Output<Integer> oplogTs) {
            $.oplogTs = oplogTs;
            return this;
        }

        /**
         * @param oplogTs Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which to you want to restore this snapshot. This is the first part of an Oplog timestamp.
         * 
         * @return builder
         * 
         */
        public Builder oplogTs(Integer oplogTs) {
            return oplogTs(Output.of(oplogTs));
        }

        public Builder pointInTime(@Nullable Output<Boolean> pointInTime) {
            $.pointInTime = pointInTime;
            return this;
        }

        public Builder pointInTime(Boolean pointInTime) {
            return pointInTime(Output.of(pointInTime));
        }

        /**
         * @param pointInTimeUtcSeconds Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which you want to restore this snapshot. Used instead of oplog settings.
         * 
         * @return builder
         * 
         */
        public Builder pointInTimeUtcSeconds(@Nullable Output<Integer> pointInTimeUtcSeconds) {
            $.pointInTimeUtcSeconds = pointInTimeUtcSeconds;
            return this;
        }

        /**
         * @param pointInTimeUtcSeconds Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which you want to restore this snapshot. Used instead of oplog settings.
         * 
         * @return builder
         * 
         */
        public Builder pointInTimeUtcSeconds(Integer pointInTimeUtcSeconds) {
            return pointInTimeUtcSeconds(Output.of(pointInTimeUtcSeconds));
        }

        /**
         * @param targetClusterName Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
         * 
         * @return builder
         * 
         */
        public Builder targetClusterName(@Nullable Output<String> targetClusterName) {
            $.targetClusterName = targetClusterName;
            return this;
        }

        /**
         * @param targetClusterName Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
         * 
         * @return builder
         * 
         */
        public Builder targetClusterName(String targetClusterName) {
            return targetClusterName(Output.of(targetClusterName));
        }

        /**
         * @param targetProjectId Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
         * 
         * @return builder
         * 
         */
        public Builder targetProjectId(@Nullable Output<String> targetProjectId) {
            $.targetProjectId = targetProjectId;
            return this;
        }

        /**
         * @param targetProjectId Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
         * 
         * @return builder
         * 
         */
        public Builder targetProjectId(String targetProjectId) {
            return targetProjectId(Output.of(targetProjectId));
        }

        public CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs build() {
            return $;
        }
    }

}
