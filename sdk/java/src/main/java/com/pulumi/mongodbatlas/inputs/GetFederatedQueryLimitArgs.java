// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetFederatedQueryLimitArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFederatedQueryLimitArgs Empty = new GetFederatedQueryLimitArgs();

    /**
     * String enum that indicates whether the identity provider is active or not. Accepted values are:
     * * `bytesProcessed.query`: Limit on the number of bytes processed during a single data federation query.
     * * `bytesProcessed.daily`: Limit on the number of bytes processed for the data federation instance for the current day.
     * * `bytesProcessed.weekly`: Limit on the number of bytes processed for the data federation instance for the current week.
     * * `bytesProcessed.monthly`: Limit on the number of bytes processed for the data federation instance for the current month.
     * 
     */
    @Import(name="limitName", required=true)
    private Output<String> limitName;

    /**
     * @return String enum that indicates whether the identity provider is active or not. Accepted values are:
     * * `bytesProcessed.query`: Limit on the number of bytes processed during a single data federation query.
     * * `bytesProcessed.daily`: Limit on the number of bytes processed for the data federation instance for the current day.
     * * `bytesProcessed.weekly`: Limit on the number of bytes processed for the data federation instance for the current week.
     * * `bytesProcessed.monthly`: Limit on the number of bytes processed for the data federation instance for the current month.
     * 
     */
    public Output<String> limitName() {
        return this.limitName;
    }

    /**
     * The unique ID for the project to create a Federated Database Instance.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The unique ID for the project to create a Federated Database Instance.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Name of the Atlas Federated Database Instance.
     * 
     */
    @Import(name="tenantName", required=true)
    private Output<String> tenantName;

    /**
     * @return Name of the Atlas Federated Database Instance.
     * 
     */
    public Output<String> tenantName() {
        return this.tenantName;
    }

    private GetFederatedQueryLimitArgs() {}

    private GetFederatedQueryLimitArgs(GetFederatedQueryLimitArgs $) {
        this.limitName = $.limitName;
        this.projectId = $.projectId;
        this.tenantName = $.tenantName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFederatedQueryLimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFederatedQueryLimitArgs $;

        public Builder() {
            $ = new GetFederatedQueryLimitArgs();
        }

        public Builder(GetFederatedQueryLimitArgs defaults) {
            $ = new GetFederatedQueryLimitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param limitName String enum that indicates whether the identity provider is active or not. Accepted values are:
         * * `bytesProcessed.query`: Limit on the number of bytes processed during a single data federation query.
         * * `bytesProcessed.daily`: Limit on the number of bytes processed for the data federation instance for the current day.
         * * `bytesProcessed.weekly`: Limit on the number of bytes processed for the data federation instance for the current week.
         * * `bytesProcessed.monthly`: Limit on the number of bytes processed for the data federation instance for the current month.
         * 
         * @return builder
         * 
         */
        public Builder limitName(Output<String> limitName) {
            $.limitName = limitName;
            return this;
        }

        /**
         * @param limitName String enum that indicates whether the identity provider is active or not. Accepted values are:
         * * `bytesProcessed.query`: Limit on the number of bytes processed during a single data federation query.
         * * `bytesProcessed.daily`: Limit on the number of bytes processed for the data federation instance for the current day.
         * * `bytesProcessed.weekly`: Limit on the number of bytes processed for the data federation instance for the current week.
         * * `bytesProcessed.monthly`: Limit on the number of bytes processed for the data federation instance for the current month.
         * 
         * @return builder
         * 
         */
        public Builder limitName(String limitName) {
            return limitName(Output.of(limitName));
        }

        /**
         * @param projectId The unique ID for the project to create a Federated Database Instance.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The unique ID for the project to create a Federated Database Instance.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param tenantName Name of the Atlas Federated Database Instance.
         * 
         * @return builder
         * 
         */
        public Builder tenantName(Output<String> tenantName) {
            $.tenantName = tenantName;
            return this;
        }

        /**
         * @param tenantName Name of the Atlas Federated Database Instance.
         * 
         * @return builder
         * 
         */
        public Builder tenantName(String tenantName) {
            return tenantName(Output.of(tenantName));
        }

        public GetFederatedQueryLimitArgs build() {
            if ($.limitName == null) {
                throw new MissingRequiredPropertyException("GetFederatedQueryLimitArgs", "limitName");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetFederatedQueryLimitArgs", "projectId");
            }
            if ($.tenantName == null) {
                throw new MissingRequiredPropertyException("GetFederatedQueryLimitArgs", "tenantName");
            }
            return $;
        }
    }

}
