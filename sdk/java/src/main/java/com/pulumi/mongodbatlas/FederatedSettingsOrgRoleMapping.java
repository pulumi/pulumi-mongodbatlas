// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.mongodbatlas.FederatedSettingsOrgRoleMappingArgs;
import com.pulumi.mongodbatlas.Utilities;
import com.pulumi.mongodbatlas.inputs.FederatedSettingsOrgRoleMappingState;
import com.pulumi.mongodbatlas.outputs.FederatedSettingsOrgRoleMappingRoleAssignment;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * `mongodbatlas.FederatedSettingsOrgRoleMapping` provides an Role Mapping resource. This allows organization role mapping to be created.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.mongodbatlas.FederatedSettingsOrgRoleMapping;
 * import com.pulumi.mongodbatlas.FederatedSettingsOrgRoleMappingArgs;
 * import com.pulumi.mongodbatlas.inputs.FederatedSettingsOrgRoleMappingRoleAssignmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var orgGroupRoleMappingImport = new FederatedSettingsOrgRoleMapping("orgGroupRoleMappingImport", FederatedSettingsOrgRoleMappingArgs.builder()
 *             .federationSettingsId("627a9687f7f7f7f774de306f14")
 *             .orgId("627a9683e7f7f7ff7fe306f14")
 *             .externalGroupName("myGrouptest")
 *             .roleAssignments(            
 *                 FederatedSettingsOrgRoleMappingRoleAssignmentArgs.builder()
 *                     .orgId("627a9683e7f7f7ff7fe306f14")
 *                     .roles(                    
 *                         "ORG_MEMBER",
 *                         "ORG_GROUP_CREATOR",
 *                         "ORG_BILLING_ADMIN")
 *                     .build(),
 *                 FederatedSettingsOrgRoleMappingRoleAssignmentArgs.builder()
 *                     .groupId("628aa20d7f7f7f7f7098b81b8")
 *                     .roles(                    
 *                         "GROUP_OWNER",
 *                         "GROUP_DATA_ACCESS_ADMIN",
 *                         "GROUP_SEARCH_INDEX_EDITOR",
 *                         "GROUP_DATA_ACCESS_READ_ONLY")
 *                     .build(),
 *                 FederatedSettingsOrgRoleMappingRoleAssignmentArgs.builder()
 *                     .groupId("628aa20d7f7f7f7f7078b81b8")
 *                     .roles(                    
 *                         "GROUP_OWNER",
 *                         "GROUP_DATA_ACCESS_ADMIN",
 *                         "GROUP_SEARCH_INDEX_EDITOR",
 *                         "GROUP_DATA_ACCESS_READ_ONLY",
 *                         "GROUP_DATA_ACCESS_READ_WRITE")
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * FederatedSettingsOrgRoleMapping can be imported using federation_settings_id-org_id-role_mapping_id, e.g.
 * 
 * ```sh
 * $ pulumi import mongodbatlas:index/federatedSettingsOrgRoleMapping:FederatedSettingsOrgRoleMapping org_group_role_mapping_import 6287a663c7f7f7f71c441c6c-627a96837f7f7f7e306f14-628ae97f7f7468ea3727
 * ```
 * For more information see: [MongoDB Atlas API Reference.](https://www.mongodb.com/docs/atlas/reference/api/federation-configuration/)
 * 
 */
@ResourceType(type="mongodbatlas:index/federatedSettingsOrgRoleMapping:FederatedSettingsOrgRoleMapping")
public class FederatedSettingsOrgRoleMapping extends com.pulumi.resources.CustomResource {
    /**
     * Unique human-readable label that identifies the identity provider group to which this role mapping applies.
     * 
     */
    @Export(name="externalGroupName", refs={String.class}, tree="[0]")
    private Output<String> externalGroupName;

    /**
     * @return Unique human-readable label that identifies the identity provider group to which this role mapping applies.
     * 
     */
    public Output<String> externalGroupName() {
        return this.externalGroupName;
    }
    /**
     * Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
     * 
     */
    @Export(name="federationSettingsId", refs={String.class}, tree="[0]")
    private Output<String> federationSettingsId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
     * 
     */
    public Output<String> federationSettingsId() {
        return this.federationSettingsId;
    }
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output<String> orgId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }
    /**
     * Atlas roles and the unique identifiers of the groups and organizations associated with each role.
     * 
     */
    @Export(name="roleAssignments", refs={List.class,FederatedSettingsOrgRoleMappingRoleAssignment.class}, tree="[0,1]")
    private Output<List<FederatedSettingsOrgRoleMappingRoleAssignment>> roleAssignments;

    /**
     * @return Atlas roles and the unique identifiers of the groups and organizations associated with each role.
     * 
     */
    public Output<List<FederatedSettingsOrgRoleMappingRoleAssignment>> roleAssignments() {
        return this.roleAssignments;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FederatedSettingsOrgRoleMapping(String name) {
        this(name, FederatedSettingsOrgRoleMappingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FederatedSettingsOrgRoleMapping(String name, FederatedSettingsOrgRoleMappingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FederatedSettingsOrgRoleMapping(String name, FederatedSettingsOrgRoleMappingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("mongodbatlas:index/federatedSettingsOrgRoleMapping:FederatedSettingsOrgRoleMapping", name, args == null ? FederatedSettingsOrgRoleMappingArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FederatedSettingsOrgRoleMapping(String name, Output<String> id, @Nullable FederatedSettingsOrgRoleMappingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("mongodbatlas:index/federatedSettingsOrgRoleMapping:FederatedSettingsOrgRoleMapping", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FederatedSettingsOrgRoleMapping get(String name, Output<String> id, @Nullable FederatedSettingsOrgRoleMappingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FederatedSettingsOrgRoleMapping(name, id, state, options);
    }
}
