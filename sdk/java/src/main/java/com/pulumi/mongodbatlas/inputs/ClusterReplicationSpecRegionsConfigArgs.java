// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterReplicationSpecRegionsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterReplicationSpecRegionsConfigArgs Empty = new ClusterReplicationSpecRegionsConfigArgs();

    /**
     * The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
     * 
     */
    @Import(name="analyticsNodes")
    private @Nullable Output<Integer> analyticsNodes;

    /**
     * @return The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
     * 
     */
    public Optional<Output<Integer>> analyticsNodes() {
        return Optional.ofNullable(this.analyticsNodes);
    }

    /**
     * Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
     * * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
     * * Specify 0 if you do not want any electable nodes in the region.
     * * You cannot create electable nodes in a region if `priority` is 0.
     * 
     */
    @Import(name="electableNodes")
    private @Nullable Output<Integer> electableNodes;

    /**
     * @return Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
     * * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
     * * Specify 0 if you do not want any electable nodes in the region.
     * * You cannot create electable nodes in a region if `priority` is 0.
     * 
     */
    public Optional<Output<Integer>> electableNodes() {
        return Optional.ofNullable(this.electableNodes);
    }

    /**
     * Election priority of the region. For regions with only read-only nodes, set this value to 0.
     * * For regions where `electable_nodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
     * * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
     * * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Election priority of the region. For regions with only read-only nodes, set this value to 0.
     * * For regions where `electable_nodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
     * * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
     * * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
     * 
     */
    @Import(name="readOnlyNodes")
    private @Nullable Output<Integer> readOnlyNodes;

    /**
     * @return Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
     * 
     */
    public Optional<Output<Integer>> readOnlyNodes() {
        return Optional.ofNullable(this.readOnlyNodes);
    }

    /**
     * Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     * 
     */
    @Import(name="regionName", required=true)
    private Output<String> regionName;

    /**
     * @return Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     * 
     */
    public Output<String> regionName() {
        return this.regionName;
    }

    private ClusterReplicationSpecRegionsConfigArgs() {}

    private ClusterReplicationSpecRegionsConfigArgs(ClusterReplicationSpecRegionsConfigArgs $) {
        this.analyticsNodes = $.analyticsNodes;
        this.electableNodes = $.electableNodes;
        this.priority = $.priority;
        this.readOnlyNodes = $.readOnlyNodes;
        this.regionName = $.regionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterReplicationSpecRegionsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterReplicationSpecRegionsConfigArgs $;

        public Builder() {
            $ = new ClusterReplicationSpecRegionsConfigArgs();
        }

        public Builder(ClusterReplicationSpecRegionsConfigArgs defaults) {
            $ = new ClusterReplicationSpecRegionsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param analyticsNodes The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
         * 
         * @return builder
         * 
         */
        public Builder analyticsNodes(@Nullable Output<Integer> analyticsNodes) {
            $.analyticsNodes = analyticsNodes;
            return this;
        }

        /**
         * @param analyticsNodes The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
         * 
         * @return builder
         * 
         */
        public Builder analyticsNodes(Integer analyticsNodes) {
            return analyticsNodes(Output.of(analyticsNodes));
        }

        /**
         * @param electableNodes Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
         * * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
         * * Specify 0 if you do not want any electable nodes in the region.
         * * You cannot create electable nodes in a region if `priority` is 0.
         * 
         * @return builder
         * 
         */
        public Builder electableNodes(@Nullable Output<Integer> electableNodes) {
            $.electableNodes = electableNodes;
            return this;
        }

        /**
         * @param electableNodes Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
         * * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
         * * Specify 0 if you do not want any electable nodes in the region.
         * * You cannot create electable nodes in a region if `priority` is 0.
         * 
         * @return builder
         * 
         */
        public Builder electableNodes(Integer electableNodes) {
            return electableNodes(Output.of(electableNodes));
        }

        /**
         * @param priority Election priority of the region. For regions with only read-only nodes, set this value to 0.
         * * For regions where `electable_nodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
         * * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
         * * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Election priority of the region. For regions with only read-only nodes, set this value to 0.
         * * For regions where `electable_nodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
         * * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
         * * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param readOnlyNodes Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
         * 
         * @return builder
         * 
         */
        public Builder readOnlyNodes(@Nullable Output<Integer> readOnlyNodes) {
            $.readOnlyNodes = readOnlyNodes;
            return this;
        }

        /**
         * @param readOnlyNodes Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
         * 
         * @return builder
         * 
         */
        public Builder readOnlyNodes(Integer readOnlyNodes) {
            return readOnlyNodes(Output.of(readOnlyNodes));
        }

        /**
         * @param regionName Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
         * 
         * @return builder
         * 
         */
        public Builder regionName(Output<String> regionName) {
            $.regionName = regionName;
            return this;
        }

        /**
         * @param regionName Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
         * 
         * @return builder
         * 
         */
        public Builder regionName(String regionName) {
            return regionName(Output.of(regionName));
        }

        public ClusterReplicationSpecRegionsConfigArgs build() {
            if ($.regionName == null) {
                throw new MissingRequiredPropertyException("ClusterReplicationSpecRegionsConfigArgs", "regionName");
            }
            return $;
        }
    }

}
