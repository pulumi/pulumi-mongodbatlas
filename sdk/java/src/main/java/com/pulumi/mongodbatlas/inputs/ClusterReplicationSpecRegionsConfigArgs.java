// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterReplicationSpecRegionsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterReplicationSpecRegionsConfigArgs Empty = new ClusterReplicationSpecRegionsConfigArgs();

    @Import(name="analyticsNodes")
    private @Nullable Output<Integer> analyticsNodes;

    public Optional<Output<Integer>> analyticsNodes() {
        return Optional.ofNullable(this.analyticsNodes);
    }

    @Import(name="electableNodes")
    private @Nullable Output<Integer> electableNodes;

    public Optional<Output<Integer>> electableNodes() {
        return Optional.ofNullable(this.electableNodes);
    }

    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    @Import(name="readOnlyNodes")
    private @Nullable Output<Integer> readOnlyNodes;

    public Optional<Output<Integer>> readOnlyNodes() {
        return Optional.ofNullable(this.readOnlyNodes);
    }

    @Import(name="regionName", required=true)
    private Output<String> regionName;

    public Output<String> regionName() {
        return this.regionName;
    }

    private ClusterReplicationSpecRegionsConfigArgs() {}

    private ClusterReplicationSpecRegionsConfigArgs(ClusterReplicationSpecRegionsConfigArgs $) {
        this.analyticsNodes = $.analyticsNodes;
        this.electableNodes = $.electableNodes;
        this.priority = $.priority;
        this.readOnlyNodes = $.readOnlyNodes;
        this.regionName = $.regionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterReplicationSpecRegionsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterReplicationSpecRegionsConfigArgs $;

        public Builder() {
            $ = new ClusterReplicationSpecRegionsConfigArgs();
        }

        public Builder(ClusterReplicationSpecRegionsConfigArgs defaults) {
            $ = new ClusterReplicationSpecRegionsConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder analyticsNodes(@Nullable Output<Integer> analyticsNodes) {
            $.analyticsNodes = analyticsNodes;
            return this;
        }

        public Builder analyticsNodes(Integer analyticsNodes) {
            return analyticsNodes(Output.of(analyticsNodes));
        }

        public Builder electableNodes(@Nullable Output<Integer> electableNodes) {
            $.electableNodes = electableNodes;
            return this;
        }

        public Builder electableNodes(Integer electableNodes) {
            return electableNodes(Output.of(electableNodes));
        }

        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        public Builder readOnlyNodes(@Nullable Output<Integer> readOnlyNodes) {
            $.readOnlyNodes = readOnlyNodes;
            return this;
        }

        public Builder readOnlyNodes(Integer readOnlyNodes) {
            return readOnlyNodes(Output.of(readOnlyNodes));
        }

        public Builder regionName(Output<String> regionName) {
            $.regionName = regionName;
            return this;
        }

        public Builder regionName(String regionName) {
            return regionName(Output.of(regionName));
        }

        public ClusterReplicationSpecRegionsConfigArgs build() {
            if ($.regionName == null) {
                throw new MissingRequiredPropertyException("ClusterReplicationSpecRegionsConfigArgs", "regionName");
            }
            return $;
        }
    }

}
