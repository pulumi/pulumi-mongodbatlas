// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetOnlineArchiveCriteria;
import com.pulumi.mongodbatlas.outputs.GetOnlineArchiveDataExpirationRule;
import com.pulumi.mongodbatlas.outputs.GetOnlineArchiveDataProcessRegion;
import com.pulumi.mongodbatlas.outputs.GetOnlineArchivePartitionField;
import com.pulumi.mongodbatlas.outputs.GetOnlineArchiveSchedule;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetOnlineArchiveResult {
    private String archiveId;
    private String clusterName;
    private String collName;
    private String collectionType;
    private List<GetOnlineArchiveCriteria> criterias;
    private List<GetOnlineArchiveDataExpirationRule> dataExpirationRules;
    private List<GetOnlineArchiveDataProcessRegion> dataProcessRegions;
    private String dbName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<GetOnlineArchivePartitionField> partitionFields;
    private Boolean paused;
    private String projectId;
    private List<GetOnlineArchiveSchedule> schedules;
    private String state;

    private GetOnlineArchiveResult() {}
    public String archiveId() {
        return this.archiveId;
    }
    public String clusterName() {
        return this.clusterName;
    }
    public String collName() {
        return this.collName;
    }
    public String collectionType() {
        return this.collectionType;
    }
    public List<GetOnlineArchiveCriteria> criterias() {
        return this.criterias;
    }
    public List<GetOnlineArchiveDataExpirationRule> dataExpirationRules() {
        return this.dataExpirationRules;
    }
    public List<GetOnlineArchiveDataProcessRegion> dataProcessRegions() {
        return this.dataProcessRegions;
    }
    public String dbName() {
        return this.dbName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetOnlineArchivePartitionField> partitionFields() {
        return this.partitionFields;
    }
    public Boolean paused() {
        return this.paused;
    }
    public String projectId() {
        return this.projectId;
    }
    public List<GetOnlineArchiveSchedule> schedules() {
        return this.schedules;
    }
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOnlineArchiveResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String archiveId;
        private String clusterName;
        private String collName;
        private String collectionType;
        private List<GetOnlineArchiveCriteria> criterias;
        private List<GetOnlineArchiveDataExpirationRule> dataExpirationRules;
        private List<GetOnlineArchiveDataProcessRegion> dataProcessRegions;
        private String dbName;
        private String id;
        private List<GetOnlineArchivePartitionField> partitionFields;
        private Boolean paused;
        private String projectId;
        private List<GetOnlineArchiveSchedule> schedules;
        private String state;
        public Builder() {}
        public Builder(GetOnlineArchiveResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archiveId = defaults.archiveId;
    	      this.clusterName = defaults.clusterName;
    	      this.collName = defaults.collName;
    	      this.collectionType = defaults.collectionType;
    	      this.criterias = defaults.criterias;
    	      this.dataExpirationRules = defaults.dataExpirationRules;
    	      this.dataProcessRegions = defaults.dataProcessRegions;
    	      this.dbName = defaults.dbName;
    	      this.id = defaults.id;
    	      this.partitionFields = defaults.partitionFields;
    	      this.paused = defaults.paused;
    	      this.projectId = defaults.projectId;
    	      this.schedules = defaults.schedules;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder archiveId(String archiveId) {
            if (archiveId == null) {
              throw new MissingRequiredPropertyException("GetOnlineArchiveResult", "archiveId");
            }
            this.archiveId = archiveId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            if (clusterName == null) {
              throw new MissingRequiredPropertyException("GetOnlineArchiveResult", "clusterName");
            }
            this.clusterName = clusterName;
            return this;
        }
        @CustomType.Setter
        public Builder collName(String collName) {
            if (collName == null) {
              throw new MissingRequiredPropertyException("GetOnlineArchiveResult", "collName");
            }
            this.collName = collName;
            return this;
        }
        @CustomType.Setter
        public Builder collectionType(String collectionType) {
            if (collectionType == null) {
              throw new MissingRequiredPropertyException("GetOnlineArchiveResult", "collectionType");
            }
            this.collectionType = collectionType;
            return this;
        }
        @CustomType.Setter
        public Builder criterias(List<GetOnlineArchiveCriteria> criterias) {
            if (criterias == null) {
              throw new MissingRequiredPropertyException("GetOnlineArchiveResult", "criterias");
            }
            this.criterias = criterias;
            return this;
        }
        public Builder criterias(GetOnlineArchiveCriteria... criterias) {
            return criterias(List.of(criterias));
        }
        @CustomType.Setter
        public Builder dataExpirationRules(List<GetOnlineArchiveDataExpirationRule> dataExpirationRules) {
            if (dataExpirationRules == null) {
              throw new MissingRequiredPropertyException("GetOnlineArchiveResult", "dataExpirationRules");
            }
            this.dataExpirationRules = dataExpirationRules;
            return this;
        }
        public Builder dataExpirationRules(GetOnlineArchiveDataExpirationRule... dataExpirationRules) {
            return dataExpirationRules(List.of(dataExpirationRules));
        }
        @CustomType.Setter
        public Builder dataProcessRegions(List<GetOnlineArchiveDataProcessRegion> dataProcessRegions) {
            if (dataProcessRegions == null) {
              throw new MissingRequiredPropertyException("GetOnlineArchiveResult", "dataProcessRegions");
            }
            this.dataProcessRegions = dataProcessRegions;
            return this;
        }
        public Builder dataProcessRegions(GetOnlineArchiveDataProcessRegion... dataProcessRegions) {
            return dataProcessRegions(List.of(dataProcessRegions));
        }
        @CustomType.Setter
        public Builder dbName(String dbName) {
            if (dbName == null) {
              throw new MissingRequiredPropertyException("GetOnlineArchiveResult", "dbName");
            }
            this.dbName = dbName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOnlineArchiveResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder partitionFields(List<GetOnlineArchivePartitionField> partitionFields) {
            if (partitionFields == null) {
              throw new MissingRequiredPropertyException("GetOnlineArchiveResult", "partitionFields");
            }
            this.partitionFields = partitionFields;
            return this;
        }
        public Builder partitionFields(GetOnlineArchivePartitionField... partitionFields) {
            return partitionFields(List.of(partitionFields));
        }
        @CustomType.Setter
        public Builder paused(Boolean paused) {
            if (paused == null) {
              throw new MissingRequiredPropertyException("GetOnlineArchiveResult", "paused");
            }
            this.paused = paused;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetOnlineArchiveResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder schedules(List<GetOnlineArchiveSchedule> schedules) {
            if (schedules == null) {
              throw new MissingRequiredPropertyException("GetOnlineArchiveResult", "schedules");
            }
            this.schedules = schedules;
            return this;
        }
        public Builder schedules(GetOnlineArchiveSchedule... schedules) {
            return schedules(List.of(schedules));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetOnlineArchiveResult", "state");
            }
            this.state = state;
            return this;
        }
        public GetOnlineArchiveResult build() {
            final var _resultValue = new GetOnlineArchiveResult();
            _resultValue.archiveId = archiveId;
            _resultValue.clusterName = clusterName;
            _resultValue.collName = collName;
            _resultValue.collectionType = collectionType;
            _resultValue.criterias = criterias;
            _resultValue.dataExpirationRules = dataExpirationRules;
            _resultValue.dataProcessRegions = dataProcessRegions;
            _resultValue.dbName = dbName;
            _resultValue.id = id;
            _resultValue.partitionFields = partitionFields;
            _resultValue.paused = paused;
            _resultValue.projectId = projectId;
            _resultValue.schedules = schedules;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
