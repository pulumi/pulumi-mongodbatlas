// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.mongodbatlas.inputs.ClusterAdvancedConfigurationArgs;
import com.pulumi.mongodbatlas.inputs.ClusterBiConnectorConfigArgs;
import com.pulumi.mongodbatlas.inputs.ClusterConnectionStringArgs;
import com.pulumi.mongodbatlas.inputs.ClusterLabelArgs;
import com.pulumi.mongodbatlas.inputs.ClusterPinnedFcvArgs;
import com.pulumi.mongodbatlas.inputs.ClusterReplicationSpecArgs;
import com.pulumi.mongodbatlas.inputs.ClusterSnapshotBackupPolicyArgs;
import com.pulumi.mongodbatlas.inputs.ClusterTagArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterState Empty = new ClusterState();

    /**
     * If reconfiguration is necessary to regain a primary due to a regional outage, submit this field alongside your topology reconfiguration to request a new regional outage resistant topology. Forced reconfigurations during an outage of the majority of electable nodes carry a risk of data loss if replicated writes (even majority committed writes) have not been replicated to the new primary node. MongoDB Atlas docs contain more information. To proceed with an operation which carries that risk, set `accept_data_risks_and_force_replica_set_reconfig` to the current date. Learn more about Reconfiguring a Replica Set during a regional outage [here](https://dochub.mongodb.org/core/regional-outage-reconfigure-replica-set).
     * 
     */
    @Import(name="acceptDataRisksAndForceReplicaSetReconfig")
    private @Nullable Output<String> acceptDataRisksAndForceReplicaSetReconfig;

    /**
     * @return If reconfiguration is necessary to regain a primary due to a regional outage, submit this field alongside your topology reconfiguration to request a new regional outage resistant topology. Forced reconfigurations during an outage of the majority of electable nodes carry a risk of data loss if replicated writes (even majority committed writes) have not been replicated to the new primary node. MongoDB Atlas docs contain more information. To proceed with an operation which carries that risk, set `accept_data_risks_and_force_replica_set_reconfig` to the current date. Learn more about Reconfiguring a Replica Set during a regional outage [here](https://dochub.mongodb.org/core/regional-outage-reconfigure-replica-set).
     * 
     */
    public Optional<Output<String>> acceptDataRisksAndForceReplicaSetReconfig() {
        return Optional.ofNullable(this.acceptDataRisksAndForceReplicaSetReconfig);
    }

    @Import(name="advancedConfiguration")
    private @Nullable Output<ClusterAdvancedConfigurationArgs> advancedConfiguration;

    public Optional<Output<ClusterAdvancedConfigurationArgs>> advancedConfiguration() {
        return Optional.ofNullable(this.advancedConfiguration);
    }

    @Import(name="autoScalingComputeEnabled")
    private @Nullable Output<Boolean> autoScalingComputeEnabled;

    public Optional<Output<Boolean>> autoScalingComputeEnabled() {
        return Optional.ofNullable(this.autoScalingComputeEnabled);
    }

    /**
     * Set to `true` to enable the cluster tier to scale down. This option is only available if `autoScaling.compute.enabled` is `true`.
     * - If this option is enabled, you must specify a value for `providerSettings.autoScaling.compute.minInstanceSize`
     * 
     */
    @Import(name="autoScalingComputeScaleDownEnabled")
    private @Nullable Output<Boolean> autoScalingComputeScaleDownEnabled;

    /**
     * @return Set to `true` to enable the cluster tier to scale down. This option is only available if `autoScaling.compute.enabled` is `true`.
     * - If this option is enabled, you must specify a value for `providerSettings.autoScaling.compute.minInstanceSize`
     * 
     */
    public Optional<Output<Boolean>> autoScalingComputeScaleDownEnabled() {
        return Optional.ofNullable(this.autoScalingComputeScaleDownEnabled);
    }

    @Import(name="autoScalingDiskGbEnabled")
    private @Nullable Output<Boolean> autoScalingDiskGbEnabled;

    public Optional<Output<Boolean>> autoScalingDiskGbEnabled() {
        return Optional.ofNullable(this.autoScalingDiskGbEnabled);
    }

    /**
     * Cloud service provider on which the server for a multi-tenant cluster is provisioned.
     * 
     * This setting is only valid when providerSetting.providerName is TENANT and providerSetting.instanceSizeName is M0.
     * 
     * The possible values are:
     * 
     * - AWS - Amazon AWS
     * - GCP - Google Cloud Platform
     * - AZURE - Microsoft Azure
     * 
     */
    @Import(name="backingProviderName")
    private @Nullable Output<String> backingProviderName;

    /**
     * @return Cloud service provider on which the server for a multi-tenant cluster is provisioned.
     * 
     * This setting is only valid when providerSetting.providerName is TENANT and providerSetting.instanceSizeName is M0.
     * 
     * The possible values are:
     * 
     * - AWS - Amazon AWS
     * - GCP - Google Cloud Platform
     * - AZURE - Microsoft Azure
     * 
     */
    public Optional<Output<String>> backingProviderName() {
        return Optional.ofNullable(this.backingProviderName);
    }

    /**
     * Legacy Backup - Set to true to enable Atlas legacy backups for the cluster.
     * **Important** - MongoDB deprecated the Legacy Backup feature. Clusters that use Legacy Backup can continue to use it. MongoDB recommends using [Cloud Backups](https://docs.atlas.mongodb.com/backup/cloud-backup/overview/).
     * * New Atlas clusters of any type do not support this parameter. These clusters must use Cloud Backup, `cloud_backup`, to enable Cloud Backup.  If you create a new Atlas cluster and set `backup_enabled` to true, the Provider will respond with an error.  This change doesn’t affect existing clusters that use legacy backups.
     * * Setting this value to false to disable legacy backups for the cluster will let Atlas delete any stored snapshots. In order to preserve the legacy backups snapshots, disable the legacy backups and enable the cloud backups in the single **pulumi up** action.
     * * The default value is false.  M10 and above only.
     * 
     */
    @Import(name="backupEnabled")
    private @Nullable Output<Boolean> backupEnabled;

    /**
     * @return Legacy Backup - Set to true to enable Atlas legacy backups for the cluster.
     * **Important** - MongoDB deprecated the Legacy Backup feature. Clusters that use Legacy Backup can continue to use it. MongoDB recommends using [Cloud Backups](https://docs.atlas.mongodb.com/backup/cloud-backup/overview/).
     * * New Atlas clusters of any type do not support this parameter. These clusters must use Cloud Backup, `cloud_backup`, to enable Cloud Backup.  If you create a new Atlas cluster and set `backup_enabled` to true, the Provider will respond with an error.  This change doesn’t affect existing clusters that use legacy backups.
     * * Setting this value to false to disable legacy backups for the cluster will let Atlas delete any stored snapshots. In order to preserve the legacy backups snapshots, disable the legacy backups and enable the cloud backups in the single **pulumi up** action.
     * * The default value is false.  M10 and above only.
     * 
     */
    public Optional<Output<Boolean>> backupEnabled() {
        return Optional.ofNullable(this.backupEnabled);
    }

    /**
     * Specifies BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
     * 
     */
    @Import(name="biConnectorConfig")
    private @Nullable Output<ClusterBiConnectorConfigArgs> biConnectorConfig;

    /**
     * @return Specifies BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
     * 
     */
    public Optional<Output<ClusterBiConnectorConfigArgs>> biConnectorConfig() {
        return Optional.ofNullable(this.biConnectorConfig);
    }

    @Import(name="cloudBackup")
    private @Nullable Output<Boolean> cloudBackup;

    public Optional<Output<Boolean>> cloudBackup() {
        return Optional.ofNullable(this.cloudBackup);
    }

    /**
     * The cluster ID.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return The cluster ID.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * Specifies the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
     * 
     * &gt; **WHEN SHOULD YOU USE CLUSTERTYPE?**
     * When you set replication_specs, when you are deploying Global Clusters or when you are deploying non-Global replica sets and sharded clusters.
     * 
     * Accepted values include:
     * - `REPLICASET` Replica set
     * - `SHARDED` Sharded cluster
     * - `GEOSHARDED` Global Cluster
     * 
     */
    @Import(name="clusterType")
    private @Nullable Output<String> clusterType;

    /**
     * @return Specifies the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
     * 
     * &gt; **WHEN SHOULD YOU USE CLUSTERTYPE?**
     * When you set replication_specs, when you are deploying Global Clusters or when you are deploying non-Global replica sets and sharded clusters.
     * 
     * Accepted values include:
     * - `REPLICASET` Replica set
     * - `SHARDED` Sharded cluster
     * - `GEOSHARDED` Global Cluster
     * 
     */
    public Optional<Output<String>> clusterType() {
        return Optional.ofNullable(this.clusterType);
    }

    /**
     * Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
     * 
     */
    @Import(name="connectionStrings")
    private @Nullable Output<List<ClusterConnectionStringArgs>> connectionStrings;

    /**
     * @return Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
     * 
     */
    public Optional<Output<List<ClusterConnectionStringArgs>>> connectionStrings() {
        return Optional.ofNullable(this.connectionStrings);
    }

    /**
     * The Container ID is the id of the container created when the first cluster in the region (AWS/Azure) or project (GCP) was created.
     * 
     */
    @Import(name="containerId")
    private @Nullable Output<String> containerId;

    /**
     * @return The Container ID is the id of the container created when the first cluster in the region (AWS/Azure) or project (GCP) was created.
     * 
     */
    public Optional<Output<String>> containerId() {
        return Optional.ofNullable(this.containerId);
    }

    /**
     * Capacity, in gigabytes, of the host’s root volume. Increase this number to add capacity, up to a maximum possible value of 4096 (i.e., 4 TB). This value must be a positive integer.
     * * The minimum disk size for dedicated clusters is 10GB for AWS and GCP. If you specify diskSizeGB with a lower disk size, Atlas defaults to the minimum disk size value.
     * * Note: The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require additional storage space beyond this limitation, consider upgrading your cluster to a higher tier.
     * * Cannot be used with clusters with local NVMe SSDs
     * * Cannot be used with Azure clusters
     * 
     */
    @Import(name="diskSizeGb")
    private @Nullable Output<Double> diskSizeGb;

    /**
     * @return Capacity, in gigabytes, of the host’s root volume. Increase this number to add capacity, up to a maximum possible value of 4096 (i.e., 4 TB). This value must be a positive integer.
     * * The minimum disk size for dedicated clusters is 10GB for AWS and GCP. If you specify diskSizeGB with a lower disk size, Atlas defaults to the minimum disk size value.
     * * Note: The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require additional storage space beyond this limitation, consider upgrading your cluster to a higher tier.
     * * Cannot be used with clusters with local NVMe SSDs
     * * Cannot be used with Azure clusters
     * 
     */
    public Optional<Output<Double>> diskSizeGb() {
        return Optional.ofNullable(this.diskSizeGb);
    }

    /**
     * Possible values are AWS, GCP, AZURE or NONE.  Only needed if you desire to manage the keys, see [Encryption at Rest using Customer Key Management](https://docs.atlas.mongodb.com/security-aws-kms/) for complete documentation.  You must configure encryption at rest for the Atlas project before enabling it on any cluster in the project. For complete documentation on configuring Encryption at Rest, see Encryption at Rest using Customer Key Management. Requires M10 or greater. and for legacy backups, backup_enabled, to be false or omitted. **Note: Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default**.
     * 
     */
    @Import(name="encryptionAtRestProvider")
    private @Nullable Output<String> encryptionAtRestProvider;

    /**
     * @return Possible values are AWS, GCP, AZURE or NONE.  Only needed if you desire to manage the keys, see [Encryption at Rest using Customer Key Management](https://docs.atlas.mongodb.com/security-aws-kms/) for complete documentation.  You must configure encryption at rest for the Atlas project before enabling it on any cluster in the project. For complete documentation on configuring Encryption at Rest, see Encryption at Rest using Customer Key Management. Requires M10 or greater. and for legacy backups, backup_enabled, to be false or omitted. **Note: Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default**.
     * 
     */
    public Optional<Output<String>> encryptionAtRestProvider() {
        return Optional.ofNullable(this.encryptionAtRestProvider);
    }

    /**
     * Set that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster. See below. **DEPRECATED** Use `tags` instead.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<List<ClusterLabelArgs>> labels;

    /**
     * @return Set that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster. See below. **DEPRECATED** Use `tags` instead.
     * 
     */
    public Optional<Output<List<ClusterLabelArgs>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Version of the cluster to deploy. Atlas supports all the MongoDB versions that have **not** reached [End of Live](https://www.mongodb.com/legal/support-policy/lifecycles) for M10+ clusters. If omitted, Atlas deploys the cluster with the default version. For more details, see [documentation](https://www.mongodb.com/docs/atlas/reference/faq/database/#which-versions-of-mongodb-do-service-clusters-use-). Atlas always deploys the cluster with the latest stable release of the specified version. See [Release Notes](https://www.mongodb.com/docs/upcoming/release-notes/) for latest Current Stable Release.
     * 
     */
    @Import(name="mongoDbMajorVersion")
    private @Nullable Output<String> mongoDbMajorVersion;

    /**
     * @return Version of the cluster to deploy. Atlas supports all the MongoDB versions that have **not** reached [End of Live](https://www.mongodb.com/legal/support-policy/lifecycles) for M10+ clusters. If omitted, Atlas deploys the cluster with the default version. For more details, see [documentation](https://www.mongodb.com/docs/atlas/reference/faq/database/#which-versions-of-mongodb-do-service-clusters-use-). Atlas always deploys the cluster with the latest stable release of the specified version. See [Release Notes](https://www.mongodb.com/docs/upcoming/release-notes/) for latest Current Stable Release.
     * 
     */
    public Optional<Output<String>> mongoDbMajorVersion() {
        return Optional.ofNullable(this.mongoDbMajorVersion);
    }

    /**
     * Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
     * 
     */
    @Import(name="mongoDbVersion")
    private @Nullable Output<String> mongoDbVersion;

    /**
     * @return Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
     * 
     */
    public Optional<Output<String>> mongoDbVersion() {
        return Optional.ofNullable(this.mongoDbVersion);
    }

    /**
     * Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
     * 
     */
    @Import(name="mongoUri")
    private @Nullable Output<String> mongoUri;

    /**
     * @return Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
     * 
     */
    public Optional<Output<String>> mongoUri() {
        return Optional.ofNullable(this.mongoUri);
    }

    /**
     * Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
     * 
     */
    @Import(name="mongoUriUpdated")
    private @Nullable Output<String> mongoUriUpdated;

    /**
     * @return Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
     * 
     */
    public Optional<Output<String>> mongoUriUpdated() {
        return Optional.ofNullable(this.mongoUriUpdated);
    }

    /**
     * connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
     * 
     */
    @Import(name="mongoUriWithOptions")
    private @Nullable Output<String> mongoUriWithOptions;

    /**
     * @return connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
     * 
     */
    public Optional<Output<String>> mongoUriWithOptions() {
        return Optional.ofNullable(this.mongoUriWithOptions);
    }

    /**
     * Name of the cluster as it appears in Atlas. Once the cluster is created, its name cannot be changed. **WARNING** Changing the name will result in destruction of the existing cluster and the creation of a new cluster.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the cluster as it appears in Atlas. Once the cluster is created, its name cannot be changed. **WARNING** Changing the name will result in destruction of the existing cluster and the creation of a new cluster.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
     * 
     */
    @Import(name="numShards")
    private @Nullable Output<Integer> numShards;

    /**
     * @return Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
     * 
     */
    public Optional<Output<Integer>> numShards() {
        return Optional.ofNullable(this.numShards);
    }

    @Import(name="paused")
    private @Nullable Output<Boolean> paused;

    public Optional<Output<Boolean>> paused() {
        return Optional.ofNullable(this.paused);
    }

    /**
     * Pins the Feature Compatibility Version (FCV) to the current MongoDB version with a provided expiration date. To unpin the FCV the `pinned_fcv` attribute must be removed. This operation can take several minutes as the request processes through the MongoDB data plane. Once FCV is unpinned it will not be possible to downgrade the `mongo_db_major_version`. It is advised that updates to `pinned_fcv` are done isolated from other cluster changes. If a plan contains multiple changes, the FCV change will be applied first. If FCV is unpinned past the expiration date the `pinned_fcv` attribute must be removed. The following [knowledge hub article](https://kb.corp.mongodb.com/article/000021785/) and [FCV documentation](https://www.mongodb.com/docs/atlas/tutorial/major-version-change/#manage-feature-compatibility--fcv--during-upgrades) can be referenced for more details. See below.
     * 
     */
    @Import(name="pinnedFcv")
    private @Nullable Output<ClusterPinnedFcvArgs> pinnedFcv;

    /**
     * @return Pins the Feature Compatibility Version (FCV) to the current MongoDB version with a provided expiration date. To unpin the FCV the `pinned_fcv` attribute must be removed. This operation can take several minutes as the request processes through the MongoDB data plane. Once FCV is unpinned it will not be possible to downgrade the `mongo_db_major_version`. It is advised that updates to `pinned_fcv` are done isolated from other cluster changes. If a plan contains multiple changes, the FCV change will be applied first. If FCV is unpinned past the expiration date the `pinned_fcv` attribute must be removed. The following [knowledge hub article](https://kb.corp.mongodb.com/article/000021785/) and [FCV documentation](https://www.mongodb.com/docs/atlas/tutorial/major-version-change/#manage-feature-compatibility--fcv--during-upgrades) can be referenced for more details. See below.
     * 
     */
    public Optional<Output<ClusterPinnedFcvArgs>> pinnedFcv() {
        return Optional.ofNullable(this.pinnedFcv);
    }

    /**
     * Flag that indicates if the cluster uses Continuous Cloud Backup. If set to true, cloud_backup must also be set to true.
     * 
     */
    @Import(name="pitEnabled")
    private @Nullable Output<Boolean> pitEnabled;

    /**
     * @return Flag that indicates if the cluster uses Continuous Cloud Backup. If set to true, cloud_backup must also be set to true.
     * 
     */
    public Optional<Output<Boolean>> pitEnabled() {
        return Optional.ofNullable(this.pitEnabled);
    }

    /**
     * The unique ID for the project to create the database user.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The unique ID for the project to create the database user.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * Maximum instance size to which your cluster can automatically scale (e.g., M40). Required if `autoScaling.compute.enabled` is `true`.
     * 
     */
    @Import(name="providerAutoScalingComputeMaxInstanceSize")
    private @Nullable Output<String> providerAutoScalingComputeMaxInstanceSize;

    /**
     * @return Maximum instance size to which your cluster can automatically scale (e.g., M40). Required if `autoScaling.compute.enabled` is `true`.
     * 
     */
    public Optional<Output<String>> providerAutoScalingComputeMaxInstanceSize() {
        return Optional.ofNullable(this.providerAutoScalingComputeMaxInstanceSize);
    }

    /**
     * Minimum instance size to which your cluster can automatically scale (e.g., M10). Required if `autoScaling.compute.scaleDownEnabled` is `true`.
     * 
     */
    @Import(name="providerAutoScalingComputeMinInstanceSize")
    private @Nullable Output<String> providerAutoScalingComputeMinInstanceSize;

    /**
     * @return Minimum instance size to which your cluster can automatically scale (e.g., M10). Required if `autoScaling.compute.scaleDownEnabled` is `true`.
     * 
     */
    public Optional<Output<String>> providerAutoScalingComputeMinInstanceSize() {
        return Optional.ofNullable(this.providerAutoScalingComputeMinInstanceSize);
    }

    /**
     * The maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected `provider_instance_size_name` and `disk_size_gb`.  This setting requires that `provider_instance_size_name` to be M30 or greater and cannot be used with clusters with local NVMe SSDs.  The default value for `provider_disk_iops` is the same as the cluster tier&#39;s Standard IOPS value, as viewable in the Atlas console.  It is used in cases where a higher number of IOPS is needed and possible.  If a value is submitted that is lower or equal to the default IOPS value for the cluster tier Atlas ignores the requested value and uses the default.  More details available under the providerSettings.diskIOPS parameter: [MongoDB API Clusters](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/)
     * * You do not need to configure IOPS for a STANDARD disk configuration but only for a PROVISIONED configuration.
     * 
     */
    @Import(name="providerDiskIops")
    private @Nullable Output<Integer> providerDiskIops;

    /**
     * @return The maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected `provider_instance_size_name` and `disk_size_gb`.  This setting requires that `provider_instance_size_name` to be M30 or greater and cannot be used with clusters with local NVMe SSDs.  The default value for `provider_disk_iops` is the same as the cluster tier&#39;s Standard IOPS value, as viewable in the Atlas console.  It is used in cases where a higher number of IOPS is needed and possible.  If a value is submitted that is lower or equal to the default IOPS value for the cluster tier Atlas ignores the requested value and uses the default.  More details available under the providerSettings.diskIOPS parameter: [MongoDB API Clusters](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/)
     * * You do not need to configure IOPS for a STANDARD disk configuration but only for a PROVISIONED configuration.
     * 
     */
    public Optional<Output<Integer>> providerDiskIops() {
        return Optional.ofNullable(this.providerDiskIops);
    }

    /**
     * Azure disk type of the server’s root volume. If omitted, Atlas uses the default disk type for the selected providerSettings.instanceSizeName.  Example disk types and associated storage sizes: P4 - 32GB, P6 - 64GB, P10 - 128GB, P15 - 256GB, P20 - 512GB, P30 - 1024GB, P40 - 2048GB, P50 - 4095GB.  More information and the most update to date disk types/storage sizes can be located at https://docs.atlas.mongodb.com/reference/api/clusters-create-one/.
     * 
     */
    @Import(name="providerDiskTypeName")
    private @Nullable Output<String> providerDiskTypeName;

    /**
     * @return Azure disk type of the server’s root volume. If omitted, Atlas uses the default disk type for the selected providerSettings.instanceSizeName.  Example disk types and associated storage sizes: P4 - 32GB, P6 - 64GB, P10 - 128GB, P15 - 256GB, P20 - 512GB, P30 - 1024GB, P40 - 2048GB, P50 - 4095GB.  More information and the most update to date disk types/storage sizes can be located at https://docs.atlas.mongodb.com/reference/api/clusters-create-one/.
     * 
     */
    public Optional<Output<String>> providerDiskTypeName() {
        return Optional.ofNullable(this.providerDiskTypeName);
    }

    /**
     * **(Deprecated) The Flag is always true.** Flag that indicates whether the Amazon EBS encryption feature encrypts the host&#39;s root volume for both data at rest within the volume and for data moving between the volume and the cluster. Note: This setting is always enabled for clusters with local NVMe SSDs. **Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default.**.
     * 
     * @deprecated
     * All EBS volumes are encrypted by default, the option to disable encryption has been removed
     * 
     */
    @Deprecated /* All EBS volumes are encrypted by default, the option to disable encryption has been removed */
    @Import(name="providerEncryptEbsVolume")
    private @Nullable Output<Boolean> providerEncryptEbsVolume;

    /**
     * @return **(Deprecated) The Flag is always true.** Flag that indicates whether the Amazon EBS encryption feature encrypts the host&#39;s root volume for both data at rest within the volume and for data moving between the volume and the cluster. Note: This setting is always enabled for clusters with local NVMe SSDs. **Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default.**.
     * 
     * @deprecated
     * All EBS volumes are encrypted by default, the option to disable encryption has been removed
     * 
     */
    @Deprecated /* All EBS volumes are encrypted by default, the option to disable encryption has been removed */
    public Optional<Output<Boolean>> providerEncryptEbsVolume() {
        return Optional.ofNullable(this.providerEncryptEbsVolume);
    }

    @Import(name="providerEncryptEbsVolumeFlag")
    private @Nullable Output<Boolean> providerEncryptEbsVolumeFlag;

    public Optional<Output<Boolean>> providerEncryptEbsVolumeFlag() {
        return Optional.ofNullable(this.providerEncryptEbsVolumeFlag);
    }

    /**
     * Atlas provides different instance sizes, each with a default storage capacity and RAM size. The instance size you select is used for all the data-bearing servers in your cluster. See [Create a Cluster](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/) `providerSettings.instanceSizeName` for valid values and default resources.
     * 
     */
    @Import(name="providerInstanceSizeName")
    private @Nullable Output<String> providerInstanceSizeName;

    /**
     * @return Atlas provides different instance sizes, each with a default storage capacity and RAM size. The instance size you select is used for all the data-bearing servers in your cluster. See [Create a Cluster](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/) `providerSettings.instanceSizeName` for valid values and default resources.
     * 
     */
    public Optional<Output<String>> providerInstanceSizeName() {
        return Optional.ofNullable(this.providerInstanceSizeName);
    }

    /**
     * Cloud service provider on which the servers are provisioned.
     * 
     * The possible values are:
     * 
     * - `AWS` - Amazon AWS
     * - `GCP` - Google Cloud Platform
     * - `AZURE` - Microsoft Azure
     * - `TENANT` - A multi-tenant deployment on one of the supported cloud service providers. Only valid when providerSettings.instanceSizeName is M0.
     * 
     */
    @Import(name="providerName")
    private @Nullable Output<String> providerName;

    /**
     * @return Cloud service provider on which the servers are provisioned.
     * 
     * The possible values are:
     * 
     * - `AWS` - Amazon AWS
     * - `GCP` - Google Cloud Platform
     * - `AZURE` - Microsoft Azure
     * - `TENANT` - A multi-tenant deployment on one of the supported cloud service providers. Only valid when providerSettings.instanceSizeName is M0.
     * 
     */
    public Optional<Output<String>> providerName() {
        return Optional.ofNullable(this.providerName);
    }

    /**
     * Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     * Do not specify this field when creating a multi-region cluster using the replicationSpec document or a Global Cluster with the replicationSpecs array.
     * 
     */
    @Import(name="providerRegionName")
    private @Nullable Output<String> providerRegionName;

    /**
     * @return Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     * Do not specify this field when creating a multi-region cluster using the replicationSpec document or a Global Cluster with the replicationSpecs array.
     * 
     */
    public Optional<Output<String>> providerRegionName() {
        return Optional.ofNullable(this.providerRegionName);
    }

    /**
     * The type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.  `PROVISIONED` is ONLY required if setting IOPS higher than the default instance IOPS.
     * &gt; **NOTE:** `STANDARD` is not available for NVME clusters.
     * 
     */
    @Import(name="providerVolumeType")
    private @Nullable Output<String> providerVolumeType;

    /**
     * @return The type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.  `PROVISIONED` is ONLY required if setting IOPS higher than the default instance IOPS.
     * &gt; **NOTE:** `STANDARD` is not available for NVME clusters.
     * 
     */
    public Optional<Output<String>> providerVolumeType() {
        return Optional.ofNullable(this.providerVolumeType);
    }

    /**
     * Flag that enables or disables log redaction, see the [manual](https://www.mongodb.com/docs/manual/administration/monitoring/#log-redaction) for more info. Use this in conjunction with Encryption at Rest and TLS/SSL (Transport Encryption) to assist compliance with regulatory requirements. **Note**: Changing this setting on a cluster will trigger a rolling restart as soon as the cluster is updated. The log redaction field is updated via an Atlas API call after cluster creation. Consequently, there may be a brief period during resource creation when log redaction is not yet enabled. To ensure complete log redaction from the outset, use `mongodbatlas.AdvancedCluster`.
     * 
     */
    @Import(name="redactClientLogData")
    private @Nullable Output<Boolean> redactClientLogData;

    /**
     * @return Flag that enables or disables log redaction, see the [manual](https://www.mongodb.com/docs/manual/administration/monitoring/#log-redaction) for more info. Use this in conjunction with Encryption at Rest and TLS/SSL (Transport Encryption) to assist compliance with regulatory requirements. **Note**: Changing this setting on a cluster will trigger a rolling restart as soon as the cluster is updated. The log redaction field is updated via an Atlas API call after cluster creation. Consequently, there may be a brief period during resource creation when log redaction is not yet enabled. To ensure complete log redaction from the outset, use `mongodbatlas.AdvancedCluster`.
     * 
     */
    public Optional<Output<Boolean>> redactClientLogData() {
        return Optional.ofNullable(this.redactClientLogData);
    }

    /**
     * Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
     * 
     */
    @Import(name="replicationFactor")
    private @Nullable Output<Integer> replicationFactor;

    /**
     * @return Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
     * 
     */
    public Optional<Output<Integer>> replicationFactor() {
        return Optional.ofNullable(this.replicationFactor);
    }

    /**
     * Configuration for cluster regions.  See Replication Spec below for more details.
     * 
     */
    @Import(name="replicationSpecs")
    private @Nullable Output<List<ClusterReplicationSpecArgs>> replicationSpecs;

    /**
     * @return Configuration for cluster regions.  See Replication Spec below for more details.
     * 
     */
    public Optional<Output<List<ClusterReplicationSpecArgs>>> replicationSpecs() {
        return Optional.ofNullable(this.replicationSpecs);
    }

    /**
     * Set to true to retain backup snapshots for the deleted cluster. M10 and above only.
     * 
     */
    @Import(name="retainBackupsEnabled")
    private @Nullable Output<Boolean> retainBackupsEnabled;

    /**
     * @return Set to true to retain backup snapshots for the deleted cluster. M10 and above only.
     * 
     */
    public Optional<Output<Boolean>> retainBackupsEnabled() {
        return Optional.ofNullable(this.retainBackupsEnabled);
    }

    /**
     * current snapshot schedule and retention settings for the cluster.
     * 
     */
    @Import(name="snapshotBackupPolicies")
    private @Nullable Output<List<ClusterSnapshotBackupPolicyArgs>> snapshotBackupPolicies;

    /**
     * @return current snapshot schedule and retention settings for the cluster.
     * 
     */
    public Optional<Output<List<ClusterSnapshotBackupPolicyArgs>>> snapshotBackupPolicies() {
        return Optional.ofNullable(this.snapshotBackupPolicies);
    }

    /**
     * Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
     * 
     */
    @Import(name="srvAddress")
    private @Nullable Output<String> srvAddress;

    /**
     * @return Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
     * 
     */
    public Optional<Output<String>> srvAddress() {
        return Optional.ofNullable(this.srvAddress);
    }

    /**
     * Current state of the cluster. The possible states are:
     * - IDLE
     * - CREATING
     * - UPDATING
     * - DELETING
     * - DELETED
     * - REPAIRING
     * 
     */
    @Import(name="stateName")
    private @Nullable Output<String> stateName;

    /**
     * @return Current state of the cluster. The possible states are:
     * - IDLE
     * - CREATING
     * - UPDATING
     * - DELETING
     * - DELETED
     * - REPAIRING
     * 
     */
    public Optional<Output<String>> stateName() {
        return Optional.ofNullable(this.stateName);
    }

    /**
     * Set that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster. See below.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<ClusterTagArgs>> tags;

    /**
     * @return Set that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster. See below.
     * 
     */
    public Optional<Output<List<ClusterTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won&#39;t delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
     * 
     */
    @Import(name="terminationProtectionEnabled")
    private @Nullable Output<Boolean> terminationProtectionEnabled;

    /**
     * @return Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won&#39;t delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
     * 
     */
    public Optional<Output<Boolean>> terminationProtectionEnabled() {
        return Optional.ofNullable(this.terminationProtectionEnabled);
    }

    /**
     * Release cadence that Atlas uses for this cluster. This parameter defaults to `LTS`. If you set this field to `CONTINUOUS`, you must omit the `mongo_db_major_version` field. Atlas accepts:
     * - `CONTINUOUS`:  Atlas creates your cluster using the most recent MongoDB release. Atlas automatically updates your cluster to the latest major and rapid MongoDB releases as they become available.
     * - `LTS`: Atlas creates your cluster using the latest patch release of the MongoDB version that you specify in the mongoDBMajorVersion field. Atlas automatically updates your cluster to subsequent patch releases of this MongoDB version. Atlas doesn&#39;t update your cluster to newer rapid or major MongoDB releases as they become available.
     * 
     */
    @Import(name="versionReleaseSystem")
    private @Nullable Output<String> versionReleaseSystem;

    /**
     * @return Release cadence that Atlas uses for this cluster. This parameter defaults to `LTS`. If you set this field to `CONTINUOUS`, you must omit the `mongo_db_major_version` field. Atlas accepts:
     * - `CONTINUOUS`:  Atlas creates your cluster using the most recent MongoDB release. Atlas automatically updates your cluster to the latest major and rapid MongoDB releases as they become available.
     * - `LTS`: Atlas creates your cluster using the latest patch release of the MongoDB version that you specify in the mongoDBMajorVersion field. Atlas automatically updates your cluster to subsequent patch releases of this MongoDB version. Atlas doesn&#39;t update your cluster to newer rapid or major MongoDB releases as they become available.
     * 
     */
    public Optional<Output<String>> versionReleaseSystem() {
        return Optional.ofNullable(this.versionReleaseSystem);
    }

    private ClusterState() {}

    private ClusterState(ClusterState $) {
        this.acceptDataRisksAndForceReplicaSetReconfig = $.acceptDataRisksAndForceReplicaSetReconfig;
        this.advancedConfiguration = $.advancedConfiguration;
        this.autoScalingComputeEnabled = $.autoScalingComputeEnabled;
        this.autoScalingComputeScaleDownEnabled = $.autoScalingComputeScaleDownEnabled;
        this.autoScalingDiskGbEnabled = $.autoScalingDiskGbEnabled;
        this.backingProviderName = $.backingProviderName;
        this.backupEnabled = $.backupEnabled;
        this.biConnectorConfig = $.biConnectorConfig;
        this.cloudBackup = $.cloudBackup;
        this.clusterId = $.clusterId;
        this.clusterType = $.clusterType;
        this.connectionStrings = $.connectionStrings;
        this.containerId = $.containerId;
        this.diskSizeGb = $.diskSizeGb;
        this.encryptionAtRestProvider = $.encryptionAtRestProvider;
        this.labels = $.labels;
        this.mongoDbMajorVersion = $.mongoDbMajorVersion;
        this.mongoDbVersion = $.mongoDbVersion;
        this.mongoUri = $.mongoUri;
        this.mongoUriUpdated = $.mongoUriUpdated;
        this.mongoUriWithOptions = $.mongoUriWithOptions;
        this.name = $.name;
        this.numShards = $.numShards;
        this.paused = $.paused;
        this.pinnedFcv = $.pinnedFcv;
        this.pitEnabled = $.pitEnabled;
        this.projectId = $.projectId;
        this.providerAutoScalingComputeMaxInstanceSize = $.providerAutoScalingComputeMaxInstanceSize;
        this.providerAutoScalingComputeMinInstanceSize = $.providerAutoScalingComputeMinInstanceSize;
        this.providerDiskIops = $.providerDiskIops;
        this.providerDiskTypeName = $.providerDiskTypeName;
        this.providerEncryptEbsVolume = $.providerEncryptEbsVolume;
        this.providerEncryptEbsVolumeFlag = $.providerEncryptEbsVolumeFlag;
        this.providerInstanceSizeName = $.providerInstanceSizeName;
        this.providerName = $.providerName;
        this.providerRegionName = $.providerRegionName;
        this.providerVolumeType = $.providerVolumeType;
        this.redactClientLogData = $.redactClientLogData;
        this.replicationFactor = $.replicationFactor;
        this.replicationSpecs = $.replicationSpecs;
        this.retainBackupsEnabled = $.retainBackupsEnabled;
        this.snapshotBackupPolicies = $.snapshotBackupPolicies;
        this.srvAddress = $.srvAddress;
        this.stateName = $.stateName;
        this.tags = $.tags;
        this.terminationProtectionEnabled = $.terminationProtectionEnabled;
        this.versionReleaseSystem = $.versionReleaseSystem;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterState $;

        public Builder() {
            $ = new ClusterState();
        }

        public Builder(ClusterState defaults) {
            $ = new ClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceptDataRisksAndForceReplicaSetReconfig If reconfiguration is necessary to regain a primary due to a regional outage, submit this field alongside your topology reconfiguration to request a new regional outage resistant topology. Forced reconfigurations during an outage of the majority of electable nodes carry a risk of data loss if replicated writes (even majority committed writes) have not been replicated to the new primary node. MongoDB Atlas docs contain more information. To proceed with an operation which carries that risk, set `accept_data_risks_and_force_replica_set_reconfig` to the current date. Learn more about Reconfiguring a Replica Set during a regional outage [here](https://dochub.mongodb.org/core/regional-outage-reconfigure-replica-set).
         * 
         * @return builder
         * 
         */
        public Builder acceptDataRisksAndForceReplicaSetReconfig(@Nullable Output<String> acceptDataRisksAndForceReplicaSetReconfig) {
            $.acceptDataRisksAndForceReplicaSetReconfig = acceptDataRisksAndForceReplicaSetReconfig;
            return this;
        }

        /**
         * @param acceptDataRisksAndForceReplicaSetReconfig If reconfiguration is necessary to regain a primary due to a regional outage, submit this field alongside your topology reconfiguration to request a new regional outage resistant topology. Forced reconfigurations during an outage of the majority of electable nodes carry a risk of data loss if replicated writes (even majority committed writes) have not been replicated to the new primary node. MongoDB Atlas docs contain more information. To proceed with an operation which carries that risk, set `accept_data_risks_and_force_replica_set_reconfig` to the current date. Learn more about Reconfiguring a Replica Set during a regional outage [here](https://dochub.mongodb.org/core/regional-outage-reconfigure-replica-set).
         * 
         * @return builder
         * 
         */
        public Builder acceptDataRisksAndForceReplicaSetReconfig(String acceptDataRisksAndForceReplicaSetReconfig) {
            return acceptDataRisksAndForceReplicaSetReconfig(Output.of(acceptDataRisksAndForceReplicaSetReconfig));
        }

        public Builder advancedConfiguration(@Nullable Output<ClusterAdvancedConfigurationArgs> advancedConfiguration) {
            $.advancedConfiguration = advancedConfiguration;
            return this;
        }

        public Builder advancedConfiguration(ClusterAdvancedConfigurationArgs advancedConfiguration) {
            return advancedConfiguration(Output.of(advancedConfiguration));
        }

        public Builder autoScalingComputeEnabled(@Nullable Output<Boolean> autoScalingComputeEnabled) {
            $.autoScalingComputeEnabled = autoScalingComputeEnabled;
            return this;
        }

        public Builder autoScalingComputeEnabled(Boolean autoScalingComputeEnabled) {
            return autoScalingComputeEnabled(Output.of(autoScalingComputeEnabled));
        }

        /**
         * @param autoScalingComputeScaleDownEnabled Set to `true` to enable the cluster tier to scale down. This option is only available if `autoScaling.compute.enabled` is `true`.
         * - If this option is enabled, you must specify a value for `providerSettings.autoScaling.compute.minInstanceSize`
         * 
         * @return builder
         * 
         */
        public Builder autoScalingComputeScaleDownEnabled(@Nullable Output<Boolean> autoScalingComputeScaleDownEnabled) {
            $.autoScalingComputeScaleDownEnabled = autoScalingComputeScaleDownEnabled;
            return this;
        }

        /**
         * @param autoScalingComputeScaleDownEnabled Set to `true` to enable the cluster tier to scale down. This option is only available if `autoScaling.compute.enabled` is `true`.
         * - If this option is enabled, you must specify a value for `providerSettings.autoScaling.compute.minInstanceSize`
         * 
         * @return builder
         * 
         */
        public Builder autoScalingComputeScaleDownEnabled(Boolean autoScalingComputeScaleDownEnabled) {
            return autoScalingComputeScaleDownEnabled(Output.of(autoScalingComputeScaleDownEnabled));
        }

        public Builder autoScalingDiskGbEnabled(@Nullable Output<Boolean> autoScalingDiskGbEnabled) {
            $.autoScalingDiskGbEnabled = autoScalingDiskGbEnabled;
            return this;
        }

        public Builder autoScalingDiskGbEnabled(Boolean autoScalingDiskGbEnabled) {
            return autoScalingDiskGbEnabled(Output.of(autoScalingDiskGbEnabled));
        }

        /**
         * @param backingProviderName Cloud service provider on which the server for a multi-tenant cluster is provisioned.
         * 
         * This setting is only valid when providerSetting.providerName is TENANT and providerSetting.instanceSizeName is M0.
         * 
         * The possible values are:
         * 
         * - AWS - Amazon AWS
         * - GCP - Google Cloud Platform
         * - AZURE - Microsoft Azure
         * 
         * @return builder
         * 
         */
        public Builder backingProviderName(@Nullable Output<String> backingProviderName) {
            $.backingProviderName = backingProviderName;
            return this;
        }

        /**
         * @param backingProviderName Cloud service provider on which the server for a multi-tenant cluster is provisioned.
         * 
         * This setting is only valid when providerSetting.providerName is TENANT and providerSetting.instanceSizeName is M0.
         * 
         * The possible values are:
         * 
         * - AWS - Amazon AWS
         * - GCP - Google Cloud Platform
         * - AZURE - Microsoft Azure
         * 
         * @return builder
         * 
         */
        public Builder backingProviderName(String backingProviderName) {
            return backingProviderName(Output.of(backingProviderName));
        }

        /**
         * @param backupEnabled Legacy Backup - Set to true to enable Atlas legacy backups for the cluster.
         * **Important** - MongoDB deprecated the Legacy Backup feature. Clusters that use Legacy Backup can continue to use it. MongoDB recommends using [Cloud Backups](https://docs.atlas.mongodb.com/backup/cloud-backup/overview/).
         * * New Atlas clusters of any type do not support this parameter. These clusters must use Cloud Backup, `cloud_backup`, to enable Cloud Backup.  If you create a new Atlas cluster and set `backup_enabled` to true, the Provider will respond with an error.  This change doesn’t affect existing clusters that use legacy backups.
         * * Setting this value to false to disable legacy backups for the cluster will let Atlas delete any stored snapshots. In order to preserve the legacy backups snapshots, disable the legacy backups and enable the cloud backups in the single **pulumi up** action.
         * * The default value is false.  M10 and above only.
         * 
         * @return builder
         * 
         */
        public Builder backupEnabled(@Nullable Output<Boolean> backupEnabled) {
            $.backupEnabled = backupEnabled;
            return this;
        }

        /**
         * @param backupEnabled Legacy Backup - Set to true to enable Atlas legacy backups for the cluster.
         * **Important** - MongoDB deprecated the Legacy Backup feature. Clusters that use Legacy Backup can continue to use it. MongoDB recommends using [Cloud Backups](https://docs.atlas.mongodb.com/backup/cloud-backup/overview/).
         * * New Atlas clusters of any type do not support this parameter. These clusters must use Cloud Backup, `cloud_backup`, to enable Cloud Backup.  If you create a new Atlas cluster and set `backup_enabled` to true, the Provider will respond with an error.  This change doesn’t affect existing clusters that use legacy backups.
         * * Setting this value to false to disable legacy backups for the cluster will let Atlas delete any stored snapshots. In order to preserve the legacy backups snapshots, disable the legacy backups and enable the cloud backups in the single **pulumi up** action.
         * * The default value is false.  M10 and above only.
         * 
         * @return builder
         * 
         */
        public Builder backupEnabled(Boolean backupEnabled) {
            return backupEnabled(Output.of(backupEnabled));
        }

        /**
         * @param biConnectorConfig Specifies BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
         * 
         * @return builder
         * 
         */
        public Builder biConnectorConfig(@Nullable Output<ClusterBiConnectorConfigArgs> biConnectorConfig) {
            $.biConnectorConfig = biConnectorConfig;
            return this;
        }

        /**
         * @param biConnectorConfig Specifies BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
         * 
         * @return builder
         * 
         */
        public Builder biConnectorConfig(ClusterBiConnectorConfigArgs biConnectorConfig) {
            return biConnectorConfig(Output.of(biConnectorConfig));
        }

        public Builder cloudBackup(@Nullable Output<Boolean> cloudBackup) {
            $.cloudBackup = cloudBackup;
            return this;
        }

        public Builder cloudBackup(Boolean cloudBackup) {
            return cloudBackup(Output.of(cloudBackup));
        }

        /**
         * @param clusterId The cluster ID.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The cluster ID.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param clusterType Specifies the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
         * 
         * &gt; **WHEN SHOULD YOU USE CLUSTERTYPE?**
         * When you set replication_specs, when you are deploying Global Clusters or when you are deploying non-Global replica sets and sharded clusters.
         * 
         * Accepted values include:
         * - `REPLICASET` Replica set
         * - `SHARDED` Sharded cluster
         * - `GEOSHARDED` Global Cluster
         * 
         * @return builder
         * 
         */
        public Builder clusterType(@Nullable Output<String> clusterType) {
            $.clusterType = clusterType;
            return this;
        }

        /**
         * @param clusterType Specifies the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
         * 
         * &gt; **WHEN SHOULD YOU USE CLUSTERTYPE?**
         * When you set replication_specs, when you are deploying Global Clusters or when you are deploying non-Global replica sets and sharded clusters.
         * 
         * Accepted values include:
         * - `REPLICASET` Replica set
         * - `SHARDED` Sharded cluster
         * - `GEOSHARDED` Global Cluster
         * 
         * @return builder
         * 
         */
        public Builder clusterType(String clusterType) {
            return clusterType(Output.of(clusterType));
        }

        /**
         * @param connectionStrings Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
         * 
         * @return builder
         * 
         */
        public Builder connectionStrings(@Nullable Output<List<ClusterConnectionStringArgs>> connectionStrings) {
            $.connectionStrings = connectionStrings;
            return this;
        }

        /**
         * @param connectionStrings Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
         * 
         * @return builder
         * 
         */
        public Builder connectionStrings(List<ClusterConnectionStringArgs> connectionStrings) {
            return connectionStrings(Output.of(connectionStrings));
        }

        /**
         * @param connectionStrings Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
         * 
         * @return builder
         * 
         */
        public Builder connectionStrings(ClusterConnectionStringArgs... connectionStrings) {
            return connectionStrings(List.of(connectionStrings));
        }

        /**
         * @param containerId The Container ID is the id of the container created when the first cluster in the region (AWS/Azure) or project (GCP) was created.
         * 
         * @return builder
         * 
         */
        public Builder containerId(@Nullable Output<String> containerId) {
            $.containerId = containerId;
            return this;
        }

        /**
         * @param containerId The Container ID is the id of the container created when the first cluster in the region (AWS/Azure) or project (GCP) was created.
         * 
         * @return builder
         * 
         */
        public Builder containerId(String containerId) {
            return containerId(Output.of(containerId));
        }

        /**
         * @param diskSizeGb Capacity, in gigabytes, of the host’s root volume. Increase this number to add capacity, up to a maximum possible value of 4096 (i.e., 4 TB). This value must be a positive integer.
         * * The minimum disk size for dedicated clusters is 10GB for AWS and GCP. If you specify diskSizeGB with a lower disk size, Atlas defaults to the minimum disk size value.
         * * Note: The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require additional storage space beyond this limitation, consider upgrading your cluster to a higher tier.
         * * Cannot be used with clusters with local NVMe SSDs
         * * Cannot be used with Azure clusters
         * 
         * @return builder
         * 
         */
        public Builder diskSizeGb(@Nullable Output<Double> diskSizeGb) {
            $.diskSizeGb = diskSizeGb;
            return this;
        }

        /**
         * @param diskSizeGb Capacity, in gigabytes, of the host’s root volume. Increase this number to add capacity, up to a maximum possible value of 4096 (i.e., 4 TB). This value must be a positive integer.
         * * The minimum disk size for dedicated clusters is 10GB for AWS and GCP. If you specify diskSizeGB with a lower disk size, Atlas defaults to the minimum disk size value.
         * * Note: The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require additional storage space beyond this limitation, consider upgrading your cluster to a higher tier.
         * * Cannot be used with clusters with local NVMe SSDs
         * * Cannot be used with Azure clusters
         * 
         * @return builder
         * 
         */
        public Builder diskSizeGb(Double diskSizeGb) {
            return diskSizeGb(Output.of(diskSizeGb));
        }

        /**
         * @param encryptionAtRestProvider Possible values are AWS, GCP, AZURE or NONE.  Only needed if you desire to manage the keys, see [Encryption at Rest using Customer Key Management](https://docs.atlas.mongodb.com/security-aws-kms/) for complete documentation.  You must configure encryption at rest for the Atlas project before enabling it on any cluster in the project. For complete documentation on configuring Encryption at Rest, see Encryption at Rest using Customer Key Management. Requires M10 or greater. and for legacy backups, backup_enabled, to be false or omitted. **Note: Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default**.
         * 
         * @return builder
         * 
         */
        public Builder encryptionAtRestProvider(@Nullable Output<String> encryptionAtRestProvider) {
            $.encryptionAtRestProvider = encryptionAtRestProvider;
            return this;
        }

        /**
         * @param encryptionAtRestProvider Possible values are AWS, GCP, AZURE or NONE.  Only needed if you desire to manage the keys, see [Encryption at Rest using Customer Key Management](https://docs.atlas.mongodb.com/security-aws-kms/) for complete documentation.  You must configure encryption at rest for the Atlas project before enabling it on any cluster in the project. For complete documentation on configuring Encryption at Rest, see Encryption at Rest using Customer Key Management. Requires M10 or greater. and for legacy backups, backup_enabled, to be false or omitted. **Note: Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default**.
         * 
         * @return builder
         * 
         */
        public Builder encryptionAtRestProvider(String encryptionAtRestProvider) {
            return encryptionAtRestProvider(Output.of(encryptionAtRestProvider));
        }

        /**
         * @param labels Set that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster. See below. **DEPRECATED** Use `tags` instead.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<List<ClusterLabelArgs>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Set that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster. See below. **DEPRECATED** Use `tags` instead.
         * 
         * @return builder
         * 
         */
        public Builder labels(List<ClusterLabelArgs> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param labels Set that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster. See below. **DEPRECATED** Use `tags` instead.
         * 
         * @return builder
         * 
         */
        public Builder labels(ClusterLabelArgs... labels) {
            return labels(List.of(labels));
        }

        /**
         * @param mongoDbMajorVersion Version of the cluster to deploy. Atlas supports all the MongoDB versions that have **not** reached [End of Live](https://www.mongodb.com/legal/support-policy/lifecycles) for M10+ clusters. If omitted, Atlas deploys the cluster with the default version. For more details, see [documentation](https://www.mongodb.com/docs/atlas/reference/faq/database/#which-versions-of-mongodb-do-service-clusters-use-). Atlas always deploys the cluster with the latest stable release of the specified version. See [Release Notes](https://www.mongodb.com/docs/upcoming/release-notes/) for latest Current Stable Release.
         * 
         * @return builder
         * 
         */
        public Builder mongoDbMajorVersion(@Nullable Output<String> mongoDbMajorVersion) {
            $.mongoDbMajorVersion = mongoDbMajorVersion;
            return this;
        }

        /**
         * @param mongoDbMajorVersion Version of the cluster to deploy. Atlas supports all the MongoDB versions that have **not** reached [End of Live](https://www.mongodb.com/legal/support-policy/lifecycles) for M10+ clusters. If omitted, Atlas deploys the cluster with the default version. For more details, see [documentation](https://www.mongodb.com/docs/atlas/reference/faq/database/#which-versions-of-mongodb-do-service-clusters-use-). Atlas always deploys the cluster with the latest stable release of the specified version. See [Release Notes](https://www.mongodb.com/docs/upcoming/release-notes/) for latest Current Stable Release.
         * 
         * @return builder
         * 
         */
        public Builder mongoDbMajorVersion(String mongoDbMajorVersion) {
            return mongoDbMajorVersion(Output.of(mongoDbMajorVersion));
        }

        /**
         * @param mongoDbVersion Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
         * 
         * @return builder
         * 
         */
        public Builder mongoDbVersion(@Nullable Output<String> mongoDbVersion) {
            $.mongoDbVersion = mongoDbVersion;
            return this;
        }

        /**
         * @param mongoDbVersion Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
         * 
         * @return builder
         * 
         */
        public Builder mongoDbVersion(String mongoDbVersion) {
            return mongoDbVersion(Output.of(mongoDbVersion));
        }

        /**
         * @param mongoUri Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
         * 
         * @return builder
         * 
         */
        public Builder mongoUri(@Nullable Output<String> mongoUri) {
            $.mongoUri = mongoUri;
            return this;
        }

        /**
         * @param mongoUri Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
         * 
         * @return builder
         * 
         */
        public Builder mongoUri(String mongoUri) {
            return mongoUri(Output.of(mongoUri));
        }

        /**
         * @param mongoUriUpdated Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
         * 
         * @return builder
         * 
         */
        public Builder mongoUriUpdated(@Nullable Output<String> mongoUriUpdated) {
            $.mongoUriUpdated = mongoUriUpdated;
            return this;
        }

        /**
         * @param mongoUriUpdated Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
         * 
         * @return builder
         * 
         */
        public Builder mongoUriUpdated(String mongoUriUpdated) {
            return mongoUriUpdated(Output.of(mongoUriUpdated));
        }

        /**
         * @param mongoUriWithOptions connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder mongoUriWithOptions(@Nullable Output<String> mongoUriWithOptions) {
            $.mongoUriWithOptions = mongoUriWithOptions;
            return this;
        }

        /**
         * @param mongoUriWithOptions connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder mongoUriWithOptions(String mongoUriWithOptions) {
            return mongoUriWithOptions(Output.of(mongoUriWithOptions));
        }

        /**
         * @param name Name of the cluster as it appears in Atlas. Once the cluster is created, its name cannot be changed. **WARNING** Changing the name will result in destruction of the existing cluster and the creation of a new cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the cluster as it appears in Atlas. Once the cluster is created, its name cannot be changed. **WARNING** Changing the name will result in destruction of the existing cluster and the creation of a new cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param numShards Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
         * 
         * @return builder
         * 
         */
        public Builder numShards(@Nullable Output<Integer> numShards) {
            $.numShards = numShards;
            return this;
        }

        /**
         * @param numShards Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
         * 
         * @return builder
         * 
         */
        public Builder numShards(Integer numShards) {
            return numShards(Output.of(numShards));
        }

        public Builder paused(@Nullable Output<Boolean> paused) {
            $.paused = paused;
            return this;
        }

        public Builder paused(Boolean paused) {
            return paused(Output.of(paused));
        }

        /**
         * @param pinnedFcv Pins the Feature Compatibility Version (FCV) to the current MongoDB version with a provided expiration date. To unpin the FCV the `pinned_fcv` attribute must be removed. This operation can take several minutes as the request processes through the MongoDB data plane. Once FCV is unpinned it will not be possible to downgrade the `mongo_db_major_version`. It is advised that updates to `pinned_fcv` are done isolated from other cluster changes. If a plan contains multiple changes, the FCV change will be applied first. If FCV is unpinned past the expiration date the `pinned_fcv` attribute must be removed. The following [knowledge hub article](https://kb.corp.mongodb.com/article/000021785/) and [FCV documentation](https://www.mongodb.com/docs/atlas/tutorial/major-version-change/#manage-feature-compatibility--fcv--during-upgrades) can be referenced for more details. See below.
         * 
         * @return builder
         * 
         */
        public Builder pinnedFcv(@Nullable Output<ClusterPinnedFcvArgs> pinnedFcv) {
            $.pinnedFcv = pinnedFcv;
            return this;
        }

        /**
         * @param pinnedFcv Pins the Feature Compatibility Version (FCV) to the current MongoDB version with a provided expiration date. To unpin the FCV the `pinned_fcv` attribute must be removed. This operation can take several minutes as the request processes through the MongoDB data plane. Once FCV is unpinned it will not be possible to downgrade the `mongo_db_major_version`. It is advised that updates to `pinned_fcv` are done isolated from other cluster changes. If a plan contains multiple changes, the FCV change will be applied first. If FCV is unpinned past the expiration date the `pinned_fcv` attribute must be removed. The following [knowledge hub article](https://kb.corp.mongodb.com/article/000021785/) and [FCV documentation](https://www.mongodb.com/docs/atlas/tutorial/major-version-change/#manage-feature-compatibility--fcv--during-upgrades) can be referenced for more details. See below.
         * 
         * @return builder
         * 
         */
        public Builder pinnedFcv(ClusterPinnedFcvArgs pinnedFcv) {
            return pinnedFcv(Output.of(pinnedFcv));
        }

        /**
         * @param pitEnabled Flag that indicates if the cluster uses Continuous Cloud Backup. If set to true, cloud_backup must also be set to true.
         * 
         * @return builder
         * 
         */
        public Builder pitEnabled(@Nullable Output<Boolean> pitEnabled) {
            $.pitEnabled = pitEnabled;
            return this;
        }

        /**
         * @param pitEnabled Flag that indicates if the cluster uses Continuous Cloud Backup. If set to true, cloud_backup must also be set to true.
         * 
         * @return builder
         * 
         */
        public Builder pitEnabled(Boolean pitEnabled) {
            return pitEnabled(Output.of(pitEnabled));
        }

        /**
         * @param projectId The unique ID for the project to create the database user.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The unique ID for the project to create the database user.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param providerAutoScalingComputeMaxInstanceSize Maximum instance size to which your cluster can automatically scale (e.g., M40). Required if `autoScaling.compute.enabled` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder providerAutoScalingComputeMaxInstanceSize(@Nullable Output<String> providerAutoScalingComputeMaxInstanceSize) {
            $.providerAutoScalingComputeMaxInstanceSize = providerAutoScalingComputeMaxInstanceSize;
            return this;
        }

        /**
         * @param providerAutoScalingComputeMaxInstanceSize Maximum instance size to which your cluster can automatically scale (e.g., M40). Required if `autoScaling.compute.enabled` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder providerAutoScalingComputeMaxInstanceSize(String providerAutoScalingComputeMaxInstanceSize) {
            return providerAutoScalingComputeMaxInstanceSize(Output.of(providerAutoScalingComputeMaxInstanceSize));
        }

        /**
         * @param providerAutoScalingComputeMinInstanceSize Minimum instance size to which your cluster can automatically scale (e.g., M10). Required if `autoScaling.compute.scaleDownEnabled` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder providerAutoScalingComputeMinInstanceSize(@Nullable Output<String> providerAutoScalingComputeMinInstanceSize) {
            $.providerAutoScalingComputeMinInstanceSize = providerAutoScalingComputeMinInstanceSize;
            return this;
        }

        /**
         * @param providerAutoScalingComputeMinInstanceSize Minimum instance size to which your cluster can automatically scale (e.g., M10). Required if `autoScaling.compute.scaleDownEnabled` is `true`.
         * 
         * @return builder
         * 
         */
        public Builder providerAutoScalingComputeMinInstanceSize(String providerAutoScalingComputeMinInstanceSize) {
            return providerAutoScalingComputeMinInstanceSize(Output.of(providerAutoScalingComputeMinInstanceSize));
        }

        /**
         * @param providerDiskIops The maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected `provider_instance_size_name` and `disk_size_gb`.  This setting requires that `provider_instance_size_name` to be M30 or greater and cannot be used with clusters with local NVMe SSDs.  The default value for `provider_disk_iops` is the same as the cluster tier&#39;s Standard IOPS value, as viewable in the Atlas console.  It is used in cases where a higher number of IOPS is needed and possible.  If a value is submitted that is lower or equal to the default IOPS value for the cluster tier Atlas ignores the requested value and uses the default.  More details available under the providerSettings.diskIOPS parameter: [MongoDB API Clusters](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/)
         * * You do not need to configure IOPS for a STANDARD disk configuration but only for a PROVISIONED configuration.
         * 
         * @return builder
         * 
         */
        public Builder providerDiskIops(@Nullable Output<Integer> providerDiskIops) {
            $.providerDiskIops = providerDiskIops;
            return this;
        }

        /**
         * @param providerDiskIops The maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected `provider_instance_size_name` and `disk_size_gb`.  This setting requires that `provider_instance_size_name` to be M30 or greater and cannot be used with clusters with local NVMe SSDs.  The default value for `provider_disk_iops` is the same as the cluster tier&#39;s Standard IOPS value, as viewable in the Atlas console.  It is used in cases where a higher number of IOPS is needed and possible.  If a value is submitted that is lower or equal to the default IOPS value for the cluster tier Atlas ignores the requested value and uses the default.  More details available under the providerSettings.diskIOPS parameter: [MongoDB API Clusters](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/)
         * * You do not need to configure IOPS for a STANDARD disk configuration but only for a PROVISIONED configuration.
         * 
         * @return builder
         * 
         */
        public Builder providerDiskIops(Integer providerDiskIops) {
            return providerDiskIops(Output.of(providerDiskIops));
        }

        /**
         * @param providerDiskTypeName Azure disk type of the server’s root volume. If omitted, Atlas uses the default disk type for the selected providerSettings.instanceSizeName.  Example disk types and associated storage sizes: P4 - 32GB, P6 - 64GB, P10 - 128GB, P15 - 256GB, P20 - 512GB, P30 - 1024GB, P40 - 2048GB, P50 - 4095GB.  More information and the most update to date disk types/storage sizes can be located at https://docs.atlas.mongodb.com/reference/api/clusters-create-one/.
         * 
         * @return builder
         * 
         */
        public Builder providerDiskTypeName(@Nullable Output<String> providerDiskTypeName) {
            $.providerDiskTypeName = providerDiskTypeName;
            return this;
        }

        /**
         * @param providerDiskTypeName Azure disk type of the server’s root volume. If omitted, Atlas uses the default disk type for the selected providerSettings.instanceSizeName.  Example disk types and associated storage sizes: P4 - 32GB, P6 - 64GB, P10 - 128GB, P15 - 256GB, P20 - 512GB, P30 - 1024GB, P40 - 2048GB, P50 - 4095GB.  More information and the most update to date disk types/storage sizes can be located at https://docs.atlas.mongodb.com/reference/api/clusters-create-one/.
         * 
         * @return builder
         * 
         */
        public Builder providerDiskTypeName(String providerDiskTypeName) {
            return providerDiskTypeName(Output.of(providerDiskTypeName));
        }

        /**
         * @param providerEncryptEbsVolume **(Deprecated) The Flag is always true.** Flag that indicates whether the Amazon EBS encryption feature encrypts the host&#39;s root volume for both data at rest within the volume and for data moving between the volume and the cluster. Note: This setting is always enabled for clusters with local NVMe SSDs. **Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default.**.
         * 
         * @return builder
         * 
         * @deprecated
         * All EBS volumes are encrypted by default, the option to disable encryption has been removed
         * 
         */
        @Deprecated /* All EBS volumes are encrypted by default, the option to disable encryption has been removed */
        public Builder providerEncryptEbsVolume(@Nullable Output<Boolean> providerEncryptEbsVolume) {
            $.providerEncryptEbsVolume = providerEncryptEbsVolume;
            return this;
        }

        /**
         * @param providerEncryptEbsVolume **(Deprecated) The Flag is always true.** Flag that indicates whether the Amazon EBS encryption feature encrypts the host&#39;s root volume for both data at rest within the volume and for data moving between the volume and the cluster. Note: This setting is always enabled for clusters with local NVMe SSDs. **Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default.**.
         * 
         * @return builder
         * 
         * @deprecated
         * All EBS volumes are encrypted by default, the option to disable encryption has been removed
         * 
         */
        @Deprecated /* All EBS volumes are encrypted by default, the option to disable encryption has been removed */
        public Builder providerEncryptEbsVolume(Boolean providerEncryptEbsVolume) {
            return providerEncryptEbsVolume(Output.of(providerEncryptEbsVolume));
        }

        public Builder providerEncryptEbsVolumeFlag(@Nullable Output<Boolean> providerEncryptEbsVolumeFlag) {
            $.providerEncryptEbsVolumeFlag = providerEncryptEbsVolumeFlag;
            return this;
        }

        public Builder providerEncryptEbsVolumeFlag(Boolean providerEncryptEbsVolumeFlag) {
            return providerEncryptEbsVolumeFlag(Output.of(providerEncryptEbsVolumeFlag));
        }

        /**
         * @param providerInstanceSizeName Atlas provides different instance sizes, each with a default storage capacity and RAM size. The instance size you select is used for all the data-bearing servers in your cluster. See [Create a Cluster](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/) `providerSettings.instanceSizeName` for valid values and default resources.
         * 
         * @return builder
         * 
         */
        public Builder providerInstanceSizeName(@Nullable Output<String> providerInstanceSizeName) {
            $.providerInstanceSizeName = providerInstanceSizeName;
            return this;
        }

        /**
         * @param providerInstanceSizeName Atlas provides different instance sizes, each with a default storage capacity and RAM size. The instance size you select is used for all the data-bearing servers in your cluster. See [Create a Cluster](https://docs.atlas.mongodb.com/reference/api/clusters-create-one/) `providerSettings.instanceSizeName` for valid values and default resources.
         * 
         * @return builder
         * 
         */
        public Builder providerInstanceSizeName(String providerInstanceSizeName) {
            return providerInstanceSizeName(Output.of(providerInstanceSizeName));
        }

        /**
         * @param providerName Cloud service provider on which the servers are provisioned.
         * 
         * The possible values are:
         * 
         * - `AWS` - Amazon AWS
         * - `GCP` - Google Cloud Platform
         * - `AZURE` - Microsoft Azure
         * - `TENANT` - A multi-tenant deployment on one of the supported cloud service providers. Only valid when providerSettings.instanceSizeName is M0.
         * 
         * @return builder
         * 
         */
        public Builder providerName(@Nullable Output<String> providerName) {
            $.providerName = providerName;
            return this;
        }

        /**
         * @param providerName Cloud service provider on which the servers are provisioned.
         * 
         * The possible values are:
         * 
         * - `AWS` - Amazon AWS
         * - `GCP` - Google Cloud Platform
         * - `AZURE` - Microsoft Azure
         * - `TENANT` - A multi-tenant deployment on one of the supported cloud service providers. Only valid when providerSettings.instanceSizeName is M0.
         * 
         * @return builder
         * 
         */
        public Builder providerName(String providerName) {
            return providerName(Output.of(providerName));
        }

        /**
         * @param providerRegionName Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
         * Do not specify this field when creating a multi-region cluster using the replicationSpec document or a Global Cluster with the replicationSpecs array.
         * 
         * @return builder
         * 
         */
        public Builder providerRegionName(@Nullable Output<String> providerRegionName) {
            $.providerRegionName = providerRegionName;
            return this;
        }

        /**
         * @param providerRegionName Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
         * Do not specify this field when creating a multi-region cluster using the replicationSpec document or a Global Cluster with the replicationSpecs array.
         * 
         * @return builder
         * 
         */
        public Builder providerRegionName(String providerRegionName) {
            return providerRegionName(Output.of(providerRegionName));
        }

        /**
         * @param providerVolumeType The type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.  `PROVISIONED` is ONLY required if setting IOPS higher than the default instance IOPS.
         * &gt; **NOTE:** `STANDARD` is not available for NVME clusters.
         * 
         * @return builder
         * 
         */
        public Builder providerVolumeType(@Nullable Output<String> providerVolumeType) {
            $.providerVolumeType = providerVolumeType;
            return this;
        }

        /**
         * @param providerVolumeType The type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.  `PROVISIONED` is ONLY required if setting IOPS higher than the default instance IOPS.
         * &gt; **NOTE:** `STANDARD` is not available for NVME clusters.
         * 
         * @return builder
         * 
         */
        public Builder providerVolumeType(String providerVolumeType) {
            return providerVolumeType(Output.of(providerVolumeType));
        }

        /**
         * @param redactClientLogData Flag that enables or disables log redaction, see the [manual](https://www.mongodb.com/docs/manual/administration/monitoring/#log-redaction) for more info. Use this in conjunction with Encryption at Rest and TLS/SSL (Transport Encryption) to assist compliance with regulatory requirements. **Note**: Changing this setting on a cluster will trigger a rolling restart as soon as the cluster is updated. The log redaction field is updated via an Atlas API call after cluster creation. Consequently, there may be a brief period during resource creation when log redaction is not yet enabled. To ensure complete log redaction from the outset, use `mongodbatlas.AdvancedCluster`.
         * 
         * @return builder
         * 
         */
        public Builder redactClientLogData(@Nullable Output<Boolean> redactClientLogData) {
            $.redactClientLogData = redactClientLogData;
            return this;
        }

        /**
         * @param redactClientLogData Flag that enables or disables log redaction, see the [manual](https://www.mongodb.com/docs/manual/administration/monitoring/#log-redaction) for more info. Use this in conjunction with Encryption at Rest and TLS/SSL (Transport Encryption) to assist compliance with regulatory requirements. **Note**: Changing this setting on a cluster will trigger a rolling restart as soon as the cluster is updated. The log redaction field is updated via an Atlas API call after cluster creation. Consequently, there may be a brief period during resource creation when log redaction is not yet enabled. To ensure complete log redaction from the outset, use `mongodbatlas.AdvancedCluster`.
         * 
         * @return builder
         * 
         */
        public Builder redactClientLogData(Boolean redactClientLogData) {
            return redactClientLogData(Output.of(redactClientLogData));
        }

        /**
         * @param replicationFactor Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
         * 
         * @return builder
         * 
         */
        public Builder replicationFactor(@Nullable Output<Integer> replicationFactor) {
            $.replicationFactor = replicationFactor;
            return this;
        }

        /**
         * @param replicationFactor Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
         * 
         * @return builder
         * 
         */
        public Builder replicationFactor(Integer replicationFactor) {
            return replicationFactor(Output.of(replicationFactor));
        }

        /**
         * @param replicationSpecs Configuration for cluster regions.  See Replication Spec below for more details.
         * 
         * @return builder
         * 
         */
        public Builder replicationSpecs(@Nullable Output<List<ClusterReplicationSpecArgs>> replicationSpecs) {
            $.replicationSpecs = replicationSpecs;
            return this;
        }

        /**
         * @param replicationSpecs Configuration for cluster regions.  See Replication Spec below for more details.
         * 
         * @return builder
         * 
         */
        public Builder replicationSpecs(List<ClusterReplicationSpecArgs> replicationSpecs) {
            return replicationSpecs(Output.of(replicationSpecs));
        }

        /**
         * @param replicationSpecs Configuration for cluster regions.  See Replication Spec below for more details.
         * 
         * @return builder
         * 
         */
        public Builder replicationSpecs(ClusterReplicationSpecArgs... replicationSpecs) {
            return replicationSpecs(List.of(replicationSpecs));
        }

        /**
         * @param retainBackupsEnabled Set to true to retain backup snapshots for the deleted cluster. M10 and above only.
         * 
         * @return builder
         * 
         */
        public Builder retainBackupsEnabled(@Nullable Output<Boolean> retainBackupsEnabled) {
            $.retainBackupsEnabled = retainBackupsEnabled;
            return this;
        }

        /**
         * @param retainBackupsEnabled Set to true to retain backup snapshots for the deleted cluster. M10 and above only.
         * 
         * @return builder
         * 
         */
        public Builder retainBackupsEnabled(Boolean retainBackupsEnabled) {
            return retainBackupsEnabled(Output.of(retainBackupsEnabled));
        }

        /**
         * @param snapshotBackupPolicies current snapshot schedule and retention settings for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder snapshotBackupPolicies(@Nullable Output<List<ClusterSnapshotBackupPolicyArgs>> snapshotBackupPolicies) {
            $.snapshotBackupPolicies = snapshotBackupPolicies;
            return this;
        }

        /**
         * @param snapshotBackupPolicies current snapshot schedule and retention settings for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder snapshotBackupPolicies(List<ClusterSnapshotBackupPolicyArgs> snapshotBackupPolicies) {
            return snapshotBackupPolicies(Output.of(snapshotBackupPolicies));
        }

        /**
         * @param snapshotBackupPolicies current snapshot schedule and retention settings for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder snapshotBackupPolicies(ClusterSnapshotBackupPolicyArgs... snapshotBackupPolicies) {
            return snapshotBackupPolicies(List.of(snapshotBackupPolicies));
        }

        /**
         * @param srvAddress Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
         * 
         * @return builder
         * 
         */
        public Builder srvAddress(@Nullable Output<String> srvAddress) {
            $.srvAddress = srvAddress;
            return this;
        }

        /**
         * @param srvAddress Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
         * 
         * @return builder
         * 
         */
        public Builder srvAddress(String srvAddress) {
            return srvAddress(Output.of(srvAddress));
        }

        /**
         * @param stateName Current state of the cluster. The possible states are:
         * - IDLE
         * - CREATING
         * - UPDATING
         * - DELETING
         * - DELETED
         * - REPAIRING
         * 
         * @return builder
         * 
         */
        public Builder stateName(@Nullable Output<String> stateName) {
            $.stateName = stateName;
            return this;
        }

        /**
         * @param stateName Current state of the cluster. The possible states are:
         * - IDLE
         * - CREATING
         * - UPDATING
         * - DELETING
         * - DELETED
         * - REPAIRING
         * 
         * @return builder
         * 
         */
        public Builder stateName(String stateName) {
            return stateName(Output.of(stateName));
        }

        /**
         * @param tags Set that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster. See below.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<ClusterTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Set that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster. See below.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<ClusterTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Set that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster. See below.
         * 
         * @return builder
         * 
         */
        public Builder tags(ClusterTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param terminationProtectionEnabled Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won&#39;t delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
         * 
         * @return builder
         * 
         */
        public Builder terminationProtectionEnabled(@Nullable Output<Boolean> terminationProtectionEnabled) {
            $.terminationProtectionEnabled = terminationProtectionEnabled;
            return this;
        }

        /**
         * @param terminationProtectionEnabled Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won&#39;t delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
         * 
         * @return builder
         * 
         */
        public Builder terminationProtectionEnabled(Boolean terminationProtectionEnabled) {
            return terminationProtectionEnabled(Output.of(terminationProtectionEnabled));
        }

        /**
         * @param versionReleaseSystem Release cadence that Atlas uses for this cluster. This parameter defaults to `LTS`. If you set this field to `CONTINUOUS`, you must omit the `mongo_db_major_version` field. Atlas accepts:
         * - `CONTINUOUS`:  Atlas creates your cluster using the most recent MongoDB release. Atlas automatically updates your cluster to the latest major and rapid MongoDB releases as they become available.
         * - `LTS`: Atlas creates your cluster using the latest patch release of the MongoDB version that you specify in the mongoDBMajorVersion field. Atlas automatically updates your cluster to subsequent patch releases of this MongoDB version. Atlas doesn&#39;t update your cluster to newer rapid or major MongoDB releases as they become available.
         * 
         * @return builder
         * 
         */
        public Builder versionReleaseSystem(@Nullable Output<String> versionReleaseSystem) {
            $.versionReleaseSystem = versionReleaseSystem;
            return this;
        }

        /**
         * @param versionReleaseSystem Release cadence that Atlas uses for this cluster. This parameter defaults to `LTS`. If you set this field to `CONTINUOUS`, you must omit the `mongo_db_major_version` field. Atlas accepts:
         * - `CONTINUOUS`:  Atlas creates your cluster using the most recent MongoDB release. Atlas automatically updates your cluster to the latest major and rapid MongoDB releases as they become available.
         * - `LTS`: Atlas creates your cluster using the latest patch release of the MongoDB version that you specify in the mongoDBMajorVersion field. Atlas automatically updates your cluster to subsequent patch releases of this MongoDB version. Atlas doesn&#39;t update your cluster to newer rapid or major MongoDB releases as they become available.
         * 
         * @return builder
         * 
         */
        public Builder versionReleaseSystem(String versionReleaseSystem) {
            return versionReleaseSystem(Output.of(versionReleaseSystem));
        }

        public ClusterState build() {
            return $;
        }
    }

}
