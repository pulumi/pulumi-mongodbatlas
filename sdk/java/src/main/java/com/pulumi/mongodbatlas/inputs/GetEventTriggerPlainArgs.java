// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetEventTriggerPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEventTriggerPlainArgs Empty = new GetEventTriggerPlainArgs();

    /**
     * The ObjectID of your application.
     * * For more details on `projectId` and `appId` see: https://www.mongodb.com/docs/api/doc/atlas-app-services-admin-api-v3/#topic-project-amp-application-ids
     * 
     */
    @Import(name="appId", required=true)
    private String appId;

    /**
     * @return The ObjectID of your application.
     * * For more details on `projectId` and `appId` see: https://www.mongodb.com/docs/api/doc/atlas-app-services-admin-api-v3/#topic-project-amp-application-ids
     * 
     */
    public String appId() {
        return this.appId;
    }

    /**
     * The unique ID for the project to create the trigger.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return The unique ID for the project to create the trigger.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    /**
     * The unique ID of the trigger.
     * 
     */
    @Import(name="triggerId", required=true)
    private String triggerId;

    /**
     * @return The unique ID of the trigger.
     * 
     */
    public String triggerId() {
        return this.triggerId;
    }

    private GetEventTriggerPlainArgs() {}

    private GetEventTriggerPlainArgs(GetEventTriggerPlainArgs $) {
        this.appId = $.appId;
        this.projectId = $.projectId;
        this.triggerId = $.triggerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEventTriggerPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEventTriggerPlainArgs $;

        public Builder() {
            $ = new GetEventTriggerPlainArgs();
        }

        public Builder(GetEventTriggerPlainArgs defaults) {
            $ = new GetEventTriggerPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appId The ObjectID of your application.
         * * For more details on `projectId` and `appId` see: https://www.mongodb.com/docs/api/doc/atlas-app-services-admin-api-v3/#topic-project-amp-application-ids
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param projectId The unique ID for the project to create the trigger.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param triggerId The unique ID of the trigger.
         * 
         * @return builder
         * 
         */
        public Builder triggerId(String triggerId) {
            $.triggerId = triggerId;
            return this;
        }

        public GetEventTriggerPlainArgs build() {
            if ($.appId == null) {
                throw new MissingRequiredPropertyException("GetEventTriggerPlainArgs", "appId");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetEventTriggerPlainArgs", "projectId");
            }
            if ($.triggerId == null) {
                throw new MissingRequiredPropertyException("GetEventTriggerPlainArgs", "triggerId");
            }
            return $;
        }
    }

}
