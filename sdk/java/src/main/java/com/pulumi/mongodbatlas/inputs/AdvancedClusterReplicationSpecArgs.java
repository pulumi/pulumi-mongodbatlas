// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.mongodbatlas.inputs.AdvancedClusterReplicationSpecRegionConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AdvancedClusterReplicationSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final AdvancedClusterReplicationSpecArgs Empty = new AdvancedClusterReplicationSpecArgs();

    @Import(name="containerId")
    private @Nullable Output<Map<String,String>> containerId;

    public Optional<Output<Map<String,String>>> containerId() {
        return Optional.ofNullable(this.containerId);
    }

    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Provide this value if you set a `cluster_type` of SHARDED or GEOSHARDED. Omit this value if you selected a `cluster_type` of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a `num_shards` value of 1 and a `cluster_type` of SHARDED, Atlas deploys a single-shard [sharded cluster](https://docs.atlas.mongodb.com/reference/glossary/#std-term-sharded-cluster). Don&#39;t create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don&#39;t provide the same benefits as multi-shard configurations.
     * 
     */
    @Import(name="numShards")
    private @Nullable Output<Integer> numShards;

    /**
     * @return Provide this value if you set a `cluster_type` of SHARDED or GEOSHARDED. Omit this value if you selected a `cluster_type` of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a `num_shards` value of 1 and a `cluster_type` of SHARDED, Atlas deploys a single-shard [sharded cluster](https://docs.atlas.mongodb.com/reference/glossary/#std-term-sharded-cluster). Don&#39;t create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don&#39;t provide the same benefits as multi-shard configurations.
     * 
     */
    public Optional<Output<Integer>> numShards() {
        return Optional.ofNullable(this.numShards);
    }

    /**
     * Configuration for the hardware specifications for nodes set for a given regionEach `region_configs` object describes the region&#39;s priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `region_configs` object must have either an `analytics_specs` object, `electable_specs` object, or `read_only_specs` object. See below
     * 
     */
    @Import(name="regionConfigs", required=true)
    private Output<List<AdvancedClusterReplicationSpecRegionConfigArgs>> regionConfigs;

    /**
     * @return Configuration for the hardware specifications for nodes set for a given regionEach `region_configs` object describes the region&#39;s priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `region_configs` object must have either an `analytics_specs` object, `electable_specs` object, or `read_only_specs` object. See below
     * 
     */
    public Output<List<AdvancedClusterReplicationSpecRegionConfigArgs>> regionConfigs() {
        return this.regionConfigs;
    }

    /**
     * Name for the zone in a Global Cluster.
     * 
     */
    @Import(name="zoneName")
    private @Nullable Output<String> zoneName;

    /**
     * @return Name for the zone in a Global Cluster.
     * 
     */
    public Optional<Output<String>> zoneName() {
        return Optional.ofNullable(this.zoneName);
    }

    private AdvancedClusterReplicationSpecArgs() {}

    private AdvancedClusterReplicationSpecArgs(AdvancedClusterReplicationSpecArgs $) {
        this.containerId = $.containerId;
        this.id = $.id;
        this.numShards = $.numShards;
        this.regionConfigs = $.regionConfigs;
        this.zoneName = $.zoneName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AdvancedClusterReplicationSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdvancedClusterReplicationSpecArgs $;

        public Builder() {
            $ = new AdvancedClusterReplicationSpecArgs();
        }

        public Builder(AdvancedClusterReplicationSpecArgs defaults) {
            $ = new AdvancedClusterReplicationSpecArgs(Objects.requireNonNull(defaults));
        }

        public Builder containerId(@Nullable Output<Map<String,String>> containerId) {
            $.containerId = containerId;
            return this;
        }

        public Builder containerId(Map<String,String> containerId) {
            return containerId(Output.of(containerId));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param numShards Provide this value if you set a `cluster_type` of SHARDED or GEOSHARDED. Omit this value if you selected a `cluster_type` of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a `num_shards` value of 1 and a `cluster_type` of SHARDED, Atlas deploys a single-shard [sharded cluster](https://docs.atlas.mongodb.com/reference/glossary/#std-term-sharded-cluster). Don&#39;t create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don&#39;t provide the same benefits as multi-shard configurations.
         * 
         * @return builder
         * 
         */
        public Builder numShards(@Nullable Output<Integer> numShards) {
            $.numShards = numShards;
            return this;
        }

        /**
         * @param numShards Provide this value if you set a `cluster_type` of SHARDED or GEOSHARDED. Omit this value if you selected a `cluster_type` of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a `num_shards` value of 1 and a `cluster_type` of SHARDED, Atlas deploys a single-shard [sharded cluster](https://docs.atlas.mongodb.com/reference/glossary/#std-term-sharded-cluster). Don&#39;t create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don&#39;t provide the same benefits as multi-shard configurations.
         * 
         * @return builder
         * 
         */
        public Builder numShards(Integer numShards) {
            return numShards(Output.of(numShards));
        }

        /**
         * @param regionConfigs Configuration for the hardware specifications for nodes set for a given regionEach `region_configs` object describes the region&#39;s priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `region_configs` object must have either an `analytics_specs` object, `electable_specs` object, or `read_only_specs` object. See below
         * 
         * @return builder
         * 
         */
        public Builder regionConfigs(Output<List<AdvancedClusterReplicationSpecRegionConfigArgs>> regionConfigs) {
            $.regionConfigs = regionConfigs;
            return this;
        }

        /**
         * @param regionConfigs Configuration for the hardware specifications for nodes set for a given regionEach `region_configs` object describes the region&#39;s priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `region_configs` object must have either an `analytics_specs` object, `electable_specs` object, or `read_only_specs` object. See below
         * 
         * @return builder
         * 
         */
        public Builder regionConfigs(List<AdvancedClusterReplicationSpecRegionConfigArgs> regionConfigs) {
            return regionConfigs(Output.of(regionConfigs));
        }

        /**
         * @param regionConfigs Configuration for the hardware specifications for nodes set for a given regionEach `region_configs` object describes the region&#39;s priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `region_configs` object must have either an `analytics_specs` object, `electable_specs` object, or `read_only_specs` object. See below
         * 
         * @return builder
         * 
         */
        public Builder regionConfigs(AdvancedClusterReplicationSpecRegionConfigArgs... regionConfigs) {
            return regionConfigs(List.of(regionConfigs));
        }

        /**
         * @param zoneName Name for the zone in a Global Cluster.
         * 
         * @return builder
         * 
         */
        public Builder zoneName(@Nullable Output<String> zoneName) {
            $.zoneName = zoneName;
            return this;
        }

        /**
         * @param zoneName Name for the zone in a Global Cluster.
         * 
         * @return builder
         * 
         */
        public Builder zoneName(String zoneName) {
            return zoneName(Output.of(zoneName));
        }

        public AdvancedClusterReplicationSpecArgs build() {
            $.regionConfigs = Objects.requireNonNull($.regionConfigs, "expected parameter 'regionConfigs' to be non-null");
            return $;
        }
    }

}
