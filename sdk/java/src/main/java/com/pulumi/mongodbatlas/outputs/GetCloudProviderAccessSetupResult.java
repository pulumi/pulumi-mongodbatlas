// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetCloudProviderAccessSetupAwsConfig;
import com.pulumi.mongodbatlas.outputs.GetCloudProviderAccessSetupAzureConfig;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetCloudProviderAccessSetupResult {
    /**
     * @return aws related role information
     * 
     */
    private Map<String,String> aws;
    /**
     * @return aws related role information
     * 
     */
    private List<GetCloudProviderAccessSetupAwsConfig> awsConfigs;
    /**
     * @return azure related configurations
     * 
     */
    private @Nullable List<GetCloudProviderAccessSetupAzureConfig> azureConfigs;
    /**
     * @return Date on which this role was created.
     * 
     */
    private String createdDate;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Date and time when this Azure Service Principal was last updated. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
     * 
     */
    private String lastUpdatedDate;
    private String projectId;
    private String providerName;
    private String roleId;

    private GetCloudProviderAccessSetupResult() {}
    /**
     * @return aws related role information
     * 
     */
    public Map<String,String> aws() {
        return this.aws;
    }
    /**
     * @return aws related role information
     * 
     */
    public List<GetCloudProviderAccessSetupAwsConfig> awsConfigs() {
        return this.awsConfigs;
    }
    /**
     * @return azure related configurations
     * 
     */
    public List<GetCloudProviderAccessSetupAzureConfig> azureConfigs() {
        return this.azureConfigs == null ? List.of() : this.azureConfigs;
    }
    /**
     * @return Date on which this role was created.
     * 
     */
    public String createdDate() {
        return this.createdDate;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Date and time when this Azure Service Principal was last updated. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
     * 
     */
    public String lastUpdatedDate() {
        return this.lastUpdatedDate;
    }
    public String projectId() {
        return this.projectId;
    }
    public String providerName() {
        return this.providerName;
    }
    public String roleId() {
        return this.roleId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudProviderAccessSetupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> aws;
        private List<GetCloudProviderAccessSetupAwsConfig> awsConfigs;
        private @Nullable List<GetCloudProviderAccessSetupAzureConfig> azureConfigs;
        private String createdDate;
        private String id;
        private String lastUpdatedDate;
        private String projectId;
        private String providerName;
        private String roleId;
        public Builder() {}
        public Builder(GetCloudProviderAccessSetupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aws = defaults.aws;
    	      this.awsConfigs = defaults.awsConfigs;
    	      this.azureConfigs = defaults.azureConfigs;
    	      this.createdDate = defaults.createdDate;
    	      this.id = defaults.id;
    	      this.lastUpdatedDate = defaults.lastUpdatedDate;
    	      this.projectId = defaults.projectId;
    	      this.providerName = defaults.providerName;
    	      this.roleId = defaults.roleId;
        }

        @CustomType.Setter
        public Builder aws(Map<String,String> aws) {
            if (aws == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessSetupResult", "aws");
            }
            this.aws = aws;
            return this;
        }
        @CustomType.Setter
        public Builder awsConfigs(List<GetCloudProviderAccessSetupAwsConfig> awsConfigs) {
            if (awsConfigs == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessSetupResult", "awsConfigs");
            }
            this.awsConfigs = awsConfigs;
            return this;
        }
        public Builder awsConfigs(GetCloudProviderAccessSetupAwsConfig... awsConfigs) {
            return awsConfigs(List.of(awsConfigs));
        }
        @CustomType.Setter
        public Builder azureConfigs(@Nullable List<GetCloudProviderAccessSetupAzureConfig> azureConfigs) {

            this.azureConfigs = azureConfigs;
            return this;
        }
        public Builder azureConfigs(GetCloudProviderAccessSetupAzureConfig... azureConfigs) {
            return azureConfigs(List.of(azureConfigs));
        }
        @CustomType.Setter
        public Builder createdDate(String createdDate) {
            if (createdDate == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessSetupResult", "createdDate");
            }
            this.createdDate = createdDate;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessSetupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedDate(String lastUpdatedDate) {
            if (lastUpdatedDate == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessSetupResult", "lastUpdatedDate");
            }
            this.lastUpdatedDate = lastUpdatedDate;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessSetupResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder providerName(String providerName) {
            if (providerName == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessSetupResult", "providerName");
            }
            this.providerName = providerName;
            return this;
        }
        @CustomType.Setter
        public Builder roleId(String roleId) {
            if (roleId == null) {
              throw new MissingRequiredPropertyException("GetCloudProviderAccessSetupResult", "roleId");
            }
            this.roleId = roleId;
            return this;
        }
        public GetCloudProviderAccessSetupResult build() {
            final var _resultValue = new GetCloudProviderAccessSetupResult();
            _resultValue.aws = aws;
            _resultValue.awsConfigs = awsConfigs;
            _resultValue.azureConfigs = azureConfigs;
            _resultValue.createdDate = createdDate;
            _resultValue.id = id;
            _resultValue.lastUpdatedDate = lastUpdatedDate;
            _resultValue.projectId = projectId;
            _resultValue.providerName = providerName;
            _resultValue.roleId = roleId;
            return _resultValue;
        }
    }
}
