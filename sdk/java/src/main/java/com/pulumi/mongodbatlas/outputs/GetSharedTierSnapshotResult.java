// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSharedTierSnapshotResult {
    private String clusterName;
    private String expiration;
    private String finishTime;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String mongoDbVersion;
    private String projectId;
    private String scheduledTime;
    private String snapshotId;
    private String startTime;
    private String status;

    private GetSharedTierSnapshotResult() {}
    public String clusterName() {
        return this.clusterName;
    }
    public String expiration() {
        return this.expiration;
    }
    public String finishTime() {
        return this.finishTime;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String mongoDbVersion() {
        return this.mongoDbVersion;
    }
    public String projectId() {
        return this.projectId;
    }
    public String scheduledTime() {
        return this.scheduledTime;
    }
    public String snapshotId() {
        return this.snapshotId;
    }
    public String startTime() {
        return this.startTime;
    }
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSharedTierSnapshotResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterName;
        private String expiration;
        private String finishTime;
        private String id;
        private String mongoDbVersion;
        private String projectId;
        private String scheduledTime;
        private String snapshotId;
        private String startTime;
        private String status;
        public Builder() {}
        public Builder(GetSharedTierSnapshotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterName = defaults.clusterName;
    	      this.expiration = defaults.expiration;
    	      this.finishTime = defaults.finishTime;
    	      this.id = defaults.id;
    	      this.mongoDbVersion = defaults.mongoDbVersion;
    	      this.projectId = defaults.projectId;
    	      this.scheduledTime = defaults.scheduledTime;
    	      this.snapshotId = defaults.snapshotId;
    	      this.startTime = defaults.startTime;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            this.clusterName = Objects.requireNonNull(clusterName);
            return this;
        }
        @CustomType.Setter
        public Builder expiration(String expiration) {
            this.expiration = Objects.requireNonNull(expiration);
            return this;
        }
        @CustomType.Setter
        public Builder finishTime(String finishTime) {
            this.finishTime = Objects.requireNonNull(finishTime);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder mongoDbVersion(String mongoDbVersion) {
            this.mongoDbVersion = Objects.requireNonNull(mongoDbVersion);
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder scheduledTime(String scheduledTime) {
            this.scheduledTime = Objects.requireNonNull(scheduledTime);
            return this;
        }
        @CustomType.Setter
        public Builder snapshotId(String snapshotId) {
            this.snapshotId = Objects.requireNonNull(snapshotId);
            return this;
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public GetSharedTierSnapshotResult build() {
            final var _resultValue = new GetSharedTierSnapshotResult();
            _resultValue.clusterName = clusterName;
            _resultValue.expiration = expiration;
            _resultValue.finishTime = finishTime;
            _resultValue.id = id;
            _resultValue.mongoDbVersion = mongoDbVersion;
            _resultValue.projectId = projectId;
            _resultValue.scheduledTime = scheduledTime;
            _resultValue.snapshotId = snapshotId;
            _resultValue.startTime = startTime;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
