// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetProjectIpAddressesServicesCluster {
    /**
     * @return Human-readable label that identifies the cluster.
     * 
     */
    private String clusterName;
    /**
     * @return List of inbound IP addresses associated with the cluster. If your network allows outbound HTTP requests only to specific IP addresses, you must allow access to the following IP addresses so that your application can connect to your Atlas cluster.
     * 
     */
    private List<String> inbounds;
    /**
     * @return List of outbound IP addresses associated with the cluster. If your network allows inbound HTTP requests only from specific IP addresses, you must allow access from the following IP addresses so that your Atlas cluster can communicate with your webhooks and KMS.
     * 
     */
    private List<String> outbounds;

    private GetProjectIpAddressesServicesCluster() {}
    /**
     * @return Human-readable label that identifies the cluster.
     * 
     */
    public String clusterName() {
        return this.clusterName;
    }
    /**
     * @return List of inbound IP addresses associated with the cluster. If your network allows outbound HTTP requests only to specific IP addresses, you must allow access to the following IP addresses so that your application can connect to your Atlas cluster.
     * 
     */
    public List<String> inbounds() {
        return this.inbounds;
    }
    /**
     * @return List of outbound IP addresses associated with the cluster. If your network allows inbound HTTP requests only from specific IP addresses, you must allow access from the following IP addresses so that your Atlas cluster can communicate with your webhooks and KMS.
     * 
     */
    public List<String> outbounds() {
        return this.outbounds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectIpAddressesServicesCluster defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterName;
        private List<String> inbounds;
        private List<String> outbounds;
        public Builder() {}
        public Builder(GetProjectIpAddressesServicesCluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterName = defaults.clusterName;
    	      this.inbounds = defaults.inbounds;
    	      this.outbounds = defaults.outbounds;
        }

        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            if (clusterName == null) {
              throw new MissingRequiredPropertyException("GetProjectIpAddressesServicesCluster", "clusterName");
            }
            this.clusterName = clusterName;
            return this;
        }
        @CustomType.Setter
        public Builder inbounds(List<String> inbounds) {
            if (inbounds == null) {
              throw new MissingRequiredPropertyException("GetProjectIpAddressesServicesCluster", "inbounds");
            }
            this.inbounds = inbounds;
            return this;
        }
        public Builder inbounds(String... inbounds) {
            return inbounds(List.of(inbounds));
        }
        @CustomType.Setter
        public Builder outbounds(List<String> outbounds) {
            if (outbounds == null) {
              throw new MissingRequiredPropertyException("GetProjectIpAddressesServicesCluster", "outbounds");
            }
            this.outbounds = outbounds;
            return this;
        }
        public Builder outbounds(String... outbounds) {
            return outbounds(List.of(outbounds));
        }
        public GetProjectIpAddressesServicesCluster build() {
            final var _resultValue = new GetProjectIpAddressesServicesCluster();
            _resultValue.clusterName = clusterName;
            _resultValue.inbounds = inbounds;
            _resultValue.outbounds = outbounds;
            return _resultValue;
        }
    }
}
