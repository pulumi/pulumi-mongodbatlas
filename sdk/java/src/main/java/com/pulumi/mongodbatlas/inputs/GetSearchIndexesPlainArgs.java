// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSearchIndexesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSearchIndexesPlainArgs Empty = new GetSearchIndexesPlainArgs();

    /**
     * Name of the cluster containing the collection with one or more Atlas Search indexes.
     * 
     */
    @Import(name="clusterName", required=true)
    private String clusterName;

    /**
     * @return Name of the cluster containing the collection with one or more Atlas Search indexes.
     * 
     */
    public String clusterName() {
        return this.clusterName;
    }

    /**
     * Name of the collection with one or more Atlas Search indexes.
     * 
     */
    @Import(name="collectionName", required=true)
    private String collectionName;

    /**
     * @return Name of the collection with one or more Atlas Search indexes.
     * 
     */
    public String collectionName() {
        return this.collectionName;
    }

    /**
     * (Required) Name of the database the collection is in.
     * 
     */
    @Import(name="database", required=true)
    private String database;

    /**
     * @return (Required) Name of the database the collection is in.
     * 
     */
    public String database() {
        return this.database;
    }

    /**
     * Number of items that Atlas returns per page, up to a maximum of 500. **WARNING:** this parameter is deprecated and will be removed in version 1.15.0
     * 
     * @deprecated
     * this parameter is deprecated and will be removed in version 1.15.0
     * 
     */
    @Deprecated /* this parameter is deprecated and will be removed in version 1.15.0 */
    @Import(name="itemsPerPage")
    private @Nullable Integer itemsPerPage;

    /**
     * @return Number of items that Atlas returns per page, up to a maximum of 500. **WARNING:** this parameter is deprecated and will be removed in version 1.15.0
     * 
     * @deprecated
     * this parameter is deprecated and will be removed in version 1.15.0
     * 
     */
    @Deprecated /* this parameter is deprecated and will be removed in version 1.15.0 */
    public Optional<Integer> itemsPerPage() {
        return Optional.ofNullable(this.itemsPerPage);
    }

    /**
     * Page number, starting with one, that Atlas returns of the total number of objects. **WARNING:** this parameter is deprecated and will be removed in version 1.15.0
     * 
     * @deprecated
     * this parameter is deprecated and will be removed in version 1.15.0
     * 
     */
    @Deprecated /* this parameter is deprecated and will be removed in version 1.15.0 */
    @Import(name="pageNum")
    private @Nullable Integer pageNum;

    /**
     * @return Page number, starting with one, that Atlas returns of the total number of objects. **WARNING:** this parameter is deprecated and will be removed in version 1.15.0
     * 
     * @deprecated
     * this parameter is deprecated and will be removed in version 1.15.0
     * 
     */
    @Deprecated /* this parameter is deprecated and will be removed in version 1.15.0 */
    public Optional<Integer> pageNum() {
        return Optional.ofNullable(this.pageNum);
    }

    /**
     * Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    private GetSearchIndexesPlainArgs() {}

    private GetSearchIndexesPlainArgs(GetSearchIndexesPlainArgs $) {
        this.clusterName = $.clusterName;
        this.collectionName = $.collectionName;
        this.database = $.database;
        this.itemsPerPage = $.itemsPerPage;
        this.pageNum = $.pageNum;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSearchIndexesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSearchIndexesPlainArgs $;

        public Builder() {
            $ = new GetSearchIndexesPlainArgs();
        }

        public Builder(GetSearchIndexesPlainArgs defaults) {
            $ = new GetSearchIndexesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName Name of the cluster containing the collection with one or more Atlas Search indexes.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param collectionName Name of the collection with one or more Atlas Search indexes.
         * 
         * @return builder
         * 
         */
        public Builder collectionName(String collectionName) {
            $.collectionName = collectionName;
            return this;
        }

        /**
         * @param database (Required) Name of the database the collection is in.
         * 
         * @return builder
         * 
         */
        public Builder database(String database) {
            $.database = database;
            return this;
        }

        /**
         * @param itemsPerPage Number of items that Atlas returns per page, up to a maximum of 500. **WARNING:** this parameter is deprecated and will be removed in version 1.15.0
         * 
         * @return builder
         * 
         * @deprecated
         * this parameter is deprecated and will be removed in version 1.15.0
         * 
         */
        @Deprecated /* this parameter is deprecated and will be removed in version 1.15.0 */
        public Builder itemsPerPage(@Nullable Integer itemsPerPage) {
            $.itemsPerPage = itemsPerPage;
            return this;
        }

        /**
         * @param pageNum Page number, starting with one, that Atlas returns of the total number of objects. **WARNING:** this parameter is deprecated and will be removed in version 1.15.0
         * 
         * @return builder
         * 
         * @deprecated
         * this parameter is deprecated and will be removed in version 1.15.0
         * 
         */
        @Deprecated /* this parameter is deprecated and will be removed in version 1.15.0 */
        public Builder pageNum(@Nullable Integer pageNum) {
            $.pageNum = pageNum;
            return this;
        }

        /**
         * @param projectId Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetSearchIndexesPlainArgs build() {
            $.clusterName = Objects.requireNonNull($.clusterName, "expected parameter 'clusterName' to be non-null");
            $.collectionName = Objects.requireNonNull($.collectionName, "expected parameter 'collectionName' to be non-null");
            $.database = Objects.requireNonNull($.database, "expected parameter 'database' to be non-null");
            $.projectId = Objects.requireNonNull($.projectId, "expected parameter 'projectId' to be non-null");
            return $;
        }
    }

}
