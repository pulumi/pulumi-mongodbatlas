// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetSearchIndexesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSearchIndexesPlainArgs Empty = new GetSearchIndexesPlainArgs();

    /**
     * Name of the cluster containing the collection with one or more Atlas Search indexes.
     * 
     */
    @Import(name="clusterName", required=true)
    private String clusterName;

    /**
     * @return Name of the cluster containing the collection with one or more Atlas Search indexes.
     * 
     */
    public String clusterName() {
        return this.clusterName;
    }

    /**
     * Name of the collection with one or more Atlas Search indexes.
     * 
     */
    @Import(name="collectionName", required=true)
    private String collectionName;

    /**
     * @return Name of the collection with one or more Atlas Search indexes.
     * 
     */
    public String collectionName() {
        return this.collectionName;
    }

    /**
     * (Required) Name of the database the collection is in.
     * 
     */
    @Import(name="database", required=true)
    private String database;

    /**
     * @return (Required) Name of the database the collection is in.
     * 
     */
    public String database() {
        return this.database;
    }

    /**
     * Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    private GetSearchIndexesPlainArgs() {}

    private GetSearchIndexesPlainArgs(GetSearchIndexesPlainArgs $) {
        this.clusterName = $.clusterName;
        this.collectionName = $.collectionName;
        this.database = $.database;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSearchIndexesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSearchIndexesPlainArgs $;

        public Builder() {
            $ = new GetSearchIndexesPlainArgs();
        }

        public Builder(GetSearchIndexesPlainArgs defaults) {
            $ = new GetSearchIndexesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName Name of the cluster containing the collection with one or more Atlas Search indexes.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param collectionName Name of the collection with one or more Atlas Search indexes.
         * 
         * @return builder
         * 
         */
        public Builder collectionName(String collectionName) {
            $.collectionName = collectionName;
            return this;
        }

        /**
         * @param database (Required) Name of the database the collection is in.
         * 
         * @return builder
         * 
         */
        public Builder database(String database) {
            $.database = database;
            return this;
        }

        /**
         * @param projectId Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetSearchIndexesPlainArgs build() {
            if ($.clusterName == null) {
                throw new MissingRequiredPropertyException("GetSearchIndexesPlainArgs", "clusterName");
            }
            if ($.collectionName == null) {
                throw new MissingRequiredPropertyException("GetSearchIndexesPlainArgs", "collectionName");
            }
            if ($.database == null) {
                throw new MissingRequiredPropertyException("GetSearchIndexesPlainArgs", "database");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetSearchIndexesPlainArgs", "projectId");
            }
            return $;
        }
    }

}
