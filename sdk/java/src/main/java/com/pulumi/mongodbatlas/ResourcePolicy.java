// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.mongodbatlas.ResourcePolicyArgs;
import com.pulumi.mongodbatlas.Utilities;
import com.pulumi.mongodbatlas.inputs.ResourcePolicyState;
import com.pulumi.mongodbatlas.outputs.ResourcePolicyCreatedByUser;
import com.pulumi.mongodbatlas.outputs.ResourcePolicyLastUpdatedByUser;
import com.pulumi.mongodbatlas.outputs.ResourcePolicyPolicy;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## # Resource: mongodbatlas.ResourcePolicy
 * 
 * `mongodbatlas.ResourcePolicy` provides a Resource Policy resource. The resource lets you create, edit and delete resource policies to prevent misconfigurations and reduce the need for corrective interventions in your organization.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Resource Policy resource can be imported using the org ID and policy ID, in the format `{ORG_ID}-{POLICY_ID}`, e.g.
 * 
 * For more information see: [MongoDB Atlas API - Resource Policies](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Resource-Policies) Documentation.
 * 
 */
@ResourceType(type="mongodbatlas:index/resourcePolicy:ResourcePolicy")
public class ResourcePolicy extends com.pulumi.resources.CustomResource {
    /**
     * The user that last updated the Atlas resource policy.
     * 
     */
    @Export(name="createdByUser", refs={ResourcePolicyCreatedByUser.class}, tree="[0]")
    private Output<ResourcePolicyCreatedByUser> createdByUser;

    /**
     * @return The user that last updated the Atlas resource policy.
     * 
     */
    public Output<ResourcePolicyCreatedByUser> createdByUser() {
        return this.createdByUser;
    }
    /**
     * Date and time in UTC when the Atlas resource policy was created.
     * 
     */
    @Export(name="createdDate", refs={String.class}, tree="[0]")
    private Output<String> createdDate;

    /**
     * @return Date and time in UTC when the Atlas resource policy was created.
     * 
     */
    public Output<String> createdDate() {
        return this.createdDate;
    }
    /**
     * Description of the Atlas resource policy.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the Atlas resource policy.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The user that last updated the Atlas resource policy.
     * 
     */
    @Export(name="lastUpdatedByUser", refs={ResourcePolicyLastUpdatedByUser.class}, tree="[0]")
    private Output<ResourcePolicyLastUpdatedByUser> lastUpdatedByUser;

    /**
     * @return The user that last updated the Atlas resource policy.
     * 
     */
    public Output<ResourcePolicyLastUpdatedByUser> lastUpdatedByUser() {
        return this.lastUpdatedByUser;
    }
    /**
     * Date and time in UTC when the Atlas resource policy was last updated.
     * 
     */
    @Export(name="lastUpdatedDate", refs={String.class}, tree="[0]")
    private Output<String> lastUpdatedDate;

    /**
     * @return Date and time in UTC when the Atlas resource policy was last updated.
     * 
     */
    public Output<String> lastUpdatedDate() {
        return this.lastUpdatedDate;
    }
    /**
     * Human-readable label that describes the Atlas resource policy.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Human-readable label that describes the Atlas resource policy.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output<String> orgId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }
    /**
     * List of policies that make up the Atlas resource policy.
     * 
     */
    @Export(name="policies", refs={List.class,ResourcePolicyPolicy.class}, tree="[0,1]")
    private Output<List<ResourcePolicyPolicy>> policies;

    /**
     * @return List of policies that make up the Atlas resource policy.
     * 
     */
    public Output<List<ResourcePolicyPolicy>> policies() {
        return this.policies;
    }
    /**
     * A string that identifies the version of the Atlas resource policy.
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    /**
     * @return A string that identifies the version of the Atlas resource policy.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ResourcePolicy(java.lang.String name) {
        this(name, ResourcePolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ResourcePolicy(java.lang.String name, ResourcePolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ResourcePolicy(java.lang.String name, ResourcePolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("mongodbatlas:index/resourcePolicy:ResourcePolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ResourcePolicy(java.lang.String name, Output<java.lang.String> id, @Nullable ResourcePolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("mongodbatlas:index/resourcePolicy:ResourcePolicy", name, state, makeResourceOptions(options, id), false);
    }

    private static ResourcePolicyArgs makeArgs(ResourcePolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ResourcePolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ResourcePolicy get(java.lang.String name, Output<java.lang.String> id, @Nullable ResourcePolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ResourcePolicy(name, id, state, options);
    }
}
