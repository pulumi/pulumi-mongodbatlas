// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AdvancedClusterAdvancedConfiguration {
    /**
     * @return The minimum pre- and post-image retention time in seconds. This option corresponds to the `changeStreamOptions.preAndPostImages.expireAfterSeconds` cluster parameter. Defaults to `-1`(off). This setting controls the retention policy of change stream pre- and post-images. Pre- and post-images are the versions of a document before and after document modification, respectively. `expireAfterSeconds` controls how long MongoDB retains pre- and post-images. When set to -1 (off), MongoDB uses the default retention policy: pre- and post-images are retained until the corresponding change stream events are removed from the oplog. To set the minimum pre- and post-image retention time, specify an integer value greater than zero. Setting this too low could increase the risk of interrupting Realm sync or triggers processing. This parameter is only supported for MongoDB version 6.0 and above.
     * 
     */
    private @Nullable Integer changeStreamOptionsPreAndPostImagesExpireAfterSeconds;
    /**
     * @return The custom OpenSSL cipher suite list for TLS 1.2. This field is only valid when `tls_cipher_config_mode` is set to `CUSTOM`.
     * 
     */
    private @Nullable List<String> customOpensslCipherConfigTls12s;
    /**
     * @return Default time limit in milliseconds for individual read operations to complete. This option corresponds to the [defaultMaxTimeMS](https://www.mongodb.com/docs/upcoming/reference/cluster-parameters/defaultMaxTimeMS/) cluster parameter. This parameter is supported only for MongoDB version 8.0 and above.
     * 
     */
    private @Nullable Integer defaultMaxTimeMs;
    /**
     * @return [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. **(DEPRECATED)** MongoDB 6.0 and later clusters default to `local`. To use a custom read concern level, please refer to your driver documentation.
     * 
     * @deprecated
     * This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     * 
     */
    @Deprecated /* This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide */
    private @Nullable String defaultReadConcern;
    /**
     * @return [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 6.0 clusters default to [majority](https://docs.mongodb.com/manual/reference/write-concern/).
     * 
     */
    private @Nullable String defaultWriteConcern;
    /**
     * @return **(DEPRECATED)** (Optional) When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
     * 
     * @deprecated
     * This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     * 
     */
    @Deprecated /* This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide */
    private @Nullable Boolean failIndexKeyTooLong;
    /**
     * @return When true (default), the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
     * 
     */
    private @Nullable Boolean javascriptEnabled;
    /**
     * @return Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections. Valid values are:
     * - TLS1_0
     * - TLS1_1
     * - TLS1_2
     * 
     */
    private @Nullable String minimumEnabledTlsProtocol;
    /**
     * @return When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
     * 
     */
    private @Nullable Boolean noTableScan;
    /**
     * @return Minimum retention window for cluster&#39;s oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
     * * **Note**  A minimum oplog retention is required when seeking to change a cluster&#39;s class to Local NVMe SSD. To learn more and for latest guidance see [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
     * 
     */
    private @Nullable Double oplogMinRetentionHours;
    /**
     * @return The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
     * 
     */
    private @Nullable Integer oplogSizeMb;
    /**
     * @return Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     * 
     */
    private @Nullable Integer sampleRefreshIntervalBiConnector;
    /**
     * @return Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     * 
     */
    private @Nullable Integer sampleSizeBiConnector;
    /**
     * @return The TLS cipher suite configuration mode. Valid values include `CUSTOM` or `DEFAULT`. The `DEFAULT` mode uses the default cipher suites. The `CUSTOM` mode allows you to specify custom cipher suites for both TLS 1.2 and TLS 1.3. To unset, this should be set back to `DEFAULT`.
     * 
     */
    private @Nullable String tlsCipherConfigMode;
    /**
     * @return Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
     * 
     */
    private @Nullable Integer transactionLifetimeLimitSeconds;

    private AdvancedClusterAdvancedConfiguration() {}
    /**
     * @return The minimum pre- and post-image retention time in seconds. This option corresponds to the `changeStreamOptions.preAndPostImages.expireAfterSeconds` cluster parameter. Defaults to `-1`(off). This setting controls the retention policy of change stream pre- and post-images. Pre- and post-images are the versions of a document before and after document modification, respectively. `expireAfterSeconds` controls how long MongoDB retains pre- and post-images. When set to -1 (off), MongoDB uses the default retention policy: pre- and post-images are retained until the corresponding change stream events are removed from the oplog. To set the minimum pre- and post-image retention time, specify an integer value greater than zero. Setting this too low could increase the risk of interrupting Realm sync or triggers processing. This parameter is only supported for MongoDB version 6.0 and above.
     * 
     */
    public Optional<Integer> changeStreamOptionsPreAndPostImagesExpireAfterSeconds() {
        return Optional.ofNullable(this.changeStreamOptionsPreAndPostImagesExpireAfterSeconds);
    }
    /**
     * @return The custom OpenSSL cipher suite list for TLS 1.2. This field is only valid when `tls_cipher_config_mode` is set to `CUSTOM`.
     * 
     */
    public List<String> customOpensslCipherConfigTls12s() {
        return this.customOpensslCipherConfigTls12s == null ? List.of() : this.customOpensslCipherConfigTls12s;
    }
    /**
     * @return Default time limit in milliseconds for individual read operations to complete. This option corresponds to the [defaultMaxTimeMS](https://www.mongodb.com/docs/upcoming/reference/cluster-parameters/defaultMaxTimeMS/) cluster parameter. This parameter is supported only for MongoDB version 8.0 and above.
     * 
     */
    public Optional<Integer> defaultMaxTimeMs() {
        return Optional.ofNullable(this.defaultMaxTimeMs);
    }
    /**
     * @return [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. **(DEPRECATED)** MongoDB 6.0 and later clusters default to `local`. To use a custom read concern level, please refer to your driver documentation.
     * 
     * @deprecated
     * This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     * 
     */
    @Deprecated /* This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide */
    public Optional<String> defaultReadConcern() {
        return Optional.ofNullable(this.defaultReadConcern);
    }
    /**
     * @return [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 6.0 clusters default to [majority](https://docs.mongodb.com/manual/reference/write-concern/).
     * 
     */
    public Optional<String> defaultWriteConcern() {
        return Optional.ofNullable(this.defaultWriteConcern);
    }
    /**
     * @return **(DEPRECATED)** (Optional) When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
     * 
     * @deprecated
     * This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     * 
     */
    @Deprecated /* This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide */
    public Optional<Boolean> failIndexKeyTooLong() {
        return Optional.ofNullable(this.failIndexKeyTooLong);
    }
    /**
     * @return When true (default), the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
     * 
     */
    public Optional<Boolean> javascriptEnabled() {
        return Optional.ofNullable(this.javascriptEnabled);
    }
    /**
     * @return Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections. Valid values are:
     * - TLS1_0
     * - TLS1_1
     * - TLS1_2
     * 
     */
    public Optional<String> minimumEnabledTlsProtocol() {
        return Optional.ofNullable(this.minimumEnabledTlsProtocol);
    }
    /**
     * @return When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
     * 
     */
    public Optional<Boolean> noTableScan() {
        return Optional.ofNullable(this.noTableScan);
    }
    /**
     * @return Minimum retention window for cluster&#39;s oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
     * * **Note**  A minimum oplog retention is required when seeking to change a cluster&#39;s class to Local NVMe SSD. To learn more and for latest guidance see [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
     * 
     */
    public Optional<Double> oplogMinRetentionHours() {
        return Optional.ofNullable(this.oplogMinRetentionHours);
    }
    /**
     * @return The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
     * 
     */
    public Optional<Integer> oplogSizeMb() {
        return Optional.ofNullable(this.oplogSizeMb);
    }
    /**
     * @return Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     * 
     */
    public Optional<Integer> sampleRefreshIntervalBiConnector() {
        return Optional.ofNullable(this.sampleRefreshIntervalBiConnector);
    }
    /**
     * @return Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     * 
     */
    public Optional<Integer> sampleSizeBiConnector() {
        return Optional.ofNullable(this.sampleSizeBiConnector);
    }
    /**
     * @return The TLS cipher suite configuration mode. Valid values include `CUSTOM` or `DEFAULT`. The `DEFAULT` mode uses the default cipher suites. The `CUSTOM` mode allows you to specify custom cipher suites for both TLS 1.2 and TLS 1.3. To unset, this should be set back to `DEFAULT`.
     * 
     */
    public Optional<String> tlsCipherConfigMode() {
        return Optional.ofNullable(this.tlsCipherConfigMode);
    }
    /**
     * @return Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
     * 
     */
    public Optional<Integer> transactionLifetimeLimitSeconds() {
        return Optional.ofNullable(this.transactionLifetimeLimitSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AdvancedClusterAdvancedConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer changeStreamOptionsPreAndPostImagesExpireAfterSeconds;
        private @Nullable List<String> customOpensslCipherConfigTls12s;
        private @Nullable Integer defaultMaxTimeMs;
        private @Nullable String defaultReadConcern;
        private @Nullable String defaultWriteConcern;
        private @Nullable Boolean failIndexKeyTooLong;
        private @Nullable Boolean javascriptEnabled;
        private @Nullable String minimumEnabledTlsProtocol;
        private @Nullable Boolean noTableScan;
        private @Nullable Double oplogMinRetentionHours;
        private @Nullable Integer oplogSizeMb;
        private @Nullable Integer sampleRefreshIntervalBiConnector;
        private @Nullable Integer sampleSizeBiConnector;
        private @Nullable String tlsCipherConfigMode;
        private @Nullable Integer transactionLifetimeLimitSeconds;
        public Builder() {}
        public Builder(AdvancedClusterAdvancedConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.changeStreamOptionsPreAndPostImagesExpireAfterSeconds = defaults.changeStreamOptionsPreAndPostImagesExpireAfterSeconds;
    	      this.customOpensslCipherConfigTls12s = defaults.customOpensslCipherConfigTls12s;
    	      this.defaultMaxTimeMs = defaults.defaultMaxTimeMs;
    	      this.defaultReadConcern = defaults.defaultReadConcern;
    	      this.defaultWriteConcern = defaults.defaultWriteConcern;
    	      this.failIndexKeyTooLong = defaults.failIndexKeyTooLong;
    	      this.javascriptEnabled = defaults.javascriptEnabled;
    	      this.minimumEnabledTlsProtocol = defaults.minimumEnabledTlsProtocol;
    	      this.noTableScan = defaults.noTableScan;
    	      this.oplogMinRetentionHours = defaults.oplogMinRetentionHours;
    	      this.oplogSizeMb = defaults.oplogSizeMb;
    	      this.sampleRefreshIntervalBiConnector = defaults.sampleRefreshIntervalBiConnector;
    	      this.sampleSizeBiConnector = defaults.sampleSizeBiConnector;
    	      this.tlsCipherConfigMode = defaults.tlsCipherConfigMode;
    	      this.transactionLifetimeLimitSeconds = defaults.transactionLifetimeLimitSeconds;
        }

        @CustomType.Setter
        public Builder changeStreamOptionsPreAndPostImagesExpireAfterSeconds(@Nullable Integer changeStreamOptionsPreAndPostImagesExpireAfterSeconds) {

            this.changeStreamOptionsPreAndPostImagesExpireAfterSeconds = changeStreamOptionsPreAndPostImagesExpireAfterSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder customOpensslCipherConfigTls12s(@Nullable List<String> customOpensslCipherConfigTls12s) {

            this.customOpensslCipherConfigTls12s = customOpensslCipherConfigTls12s;
            return this;
        }
        public Builder customOpensslCipherConfigTls12s(String... customOpensslCipherConfigTls12s) {
            return customOpensslCipherConfigTls12s(List.of(customOpensslCipherConfigTls12s));
        }
        @CustomType.Setter
        public Builder defaultMaxTimeMs(@Nullable Integer defaultMaxTimeMs) {

            this.defaultMaxTimeMs = defaultMaxTimeMs;
            return this;
        }
        @CustomType.Setter
        public Builder defaultReadConcern(@Nullable String defaultReadConcern) {

            this.defaultReadConcern = defaultReadConcern;
            return this;
        }
        @CustomType.Setter
        public Builder defaultWriteConcern(@Nullable String defaultWriteConcern) {

            this.defaultWriteConcern = defaultWriteConcern;
            return this;
        }
        @CustomType.Setter
        public Builder failIndexKeyTooLong(@Nullable Boolean failIndexKeyTooLong) {

            this.failIndexKeyTooLong = failIndexKeyTooLong;
            return this;
        }
        @CustomType.Setter
        public Builder javascriptEnabled(@Nullable Boolean javascriptEnabled) {

            this.javascriptEnabled = javascriptEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder minimumEnabledTlsProtocol(@Nullable String minimumEnabledTlsProtocol) {

            this.minimumEnabledTlsProtocol = minimumEnabledTlsProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder noTableScan(@Nullable Boolean noTableScan) {

            this.noTableScan = noTableScan;
            return this;
        }
        @CustomType.Setter
        public Builder oplogMinRetentionHours(@Nullable Double oplogMinRetentionHours) {

            this.oplogMinRetentionHours = oplogMinRetentionHours;
            return this;
        }
        @CustomType.Setter
        public Builder oplogSizeMb(@Nullable Integer oplogSizeMb) {

            this.oplogSizeMb = oplogSizeMb;
            return this;
        }
        @CustomType.Setter
        public Builder sampleRefreshIntervalBiConnector(@Nullable Integer sampleRefreshIntervalBiConnector) {

            this.sampleRefreshIntervalBiConnector = sampleRefreshIntervalBiConnector;
            return this;
        }
        @CustomType.Setter
        public Builder sampleSizeBiConnector(@Nullable Integer sampleSizeBiConnector) {

            this.sampleSizeBiConnector = sampleSizeBiConnector;
            return this;
        }
        @CustomType.Setter
        public Builder tlsCipherConfigMode(@Nullable String tlsCipherConfigMode) {

            this.tlsCipherConfigMode = tlsCipherConfigMode;
            return this;
        }
        @CustomType.Setter
        public Builder transactionLifetimeLimitSeconds(@Nullable Integer transactionLifetimeLimitSeconds) {

            this.transactionLifetimeLimitSeconds = transactionLifetimeLimitSeconds;
            return this;
        }
        public AdvancedClusterAdvancedConfiguration build() {
            final var _resultValue = new AdvancedClusterAdvancedConfiguration();
            _resultValue.changeStreamOptionsPreAndPostImagesExpireAfterSeconds = changeStreamOptionsPreAndPostImagesExpireAfterSeconds;
            _resultValue.customOpensslCipherConfigTls12s = customOpensslCipherConfigTls12s;
            _resultValue.defaultMaxTimeMs = defaultMaxTimeMs;
            _resultValue.defaultReadConcern = defaultReadConcern;
            _resultValue.defaultWriteConcern = defaultWriteConcern;
            _resultValue.failIndexKeyTooLong = failIndexKeyTooLong;
            _resultValue.javascriptEnabled = javascriptEnabled;
            _resultValue.minimumEnabledTlsProtocol = minimumEnabledTlsProtocol;
            _resultValue.noTableScan = noTableScan;
            _resultValue.oplogMinRetentionHours = oplogMinRetentionHours;
            _resultValue.oplogSizeMb = oplogSizeMb;
            _resultValue.sampleRefreshIntervalBiConnector = sampleRefreshIntervalBiConnector;
            _resultValue.sampleSizeBiConnector = sampleSizeBiConnector;
            _resultValue.tlsCipherConfigMode = tlsCipherConfigMode;
            _resultValue.transactionLifetimeLimitSeconds = transactionLifetimeLimitSeconds;
            return _resultValue;
        }
    }
}
