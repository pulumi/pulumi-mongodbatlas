// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMongodbEmployeeAccessGrantResult {
    /**
     * @return Human-readable label that identifies this cluster.
     * 
     */
    private String clusterName;
    private String expirationTime;
    private String grantType;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     * 
     */
    private String projectId;

    private GetMongodbEmployeeAccessGrantResult() {}
    /**
     * @return Human-readable label that identifies this cluster.
     * 
     */
    public String clusterName() {
        return this.clusterName;
    }
    public String expirationTime() {
        return this.expirationTime;
    }
    public String grantType() {
        return this.grantType;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMongodbEmployeeAccessGrantResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterName;
        private String expirationTime;
        private String grantType;
        private String id;
        private String projectId;
        public Builder() {}
        public Builder(GetMongodbEmployeeAccessGrantResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterName = defaults.clusterName;
    	      this.expirationTime = defaults.expirationTime;
    	      this.grantType = defaults.grantType;
    	      this.id = defaults.id;
    	      this.projectId = defaults.projectId;
        }

        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            if (clusterName == null) {
              throw new MissingRequiredPropertyException("GetMongodbEmployeeAccessGrantResult", "clusterName");
            }
            this.clusterName = clusterName;
            return this;
        }
        @CustomType.Setter
        public Builder expirationTime(String expirationTime) {
            if (expirationTime == null) {
              throw new MissingRequiredPropertyException("GetMongodbEmployeeAccessGrantResult", "expirationTime");
            }
            this.expirationTime = expirationTime;
            return this;
        }
        @CustomType.Setter
        public Builder grantType(String grantType) {
            if (grantType == null) {
              throw new MissingRequiredPropertyException("GetMongodbEmployeeAccessGrantResult", "grantType");
            }
            this.grantType = grantType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMongodbEmployeeAccessGrantResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetMongodbEmployeeAccessGrantResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        public GetMongodbEmployeeAccessGrantResult build() {
            final var _resultValue = new GetMongodbEmployeeAccessGrantResult();
            _resultValue.clusterName = clusterName;
            _resultValue.expirationTime = expirationTime;
            _resultValue.grantType = grantType;
            _resultValue.id = id;
            _resultValue.projectId = projectId;
            return _resultValue;
        }
    }
}
