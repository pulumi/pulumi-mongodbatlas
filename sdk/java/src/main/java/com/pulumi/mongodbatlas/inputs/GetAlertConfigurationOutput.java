// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAlertConfigurationOutput extends com.pulumi.resources.InvokeArgs {

    public static final GetAlertConfigurationOutput Empty = new GetAlertConfigurationOutput();

    @Import(name="label")
    private @Nullable String label;

    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * If the output is requested, you must specify its type. The format is computed as `output.#.value`, the following are the supported types:
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return If the output is requested, you must specify its type. The format is computed as `output.#.value`, the following are the supported types:
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * Value to test with the specified operator. If `field_name` is set to TYPE_NAME, you can match on the following values:
     * 
     */
    @Import(name="value", required=true)
    private String value;

    /**
     * @return Value to test with the specified operator. If `field_name` is set to TYPE_NAME, you can match on the following values:
     * 
     */
    public String value() {
        return this.value;
    }

    private GetAlertConfigurationOutput() {}

    private GetAlertConfigurationOutput(GetAlertConfigurationOutput $) {
        this.label = $.label;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAlertConfigurationOutput defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAlertConfigurationOutput $;

        public Builder() {
            $ = new GetAlertConfigurationOutput();
        }

        public Builder(GetAlertConfigurationOutput defaults) {
            $ = new GetAlertConfigurationOutput(Objects.requireNonNull(defaults));
        }

        public Builder label(@Nullable String label) {
            $.label = label;
            return this;
        }

        /**
         * @param type If the output is requested, you must specify its type. The format is computed as `output.#.value`, the following are the supported types:
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param value Value to test with the specified operator. If `field_name` is set to TYPE_NAME, you can match on the following values:
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            $.value = value;
            return this;
        }

        public GetAlertConfigurationOutput build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
