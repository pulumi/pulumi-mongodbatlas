// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetMongodbEmployeeAccessGrantPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMongodbEmployeeAccessGrantPlainArgs Empty = new GetMongodbEmployeeAccessGrantPlainArgs();

    /**
     * Human-readable label that identifies this cluster.
     * 
     */
    @Import(name="clusterName", required=true)
    private String clusterName;

    /**
     * @return Human-readable label that identifies this cluster.
     * 
     */
    public String clusterName() {
        return this.clusterName;
    }

    /**
     * Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    private GetMongodbEmployeeAccessGrantPlainArgs() {}

    private GetMongodbEmployeeAccessGrantPlainArgs(GetMongodbEmployeeAccessGrantPlainArgs $) {
        this.clusterName = $.clusterName;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMongodbEmployeeAccessGrantPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMongodbEmployeeAccessGrantPlainArgs $;

        public Builder() {
            $ = new GetMongodbEmployeeAccessGrantPlainArgs();
        }

        public Builder(GetMongodbEmployeeAccessGrantPlainArgs defaults) {
            $ = new GetMongodbEmployeeAccessGrantPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName Human-readable label that identifies this cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param projectId Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetMongodbEmployeeAccessGrantPlainArgs build() {
            if ($.clusterName == null) {
                throw new MissingRequiredPropertyException("GetMongodbEmployeeAccessGrantPlainArgs", "clusterName");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetMongodbEmployeeAccessGrantPlainArgs", "projectId");
            }
            return $;
        }
    }

}
