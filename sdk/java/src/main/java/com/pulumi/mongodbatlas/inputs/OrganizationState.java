// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationState extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationState Empty = new OrganizationState();

    /**
     * Flag that indicates whether to require API operations to originate from an IP Address added to the API access list for the specified organization.
     * 
     */
    @Import(name="apiAccessListRequired")
    private @Nullable Output<Boolean> apiAccessListRequired;

    /**
     * @return Flag that indicates whether to require API operations to originate from an IP Address added to the API access list for the specified organization.
     * 
     */
    public Optional<Output<Boolean>> apiAccessListRequired() {
        return Optional.ofNullable(this.apiAccessListRequired);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Unique 24-hexadecimal digit string that identifies the federation to link the newly created organization to. If specified, the proposed Organization Owner of the new organization must have the Organization Owner role in an organization associated with the federation.
     * 
     */
    @Import(name="federationSettingsId")
    private @Nullable Output<String> federationSettingsId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies the federation to link the newly created organization to. If specified, the proposed Organization Owner of the new organization must have the Organization Owner role in an organization associated with the federation.
     * 
     */
    public Optional<Output<String>> federationSettingsId() {
        return Optional.ofNullable(this.federationSettingsId);
    }

    /**
     * Flag that indicates whether to require users to set up Multi-Factor Authentication (MFA) before accessing the specified organization. To learn more, see: &lt;https://www.mongodb.com/docs/atlas/security-multi-factor-authentication/&gt;.
     * 
     */
    @Import(name="multiFactorAuthRequired")
    private @Nullable Output<Boolean> multiFactorAuthRequired;

    /**
     * @return Flag that indicates whether to require users to set up Multi-Factor Authentication (MFA) before accessing the specified organization. To learn more, see: &lt;https://www.mongodb.com/docs/atlas/security-multi-factor-authentication/&gt;.
     * 
     */
    public Optional<Output<Boolean>> multiFactorAuthRequired() {
        return Optional.ofNullable(this.multiFactorAuthRequired);
    }

    /**
     * The name of the organization you want to create. (Cannot be changed via this Provider after creation.)
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the organization you want to create. (Cannot be changed via this Provider after creation.)
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The organization id.
     * 
     */
    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    /**
     * @return The organization id.
     * 
     */
    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * Unique 24-hexadecimal digit string that identifies the Atlas user that you want to assign the Organization Owner role. This user must be a member of the same organization as the calling API key.  This is only required when authenticating with Programmatic API Keys. [MongoDB Atlas Admin API - Get User By Username](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/MongoDB-Cloud-Users/operation/getUserByUsername)
     * 
     */
    @Import(name="orgOwnerId")
    private @Nullable Output<String> orgOwnerId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies the Atlas user that you want to assign the Organization Owner role. This user must be a member of the same organization as the calling API key.  This is only required when authenticating with Programmatic API Keys. [MongoDB Atlas Admin API - Get User By Username](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/MongoDB-Cloud-Users/operation/getUserByUsername)
     * 
     */
    public Optional<Output<String>> orgOwnerId() {
        return Optional.ofNullable(this.orgOwnerId);
    }

    @Import(name="privateKey")
    private @Nullable Output<String> privateKey;

    public Optional<Output<String>> privateKey() {
        return Optional.ofNullable(this.privateKey);
    }

    /**
     * Public API key value set for the specified organization API key.
     * 
     */
    @Import(name="publicKey")
    private @Nullable Output<String> publicKey;

    /**
     * @return Public API key value set for the specified organization API key.
     * 
     */
    public Optional<Output<String>> publicKey() {
        return Optional.ofNullable(this.publicKey);
    }

    /**
     * Flag that indicates whether to block MongoDB Support from accessing Atlas infrastructure for any deployment in the specified organization without explicit permission. Once this setting is turned on, you can grant MongoDB Support a 24-hour bypass access to the Atlas deployment to resolve support issues. To learn more, see: &lt;https://www.mongodb.com/docs/atlas/security-restrict-support-access/&gt;.
     * 
     */
    @Import(name="restrictEmployeeAccess")
    private @Nullable Output<Boolean> restrictEmployeeAccess;

    /**
     * @return Flag that indicates whether to block MongoDB Support from accessing Atlas infrastructure for any deployment in the specified organization without explicit permission. Once this setting is turned on, you can grant MongoDB Support a 24-hour bypass access to the Atlas deployment to resolve support issues. To learn more, see: &lt;https://www.mongodb.com/docs/atlas/security-restrict-support-access/&gt;.
     * 
     */
    public Optional<Output<Boolean>> restrictEmployeeAccess() {
        return Optional.ofNullable(this.restrictEmployeeAccess);
    }

    /**
     * List of Organization roles that the Programmatic API key needs to have. Ensure that you provide at least one role and ensure all roles are valid for the Organization.  You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles that you can assign to a Programmatic API key.
     * 
     */
    @Import(name="roleNames")
    private @Nullable Output<List<String>> roleNames;

    /**
     * @return List of Organization roles that the Programmatic API key needs to have. Ensure that you provide at least one role and ensure all roles are valid for the Organization.  You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles that you can assign to a Programmatic API key.
     * 
     */
    public Optional<Output<List<String>>> roleNames() {
        return Optional.ofNullable(this.roleNames);
    }

    private OrganizationState() {}

    private OrganizationState(OrganizationState $) {
        this.apiAccessListRequired = $.apiAccessListRequired;
        this.description = $.description;
        this.federationSettingsId = $.federationSettingsId;
        this.multiFactorAuthRequired = $.multiFactorAuthRequired;
        this.name = $.name;
        this.orgId = $.orgId;
        this.orgOwnerId = $.orgOwnerId;
        this.privateKey = $.privateKey;
        this.publicKey = $.publicKey;
        this.restrictEmployeeAccess = $.restrictEmployeeAccess;
        this.roleNames = $.roleNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationState $;

        public Builder() {
            $ = new OrganizationState();
        }

        public Builder(OrganizationState defaults) {
            $ = new OrganizationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiAccessListRequired Flag that indicates whether to require API operations to originate from an IP Address added to the API access list for the specified organization.
         * 
         * @return builder
         * 
         */
        public Builder apiAccessListRequired(@Nullable Output<Boolean> apiAccessListRequired) {
            $.apiAccessListRequired = apiAccessListRequired;
            return this;
        }

        /**
         * @param apiAccessListRequired Flag that indicates whether to require API operations to originate from an IP Address added to the API access list for the specified organization.
         * 
         * @return builder
         * 
         */
        public Builder apiAccessListRequired(Boolean apiAccessListRequired) {
            return apiAccessListRequired(Output.of(apiAccessListRequired));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param federationSettingsId Unique 24-hexadecimal digit string that identifies the federation to link the newly created organization to. If specified, the proposed Organization Owner of the new organization must have the Organization Owner role in an organization associated with the federation.
         * 
         * @return builder
         * 
         */
        public Builder federationSettingsId(@Nullable Output<String> federationSettingsId) {
            $.federationSettingsId = federationSettingsId;
            return this;
        }

        /**
         * @param federationSettingsId Unique 24-hexadecimal digit string that identifies the federation to link the newly created organization to. If specified, the proposed Organization Owner of the new organization must have the Organization Owner role in an organization associated with the federation.
         * 
         * @return builder
         * 
         */
        public Builder federationSettingsId(String federationSettingsId) {
            return federationSettingsId(Output.of(federationSettingsId));
        }

        /**
         * @param multiFactorAuthRequired Flag that indicates whether to require users to set up Multi-Factor Authentication (MFA) before accessing the specified organization. To learn more, see: &lt;https://www.mongodb.com/docs/atlas/security-multi-factor-authentication/&gt;.
         * 
         * @return builder
         * 
         */
        public Builder multiFactorAuthRequired(@Nullable Output<Boolean> multiFactorAuthRequired) {
            $.multiFactorAuthRequired = multiFactorAuthRequired;
            return this;
        }

        /**
         * @param multiFactorAuthRequired Flag that indicates whether to require users to set up Multi-Factor Authentication (MFA) before accessing the specified organization. To learn more, see: &lt;https://www.mongodb.com/docs/atlas/security-multi-factor-authentication/&gt;.
         * 
         * @return builder
         * 
         */
        public Builder multiFactorAuthRequired(Boolean multiFactorAuthRequired) {
            return multiFactorAuthRequired(Output.of(multiFactorAuthRequired));
        }

        /**
         * @param name The name of the organization you want to create. (Cannot be changed via this Provider after creation.)
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the organization you want to create. (Cannot be changed via this Provider after creation.)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orgId The organization id.
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId The organization id.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param orgOwnerId Unique 24-hexadecimal digit string that identifies the Atlas user that you want to assign the Organization Owner role. This user must be a member of the same organization as the calling API key.  This is only required when authenticating with Programmatic API Keys. [MongoDB Atlas Admin API - Get User By Username](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/MongoDB-Cloud-Users/operation/getUserByUsername)
         * 
         * @return builder
         * 
         */
        public Builder orgOwnerId(@Nullable Output<String> orgOwnerId) {
            $.orgOwnerId = orgOwnerId;
            return this;
        }

        /**
         * @param orgOwnerId Unique 24-hexadecimal digit string that identifies the Atlas user that you want to assign the Organization Owner role. This user must be a member of the same organization as the calling API key.  This is only required when authenticating with Programmatic API Keys. [MongoDB Atlas Admin API - Get User By Username](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/MongoDB-Cloud-Users/operation/getUserByUsername)
         * 
         * @return builder
         * 
         */
        public Builder orgOwnerId(String orgOwnerId) {
            return orgOwnerId(Output.of(orgOwnerId));
        }

        public Builder privateKey(@Nullable Output<String> privateKey) {
            $.privateKey = privateKey;
            return this;
        }

        public Builder privateKey(String privateKey) {
            return privateKey(Output.of(privateKey));
        }

        /**
         * @param publicKey Public API key value set for the specified organization API key.
         * 
         * @return builder
         * 
         */
        public Builder publicKey(@Nullable Output<String> publicKey) {
            $.publicKey = publicKey;
            return this;
        }

        /**
         * @param publicKey Public API key value set for the specified organization API key.
         * 
         * @return builder
         * 
         */
        public Builder publicKey(String publicKey) {
            return publicKey(Output.of(publicKey));
        }

        /**
         * @param restrictEmployeeAccess Flag that indicates whether to block MongoDB Support from accessing Atlas infrastructure for any deployment in the specified organization without explicit permission. Once this setting is turned on, you can grant MongoDB Support a 24-hour bypass access to the Atlas deployment to resolve support issues. To learn more, see: &lt;https://www.mongodb.com/docs/atlas/security-restrict-support-access/&gt;.
         * 
         * @return builder
         * 
         */
        public Builder restrictEmployeeAccess(@Nullable Output<Boolean> restrictEmployeeAccess) {
            $.restrictEmployeeAccess = restrictEmployeeAccess;
            return this;
        }

        /**
         * @param restrictEmployeeAccess Flag that indicates whether to block MongoDB Support from accessing Atlas infrastructure for any deployment in the specified organization without explicit permission. Once this setting is turned on, you can grant MongoDB Support a 24-hour bypass access to the Atlas deployment to resolve support issues. To learn more, see: &lt;https://www.mongodb.com/docs/atlas/security-restrict-support-access/&gt;.
         * 
         * @return builder
         * 
         */
        public Builder restrictEmployeeAccess(Boolean restrictEmployeeAccess) {
            return restrictEmployeeAccess(Output.of(restrictEmployeeAccess));
        }

        /**
         * @param roleNames List of Organization roles that the Programmatic API key needs to have. Ensure that you provide at least one role and ensure all roles are valid for the Organization.  You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles that you can assign to a Programmatic API key.
         * 
         * @return builder
         * 
         */
        public Builder roleNames(@Nullable Output<List<String>> roleNames) {
            $.roleNames = roleNames;
            return this;
        }

        /**
         * @param roleNames List of Organization roles that the Programmatic API key needs to have. Ensure that you provide at least one role and ensure all roles are valid for the Organization.  You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles that you can assign to a Programmatic API key.
         * 
         * @return builder
         * 
         */
        public Builder roleNames(List<String> roleNames) {
            return roleNames(Output.of(roleNames));
        }

        /**
         * @param roleNames List of Organization roles that the Programmatic API key needs to have. Ensure that you provide at least one role and ensure all roles are valid for the Organization.  You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles that you can assign to a Programmatic API key.
         * 
         * @return builder
         * 
         */
        public Builder roleNames(String... roleNames) {
            return roleNames(List.of(roleNames));
        }

        public OrganizationState build() {
            return $;
        }
    }

}
