// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetCloudProviderAccessSetupAzureConfig extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudProviderAccessSetupAzureConfig Empty = new GetCloudProviderAccessSetupAzureConfig();

    /**
     * Azure Active Directory Application ID of Atlas.
     * 
     */
    @Import(name="atlasAzureAppId", required=true)
    private String atlasAzureAppId;

    /**
     * @return Azure Active Directory Application ID of Atlas.
     * 
     */
    public String atlasAzureAppId() {
        return this.atlasAzureAppId;
    }

    /**
     * UUID string that identifies the Azure Service Principal.
     * 
     */
    @Import(name="servicePrincipalId", required=true)
    private String servicePrincipalId;

    /**
     * @return UUID string that identifies the Azure Service Principal.
     * 
     */
    public String servicePrincipalId() {
        return this.servicePrincipalId;
    }

    /**
     * UUID String that identifies the Azure Active Directory Tenant ID.
     * 
     */
    @Import(name="tenantId", required=true)
    private String tenantId;

    /**
     * @return UUID String that identifies the Azure Active Directory Tenant ID.
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }

    private GetCloudProviderAccessSetupAzureConfig() {}

    private GetCloudProviderAccessSetupAzureConfig(GetCloudProviderAccessSetupAzureConfig $) {
        this.atlasAzureAppId = $.atlasAzureAppId;
        this.servicePrincipalId = $.servicePrincipalId;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudProviderAccessSetupAzureConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudProviderAccessSetupAzureConfig $;

        public Builder() {
            $ = new GetCloudProviderAccessSetupAzureConfig();
        }

        public Builder(GetCloudProviderAccessSetupAzureConfig defaults) {
            $ = new GetCloudProviderAccessSetupAzureConfig(Objects.requireNonNull(defaults));
        }

        /**
         * @param atlasAzureAppId Azure Active Directory Application ID of Atlas.
         * 
         * @return builder
         * 
         */
        public Builder atlasAzureAppId(String atlasAzureAppId) {
            $.atlasAzureAppId = atlasAzureAppId;
            return this;
        }

        /**
         * @param servicePrincipalId UUID string that identifies the Azure Service Principal.
         * 
         * @return builder
         * 
         */
        public Builder servicePrincipalId(String servicePrincipalId) {
            $.servicePrincipalId = servicePrincipalId;
            return this;
        }

        /**
         * @param tenantId UUID String that identifies the Azure Active Directory Tenant ID.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public GetCloudProviderAccessSetupAzureConfig build() {
            if ($.atlasAzureAppId == null) {
                throw new MissingRequiredPropertyException("GetCloudProviderAccessSetupAzureConfig", "atlasAzureAppId");
            }
            if ($.servicePrincipalId == null) {
                throw new MissingRequiredPropertyException("GetCloudProviderAccessSetupAzureConfig", "servicePrincipalId");
            }
            if ($.tenantId == null) {
                throw new MissingRequiredPropertyException("GetCloudProviderAccessSetupAzureConfig", "tenantId");
            }
            return $;
        }
    }

}
