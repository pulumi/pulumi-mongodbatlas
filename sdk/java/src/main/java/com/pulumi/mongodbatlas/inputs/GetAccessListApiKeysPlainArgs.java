// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAccessListApiKeysPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAccessListApiKeysPlainArgs Empty = new GetAccessListApiKeysPlainArgs();

    /**
     * Unique identifier for the Organization API Key for which you want to retrieve an access list entry.
     * *
     * &gt; **NOTE:** One of the following attributes must set: `cidr_block`  or `ip_address` not both.
     * 
     */
    @Import(name="apiKeyId", required=true)
    private String apiKeyId;

    /**
     * @return Unique identifier for the Organization API Key for which you want to retrieve an access list entry.
     * *
     * &gt; **NOTE:** One of the following attributes must set: `cidr_block`  or `ip_address` not both.
     * 
     */
    public String apiKeyId() {
        return this.apiKeyId;
    }

    /**
     * Number of items to return per page, up to a maximum of 500. Defaults to `100`.
     * 
     */
    @Import(name="itemsPerPage")
    private @Nullable Integer itemsPerPage;

    /**
     * @return Number of items to return per page, up to a maximum of 500. Defaults to `100`.
     * 
     */
    public Optional<Integer> itemsPerPage() {
        return Optional.ofNullable(this.itemsPerPage);
    }

    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
     * 
     */
    @Import(name="orgId", required=true)
    private String orgId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
     * 
     */
    public String orgId() {
        return this.orgId;
    }

    /**
     * The page to return. Defaults to `1`.
     * 
     */
    @Import(name="pageNum")
    private @Nullable Integer pageNum;

    /**
     * @return The page to return. Defaults to `1`.
     * 
     */
    public Optional<Integer> pageNum() {
        return Optional.ofNullable(this.pageNum);
    }

    private GetAccessListApiKeysPlainArgs() {}

    private GetAccessListApiKeysPlainArgs(GetAccessListApiKeysPlainArgs $) {
        this.apiKeyId = $.apiKeyId;
        this.itemsPerPage = $.itemsPerPage;
        this.orgId = $.orgId;
        this.pageNum = $.pageNum;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccessListApiKeysPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccessListApiKeysPlainArgs $;

        public Builder() {
            $ = new GetAccessListApiKeysPlainArgs();
        }

        public Builder(GetAccessListApiKeysPlainArgs defaults) {
            $ = new GetAccessListApiKeysPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiKeyId Unique identifier for the Organization API Key for which you want to retrieve an access list entry.
         * *
         * &gt; **NOTE:** One of the following attributes must set: `cidr_block`  or `ip_address` not both.
         * 
         * @return builder
         * 
         */
        public Builder apiKeyId(String apiKeyId) {
            $.apiKeyId = apiKeyId;
            return this;
        }

        /**
         * @param itemsPerPage Number of items to return per page, up to a maximum of 500. Defaults to `100`.
         * 
         * @return builder
         * 
         */
        public Builder itemsPerPage(@Nullable Integer itemsPerPage) {
            $.itemsPerPage = itemsPerPage;
            return this;
        }

        /**
         * @param orgId Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param pageNum The page to return. Defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder pageNum(@Nullable Integer pageNum) {
            $.pageNum = pageNum;
            return this;
        }

        public GetAccessListApiKeysPlainArgs build() {
            if ($.apiKeyId == null) {
                throw new MissingRequiredPropertyException("GetAccessListApiKeysPlainArgs", "apiKeyId");
            }
            if ($.orgId == null) {
                throw new MissingRequiredPropertyException("GetAccessListApiKeysPlainArgs", "orgId");
            }
            return $;
        }
    }

}
