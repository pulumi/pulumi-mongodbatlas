// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPushBasedLogExportResult {
    private String bucketName;
    private String createDate;
    private String iamRoleId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String prefixPath;
    /**
     * @return Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     * 
     */
    private String projectId;
    private String state;

    private GetPushBasedLogExportResult() {}
    public String bucketName() {
        return this.bucketName;
    }
    public String createDate() {
        return this.createDate;
    }
    public String iamRoleId() {
        return this.iamRoleId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String prefixPath() {
        return this.prefixPath;
    }
    /**
     * @return Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPushBasedLogExportResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucketName;
        private String createDate;
        private String iamRoleId;
        private String id;
        private String prefixPath;
        private String projectId;
        private String state;
        public Builder() {}
        public Builder(GetPushBasedLogExportResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.createDate = defaults.createDate;
    	      this.iamRoleId = defaults.iamRoleId;
    	      this.id = defaults.id;
    	      this.prefixPath = defaults.prefixPath;
    	      this.projectId = defaults.projectId;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder bucketName(String bucketName) {
            if (bucketName == null) {
              throw new MissingRequiredPropertyException("GetPushBasedLogExportResult", "bucketName");
            }
            this.bucketName = bucketName;
            return this;
        }
        @CustomType.Setter
        public Builder createDate(String createDate) {
            if (createDate == null) {
              throw new MissingRequiredPropertyException("GetPushBasedLogExportResult", "createDate");
            }
            this.createDate = createDate;
            return this;
        }
        @CustomType.Setter
        public Builder iamRoleId(String iamRoleId) {
            if (iamRoleId == null) {
              throw new MissingRequiredPropertyException("GetPushBasedLogExportResult", "iamRoleId");
            }
            this.iamRoleId = iamRoleId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPushBasedLogExportResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder prefixPath(String prefixPath) {
            if (prefixPath == null) {
              throw new MissingRequiredPropertyException("GetPushBasedLogExportResult", "prefixPath");
            }
            this.prefixPath = prefixPath;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetPushBasedLogExportResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetPushBasedLogExportResult", "state");
            }
            this.state = state;
            return this;
        }
        public GetPushBasedLogExportResult build() {
            final var _resultValue = new GetPushBasedLogExportResult();
            _resultValue.bucketName = bucketName;
            _resultValue.createDate = createDate;
            _resultValue.iamRoleId = iamRoleId;
            _resultValue.id = id;
            _resultValue.prefixPath = prefixPath;
            _resultValue.projectId = projectId;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
