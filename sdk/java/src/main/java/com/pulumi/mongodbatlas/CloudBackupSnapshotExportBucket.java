// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.mongodbatlas.CloudBackupSnapshotExportBucketArgs;
import com.pulumi.mongodbatlas.Utilities;
import com.pulumi.mongodbatlas.inputs.CloudBackupSnapshotExportBucketState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## # Resource: mongodbatlas.CloudBackupSnapshotExportBucket
 * 
 * `mongodbatlas.CloudBackupSnapshotExportBucket` allows you to create an export snapshot bucket for the specified project.
 * 
 * &gt; **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 * 
 * &gt; **NOTE:** To prevent errors during resource destruction, ensure that no `mongodbatlas.CloudBackupSchedule` resource that defines an automatic export policy references this resource. If you must update related `mongodbatlas.CloudBackupSchedule` resources, make these updates in isolated `pulumi up` operations first, then run the operation that destroys the `mongodbatlas.CloudBackupSnapshotExportBucket` resource.
 * 
 * ## Example Usage
 * 
 * ### AWS Example
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.mongodbatlas.CloudBackupSnapshotExportBucket;
 * import com.pulumi.mongodbatlas.CloudBackupSnapshotExportBucketArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new CloudBackupSnapshotExportBucket("test", CloudBackupSnapshotExportBucketArgs.builder()
 *             .projectId("{PROJECT_ID}")
 *             .iamRoleId("{IAM_ROLE_ID}")
 *             .bucketName("example-bucket")
 *             .cloudProvider("AWS")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Azure Example
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.mongodbatlas.CloudBackupSnapshotExportBucket;
 * import com.pulumi.mongodbatlas.CloudBackupSnapshotExportBucketArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new CloudBackupSnapshotExportBucket("test", CloudBackupSnapshotExportBucketArgs.builder()
 *             .projectId("{PROJECT_ID}")
 *             .roleId("{ROLE_ID}")
 *             .serviceUrl("{SERVICE_URL}")
 *             .bucketName("example-bucket")
 *             .cloudProvider("AZURE")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Cloud Backup Snapshot Export Backup entries can be imported using project project_id, and bucket_id (Unique identifier of the snapshot export bucket), in the format `PROJECTID-BUCKETID`, e.g.
 * 
 * ```sh
 * $ pulumi import mongodbatlas:index/cloudBackupSnapshotExportBucket:CloudBackupSnapshotExportBucket test 5d0f1f73cf09a29120e173cf-5d116d82014b764445b2f9b5
 * ```
 * 
 * For more information see: [MongoDB Atlas API Reference.](https://docs.atlas.mongodb.com/reference/api/cloud-backup/export/create-one-export-bucket/)
 * 
 */
@ResourceType(type="mongodbatlas:index/cloudBackupSnapshotExportBucket:CloudBackupSnapshotExportBucket")
public class CloudBackupSnapshotExportBucket extends com.pulumi.resources.CustomResource {
    /**
     * Name of the bucket that the provided role ID is authorized to access.
     * 
     */
    @Export(name="bucketName", refs={String.class}, tree="[0]")
    private Output<String> bucketName;

    /**
     * @return Name of the bucket that the provided role ID is authorized to access.
     * 
     */
    public Output<String> bucketName() {
        return this.bucketName;
    }
    /**
     * Name of the provider of the cloud service where Atlas can access the S3 bucket.
     * 
     */
    @Export(name="cloudProvider", refs={String.class}, tree="[0]")
    private Output<String> cloudProvider;

    /**
     * @return Name of the provider of the cloud service where Atlas can access the S3 bucket.
     * 
     */
    public Output<String> cloudProvider() {
        return this.cloudProvider;
    }
    /**
     * Unique identifier of the snapshot export bucket.
     * 
     */
    @Export(name="exportBucketId", refs={String.class}, tree="[0]")
    private Output<String> exportBucketId;

    /**
     * @return Unique identifier of the snapshot export bucket.
     * 
     */
    public Output<String> exportBucketId() {
        return this.exportBucketId;
    }
    /**
     * Unique identifier of the role that Atlas can use to access the bucket. Required if `cloud_provider` is set to `AWS`.
     * 
     */
    @Export(name="iamRoleId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> iamRoleId;

    /**
     * @return Unique identifier of the role that Atlas can use to access the bucket. Required if `cloud_provider` is set to `AWS`.
     * 
     */
    public Output<Optional<String>> iamRoleId() {
        return Codegen.optional(this.iamRoleId);
    }
    /**
     * The unique identifier of the project for the Atlas cluster.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return The unique identifier of the project for the Atlas cluster.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * Unique identifier of the Azure Service Principal that Atlas can use to access the Azure Blob Storage Container. Required if `cloud_provider` is set to `AZURE`.
     * 
     */
    @Export(name="roleId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> roleId;

    /**
     * @return Unique identifier of the Azure Service Principal that Atlas can use to access the Azure Blob Storage Container. Required if `cloud_provider` is set to `AZURE`.
     * 
     */
    public Output<Optional<String>> roleId() {
        return Codegen.optional(this.roleId);
    }
    /**
     * URL that identifies the blob Endpoint of the Azure Blob Storage Account. Required if `cloud_provider` is set to `AZURE`.
     * 
     */
    @Export(name="serviceUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serviceUrl;

    /**
     * @return URL that identifies the blob Endpoint of the Azure Blob Storage Account. Required if `cloud_provider` is set to `AZURE`.
     * 
     */
    public Output<Optional<String>> serviceUrl() {
        return Codegen.optional(this.serviceUrl);
    }
    /**
     * This field is ignored; the `mongodbatlas_cloud_provider_access_authorization.azure.tenant_id` is used instead and returned as an attribute. UUID that identifies the Azure Active Directory Tenant ID.
     * 
     */
    @Export(name="tenantId", refs={String.class}, tree="[0]")
    private Output<String> tenantId;

    /**
     * @return This field is ignored; the `mongodbatlas_cloud_provider_access_authorization.azure.tenant_id` is used instead and returned as an attribute. UUID that identifies the Azure Active Directory Tenant ID.
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CloudBackupSnapshotExportBucket(java.lang.String name) {
        this(name, CloudBackupSnapshotExportBucketArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CloudBackupSnapshotExportBucket(java.lang.String name, CloudBackupSnapshotExportBucketArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CloudBackupSnapshotExportBucket(java.lang.String name, CloudBackupSnapshotExportBucketArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("mongodbatlas:index/cloudBackupSnapshotExportBucket:CloudBackupSnapshotExportBucket", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CloudBackupSnapshotExportBucket(java.lang.String name, Output<java.lang.String> id, @Nullable CloudBackupSnapshotExportBucketState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("mongodbatlas:index/cloudBackupSnapshotExportBucket:CloudBackupSnapshotExportBucket", name, state, makeResourceOptions(options, id), false);
    }

    private static CloudBackupSnapshotExportBucketArgs makeArgs(CloudBackupSnapshotExportBucketArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CloudBackupSnapshotExportBucketArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CloudBackupSnapshotExportBucket get(java.lang.String name, Output<java.lang.String> id, @Nullable CloudBackupSnapshotExportBucketState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CloudBackupSnapshotExportBucket(name, id, state, options);
    }
}
