// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFederatedSettingsOrgConfigsResultRoleMapping {
    /**
     * @return Unique human-readable label that identifies the identity provider group to which this role mapping applies.
     * 
     */
    private String externalGroupName;
    /**
     * @return Unique 24-hexadecimal digit string that identifies this role mapping.
     * 
     */
    private String id;
    /**
     * @return Atlas roles and the unique identifiers of the groups and organizations associated with each role.
     * 
     */
    private List<GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment> roleAssignments;

    private GetFederatedSettingsOrgConfigsResultRoleMapping() {}
    /**
     * @return Unique human-readable label that identifies the identity provider group to which this role mapping applies.
     * 
     */
    public String externalGroupName() {
        return this.externalGroupName;
    }
    /**
     * @return Unique 24-hexadecimal digit string that identifies this role mapping.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Atlas roles and the unique identifiers of the groups and organizations associated with each role.
     * 
     */
    public List<GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment> roleAssignments() {
        return this.roleAssignments;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFederatedSettingsOrgConfigsResultRoleMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String externalGroupName;
        private String id;
        private List<GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment> roleAssignments;
        public Builder() {}
        public Builder(GetFederatedSettingsOrgConfigsResultRoleMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.externalGroupName = defaults.externalGroupName;
    	      this.id = defaults.id;
    	      this.roleAssignments = defaults.roleAssignments;
        }

        @CustomType.Setter
        public Builder externalGroupName(String externalGroupName) {
            if (externalGroupName == null) {
              throw new MissingRequiredPropertyException("GetFederatedSettingsOrgConfigsResultRoleMapping", "externalGroupName");
            }
            this.externalGroupName = externalGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFederatedSettingsOrgConfigsResultRoleMapping", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder roleAssignments(List<GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment> roleAssignments) {
            if (roleAssignments == null) {
              throw new MissingRequiredPropertyException("GetFederatedSettingsOrgConfigsResultRoleMapping", "roleAssignments");
            }
            this.roleAssignments = roleAssignments;
            return this;
        }
        public Builder roleAssignments(GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment... roleAssignments) {
            return roleAssignments(List.of(roleAssignments));
        }
        public GetFederatedSettingsOrgConfigsResultRoleMapping build() {
            final var _resultValue = new GetFederatedSettingsOrgConfigsResultRoleMapping();
            _resultValue.externalGroupName = externalGroupName;
            _resultValue.id = id;
            _resultValue.roleAssignments = roleAssignments;
            return _resultValue;
        }
    }
}
