// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetResourcePoliciesResourcePolicy;
import com.pulumi.mongodbatlas.outputs.GetResourcePoliciesResult;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetResourcePoliciesInvokeResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     * 
     */
    private String orgId;
    /**
     * @deprecated
     * This parameter is deprecated. Please transition to `results`.
     * 
     */
    @Deprecated /* This parameter is deprecated. Please transition to `results`. */
    private List<GetResourcePoliciesResourcePolicy> resourcePolicies;
    /**
     * @return List of documents that MongoDB Cloud returns for this request.
     * 
     */
    private List<GetResourcePoliciesResult> results;

    private GetResourcePoliciesInvokeResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     * 
     */
    public String orgId() {
        return this.orgId;
    }
    /**
     * @deprecated
     * This parameter is deprecated. Please transition to `results`.
     * 
     */
    @Deprecated /* This parameter is deprecated. Please transition to `results`. */
    public List<GetResourcePoliciesResourcePolicy> resourcePolicies() {
        return this.resourcePolicies;
    }
    /**
     * @return List of documents that MongoDB Cloud returns for this request.
     * 
     */
    public List<GetResourcePoliciesResult> results() {
        return this.results;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourcePoliciesInvokeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String orgId;
        private List<GetResourcePoliciesResourcePolicy> resourcePolicies;
        private List<GetResourcePoliciesResult> results;
        public Builder() {}
        public Builder(GetResourcePoliciesInvokeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.orgId = defaults.orgId;
    	      this.resourcePolicies = defaults.resourcePolicies;
    	      this.results = defaults.results;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetResourcePoliciesInvokeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(String orgId) {
            if (orgId == null) {
              throw new MissingRequiredPropertyException("GetResourcePoliciesInvokeResult", "orgId");
            }
            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder resourcePolicies(List<GetResourcePoliciesResourcePolicy> resourcePolicies) {
            if (resourcePolicies == null) {
              throw new MissingRequiredPropertyException("GetResourcePoliciesInvokeResult", "resourcePolicies");
            }
            this.resourcePolicies = resourcePolicies;
            return this;
        }
        public Builder resourcePolicies(GetResourcePoliciesResourcePolicy... resourcePolicies) {
            return resourcePolicies(List.of(resourcePolicies));
        }
        @CustomType.Setter
        public Builder results(List<GetResourcePoliciesResult> results) {
            if (results == null) {
              throw new MissingRequiredPropertyException("GetResourcePoliciesInvokeResult", "results");
            }
            this.results = results;
            return this;
        }
        public Builder results(GetResourcePoliciesResult... results) {
            return results(List.of(results));
        }
        public GetResourcePoliciesInvokeResult build() {
            final var _resultValue = new GetResourcePoliciesInvokeResult();
            _resultValue.id = id;
            _resultValue.orgId = orgId;
            _resultValue.resourcePolicies = resourcePolicies;
            _resultValue.results = results;
            return _resultValue;
        }
    }
}
