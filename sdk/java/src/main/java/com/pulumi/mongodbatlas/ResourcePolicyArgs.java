// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.inputs.ResourcePolicyPolicyArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourcePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourcePolicyArgs Empty = new ResourcePolicyArgs();

    /**
     * Description of the Atlas resource policy.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the Atlas resource policy.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Human-readable label that describes the Atlas resource policy.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Human-readable label that describes the Atlas resource policy.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     * 
     */
    @Import(name="orgId", required=true)
    private Output<String> orgId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }

    /**
     * List of policies that make up the Atlas resource policy.
     * 
     */
    @Import(name="policies", required=true)
    private Output<List<ResourcePolicyPolicyArgs>> policies;

    /**
     * @return List of policies that make up the Atlas resource policy.
     * 
     */
    public Output<List<ResourcePolicyPolicyArgs>> policies() {
        return this.policies;
    }

    private ResourcePolicyArgs() {}

    private ResourcePolicyArgs(ResourcePolicyArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.orgId = $.orgId;
        this.policies = $.policies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourcePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourcePolicyArgs $;

        public Builder() {
            $ = new ResourcePolicyArgs();
        }

        public Builder(ResourcePolicyArgs defaults) {
            $ = new ResourcePolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the Atlas resource policy.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the Atlas resource policy.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Human-readable label that describes the Atlas resource policy.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Human-readable label that describes the Atlas resource policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orgId Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
         * 
         * @return builder
         * 
         */
        public Builder orgId(Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param policies List of policies that make up the Atlas resource policy.
         * 
         * @return builder
         * 
         */
        public Builder policies(Output<List<ResourcePolicyPolicyArgs>> policies) {
            $.policies = policies;
            return this;
        }

        /**
         * @param policies List of policies that make up the Atlas resource policy.
         * 
         * @return builder
         * 
         */
        public Builder policies(List<ResourcePolicyPolicyArgs> policies) {
            return policies(Output.of(policies));
        }

        /**
         * @param policies List of policies that make up the Atlas resource policy.
         * 
         * @return builder
         * 
         */
        public Builder policies(ResourcePolicyPolicyArgs... policies) {
            return policies(List.of(policies));
        }

        public ResourcePolicyArgs build() {
            if ($.orgId == null) {
                throw new MissingRequiredPropertyException("ResourcePolicyArgs", "orgId");
            }
            if ($.policies == null) {
                throw new MissingRequiredPropertyException("ResourcePolicyArgs", "policies");
            }
            return $;
        }
    }

}
