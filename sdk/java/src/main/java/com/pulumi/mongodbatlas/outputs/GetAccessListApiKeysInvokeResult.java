// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetAccessListApiKeysResult;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAccessListApiKeysInvokeResult {
    private String apiKeyId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Integer itemsPerPage;
    private String orgId;
    private @Nullable Integer pageNum;
    private List<GetAccessListApiKeysResult> results;

    private GetAccessListApiKeysInvokeResult() {}
    public String apiKeyId() {
        return this.apiKeyId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Integer> itemsPerPage() {
        return Optional.ofNullable(this.itemsPerPage);
    }
    public String orgId() {
        return this.orgId;
    }
    public Optional<Integer> pageNum() {
        return Optional.ofNullable(this.pageNum);
    }
    public List<GetAccessListApiKeysResult> results() {
        return this.results;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccessListApiKeysInvokeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiKeyId;
        private String id;
        private @Nullable Integer itemsPerPage;
        private String orgId;
        private @Nullable Integer pageNum;
        private List<GetAccessListApiKeysResult> results;
        public Builder() {}
        public Builder(GetAccessListApiKeysInvokeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKeyId = defaults.apiKeyId;
    	      this.id = defaults.id;
    	      this.itemsPerPage = defaults.itemsPerPage;
    	      this.orgId = defaults.orgId;
    	      this.pageNum = defaults.pageNum;
    	      this.results = defaults.results;
        }

        @CustomType.Setter
        public Builder apiKeyId(String apiKeyId) {
            if (apiKeyId == null) {
              throw new MissingRequiredPropertyException("GetAccessListApiKeysInvokeResult", "apiKeyId");
            }
            this.apiKeyId = apiKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAccessListApiKeysInvokeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder itemsPerPage(@Nullable Integer itemsPerPage) {

            this.itemsPerPage = itemsPerPage;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(String orgId) {
            if (orgId == null) {
              throw new MissingRequiredPropertyException("GetAccessListApiKeysInvokeResult", "orgId");
            }
            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder pageNum(@Nullable Integer pageNum) {

            this.pageNum = pageNum;
            return this;
        }
        @CustomType.Setter
        public Builder results(List<GetAccessListApiKeysResult> results) {
            if (results == null) {
              throw new MissingRequiredPropertyException("GetAccessListApiKeysInvokeResult", "results");
            }
            this.results = results;
            return this;
        }
        public Builder results(GetAccessListApiKeysResult... results) {
            return results(List.of(results));
        }
        public GetAccessListApiKeysInvokeResult build() {
            final var _resultValue = new GetAccessListApiKeysInvokeResult();
            _resultValue.apiKeyId = apiKeyId;
            _resultValue.id = id;
            _resultValue.itemsPerPage = itemsPerPage;
            _resultValue.orgId = orgId;
            _resultValue.pageNum = pageNum;
            _resultValue.results = results;
            return _resultValue;
        }
    }
}
