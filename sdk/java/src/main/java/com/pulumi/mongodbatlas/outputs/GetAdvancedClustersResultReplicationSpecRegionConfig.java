// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling;
import com.pulumi.mongodbatlas.outputs.GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs;
import com.pulumi.mongodbatlas.outputs.GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling;
import com.pulumi.mongodbatlas.outputs.GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs;
import com.pulumi.mongodbatlas.outputs.GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAdvancedClustersResultReplicationSpecRegionConfig {
    /**
     * @return Configuration for the Collection of settings that configures analytis-auto-scaling information for the cluster. See below
     * 
     */
    private List<GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling> analyticsAutoScalings;
    /**
     * @return Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. See below
     * 
     */
    private GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs analyticsSpecs;
    /**
     * @return Configuration for the Collection of settings that configures auto-scaling information for the cluster. See below
     * 
     */
    private List<GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling> autoScalings;
    /**
     * @return Cloud service provider on which you provision the host for a multi-tenant cluster.
     * 
     */
    private String backingProviderName;
    /**
     * @return Hardware specifications for electable nodes in the region.
     * 
     */
    private GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs electableSpecs;
    /**
     * @return Election priority of the region.
     * 
     */
    private Integer priority;
    /**
     * @return Cloud service provider on which the servers are provisioned.
     * 
     */
    private String providerName;
    /**
     * @return Hardware specifications for read-only nodes in the region. See below
     * 
     */
    private GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs readOnlySpecs;
    /**
     * @return Physical location of your MongoDB cluster.
     * 
     */
    private String regionName;

    private GetAdvancedClustersResultReplicationSpecRegionConfig() {}
    /**
     * @return Configuration for the Collection of settings that configures analytis-auto-scaling information for the cluster. See below
     * 
     */
    public List<GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling> analyticsAutoScalings() {
        return this.analyticsAutoScalings;
    }
    /**
     * @return Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. See below
     * 
     */
    public GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs analyticsSpecs() {
        return this.analyticsSpecs;
    }
    /**
     * @return Configuration for the Collection of settings that configures auto-scaling information for the cluster. See below
     * 
     */
    public List<GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling> autoScalings() {
        return this.autoScalings;
    }
    /**
     * @return Cloud service provider on which you provision the host for a multi-tenant cluster.
     * 
     */
    public String backingProviderName() {
        return this.backingProviderName;
    }
    /**
     * @return Hardware specifications for electable nodes in the region.
     * 
     */
    public GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs electableSpecs() {
        return this.electableSpecs;
    }
    /**
     * @return Election priority of the region.
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return Cloud service provider on which the servers are provisioned.
     * 
     */
    public String providerName() {
        return this.providerName;
    }
    /**
     * @return Hardware specifications for read-only nodes in the region. See below
     * 
     */
    public GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs readOnlySpecs() {
        return this.readOnlySpecs;
    }
    /**
     * @return Physical location of your MongoDB cluster.
     * 
     */
    public String regionName() {
        return this.regionName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAdvancedClustersResultReplicationSpecRegionConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling> analyticsAutoScalings;
        private GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs analyticsSpecs;
        private List<GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling> autoScalings;
        private String backingProviderName;
        private GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs electableSpecs;
        private Integer priority;
        private String providerName;
        private GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs readOnlySpecs;
        private String regionName;
        public Builder() {}
        public Builder(GetAdvancedClustersResultReplicationSpecRegionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.analyticsAutoScalings = defaults.analyticsAutoScalings;
    	      this.analyticsSpecs = defaults.analyticsSpecs;
    	      this.autoScalings = defaults.autoScalings;
    	      this.backingProviderName = defaults.backingProviderName;
    	      this.electableSpecs = defaults.electableSpecs;
    	      this.priority = defaults.priority;
    	      this.providerName = defaults.providerName;
    	      this.readOnlySpecs = defaults.readOnlySpecs;
    	      this.regionName = defaults.regionName;
        }

        @CustomType.Setter
        public Builder analyticsAutoScalings(List<GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling> analyticsAutoScalings) {
            if (analyticsAutoScalings == null) {
              throw new MissingRequiredPropertyException("GetAdvancedClustersResultReplicationSpecRegionConfig", "analyticsAutoScalings");
            }
            this.analyticsAutoScalings = analyticsAutoScalings;
            return this;
        }
        public Builder analyticsAutoScalings(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling... analyticsAutoScalings) {
            return analyticsAutoScalings(List.of(analyticsAutoScalings));
        }
        @CustomType.Setter
        public Builder analyticsSpecs(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs analyticsSpecs) {
            if (analyticsSpecs == null) {
              throw new MissingRequiredPropertyException("GetAdvancedClustersResultReplicationSpecRegionConfig", "analyticsSpecs");
            }
            this.analyticsSpecs = analyticsSpecs;
            return this;
        }
        @CustomType.Setter
        public Builder autoScalings(List<GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling> autoScalings) {
            if (autoScalings == null) {
              throw new MissingRequiredPropertyException("GetAdvancedClustersResultReplicationSpecRegionConfig", "autoScalings");
            }
            this.autoScalings = autoScalings;
            return this;
        }
        public Builder autoScalings(GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling... autoScalings) {
            return autoScalings(List.of(autoScalings));
        }
        @CustomType.Setter
        public Builder backingProviderName(String backingProviderName) {
            if (backingProviderName == null) {
              throw new MissingRequiredPropertyException("GetAdvancedClustersResultReplicationSpecRegionConfig", "backingProviderName");
            }
            this.backingProviderName = backingProviderName;
            return this;
        }
        @CustomType.Setter
        public Builder electableSpecs(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs electableSpecs) {
            if (electableSpecs == null) {
              throw new MissingRequiredPropertyException("GetAdvancedClustersResultReplicationSpecRegionConfig", "electableSpecs");
            }
            this.electableSpecs = electableSpecs;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetAdvancedClustersResultReplicationSpecRegionConfig", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder providerName(String providerName) {
            if (providerName == null) {
              throw new MissingRequiredPropertyException("GetAdvancedClustersResultReplicationSpecRegionConfig", "providerName");
            }
            this.providerName = providerName;
            return this;
        }
        @CustomType.Setter
        public Builder readOnlySpecs(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs readOnlySpecs) {
            if (readOnlySpecs == null) {
              throw new MissingRequiredPropertyException("GetAdvancedClustersResultReplicationSpecRegionConfig", "readOnlySpecs");
            }
            this.readOnlySpecs = readOnlySpecs;
            return this;
        }
        @CustomType.Setter
        public Builder regionName(String regionName) {
            if (regionName == null) {
              throw new MissingRequiredPropertyException("GetAdvancedClustersResultReplicationSpecRegionConfig", "regionName");
            }
            this.regionName = regionName;
            return this;
        }
        public GetAdvancedClustersResultReplicationSpecRegionConfig build() {
            final var _resultValue = new GetAdvancedClustersResultReplicationSpecRegionConfig();
            _resultValue.analyticsAutoScalings = analyticsAutoScalings;
            _resultValue.analyticsSpecs = analyticsSpecs;
            _resultValue.autoScalings = autoScalings;
            _resultValue.backingProviderName = backingProviderName;
            _resultValue.electableSpecs = electableSpecs;
            _resultValue.priority = priority;
            _resultValue.providerName = providerName;
            _resultValue.readOnlySpecs = readOnlySpecs;
            _resultValue.regionName = regionName;
            return _resultValue;
        }
    }
}
