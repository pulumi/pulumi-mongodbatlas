// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.mongodbatlas.inputs.CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudBackupSnapshotRestoreJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudBackupSnapshotRestoreJobArgs Empty = new CloudBackupSnapshotRestoreJobArgs();

    /**
     * The name of the Atlas cluster whose snapshot you want to restore.
     * 
     */
    @Import(name="clusterName", required=true)
    private Output<String> clusterName;

    /**
     * @return The name of the Atlas cluster whose snapshot you want to restore.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }

    /**
     * Type of restore job to create. Possible configurations are: **download**, **automated**, or **pointInTime** only one must be set it in ``true``.
     * 
     */
    @Import(name="deliveryTypeConfig")
    private @Nullable Output<CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs> deliveryTypeConfig;

    /**
     * @return Type of restore job to create. Possible configurations are: **download**, **automated**, or **pointInTime** only one must be set it in ``true``.
     * 
     */
    public Optional<Output<CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs>> deliveryTypeConfig() {
        return Optional.ofNullable(this.deliveryTypeConfig);
    }

    /**
     * The unique identifier of the project for the Atlas cluster whose snapshot you want to restore.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The unique identifier of the project for the Atlas cluster whose snapshot you want to restore.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Unique identifier of the snapshot to restore.
     * 
     */
    @Import(name="snapshotId", required=true)
    private Output<String> snapshotId;

    /**
     * @return Unique identifier of the snapshot to restore.
     * 
     */
    public Output<String> snapshotId() {
        return this.snapshotId;
    }

    private CloudBackupSnapshotRestoreJobArgs() {}

    private CloudBackupSnapshotRestoreJobArgs(CloudBackupSnapshotRestoreJobArgs $) {
        this.clusterName = $.clusterName;
        this.deliveryTypeConfig = $.deliveryTypeConfig;
        this.projectId = $.projectId;
        this.snapshotId = $.snapshotId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudBackupSnapshotRestoreJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudBackupSnapshotRestoreJobArgs $;

        public Builder() {
            $ = new CloudBackupSnapshotRestoreJobArgs();
        }

        public Builder(CloudBackupSnapshotRestoreJobArgs defaults) {
            $ = new CloudBackupSnapshotRestoreJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName The name of the Atlas cluster whose snapshot you want to restore.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName The name of the Atlas cluster whose snapshot you want to restore.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param deliveryTypeConfig Type of restore job to create. Possible configurations are: **download**, **automated**, or **pointInTime** only one must be set it in ``true``.
         * 
         * @return builder
         * 
         */
        public Builder deliveryTypeConfig(@Nullable Output<CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs> deliveryTypeConfig) {
            $.deliveryTypeConfig = deliveryTypeConfig;
            return this;
        }

        /**
         * @param deliveryTypeConfig Type of restore job to create. Possible configurations are: **download**, **automated**, or **pointInTime** only one must be set it in ``true``.
         * 
         * @return builder
         * 
         */
        public Builder deliveryTypeConfig(CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs deliveryTypeConfig) {
            return deliveryTypeConfig(Output.of(deliveryTypeConfig));
        }

        /**
         * @param projectId The unique identifier of the project for the Atlas cluster whose snapshot you want to restore.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The unique identifier of the project for the Atlas cluster whose snapshot you want to restore.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param snapshotId Unique identifier of the snapshot to restore.
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(Output<String> snapshotId) {
            $.snapshotId = snapshotId;
            return this;
        }

        /**
         * @param snapshotId Unique identifier of the snapshot to restore.
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(String snapshotId) {
            return snapshotId(Output.of(snapshotId));
        }

        public CloudBackupSnapshotRestoreJobArgs build() {
            $.clusterName = Objects.requireNonNull($.clusterName, "expected parameter 'clusterName' to be non-null");
            $.projectId = Objects.requireNonNull($.projectId, "expected parameter 'projectId' to be non-null");
            $.snapshotId = Objects.requireNonNull($.snapshotId, "expected parameter 'snapshotId' to be non-null");
            return $;
        }
    }

}
