// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.mongodbatlas.inputs.CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudBackupSnapshotRestoreJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudBackupSnapshotRestoreJobArgs Empty = new CloudBackupSnapshotRestoreJobArgs();

    /**
     * The name of the Atlas cluster whose snapshot you want to restore.
     * 
     */
    @Import(name="clusterName", required=true)
    private Output<String> clusterName;

    /**
     * @return The name of the Atlas cluster whose snapshot you want to restore.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }

    /**
     * @deprecated
     * this parameter is deprecated and will be removed in v1.12.0, please transition to delivery_type_config
     * 
     */
    @Deprecated /* this parameter is deprecated and will be removed in v1.12.0, please transition to delivery_type_config */
    @Import(name="deliveryType")
    private @Nullable Output<Map<String,String>> deliveryType;

    /**
     * @deprecated
     * this parameter is deprecated and will be removed in v1.12.0, please transition to delivery_type_config
     * 
     */
    @Deprecated /* this parameter is deprecated and will be removed in v1.12.0, please transition to delivery_type_config */
    public Optional<Output<Map<String,String>>> deliveryType() {
        return Optional.ofNullable(this.deliveryType);
    }

    /**
     * Type of restore job to create. Possible configurations are: **download**, **automated**, or **pointInTime** only one must be set it in ``true``.
     * * `delivery_type_config.automated` - Set to `true` to use the automated configuration.
     * * `delivery_type_config.download` - Set to `true` to use the download configuration.
     * * `delivery_type_config.pointInTime` - Set to `true` to use the pointInTime configuration. If using pointInTime configuration, you must also specify either `oplog_ts` and `oplog_inc`, or `point_in_time_utc_seconds`.
     * * `delivery_type_config.target_cluster_name` - Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
     * * `delivery_type_config.target_project_id` - Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
     * * `delivery_type_config.oplog_ts` - Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which to you want to restore this snapshot. This is the first part of an Oplog timestamp.
     * * `delivery_type_config.oplog_inc` - Optional setting for **pointInTime** configuration. Oplog operation number from which to you want to restore this snapshot. This is the second part of an Oplog timestamp. Used in conjunction with `oplog_ts`.
     * * `delivery_type_config.point_in_time_utc_seconds` - Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which you want to restore this snapshot. Used instead of oplog settings.
     * 
     */
    @Import(name="deliveryTypeConfig")
    private @Nullable Output<CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs> deliveryTypeConfig;

    /**
     * @return Type of restore job to create. Possible configurations are: **download**, **automated**, or **pointInTime** only one must be set it in ``true``.
     * * `delivery_type_config.automated` - Set to `true` to use the automated configuration.
     * * `delivery_type_config.download` - Set to `true` to use the download configuration.
     * * `delivery_type_config.pointInTime` - Set to `true` to use the pointInTime configuration. If using pointInTime configuration, you must also specify either `oplog_ts` and `oplog_inc`, or `point_in_time_utc_seconds`.
     * * `delivery_type_config.target_cluster_name` - Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
     * * `delivery_type_config.target_project_id` - Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
     * * `delivery_type_config.oplog_ts` - Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which to you want to restore this snapshot. This is the first part of an Oplog timestamp.
     * * `delivery_type_config.oplog_inc` - Optional setting for **pointInTime** configuration. Oplog operation number from which to you want to restore this snapshot. This is the second part of an Oplog timestamp. Used in conjunction with `oplog_ts`.
     * * `delivery_type_config.point_in_time_utc_seconds` - Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which you want to restore this snapshot. Used instead of oplog settings.
     * 
     */
    public Optional<Output<CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs>> deliveryTypeConfig() {
        return Optional.ofNullable(this.deliveryTypeConfig);
    }

    /**
     * The unique identifier of the project for the Atlas cluster whose snapshot you want to restore.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The unique identifier of the project for the Atlas cluster whose snapshot you want to restore.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Unique identifier of the snapshot to restore.
     * 
     */
    @Import(name="snapshotId", required=true)
    private Output<String> snapshotId;

    /**
     * @return Unique identifier of the snapshot to restore.
     * 
     */
    public Output<String> snapshotId() {
        return this.snapshotId;
    }

    private CloudBackupSnapshotRestoreJobArgs() {}

    private CloudBackupSnapshotRestoreJobArgs(CloudBackupSnapshotRestoreJobArgs $) {
        this.clusterName = $.clusterName;
        this.deliveryType = $.deliveryType;
        this.deliveryTypeConfig = $.deliveryTypeConfig;
        this.projectId = $.projectId;
        this.snapshotId = $.snapshotId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudBackupSnapshotRestoreJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudBackupSnapshotRestoreJobArgs $;

        public Builder() {
            $ = new CloudBackupSnapshotRestoreJobArgs();
        }

        public Builder(CloudBackupSnapshotRestoreJobArgs defaults) {
            $ = new CloudBackupSnapshotRestoreJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName The name of the Atlas cluster whose snapshot you want to restore.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName The name of the Atlas cluster whose snapshot you want to restore.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * this parameter is deprecated and will be removed in v1.12.0, please transition to delivery_type_config
         * 
         */
        @Deprecated /* this parameter is deprecated and will be removed in v1.12.0, please transition to delivery_type_config */
        public Builder deliveryType(@Nullable Output<Map<String,String>> deliveryType) {
            $.deliveryType = deliveryType;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * this parameter is deprecated and will be removed in v1.12.0, please transition to delivery_type_config
         * 
         */
        @Deprecated /* this parameter is deprecated and will be removed in v1.12.0, please transition to delivery_type_config */
        public Builder deliveryType(Map<String,String> deliveryType) {
            return deliveryType(Output.of(deliveryType));
        }

        /**
         * @param deliveryTypeConfig Type of restore job to create. Possible configurations are: **download**, **automated**, or **pointInTime** only one must be set it in ``true``.
         * * `delivery_type_config.automated` - Set to `true` to use the automated configuration.
         * * `delivery_type_config.download` - Set to `true` to use the download configuration.
         * * `delivery_type_config.pointInTime` - Set to `true` to use the pointInTime configuration. If using pointInTime configuration, you must also specify either `oplog_ts` and `oplog_inc`, or `point_in_time_utc_seconds`.
         * * `delivery_type_config.target_cluster_name` - Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
         * * `delivery_type_config.target_project_id` - Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
         * * `delivery_type_config.oplog_ts` - Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which to you want to restore this snapshot. This is the first part of an Oplog timestamp.
         * * `delivery_type_config.oplog_inc` - Optional setting for **pointInTime** configuration. Oplog operation number from which to you want to restore this snapshot. This is the second part of an Oplog timestamp. Used in conjunction with `oplog_ts`.
         * * `delivery_type_config.point_in_time_utc_seconds` - Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which you want to restore this snapshot. Used instead of oplog settings.
         * 
         * @return builder
         * 
         */
        public Builder deliveryTypeConfig(@Nullable Output<CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs> deliveryTypeConfig) {
            $.deliveryTypeConfig = deliveryTypeConfig;
            return this;
        }

        /**
         * @param deliveryTypeConfig Type of restore job to create. Possible configurations are: **download**, **automated**, or **pointInTime** only one must be set it in ``true``.
         * * `delivery_type_config.automated` - Set to `true` to use the automated configuration.
         * * `delivery_type_config.download` - Set to `true` to use the download configuration.
         * * `delivery_type_config.pointInTime` - Set to `true` to use the pointInTime configuration. If using pointInTime configuration, you must also specify either `oplog_ts` and `oplog_inc`, or `point_in_time_utc_seconds`.
         * * `delivery_type_config.target_cluster_name` - Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
         * * `delivery_type_config.target_project_id` - Name of the target Atlas cluster to which the restore job restores the snapshot. Required for **automated** and **pointInTime**.
         * * `delivery_type_config.oplog_ts` - Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which to you want to restore this snapshot. This is the first part of an Oplog timestamp.
         * * `delivery_type_config.oplog_inc` - Optional setting for **pointInTime** configuration. Oplog operation number from which to you want to restore this snapshot. This is the second part of an Oplog timestamp. Used in conjunction with `oplog_ts`.
         * * `delivery_type_config.point_in_time_utc_seconds` - Optional setting for **pointInTime** configuration. Timestamp in the number of seconds that have elapsed since the UNIX epoch from which you want to restore this snapshot. Used instead of oplog settings.
         * 
         * @return builder
         * 
         */
        public Builder deliveryTypeConfig(CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs deliveryTypeConfig) {
            return deliveryTypeConfig(Output.of(deliveryTypeConfig));
        }

        /**
         * @param projectId The unique identifier of the project for the Atlas cluster whose snapshot you want to restore.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The unique identifier of the project for the Atlas cluster whose snapshot you want to restore.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param snapshotId Unique identifier of the snapshot to restore.
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(Output<String> snapshotId) {
            $.snapshotId = snapshotId;
            return this;
        }

        /**
         * @param snapshotId Unique identifier of the snapshot to restore.
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(String snapshotId) {
            return snapshotId(Output.of(snapshotId));
        }

        public CloudBackupSnapshotRestoreJobArgs build() {
            $.clusterName = Objects.requireNonNull($.clusterName, "expected parameter 'clusterName' to be non-null");
            $.projectId = Objects.requireNonNull($.projectId, "expected parameter 'projectId' to be non-null");
            $.snapshotId = Objects.requireNonNull($.snapshotId, "expected parameter 'snapshotId' to be non-null");
            return $;
        }
    }

}
