// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.mongodbatlas.ProjectIpAccessListArgs;
import com.pulumi.mongodbatlas.Utilities;
import com.pulumi.mongodbatlas.inputs.ProjectIpAccessListState;
import com.pulumi.mongodbatlas.outputs.ProjectIpAccessListTimeouts;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * `mongodbatlas.ProjectIpAccessList` provides an IP Access List entry resource. The access list grants access from IPs, CIDRs or AWS Security Groups (if VPC Peering is enabled) to clusters within the Project.
 * 
 * &gt; **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 * 
 * &gt; **IMPORTANT:**
 * When you remove an entry from the access list, existing connections from the removed address(es) may remain open for a variable amount of time. How much time passes before Atlas closes the connection depends on several factors, including how the connection was established, the particular behavior of the application or driver using the address, and the connection protocol (e.g., TCP or UDP). This is particularly important to consider when changing an existing IP address or CIDR block as they cannot be updated via the Provider (comments can however), hence a change will force the destruction and recreation of entries.
 * 
 * ## Example Usage
 * 
 * ### Using CIDR Block
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.mongodbatlas.ProjectIpAccessList;
 * import com.pulumi.mongodbatlas.ProjectIpAccessListArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new ProjectIpAccessList(&#34;test&#34;, ProjectIpAccessListArgs.builder()        
 *             .projectId(&#34;&lt;PROJECT-ID&gt;&#34;)
 *             .cidrBlock(&#34;1.2.3.4/32&#34;)
 *             .comment(&#34;cidr block for tf acc testing&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Using IP Address
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.mongodbatlas.ProjectIpAccessList;
 * import com.pulumi.mongodbatlas.ProjectIpAccessListArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new ProjectIpAccessList(&#34;test&#34;, ProjectIpAccessListArgs.builder()        
 *             .projectId(&#34;&lt;PROJECT-ID&gt;&#34;)
 *             .ipAddress(&#34;2.3.4.5&#34;)
 *             .comment(&#34;ip address for tf acc testing&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Using an AWS Security Group
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.mongodbatlas.NetworkContainer;
 * import com.pulumi.mongodbatlas.NetworkContainerArgs;
 * import com.pulumi.mongodbatlas.NetworkPeering;
 * import com.pulumi.mongodbatlas.NetworkPeeringArgs;
 * import com.pulumi.mongodbatlas.ProjectIpAccessList;
 * import com.pulumi.mongodbatlas.ProjectIpAccessListArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new NetworkContainer(&#34;test&#34;, NetworkContainerArgs.builder()        
 *             .projectId(&#34;&lt;PROJECT-ID&gt;&#34;)
 *             .atlasCidrBlock(&#34;192.168.208.0/21&#34;)
 *             .providerName(&#34;AWS&#34;)
 *             .regionName(&#34;US_EAST_1&#34;)
 *             .build());
 * 
 *         var testNetworkPeering = new NetworkPeering(&#34;testNetworkPeering&#34;, NetworkPeeringArgs.builder()        
 *             .projectId(&#34;&lt;PROJECT-ID&gt;&#34;)
 *             .containerId(test.containerId())
 *             .accepterRegionName(&#34;us-east-1&#34;)
 *             .providerName(&#34;AWS&#34;)
 *             .routeTableCidrBlock(&#34;172.31.0.0/16&#34;)
 *             .vpcId(&#34;vpc-0d93d6f69f1578bd8&#34;)
 *             .awsAccountId(&#34;232589400519&#34;)
 *             .build());
 * 
 *         var testProjectIpAccessList = new ProjectIpAccessList(&#34;testProjectIpAccessList&#34;, ProjectIpAccessListArgs.builder()        
 *             .projectId(&#34;&lt;PROJECT-ID&gt;&#34;)
 *             .awsSecurityGroup(&#34;sg-0026348ec11780bd1&#34;)
 *             .comment(&#34;TestAcc for awsSecurityGroup&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(testNetworkPeering)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * &gt; **IMPORTANT:** In order to use AWS Security Group(s) VPC Peering must be enabled like above example.
 * 
 * ## Import
 * 
 * IP Access List entries can be imported using the `project_id` and `cidr_block` or `ip_address`, e.g.
 * 
 * ```sh
 * $ pulumi import mongodbatlas:index/projectIpAccessList:ProjectIpAccessList test 5d0f1f74cf09a29120e123cd-10.242.88.0/21
 * ```
 * For more information see: [MongoDB Atlas API Reference.](https://docs.atlas.mongodb.com/reference/api/access-lists/)
 * 
 */
@ResourceType(type="mongodbatlas:index/projectIpAccessList:ProjectIpAccessList")
public class ProjectIpAccessList extends com.pulumi.resources.CustomResource {
    /**
     * Unique identifier of the AWS security group to add to the access list. Your access list entry can include only one `awsSecurityGroup`, one `cidrBlock`, or one `ipAddress`.
     * 
     */
    @Export(name="awsSecurityGroup", refs={String.class}, tree="[0]")
    private Output<String> awsSecurityGroup;

    /**
     * @return Unique identifier of the AWS security group to add to the access list. Your access list entry can include only one `awsSecurityGroup`, one `cidrBlock`, or one `ipAddress`.
     * 
     */
    public Output<String> awsSecurityGroup() {
        return this.awsSecurityGroup;
    }
    /**
     * Range of IP addresses in CIDR notation to be added to the access list. Your access list entry can include only one `awsSecurityGroup`, one `cidrBlock`, or one `ipAddress`.
     * 
     */
    @Export(name="cidrBlock", refs={String.class}, tree="[0]")
    private Output<String> cidrBlock;

    /**
     * @return Range of IP addresses in CIDR notation to be added to the access list. Your access list entry can include only one `awsSecurityGroup`, one `cidrBlock`, or one `ipAddress`.
     * 
     */
    public Output<String> cidrBlock() {
        return this.cidrBlock;
    }
    /**
     * Comment to add to the access list entry.
     * 
     * &gt; **NOTE:** One of the following attributes must set:  `aws_security_group`, `cidr_block`  or `ip_address`.
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output<String> comment;

    /**
     * @return Comment to add to the access list entry.
     * 
     * &gt; **NOTE:** One of the following attributes must set:  `aws_security_group`, `cidr_block`  or `ip_address`.
     * 
     */
    public Output<String> comment() {
        return this.comment;
    }
    /**
     * Single IP address to be added to the access list. Mutually exclusive with `awsSecurityGroup` and `cidrBlock`.
     * 
     */
    @Export(name="ipAddress", refs={String.class}, tree="[0]")
    private Output<String> ipAddress;

    /**
     * @return Single IP address to be added to the access list. Mutually exclusive with `awsSecurityGroup` and `cidrBlock`.
     * 
     */
    public Output<String> ipAddress() {
        return this.ipAddress;
    }
    /**
     * Unique identifier for the project to which you want to add one or more access list entries.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return Unique identifier for the project to which you want to add one or more access list entries.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    @Export(name="timeouts", refs={ProjectIpAccessListTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ ProjectIpAccessListTimeouts> timeouts;

    public Output<Optional<ProjectIpAccessListTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProjectIpAccessList(String name) {
        this(name, ProjectIpAccessListArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProjectIpAccessList(String name, ProjectIpAccessListArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProjectIpAccessList(String name, ProjectIpAccessListArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("mongodbatlas:index/projectIpAccessList:ProjectIpAccessList", name, args == null ? ProjectIpAccessListArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ProjectIpAccessList(String name, Output<String> id, @Nullable ProjectIpAccessListState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("mongodbatlas:index/projectIpAccessList:ProjectIpAccessList", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProjectIpAccessList get(String name, Output<String> id, @Nullable ProjectIpAccessListState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ProjectIpAccessList(name, id, state, options);
    }
}
