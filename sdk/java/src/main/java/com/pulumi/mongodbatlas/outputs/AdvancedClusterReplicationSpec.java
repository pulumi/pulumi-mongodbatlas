// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.mongodbatlas.outputs.AdvancedClusterReplicationSpecRegionConfig;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AdvancedClusterReplicationSpec {
    private @Nullable Map<String,String> containerId;
    private @Nullable String id;
    /**
     * @return Provide this value if you set a `cluster_type` of SHARDED or GEOSHARDED. Omit this value if you selected a `cluster_type` of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a `num_shards` value of 1 and a `cluster_type` of SHARDED, Atlas deploys a single-shard [sharded cluster](https://docs.atlas.mongodb.com/reference/glossary/#std-term-sharded-cluster). Don&#39;t create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don&#39;t provide the same benefits as multi-shard configurations.
     * 
     */
    private @Nullable Integer numShards;
    /**
     * @return Configuration for the hardware specifications for nodes set for a given regionEach `region_configs` object describes the region&#39;s priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `region_configs` object must have either an `analytics_specs` object, `electable_specs` object, or `read_only_specs` object. See below
     * 
     */
    private List<AdvancedClusterReplicationSpecRegionConfig> regionConfigs;
    /**
     * @return Name for the zone in a Global Cluster.
     * 
     */
    private @Nullable String zoneName;

    private AdvancedClusterReplicationSpec() {}
    public Map<String,String> containerId() {
        return this.containerId == null ? Map.of() : this.containerId;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Provide this value if you set a `cluster_type` of SHARDED or GEOSHARDED. Omit this value if you selected a `cluster_type` of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a `num_shards` value of 1 and a `cluster_type` of SHARDED, Atlas deploys a single-shard [sharded cluster](https://docs.atlas.mongodb.com/reference/glossary/#std-term-sharded-cluster). Don&#39;t create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don&#39;t provide the same benefits as multi-shard configurations.
     * 
     */
    public Optional<Integer> numShards() {
        return Optional.ofNullable(this.numShards);
    }
    /**
     * @return Configuration for the hardware specifications for nodes set for a given regionEach `region_configs` object describes the region&#39;s priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `region_configs` object must have either an `analytics_specs` object, `electable_specs` object, or `read_only_specs` object. See below
     * 
     */
    public List<AdvancedClusterReplicationSpecRegionConfig> regionConfigs() {
        return this.regionConfigs;
    }
    /**
     * @return Name for the zone in a Global Cluster.
     * 
     */
    public Optional<String> zoneName() {
        return Optional.ofNullable(this.zoneName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AdvancedClusterReplicationSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> containerId;
        private @Nullable String id;
        private @Nullable Integer numShards;
        private List<AdvancedClusterReplicationSpecRegionConfig> regionConfigs;
        private @Nullable String zoneName;
        public Builder() {}
        public Builder(AdvancedClusterReplicationSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerId = defaults.containerId;
    	      this.id = defaults.id;
    	      this.numShards = defaults.numShards;
    	      this.regionConfigs = defaults.regionConfigs;
    	      this.zoneName = defaults.zoneName;
        }

        @CustomType.Setter
        public Builder containerId(@Nullable Map<String,String> containerId) {
            this.containerId = containerId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder numShards(@Nullable Integer numShards) {
            this.numShards = numShards;
            return this;
        }
        @CustomType.Setter
        public Builder regionConfigs(List<AdvancedClusterReplicationSpecRegionConfig> regionConfigs) {
            this.regionConfigs = Objects.requireNonNull(regionConfigs);
            return this;
        }
        public Builder regionConfigs(AdvancedClusterReplicationSpecRegionConfig... regionConfigs) {
            return regionConfigs(List.of(regionConfigs));
        }
        @CustomType.Setter
        public Builder zoneName(@Nullable String zoneName) {
            this.zoneName = zoneName;
            return this;
        }
        public AdvancedClusterReplicationSpec build() {
            final var _resultValue = new AdvancedClusterReplicationSpec();
            _resultValue.containerId = containerId;
            _resultValue.id = id;
            _resultValue.numShards = numShards;
            _resultValue.regionConfigs = regionConfigs;
            _resultValue.zoneName = zoneName;
            return _resultValue;
        }
    }
}
