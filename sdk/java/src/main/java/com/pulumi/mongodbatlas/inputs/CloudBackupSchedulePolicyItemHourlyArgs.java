// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudBackupSchedulePolicyItemHourlyArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudBackupSchedulePolicyItemHourlyArgs Empty = new CloudBackupSchedulePolicyItemHourlyArgs();

    /**
     * Desired frequency of the new backup policy item specified by `frequency_type` (hourly in this case). The supported values for hourly policies are `1`, `2`, `4`, `6`, `8` or `12` hours. Note that `12` hours is the only accepted value for NVMe clusters.
     * 
     */
    @Import(name="frequencyInterval", required=true)
    private Output<Integer> frequencyInterval;

    /**
     * @return Desired frequency of the new backup policy item specified by `frequency_type` (hourly in this case). The supported values for hourly policies are `1`, `2`, `4`, `6`, `8` or `12` hours. Note that `12` hours is the only accepted value for NVMe clusters.
     * 
     */
    public Output<Integer> frequencyInterval() {
        return this.frequencyInterval;
    }

    /**
     * Frequency associated with the backup policy item. For hourly policies, the frequency type is defined as `hourly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     * 
     */
    @Import(name="frequencyType")
    private @Nullable Output<String> frequencyType;

    /**
     * @return Frequency associated with the backup policy item. For hourly policies, the frequency type is defined as `hourly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     * 
     */
    public Optional<Output<String>> frequencyType() {
        return Optional.ofNullable(this.frequencyType);
    }

    /**
     * Unique identifier of the backup policy item.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Unique identifier of the backup policy item.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
     * 
     */
    @Import(name="retentionUnit", required=true)
    private Output<String> retentionUnit;

    /**
     * @return Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
     * 
     */
    public Output<String> retentionUnit() {
        return this.retentionUnit;
    }

    /**
     * Value to associate with `retention_unit`.
     * 
     */
    @Import(name="retentionValue", required=true)
    private Output<Integer> retentionValue;

    /**
     * @return Value to associate with `retention_unit`.
     * 
     */
    public Output<Integer> retentionValue() {
        return this.retentionValue;
    }

    private CloudBackupSchedulePolicyItemHourlyArgs() {}

    private CloudBackupSchedulePolicyItemHourlyArgs(CloudBackupSchedulePolicyItemHourlyArgs $) {
        this.frequencyInterval = $.frequencyInterval;
        this.frequencyType = $.frequencyType;
        this.id = $.id;
        this.retentionUnit = $.retentionUnit;
        this.retentionValue = $.retentionValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudBackupSchedulePolicyItemHourlyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudBackupSchedulePolicyItemHourlyArgs $;

        public Builder() {
            $ = new CloudBackupSchedulePolicyItemHourlyArgs();
        }

        public Builder(CloudBackupSchedulePolicyItemHourlyArgs defaults) {
            $ = new CloudBackupSchedulePolicyItemHourlyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param frequencyInterval Desired frequency of the new backup policy item specified by `frequency_type` (hourly in this case). The supported values for hourly policies are `1`, `2`, `4`, `6`, `8` or `12` hours. Note that `12` hours is the only accepted value for NVMe clusters.
         * 
         * @return builder
         * 
         */
        public Builder frequencyInterval(Output<Integer> frequencyInterval) {
            $.frequencyInterval = frequencyInterval;
            return this;
        }

        /**
         * @param frequencyInterval Desired frequency of the new backup policy item specified by `frequency_type` (hourly in this case). The supported values for hourly policies are `1`, `2`, `4`, `6`, `8` or `12` hours. Note that `12` hours is the only accepted value for NVMe clusters.
         * 
         * @return builder
         * 
         */
        public Builder frequencyInterval(Integer frequencyInterval) {
            return frequencyInterval(Output.of(frequencyInterval));
        }

        /**
         * @param frequencyType Frequency associated with the backup policy item. For hourly policies, the frequency type is defined as `hourly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
         * 
         * @return builder
         * 
         */
        public Builder frequencyType(@Nullable Output<String> frequencyType) {
            $.frequencyType = frequencyType;
            return this;
        }

        /**
         * @param frequencyType Frequency associated with the backup policy item. For hourly policies, the frequency type is defined as `hourly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
         * 
         * @return builder
         * 
         */
        public Builder frequencyType(String frequencyType) {
            return frequencyType(Output.of(frequencyType));
        }

        /**
         * @param id Unique identifier of the backup policy item.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Unique identifier of the backup policy item.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param retentionUnit Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
         * 
         * @return builder
         * 
         */
        public Builder retentionUnit(Output<String> retentionUnit) {
            $.retentionUnit = retentionUnit;
            return this;
        }

        /**
         * @param retentionUnit Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
         * 
         * @return builder
         * 
         */
        public Builder retentionUnit(String retentionUnit) {
            return retentionUnit(Output.of(retentionUnit));
        }

        /**
         * @param retentionValue Value to associate with `retention_unit`.
         * 
         * @return builder
         * 
         */
        public Builder retentionValue(Output<Integer> retentionValue) {
            $.retentionValue = retentionValue;
            return this;
        }

        /**
         * @param retentionValue Value to associate with `retention_unit`.
         * 
         * @return builder
         * 
         */
        public Builder retentionValue(Integer retentionValue) {
            return retentionValue(Output.of(retentionValue));
        }

        public CloudBackupSchedulePolicyItemHourlyArgs build() {
            if ($.frequencyInterval == null) {
                throw new MissingRequiredPropertyException("CloudBackupSchedulePolicyItemHourlyArgs", "frequencyInterval");
            }
            if ($.retentionUnit == null) {
                throw new MissingRequiredPropertyException("CloudBackupSchedulePolicyItemHourlyArgs", "retentionUnit");
            }
            if ($.retentionValue == null) {
                throw new MissingRequiredPropertyException("CloudBackupSchedulePolicyItemHourlyArgs", "retentionValue");
            }
            return $;
        }
    }

}
