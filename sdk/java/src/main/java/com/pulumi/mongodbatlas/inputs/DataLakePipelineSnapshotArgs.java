// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataLakePipelineSnapshotArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataLakePipelineSnapshotArgs Empty = new DataLakePipelineSnapshotArgs();

    @Import(name="copyRegion")
    private @Nullable Output<String> copyRegion;

    public Optional<Output<String>> copyRegion() {
        return Optional.ofNullable(this.copyRegion);
    }

    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="expiresAt")
    private @Nullable Output<String> expiresAt;

    public Optional<Output<String>> expiresAt() {
        return Optional.ofNullable(this.expiresAt);
    }

    @Import(name="frequencyYype")
    private @Nullable Output<String> frequencyYype;

    public Optional<Output<String>> frequencyYype() {
        return Optional.ofNullable(this.frequencyYype);
    }

    /**
     * Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="masterKey")
    private @Nullable Output<String> masterKey;

    public Optional<Output<String>> masterKey() {
        return Optional.ofNullable(this.masterKey);
    }

    @Import(name="mongodVersion")
    private @Nullable Output<String> mongodVersion;

    public Optional<Output<String>> mongodVersion() {
        return Optional.ofNullable(this.mongodVersion);
    }

    @Import(name="policies")
    private @Nullable Output<List<String>> policies;

    public Optional<Output<List<String>>> policies() {
        return Optional.ofNullable(this.policies);
    }

    /**
     * Target cloud provider for this Data Lake Pipeline.
     * 
     */
    @Import(name="provider")
    private @Nullable Output<String> provider;

    /**
     * @return Target cloud provider for this Data Lake Pipeline.
     * 
     */
    public Optional<Output<String>> provider() {
        return Optional.ofNullable(this.provider);
    }

    @Import(name="replicaSetName")
    private @Nullable Output<String> replicaSetName;

    public Optional<Output<String>> replicaSetName() {
        return Optional.ofNullable(this.replicaSetName);
    }

    @Import(name="size")
    private @Nullable Output<Integer> size;

    public Optional<Output<Integer>> size() {
        return Optional.ofNullable(this.size);
    }

    @Import(name="snapshotType")
    private @Nullable Output<String> snapshotType;

    public Optional<Output<String>> snapshotType() {
        return Optional.ofNullable(this.snapshotType);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Type of ingestion source of this Data Lake Pipeline.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of ingestion source of this Data Lake Pipeline.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private DataLakePipelineSnapshotArgs() {}

    private DataLakePipelineSnapshotArgs(DataLakePipelineSnapshotArgs $) {
        this.copyRegion = $.copyRegion;
        this.createdAt = $.createdAt;
        this.expiresAt = $.expiresAt;
        this.frequencyYype = $.frequencyYype;
        this.id = $.id;
        this.masterKey = $.masterKey;
        this.mongodVersion = $.mongodVersion;
        this.policies = $.policies;
        this.provider = $.provider;
        this.replicaSetName = $.replicaSetName;
        this.size = $.size;
        this.snapshotType = $.snapshotType;
        this.status = $.status;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataLakePipelineSnapshotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataLakePipelineSnapshotArgs $;

        public Builder() {
            $ = new DataLakePipelineSnapshotArgs();
        }

        public Builder(DataLakePipelineSnapshotArgs defaults) {
            $ = new DataLakePipelineSnapshotArgs(Objects.requireNonNull(defaults));
        }

        public Builder copyRegion(@Nullable Output<String> copyRegion) {
            $.copyRegion = copyRegion;
            return this;
        }

        public Builder copyRegion(String copyRegion) {
            return copyRegion(Output.of(copyRegion));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder expiresAt(@Nullable Output<String> expiresAt) {
            $.expiresAt = expiresAt;
            return this;
        }

        public Builder expiresAt(String expiresAt) {
            return expiresAt(Output.of(expiresAt));
        }

        public Builder frequencyYype(@Nullable Output<String> frequencyYype) {
            $.frequencyYype = frequencyYype;
            return this;
        }

        public Builder frequencyYype(String frequencyYype) {
            return frequencyYype(Output.of(frequencyYype));
        }

        /**
         * @param id Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder masterKey(@Nullable Output<String> masterKey) {
            $.masterKey = masterKey;
            return this;
        }

        public Builder masterKey(String masterKey) {
            return masterKey(Output.of(masterKey));
        }

        public Builder mongodVersion(@Nullable Output<String> mongodVersion) {
            $.mongodVersion = mongodVersion;
            return this;
        }

        public Builder mongodVersion(String mongodVersion) {
            return mongodVersion(Output.of(mongodVersion));
        }

        public Builder policies(@Nullable Output<List<String>> policies) {
            $.policies = policies;
            return this;
        }

        public Builder policies(List<String> policies) {
            return policies(Output.of(policies));
        }

        public Builder policies(String... policies) {
            return policies(List.of(policies));
        }

        /**
         * @param provider Target cloud provider for this Data Lake Pipeline.
         * 
         * @return builder
         * 
         */
        public Builder provider(@Nullable Output<String> provider) {
            $.provider = provider;
            return this;
        }

        /**
         * @param provider Target cloud provider for this Data Lake Pipeline.
         * 
         * @return builder
         * 
         */
        public Builder provider(String provider) {
            return provider(Output.of(provider));
        }

        public Builder replicaSetName(@Nullable Output<String> replicaSetName) {
            $.replicaSetName = replicaSetName;
            return this;
        }

        public Builder replicaSetName(String replicaSetName) {
            return replicaSetName(Output.of(replicaSetName));
        }

        public Builder size(@Nullable Output<Integer> size) {
            $.size = size;
            return this;
        }

        public Builder size(Integer size) {
            return size(Output.of(size));
        }

        public Builder snapshotType(@Nullable Output<String> snapshotType) {
            $.snapshotType = snapshotType;
            return this;
        }

        public Builder snapshotType(String snapshotType) {
            return snapshotType(Output.of(snapshotType));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param type Type of ingestion source of this Data Lake Pipeline.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of ingestion source of this Data Lake Pipeline.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DataLakePipelineSnapshotArgs build() {
            return $;
        }
    }

}
