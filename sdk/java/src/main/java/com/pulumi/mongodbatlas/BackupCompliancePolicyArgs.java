// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.inputs.BackupCompliancePolicyOnDemandPolicyItemArgs;
import com.pulumi.mongodbatlas.inputs.BackupCompliancePolicyPolicyItemDailyArgs;
import com.pulumi.mongodbatlas.inputs.BackupCompliancePolicyPolicyItemHourlyArgs;
import com.pulumi.mongodbatlas.inputs.BackupCompliancePolicyPolicyItemMonthlyArgs;
import com.pulumi.mongodbatlas.inputs.BackupCompliancePolicyPolicyItemWeeklyArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupCompliancePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupCompliancePolicyArgs Empty = new BackupCompliancePolicyArgs();

    /**
     * Email address of a security or legal representative for the Backup Compliance Policy who is authorized to update the Backup Compliance Policy settings.
     * 
     */
    @Import(name="authorizedEmail", required=true)
    private Output<String> authorizedEmail;

    /**
     * @return Email address of a security or legal representative for the Backup Compliance Policy who is authorized to update the Backup Compliance Policy settings.
     * 
     */
    public Output<String> authorizedEmail() {
        return this.authorizedEmail;
    }

    /**
     * First name of the user who authorized to update the Backup Compliance Policy settings.
     * 
     */
    @Import(name="authorizedUserFirstName", required=true)
    private Output<String> authorizedUserFirstName;

    /**
     * @return First name of the user who authorized to update the Backup Compliance Policy settings.
     * 
     */
    public Output<String> authorizedUserFirstName() {
        return this.authorizedUserFirstName;
    }

    /**
     * Last name of the user who authorized to update the Backup Compliance Policy settings.
     * 
     */
    @Import(name="authorizedUserLastName", required=true)
    private Output<String> authorizedUserLastName;

    /**
     * @return Last name of the user who authorized to update the Backup Compliance Policy settings.
     * 
     */
    public Output<String> authorizedUserLastName() {
        return this.authorizedUserLastName;
    }

    /**
     * Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
     * 
     */
    @Import(name="copyProtectionEnabled")
    private @Nullable Output<Boolean> copyProtectionEnabled;

    /**
     * @return Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
     * 
     */
    public Optional<Output<Boolean>> copyProtectionEnabled() {
        return Optional.ofNullable(this.copyProtectionEnabled);
    }

    /**
     * Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
     * 
     */
    @Import(name="encryptionAtRestEnabled")
    private @Nullable Output<Boolean> encryptionAtRestEnabled;

    /**
     * @return Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
     * 
     */
    public Optional<Output<Boolean>> encryptionAtRestEnabled() {
        return Optional.ofNullable(this.encryptionAtRestEnabled);
    }

    @Import(name="onDemandPolicyItem", required=true)
    private Output<BackupCompliancePolicyOnDemandPolicyItemArgs> onDemandPolicyItem;

    public Output<BackupCompliancePolicyOnDemandPolicyItemArgs> onDemandPolicyItem() {
        return this.onDemandPolicyItem;
    }

    /**
     * Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
     * 
     */
    @Import(name="pitEnabled")
    private @Nullable Output<Boolean> pitEnabled;

    /**
     * @return Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
     * 
     */
    public Optional<Output<Boolean>> pitEnabled() {
        return Optional.ofNullable(this.pitEnabled);
    }

    @Import(name="policyItemDaily")
    private @Nullable Output<BackupCompliancePolicyPolicyItemDailyArgs> policyItemDaily;

    public Optional<Output<BackupCompliancePolicyPolicyItemDailyArgs>> policyItemDaily() {
        return Optional.ofNullable(this.policyItemDaily);
    }

    @Import(name="policyItemHourly")
    private @Nullable Output<BackupCompliancePolicyPolicyItemHourlyArgs> policyItemHourly;

    public Optional<Output<BackupCompliancePolicyPolicyItemHourlyArgs>> policyItemHourly() {
        return Optional.ofNullable(this.policyItemHourly);
    }

    @Import(name="policyItemMonthlies")
    private @Nullable Output<List<BackupCompliancePolicyPolicyItemMonthlyArgs>> policyItemMonthlies;

    public Optional<Output<List<BackupCompliancePolicyPolicyItemMonthlyArgs>>> policyItemMonthlies() {
        return Optional.ofNullable(this.policyItemMonthlies);
    }

    @Import(name="policyItemWeeklies")
    private @Nullable Output<List<BackupCompliancePolicyPolicyItemWeeklyArgs>> policyItemWeeklies;

    public Optional<Output<List<BackupCompliancePolicyPolicyItemWeeklyArgs>>> policyItemWeeklies() {
        return Optional.ofNullable(this.policyItemWeeklies);
    }

    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies your project.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can&#39;t exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
     * 
     */
    @Import(name="restoreWindowDays")
    private @Nullable Output<Integer> restoreWindowDays;

    /**
     * @return Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can&#39;t exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
     * 
     */
    public Optional<Output<Integer>> restoreWindowDays() {
        return Optional.ofNullable(this.restoreWindowDays);
    }

    private BackupCompliancePolicyArgs() {}

    private BackupCompliancePolicyArgs(BackupCompliancePolicyArgs $) {
        this.authorizedEmail = $.authorizedEmail;
        this.authorizedUserFirstName = $.authorizedUserFirstName;
        this.authorizedUserLastName = $.authorizedUserLastName;
        this.copyProtectionEnabled = $.copyProtectionEnabled;
        this.encryptionAtRestEnabled = $.encryptionAtRestEnabled;
        this.onDemandPolicyItem = $.onDemandPolicyItem;
        this.pitEnabled = $.pitEnabled;
        this.policyItemDaily = $.policyItemDaily;
        this.policyItemHourly = $.policyItemHourly;
        this.policyItemMonthlies = $.policyItemMonthlies;
        this.policyItemWeeklies = $.policyItemWeeklies;
        this.projectId = $.projectId;
        this.restoreWindowDays = $.restoreWindowDays;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupCompliancePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupCompliancePolicyArgs $;

        public Builder() {
            $ = new BackupCompliancePolicyArgs();
        }

        public Builder(BackupCompliancePolicyArgs defaults) {
            $ = new BackupCompliancePolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorizedEmail Email address of a security or legal representative for the Backup Compliance Policy who is authorized to update the Backup Compliance Policy settings.
         * 
         * @return builder
         * 
         */
        public Builder authorizedEmail(Output<String> authorizedEmail) {
            $.authorizedEmail = authorizedEmail;
            return this;
        }

        /**
         * @param authorizedEmail Email address of a security or legal representative for the Backup Compliance Policy who is authorized to update the Backup Compliance Policy settings.
         * 
         * @return builder
         * 
         */
        public Builder authorizedEmail(String authorizedEmail) {
            return authorizedEmail(Output.of(authorizedEmail));
        }

        /**
         * @param authorizedUserFirstName First name of the user who authorized to update the Backup Compliance Policy settings.
         * 
         * @return builder
         * 
         */
        public Builder authorizedUserFirstName(Output<String> authorizedUserFirstName) {
            $.authorizedUserFirstName = authorizedUserFirstName;
            return this;
        }

        /**
         * @param authorizedUserFirstName First name of the user who authorized to update the Backup Compliance Policy settings.
         * 
         * @return builder
         * 
         */
        public Builder authorizedUserFirstName(String authorizedUserFirstName) {
            return authorizedUserFirstName(Output.of(authorizedUserFirstName));
        }

        /**
         * @param authorizedUserLastName Last name of the user who authorized to update the Backup Compliance Policy settings.
         * 
         * @return builder
         * 
         */
        public Builder authorizedUserLastName(Output<String> authorizedUserLastName) {
            $.authorizedUserLastName = authorizedUserLastName;
            return this;
        }

        /**
         * @param authorizedUserLastName Last name of the user who authorized to update the Backup Compliance Policy settings.
         * 
         * @return builder
         * 
         */
        public Builder authorizedUserLastName(String authorizedUserLastName) {
            return authorizedUserLastName(Output.of(authorizedUserLastName));
        }

        /**
         * @param copyProtectionEnabled Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder copyProtectionEnabled(@Nullable Output<Boolean> copyProtectionEnabled) {
            $.copyProtectionEnabled = copyProtectionEnabled;
            return this;
        }

        /**
         * @param copyProtectionEnabled Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder copyProtectionEnabled(Boolean copyProtectionEnabled) {
            return copyProtectionEnabled(Output.of(copyProtectionEnabled));
        }

        /**
         * @param encryptionAtRestEnabled Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder encryptionAtRestEnabled(@Nullable Output<Boolean> encryptionAtRestEnabled) {
            $.encryptionAtRestEnabled = encryptionAtRestEnabled;
            return this;
        }

        /**
         * @param encryptionAtRestEnabled Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder encryptionAtRestEnabled(Boolean encryptionAtRestEnabled) {
            return encryptionAtRestEnabled(Output.of(encryptionAtRestEnabled));
        }

        public Builder onDemandPolicyItem(Output<BackupCompliancePolicyOnDemandPolicyItemArgs> onDemandPolicyItem) {
            $.onDemandPolicyItem = onDemandPolicyItem;
            return this;
        }

        public Builder onDemandPolicyItem(BackupCompliancePolicyOnDemandPolicyItemArgs onDemandPolicyItem) {
            return onDemandPolicyItem(Output.of(onDemandPolicyItem));
        }

        /**
         * @param pitEnabled Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder pitEnabled(@Nullable Output<Boolean> pitEnabled) {
            $.pitEnabled = pitEnabled;
            return this;
        }

        /**
         * @param pitEnabled Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder pitEnabled(Boolean pitEnabled) {
            return pitEnabled(Output.of(pitEnabled));
        }

        public Builder policyItemDaily(@Nullable Output<BackupCompliancePolicyPolicyItemDailyArgs> policyItemDaily) {
            $.policyItemDaily = policyItemDaily;
            return this;
        }

        public Builder policyItemDaily(BackupCompliancePolicyPolicyItemDailyArgs policyItemDaily) {
            return policyItemDaily(Output.of(policyItemDaily));
        }

        public Builder policyItemHourly(@Nullable Output<BackupCompliancePolicyPolicyItemHourlyArgs> policyItemHourly) {
            $.policyItemHourly = policyItemHourly;
            return this;
        }

        public Builder policyItemHourly(BackupCompliancePolicyPolicyItemHourlyArgs policyItemHourly) {
            return policyItemHourly(Output.of(policyItemHourly));
        }

        public Builder policyItemMonthlies(@Nullable Output<List<BackupCompliancePolicyPolicyItemMonthlyArgs>> policyItemMonthlies) {
            $.policyItemMonthlies = policyItemMonthlies;
            return this;
        }

        public Builder policyItemMonthlies(List<BackupCompliancePolicyPolicyItemMonthlyArgs> policyItemMonthlies) {
            return policyItemMonthlies(Output.of(policyItemMonthlies));
        }

        public Builder policyItemMonthlies(BackupCompliancePolicyPolicyItemMonthlyArgs... policyItemMonthlies) {
            return policyItemMonthlies(List.of(policyItemMonthlies));
        }

        public Builder policyItemWeeklies(@Nullable Output<List<BackupCompliancePolicyPolicyItemWeeklyArgs>> policyItemWeeklies) {
            $.policyItemWeeklies = policyItemWeeklies;
            return this;
        }

        public Builder policyItemWeeklies(List<BackupCompliancePolicyPolicyItemWeeklyArgs> policyItemWeeklies) {
            return policyItemWeeklies(Output.of(policyItemWeeklies));
        }

        public Builder policyItemWeeklies(BackupCompliancePolicyPolicyItemWeeklyArgs... policyItemWeeklies) {
            return policyItemWeeklies(List.of(policyItemWeeklies));
        }

        /**
         * @param projectId Unique 24-hexadecimal digit string that identifies your project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Unique 24-hexadecimal digit string that identifies your project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param restoreWindowDays Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can&#39;t exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
         * 
         * @return builder
         * 
         */
        public Builder restoreWindowDays(@Nullable Output<Integer> restoreWindowDays) {
            $.restoreWindowDays = restoreWindowDays;
            return this;
        }

        /**
         * @param restoreWindowDays Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can&#39;t exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
         * 
         * @return builder
         * 
         */
        public Builder restoreWindowDays(Integer restoreWindowDays) {
            return restoreWindowDays(Output.of(restoreWindowDays));
        }

        public BackupCompliancePolicyArgs build() {
            if ($.authorizedEmail == null) {
                throw new MissingRequiredPropertyException("BackupCompliancePolicyArgs", "authorizedEmail");
            }
            if ($.authorizedUserFirstName == null) {
                throw new MissingRequiredPropertyException("BackupCompliancePolicyArgs", "authorizedUserFirstName");
            }
            if ($.authorizedUserLastName == null) {
                throw new MissingRequiredPropertyException("BackupCompliancePolicyArgs", "authorizedUserLastName");
            }
            if ($.onDemandPolicyItem == null) {
                throw new MissingRequiredPropertyException("BackupCompliancePolicyArgs", "onDemandPolicyItem");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("BackupCompliancePolicyArgs", "projectId");
            }
            return $;
        }
    }

}
