// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AdvancedClusterPinnedFcvArgs extends com.pulumi.resources.ResourceArgs {

    public static final AdvancedClusterPinnedFcvArgs Empty = new AdvancedClusterPinnedFcvArgs();

    /**
     * Expiration date of the fixed FCV. This value is in the ISO 8601 timestamp format (e.g. &#34;2024-12-04T16:25:00Z&#34;). Note that this field cannot exceed 4 weeks from the pinned date.
     * 
     */
    @Import(name="expirationDate", required=true)
    private Output<String> expirationDate;

    /**
     * @return Expiration date of the fixed FCV. This value is in the ISO 8601 timestamp format (e.g. &#34;2024-12-04T16:25:00Z&#34;). Note that this field cannot exceed 4 weeks from the pinned date.
     * 
     */
    public Output<String> expirationDate() {
        return this.expirationDate;
    }

    /**
     * Feature compatibility version of the cluster.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Feature compatibility version of the cluster.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private AdvancedClusterPinnedFcvArgs() {}

    private AdvancedClusterPinnedFcvArgs(AdvancedClusterPinnedFcvArgs $) {
        this.expirationDate = $.expirationDate;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AdvancedClusterPinnedFcvArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdvancedClusterPinnedFcvArgs $;

        public Builder() {
            $ = new AdvancedClusterPinnedFcvArgs();
        }

        public Builder(AdvancedClusterPinnedFcvArgs defaults) {
            $ = new AdvancedClusterPinnedFcvArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expirationDate Expiration date of the fixed FCV. This value is in the ISO 8601 timestamp format (e.g. &#34;2024-12-04T16:25:00Z&#34;). Note that this field cannot exceed 4 weeks from the pinned date.
         * 
         * @return builder
         * 
         */
        public Builder expirationDate(Output<String> expirationDate) {
            $.expirationDate = expirationDate;
            return this;
        }

        /**
         * @param expirationDate Expiration date of the fixed FCV. This value is in the ISO 8601 timestamp format (e.g. &#34;2024-12-04T16:25:00Z&#34;). Note that this field cannot exceed 4 weeks from the pinned date.
         * 
         * @return builder
         * 
         */
        public Builder expirationDate(String expirationDate) {
            return expirationDate(Output.of(expirationDate));
        }

        /**
         * @param version Feature compatibility version of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Feature compatibility version of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public AdvancedClusterPinnedFcvArgs build() {
            if ($.expirationDate == null) {
                throw new MissingRequiredPropertyException("AdvancedClusterPinnedFcvArgs", "expirationDate");
            }
            return $;
        }
    }

}
