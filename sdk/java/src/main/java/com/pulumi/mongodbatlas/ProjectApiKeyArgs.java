// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ProjectApiKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectApiKeyArgs Empty = new ProjectApiKeyArgs();

    /**
     * Description of this Organization API key.
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return Description of this Organization API key.
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    @Import(name="projectId", required=true)
    private Output<String> projectId;

    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project.  You must specify an array even if you are only associating a single role with the Programmatic API key.
     * The following are valid roles:
     * 
     */
    @Import(name="roleNames", required=true)
    private Output<List<String>> roleNames;

    /**
     * @return List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project.  You must specify an array even if you are only associating a single role with the Programmatic API key.
     * The following are valid roles:
     * 
     */
    public Output<List<String>> roleNames() {
        return this.roleNames;
    }

    private ProjectApiKeyArgs() {}

    private ProjectApiKeyArgs(ProjectApiKeyArgs $) {
        this.description = $.description;
        this.projectId = $.projectId;
        this.roleNames = $.roleNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectApiKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectApiKeyArgs $;

        public Builder() {
            $ = new ProjectApiKeyArgs();
        }

        public Builder(ProjectApiKeyArgs defaults) {
            $ = new ProjectApiKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of this Organization API key.
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of this Organization API key.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param roleNames List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project.  You must specify an array even if you are only associating a single role with the Programmatic API key.
         * The following are valid roles:
         * 
         * @return builder
         * 
         */
        public Builder roleNames(Output<List<String>> roleNames) {
            $.roleNames = roleNames;
            return this;
        }

        /**
         * @param roleNames List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project.  You must specify an array even if you are only associating a single role with the Programmatic API key.
         * The following are valid roles:
         * 
         * @return builder
         * 
         */
        public Builder roleNames(List<String> roleNames) {
            return roleNames(Output.of(roleNames));
        }

        /**
         * @param roleNames List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project.  You must specify an array even if you are only associating a single role with the Programmatic API key.
         * The following are valid roles:
         * 
         * @return builder
         * 
         */
        public Builder roleNames(String... roleNames) {
            return roleNames(List.of(roleNames));
        }

        public ProjectApiKeyArgs build() {
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.projectId = Objects.requireNonNull($.projectId, "expected parameter 'projectId' to be non-null");
            $.roleNames = Objects.requireNonNull($.roleNames, "expected parameter 'roleNames' to be non-null");
            return $;
        }
    }

}
