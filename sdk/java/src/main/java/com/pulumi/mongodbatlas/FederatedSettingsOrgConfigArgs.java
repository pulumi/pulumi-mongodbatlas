// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FederatedSettingsOrgConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FederatedSettingsOrgConfigArgs Empty = new FederatedSettingsOrgConfigArgs();

    @Import(name="domainAllowLists")
    private @Nullable Output<List<String>> domainAllowLists;

    public Optional<Output<List<String>>> domainAllowLists() {
        return Optional.ofNullable(this.domainAllowLists);
    }

    @Import(name="domainRestrictionEnabled", required=true)
    private Output<Boolean> domainRestrictionEnabled;

    public Output<Boolean> domainRestrictionEnabled() {
        return this.domainRestrictionEnabled;
    }

    @Import(name="federationSettingsId", required=true)
    private Output<String> federationSettingsId;

    public Output<String> federationSettingsId() {
        return this.federationSettingsId;
    }

    @Import(name="identityProviderId", required=true)
    private Output<String> identityProviderId;

    public Output<String> identityProviderId() {
        return this.identityProviderId;
    }

    @Import(name="orgId", required=true)
    private Output<String> orgId;

    public Output<String> orgId() {
        return this.orgId;
    }

    @Import(name="postAuthRoleGrants")
    private @Nullable Output<List<String>> postAuthRoleGrants;

    public Optional<Output<List<String>>> postAuthRoleGrants() {
        return Optional.ofNullable(this.postAuthRoleGrants);
    }

    private FederatedSettingsOrgConfigArgs() {}

    private FederatedSettingsOrgConfigArgs(FederatedSettingsOrgConfigArgs $) {
        this.domainAllowLists = $.domainAllowLists;
        this.domainRestrictionEnabled = $.domainRestrictionEnabled;
        this.federationSettingsId = $.federationSettingsId;
        this.identityProviderId = $.identityProviderId;
        this.orgId = $.orgId;
        this.postAuthRoleGrants = $.postAuthRoleGrants;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FederatedSettingsOrgConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FederatedSettingsOrgConfigArgs $;

        public Builder() {
            $ = new FederatedSettingsOrgConfigArgs();
        }

        public Builder(FederatedSettingsOrgConfigArgs defaults) {
            $ = new FederatedSettingsOrgConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder domainAllowLists(@Nullable Output<List<String>> domainAllowLists) {
            $.domainAllowLists = domainAllowLists;
            return this;
        }

        public Builder domainAllowLists(List<String> domainAllowLists) {
            return domainAllowLists(Output.of(domainAllowLists));
        }

        public Builder domainAllowLists(String... domainAllowLists) {
            return domainAllowLists(List.of(domainAllowLists));
        }

        public Builder domainRestrictionEnabled(Output<Boolean> domainRestrictionEnabled) {
            $.domainRestrictionEnabled = domainRestrictionEnabled;
            return this;
        }

        public Builder domainRestrictionEnabled(Boolean domainRestrictionEnabled) {
            return domainRestrictionEnabled(Output.of(domainRestrictionEnabled));
        }

        public Builder federationSettingsId(Output<String> federationSettingsId) {
            $.federationSettingsId = federationSettingsId;
            return this;
        }

        public Builder federationSettingsId(String federationSettingsId) {
            return federationSettingsId(Output.of(federationSettingsId));
        }

        public Builder identityProviderId(Output<String> identityProviderId) {
            $.identityProviderId = identityProviderId;
            return this;
        }

        public Builder identityProviderId(String identityProviderId) {
            return identityProviderId(Output.of(identityProviderId));
        }

        public Builder orgId(Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        public Builder postAuthRoleGrants(@Nullable Output<List<String>> postAuthRoleGrants) {
            $.postAuthRoleGrants = postAuthRoleGrants;
            return this;
        }

        public Builder postAuthRoleGrants(List<String> postAuthRoleGrants) {
            return postAuthRoleGrants(Output.of(postAuthRoleGrants));
        }

        public Builder postAuthRoleGrants(String... postAuthRoleGrants) {
            return postAuthRoleGrants(List.of(postAuthRoleGrants));
        }

        public FederatedSettingsOrgConfigArgs build() {
            if ($.domainRestrictionEnabled == null) {
                throw new MissingRequiredPropertyException("FederatedSettingsOrgConfigArgs", "domainRestrictionEnabled");
            }
            if ($.federationSettingsId == null) {
                throw new MissingRequiredPropertyException("FederatedSettingsOrgConfigArgs", "federationSettingsId");
            }
            if ($.identityProviderId == null) {
                throw new MissingRequiredPropertyException("FederatedSettingsOrgConfigArgs", "identityProviderId");
            }
            if ($.orgId == null) {
                throw new MissingRequiredPropertyException("FederatedSettingsOrgConfigArgs", "orgId");
            }
            return $;
        }
    }

}
