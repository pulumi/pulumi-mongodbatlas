// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.mongodbatlas.CloudProviderSnapshotArgs;
import com.pulumi.mongodbatlas.Utilities;
import com.pulumi.mongodbatlas.inputs.CloudProviderSnapshotState;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * **WARNING:** This resource is deprecated, use `mongodbatlas.CloudBackupSnapshot`
 * 
 * `mongodbatlas.CloudProviderSnapshot` provides a resource to take a cloud backup snapshot on demand.
 * On-demand snapshots happen immediately, unlike scheduled snapshots which occur at regular intervals. If there is already an on-demand snapshot with a status of queued or inProgress, you must wait until Atlas has completed the on-demand snapshot before taking another.
 * 
 * &gt; **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 * 
 * ## Example Usage
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.mongodbatlas.Cluster;
 * import com.pulumi.mongodbatlas.ClusterArgs;
 * import com.pulumi.mongodbatlas.CloudProviderSnapshot;
 * import com.pulumi.mongodbatlas.CloudProviderSnapshotArgs;
 * import com.pulumi.mongodbatlas.CloudProviderSnapshotRestoreJob;
 * import com.pulumi.mongodbatlas.CloudProviderSnapshotRestoreJobArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myCluster = new Cluster(&#34;myCluster&#34;, ClusterArgs.builder()        
 *             .projectId(&#34;5cf5a45a9ccf6400e60981b6&#34;)
 *             .name(&#34;MyCluster&#34;)
 *             .providerName(&#34;AWS&#34;)
 *             .providerRegionName(&#34;EU_WEST_2&#34;)
 *             .providerInstanceSizeName(&#34;M10&#34;)
 *             .cloudBackup(true)
 *             .build());
 * 
 *         var testCloudProviderSnapshot = new CloudProviderSnapshot(&#34;testCloudProviderSnapshot&#34;, CloudProviderSnapshotArgs.builder()        
 *             .projectId(myCluster.projectId())
 *             .clusterName(myCluster.name())
 *             .description(&#34;myDescription&#34;)
 *             .retentionInDays(1)
 *             .timeout(&#34;10m&#34;)
 *             .build());
 * 
 *         var testCloudProviderSnapshotRestoreJob = new CloudProviderSnapshotRestoreJob(&#34;testCloudProviderSnapshotRestoreJob&#34;, CloudProviderSnapshotRestoreJobArgs.builder()        
 *             .projectId(testCloudProviderSnapshot.projectId())
 *             .clusterName(testCloudProviderSnapshot.clusterName())
 *             .snapshotId(testCloudProviderSnapshot.snapshotId())
 *             .deliveryType(Map.of(&#34;download&#34;, true))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Cloud Backup Snapshot entries can be imported using project project_id, cluster_name and snapshot_id (Unique identifier of the snapshot), in the format `PROJECTID-CLUSTERNAME-SNAPSHOTID`, e.g.
 * 
 * ```sh
 *  $ pulumi import mongodbatlas:index/cloudProviderSnapshot:CloudProviderSnapshot test 5d0f1f73cf09a29120e173cf-MyClusterTest-5d116d82014b764445b2f9b5
 * ```
 * 
 *  For more information see[MongoDB Atlas API Reference.](https://docs.atlas.mongodb.com/reference/api/cloud-backup/backup/backups/)
 * 
 */
@ResourceType(type="mongodbatlas:index/cloudProviderSnapshot:CloudProviderSnapshot")
public class CloudProviderSnapshot extends com.pulumi.resources.CustomResource {
    /**
     * The name of the Atlas cluster that contains the snapshots you want to retrieve.
     * 
     */
    @Export(name="clusterName", type=String.class, parameters={})
    private Output<String> clusterName;

    /**
     * @return The name of the Atlas cluster that contains the snapshots you want to retrieve.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }
    /**
     * UTC ISO 8601 formatted point in time when Atlas took the snapshot.
     * 
     */
    @Export(name="createdAt", type=String.class, parameters={})
    private Output<String> createdAt;

    /**
     * @return UTC ISO 8601 formatted point in time when Atlas took the snapshot.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * Description of the on-demand snapshot.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return Description of the on-demand snapshot.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
     * 
     */
    @Export(name="expiresAt", type=String.class, parameters={})
    private Output<String> expiresAt;

    /**
     * @return UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
     * 
     */
    public Output<String> expiresAt() {
        return this.expiresAt;
    }
    /**
     * Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
     * 
     */
    @Export(name="masterKeyUuid", type=String.class, parameters={})
    private Output<String> masterKeyUuid;

    /**
     * @return Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
     * 
     */
    public Output<String> masterKeyUuid() {
        return this.masterKeyUuid;
    }
    /**
     * Version of the MongoDB server.
     * 
     */
    @Export(name="mongodVersion", type=String.class, parameters={})
    private Output<String> mongodVersion;

    /**
     * @return Version of the MongoDB server.
     * 
     */
    public Output<String> mongodVersion() {
        return this.mongodVersion;
    }
    /**
     * The unique identifier of the project for the Atlas cluster.
     * 
     */
    @Export(name="projectId", type=String.class, parameters={})
    private Output<String> projectId;

    /**
     * @return The unique identifier of the project for the Atlas cluster.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * The number of days that Atlas should retain the on-demand snapshot. Must be at least 1.
     * 
     */
    @Export(name="retentionInDays", type=Integer.class, parameters={})
    private Output<Integer> retentionInDays;

    /**
     * @return The number of days that Atlas should retain the on-demand snapshot. Must be at least 1.
     * 
     */
    public Output<Integer> retentionInDays() {
        return this.retentionInDays;
    }
    /**
     * Unique identifier of the snapshot.
     * 
     */
    @Export(name="snapshotId", type=String.class, parameters={})
    private Output<String> snapshotId;

    /**
     * @return Unique identifier of the snapshot.
     * 
     */
    public Output<String> snapshotId() {
        return this.snapshotId;
    }
    /**
     * Specified the type of snapshot. Valid values are onDemand and scheduled.
     * 
     */
    @Export(name="snapshotType", type=String.class, parameters={})
    private Output<String> snapshotType;

    /**
     * @return Specified the type of snapshot. Valid values are onDemand and scheduled.
     * 
     */
    public Output<String> snapshotType() {
        return this.snapshotType;
    }
    /**
     * Current status of the snapshot. One of the following values will be returned: queued, inProgress, completed, failed.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return Current status of the snapshot. One of the following values will be returned: queued, inProgress, completed, failed.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Specifies the size of the snapshot in bytes.
     * 
     */
    @Export(name="storageSizeBytes", type=Integer.class, parameters={})
    private Output<Integer> storageSizeBytes;

    /**
     * @return Specifies the size of the snapshot in bytes.
     * 
     */
    public Output<Integer> storageSizeBytes() {
        return this.storageSizeBytes;
    }
    /**
     * The duration of time to wait to finish the on-demand snapshot. The timeout value is defined by a signed sequence of decimal numbers with an time unit suffix such as: `1h45m`, `300s`, `10m`, .... The valid time units are:  `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`. Default value for the timeout is `10m`
     * 
     */
    @Export(name="timeout", type=String.class, parameters={})
    private Output</* @Nullable */ String> timeout;

    /**
     * @return The duration of time to wait to finish the on-demand snapshot. The timeout value is defined by a signed sequence of decimal numbers with an time unit suffix such as: `1h45m`, `300s`, `10m`, .... The valid time units are:  `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`. Default value for the timeout is `10m`
     * 
     */
    public Output<Optional<String>> timeout() {
        return Codegen.optional(this.timeout);
    }
    /**
     * Specifies the type of cluster: replicaSet or shardedCluster.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Specifies the type of cluster: replicaSet or shardedCluster.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CloudProviderSnapshot(String name) {
        this(name, CloudProviderSnapshotArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CloudProviderSnapshot(String name, CloudProviderSnapshotArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CloudProviderSnapshot(String name, CloudProviderSnapshotArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("mongodbatlas:index/cloudProviderSnapshot:CloudProviderSnapshot", name, args == null ? CloudProviderSnapshotArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CloudProviderSnapshot(String name, Output<String> id, @Nullable CloudProviderSnapshotState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("mongodbatlas:index/cloudProviderSnapshot:CloudProviderSnapshot", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CloudProviderSnapshot get(String name, Output<String> id, @Nullable CloudProviderSnapshotState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CloudProviderSnapshot(name, id, state, options);
    }
}
