// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalClusterConfigManagedNamespaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final GlobalClusterConfigManagedNamespaceArgs Empty = new GlobalClusterConfigManagedNamespaceArgs();

    @Import(name="collection", required=true)
    private Output<String> collection;

    public Output<String> collection() {
        return this.collection;
    }

    @Import(name="customShardKey", required=true)
    private Output<String> customShardKey;

    public Output<String> customShardKey() {
        return this.customShardKey;
    }

    @Import(name="db", required=true)
    private Output<String> db;

    public Output<String> db() {
        return this.db;
    }

    @Import(name="isCustomShardKeyHashed")
    private @Nullable Output<Boolean> isCustomShardKeyHashed;

    public Optional<Output<Boolean>> isCustomShardKeyHashed() {
        return Optional.ofNullable(this.isCustomShardKeyHashed);
    }

    @Import(name="isShardKeyUnique")
    private @Nullable Output<Boolean> isShardKeyUnique;

    public Optional<Output<Boolean>> isShardKeyUnique() {
        return Optional.ofNullable(this.isShardKeyUnique);
    }

    private GlobalClusterConfigManagedNamespaceArgs() {}

    private GlobalClusterConfigManagedNamespaceArgs(GlobalClusterConfigManagedNamespaceArgs $) {
        this.collection = $.collection;
        this.customShardKey = $.customShardKey;
        this.db = $.db;
        this.isCustomShardKeyHashed = $.isCustomShardKeyHashed;
        this.isShardKeyUnique = $.isShardKeyUnique;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalClusterConfigManagedNamespaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalClusterConfigManagedNamespaceArgs $;

        public Builder() {
            $ = new GlobalClusterConfigManagedNamespaceArgs();
        }

        public Builder(GlobalClusterConfigManagedNamespaceArgs defaults) {
            $ = new GlobalClusterConfigManagedNamespaceArgs(Objects.requireNonNull(defaults));
        }

        public Builder collection(Output<String> collection) {
            $.collection = collection;
            return this;
        }

        public Builder collection(String collection) {
            return collection(Output.of(collection));
        }

        public Builder customShardKey(Output<String> customShardKey) {
            $.customShardKey = customShardKey;
            return this;
        }

        public Builder customShardKey(String customShardKey) {
            return customShardKey(Output.of(customShardKey));
        }

        public Builder db(Output<String> db) {
            $.db = db;
            return this;
        }

        public Builder db(String db) {
            return db(Output.of(db));
        }

        public Builder isCustomShardKeyHashed(@Nullable Output<Boolean> isCustomShardKeyHashed) {
            $.isCustomShardKeyHashed = isCustomShardKeyHashed;
            return this;
        }

        public Builder isCustomShardKeyHashed(Boolean isCustomShardKeyHashed) {
            return isCustomShardKeyHashed(Output.of(isCustomShardKeyHashed));
        }

        public Builder isShardKeyUnique(@Nullable Output<Boolean> isShardKeyUnique) {
            $.isShardKeyUnique = isShardKeyUnique;
            return this;
        }

        public Builder isShardKeyUnique(Boolean isShardKeyUnique) {
            return isShardKeyUnique(Output.of(isShardKeyUnique));
        }

        public GlobalClusterConfigManagedNamespaceArgs build() {
            if ($.collection == null) {
                throw new MissingRequiredPropertyException("GlobalClusterConfigManagedNamespaceArgs", "collection");
            }
            if ($.customShardKey == null) {
                throw new MissingRequiredPropertyException("GlobalClusterConfigManagedNamespaceArgs", "customShardKey");
            }
            if ($.db == null) {
                throw new MissingRequiredPropertyException("GlobalClusterConfigManagedNamespaceArgs", "db");
            }
            return $;
        }
    }

}
