// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetProjectsResultTeam {
    /**
     * @return `teams.#.role_names` - Each string in the array represents a project role assigned to the team. Every user associated with the team inherits these roles. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
     * 
     */
    private List<String> roleNames;
    /**
     * @return `teams.#.team_id` - The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
     * 
     */
    private String teamId;

    private GetProjectsResultTeam() {}
    /**
     * @return `teams.#.role_names` - Each string in the array represents a project role assigned to the team. Every user associated with the team inherits these roles. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
     * 
     */
    public List<String> roleNames() {
        return this.roleNames;
    }
    /**
     * @return `teams.#.team_id` - The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
     * 
     */
    public String teamId() {
        return this.teamId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectsResultTeam defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> roleNames;
        private String teamId;
        public Builder() {}
        public Builder(GetProjectsResultTeam defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.roleNames = defaults.roleNames;
    	      this.teamId = defaults.teamId;
        }

        @CustomType.Setter
        public Builder roleNames(List<String> roleNames) {
            this.roleNames = Objects.requireNonNull(roleNames);
            return this;
        }
        public Builder roleNames(String... roleNames) {
            return roleNames(List.of(roleNames));
        }
        @CustomType.Setter
        public Builder teamId(String teamId) {
            this.teamId = Objects.requireNonNull(teamId);
            return this;
        }
        public GetProjectsResultTeam build() {
            final var o = new GetProjectsResultTeam();
            o.roleNames = roleNames;
            o.teamId = teamId;
            return o;
        }
    }
}
