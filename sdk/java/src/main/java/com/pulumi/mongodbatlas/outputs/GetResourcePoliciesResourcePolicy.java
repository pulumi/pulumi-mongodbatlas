// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetResourcePoliciesResourcePolicyCreatedByUser;
import com.pulumi.mongodbatlas.outputs.GetResourcePoliciesResourcePolicyLastUpdatedByUser;
import com.pulumi.mongodbatlas.outputs.GetResourcePoliciesResourcePolicyPolicy;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetResourcePoliciesResourcePolicy {
    /**
     * @return The user that last updated the Atlas resource policy.
     * 
     */
    private GetResourcePoliciesResourcePolicyCreatedByUser createdByUser;
    /**
     * @return Date and time in UTC when the Atlas resource policy was created.
     * 
     */
    private String createdDate;
    /**
     * @return Description of the Atlas resource policy.
     * 
     */
    private String description;
    /**
     * @return Unique 24-hexadecimal digit string that identifies an Atlas resource policy.
     * 
     */
    private String id;
    /**
     * @return The user that last updated the Atlas resource policy.
     * 
     */
    private GetResourcePoliciesResourcePolicyLastUpdatedByUser lastUpdatedByUser;
    /**
     * @return Date and time in UTC when the Atlas resource policy was last updated.
     * 
     */
    private String lastUpdatedDate;
    /**
     * @return Human-readable label that describes the Atlas resource policy.
     * 
     */
    private String name;
    /**
     * @return Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     * 
     */
    private String orgId;
    /**
     * @return List of policies that make up the Atlas resource policy.
     * 
     */
    private List<GetResourcePoliciesResourcePolicyPolicy> policies;
    /**
     * @return A string that identifies the version of the Atlas resource policy.
     * 
     */
    private String version;

    private GetResourcePoliciesResourcePolicy() {}
    /**
     * @return The user that last updated the Atlas resource policy.
     * 
     */
    public GetResourcePoliciesResourcePolicyCreatedByUser createdByUser() {
        return this.createdByUser;
    }
    /**
     * @return Date and time in UTC when the Atlas resource policy was created.
     * 
     */
    public String createdDate() {
        return this.createdDate;
    }
    /**
     * @return Description of the Atlas resource policy.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Unique 24-hexadecimal digit string that identifies an Atlas resource policy.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The user that last updated the Atlas resource policy.
     * 
     */
    public GetResourcePoliciesResourcePolicyLastUpdatedByUser lastUpdatedByUser() {
        return this.lastUpdatedByUser;
    }
    /**
     * @return Date and time in UTC when the Atlas resource policy was last updated.
     * 
     */
    public String lastUpdatedDate() {
        return this.lastUpdatedDate;
    }
    /**
     * @return Human-readable label that describes the Atlas resource policy.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     * 
     */
    public String orgId() {
        return this.orgId;
    }
    /**
     * @return List of policies that make up the Atlas resource policy.
     * 
     */
    public List<GetResourcePoliciesResourcePolicyPolicy> policies() {
        return this.policies;
    }
    /**
     * @return A string that identifies the version of the Atlas resource policy.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourcePoliciesResourcePolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetResourcePoliciesResourcePolicyCreatedByUser createdByUser;
        private String createdDate;
        private String description;
        private String id;
        private GetResourcePoliciesResourcePolicyLastUpdatedByUser lastUpdatedByUser;
        private String lastUpdatedDate;
        private String name;
        private String orgId;
        private List<GetResourcePoliciesResourcePolicyPolicy> policies;
        private String version;
        public Builder() {}
        public Builder(GetResourcePoliciesResourcePolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdByUser = defaults.createdByUser;
    	      this.createdDate = defaults.createdDate;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.lastUpdatedByUser = defaults.lastUpdatedByUser;
    	      this.lastUpdatedDate = defaults.lastUpdatedDate;
    	      this.name = defaults.name;
    	      this.orgId = defaults.orgId;
    	      this.policies = defaults.policies;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder createdByUser(GetResourcePoliciesResourcePolicyCreatedByUser createdByUser) {
            if (createdByUser == null) {
              throw new MissingRequiredPropertyException("GetResourcePoliciesResourcePolicy", "createdByUser");
            }
            this.createdByUser = createdByUser;
            return this;
        }
        @CustomType.Setter
        public Builder createdDate(String createdDate) {
            if (createdDate == null) {
              throw new MissingRequiredPropertyException("GetResourcePoliciesResourcePolicy", "createdDate");
            }
            this.createdDate = createdDate;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetResourcePoliciesResourcePolicy", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetResourcePoliciesResourcePolicy", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedByUser(GetResourcePoliciesResourcePolicyLastUpdatedByUser lastUpdatedByUser) {
            if (lastUpdatedByUser == null) {
              throw new MissingRequiredPropertyException("GetResourcePoliciesResourcePolicy", "lastUpdatedByUser");
            }
            this.lastUpdatedByUser = lastUpdatedByUser;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedDate(String lastUpdatedDate) {
            if (lastUpdatedDate == null) {
              throw new MissingRequiredPropertyException("GetResourcePoliciesResourcePolicy", "lastUpdatedDate");
            }
            this.lastUpdatedDate = lastUpdatedDate;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetResourcePoliciesResourcePolicy", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(String orgId) {
            if (orgId == null) {
              throw new MissingRequiredPropertyException("GetResourcePoliciesResourcePolicy", "orgId");
            }
            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder policies(List<GetResourcePoliciesResourcePolicyPolicy> policies) {
            if (policies == null) {
              throw new MissingRequiredPropertyException("GetResourcePoliciesResourcePolicy", "policies");
            }
            this.policies = policies;
            return this;
        }
        public Builder policies(GetResourcePoliciesResourcePolicyPolicy... policies) {
            return policies(List.of(policies));
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetResourcePoliciesResourcePolicy", "version");
            }
            this.version = version;
            return this;
        }
        public GetResourcePoliciesResourcePolicy build() {
            final var _resultValue = new GetResourcePoliciesResourcePolicy();
            _resultValue.createdByUser = createdByUser;
            _resultValue.createdDate = createdDate;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.lastUpdatedByUser = lastUpdatedByUser;
            _resultValue.lastUpdatedDate = lastUpdatedDate;
            _resultValue.name = name;
            _resultValue.orgId = orgId;
            _resultValue.policies = policies;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
