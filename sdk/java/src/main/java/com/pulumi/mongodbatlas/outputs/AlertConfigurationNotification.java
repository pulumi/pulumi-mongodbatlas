// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AlertConfigurationNotification {
    /**
     * @return Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
     * 
     */
    private @Nullable String apiToken;
    /**
     * @return Slack channel name. Required for the SLACK notifications type.
     * 
     */
    private @Nullable String channelName;
    /**
     * @return Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
     * 
     */
    private @Nullable String datadogApiKey;
    /**
     * @return Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
     * 
     */
    private @Nullable String datadogRegion;
    /**
     * @return Number of minutes to wait after an alert condition is detected before sending out the first notification.
     * 
     */
    private @Nullable Integer delayMin;
    /**
     * @return Email address to which alert notifications are sent. Required for the EMAIL notifications type.
     * 
     */
    private @Nullable String emailAddress;
    /**
     * @return Flag indicating email notifications should be sent. This flag is only valid if `type_name` is set to `ORG`, `GROUP`, or `USER`.
     * 
     */
    private @Nullable Boolean emailEnabled;
    /**
     * @return Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
     * 
     */
    private @Nullable String flowName;
    /**
     * @return The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
     * 
     */
    private @Nullable String flowdockApiToken;
    /**
     * @return Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5. **NOTE** `PAGER_DUTY`, `VICTOR_OPS`, and `OPS_GENIE` notifications do not return this value. The notification interval must be configured and managed within each external service.
     * 
     */
    private @Nullable Integer intervalMin;
    /**
     * @return Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB Cloud needs to send this notification via Microsoft Teams. Required if `type_name` is `MICROSOFT_TEAMS`. If the URL later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.
     * 
     */
    private @Nullable String microsoftTeamsWebhookUrl;
    /**
     * @return Mobile number to which alert notifications are sent. Required for the SMS notifications type.
     * 
     */
    private @Nullable String mobileNumber;
    /**
     * @return Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
     * 
     */
    private @Nullable String opsGenieApiKey;
    /**
     * @return Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
     * 
     */
    private @Nullable String opsGenieRegion;
    /**
     * @return Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
     * 
     */
    private @Nullable String orgName;
    /**
     * @return Optional. One or more roles that receive the configured alert. If you include this field, Atlas sends alerts only to users assigned the roles you specify in the array. If you omit this field, Atlas sends alerts to users assigned any role. This parameter is only valid if `type_name` is set to `ORG`, `GROUP`, or `USER`.
     * Accepted values are:
     * 
     * | Project roles                   | Organization roles  |
     * |:----------                      |:-----------         |
     * | `GROUP_CHARTS_ADMIN`            | `ORG_OWNER`         |
     * | `GROUP_CLUSTER_MANAGER`         | `ORG_MEMBER`        |
     * | `GROUP_DATA_ACCESS_ADMIN`       | `ORG_GROUP_CREATOR` |
     * | `GROUP_DATA_ACCESS_READ_ONLY`   | `ORG_BILLING_ADMIN` |
     * | `GROUP_DATA_ACCESS_READ_WRITE`  | `ORG_READ_ONLY`     |
     * | `GROUP_OWNER`                   |                     |
     * | `GROUP_READ_ONLY`               |                     |
     * 
     */
    private @Nullable List<String> roles;
    /**
     * @return PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
     * 
     */
    private @Nullable String serviceKey;
    /**
     * @return Flag indicating if text message notifications should be sent to this user&#39;s mobile phone. This flag is only valid if `type_name` is set to `ORG`, `GROUP`, or `USER`.
     * 
     */
    private @Nullable Boolean smsEnabled;
    /**
     * @return Unique identifier of a team.
     * 
     */
    private @Nullable String teamId;
    /**
     * @return Label for the team that receives this notification.
     * 
     */
    private @Nullable String teamName;
    /**
     * @return Type of alert notification.
     * Accepted values are:
     * 
     */
    private @Nullable String typeName;
    /**
     * @return Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
     * 
     */
    private @Nullable String username;
    /**
     * @return VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
     * 
     */
    private @Nullable String victorOpsApiKey;
    /**
     * @return VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
     * 
     */
    private @Nullable String victorOpsRoutingKey;
    /**
     * @return Optional authentication secret for the `WEBHOOK` notifications type.
     * 
     */
    private @Nullable String webhookSecret;
    /**
     * @return Target URL  for the `WEBHOOK` notifications type.
     * 
     */
    private @Nullable String webhookUrl;

    private AlertConfigurationNotification() {}
    /**
     * @return Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
     * 
     */
    public Optional<String> apiToken() {
        return Optional.ofNullable(this.apiToken);
    }
    /**
     * @return Slack channel name. Required for the SLACK notifications type.
     * 
     */
    public Optional<String> channelName() {
        return Optional.ofNullable(this.channelName);
    }
    /**
     * @return Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
     * 
     */
    public Optional<String> datadogApiKey() {
        return Optional.ofNullable(this.datadogApiKey);
    }
    /**
     * @return Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
     * 
     */
    public Optional<String> datadogRegion() {
        return Optional.ofNullable(this.datadogRegion);
    }
    /**
     * @return Number of minutes to wait after an alert condition is detected before sending out the first notification.
     * 
     */
    public Optional<Integer> delayMin() {
        return Optional.ofNullable(this.delayMin);
    }
    /**
     * @return Email address to which alert notifications are sent. Required for the EMAIL notifications type.
     * 
     */
    public Optional<String> emailAddress() {
        return Optional.ofNullable(this.emailAddress);
    }
    /**
     * @return Flag indicating email notifications should be sent. This flag is only valid if `type_name` is set to `ORG`, `GROUP`, or `USER`.
     * 
     */
    public Optional<Boolean> emailEnabled() {
        return Optional.ofNullable(this.emailEnabled);
    }
    /**
     * @return Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
     * 
     */
    public Optional<String> flowName() {
        return Optional.ofNullable(this.flowName);
    }
    /**
     * @return The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
     * 
     */
    public Optional<String> flowdockApiToken() {
        return Optional.ofNullable(this.flowdockApiToken);
    }
    /**
     * @return Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5. **NOTE** `PAGER_DUTY`, `VICTOR_OPS`, and `OPS_GENIE` notifications do not return this value. The notification interval must be configured and managed within each external service.
     * 
     */
    public Optional<Integer> intervalMin() {
        return Optional.ofNullable(this.intervalMin);
    }
    /**
     * @return Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB Cloud needs to send this notification via Microsoft Teams. Required if `type_name` is `MICROSOFT_TEAMS`. If the URL later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.
     * 
     */
    public Optional<String> microsoftTeamsWebhookUrl() {
        return Optional.ofNullable(this.microsoftTeamsWebhookUrl);
    }
    /**
     * @return Mobile number to which alert notifications are sent. Required for the SMS notifications type.
     * 
     */
    public Optional<String> mobileNumber() {
        return Optional.ofNullable(this.mobileNumber);
    }
    /**
     * @return Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
     * 
     */
    public Optional<String> opsGenieApiKey() {
        return Optional.ofNullable(this.opsGenieApiKey);
    }
    /**
     * @return Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
     * 
     */
    public Optional<String> opsGenieRegion() {
        return Optional.ofNullable(this.opsGenieRegion);
    }
    /**
     * @return Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
     * 
     */
    public Optional<String> orgName() {
        return Optional.ofNullable(this.orgName);
    }
    /**
     * @return Optional. One or more roles that receive the configured alert. If you include this field, Atlas sends alerts only to users assigned the roles you specify in the array. If you omit this field, Atlas sends alerts to users assigned any role. This parameter is only valid if `type_name` is set to `ORG`, `GROUP`, or `USER`.
     * Accepted values are:
     * 
     * | Project roles                   | Organization roles  |
     * |:----------                      |:-----------         |
     * | `GROUP_CHARTS_ADMIN`            | `ORG_OWNER`         |
     * | `GROUP_CLUSTER_MANAGER`         | `ORG_MEMBER`        |
     * | `GROUP_DATA_ACCESS_ADMIN`       | `ORG_GROUP_CREATOR` |
     * | `GROUP_DATA_ACCESS_READ_ONLY`   | `ORG_BILLING_ADMIN` |
     * | `GROUP_DATA_ACCESS_READ_WRITE`  | `ORG_READ_ONLY`     |
     * | `GROUP_OWNER`                   |                     |
     * | `GROUP_READ_ONLY`               |                     |
     * 
     */
    public List<String> roles() {
        return this.roles == null ? List.of() : this.roles;
    }
    /**
     * @return PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
     * 
     */
    public Optional<String> serviceKey() {
        return Optional.ofNullable(this.serviceKey);
    }
    /**
     * @return Flag indicating if text message notifications should be sent to this user&#39;s mobile phone. This flag is only valid if `type_name` is set to `ORG`, `GROUP`, or `USER`.
     * 
     */
    public Optional<Boolean> smsEnabled() {
        return Optional.ofNullable(this.smsEnabled);
    }
    /**
     * @return Unique identifier of a team.
     * 
     */
    public Optional<String> teamId() {
        return Optional.ofNullable(this.teamId);
    }
    /**
     * @return Label for the team that receives this notification.
     * 
     */
    public Optional<String> teamName() {
        return Optional.ofNullable(this.teamName);
    }
    /**
     * @return Type of alert notification.
     * Accepted values are:
     * 
     */
    public Optional<String> typeName() {
        return Optional.ofNullable(this.typeName);
    }
    /**
     * @return Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
     * 
     */
    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }
    /**
     * @return VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
     * 
     */
    public Optional<String> victorOpsApiKey() {
        return Optional.ofNullable(this.victorOpsApiKey);
    }
    /**
     * @return VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
     * 
     */
    public Optional<String> victorOpsRoutingKey() {
        return Optional.ofNullable(this.victorOpsRoutingKey);
    }
    /**
     * @return Optional authentication secret for the `WEBHOOK` notifications type.
     * 
     */
    public Optional<String> webhookSecret() {
        return Optional.ofNullable(this.webhookSecret);
    }
    /**
     * @return Target URL  for the `WEBHOOK` notifications type.
     * 
     */
    public Optional<String> webhookUrl() {
        return Optional.ofNullable(this.webhookUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AlertConfigurationNotification defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String apiToken;
        private @Nullable String channelName;
        private @Nullable String datadogApiKey;
        private @Nullable String datadogRegion;
        private @Nullable Integer delayMin;
        private @Nullable String emailAddress;
        private @Nullable Boolean emailEnabled;
        private @Nullable String flowName;
        private @Nullable String flowdockApiToken;
        private @Nullable Integer intervalMin;
        private @Nullable String microsoftTeamsWebhookUrl;
        private @Nullable String mobileNumber;
        private @Nullable String opsGenieApiKey;
        private @Nullable String opsGenieRegion;
        private @Nullable String orgName;
        private @Nullable List<String> roles;
        private @Nullable String serviceKey;
        private @Nullable Boolean smsEnabled;
        private @Nullable String teamId;
        private @Nullable String teamName;
        private @Nullable String typeName;
        private @Nullable String username;
        private @Nullable String victorOpsApiKey;
        private @Nullable String victorOpsRoutingKey;
        private @Nullable String webhookSecret;
        private @Nullable String webhookUrl;
        public Builder() {}
        public Builder(AlertConfigurationNotification defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiToken = defaults.apiToken;
    	      this.channelName = defaults.channelName;
    	      this.datadogApiKey = defaults.datadogApiKey;
    	      this.datadogRegion = defaults.datadogRegion;
    	      this.delayMin = defaults.delayMin;
    	      this.emailAddress = defaults.emailAddress;
    	      this.emailEnabled = defaults.emailEnabled;
    	      this.flowName = defaults.flowName;
    	      this.flowdockApiToken = defaults.flowdockApiToken;
    	      this.intervalMin = defaults.intervalMin;
    	      this.microsoftTeamsWebhookUrl = defaults.microsoftTeamsWebhookUrl;
    	      this.mobileNumber = defaults.mobileNumber;
    	      this.opsGenieApiKey = defaults.opsGenieApiKey;
    	      this.opsGenieRegion = defaults.opsGenieRegion;
    	      this.orgName = defaults.orgName;
    	      this.roles = defaults.roles;
    	      this.serviceKey = defaults.serviceKey;
    	      this.smsEnabled = defaults.smsEnabled;
    	      this.teamId = defaults.teamId;
    	      this.teamName = defaults.teamName;
    	      this.typeName = defaults.typeName;
    	      this.username = defaults.username;
    	      this.victorOpsApiKey = defaults.victorOpsApiKey;
    	      this.victorOpsRoutingKey = defaults.victorOpsRoutingKey;
    	      this.webhookSecret = defaults.webhookSecret;
    	      this.webhookUrl = defaults.webhookUrl;
        }

        @CustomType.Setter
        public Builder apiToken(@Nullable String apiToken) {
            this.apiToken = apiToken;
            return this;
        }
        @CustomType.Setter
        public Builder channelName(@Nullable String channelName) {
            this.channelName = channelName;
            return this;
        }
        @CustomType.Setter
        public Builder datadogApiKey(@Nullable String datadogApiKey) {
            this.datadogApiKey = datadogApiKey;
            return this;
        }
        @CustomType.Setter
        public Builder datadogRegion(@Nullable String datadogRegion) {
            this.datadogRegion = datadogRegion;
            return this;
        }
        @CustomType.Setter
        public Builder delayMin(@Nullable Integer delayMin) {
            this.delayMin = delayMin;
            return this;
        }
        @CustomType.Setter
        public Builder emailAddress(@Nullable String emailAddress) {
            this.emailAddress = emailAddress;
            return this;
        }
        @CustomType.Setter
        public Builder emailEnabled(@Nullable Boolean emailEnabled) {
            this.emailEnabled = emailEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder flowName(@Nullable String flowName) {
            this.flowName = flowName;
            return this;
        }
        @CustomType.Setter
        public Builder flowdockApiToken(@Nullable String flowdockApiToken) {
            this.flowdockApiToken = flowdockApiToken;
            return this;
        }
        @CustomType.Setter
        public Builder intervalMin(@Nullable Integer intervalMin) {
            this.intervalMin = intervalMin;
            return this;
        }
        @CustomType.Setter
        public Builder microsoftTeamsWebhookUrl(@Nullable String microsoftTeamsWebhookUrl) {
            this.microsoftTeamsWebhookUrl = microsoftTeamsWebhookUrl;
            return this;
        }
        @CustomType.Setter
        public Builder mobileNumber(@Nullable String mobileNumber) {
            this.mobileNumber = mobileNumber;
            return this;
        }
        @CustomType.Setter
        public Builder opsGenieApiKey(@Nullable String opsGenieApiKey) {
            this.opsGenieApiKey = opsGenieApiKey;
            return this;
        }
        @CustomType.Setter
        public Builder opsGenieRegion(@Nullable String opsGenieRegion) {
            this.opsGenieRegion = opsGenieRegion;
            return this;
        }
        @CustomType.Setter
        public Builder orgName(@Nullable String orgName) {
            this.orgName = orgName;
            return this;
        }
        @CustomType.Setter
        public Builder roles(@Nullable List<String> roles) {
            this.roles = roles;
            return this;
        }
        public Builder roles(String... roles) {
            return roles(List.of(roles));
        }
        @CustomType.Setter
        public Builder serviceKey(@Nullable String serviceKey) {
            this.serviceKey = serviceKey;
            return this;
        }
        @CustomType.Setter
        public Builder smsEnabled(@Nullable Boolean smsEnabled) {
            this.smsEnabled = smsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder teamId(@Nullable String teamId) {
            this.teamId = teamId;
            return this;
        }
        @CustomType.Setter
        public Builder teamName(@Nullable String teamName) {
            this.teamName = teamName;
            return this;
        }
        @CustomType.Setter
        public Builder typeName(@Nullable String typeName) {
            this.typeName = typeName;
            return this;
        }
        @CustomType.Setter
        public Builder username(@Nullable String username) {
            this.username = username;
            return this;
        }
        @CustomType.Setter
        public Builder victorOpsApiKey(@Nullable String victorOpsApiKey) {
            this.victorOpsApiKey = victorOpsApiKey;
            return this;
        }
        @CustomType.Setter
        public Builder victorOpsRoutingKey(@Nullable String victorOpsRoutingKey) {
            this.victorOpsRoutingKey = victorOpsRoutingKey;
            return this;
        }
        @CustomType.Setter
        public Builder webhookSecret(@Nullable String webhookSecret) {
            this.webhookSecret = webhookSecret;
            return this;
        }
        @CustomType.Setter
        public Builder webhookUrl(@Nullable String webhookUrl) {
            this.webhookUrl = webhookUrl;
            return this;
        }
        public AlertConfigurationNotification build() {
            final var o = new AlertConfigurationNotification();
            o.apiToken = apiToken;
            o.channelName = channelName;
            o.datadogApiKey = datadogApiKey;
            o.datadogRegion = datadogRegion;
            o.delayMin = delayMin;
            o.emailAddress = emailAddress;
            o.emailEnabled = emailEnabled;
            o.flowName = flowName;
            o.flowdockApiToken = flowdockApiToken;
            o.intervalMin = intervalMin;
            o.microsoftTeamsWebhookUrl = microsoftTeamsWebhookUrl;
            o.mobileNumber = mobileNumber;
            o.opsGenieApiKey = opsGenieApiKey;
            o.opsGenieRegion = opsGenieRegion;
            o.orgName = orgName;
            o.roles = roles;
            o.serviceKey = serviceKey;
            o.smsEnabled = smsEnabled;
            o.teamId = teamId;
            o.teamName = teamName;
            o.typeName = typeName;
            o.username = username;
            o.victorOpsApiKey = victorOpsApiKey;
            o.victorOpsRoutingKey = victorOpsRoutingKey;
            o.webhookSecret = webhookSecret;
            o.webhookUrl = webhookUrl;
            return o;
        }
    }
}
