// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AlertConfigurationNotification {
    private @Nullable String apiToken;
    private @Nullable String channelName;
    private @Nullable String datadogApiKey;
    private @Nullable String datadogRegion;
    private @Nullable Integer delayMin;
    private @Nullable String emailAddress;
    private @Nullable Boolean emailEnabled;
    private @Nullable String integrationId;
    private @Nullable Integer intervalMin;
    private @Nullable String microsoftTeamsWebhookUrl;
    private @Nullable String mobileNumber;
    private @Nullable String notifierId;
    private @Nullable String opsGenieApiKey;
    private @Nullable String opsGenieRegion;
    private @Nullable List<String> roles;
    private @Nullable String serviceKey;
    private @Nullable Boolean smsEnabled;
    private @Nullable String teamId;
    private @Nullable String teamName;
    private String typeName;
    private @Nullable String username;
    private @Nullable String victorOpsApiKey;
    private @Nullable String victorOpsRoutingKey;
    private @Nullable String webhookSecret;
    private @Nullable String webhookUrl;

    private AlertConfigurationNotification() {}
    public Optional<String> apiToken() {
        return Optional.ofNullable(this.apiToken);
    }
    public Optional<String> channelName() {
        return Optional.ofNullable(this.channelName);
    }
    public Optional<String> datadogApiKey() {
        return Optional.ofNullable(this.datadogApiKey);
    }
    public Optional<String> datadogRegion() {
        return Optional.ofNullable(this.datadogRegion);
    }
    public Optional<Integer> delayMin() {
        return Optional.ofNullable(this.delayMin);
    }
    public Optional<String> emailAddress() {
        return Optional.ofNullable(this.emailAddress);
    }
    public Optional<Boolean> emailEnabled() {
        return Optional.ofNullable(this.emailEnabled);
    }
    public Optional<String> integrationId() {
        return Optional.ofNullable(this.integrationId);
    }
    public Optional<Integer> intervalMin() {
        return Optional.ofNullable(this.intervalMin);
    }
    public Optional<String> microsoftTeamsWebhookUrl() {
        return Optional.ofNullable(this.microsoftTeamsWebhookUrl);
    }
    public Optional<String> mobileNumber() {
        return Optional.ofNullable(this.mobileNumber);
    }
    public Optional<String> notifierId() {
        return Optional.ofNullable(this.notifierId);
    }
    public Optional<String> opsGenieApiKey() {
        return Optional.ofNullable(this.opsGenieApiKey);
    }
    public Optional<String> opsGenieRegion() {
        return Optional.ofNullable(this.opsGenieRegion);
    }
    public List<String> roles() {
        return this.roles == null ? List.of() : this.roles;
    }
    public Optional<String> serviceKey() {
        return Optional.ofNullable(this.serviceKey);
    }
    public Optional<Boolean> smsEnabled() {
        return Optional.ofNullable(this.smsEnabled);
    }
    public Optional<String> teamId() {
        return Optional.ofNullable(this.teamId);
    }
    public Optional<String> teamName() {
        return Optional.ofNullable(this.teamName);
    }
    public String typeName() {
        return this.typeName;
    }
    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }
    public Optional<String> victorOpsApiKey() {
        return Optional.ofNullable(this.victorOpsApiKey);
    }
    public Optional<String> victorOpsRoutingKey() {
        return Optional.ofNullable(this.victorOpsRoutingKey);
    }
    public Optional<String> webhookSecret() {
        return Optional.ofNullable(this.webhookSecret);
    }
    public Optional<String> webhookUrl() {
        return Optional.ofNullable(this.webhookUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AlertConfigurationNotification defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String apiToken;
        private @Nullable String channelName;
        private @Nullable String datadogApiKey;
        private @Nullable String datadogRegion;
        private @Nullable Integer delayMin;
        private @Nullable String emailAddress;
        private @Nullable Boolean emailEnabled;
        private @Nullable String integrationId;
        private @Nullable Integer intervalMin;
        private @Nullable String microsoftTeamsWebhookUrl;
        private @Nullable String mobileNumber;
        private @Nullable String notifierId;
        private @Nullable String opsGenieApiKey;
        private @Nullable String opsGenieRegion;
        private @Nullable List<String> roles;
        private @Nullable String serviceKey;
        private @Nullable Boolean smsEnabled;
        private @Nullable String teamId;
        private @Nullable String teamName;
        private String typeName;
        private @Nullable String username;
        private @Nullable String victorOpsApiKey;
        private @Nullable String victorOpsRoutingKey;
        private @Nullable String webhookSecret;
        private @Nullable String webhookUrl;
        public Builder() {}
        public Builder(AlertConfigurationNotification defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiToken = defaults.apiToken;
    	      this.channelName = defaults.channelName;
    	      this.datadogApiKey = defaults.datadogApiKey;
    	      this.datadogRegion = defaults.datadogRegion;
    	      this.delayMin = defaults.delayMin;
    	      this.emailAddress = defaults.emailAddress;
    	      this.emailEnabled = defaults.emailEnabled;
    	      this.integrationId = defaults.integrationId;
    	      this.intervalMin = defaults.intervalMin;
    	      this.microsoftTeamsWebhookUrl = defaults.microsoftTeamsWebhookUrl;
    	      this.mobileNumber = defaults.mobileNumber;
    	      this.notifierId = defaults.notifierId;
    	      this.opsGenieApiKey = defaults.opsGenieApiKey;
    	      this.opsGenieRegion = defaults.opsGenieRegion;
    	      this.roles = defaults.roles;
    	      this.serviceKey = defaults.serviceKey;
    	      this.smsEnabled = defaults.smsEnabled;
    	      this.teamId = defaults.teamId;
    	      this.teamName = defaults.teamName;
    	      this.typeName = defaults.typeName;
    	      this.username = defaults.username;
    	      this.victorOpsApiKey = defaults.victorOpsApiKey;
    	      this.victorOpsRoutingKey = defaults.victorOpsRoutingKey;
    	      this.webhookSecret = defaults.webhookSecret;
    	      this.webhookUrl = defaults.webhookUrl;
        }

        @CustomType.Setter
        public Builder apiToken(@Nullable String apiToken) {

            this.apiToken = apiToken;
            return this;
        }
        @CustomType.Setter
        public Builder channelName(@Nullable String channelName) {

            this.channelName = channelName;
            return this;
        }
        @CustomType.Setter
        public Builder datadogApiKey(@Nullable String datadogApiKey) {

            this.datadogApiKey = datadogApiKey;
            return this;
        }
        @CustomType.Setter
        public Builder datadogRegion(@Nullable String datadogRegion) {

            this.datadogRegion = datadogRegion;
            return this;
        }
        @CustomType.Setter
        public Builder delayMin(@Nullable Integer delayMin) {

            this.delayMin = delayMin;
            return this;
        }
        @CustomType.Setter
        public Builder emailAddress(@Nullable String emailAddress) {

            this.emailAddress = emailAddress;
            return this;
        }
        @CustomType.Setter
        public Builder emailEnabled(@Nullable Boolean emailEnabled) {

            this.emailEnabled = emailEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder integrationId(@Nullable String integrationId) {

            this.integrationId = integrationId;
            return this;
        }
        @CustomType.Setter
        public Builder intervalMin(@Nullable Integer intervalMin) {

            this.intervalMin = intervalMin;
            return this;
        }
        @CustomType.Setter
        public Builder microsoftTeamsWebhookUrl(@Nullable String microsoftTeamsWebhookUrl) {

            this.microsoftTeamsWebhookUrl = microsoftTeamsWebhookUrl;
            return this;
        }
        @CustomType.Setter
        public Builder mobileNumber(@Nullable String mobileNumber) {

            this.mobileNumber = mobileNumber;
            return this;
        }
        @CustomType.Setter
        public Builder notifierId(@Nullable String notifierId) {

            this.notifierId = notifierId;
            return this;
        }
        @CustomType.Setter
        public Builder opsGenieApiKey(@Nullable String opsGenieApiKey) {

            this.opsGenieApiKey = opsGenieApiKey;
            return this;
        }
        @CustomType.Setter
        public Builder opsGenieRegion(@Nullable String opsGenieRegion) {

            this.opsGenieRegion = opsGenieRegion;
            return this;
        }
        @CustomType.Setter
        public Builder roles(@Nullable List<String> roles) {

            this.roles = roles;
            return this;
        }
        public Builder roles(String... roles) {
            return roles(List.of(roles));
        }
        @CustomType.Setter
        public Builder serviceKey(@Nullable String serviceKey) {

            this.serviceKey = serviceKey;
            return this;
        }
        @CustomType.Setter
        public Builder smsEnabled(@Nullable Boolean smsEnabled) {

            this.smsEnabled = smsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder teamId(@Nullable String teamId) {

            this.teamId = teamId;
            return this;
        }
        @CustomType.Setter
        public Builder teamName(@Nullable String teamName) {

            this.teamName = teamName;
            return this;
        }
        @CustomType.Setter
        public Builder typeName(String typeName) {
            if (typeName == null) {
              throw new MissingRequiredPropertyException("AlertConfigurationNotification", "typeName");
            }
            this.typeName = typeName;
            return this;
        }
        @CustomType.Setter
        public Builder username(@Nullable String username) {

            this.username = username;
            return this;
        }
        @CustomType.Setter
        public Builder victorOpsApiKey(@Nullable String victorOpsApiKey) {

            this.victorOpsApiKey = victorOpsApiKey;
            return this;
        }
        @CustomType.Setter
        public Builder victorOpsRoutingKey(@Nullable String victorOpsRoutingKey) {

            this.victorOpsRoutingKey = victorOpsRoutingKey;
            return this;
        }
        @CustomType.Setter
        public Builder webhookSecret(@Nullable String webhookSecret) {

            this.webhookSecret = webhookSecret;
            return this;
        }
        @CustomType.Setter
        public Builder webhookUrl(@Nullable String webhookUrl) {

            this.webhookUrl = webhookUrl;
            return this;
        }
        public AlertConfigurationNotification build() {
            final var _resultValue = new AlertConfigurationNotification();
            _resultValue.apiToken = apiToken;
            _resultValue.channelName = channelName;
            _resultValue.datadogApiKey = datadogApiKey;
            _resultValue.datadogRegion = datadogRegion;
            _resultValue.delayMin = delayMin;
            _resultValue.emailAddress = emailAddress;
            _resultValue.emailEnabled = emailEnabled;
            _resultValue.integrationId = integrationId;
            _resultValue.intervalMin = intervalMin;
            _resultValue.microsoftTeamsWebhookUrl = microsoftTeamsWebhookUrl;
            _resultValue.mobileNumber = mobileNumber;
            _resultValue.notifierId = notifierId;
            _resultValue.opsGenieApiKey = opsGenieApiKey;
            _resultValue.opsGenieRegion = opsGenieRegion;
            _resultValue.roles = roles;
            _resultValue.serviceKey = serviceKey;
            _resultValue.smsEnabled = smsEnabled;
            _resultValue.teamId = teamId;
            _resultValue.teamName = teamName;
            _resultValue.typeName = typeName;
            _resultValue.username = username;
            _resultValue.victorOpsApiKey = victorOpsApiKey;
            _resultValue.victorOpsRoutingKey = victorOpsRoutingKey;
            _resultValue.webhookSecret = webhookSecret;
            _resultValue.webhookUrl = webhookUrl;
            return _resultValue;
        }
    }
}
