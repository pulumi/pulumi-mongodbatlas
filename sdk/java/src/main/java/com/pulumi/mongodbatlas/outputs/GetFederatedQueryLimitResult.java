// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFederatedQueryLimitResult {
    /**
     * @return Amount that indicates the current usage of the limit.
     * 
     */
    private Integer currentUsage;
    /**
     * @return Default value of the limit.
     * 
     */
    private Integer defaultLimit;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String lastModifiedDate;
    private String limitName;
    private Integer maximumLimit;
    private String overrunPolicy;
    private String projectId;
    private String tenantName;
    private Integer value;

    private GetFederatedQueryLimitResult() {}
    /**
     * @return Amount that indicates the current usage of the limit.
     * 
     */
    public Integer currentUsage() {
        return this.currentUsage;
    }
    /**
     * @return Default value of the limit.
     * 
     */
    public Integer defaultLimit() {
        return this.defaultLimit;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String lastModifiedDate() {
        return this.lastModifiedDate;
    }
    public String limitName() {
        return this.limitName;
    }
    public Integer maximumLimit() {
        return this.maximumLimit;
    }
    public String overrunPolicy() {
        return this.overrunPolicy;
    }
    public String projectId() {
        return this.projectId;
    }
    public String tenantName() {
        return this.tenantName;
    }
    public Integer value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFederatedQueryLimitResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer currentUsage;
        private Integer defaultLimit;
        private String id;
        private String lastModifiedDate;
        private String limitName;
        private Integer maximumLimit;
        private String overrunPolicy;
        private String projectId;
        private String tenantName;
        private Integer value;
        public Builder() {}
        public Builder(GetFederatedQueryLimitResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentUsage = defaults.currentUsage;
    	      this.defaultLimit = defaults.defaultLimit;
    	      this.id = defaults.id;
    	      this.lastModifiedDate = defaults.lastModifiedDate;
    	      this.limitName = defaults.limitName;
    	      this.maximumLimit = defaults.maximumLimit;
    	      this.overrunPolicy = defaults.overrunPolicy;
    	      this.projectId = defaults.projectId;
    	      this.tenantName = defaults.tenantName;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder currentUsage(Integer currentUsage) {
            this.currentUsage = Objects.requireNonNull(currentUsage);
            return this;
        }
        @CustomType.Setter
        public Builder defaultLimit(Integer defaultLimit) {
            this.defaultLimit = Objects.requireNonNull(defaultLimit);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedDate(String lastModifiedDate) {
            this.lastModifiedDate = Objects.requireNonNull(lastModifiedDate);
            return this;
        }
        @CustomType.Setter
        public Builder limitName(String limitName) {
            this.limitName = Objects.requireNonNull(limitName);
            return this;
        }
        @CustomType.Setter
        public Builder maximumLimit(Integer maximumLimit) {
            this.maximumLimit = Objects.requireNonNull(maximumLimit);
            return this;
        }
        @CustomType.Setter
        public Builder overrunPolicy(String overrunPolicy) {
            this.overrunPolicy = Objects.requireNonNull(overrunPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder tenantName(String tenantName) {
            this.tenantName = Objects.requireNonNull(tenantName);
            return this;
        }
        @CustomType.Setter
        public Builder value(Integer value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public GetFederatedQueryLimitResult build() {
            final var o = new GetFederatedQueryLimitResult();
            o.currentUsage = currentUsage;
            o.defaultLimit = defaultLimit;
            o.id = id;
            o.lastModifiedDate = lastModifiedDate;
            o.limitName = limitName;
            o.maximumLimit = maximumLimit;
            o.overrunPolicy = overrunPolicy;
            o.projectId = projectId;
            o.tenantName = tenantName;
            o.value = value;
            return o;
        }
    }
}
