// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAlertConfigurationMatcher {
    /**
     * @return Name of the field in the target object to match on.
     * 
     */
    private String fieldName;
    /**
     * @return The operator to apply when checking the current metric value against the threshold value.
     * Accepted values are:
     * - `GREATER_THAN`
     * - `LESS_THAN`
     * 
     */
    private String operator;
    /**
     * @return Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
     * - `PRIMARY`
     * - `SECONDARY`
     * - `STANDALONE`
     * - `CONFIG`
     * - `MONGOS`
     * 
     */
    private String value;

    private GetAlertConfigurationMatcher() {}
    /**
     * @return Name of the field in the target object to match on.
     * 
     */
    public String fieldName() {
        return this.fieldName;
    }
    /**
     * @return The operator to apply when checking the current metric value against the threshold value.
     * Accepted values are:
     * - `GREATER_THAN`
     * - `LESS_THAN`
     * 
     */
    public String operator() {
        return this.operator;
    }
    /**
     * @return Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
     * - `PRIMARY`
     * - `SECONDARY`
     * - `STANDALONE`
     * - `CONFIG`
     * - `MONGOS`
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertConfigurationMatcher defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String fieldName;
        private String operator;
        private String value;
        public Builder() {}
        public Builder(GetAlertConfigurationMatcher defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fieldName = defaults.fieldName;
    	      this.operator = defaults.operator;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder fieldName(String fieldName) {
            if (fieldName == null) {
              throw new MissingRequiredPropertyException("GetAlertConfigurationMatcher", "fieldName");
            }
            this.fieldName = fieldName;
            return this;
        }
        @CustomType.Setter
        public Builder operator(String operator) {
            if (operator == null) {
              throw new MissingRequiredPropertyException("GetAlertConfigurationMatcher", "operator");
            }
            this.operator = operator;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetAlertConfigurationMatcher", "value");
            }
            this.value = value;
            return this;
        }
        public GetAlertConfigurationMatcher build() {
            final var _resultValue = new GetAlertConfigurationMatcher();
            _resultValue.fieldName = fieldName;
            _resultValue.operator = operator;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
