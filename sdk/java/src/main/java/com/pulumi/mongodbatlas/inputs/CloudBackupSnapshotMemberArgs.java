// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudBackupSnapshotMemberArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudBackupSnapshotMemberArgs Empty = new CloudBackupSnapshotMemberArgs();

    /**
     * Cloud provider that stores this snapshot.
     * 
     */
    @Import(name="cloudProvider")
    private @Nullable Output<String> cloudProvider;

    /**
     * @return Cloud provider that stores this snapshot.
     * 
     */
    public Optional<Output<String>> cloudProvider() {
        return Optional.ofNullable(this.cloudProvider);
    }

    /**
     * Unique identifier for the sharded cluster snapshot.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Unique identifier for the sharded cluster snapshot.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Label given to a shard or config server from which Atlas took this snapshot.
     * 
     */
    @Import(name="replicaSetName")
    private @Nullable Output<String> replicaSetName;

    /**
     * @return Label given to a shard or config server from which Atlas took this snapshot.
     * 
     */
    public Optional<Output<String>> replicaSetName() {
        return Optional.ofNullable(this.replicaSetName);
    }

    private CloudBackupSnapshotMemberArgs() {}

    private CloudBackupSnapshotMemberArgs(CloudBackupSnapshotMemberArgs $) {
        this.cloudProvider = $.cloudProvider;
        this.id = $.id;
        this.replicaSetName = $.replicaSetName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudBackupSnapshotMemberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudBackupSnapshotMemberArgs $;

        public Builder() {
            $ = new CloudBackupSnapshotMemberArgs();
        }

        public Builder(CloudBackupSnapshotMemberArgs defaults) {
            $ = new CloudBackupSnapshotMemberArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudProvider Cloud provider that stores this snapshot.
         * 
         * @return builder
         * 
         */
        public Builder cloudProvider(@Nullable Output<String> cloudProvider) {
            $.cloudProvider = cloudProvider;
            return this;
        }

        /**
         * @param cloudProvider Cloud provider that stores this snapshot.
         * 
         * @return builder
         * 
         */
        public Builder cloudProvider(String cloudProvider) {
            return cloudProvider(Output.of(cloudProvider));
        }

        /**
         * @param id Unique identifier for the sharded cluster snapshot.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Unique identifier for the sharded cluster snapshot.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param replicaSetName Label given to a shard or config server from which Atlas took this snapshot.
         * 
         * @return builder
         * 
         */
        public Builder replicaSetName(@Nullable Output<String> replicaSetName) {
            $.replicaSetName = replicaSetName;
            return this;
        }

        /**
         * @param replicaSetName Label given to a shard or config server from which Atlas took this snapshot.
         * 
         * @return builder
         * 
         */
        public Builder replicaSetName(String replicaSetName) {
            return replicaSetName(Output.of(replicaSetName));
        }

        public CloudBackupSnapshotMemberArgs build() {
            return $;
        }
    }

}
