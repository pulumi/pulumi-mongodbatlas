// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetNetworkContainersArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkContainersArgs Empty = new GetNetworkContainersArgs();

    /**
     * The unique ID for the project.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The unique ID for the project.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
     * 
     */
    @Import(name="providerName", required=true)
    private Output<String> providerName;

    /**
     * @return Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
     * 
     */
    public Output<String> providerName() {
        return this.providerName;
    }

    private GetNetworkContainersArgs() {}

    private GetNetworkContainersArgs(GetNetworkContainersArgs $) {
        this.projectId = $.projectId;
        this.providerName = $.providerName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkContainersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkContainersArgs $;

        public Builder() {
            $ = new GetNetworkContainersArgs();
        }

        public Builder(GetNetworkContainersArgs defaults) {
            $ = new GetNetworkContainersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param projectId The unique ID for the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The unique ID for the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param providerName Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
         * 
         * @return builder
         * 
         */
        public Builder providerName(Output<String> providerName) {
            $.providerName = providerName;
            return this;
        }

        /**
         * @param providerName Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
         * 
         * @return builder
         * 
         */
        public Builder providerName(String providerName) {
            return providerName(Output.of(providerName));
        }

        public GetNetworkContainersArgs build() {
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetNetworkContainersArgs", "projectId");
            }
            if ($.providerName == null) {
                throw new MissingRequiredPropertyException("GetNetworkContainersArgs", "providerName");
            }
            return $;
        }
    }

}
