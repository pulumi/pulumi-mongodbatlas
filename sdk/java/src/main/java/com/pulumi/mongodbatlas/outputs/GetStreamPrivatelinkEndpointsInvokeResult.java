// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.mongodbatlas.outputs.GetStreamPrivatelinkEndpointsResult;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetStreamPrivatelinkEndpointsInvokeResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.\n\n**NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group or project id remains the same. The resource and corresponding endpoints use the term groups.
     * 
     */
    private String projectId;
    /**
     * @return List of documents that MongoDB Cloud returns for this request.
     * 
     */
    private List<GetStreamPrivatelinkEndpointsResult> results;

    private GetStreamPrivatelinkEndpointsInvokeResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.\n\n**NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group or project id remains the same. The resource and corresponding endpoints use the term groups.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return List of documents that MongoDB Cloud returns for this request.
     * 
     */
    public List<GetStreamPrivatelinkEndpointsResult> results() {
        return this.results;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamPrivatelinkEndpointsInvokeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String projectId;
        private List<GetStreamPrivatelinkEndpointsResult> results;
        public Builder() {}
        public Builder(GetStreamPrivatelinkEndpointsInvokeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.projectId = defaults.projectId;
    	      this.results = defaults.results;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetStreamPrivatelinkEndpointsInvokeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetStreamPrivatelinkEndpointsInvokeResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder results(List<GetStreamPrivatelinkEndpointsResult> results) {
            if (results == null) {
              throw new MissingRequiredPropertyException("GetStreamPrivatelinkEndpointsInvokeResult", "results");
            }
            this.results = results;
            return this;
        }
        public Builder results(GetStreamPrivatelinkEndpointsResult... results) {
            return results(List.of(results));
        }
        public GetStreamPrivatelinkEndpointsInvokeResult build() {
            final var _resultValue = new GetStreamPrivatelinkEndpointsInvokeResult();
            _resultValue.id = id;
            _resultValue.projectId = projectId;
            _resultValue.results = results;
            return _resultValue;
        }
    }
}
