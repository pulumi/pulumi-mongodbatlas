// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs extends com.pulumi.resources.ResourceArgs {

    public static final AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs Empty = new AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs();

    @Import(name="computeEnabled")
    private @Nullable Output<Boolean> computeEnabled;

    public Optional<Output<Boolean>> computeEnabled() {
        return Optional.ofNullable(this.computeEnabled);
    }

    /**
     * Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` is true.
     * 
     */
    @Import(name="computeMaxInstanceSize")
    private @Nullable Output<String> computeMaxInstanceSize;

    /**
     * @return Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` is true.
     * 
     */
    public Optional<Output<String>> computeMaxInstanceSize() {
        return Optional.ofNullable(this.computeMaxInstanceSize);
    }

    /**
     * Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled` is true.
     * 
     */
    @Import(name="computeMinInstanceSize")
    private @Nullable Output<String> computeMinInstanceSize;

    /**
     * @return Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled` is true.
     * 
     */
    public Optional<Output<String>> computeMinInstanceSize() {
        return Optional.ofNullable(this.computeMinInstanceSize);
    }

    /**
     * Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size`.
     * 
     */
    @Import(name="computeScaleDownEnabled")
    private @Nullable Output<Boolean> computeScaleDownEnabled;

    /**
     * @return Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size`.
     * 
     */
    public Optional<Output<Boolean>> computeScaleDownEnabled() {
        return Optional.ofNullable(this.computeScaleDownEnabled);
    }

    @Import(name="diskGbEnabled")
    private @Nullable Output<Boolean> diskGbEnabled;

    public Optional<Output<Boolean>> diskGbEnabled() {
        return Optional.ofNullable(this.diskGbEnabled);
    }

    private AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs() {}

    private AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs(AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs $) {
        this.computeEnabled = $.computeEnabled;
        this.computeMaxInstanceSize = $.computeMaxInstanceSize;
        this.computeMinInstanceSize = $.computeMinInstanceSize;
        this.computeScaleDownEnabled = $.computeScaleDownEnabled;
        this.diskGbEnabled = $.diskGbEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs $;

        public Builder() {
            $ = new AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs();
        }

        public Builder(AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs defaults) {
            $ = new AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs(Objects.requireNonNull(defaults));
        }

        public Builder computeEnabled(@Nullable Output<Boolean> computeEnabled) {
            $.computeEnabled = computeEnabled;
            return this;
        }

        public Builder computeEnabled(Boolean computeEnabled) {
            return computeEnabled(Output.of(computeEnabled));
        }

        /**
         * @param computeMaxInstanceSize Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` is true.
         * 
         * @return builder
         * 
         */
        public Builder computeMaxInstanceSize(@Nullable Output<String> computeMaxInstanceSize) {
            $.computeMaxInstanceSize = computeMaxInstanceSize;
            return this;
        }

        /**
         * @param computeMaxInstanceSize Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` is true.
         * 
         * @return builder
         * 
         */
        public Builder computeMaxInstanceSize(String computeMaxInstanceSize) {
            return computeMaxInstanceSize(Output.of(computeMaxInstanceSize));
        }

        /**
         * @param computeMinInstanceSize Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled` is true.
         * 
         * @return builder
         * 
         */
        public Builder computeMinInstanceSize(@Nullable Output<String> computeMinInstanceSize) {
            $.computeMinInstanceSize = computeMinInstanceSize;
            return this;
        }

        /**
         * @param computeMinInstanceSize Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled` is true.
         * 
         * @return builder
         * 
         */
        public Builder computeMinInstanceSize(String computeMinInstanceSize) {
            return computeMinInstanceSize(Output.of(computeMinInstanceSize));
        }

        /**
         * @param computeScaleDownEnabled Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size`.
         * 
         * @return builder
         * 
         */
        public Builder computeScaleDownEnabled(@Nullable Output<Boolean> computeScaleDownEnabled) {
            $.computeScaleDownEnabled = computeScaleDownEnabled;
            return this;
        }

        /**
         * @param computeScaleDownEnabled Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size`.
         * 
         * @return builder
         * 
         */
        public Builder computeScaleDownEnabled(Boolean computeScaleDownEnabled) {
            return computeScaleDownEnabled(Output.of(computeScaleDownEnabled));
        }

        public Builder diskGbEnabled(@Nullable Output<Boolean> diskGbEnabled) {
            $.diskGbEnabled = diskGbEnabled;
            return this;
        }

        public Builder diskGbEnabled(Boolean diskGbEnabled) {
            return diskGbEnabled(Output.of(diskGbEnabled));
        }

        public AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs build() {
            return $;
        }
    }

}
