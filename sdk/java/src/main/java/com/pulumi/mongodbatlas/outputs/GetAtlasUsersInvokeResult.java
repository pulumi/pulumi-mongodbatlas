// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.mongodbatlas.outputs.GetAtlasUsersResult;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAtlasUsersInvokeResult {
    /**
     * @deprecated
     * Please use each user&#39;s id attribute instead
     * 
     */
    @Deprecated /* Please use each user's id attribute instead */
    private String id;
    private @Nullable Integer itemsPerPage;
    private @Nullable String orgId;
    private @Nullable Integer pageNum;
    private @Nullable String projectId;
    /**
     * @return A list where each element contains a Atlas User.
     * 
     */
    private List<GetAtlasUsersResult> results;
    private @Nullable String teamId;
    /**
     * @return Count of the total number of items in the result set. It may be greater than the number of objects in the results array if the entire result set is paginated.
     * 
     */
    private Integer totalCount;

    private GetAtlasUsersInvokeResult() {}
    /**
     * @deprecated
     * Please use each user&#39;s id attribute instead
     * 
     */
    @Deprecated /* Please use each user's id attribute instead */
    public String id() {
        return this.id;
    }
    public Optional<Integer> itemsPerPage() {
        return Optional.ofNullable(this.itemsPerPage);
    }
    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }
    public Optional<Integer> pageNum() {
        return Optional.ofNullable(this.pageNum);
    }
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return A list where each element contains a Atlas User.
     * 
     */
    public List<GetAtlasUsersResult> results() {
        return this.results;
    }
    public Optional<String> teamId() {
        return Optional.ofNullable(this.teamId);
    }
    /**
     * @return Count of the total number of items in the result set. It may be greater than the number of objects in the results array if the entire result set is paginated.
     * 
     */
    public Integer totalCount() {
        return this.totalCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAtlasUsersInvokeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable Integer itemsPerPage;
        private @Nullable String orgId;
        private @Nullable Integer pageNum;
        private @Nullable String projectId;
        private List<GetAtlasUsersResult> results;
        private @Nullable String teamId;
        private Integer totalCount;
        public Builder() {}
        public Builder(GetAtlasUsersInvokeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.itemsPerPage = defaults.itemsPerPage;
    	      this.orgId = defaults.orgId;
    	      this.pageNum = defaults.pageNum;
    	      this.projectId = defaults.projectId;
    	      this.results = defaults.results;
    	      this.teamId = defaults.teamId;
    	      this.totalCount = defaults.totalCount;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder itemsPerPage(@Nullable Integer itemsPerPage) {
            this.itemsPerPage = itemsPerPage;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(@Nullable String orgId) {
            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder pageNum(@Nullable Integer pageNum) {
            this.pageNum = pageNum;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder results(List<GetAtlasUsersResult> results) {
            this.results = Objects.requireNonNull(results);
            return this;
        }
        public Builder results(GetAtlasUsersResult... results) {
            return results(List.of(results));
        }
        @CustomType.Setter
        public Builder teamId(@Nullable String teamId) {
            this.teamId = teamId;
            return this;
        }
        @CustomType.Setter
        public Builder totalCount(Integer totalCount) {
            this.totalCount = Objects.requireNonNull(totalCount);
            return this;
        }
        public GetAtlasUsersInvokeResult build() {
            final var o = new GetAtlasUsersInvokeResult();
            o.id = id;
            o.itemsPerPage = itemsPerPage;
            o.orgId = orgId;
            o.pageNum = pageNum;
            o.projectId = projectId;
            o.results = results;
            o.teamId = teamId;
            o.totalCount = totalCount;
            return o;
        }
    }
}
