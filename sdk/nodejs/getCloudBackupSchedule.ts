// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # Data Source: mongodbatlas.CloudBackupSchedule
 *
 * `mongodbatlas.CloudBackupSchedule` provides a Cloud Backup Schedule datasource. An Atlas Cloud Backup Schedule provides the current cloud backup schedule for the cluster.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 */
export function getCloudBackupSchedule(args: GetCloudBackupScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudBackupScheduleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getCloudBackupSchedule:getCloudBackupSchedule", {
        "clusterName": args.clusterName,
        "projectId": args.projectId,
        "useZoneIdForCopySettings": args.useZoneIdForCopySettings,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudBackupSchedule.
 */
export interface GetCloudBackupScheduleArgs {
    /**
     * The name of the Atlas cluster that contains the snapshots backup policy you want to retrieve.
     */
    clusterName: string;
    /**
     * The unique identifier of the project for the Atlas cluster.
     */
    projectId: string;
    /**
     * Set this field to `true` to allow the data source to use the latest schema that populates `copy_settings.#.zone_id` instead of the deprecated `copy_settings.#.replication_spec_id`. These fields also enable you to reference cluster zones using independent shard scaling, which no longer supports `replication_spec.*.id`. To learn more, see the 1.18.0 upgrade guide.
     */
    useZoneIdForCopySettings?: boolean;
}

/**
 * A collection of values returned by getCloudBackupSchedule.
 */
export interface GetCloudBackupScheduleResult {
    /**
     * Flag that indicates whether MongoDB Cloud automatically exports Cloud Backup Snapshots to the Export Bucket. Value can be one of the following:
     * * true - Enables automatic export of cloud backup snapshots to the Export Bucket.
     * * false - Disables automatic export of cloud backup snapshots to the Export Bucket. (default)
     */
    readonly autoExportEnabled: boolean;
    /**
     * Unique identifier of the Atlas cluster.
     */
    readonly clusterId: string;
    readonly clusterName: string;
    /**
     * List that contains a document for each copy setting item in the desired backup policy. See below
     */
    readonly copySettings: outputs.GetCloudBackupScheduleCopySetting[];
    /**
     * Policy for automatically exporting Cloud Backup Snapshots. See below
     */
    readonly exports: outputs.GetCloudBackupScheduleExport[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Unique identifier of the backup policy.
     */
    readonly idPolicy: string;
    /**
     * UTC ISO 8601 formatted point in time when Atlas will take the next snapshot.
     */
    readonly nextSnapshot: string;
    /**
     * (Optional) Daily policy item. See below
     */
    readonly policyItemDailies: outputs.GetCloudBackupSchedulePolicyItemDaily[];
    /**
     * (Optional) Hourly policy item. See below
     */
    readonly policyItemHourlies: outputs.GetCloudBackupSchedulePolicyItemHourly[];
    /**
     * (Optional) Monthly policy item. See below
     */
    readonly policyItemMonthlies: outputs.GetCloudBackupSchedulePolicyItemMonthly[];
    /**
     * (Optional) Weekly policy item. See below
     */
    readonly policyItemWeeklies: outputs.GetCloudBackupSchedulePolicyItemWeekly[];
    /**
     * (Optional) Yearly policy item. See below
     */
    readonly policyItemYearlies: outputs.GetCloudBackupSchedulePolicyItemYearly[];
    readonly projectId: string;
    /**
     * UTC Hour of day between 0 and 23 representing which hour of the day that Atlas takes a snapshot.
     */
    readonly referenceHourOfDay: number;
    /**
     * UTC Minute of day between 0 and 59 representing which minute of the `referenceHourOfDay` that Atlas takes the snapshot.
     */
    readonly referenceMinuteOfHour: number;
    /**
     * Specifies a restore window in days for cloud backup to maintain.
     */
    readonly restoreWindowDays: number;
    /**
     * Specify true to use organization and project names instead of organization and project UUIDs in the path for the metadata files that Atlas uploads to your bucket after it finishes exporting the snapshots. To learn more about the metadata files that Atlas uploads, see [Export Cloud Backup Snapshot](https://www.mongodb.com/docs/atlas/backup/cloud-backup/export/#std-label-cloud-provider-snapshot-export).
     */
    readonly useOrgAndGroupNamesInExportPrefix: boolean;
    readonly useZoneIdForCopySettings?: boolean;
}
/**
 * ## # Data Source: mongodbatlas.CloudBackupSchedule
 *
 * `mongodbatlas.CloudBackupSchedule` provides a Cloud Backup Schedule datasource. An Atlas Cloud Backup Schedule provides the current cloud backup schedule for the cluster.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 */
export function getCloudBackupScheduleOutput(args: GetCloudBackupScheduleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCloudBackupScheduleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getCloudBackupSchedule:getCloudBackupSchedule", {
        "clusterName": args.clusterName,
        "projectId": args.projectId,
        "useZoneIdForCopySettings": args.useZoneIdForCopySettings,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudBackupSchedule.
 */
export interface GetCloudBackupScheduleOutputArgs {
    /**
     * The name of the Atlas cluster that contains the snapshots backup policy you want to retrieve.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The unique identifier of the project for the Atlas cluster.
     */
    projectId: pulumi.Input<string>;
    /**
     * Set this field to `true` to allow the data source to use the latest schema that populates `copy_settings.#.zone_id` instead of the deprecated `copy_settings.#.replication_spec_id`. These fields also enable you to reference cluster zones using independent shard scaling, which no longer supports `replication_spec.*.id`. To learn more, see the 1.18.0 upgrade guide.
     */
    useZoneIdForCopySettings?: pulumi.Input<boolean>;
}
