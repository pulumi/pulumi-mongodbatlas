// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * `mongodbatlas.CloudBackupSchedule` provides a Cloud Backup Schedule datasource. An Atlas Cloud Backup Schedule provides the current cloud backup schedule for the cluster.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 */
export function getCloudBackupSchedule(args: GetCloudBackupScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudBackupScheduleResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("mongodbatlas:index/getCloudBackupSchedule:getCloudBackupSchedule", {
        "clusterName": args.clusterName,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudBackupSchedule.
 */
export interface GetCloudBackupScheduleArgs {
    /**
     * The name of the Atlas cluster that contains the snapshots backup policy you want to retrieve.
     */
    clusterName: string;
    /**
     * The unique identifier of the project for the Atlas cluster.
     */
    projectId: string;
}

/**
 * A collection of values returned by getCloudBackupSchedule.
 */
export interface GetCloudBackupScheduleResult {
    /**
     * Unique identifier of the Atlas cluster.
     */
    readonly clusterId: string;
    readonly clusterName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Unique identifier of the backup policy.
     */
    readonly idPolicy: string;
    /**
     * UTC ISO 8601 formatted point in time when Atlas will take the next snapshot.
     */
    readonly nextSnapshot: string;
    /**
     * Daily policy item
     */
    readonly policyItemDailies: outputs.GetCloudBackupSchedulePolicyItemDaily[];
    /**
     * Hourly policy item
     */
    readonly policyItemHourlies: outputs.GetCloudBackupSchedulePolicyItemHourly[];
    /**
     * Monthly policy item
     */
    readonly policyItemMonthlies: outputs.GetCloudBackupSchedulePolicyItemMonthly[];
    /**
     * Weekly policy item
     */
    readonly policyItemWeeklies: outputs.GetCloudBackupSchedulePolicyItemWeekly[];
    readonly projectId: string;
    /**
     * UTC Hour of day between 0 and 23 representing which hour of the day that Atlas takes a snapshot.
     */
    readonly referenceHourOfDay: number;
    /**
     * UTC Minute of day between 0 and 59 representing which minute of the `referenceHourOfDay` that Atlas takes the snapshot.
     */
    readonly referenceMinuteOfHour: number;
    /**
     * Specifies a restore window in days for cloud backup to maintain.
     */
    readonly restoreWindowDays: number;
}

export function getCloudBackupScheduleOutput(args: GetCloudBackupScheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudBackupScheduleResult> {
    return pulumi.output(args).apply(a => getCloudBackupSchedule(a, opts))
}

/**
 * A collection of arguments for invoking getCloudBackupSchedule.
 */
export interface GetCloudBackupScheduleOutputArgs {
    /**
     * The name of the Atlas cluster that contains the snapshots backup policy you want to retrieve.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The unique identifier of the project for the Atlas cluster.
     */
    projectId: pulumi.Input<string>;
}
