// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # Data Source: mongodbatlas.getFederatedSettingsIdentityProviders
 *
 * `mongodbatlas.getFederatedSettingsIdentityProviders` provides an Federated Settings Identity Providers datasource. Atlas Cloud Federated Settings Identity Providers provides federated settings outputs for the configured Identity Providers.
 *
 * Note: This implementation returns a maximum of 100 results.
 */
export function getFederatedSettingsIdentityProviders(args: GetFederatedSettingsIdentityProvidersArgs, opts?: pulumi.InvokeOptions): Promise<GetFederatedSettingsIdentityProvidersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getFederatedSettingsIdentityProviders:getFederatedSettingsIdentityProviders", {
        "federationSettingsId": args.federationSettingsId,
        "idpTypes": args.idpTypes,
        "protocols": args.protocols,
    }, opts);
}

/**
 * A collection of arguments for invoking getFederatedSettingsIdentityProviders.
 */
export interface GetFederatedSettingsIdentityProvidersArgs {
    /**
     * Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
     */
    federationSettingsId: string;
    /**
     * The types of the target identity providers. Valid values are `WORKFORCE` and `WORKLOAD`.
     */
    idpTypes?: string[];
    /**
     * The protocols of the target identity providers. Valid values are `SAML` and `OIDC`.
     */
    protocols?: string[];
}

/**
 * A collection of values returned by getFederatedSettingsIdentityProviders.
 */
export interface GetFederatedSettingsIdentityProvidersResult {
    /**
     * Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
     */
    readonly federationSettingsId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly idpTypes?: string[];
    readonly protocols?: string[];
    /**
     * Includes cloudProviderSnapshot object for each item detailed in the results array section.
     * * `totalCount` - Count of the total number of items in the result set. It may be greater than the number of objects in the results array if the entire result set is paginated.
     */
    readonly results: outputs.GetFederatedSettingsIdentityProvidersResult[];
}
/**
 * ## # Data Source: mongodbatlas.getFederatedSettingsIdentityProviders
 *
 * `mongodbatlas.getFederatedSettingsIdentityProviders` provides an Federated Settings Identity Providers datasource. Atlas Cloud Federated Settings Identity Providers provides federated settings outputs for the configured Identity Providers.
 *
 * Note: This implementation returns a maximum of 100 results.
 */
export function getFederatedSettingsIdentityProvidersOutput(args: GetFederatedSettingsIdentityProvidersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFederatedSettingsIdentityProvidersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getFederatedSettingsIdentityProviders:getFederatedSettingsIdentityProviders", {
        "federationSettingsId": args.federationSettingsId,
        "idpTypes": args.idpTypes,
        "protocols": args.protocols,
    }, opts);
}

/**
 * A collection of arguments for invoking getFederatedSettingsIdentityProviders.
 */
export interface GetFederatedSettingsIdentityProvidersOutputArgs {
    /**
     * Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
     */
    federationSettingsId: pulumi.Input<string>;
    /**
     * The types of the target identity providers. Valid values are `WORKFORCE` and `WORKLOAD`.
     */
    idpTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The protocols of the target identity providers. Valid values are `SAML` and `OIDC`.
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
}
