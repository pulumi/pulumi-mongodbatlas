// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * `mongodbatlasPrivateEndpointLink` describe a Private Endpoint Link. This represents a Private Endpoint Link Connection that wants to retrieve details in an Atlas project.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testPrivateEndpoint = new mongodbatlas.PrivateEndpoint("test", {
 *     projectId: "<PROJECT_ID>",
 *     providerName: "AWS",
 *     region: "us-east-1",
 * });
 * const ptfeService = new aws.ec2.VpcEndpoint("ptfe_service", {
 *     securityGroupIds: ["sg-3f238186"],
 *     serviceName: testPrivateEndpoint.endpointServiceName,
 *     subnetIds: ["subnet-de0406d2"],
 *     vpcEndpointType: "Interface",
 *     vpcId: "vpc-7fc0a543",
 * });
 * const testMongodbatlasPrivateEndpointLink = new mongodbatlas.PrivateEndpointLink("test", {
 *     interfaceEndpointId: ptfeService.id,
 *     privateLinkId: testPrivateEndpoint.privateLinkId,
 *     projectId: testPrivateEndpoint.projectId,
 * });
 * const testPrivateEndpointLink = pulumi.all([testMongodbatlasPrivateEndpointLink.interfaceEndpointId, testMongodbatlasPrivateEndpointLink.privateLinkId, testMongodbatlasPrivateEndpointLink.projectId]).apply(([interfaceEndpointId, privateLinkId, projectId]) => mongodbatlas.PrivateEndpointLink({
 *     interfaceEndpointId: interfaceEndpointId,
 *     privateLinkId: privateLinkId,
 *     projectId: projectId,
 * }, { async: true }));
 * ```
 */
export function getPrivateEndpointInterfaceLink(args: GetPrivateEndpointInterfaceLinkArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivateEndpointInterfaceLinkResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("mongodbatlas:index/getPrivateEndpointInterfaceLink:getPrivateEndpointInterfaceLink", {
        "interfaceEndpointId": args.interfaceEndpointId,
        "privateLinkId": args.privateLinkId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrivateEndpointInterfaceLink.
 */
export interface GetPrivateEndpointInterfaceLinkArgs {
    readonly interfaceEndpointId: string;
    /**
     * Unique identifier of the AWS PrivateLink connection.
     */
    readonly privateLinkId: string;
    /**
     * Unique identifier for the project.
     */
    readonly projectId: string;
}

/**
 * A collection of values returned by getPrivateEndpointInterfaceLink.
 */
export interface GetPrivateEndpointInterfaceLinkResult {
    /**
     * Status of the interface endpoint.
     * Returns one of the following values:
     */
    readonly connectionStatus: string;
    /**
     * Indicates if Atlas received a request to remove the interface endpoint from the private endpoint connection.
     */
    readonly deleteRequested: boolean;
    /**
     * Error message pertaining to the interface endpoint. Returns null if there are no errors.
     */
    readonly errorMessage: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly interfaceEndpointId: string;
    readonly privateLinkId: string;
    readonly projectId: string;
}
