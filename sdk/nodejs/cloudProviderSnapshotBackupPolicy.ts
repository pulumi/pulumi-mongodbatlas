// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * Cloud Backup Snapshot Policy entries can be imported using project project_id and cluster_name, in the format `PROJECTID-CLUSTERNAME`, e.g.
 *
 * ```sh
 *  $ pulumi import mongodbatlas:index/cloudProviderSnapshotBackupPolicy:CloudProviderSnapshotBackupPolicy test 5d0f1f73cf09a29120e173cf-MyClusterTest
 * ```
 *
 *  For more information see[MongoDB Atlas API Reference.](https://docs.atlas.mongodb.com/reference/api/cloud-backup/schedule/modify-one-schedule/)
 */
export class CloudProviderSnapshotBackupPolicy extends pulumi.CustomResource {
    /**
     * Get an existing CloudProviderSnapshotBackupPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudProviderSnapshotBackupPolicyState, opts?: pulumi.CustomResourceOptions): CloudProviderSnapshotBackupPolicy {
        return new CloudProviderSnapshotBackupPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mongodbatlas:index/cloudProviderSnapshotBackupPolicy:CloudProviderSnapshotBackupPolicy';

    /**
     * Returns true if the given object is an instance of CloudProviderSnapshotBackupPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudProviderSnapshotBackupPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudProviderSnapshotBackupPolicy.__pulumiType;
    }

    /**
     * Unique identifier of the Atlas cluster.
     */
    public /*out*/ readonly clusterId!: pulumi.Output<string>;
    /**
     * The name of the Atlas cluster that contains the snapshot backup policy you want to retrieve.
     */
    public readonly clusterName!: pulumi.Output<string>;
    /**
     * Timestamp in the number of seconds that have elapsed since the UNIX epoch when Atlas takes the next snapshot.
     */
    public /*out*/ readonly nextSnapshot!: pulumi.Output<string>;
    /**
     * Contains a document for each backup policy item in the desired updated backup policy.
     * * `policies.#.id` - (Required) Unique identifier of the backup policy that you want to update. policies.#.id is a value obtained via the mongodbatlas.Cluster resource. providerBackupEnabled of the mongodbatlas.Cluster resource must be set to true. See the example above for how to refer to the mongodbatlas.Cluster resource for policies.#.id
     */
    public readonly policies!: pulumi.Output<outputs.CloudProviderSnapshotBackupPolicyPolicy[]>;
    /**
     * The unique identifier of the project for the Atlas cluster.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * UTC Hour of day between 0 and 23, inclusive, representing which hour of the day that Atlas takes snapshots for backup policy items.
     */
    public readonly referenceHourOfDay!: pulumi.Output<number>;
    /**
     * UTC Minutes after referenceHourOfDay that Atlas takes snapshots for backup policy items. Must be between 0 and 59, inclusive.
     */
    public readonly referenceMinuteOfHour!: pulumi.Output<number>;
    /**
     * Number of days back in time you can restore to with point-in-time accuracy. Must be a positive, non-zero integer.
     */
    public readonly restoreWindowDays!: pulumi.Output<number>;
    /**
     * Specify true to apply the retention changes in the updated backup policy to snapshots that Atlas took previously.
     */
    public readonly updateSnapshots!: pulumi.Output<boolean>;

    /**
     * Create a CloudProviderSnapshotBackupPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudProviderSnapshotBackupPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudProviderSnapshotBackupPolicyArgs | CloudProviderSnapshotBackupPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudProviderSnapshotBackupPolicyState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["clusterName"] = state ? state.clusterName : undefined;
            resourceInputs["nextSnapshot"] = state ? state.nextSnapshot : undefined;
            resourceInputs["policies"] = state ? state.policies : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["referenceHourOfDay"] = state ? state.referenceHourOfDay : undefined;
            resourceInputs["referenceMinuteOfHour"] = state ? state.referenceMinuteOfHour : undefined;
            resourceInputs["restoreWindowDays"] = state ? state.restoreWindowDays : undefined;
            resourceInputs["updateSnapshots"] = state ? state.updateSnapshots : undefined;
        } else {
            const args = argsOrState as CloudProviderSnapshotBackupPolicyArgs | undefined;
            if ((!args || args.clusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            if ((!args || args.policies === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policies'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["policies"] = args ? args.policies : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["referenceHourOfDay"] = args ? args.referenceHourOfDay : undefined;
            resourceInputs["referenceMinuteOfHour"] = args ? args.referenceMinuteOfHour : undefined;
            resourceInputs["restoreWindowDays"] = args ? args.restoreWindowDays : undefined;
            resourceInputs["updateSnapshots"] = args ? args.updateSnapshots : undefined;
            resourceInputs["clusterId"] = undefined /*out*/;
            resourceInputs["nextSnapshot"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudProviderSnapshotBackupPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudProviderSnapshotBackupPolicy resources.
 */
export interface CloudProviderSnapshotBackupPolicyState {
    /**
     * Unique identifier of the Atlas cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The name of the Atlas cluster that contains the snapshot backup policy you want to retrieve.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Timestamp in the number of seconds that have elapsed since the UNIX epoch when Atlas takes the next snapshot.
     */
    nextSnapshot?: pulumi.Input<string>;
    /**
     * Contains a document for each backup policy item in the desired updated backup policy.
     * * `policies.#.id` - (Required) Unique identifier of the backup policy that you want to update. policies.#.id is a value obtained via the mongodbatlas.Cluster resource. providerBackupEnabled of the mongodbatlas.Cluster resource must be set to true. See the example above for how to refer to the mongodbatlas.Cluster resource for policies.#.id
     */
    policies?: pulumi.Input<pulumi.Input<inputs.CloudProviderSnapshotBackupPolicyPolicy>[]>;
    /**
     * The unique identifier of the project for the Atlas cluster.
     */
    projectId?: pulumi.Input<string>;
    /**
     * UTC Hour of day between 0 and 23, inclusive, representing which hour of the day that Atlas takes snapshots for backup policy items.
     */
    referenceHourOfDay?: pulumi.Input<number>;
    /**
     * UTC Minutes after referenceHourOfDay that Atlas takes snapshots for backup policy items. Must be between 0 and 59, inclusive.
     */
    referenceMinuteOfHour?: pulumi.Input<number>;
    /**
     * Number of days back in time you can restore to with point-in-time accuracy. Must be a positive, non-zero integer.
     */
    restoreWindowDays?: pulumi.Input<number>;
    /**
     * Specify true to apply the retention changes in the updated backup policy to snapshots that Atlas took previously.
     */
    updateSnapshots?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a CloudProviderSnapshotBackupPolicy resource.
 */
export interface CloudProviderSnapshotBackupPolicyArgs {
    /**
     * The name of the Atlas cluster that contains the snapshot backup policy you want to retrieve.
     */
    clusterName: pulumi.Input<string>;
    /**
     * Contains a document for each backup policy item in the desired updated backup policy.
     * * `policies.#.id` - (Required) Unique identifier of the backup policy that you want to update. policies.#.id is a value obtained via the mongodbatlas.Cluster resource. providerBackupEnabled of the mongodbatlas.Cluster resource must be set to true. See the example above for how to refer to the mongodbatlas.Cluster resource for policies.#.id
     */
    policies: pulumi.Input<pulumi.Input<inputs.CloudProviderSnapshotBackupPolicyPolicy>[]>;
    /**
     * The unique identifier of the project for the Atlas cluster.
     */
    projectId: pulumi.Input<string>;
    /**
     * UTC Hour of day between 0 and 23, inclusive, representing which hour of the day that Atlas takes snapshots for backup policy items.
     */
    referenceHourOfDay?: pulumi.Input<number>;
    /**
     * UTC Minutes after referenceHourOfDay that Atlas takes snapshots for backup policy items. Must be between 0 and 59, inclusive.
     */
    referenceMinuteOfHour?: pulumi.Input<number>;
    /**
     * Number of days back in time you can restore to with point-in-time accuracy. Must be a positive, non-zero integer.
     */
    restoreWindowDays?: pulumi.Input<number>;
    /**
     * Specify true to apply the retention changes in the updated backup policy to snapshots that Atlas took previously.
     */
    updateSnapshots?: pulumi.Input<boolean>;
}
