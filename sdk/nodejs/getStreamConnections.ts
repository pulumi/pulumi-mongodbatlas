// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # Data Source: mongodbatlas.getStreamConnections
 *
 * `mongodbatlas.getStreamConnections` describes all connections of a stream instance for the specified project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = mongodbatlas.getStreamConnections({
 *     projectId: "<PROJECT_ID>",
 *     instanceName: "<INSTANCE_NAME>",
 * });
 * ```
 */
export function getStreamConnections(args: GetStreamConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamConnectionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getStreamConnections:getStreamConnections", {
        "instanceName": args.instanceName,
        "itemsPerPage": args.itemsPerPage,
        "pageNum": args.pageNum,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamConnections.
 */
export interface GetStreamConnectionsArgs {
    /**
     * Human-readable label that identifies the stream instance.
     */
    instanceName: string;
    /**
     * Number of items that the response returns per page, up to a maximum of `500`. Defaults to `100`.
     */
    itemsPerPage?: number;
    /**
     * Number of the page that displays the current set of the total objects that the response returns. Defaults to `1`.
     */
    pageNum?: number;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: string;
}

/**
 * A collection of values returned by getStreamConnections.
 */
export interface GetStreamConnectionsResult {
    readonly id: string;
    /**
     * Human-readable label that identifies the stream instance.
     */
    readonly instanceName: string;
    readonly itemsPerPage?: number;
    readonly pageNum?: number;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    readonly projectId: string;
    /**
     * A list where each element contains a stream connection.
     */
    readonly results: outputs.GetStreamConnectionsResult[];
    /**
     * Count of the total number of items in the result set. The count might be greater than the number of objects in the results array if the entire result set is paginated.
     */
    readonly totalCount: number;
}
/**
 * ## # Data Source: mongodbatlas.getStreamConnections
 *
 * `mongodbatlas.getStreamConnections` describes all connections of a stream instance for the specified project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = mongodbatlas.getStreamConnections({
 *     projectId: "<PROJECT_ID>",
 *     instanceName: "<INSTANCE_NAME>",
 * });
 * ```
 */
export function getStreamConnectionsOutput(args: GetStreamConnectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStreamConnectionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getStreamConnections:getStreamConnections", {
        "instanceName": args.instanceName,
        "itemsPerPage": args.itemsPerPage,
        "pageNum": args.pageNum,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamConnections.
 */
export interface GetStreamConnectionsOutputArgs {
    /**
     * Human-readable label that identifies the stream instance.
     */
    instanceName: pulumi.Input<string>;
    /**
     * Number of items that the response returns per page, up to a maximum of `500`. Defaults to `100`.
     */
    itemsPerPage?: pulumi.Input<number>;
    /**
     * Number of the page that displays the current set of the total objects that the response returns. Defaults to `1`.
     */
    pageNum?: pulumi.Input<number>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: pulumi.Input<string>;
}
