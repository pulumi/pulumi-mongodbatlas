// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AdvancedClusterAdvancedConfiguration {
    /**
     * [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
     */
    defaultReadConcern?: pulumi.Input<string>;
    /**
     * [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
     */
    defaultWriteConcern?: pulumi.Input<string>;
    /**
     * When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
     */
    failIndexKeyTooLong?: pulumi.Input<boolean>;
    /**
     * When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
     */
    javascriptEnabled?: pulumi.Input<boolean>;
    /**
     * Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
     */
    minimumEnabledTlsProtocol?: pulumi.Input<string>;
    /**
     * When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
     */
    noTableScan?: pulumi.Input<boolean>;
    /**
     * Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
     * * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
     */
    oplogMinRetentionHours?: pulumi.Input<number>;
    /**
     * The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
     */
    oplogSizeMb?: pulumi.Input<number>;
    /**
     * Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     */
    sampleRefreshIntervalBiConnector?: pulumi.Input<number>;
    /**
     * Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     */
    sampleSizeBiConnector?: pulumi.Input<number>;
}

export interface AdvancedClusterBiConnector {
    /**
     * Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
     * *
     * - Set to `true` to enable BI Connector for Atlas.
     * - Set to `false` to disable BI Connector for Atlas.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
     */
    readPreference?: pulumi.Input<string>;
}

export interface AdvancedClusterBiConnectorConfig {
    /**
     * Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
     * *
     * - Set to `true` to enable BI Connector for Atlas.
     * - Set to `false` to disable BI Connector for Atlas.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
     */
    readPreference?: pulumi.Input<string>;
}

export interface AdvancedClusterConnectionString {
    /**
     * @deprecated This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
     */
    awsPrivateLink?: pulumi.Input<{[key: string]: any}>;
    /**
     * @deprecated This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
     */
    awsPrivateLinkSrv?: pulumi.Input<{[key: string]: any}>;
    private?: pulumi.Input<string>;
    privateEndpoints?: pulumi.Input<pulumi.Input<inputs.AdvancedClusterConnectionStringPrivateEndpoint>[]>;
    privateSrv?: pulumi.Input<string>;
    standard?: pulumi.Input<string>;
    standardSrv?: pulumi.Input<string>;
}

export interface AdvancedClusterConnectionStringPrivateEndpoint {
    connectionString?: pulumi.Input<string>;
    endpoints?: pulumi.Input<pulumi.Input<inputs.AdvancedClusterConnectionStringPrivateEndpointEndpoint>[]>;
    srvConnectionString?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface AdvancedClusterConnectionStringPrivateEndpointEndpoint {
    endpointId?: pulumi.Input<string>;
    /**
     * Cloud service provider on which the servers are provisioned.
     * The possible values are:
     */
    providerName?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}

export interface AdvancedClusterLabel {
    /**
     * The key that you want to write.
     */
    key?: pulumi.Input<string>;
    /**
     * The value that you want to write.
     */
    value?: pulumi.Input<string>;
}

export interface AdvancedClusterReplicationSpec {
    containerId?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<string>;
    /**
     * Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED. Omit this value if you selected a `clusterType` of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a `numShards` value of 1 and a `clusterType` of SHARDED, Atlas deploys a single-shard [sharded cluster](https://docs.atlas.mongodb.com/reference/glossary/#std-term-sharded-cluster). Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations.
     */
    numShards?: pulumi.Input<number>;
    /**
     * Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
     */
    regionConfigs: pulumi.Input<pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfig>[]>;
    /**
     * Name for the zone in a Global Cluster.
     */
    zoneName?: pulumi.Input<string>;
}

export interface AdvancedClusterReplicationSpecRegionConfig {
    /**
     * Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. The values for the `analyticsAutoScaling` parameter must be the same for every item in the `replicationSpecs` array. See below
     */
    analyticsAutoScaling?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling>;
    /**
     * Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. Analytics nodes handle analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only and can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary). If you don't specify this parameter, no analytics nodes deploy to this region. See below
     */
    analyticsSpecs?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs>;
    /**
     * Configuration for the Collection of settings that configures auto-scaling information for the cluster. The values for the `autoScaling` parameter must be the same for every item in the `replicationSpecs` array. See below
     */
    autoScaling?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigAutoScaling>;
    /**
     * Cloud service provider on which you provision the host for a multi-tenant cluster. Use this only when a `providerName` is `TENANT` and `instanceSize` of a specs is `M2` or `M5`.
     */
    backingProviderName?: pulumi.Input<string>;
    /**
     * Hardware specifications for electable nodes in the region. Electable nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you do not specify this option, no electable nodes are deployed to the region. See below
     */
    electableSpecs?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigElectableSpecs>;
    /**
     * Election priority of the region. For regions with only read-only nodes, set this value to 0.
     * * If you have multiple `regionConfigs` objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is 7.
     * * If your region has set `region_configs.#.electable_specs.0.node_count` to 1 or higher, it must have a priority of exactly one (1) less than another region in the `replication_specs.#.region_configs.#` array. The highest-priority region must have a priority of 7. The lowest possible priority is 1.
     */
    priority: pulumi.Input<number>;
    /**
     * Cloud service provider on which the servers are provisioned.
     * The possible values are:
     */
    providerName: pulumi.Input<string>;
    /**
     * Hardware specifications for read-only nodes in the region. Read-only nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you don't specify this parameter, no read-only nodes are deployed to the region. See below
     */
    readOnlySpecs?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs>;
    /**
     * Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     */
    regionName: pulumi.Input<string>;
}

export interface AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling {
    /**
     * Flag that indicates whether instance size auto-scaling is enabled. This parameter defaults to false.
     */
    computeEnabled?: pulumi.Input<boolean>;
    /**
     * Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` is true.
     */
    computeMaxInstanceSize?: pulumi.Input<string>;
    /**
     * Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_scale_down_enabled` is true.
     */
    computeMinInstanceSize?: pulumi.Input<string>;
    /**
     * Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_min_instance_size`.
     */
    computeScaleDownEnabled?: pulumi.Input<boolean>;
    /**
     * Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
     */
    diskGbEnabled?: pulumi.Input<boolean>;
}

export interface AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
    /**
     * Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
     */
    diskIops?: pulumi.Input<number>;
    /**
     * Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
     */
    ebsVolumeType?: pulumi.Input<string>;
    /**
     * Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
     */
    instanceSize: pulumi.Input<string>;
    /**
     * Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
     */
    nodeCount?: pulumi.Input<number>;
}

export interface AdvancedClusterReplicationSpecRegionConfigAutoScaling {
    /**
     * Flag that indicates whether instance size auto-scaling is enabled. This parameter defaults to false.
     */
    computeEnabled?: pulumi.Input<boolean>;
    /**
     * Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` is true.
     */
    computeMaxInstanceSize?: pulumi.Input<string>;
    /**
     * Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled` is true.
     */
    computeMinInstanceSize?: pulumi.Input<string>;
    /**
     * Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size`.
     */
    computeScaleDownEnabled?: pulumi.Input<boolean>;
    /**
     * Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
     */
    diskGbEnabled?: pulumi.Input<boolean>;
}

export interface AdvancedClusterReplicationSpecRegionConfigElectableSpecs {
    /**
     * Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
     */
    diskIops?: pulumi.Input<number>;
    /**
     * Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
     */
    ebsVolumeType?: pulumi.Input<string>;
    /**
     * Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
     */
    instanceSize: pulumi.Input<string>;
    /**
     * Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
     */
    nodeCount?: pulumi.Input<number>;
}

export interface AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
    /**
     * Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
     */
    diskIops?: pulumi.Input<number>;
    /**
     * Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
     */
    ebsVolumeType?: pulumi.Input<string>;
    /**
     * Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
     */
    instanceSize: pulumi.Input<string>;
    /**
     * Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
     */
    nodeCount?: pulumi.Input<number>;
}

export interface AlertConfigurationMatcher {
    /**
     * Name of the field in the target object to match on.
     */
    fieldName?: pulumi.Input<string>;
    /**
     * If omitted, the configuration is disabled.
     * Accepted values are:
     * Accepted values are:
     * Accepted values are:
     */
    operator?: pulumi.Input<string>;
    /**
     * If omitted, the configuration is disabled.
     */
    value?: pulumi.Input<string>;
}

export interface AlertConfigurationMetricThresholdConfig {
    /**
     * Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
     */
    metricName?: pulumi.Input<string>;
    /**
     * This must be set to AVERAGE. Atlas computes the current metric value as an average.
     */
    mode?: pulumi.Input<string>;
    /**
     * If omitted, the configuration is disabled.
     * Accepted values are:
     * Accepted values are:
     * Accepted values are:
     */
    operator?: pulumi.Input<string>;
    /**
     * Threshold value outside of which an alert will be triggered.
     */
    threshold?: pulumi.Input<number>;
    /**
     * The units for the threshold value. Depends on the type of metric.
     * Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
     * Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
     */
    units?: pulumi.Input<string>;
}

export interface AlertConfigurationNotification {
    /**
     * Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
     */
    apiToken?: pulumi.Input<string>;
    /**
     * Slack channel name. Required for the SLACK notifications type.
     */
    channelName?: pulumi.Input<string>;
    /**
     * Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
     */
    datadogApiKey?: pulumi.Input<string>;
    /**
     * Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
     */
    datadogRegion?: pulumi.Input<string>;
    /**
     * Number of minutes to wait after an alert condition is detected before sending out the first notification.
     */
    delayMin?: pulumi.Input<number>;
    /**
     * Email address to which alert notifications are sent. Required for the EMAIL notifications type.
     */
    emailAddress?: pulumi.Input<string>;
    /**
     * Flag indicating email notifications should be sent. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
     */
    emailEnabled?: pulumi.Input<boolean>;
    /**
     * Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
     */
    flowName?: pulumi.Input<string>;
    /**
     * The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
     */
    flowdockApiToken?: pulumi.Input<string>;
    /**
     * Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5. **NOTE** `PAGER_DUTY`, `VICTOR_OPS`, and `OPS_GENIE` notifications do not return this value. The notification interval must be configured and managed within each external service.
     */
    intervalMin?: pulumi.Input<number>;
    /**
     * Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB Cloud needs to send this notification via Microsoft Teams. Required if `typeName` is `MICROSOFT_TEAMS`. If the URL later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.
     */
    microsoftTeamsWebhookUrl?: pulumi.Input<string>;
    /**
     * Mobile number to which alert notifications are sent. Required for the SMS notifications type.
     */
    mobileNumber?: pulumi.Input<string>;
    /**
     * Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
     */
    opsGenieApiKey?: pulumi.Input<string>;
    /**
     * Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
     */
    opsGenieRegion?: pulumi.Input<string>;
    /**
     * Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
     */
    orgName?: pulumi.Input<string>;
    /**
     * Optional. One or more roles that receive the configured alert. If you include this field, Atlas sends alerts only to users assigned the roles you specify in the array. If you omit this field, Atlas sends alerts to users assigned any role. This parameter is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
     * Accepted values are:
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
     */
    serviceKey?: pulumi.Input<string>;
    /**
     * Flag indicating if text message notifications should be sent to this user's mobile phone. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
     */
    smsEnabled?: pulumi.Input<boolean>;
    /**
     * Unique identifier of a team.
     */
    teamId?: pulumi.Input<string>;
    /**
     * Label for the team that receives this notification.
     */
    teamName?: pulumi.Input<string>;
    /**
     * Type of alert notification.
     * Accepted values are:
     */
    typeName?: pulumi.Input<string>;
    /**
     * Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
     */
    username?: pulumi.Input<string>;
    /**
     * VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
     */
    victorOpsApiKey?: pulumi.Input<string>;
    /**
     * VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
     */
    victorOpsRoutingKey?: pulumi.Input<string>;
    /**
     * Optional authentication secret for the `WEBHOOK` notifications type.
     */
    webhookSecret?: pulumi.Input<string>;
    /**
     * Target URL  for the `WEBHOOK` notifications type.
     */
    webhookUrl?: pulumi.Input<string>;
}

export interface AlertConfigurationThresholdConfig {
    /**
     * If omitted, the configuration is disabled.
     * Accepted values are:
     * Accepted values are:
     * Accepted values are:
     */
    operator?: pulumi.Input<string>;
    /**
     * Threshold value outside of which an alert will be triggered.
     */
    threshold?: pulumi.Input<number>;
    /**
     * The units for the threshold value. Depends on the type of metric.
     * Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
     * Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
     */
    units?: pulumi.Input<string>;
}

export interface CloudBackupScheduleCopySetting {
    /**
     * Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. "AWS" "AZURE" "GCP"
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * List that describes which types of snapshots to copy. i.e. "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "ON_DEMAND"
     */
    frequencies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under https://www.mongodb.com/docs/atlas/reference/cloud-providers/ 'regions' link
     */
    regionName?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, do a GET request to Return One Cluster in One Project and consult the replicationSpecs array https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#operation/returnOneCluster
     */
    replicationSpecId?: pulumi.Input<string>;
    /**
     * Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
     */
    shouldCopyOplogs?: pulumi.Input<boolean>;
}

export interface CloudBackupScheduleExport {
    /**
     * Unique identifier of the mongodbatlas.CloudBackupSnapshotExportBucket export_bucket_id value.
     */
    exportBucketId?: pulumi.Input<string>;
    /**
     * Frequency associated with the export snapshot item.
     */
    frequencyType?: pulumi.Input<string>;
}

export interface CloudBackupSchedulePolicyItemDaily {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (daily in this case). The only supported value for daily policies is `1` day.
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For daily policies, the frequency type is defined as `daily`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, or `months`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`.  Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the hourly policy item specifies a retention of two days, the daily retention policy must specify two days or greater.
     */
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupSchedulePolicyItemHourly {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (hourly in this case). The supported values for hourly policies are `1`, `2`, `4`, `6`, `8` or `12` hours. Note that `12` hours is the only accepted value for NVMe clusters.
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For hourly policies, the frequency type is defined as `hourly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, or `months`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`.
     */
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupSchedulePolicyItemMonthly {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, or `months`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
     */
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupSchedulePolicyItemWeekly {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (weekly in this case). The supported values for weekly policies are `1` through `7`, where `1` represents Monday and `7` represents Sunday.
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For weekly policies, the frequency type is defined as `weekly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, or `months`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`. Weekly policy must have retention of at least 7 days or 1 week. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the daily policy item specifies a retention of two weeks, the weekly retention policy must specify two weeks or greater.
     */
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupSnapshotExportJobComponent {
    /**
     * _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
     */
    exportId?: pulumi.Input<string>;
    /**
     * _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
     */
    replicaSetName?: pulumi.Input<string>;
}

export interface CloudBackupSnapshotExportJobCustomData {
    /**
     * Required if you want to include custom data using `customData` in the metadata file uploaded to the bucket. Key to include in the metadata file that Atlas uploads to the bucket when the export job finishes.
     */
    key: pulumi.Input<string>;
    /**
     * Required if you specify `key`.
     */
    value: pulumi.Input<string>;
}

export interface CloudBackupSnapshotMember {
    /**
     * Cloud provider that stores this snapshot.
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * Unique identifier for the sharded cluster snapshot.
     */
    id?: pulumi.Input<string>;
    /**
     * Label given to a shard or config server from which Atlas took this snapshot.
     */
    replicaSetName?: pulumi.Input<string>;
}

export interface CloudBackupSnapshotRestoreJobDeliveryTypeConfig {
    automated?: pulumi.Input<boolean>;
    download?: pulumi.Input<boolean>;
    oplogInc?: pulumi.Input<number>;
    oplogTs?: pulumi.Input<number>;
    pointInTime?: pulumi.Input<boolean>;
    pointInTimeUtcSeconds?: pulumi.Input<number>;
    /**
     * Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
     */
    targetClusterName?: pulumi.Input<string>;
    /**
     * Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
     */
    targetProjectId?: pulumi.Input<string>;
}

export interface CloudProviderAccessAuthorizationAws {
    iamAssumedRoleArn: pulumi.Input<string>;
}

export interface CloudProviderAccessAuthorizationFeatureUsage {
    featureId?: pulumi.Input<{[key: string]: any}>;
    featureType?: pulumi.Input<string>;
}

export interface CloudProviderAccessFeatureUsage {
    featureId?: pulumi.Input<{[key: string]: any}>;
    featureType?: pulumi.Input<string>;
}

export interface CloudProviderAccessSetupAwsConfig {
    atlasAssumedRoleExternalId?: pulumi.Input<string>;
    atlasAwsAccountArn?: pulumi.Input<string>;
}

export interface CloudProviderSnapshotBackupPolicyPolicy {
    id: pulumi.Input<string>;
    policyItems: pulumi.Input<pulumi.Input<inputs.CloudProviderSnapshotBackupPolicyPolicyPolicyItem>[]>;
}

export interface CloudProviderSnapshotBackupPolicyPolicyPolicyItem {
    frequencyInterval: pulumi.Input<number>;
    frequencyType: pulumi.Input<string>;
    id: pulumi.Input<string>;
    retentionUnit: pulumi.Input<string>;
    retentionValue: pulumi.Input<number>;
}

export interface CloudProviderSnapshotRestoreJobDeliveryTypeConfig {
    automated?: pulumi.Input<boolean>;
    download?: pulumi.Input<boolean>;
    oplogInc?: pulumi.Input<number>;
    oplogTs?: pulumi.Input<number>;
    pointInTime?: pulumi.Input<boolean>;
    pointInTimeUtcSeconds?: pulumi.Input<number>;
    /**
     * Name of the target Atlas cluster to which the restore job restores the snapshot. Only required if deliveryType is automated.
     */
    targetClusterName?: pulumi.Input<string>;
    /**
     * Unique ID of the target Atlas project for the specified targetClusterName. Only required if deliveryType is automated.
     */
    targetProjectId?: pulumi.Input<string>;
}

export interface ClusterAdvancedConfiguration {
    /**
     * [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
     */
    defaultReadConcern?: pulumi.Input<string>;
    /**
     * [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
     */
    defaultWriteConcern?: pulumi.Input<string>;
    /**
     * When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
     */
    failIndexKeyTooLong?: pulumi.Input<boolean>;
    /**
     * When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
     */
    javascriptEnabled?: pulumi.Input<boolean>;
    /**
     * Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
     */
    minimumEnabledTlsProtocol?: pulumi.Input<string>;
    /**
     * When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
     */
    noTableScan?: pulumi.Input<boolean>;
    /**
     * Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
     * * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see  [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
     */
    oplogMinRetentionHours?: pulumi.Input<number>;
    /**
     * The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
     */
    oplogSizeMb?: pulumi.Input<number>;
    /**
     * Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     */
    sampleRefreshIntervalBiConnector?: pulumi.Input<number>;
    /**
     * Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     */
    sampleSizeBiConnector?: pulumi.Input<number>;
}

export interface ClusterBiConnectorConfig {
    /**
     * Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
     * *
     * - Set to `true` to enable BI Connector for Atlas.
     * - Set to `false` to disable BI Connector for Atlas.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
     */
    readPreference?: pulumi.Input<string>;
}

export interface ClusterConnectionString {
    /**
     * @deprecated This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
     */
    awsPrivateLink?: pulumi.Input<{[key: string]: any}>;
    /**
     * @deprecated This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
     */
    awsPrivateLinkSrv?: pulumi.Input<{[key: string]: any}>;
    private?: pulumi.Input<string>;
    privateEndpoints?: pulumi.Input<pulumi.Input<inputs.ClusterConnectionStringPrivateEndpoint>[]>;
    privateSrv?: pulumi.Input<string>;
    standard?: pulumi.Input<string>;
    standardSrv?: pulumi.Input<string>;
}

export interface ClusterConnectionStringPrivateEndpoint {
    connectionString?: pulumi.Input<string>;
    endpoints?: pulumi.Input<pulumi.Input<inputs.ClusterConnectionStringPrivateEndpointEndpoint>[]>;
    srvConnectionString?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface ClusterConnectionStringPrivateEndpointEndpoint {
    endpointId?: pulumi.Input<string>;
    /**
     * Cloud service provider on which the servers are provisioned.
     */
    providerName?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}

export interface ClusterLabel {
    /**
     * The key that you want to write.
     */
    key?: pulumi.Input<string>;
    /**
     * The value that you want to write.
     */
    value?: pulumi.Input<string>;
}

export interface ClusterReplicationSpec {
    /**
     * Unique identifer of the replication document for a zone in a Global Cluster.
     */
    id?: pulumi.Input<string>;
    /**
     * Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
     */
    numShards: pulumi.Input<number>;
    /**
     * Physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
     */
    regionsConfigs?: pulumi.Input<pulumi.Input<inputs.ClusterReplicationSpecRegionsConfig>[]>;
    /**
     * Name for the zone in a Global Cluster.
     */
    zoneName?: pulumi.Input<string>;
}

export interface ClusterReplicationSpecRegionsConfig {
    /**
     * The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
     */
    analyticsNodes?: pulumi.Input<number>;
    /**
     * Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
     * * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
     * * Specify 0 if you do not want any electable nodes in the region.
     * * You cannot create electable nodes in a region if `priority` is 0.
     */
    electableNodes?: pulumi.Input<number>;
    /**
     * Election priority of the region. For regions with only read-only nodes, set this value to 0.
     * * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
     * * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
     * * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
     */
    priority?: pulumi.Input<number>;
    /**
     * Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
     */
    readOnlyNodes?: pulumi.Input<number>;
    /**
     * Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     */
    regionName: pulumi.Input<string>;
}

export interface ClusterSnapshotBackupPolicy {
    /**
     * The cluster ID.
     */
    clusterId?: pulumi.Input<string>;
    clusterName?: pulumi.Input<string>;
    nextSnapshot?: pulumi.Input<string>;
    policies?: pulumi.Input<pulumi.Input<inputs.ClusterSnapshotBackupPolicyPolicy>[]>;
    referenceHourOfDay?: pulumi.Input<number>;
    referenceMinuteOfHour?: pulumi.Input<number>;
    restoreWindowDays?: pulumi.Input<number>;
    updateSnapshots?: pulumi.Input<boolean>;
}

export interface ClusterSnapshotBackupPolicyPolicy {
    /**
     * Unique identifer of the replication document for a zone in a Global Cluster.
     */
    id?: pulumi.Input<string>;
    policyItems?: pulumi.Input<pulumi.Input<inputs.ClusterSnapshotBackupPolicyPolicyPolicyItem>[]>;
}

export interface ClusterSnapshotBackupPolicyPolicyPolicyItem {
    frequencyInterval?: pulumi.Input<number>;
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifer of the replication document for a zone in a Global Cluster.
     */
    id?: pulumi.Input<string>;
    retentionUnit?: pulumi.Input<string>;
    retentionValue?: pulumi.Input<number>;
}

export interface CustomDbRoleAction {
    /**
     * Name of the privilege action. For a complete list of actions available in the Atlas API, see [Custom Role Actions](https://docs.atlas.mongodb.com/reference/api/custom-role-actions)
     * > **Note**: The privilege actions available to the Custom Roles API resource represent a subset of the privilege actions available in the Atlas Custom Roles UI.
     */
    action: pulumi.Input<string>;
    /**
     * Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
     */
    resources: pulumi.Input<pulumi.Input<inputs.CustomDbRoleActionResource>[]>;
}

export interface CustomDbRoleActionResource {
    cluster?: pulumi.Input<boolean>;
    collectionName?: pulumi.Input<string>;
    /**
     * Database on which the inherited role is granted.
     */
    databaseName?: pulumi.Input<string>;
}

export interface CustomDbRoleInheritedRole {
    /**
     * Database on which the inherited role is granted.
     */
    databaseName: pulumi.Input<string>;
    /**
     * Name of the inherited role. This can either be another custom role or a built-in role.
     */
    roleName: pulumi.Input<string>;
}

export interface DataLakeAws {
    externalId?: pulumi.Input<string>;
    iamAssumedRoleArn?: pulumi.Input<string>;
    iamUserArn?: pulumi.Input<string>;
    roleId: pulumi.Input<string>;
    testS3Bucket: pulumi.Input<string>;
}

export interface DataLakeDataProcessRegion {
    cloudProvider: pulumi.Input<string>;
    region: pulumi.Input<string>;
}

export interface DataLakeStorageDatabase {
    collections?: pulumi.Input<pulumi.Input<inputs.DataLakeStorageDatabaseCollection>[]>;
    maxWildcardCollections?: pulumi.Input<number>;
    /**
     * Name of the Atlas Data Lake.
     */
    name?: pulumi.Input<string>;
    views?: pulumi.Input<pulumi.Input<inputs.DataLakeStorageDatabaseView>[]>;
}

export interface DataLakeStorageDatabaseCollection {
    dataSources?: pulumi.Input<pulumi.Input<inputs.DataLakeStorageDatabaseCollectionDataSource>[]>;
    /**
     * Name of the Atlas Data Lake.
     */
    name?: pulumi.Input<string>;
}

export interface DataLakeStorageDatabaseCollectionDataSource {
    defaultFormat?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    storeName?: pulumi.Input<string>;
}

export interface DataLakeStorageDatabaseView {
    /**
     * Name of the Atlas Data Lake.
     */
    name?: pulumi.Input<string>;
    pipeline?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
}

export interface DataLakeStorageStore {
    additionalStorageClasses?: pulumi.Input<pulumi.Input<string>[]>;
    bucket?: pulumi.Input<string>;
    delimiter?: pulumi.Input<string>;
    includeTags?: pulumi.Input<boolean>;
    /**
     * Name of the Atlas Data Lake.
     */
    name?: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
    provider?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}

export interface DatabaseUserLabel {
    /**
     * The key that you want to write.
     */
    key?: pulumi.Input<string>;
    /**
     * The value that you want to write.
     */
    value?: pulumi.Input<string>;
}

export interface DatabaseUserRole {
    /**
     * Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
     */
    collectionName?: pulumi.Input<string>;
    /**
     * Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * Name of the role to grant. See [Create a Database User](https://docs.atlas.mongodb.com/reference/api/database-users-create-a-user/) `roles.roleName` for valid values and restrictions.
     */
    roleName?: pulumi.Input<string>;
}

export interface DatabaseUserScope {
    /**
     * Name of the cluster or Atlas Data Lake that the user has access to.
     */
    name?: pulumi.Input<string>;
    /**
     * Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
     */
    type?: pulumi.Input<string>;
}

export interface EncryptionAtRestAwsKmsConfig {
    accessKeyId?: pulumi.Input<string>;
    /**
     * The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
     */
    customerMasterKeyId?: pulumi.Input<string>;
    /**
     * Specifies whether Encryption at Rest is enabled for an Atlas project, To disable Encryption at Rest, pass only this parameter with a value of false, When you disable Encryption at Rest, Atlas also removes the configuration details.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
     */
    region?: pulumi.Input<string>;
    /**
     * ID of an AWS IAM role authorized to manage an AWS customer master key. To find the ID for an existing IAM role check the `roleId` attribute of the `mongodbatlas.CloudProviderAccess` resource.
     */
    roleId?: pulumi.Input<string>;
    secretAccessKey?: pulumi.Input<string>;
}

export interface EncryptionAtRestAzureKeyVaultConfig {
    /**
     * The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
     */
    azureEnvironment?: pulumi.Input<string>;
    /**
     * The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
     */
    clientId?: pulumi.Input<string>;
    /**
     * Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The unique identifier of a key in an Azure Key Vault.
     */
    keyIdentifier?: pulumi.Input<string>;
    /**
     * The name of an Azure Key Vault containing your key.
     */
    keyVaultName?: pulumi.Input<string>;
    /**
     * The name of the Azure Resource group that contains an Azure Key Vault.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
     */
    secret?: pulumi.Input<string>;
    /**
     * The unique identifier associated with an Azure subscription.
     */
    subscriptionId?: pulumi.Input<string>;
    /**
     * The unique identifier for an Azure AD tenant within an Azure subscription.
     */
    tenantId?: pulumi.Input<string>;
}

export interface EncryptionAtRestGoogleCloudKmsConfig {
    /**
     * Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Key Version Resource ID from your GCP account.
     */
    keyVersionResourceId?: pulumi.Input<string>;
    /**
     * String-formatted JSON object containing GCP KMS credentials from your GCP account.
     */
    serviceAccountKey?: pulumi.Input<string>;
}

export interface EventTriggerEventProcessors {
    awsEventbridge?: pulumi.Input<inputs.EventTriggerEventProcessorsAwsEventbridge>;
}

export interface EventTriggerEventProcessorsAwsEventbridge {
    configAccountId?: pulumi.Input<string>;
    configRegion?: pulumi.Input<string>;
}

export interface FederatedSettingsOrgRoleMappingRoleAssignment {
    /**
     * Unique identifier of the project to which you want the role mapping to apply.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Specifies the Roles that are attached to the Role Mapping. Available role IDs can be found on [the User Roles
     * Reference](https://www.mongodb.com/docs/atlas/reference/user-roles/).
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAlertConfigurationOutput {
    label?: string;
    type: string;
    /**
     * Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
     */
    value?: string;
}

export interface GetAlertConfigurationOutputArgs {
    label?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    /**
     * Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
     */
    value?: pulumi.Input<string>;
}

export interface GetAlertConfigurationsListOption {
    includeCount?: boolean;
    itemsPerPage?: number;
    pageNum?: number;
}

export interface GetAlertConfigurationsListOptionArgs {
    includeCount?: pulumi.Input<boolean>;
    itemsPerPage?: pulumi.Input<number>;
    pageNum?: pulumi.Input<number>;
}

export interface GetCustomDbRoleInheritedRole {
    /**
     * (Required) Database on which the inherited role is granted.
     */
    databaseName?: string;
    /**
     * Name of the custom role.
     */
    roleName?: string;
}

export interface GetCustomDbRoleInheritedRoleArgs {
    /**
     * (Required) Database on which the inherited role is granted.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * Name of the custom role.
     */
    roleName?: pulumi.Input<string>;
}

export interface GetGlobalClusterConfigManagedNamespace {
    /**
     * (Required) The name of the collection associated with the managed namespace.
     */
    collection: string;
    /**
     * (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
     */
    customShardKey: string;
    /**
     * (Required) The name of the database containing the collection.
     */
    db: string;
    /**
     * Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
     */
    isCustomShardKeyHashed?: boolean;
    /**
     * Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
     */
    isShardKeyUnique?: boolean;
}

export interface GetGlobalClusterConfigManagedNamespaceArgs {
    /**
     * (Required) The name of the collection associated with the managed namespace.
     */
    collection: pulumi.Input<string>;
    /**
     * (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
     */
    customShardKey: pulumi.Input<string>;
    /**
     * (Required) The name of the database containing the collection.
     */
    db: pulumi.Input<string>;
    /**
     * Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
     */
    isCustomShardKeyHashed?: pulumi.Input<boolean>;
    /**
     * Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
     */
    isShardKeyUnique?: pulumi.Input<boolean>;
}

export interface GetServerlessInstanceLink {
    href?: string;
    rel?: string;
}

export interface GetServerlessInstanceLinkArgs {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface GlobalClusterConfigCustomZoneMapping {
    /**
     * The ISO location code to which you want to map a zone in your Global Cluster. You can find a list of all supported location codes [here](https://cloud.mongodb.com/static/atlas/country_iso_codes.txt).
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the zone in your Global Cluster that you want to map to location.
     */
    zone?: pulumi.Input<string>;
}

export interface GlobalClusterConfigManagedNamespace {
    /**
     * The name of the collection associated with the managed namespace.
     */
    collection: pulumi.Input<string>;
    /**
     * The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
     */
    customShardKey: pulumi.Input<string>;
    /**
     * The name of the database containing the collection.
     */
    db: pulumi.Input<string>;
    /**
     * Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
     */
    isCustomShardKeyHashed?: pulumi.Input<boolean>;
    /**
     * Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
     */
    isShardKeyUnique?: pulumi.Input<boolean>;
}

export interface LdapConfigurationUserToDnMapping {
    ldapQuery?: pulumi.Input<string>;
    match?: pulumi.Input<string>;
    substitution?: pulumi.Input<string>;
}

export interface LdapVerifyLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface LdapVerifyValidation {
    /**
     * The current status of the LDAP over TLS/SSL configuration. One of the following values: `PENDING`, `SUCCESS`, and `FAILED`.
     */
    status?: pulumi.Input<string>;
    validationType?: pulumi.Input<string>;
}

export interface OnlineArchiveCriteria {
    dateField?: pulumi.Input<string>;
    dateFormat?: pulumi.Input<string>;
    expireAfterDays?: pulumi.Input<number>;
    query?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface OnlineArchivePartitionField {
    fieldName: pulumi.Input<string>;
    fieldType?: pulumi.Input<string>;
    order: pulumi.Input<number>;
}

export interface PrivateLinkEndpointServiceEndpoint {
    /**
     * Forwarding rule that corresponds to the endpoint you created in GCP.
     */
    endpointName?: pulumi.Input<string>;
    /**
     * Private IP address of the endpoint you created in GCP.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
     */
    serviceAttachmentName?: pulumi.Input<string>;
    /**
     * Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
     */
    status?: pulumi.Input<string>;
}

export interface ProjectApiKey {
    /**
     * The unique identifier of the Programmatic API key you want to associate with the Project.  The Programmatic API key and Project must share the same parent organization.  Note: this is not the `publicKey` of the Programmatic API key but the `id` of the key. See [Programmatic API Keys](https://docs.atlas.mongodb.com/reference/api/apiKeys/) for more.
     */
    apiKeyId: pulumi.Input<string>;
    /**
     * Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team.
     * The following are valid roles:
     * The following are valid roles:
     */
    roleNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectTeam {
    /**
     * Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team.
     * The following are valid roles:
     */
    roleNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
     */
    teamId: pulumi.Input<string>;
}

export interface ProviderAssumeRole {
    duration?: pulumi.Input<string>;
    /**
     * @deprecated Use assume_role.duration instead
     */
    durationSeconds?: pulumi.Input<number>;
    externalId?: pulumi.Input<string>;
    policy?: pulumi.Input<string>;
    policyArns?: pulumi.Input<pulumi.Input<string>[]>;
    roleArn?: pulumi.Input<string>;
    sessionName?: pulumi.Input<string>;
    sourceIdentity?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    transitiveTagKeys?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SearchIndexSynonym {
    /**
     * Name of the [analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use with this synonym mapping. Atlas Search doesn't support these [custom analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) tokenizers and token filters in [analyzers used in synonym mappings](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#options):
     * * [nGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-ngram-tokenizer-ref) Tokenizer
     * * [edgeGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-edgegram-tokenizer-ref) Tokenizers
     * * [daitchMokotoffSoundex](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-daitchmokotoffsoundex-tf-ref) token filter
     * * [nGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-ngram-tf-ref) token filter
     * * [edgeGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-edgegram-tf-ref) token filter
     * * [shingle](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-shingle-tf-ref) token filter
     */
    analyzer: pulumi.Input<string>;
    /**
     * Name of the [synonym mapping definition](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-ref). Name must be unique in this index definition and it can't be an empty string.
     */
    name: pulumi.Input<string>;
    /**
     * Name of the source MongoDB collection for the synonyms. Documents in this collection must be in the format described in the [Synonyms Source Collection Documents](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-coll-spec).
     */
    sourceCollection: pulumi.Input<string>;
}

export interface ServerlessInstanceLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface X509AuthenticationDatabaseUserCertificate {
    createdAt?: pulumi.Input<string>;
    groupId?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    notAfter?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
}
export namespace config {
}
