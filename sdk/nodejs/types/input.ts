// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AdvancedClusterAdvancedConfiguration {
    /**
     * The minimum pre- and post-image retention time in seconds. This option corresponds to the `changeStreamOptions.preAndPostImages.expireAfterSeconds` cluster parameter. Defaults to `-1`(off). This setting controls the retention policy of change stream pre- and post-images. Pre- and post-images are the versions of a document before and after document modification, respectively. `expireAfterSeconds` controls how long MongoDB retains pre- and post-images. When set to -1 (off), MongoDB uses the default retention policy: pre- and post-images are retained until the corresponding change stream events are removed from the oplog. To set the minimum pre- and post-image retention time, specify an integer value greater than zero. Setting this too low could increase the risk of interrupting Realm sync or triggers processing. This parameter is only supported for MongoDB version 6.0 and above.
     */
    changeStreamOptionsPreAndPostImagesExpireAfterSeconds?: pulumi.Input<number>;
    /**
     * The custom OpenSSL cipher suite list for TLS 1.2. This field is only valid when `tlsCipherConfigMode` is set to `CUSTOM`.
     */
    customOpensslCipherConfigTls12s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Default time limit in milliseconds for individual read operations to complete. This option corresponds to the [defaultMaxTimeMS](https://www.mongodb.com/docs/upcoming/reference/cluster-parameters/defaultMaxTimeMS/) cluster parameter. This parameter is supported only for MongoDB version 8.0 and above.
     */
    defaultMaxTimeMs?: pulumi.Input<number>;
    /**
     * [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. **(DEPRECATED)** MongoDB 6.0 and later clusters default to `local`. To use a custom read concern level, please refer to your driver documentation.
     *
     * @deprecated This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     */
    defaultReadConcern?: pulumi.Input<string>;
    /**
     * [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 6.0 clusters default to [majority](https://docs.mongodb.com/manual/reference/write-concern/).
     */
    defaultWriteConcern?: pulumi.Input<string>;
    /**
     * **(DEPRECATED)** (Optional) When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
     *
     * @deprecated This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     */
    failIndexKeyTooLong?: pulumi.Input<boolean>;
    /**
     * When true (default), the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
     */
    javascriptEnabled?: pulumi.Input<boolean>;
    /**
     * Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections. Valid values are:
     * - TLS1_0
     * - TLS1_1
     * - TLS1_2
     */
    minimumEnabledTlsProtocol?: pulumi.Input<string>;
    /**
     * When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
     */
    noTableScan?: pulumi.Input<boolean>;
    /**
     * Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
     * * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
     */
    oplogMinRetentionHours?: pulumi.Input<number>;
    /**
     * The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
     */
    oplogSizeMb?: pulumi.Input<number>;
    /**
     * Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     */
    sampleRefreshIntervalBiConnector?: pulumi.Input<number>;
    /**
     * Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     */
    sampleSizeBiConnector?: pulumi.Input<number>;
    /**
     * The TLS cipher suite configuration mode. Valid values include `CUSTOM` or `DEFAULT`. The `DEFAULT` mode uses the default cipher suites. The `CUSTOM` mode allows you to specify custom cipher suites for both TLS 1.2 and TLS 1.3. To unset, this should be set back to `DEFAULT`.
     */
    tlsCipherConfigMode?: pulumi.Input<string>;
    /**
     * Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
     */
    transactionLifetimeLimitSeconds?: pulumi.Input<number>;
}

export interface AdvancedClusterBiConnectorConfig {
    /**
     * Specifies whether or not BI Connector for Atlas is enabled on the cluster.
     * *
     * - Set to `true` to enable BI Connector for Atlas.
     * - Set to `false` to disable BI Connector for Atlas.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
     *
     * - Set to "primary" to have BI Connector for Atlas read from the primary.
     *
     * - Set to "secondary" to have BI Connector for Atlas read from a secondary member. Default if there are no analytics nodes in the cluster.
     *
     * - Set to "analytics" to have BI Connector for Atlas read from an analytics node. Default if the cluster contains analytics nodes.
     */
    readPreference?: pulumi.Input<string>;
}

export interface AdvancedClusterConnectionString {
    /**
     * [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
     */
    private?: pulumi.Input<string>;
    /**
     * Private endpoint connection strings. Each object describes the connection strings you can use to connect to this cluster through a private endpoint. Atlas returns this parameter only if you deployed a private endpoint to all regions to which you deployed this cluster's nodes.
     * - `connection_strings.private_endpoint.#.connection_string` - Private-endpoint-aware `mongodb://`connection string for this private endpoint.
     * - `connection_strings.private_endpoint.#.srv_connection_string` - Private-endpoint-aware `mongodb+srv://` connection string for this private endpoint. The `mongodb+srv` protocol tells the driver to look up the seed list of hosts in DNS . Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don't need to: Append the seed list or Change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn't, use `connection_strings.private_endpoint[#].connection_string`
     * - `connection_strings.private_endpoint.#.srv_shard_optimized_connection_string` - Private endpoint-aware connection string optimized for sharded clusters that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint. If the connection string uses this Uniform Resource Identifier (URI) format, you don't need to change the Uniform Resource Identifier (URI) if the nodes change. Use this Uniform Resource Identifier (URI) format if your application and Atlas cluster support it. If it doesn't, use and consult the documentation for connectionStrings.privateEndpoint[#].srvConnectionString.
     * - `connection_strings.private_endpoint.#.type` - Type of MongoDB process that you connect to with the connection strings. Atlas returns `MONGOD` for replica sets, or `MONGOS` for sharded clusters.
     * - `connection_strings.private_endpoint.#.endpoints` - Private endpoint through which you connect to Atlas when you use `connection_strings.private_endpoint[#].connection_string` or `connection_strings.private_endpoint[#].srv_connection_string`
     * - `connection_strings.private_endpoint.#.endpoints.#.endpoint_id` - Unique identifier of the private endpoint.
     * - `connection_strings.private_endpoint.#.endpoints.#.provider_name` - Cloud provider to which you deployed the private endpoint. Atlas returns `AWS` or `AZURE`.
     * - `connection_strings.private_endpoint.#.endpoints.#.region` - Region to which you deployed the private endpoint.
     */
    privateEndpoints?: pulumi.Input<pulumi.Input<inputs.AdvancedClusterConnectionStringPrivateEndpoint>[]>;
    /**
     * [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
     */
    privateSrv?: pulumi.Input<string>;
    /**
     * Public mongodb:// connection string for this cluster.
     */
    standard?: pulumi.Input<string>;
    /**
     * Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t  , use connectionStrings.standard.
     */
    standardSrv?: pulumi.Input<string>;
}

export interface AdvancedClusterConnectionStringPrivateEndpoint {
    connectionString?: pulumi.Input<string>;
    endpoints?: pulumi.Input<pulumi.Input<inputs.AdvancedClusterConnectionStringPrivateEndpointEndpoint>[]>;
    srvConnectionString?: pulumi.Input<string>;
    srvShardOptimizedConnectionString?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface AdvancedClusterConnectionStringPrivateEndpointEndpoint {
    endpointId?: pulumi.Input<string>;
    /**
     * Cloud service provider on which the servers are provisioned.
     * The possible values are:
     * - `AWS` - Amazon AWS
     * - `GCP` - Google Cloud Platform
     * - `AZURE` - Microsoft Azure
     * - `TENANT` - M0 multi-tenant cluster. Use `replication_specs.#.region_configs.#.backing_provider_name` to set the cloud service provider.
     */
    providerName?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}

export interface AdvancedClusterLabel {
    /**
     * The key that you want to write.
     */
    key?: pulumi.Input<string>;
    /**
     * The value that you want to write.
     *
     * > **NOTE:** MongoDB Atlas doesn't display your labels.
     */
    value?: pulumi.Input<string>;
}

export interface AdvancedClusterPinnedFcv {
    /**
     * Expiration date of the fixed FCV. This value is in the ISO 8601 timestamp format (e.g. "2024-12-04T16:25:00Z"). Note that this field cannot exceed 4 weeks from the pinned date.
     */
    expirationDate: pulumi.Input<string>;
    /**
     * Feature compatibility version of the cluster.
     */
    version?: pulumi.Input<string>;
}

export interface AdvancedClusterReplicationSpec {
    containerId?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Unique 24-hexadecimal digit string that identifies the replication object for a shard in a Cluster. This value corresponds to Shard ID displayed in the UI. When using old sharding configuration (replication spec with `numShards` greater than 1) this value is not populated.
     */
    externalId?: pulumi.Input<string>;
    /**
     * **(DEPRECATED)** Unique identifer of the replication document for a zone in a Global Cluster. This value corresponds to the legacy sharding schema (no independent shard scaling) and is different from the Shard ID you may see in the Atlas UI. This value is not populated (empty string) when a sharded cluster has independently scaled shards.
     *
     * @deprecated This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     */
    id?: pulumi.Input<string>;
    /**
     * Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED. Omit this value if you selected a `clusterType` of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a `numShards` value of 1 and a `clusterType` of SHARDED, Atlas deploys a single-shard [sharded cluster](https://docs.atlas.mongodb.com/reference/glossary/#std-term-sharded-cluster). Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations.
     * If you are upgrading a replica set to a sharded cluster, you cannot increase the number of shards in the same update request. You should wait until after the cluster has completed upgrading to sharded and you have reconnected all application clients to the MongoDB router before adding additional shards. Otherwise, your data might become inconsistent once MongoDB Cloud begins distributing data across shards. To learn more, see [Convert a replica set to a sharded cluster documentation](https://www.mongodb.com/docs/atlas/scale-cluster/#convert-a-replica-set-to-a-sharded-cluster) and [Convert a replica set to a sharded cluster tutorial](https://www.mongodb.com/docs/upcoming/tutorial/convert-replica-set-to-replicated-shard-cluster). **(DEPRECATED)** To learn more, see the 1.18.0 Upgrade Guide.
     *
     * @deprecated This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     */
    numShards?: pulumi.Input<number>;
    /**
     * Configuration for the hardware specifications for nodes set for a given region. Each `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below.
     */
    regionConfigs: pulumi.Input<pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfig>[]>;
    /**
     * Unique 24-hexadecimal digit string that identifies the zone in a Global Cluster. If clusterType is GEOSHARDED, this value indicates the zone that the given shard belongs to and can be used to configure Global Cluster backup policies.
     */
    zoneId?: pulumi.Input<string>;
    /**
     * Name for the zone in a Global Cluster.
     */
    zoneName?: pulumi.Input<string>;
}

export interface AdvancedClusterReplicationSpecRegionConfig {
    /**
     * Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. The values for the `analyticsAutoScaling` attribute must be the same for all `regionConfigs` of a cluster. See below.
     */
    analyticsAutoScaling?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling>;
    /**
     * Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. Analytics nodes handle analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only and can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary). If you don't specify this parameter, no analytics nodes deploy to this region. See below.
     */
    analyticsSpecs?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs>;
    /**
     * Configuration for the collection of settings that configures auto-scaling information for the cluster. The values for the `autoScaling` attribute must be the same for all `regionConfigs` of a cluster. See below.
     */
    autoScaling?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigAutoScaling>;
    /**
     * Cloud service provider on which you provision the host for a multi-tenant cluster. Use this only when a `providerName` is `TENANT` and `instanceSize` is `M0`.
     */
    backingProviderName?: pulumi.Input<string>;
    /**
     * Hardware specifications for electable nodes in the region. All `electableSpecs` in the `regionConfigs` of a `replicationSpecs` must have the same `instanceSize`. Electable nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you do not specify this option, no electable nodes are deployed to the region. See below.
     */
    electableSpecs?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigElectableSpecs>;
    /**
     * Election priority of the region. For regions with only read-only nodes, set this value to 0.
     * * If you have multiple `regionConfigs` objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is 7.
     * * If your region has set `region_configs.#.electable_specs.0.node_count` to 1 or higher, it must have a priority of exactly one (1) less than another region in the `replication_specs.#.region_configs.#` array. The highest-priority region must have a priority of 7. The lowest possible priority is 1.
     */
    priority: pulumi.Input<number>;
    /**
     * Cloud service provider on which the servers are provisioned.
     * The possible values are:
     * - `AWS` - Amazon AWS
     * - `GCP` - Google Cloud Platform
     * - `AZURE` - Microsoft Azure
     * - `TENANT` - M0 multi-tenant cluster. Use `replication_specs.#.region_configs.#.backing_provider_name` to set the cloud service provider.
     */
    providerName: pulumi.Input<string>;
    /**
     * Hardware specifications for read-only nodes in the region. All `readOnlySpecs` in the `regionConfigs` of a `replicationSpecs` must have the same `instanceSize` as `electableSpecs`. Read-only nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you don't specify this parameter, no read-only nodes are deployed to the region. See below.
     */
    readOnlySpecs?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs>;
    /**
     * Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     */
    regionName: pulumi.Input<string>;
}

export interface AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling {
    computeEnabled?: pulumi.Input<boolean>;
    /**
     * Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` is true.
     */
    computeMaxInstanceSize?: pulumi.Input<string>;
    /**
     * Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_scale_down_enabled` is true.
     */
    computeMinInstanceSize?: pulumi.Input<string>;
    /**
     * Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_min_instance_size`.
     */
    computeScaleDownEnabled?: pulumi.Input<boolean>;
    /**
     * Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to false.
     */
    diskGbEnabled?: pulumi.Input<boolean>;
}

export interface AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
    /**
     * Target IOPS (Input/Output Operations Per Second) desired for storage attached to this hardware. Define this attribute only if you selected AWS as your cloud service provider, `instanceSize` is set to "M30" or greater (not including "Mxx_NVME" tiers), and `ebsVolumeType` is "PROVISIONED". You can't set this attribute for a multi-cloud cluster.
     */
    diskIops?: pulumi.Input<number>;
    /**
     * Storage capacity that the host's root volume possesses expressed in gigabytes. This value must be equal for all shards and node types. If disk size specified is below the minimum (10 GB), this parameter defaults to the minimum disk size value. Storage charge calculations depend on whether you choose the default value or a custom value.  The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier. **Note:** Using `diskSizeGb` with Standard IOPS could lead to errors and configuration issues. Therefore, it should be used only with the Provisioned IOPS volume type. When using Provisioned IOPS, the diskSizeGb parameter specifies the storage capacity, but the IOPS are set independently. Ensuring that `diskSizeGb` is used exclusively with Provisioned IOPS will help avoid these issues.
     */
    diskSizeGb?: pulumi.Input<number>;
    /**
     * Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
     * * `STANDARD` volume types can't exceed the default IOPS rate for the selected volume size.
     * * `PROVISIONED` volume types must fall within the allowable IOPS range for the selected volume size.
     */
    ebsVolumeType?: pulumi.Input<string>;
    /**
     * Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size. Electable nodes and read-only nodes (known as "base nodes") within a single shard must use the same instance size. Analytics nodes can scale independently from base nodes within a shard. Both base nodes and analytics nodes can scale independently from their equivalents in other shards.
     */
    instanceSize: pulumi.Input<string>;
    /**
     * Number of nodes of the given type for MongoDB Atlas to deploy to the region.
     */
    nodeCount?: pulumi.Input<number>;
}

export interface AdvancedClusterReplicationSpecRegionConfigAutoScaling {
    computeEnabled?: pulumi.Input<boolean>;
    /**
     * Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` is true.
     */
    computeMaxInstanceSize?: pulumi.Input<string>;
    /**
     * Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled` is true.
     */
    computeMinInstanceSize?: pulumi.Input<string>;
    /**
     * Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size`.
     */
    computeScaleDownEnabled?: pulumi.Input<boolean>;
    /**
     * Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to false.
     */
    diskGbEnabled?: pulumi.Input<boolean>;
}

export interface AdvancedClusterReplicationSpecRegionConfigElectableSpecs {
    /**
     * Target IOPS (Input/Output Operations Per Second) desired for storage attached to this hardware. Define this attribute only if you selected AWS as your cloud service provider, `instanceSize` is set to "M30" or greater (not including "Mxx_NVME" tiers), and `ebsVolumeType` is "PROVISIONED". You can't set this attribute for a multi-cloud cluster.
     */
    diskIops?: pulumi.Input<number>;
    /**
     * Storage capacity that the host's root volume possesses expressed in gigabytes. This value must be equal for all shards and node types. If disk size specified is below the minimum (10 GB), this parameter defaults to the minimum disk size value. Storage charge calculations depend on whether you choose the default value or a custom value.  The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier. **Note:** Using `diskSizeGb` with Standard IOPS could lead to errors and configuration issues. Therefore, it should be used only with the Provisioned IOPS volume type. When using Provisioned IOPS, the diskSizeGb parameter specifies the storage capacity, but the IOPS are set independently. Ensuring that `diskSizeGb` is used exclusively with Provisioned IOPS will help avoid these issues.
     */
    diskSizeGb?: pulumi.Input<number>;
    /**
     * Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
     * * `STANDARD` volume types can't exceed the default IOPS rate for the selected volume size.
     * * `PROVISIONED` volume types must fall within the allowable IOPS range for the selected volume size.
     */
    ebsVolumeType?: pulumi.Input<string>;
    /**
     * Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size. Electable nodes and read-only nodes (known as "base nodes") within a single shard must use the same instance size. Analytics nodes can scale independently from base nodes within a shard. Both base nodes and analytics nodes can scale independently from their equivalents in other shards.
     */
    instanceSize: pulumi.Input<string>;
    /**
     * Number of nodes of the given type for MongoDB Atlas to deploy to the region.
     */
    nodeCount?: pulumi.Input<number>;
}

export interface AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
    /**
     * Target IOPS (Input/Output Operations Per Second) desired for storage attached to this hardware. Define this attribute only if you selected AWS as your cloud service provider, `instanceSize` is set to "M30" or greater (not including "Mxx_NVME" tiers), and `ebsVolumeType` is "PROVISIONED". You can't set this attribute for a multi-cloud cluster. This parameter defaults to the cluster tier's standard IOPS value.
     */
    diskIops?: pulumi.Input<number>;
    /**
     * Storage capacity that the host's root volume possesses expressed in gigabytes. This value must be equal for all shards and node types. If disk size specified is below the minimum (10 GB), this parameter defaults to the minimum disk size value. Storage charge calculations depend on whether you choose the default value or a custom value.  The maximum value for disk storage cannot exceed 50 times the maximum RAM for the selected cluster. If you require more storage space, consider upgrading your cluster to a higher tier. **Note:** Using `diskSizeGb` with Standard IOPS could lead to errors and configuration issues. Therefore, it should be used only with the Provisioned IOPS volume type. When using Provisioned IOPS, the diskSizeGb parameter specifies the storage capacity, but the IOPS are set independently. Ensuring that `diskSizeGb` is used exclusively with Provisioned IOPS will help avoid these issues.
     */
    diskSizeGb?: pulumi.Input<number>;
    /**
     * Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
     * * `STANDARD` volume types can't exceed the default IOPS rate for the selected volume size.
     * * `PROVISIONED` volume types must fall within the allowable IOPS range for the selected volume size.
     */
    ebsVolumeType?: pulumi.Input<string>;
    /**
     * Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size. Electable nodes and read-only nodes (known as "base nodes") within a single shard must use the same instance size. Analytics nodes can scale independently from base nodes within a shard. Both base nodes and analytics nodes can scale independently from their equivalents in other shards.
     */
    instanceSize: pulumi.Input<string>;
    /**
     * Number of nodes of the given type for MongoDB Atlas to deploy to the region.
     */
    nodeCount?: pulumi.Input<number>;
}

export interface AdvancedClusterTag {
    /**
     * Constant that defines the set of the tag.
     */
    key: pulumi.Input<string>;
    /**
     * Variable that belongs to the set of the tag.
     *
     * To learn more, see [Resource Tags](https://dochub.mongodb.org/core/add-cluster-tag-atlas).
     */
    value: pulumi.Input<string>;
}

export interface AlertConfigurationMatcher {
    /**
     * Name of the field in the target object to match on.
     *
     * | Host alerts         | Replica set alerts  |  Sharded cluster alerts |
     * |:----------           |:-------------       |:------                 |
     * | `TYPE_NAME`         | `REPLICA_SET_NAME`  | `CLUSTER_NAME`          |
     * | `HOSTNAME`          | `SHARD_NAME`        | `SHARD_NAME`            |
     * | `PORT`              | `CLUSTER_NAME`      |                         |
     * | `HOSTNAME_AND_PORT` |                     |                         |
     * | `REPLICA_SET_NAME`  |                     |                         |
     *
     *
     *
     * All other types of alerts do not support matchers.
     */
    fieldName: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    /**
     * Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
     * - `PRIMARY`
     * - `SECONDARY`
     * - `STANDALONE`
     * - `CONFIG`
     * - `MONGOS`
     */
    value: pulumi.Input<string>;
}

export interface AlertConfigurationMetricThresholdConfig {
    /**
     * Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
     */
    metricName: pulumi.Input<string>;
    /**
     * This must be set to AVERAGE. Atlas computes the current metric value as an average.
     */
    mode?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    units?: pulumi.Input<string>;
}

export interface AlertConfigurationNotification {
    /**
     * Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
     */
    apiToken?: pulumi.Input<string>;
    /**
     * Slack channel name. Required for the SLACK notifications type.
     */
    channelName?: pulumi.Input<string>;
    /**
     * Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
     */
    datadogApiKey?: pulumi.Input<string>;
    /**
     * Region that indicates which API URL to use. See the `datadogRegion` field in the `notifications` request parameter of [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/api/doc/atlas-admin-api-v2/operation/operation-createalertconfiguration) for more details. The default Datadog region is US.
     */
    datadogRegion?: pulumi.Input<string>;
    /**
     * Number of minutes to wait after an alert condition is detected before sending out the first notification.
     */
    delayMin?: pulumi.Input<number>;
    /**
     * Email address to which alert notifications are sent. Required for the EMAIL notifications type.
     */
    emailAddress?: pulumi.Input<string>;
    /**
     * Flag indicating email notifications should be sent. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
     */
    emailEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the associated integration, the credentials of which to use for requests.
     */
    integrationId?: pulumi.Input<string>;
    /**
     * Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5. **NOTE** `PAGER_DUTY`, `VICTOR_OPS`, and `OPS_GENIE` notifications do not return this value. The notification interval must be configured and managed within each external service.
     */
    intervalMin?: pulumi.Input<number>;
    /**
     * Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB Cloud needs to send this notification via Microsoft Teams. Required if `typeName` is `MICROSOFT_TEAMS`. If the URL later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.
     */
    microsoftTeamsWebhookUrl?: pulumi.Input<string>;
    /**
     * Mobile number to which alert notifications are sent. Required for the SMS notifications type.
     */
    mobileNumber?: pulumi.Input<string>;
    /**
     * The notifier ID is a system-generated unique identifier assigned to each notification method. This is needed when updating third-party notifications without requiring explicit authentication credentials.
     */
    notifierId?: pulumi.Input<string>;
    /**
     * Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
     */
    opsGenieApiKey?: pulumi.Input<string>;
    /**
     * Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
     */
    opsGenieRegion?: pulumi.Input<string>;
    /**
     * Optional. One or more roles that receive the configured alert. If you include this field, Atlas sends alerts only to users assigned the roles you specify in the array. If you omit this field, Atlas sends alerts to users assigned any role. This parameter is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
     * Accepted values are:
     *
     * | Project roles                   | Organization roles  |
     * |:----------                      |:-----------         |
     * | `GROUP_CLUSTER_MANAGER`         | `ORG_OWNER`         |
     * | `GROUP_DATA_ACCESS_ADMIN`       | `ORG_MEMBER`        |
     * | `GROUP_DATA_ACCESS_READ_ONLY`   | `ORG_GROUP_CREATOR` |
     * | `GROUP_DATA_ACCESS_READ_WRITE`  | `ORG_BILLING_ADMIN` |
     * | `GROUP_OWNER`                   | `ORG_READ_ONLY`     |
     * | `GROUP_READ_ONLY`               |                     |
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
     */
    serviceKey?: pulumi.Input<string>;
    /**
     * Flag indicating if text message notifications should be sent to this user's mobile phone. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
     */
    smsEnabled?: pulumi.Input<boolean>;
    /**
     * Unique identifier of a team.
     */
    teamId?: pulumi.Input<string>;
    /**
     * Label for the team that receives this notification.
     */
    teamName?: pulumi.Input<string>;
    /**
     * Type of alert notification.
     * Accepted values are:
     * - `DATADOG`
     * - `EMAIL`
     * - `GROUP` (Project)
     * - `OPS_GENIE`
     * - `ORG`
     * - `PAGER_DUTY`
     * - `SLACK`
     * - `SMS`
     * - `TEAM`
     * - `USER`
     * - `VICTOR_OPS`
     * - `WEBHOOK`
     * - `MICROSOFT_TEAMS`
     */
    typeName: pulumi.Input<string>;
    /**
     * Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
     */
    username?: pulumi.Input<string>;
    /**
     * VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
     */
    victorOpsApiKey?: pulumi.Input<string>;
    /**
     * VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
     */
    victorOpsRoutingKey?: pulumi.Input<string>;
    /**
     * Optional authentication secret for the `WEBHOOK` notifications type.
     */
    webhookSecret?: pulumi.Input<string>;
    /**
     * Target URL  for the `WEBHOOK` notifications type.
     */
    webhookUrl?: pulumi.Input<string>;
}

export interface AlertConfigurationThresholdConfig {
    operator?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    units?: pulumi.Input<string>;
}

export interface BackupCompliancePolicyOnDemandPolicyItem {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (yearly in this case). The supported values for yearly policies are
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For yearly policies, the frequency type is defined as `yearly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`. Yearly policy must have retention of at least 1 year.
     */
    retentionValue: pulumi.Input<number>;
}

export interface BackupCompliancePolicyPolicyItemDaily {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (yearly in this case). The supported values for yearly policies are
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For yearly policies, the frequency type is defined as `yearly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`. Yearly policy must have retention of at least 1 year.
     */
    retentionValue: pulumi.Input<number>;
}

export interface BackupCompliancePolicyPolicyItemHourly {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (yearly in this case). The supported values for yearly policies are
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For yearly policies, the frequency type is defined as `yearly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`. Yearly policy must have retention of at least 1 year.
     */
    retentionValue: pulumi.Input<number>;
}

export interface BackupCompliancePolicyPolicyItemMonthly {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (yearly in this case). The supported values for yearly policies are
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For yearly policies, the frequency type is defined as `yearly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`. Yearly policy must have retention of at least 1 year.
     */
    retentionValue: pulumi.Input<number>;
}

export interface BackupCompliancePolicyPolicyItemWeekly {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (yearly in this case). The supported values for yearly policies are
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For yearly policies, the frequency type is defined as `yearly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`. Yearly policy must have retention of at least 1 year.
     */
    retentionValue: pulumi.Input<number>;
}

export interface BackupCompliancePolicyPolicyItemYearly {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (yearly in this case). The supported values for yearly policies are
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For yearly policies, the frequency type is defined as `yearly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`. Yearly policy must have retention of at least 1 year.
     */
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupScheduleCopySetting {
    /**
     * Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. "AWS" "AZURE" "GCP"
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * List that describes which types of snapshots to copy. i.e. "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "ON_DEMAND"
     */
    frequencies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under https://www.mongodb.com/docs/atlas/reference/cloud-providers/ 'regions' link
     */
    regionName?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, consult the replicationSpecs array returned from [Return One Multi-Cloud Cluster in One Project](https://www.mongodb.com/docs/api/doc/atlas-admin-api-v2/operation/operation-getcluster). **(DEPRECATED)** Use `zoneId` instead. To learn more, see the 1.18.0 upgrade guide.
     *
     * @deprecated This parameter is deprecated. Please transition to `copy_settings.#.zone_id`. To learn more, see our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     */
    replicationSpecId?: pulumi.Input<string>;
    /**
     * Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
     */
    shouldCopyOplogs?: pulumi.Input<boolean>;
    /**
     * Unique 24-hexadecimal digit string that identifies the zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find appropriate value for `zoneId`, do a GET request to Return One Cluster from One Project and consult the replicationSpecs array Return One Cluster From One Project. Alternately, use `mongodbatlas.AdvancedCluster` data source or resource and reference `replication_specs.#.zone_id`.
     */
    zoneId?: pulumi.Input<string>;
}

export interface CloudBackupScheduleExport {
    /**
     * Unique identifier of the mongodbatlas.CloudBackupSnapshotExportBucket export_bucket_id value.
     */
    exportBucketId?: pulumi.Input<string>;
    /**
     * Frequency associated with the export snapshot item: `weekly`, `monthly`, `yearly`, `daily` (requires reaching out to Customer Support)
     */
    frequencyType?: pulumi.Input<string>;
}

export interface CloudBackupSchedulePolicyItemDaily {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (daily in this case). The only supported value for daily policies is `1` day.
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For daily policies, the frequency type is defined as `daily`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`.  Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the hourly policy item specifies a retention of two days, the daily retention policy must specify two days or greater.
     */
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupSchedulePolicyItemHourly {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (hourly in this case). The supported values for hourly policies are `1`, `2`, `4`, `6`, `8` or `12` hours. Note that `12` hours is the only accepted value for NVMe clusters.
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For hourly policies, the frequency type is defined as `hourly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`.
     */
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupSchedulePolicyItemMonthly {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
     */
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupSchedulePolicyItemWeekly {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (weekly in this case). The supported values for weekly policies are `1` through `7`, where `1` represents Monday and `7` represents Sunday.
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For weekly policies, the frequency type is defined as `weekly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`. Weekly policy must have retention of at least 7 days or 1 week. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the daily policy item specifies a retention of two weeks, the weekly retention policy must specify two weeks or greater.
     */
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupSchedulePolicyItemYearly {
    /**
     * Desired frequency of the new backup policy item specified by `frequencyType` (yearly in this case). The supported values for yearly policies are
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * Frequency associated with the backup policy item. For yearly policies, the frequency type is defined as `yearly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
     */
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifier of the backup policy item.
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the backup policy item: `days`, `weeks`, `months`, or `years`.
     */
    retentionUnit: pulumi.Input<string>;
    /**
     * Value to associate with `retentionUnit`. Yearly policy must have retention of at least 1 year.
     */
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupSnapshotExportJobComponent {
    /**
     * _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
     */
    exportId?: pulumi.Input<string>;
    /**
     * _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
     */
    replicaSetName?: pulumi.Input<string>;
}

export interface CloudBackupSnapshotExportJobCustomData {
    /**
     * Required if you want to include custom data using `customData` in the metadata file uploaded to the bucket. Key to include in the metadata file that Atlas uploads to the bucket when the export job finishes.
     */
    key: pulumi.Input<string>;
    /**
     * Required if you specify `key`.
     */
    value: pulumi.Input<string>;
}

export interface CloudBackupSnapshotMember {
    /**
     * Cloud provider that stores this snapshot.
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * Unique identifier for the sharded cluster snapshot.
     */
    id?: pulumi.Input<string>;
    /**
     * Label given to a shard or config server from which Atlas took this snapshot.
     */
    replicaSetName?: pulumi.Input<string>;
}

export interface CloudBackupSnapshotRestoreJobDeliveryTypeConfig {
    automated?: pulumi.Input<boolean>;
    download?: pulumi.Input<boolean>;
    oplogInc?: pulumi.Input<number>;
    oplogTs?: pulumi.Input<number>;
    pointInTime?: pulumi.Input<boolean>;
    pointInTimeUtcSeconds?: pulumi.Input<number>;
    /**
     * Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
     */
    targetClusterName?: pulumi.Input<string>;
    /**
     * Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
     */
    targetProjectId?: pulumi.Input<string>;
}

export interface CloudProviderAccessAuthorizationAws {
    iamAssumedRoleArn: pulumi.Input<string>;
}

export interface CloudProviderAccessAuthorizationAzure {
    atlasAzureAppId: pulumi.Input<string>;
    servicePrincipalId: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface CloudProviderAccessAuthorizationFeatureUsage {
    featureId?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    featureType?: pulumi.Input<string>;
}

export interface CloudProviderAccessSetupAwsConfig {
    atlasAssumedRoleExternalId?: pulumi.Input<string>;
    atlasAwsAccountArn?: pulumi.Input<string>;
}

export interface CloudProviderAccessSetupAzureConfig {
    atlasAzureAppId: pulumi.Input<string>;
    servicePrincipalId: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface ClusterAdvancedConfiguration {
    /**
     * The minimum pre- and post-image retention time in seconds. This option corresponds to the `changeStreamOptions.preAndPostImages.expireAfterSeconds` cluster parameter. Defaults to `-1`(off). This setting controls the retention policy of change stream pre- and post-images. Pre- and post-images are the versions of a document before and after document modification, respectively.`expireAfterSeconds` controls how long MongoDB retains pre- and post-images. When set to -1 (off), MongoDB uses the default retention policy: pre- and post-images are retained until the corresponding change stream events are removed from the oplog. To set the minimum pre- and post-image retention time, specify an integer value greater than zero. Setting this too low could increase the risk of interrupting Realm sync or triggers processing. This parameter is only supported for MongoDB version 6.0 and above.
     */
    changeStreamOptionsPreAndPostImagesExpireAfterSeconds?: pulumi.Input<number>;
    /**
     * The custom OpenSSL cipher suite list for TLS 1.2. This field is only valid when `tlsCipherConfigMode` is set to `CUSTOM`.
     */
    customOpensslCipherConfigTls12s?: pulumi.Input<pulumi.Input<string>[]>;
    defaultMaxTimeMs?: pulumi.Input<number>;
    /**
     * [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. **(DEPRECATED)** MongoDB 6.0 and later clusters default to `local`. To use a custom read concern level, please refer to your driver documentation.
     *
     * @deprecated This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     */
    defaultReadConcern?: pulumi.Input<string>;
    /**
     * [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 6.0 clusters default to [majority](https://docs.mongodb.com/manual/reference/write-concern/).
     */
    defaultWriteConcern?: pulumi.Input<string>;
    /**
     * **(DEPRECATED)** (Optional) When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
     *
     * @deprecated This parameter is deprecated. Please refer to our examples, documentation, and 1.18.0 migration guide for more details at https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/guides/1.18.0-upgrade-guide
     */
    failIndexKeyTooLong?: pulumi.Input<boolean>;
    /**
     * When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
     */
    javascriptEnabled?: pulumi.Input<boolean>;
    /**
     * Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections. Valid values are:
     * - TLS1_0
     * - TLS1_1
     * - TLS1_2
     */
    minimumEnabledTlsProtocol?: pulumi.Input<string>;
    /**
     * When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
     */
    noTableScan?: pulumi.Input<boolean>;
    /**
     * Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
     * * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see  [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
     */
    oplogMinRetentionHours?: pulumi.Input<number>;
    /**
     * The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
     */
    oplogSizeMb?: pulumi.Input<number>;
    /**
     * Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     */
    sampleRefreshIntervalBiConnector?: pulumi.Input<number>;
    /**
     * Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
     */
    sampleSizeBiConnector?: pulumi.Input<number>;
    /**
     * The TLS cipher suite configuration mode. Valid values include `CUSTOM` or `DEFAULT`. The `DEFAULT` mode uses the default cipher suites. The `CUSTOM` mode allows you to specify custom cipher suites for both TLS 1.2 and TLS 1.3. To unset, this should be set back to `DEFAULT`.
     */
    tlsCipherConfigMode?: pulumi.Input<string>;
    /**
     * Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
     */
    transactionLifetimeLimitSeconds?: pulumi.Input<number>;
}

export interface ClusterBiConnectorConfig {
    /**
     * Specifies whether or not BI Connector for Atlas is enabled on the cluster.
     * *
     * - Set to `true` to enable BI Connector for Atlas.
     * - Set to `false` to disable BI Connector for Atlas.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
     *
     * - Set to "primary" to have BI Connector for Atlas read from the primary.
     *
     * - Set to "secondary" to have BI Connector for Atlas read from a secondary member. Default if there are no analytics nodes in the cluster.
     *
     * - Set to "analytics" to have BI Connector for Atlas read from an analytics node. Default if the cluster contains analytics nodes.
     */
    readPreference?: pulumi.Input<string>;
}

export interface ClusterConnectionString {
    /**
     * [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
     */
    private?: pulumi.Input<string>;
    /**
     * Private endpoint connection strings. Each object describes the connection strings you can use to connect to this cluster through a private endpoint. Atlas returns this parameter only if you deployed a private endpoint to all regions to which you deployed this cluster's nodes.
     * - `connection_strings.private_endpoint.#.connection_string` - Private-endpoint-aware `mongodb://`connection string for this private endpoint.
     * - `connection_strings.private_endpoint.#.srv_connection_string` - Private-endpoint-aware `mongodb+srv://` connection string for this private endpoint. The `mongodb+srv` protocol tells the driver to look up the seed list of hosts in DNS . Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don't need to: Append the seed list or Change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn't, use `connection_strings.private_endpoint[#].connection_string`
     * - `connection_strings.private_endpoint.#.srv_shard_optimized_connection_string` - Private endpoint-aware connection string optimized for sharded clusters that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint. If the connection string uses this Uniform Resource Identifier (URI) format, you don't need to change the Uniform Resource Identifier (URI) if the nodes change. Use this Uniform Resource Identifier (URI) format if your application and Atlas cluster support it. If it doesn't, use and consult the documentation for connectionStrings.privateEndpoint[#].srvConnectionString.
     * - `connection_strings.private_endpoint.#.type` - Type of MongoDB process that you connect to with the connection strings. Atlas returns `MONGOD` for replica sets, or `MONGOS` for sharded clusters.
     * - `connection_strings.private_endpoint.#.endpoints` - Private endpoint through which you connect to Atlas when you use `connection_strings.private_endpoint[#].connection_string` or `connection_strings.private_endpoint[#].srv_connection_string`
     * - `connection_strings.private_endpoint.#.endpoints.#.endpoint_id` - Unique identifier of the private endpoint.
     * - `connection_strings.private_endpoint.#.endpoints.#.provider_name` - Cloud provider to which you deployed the private endpoint. Atlas returns `AWS` or `AZURE`.
     * - `connection_strings.private_endpoint.#.endpoints.#.region` - Region to which you deployed the private endpoint.
     */
    privateEndpoints?: pulumi.Input<pulumi.Input<inputs.ClusterConnectionStringPrivateEndpoint>[]>;
    /**
     * [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
     */
    privateSrv?: pulumi.Input<string>;
    /**
     * Public mongodb:// connection string for this cluster.
     */
    standard?: pulumi.Input<string>;
    /**
     * Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t  , use connectionStrings.standard.
     */
    standardSrv?: pulumi.Input<string>;
}

export interface ClusterConnectionStringPrivateEndpoint {
    connectionString?: pulumi.Input<string>;
    endpoints?: pulumi.Input<pulumi.Input<inputs.ClusterConnectionStringPrivateEndpointEndpoint>[]>;
    srvConnectionString?: pulumi.Input<string>;
    srvShardOptimizedConnectionString?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface ClusterConnectionStringPrivateEndpointEndpoint {
    endpointId?: pulumi.Input<string>;
    /**
     * Cloud service provider on which the servers are provisioned.
     *
     * The possible values are:
     *
     * - `AWS` - Amazon AWS
     * - `GCP` - Google Cloud Platform
     * - `AZURE` - Microsoft Azure
     * - `TENANT` - A multi-tenant deployment on one of the supported cloud service providers. Only valid when providerSettings.instanceSizeName is M0.
     */
    providerName?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}

export interface ClusterLabel {
    /**
     * The key that you want to write.
     */
    key?: pulumi.Input<string>;
    /**
     * The value that you want to write.
     *
     * > **NOTE:** MongoDB Atlas doesn't display your labels.
     */
    value?: pulumi.Input<string>;
}

export interface ClusterOutageSimulationOutageFilter {
    /**
     * The cloud provider of the region that undergoes the outage simulation. Following values are supported:
     * * `AWS`
     * * `GCP`
     * * `AZURE`
     */
    cloudProvider: pulumi.Input<string>;
    /**
     * The Atlas name of the region to undergo an outage simulation.
     */
    regionName: pulumi.Input<string>;
    /**
     * The type of cluster outage simulation. Following values are supported:
     * * `REGION` - Simulates a cluster outage for a region
     */
    type?: pulumi.Input<string>;
}

export interface ClusterPinnedFcv {
    /**
     * Expiration date of the fixed FCV. This value is in the ISO 8601 timestamp format (e.g. "2024-12-04T16:25:00Z"). Note that this field cannot exceed 4 weeks from the pinned date.
     */
    expirationDate: pulumi.Input<string>;
    /**
     * Feature compatibility version of the cluster.
     */
    version?: pulumi.Input<string>;
}

export interface ClusterReplicationSpec {
    /**
     * Unique identifer of the replication document for a zone in a Global Cluster. This value corresponds to the legacy sharding schema (no independent shard scaling) and is different from the Shard ID you may see in the Atlas UI.
     */
    id?: pulumi.Input<string>;
    /**
     * Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
     */
    numShards: pulumi.Input<number>;
    /**
     * Physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
     */
    regionsConfigs?: pulumi.Input<pulumi.Input<inputs.ClusterReplicationSpecRegionsConfig>[]>;
    /**
     * Name for the zone in a Global Cluster.
     *
     *
     * **Region Config**
     */
    zoneName?: pulumi.Input<string>;
}

export interface ClusterReplicationSpecRegionsConfig {
    /**
     * The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
     */
    analyticsNodes?: pulumi.Input<number>;
    /**
     * Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
     * * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
     * * Specify 0 if you do not want any electable nodes in the region.
     * * You cannot create electable nodes in a region if `priority` is 0.
     */
    electableNodes?: pulumi.Input<number>;
    /**
     * Election priority of the region. For regions with only read-only nodes, set this value to 0.
     * * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
     * * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
     * * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
     */
    priority?: pulumi.Input<number>;
    /**
     * Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
     */
    readOnlyNodes?: pulumi.Input<number>;
    /**
     * Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     */
    regionName: pulumi.Input<string>;
}

export interface ClusterSnapshotBackupPolicy {
    /**
     * The cluster ID.
     */
    clusterId?: pulumi.Input<string>;
    clusterName?: pulumi.Input<string>;
    nextSnapshot?: pulumi.Input<string>;
    policies?: pulumi.Input<pulumi.Input<inputs.ClusterSnapshotBackupPolicyPolicy>[]>;
    referenceHourOfDay?: pulumi.Input<number>;
    referenceMinuteOfHour?: pulumi.Input<number>;
    restoreWindowDays?: pulumi.Input<number>;
    updateSnapshots?: pulumi.Input<boolean>;
}

export interface ClusterSnapshotBackupPolicyPolicy {
    /**
     * Unique identifer of the replication document for a zone in a Global Cluster. This value corresponds to the legacy sharding schema (no independent shard scaling) and is different from the Shard ID you may see in the Atlas UI.
     */
    id?: pulumi.Input<string>;
    policyItems?: pulumi.Input<pulumi.Input<inputs.ClusterSnapshotBackupPolicyPolicyPolicyItem>[]>;
}

export interface ClusterSnapshotBackupPolicyPolicyPolicyItem {
    frequencyInterval?: pulumi.Input<number>;
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique identifer of the replication document for a zone in a Global Cluster. This value corresponds to the legacy sharding schema (no independent shard scaling) and is different from the Shard ID you may see in the Atlas UI.
     */
    id?: pulumi.Input<string>;
    retentionUnit?: pulumi.Input<string>;
    retentionValue?: pulumi.Input<number>;
}

export interface ClusterTag {
    /**
     * Constant that defines the set of the tag.
     */
    key: pulumi.Input<string>;
    /**
     * Variable that belongs to the set of the tag.
     *
     * To learn more, see [Resource Tags](https://dochub.mongodb.org/core/add-cluster-tag-atlas).
     */
    value: pulumi.Input<string>;
}

export interface CustomDbRoleAction {
    /**
     * Name of the privilege action. For a complete list of actions available in the Atlas API, see [Custom Role Actions](https://docs.atlas.mongodb.com/reference/api/custom-role-actions)
     * > **Note**: The privilege actions available to the Custom Roles API resource represent a subset of the privilege actions available in the Atlas Custom Roles UI.
     */
    action: pulumi.Input<string>;
    /**
     * Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
     *
     * * `resources.#.collection_name` - (Optional) Collection on which the action is granted. If this value is an empty string, the action is granted on all collections within the database specified in the actions.resources.db field.
     *
     * > **NOTE** This field is mutually exclusive with the `actions.resources.cluster` field.
     *
     * * `resources.#.database_name` Database on which the action is granted. Use the empty string ("") to allow an action on all databases.
     *
     * > **NOTE** This field is mutually exclusive with the `actions.resources.cluster` field.
     *
     * * `resources.#.cluster`	(Optional) Set to true to indicate that the action is granted on the cluster resource.
     *
     * > **NOTE** This field is mutually exclusive with the `actions.resources.collection` and `actions.resources.db fields`.
     */
    resources: pulumi.Input<pulumi.Input<inputs.CustomDbRoleActionResource>[]>;
}

export interface CustomDbRoleActionResource {
    cluster?: pulumi.Input<boolean>;
    collectionName?: pulumi.Input<string>;
    /**
     * Database on which the inherited role is granted.
     *
     * > **NOTE** This value should be admin for all roles except read and readWrite.
     */
    databaseName?: pulumi.Input<string>;
}

export interface CustomDbRoleInheritedRole {
    /**
     * Database on which the inherited role is granted.
     *
     * > **NOTE** This value should be admin for all roles except read and readWrite.
     */
    databaseName: pulumi.Input<string>;
    /**
     * Name of the inherited role. This can either be another custom role or a built-in role.
     */
    roleName: pulumi.Input<string>;
}

export interface DataLakePipelineIngestionSchedule {
    frequencyInterval?: pulumi.Input<number>;
    frequencyType?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
     */
    id?: pulumi.Input<string>;
    retentionUnit?: pulumi.Input<string>;
    retentionValue?: pulumi.Input<number>;
}

export interface DataLakePipelineSink {
    /**
     * Ordered fields used to physically organize data in the destination.
     * * `partition_fields.#.field_name` - Human-readable label that identifies the field name used to partition data.
     * * `partition_fields.#.order` - Sequence in which MongoDB Atlas slices the collection data to create partitions. The resource expresses this sequence starting with zero.
     */
    partitionFields?: pulumi.Input<pulumi.Input<inputs.DataLakePipelineSinkPartitionField>[]>;
    /**
     * Target cloud provider for this Data Lake Pipeline.
     */
    provider?: pulumi.Input<string>;
    /**
     * Target cloud provider region for this Data Lake Pipeline. [Supported cloud provider regions](https://www.mongodb.com/docs/datalake/limitations).
     */
    region?: pulumi.Input<string>;
    /**
     * Type of ingestion source of this Data Lake Pipeline.
     */
    type?: pulumi.Input<string>;
}

export interface DataLakePipelineSinkPartitionField {
    fieldName: pulumi.Input<string>;
    order: pulumi.Input<number>;
}

export interface DataLakePipelineSnapshot {
    copyRegion?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    expiresAt?: pulumi.Input<string>;
    frequencyYype?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
     */
    id?: pulumi.Input<string>;
    masterKey?: pulumi.Input<string>;
    mongodVersion?: pulumi.Input<string>;
    policies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Target cloud provider for this Data Lake Pipeline.
     */
    provider?: pulumi.Input<string>;
    replicaSetName?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    snapshotType?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    /**
     * Type of ingestion source of this Data Lake Pipeline.
     */
    type?: pulumi.Input<string>;
}

export interface DataLakePipelineSource {
    /**
     * Human-readable name that identifies the cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Human-readable name that identifies the collection.
     */
    collectionName?: pulumi.Input<string>;
    /**
     * Human-readable name that identifies the database.
     */
    databaseName?: pulumi.Input<string>;
    policyItemId?: pulumi.Input<string>;
    /**
     * The unique ID for the project to create a data lake pipeline.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Type of ingestion source of this Data Lake Pipeline.
     */
    type?: pulumi.Input<string>;
}

export interface DataLakePipelineTransformation {
    field?: pulumi.Input<string>;
    /**
     * Type of ingestion source of this Data Lake Pipeline.
     */
    type?: pulumi.Input<string>;
}

export interface DatabaseUserLabel {
    /**
     * The key that you want to write.
     */
    key?: pulumi.Input<string>;
    /**
     * The value that you want to write.
     */
    value?: pulumi.Input<string>;
}

export interface DatabaseUserRole {
    /**
     * Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
     */
    collectionName?: pulumi.Input<string>;
    /**
     * Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases. This field should be set to `admin` for a custom MongoDB role.
     */
    databaseName: pulumi.Input<string>;
    /**
     * Name of the role to grant. See [Create a Database User](https://docs.atlas.mongodb.com/reference/api/database-users-create-a-user/) `roles.roleName` for valid values and restrictions.
     */
    roleName: pulumi.Input<string>;
}

export interface DatabaseUserScope {
    /**
     * Name of the cluster or Atlas Data Lake that the user has access to.
     */
    name?: pulumi.Input<string>;
    /**
     * Type of resource that the user has access to. See [Database User API](https://www.mongodb.com/docs/api/doc/atlas-admin-api-v2/operation/operation-createdatabaseuser) for the list of valid values.
     */
    type?: pulumi.Input<string>;
}

export interface EncryptionAtRestAwsKmsConfig {
    /**
     * Unique alphanumeric string that identifies an Identity and Access Management (IAM) access key with permissions required to access your Amazon Web Services (AWS) Customer Master Key (CMK).
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * Unique alphanumeric string that identifies the Amazon Web Services (AWS) Customer Master Key (CMK) you used to encrypt and decrypt the MongoDB master keys.
     */
    customerMasterKeyId?: pulumi.Input<string>;
    /**
     * Flag that indicates whether someone enabled encryption at rest for the specified project through Amazon Web Services (AWS) Key Management Service (KMS). To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Physical location where MongoDB Atlas deploys your AWS-hosted MongoDB cluster nodes. The region you choose can affect network latency for clients accessing your databases. When MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection exists for that provider and region. If not, MongoDB Atlas creates them as part of the deployment. MongoDB Atlas assigns the VPC a CIDR block. To limit a new VPC peering connection to one CIDR block and region, create the connection first. Deploy the cluster after the connection starts.
     */
    region?: pulumi.Input<string>;
    /**
     * Enable connection to your Amazon Web Services (AWS) Key Management Service (KMS) over private networking.
     */
    requirePrivateNetworking?: pulumi.Input<boolean>;
    /**
     * Unique 24-hexadecimal digit string that identifies an Amazon Web Services (AWS) Identity and Access Management (IAM) role. This IAM role has the permissions required to manage your AWS customer master key.
     */
    roleId?: pulumi.Input<string>;
    /**
     * Human-readable label of the Identity and Access Management (IAM) secret access key with permissions required to access your Amazon Web Services (AWS) customer master key.
     */
    secretAccessKey?: pulumi.Input<string>;
    /**
     * Flag that indicates whether the Amazon Web Services (AWS) Key Management Service (KMS) encryption key can encrypt and decrypt data.
     */
    valid?: pulumi.Input<boolean>;
}

export interface EncryptionAtRestAzureKeyVaultConfig {
    /**
     * Azure environment in which your account credentials reside.
     */
    azureEnvironment?: pulumi.Input<string>;
    /**
     * Unique 36-hexadecimal character string that identifies an Azure application associated with your Azure Active Directory tenant.
     */
    clientId?: pulumi.Input<string>;
    /**
     * Flag that indicates whether someone enabled encryption at rest for the specified  project. To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Web address with a unique key that identifies for your Azure Key Vault.
     */
    keyIdentifier?: pulumi.Input<string>;
    /**
     * Unique string that identifies the Azure Key Vault that contains your key.
     */
    keyVaultName?: pulumi.Input<string>;
    /**
     * Enable connection to your Azure Key Vault over private networking.
     */
    requirePrivateNetworking?: pulumi.Input<boolean>;
    /**
     * Name of the Azure resource group that contains your Azure Key Vault.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Private data that you need secured and that belongs to the specified Azure Key Vault (AKV) tenant (**azureKeyVault.tenantID**). This data can include any type of sensitive data such as passwords, database connection strings, API keys, and the like. AKV stores this information as encrypted binary data.
     */
    secret?: pulumi.Input<string>;
    /**
     * Unique 36-hexadecimal character string that identifies your Azure subscription.
     */
    subscriptionId?: pulumi.Input<string>;
    /**
     * Unique 36-hexadecimal character string that identifies the Azure Active Directory tenant within your Azure subscription.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Flag that indicates whether the Azure encryption key can encrypt and decrypt data.
     */
    valid?: pulumi.Input<boolean>;
}

export interface EncryptionAtRestGoogleCloudKmsConfig {
    /**
     * Flag that indicates whether someone enabled encryption at rest for the specified  project. To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Resource path that displays the key version resource ID for your Google Cloud KMS.
     */
    keyVersionResourceId?: pulumi.Input<string>;
    /**
     * JavaScript Object Notation (JSON) object that contains the Google Cloud Key Management Service (KMS). Format the JSON as a string and not as an object.
     */
    serviceAccountKey?: pulumi.Input<string>;
    /**
     * Flag that indicates whether the Google Cloud Key Management Service (KMS) encryption key can encrypt and decrypt data.
     */
    valid?: pulumi.Input<boolean>;
}

export interface EventTriggerEventProcessors {
    awsEventbridge?: pulumi.Input<inputs.EventTriggerEventProcessorsAwsEventbridge>;
}

export interface EventTriggerEventProcessorsAwsEventbridge {
    configAccountId?: pulumi.Input<string>;
    configRegion?: pulumi.Input<string>;
}

export interface FederatedDatabaseInstanceCloudProviderConfig {
    /**
     * Name of the cloud service that hosts the data lake's data stores.
     */
    aws?: pulumi.Input<inputs.FederatedDatabaseInstanceCloudProviderConfigAws>;
    /**
     * Microsoft Azure cloud service configuration.
     */
    azure?: pulumi.Input<inputs.FederatedDatabaseInstanceCloudProviderConfigAzure>;
}

export interface FederatedDatabaseInstanceCloudProviderConfigAws {
    /**
     * Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
     */
    externalId?: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
     * * `s3:GetObject`
     * * `s3:ListBucket`
     * * `s3:GetObjectVersion`
     */
    iamAssumedRoleArn?: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
     */
    iamUserArn?: pulumi.Input<string>;
    roleId: pulumi.Input<string>;
    testS3Bucket: pulumi.Input<string>;
}

export interface FederatedDatabaseInstanceCloudProviderConfigAzure {
    atlasAppId?: pulumi.Input<string>;
    roleId: pulumi.Input<string>;
    /**
     * Unique identifier of the Azure service principal that the Federated Database instance uses to access Azure Blob Storage.
     */
    servicePrincipalId?: pulumi.Input<string>;
    /**
     * Unique identifier of the Azure Active Directory tenant where the service principal resides.
     */
    tenantId?: pulumi.Input<string>;
}

export interface FederatedDatabaseInstanceDataProcessRegion {
    cloudProvider: pulumi.Input<string>;
    region: pulumi.Input<string>;
}

export interface FederatedDatabaseInstanceStorageDatabase {
    collections?: pulumi.Input<pulumi.Input<inputs.FederatedDatabaseInstanceStorageDatabaseCollection>[]>;
    maxWildcardCollections?: pulumi.Input<number>;
    /**
     * Name of the Atlas Federated Database Instance.
     */
    name?: pulumi.Input<string>;
    views?: pulumi.Input<pulumi.Input<inputs.FederatedDatabaseInstanceStorageDatabaseView>[]>;
}

export interface FederatedDatabaseInstanceStorageDatabaseCollection {
    dataSources?: pulumi.Input<pulumi.Input<inputs.FederatedDatabaseInstanceStorageDatabaseCollectionDataSource>[]>;
    /**
     * Name of the Atlas Federated Database Instance.
     */
    name?: pulumi.Input<string>;
}

export interface FederatedDatabaseInstanceStorageDatabaseCollectionDataSource {
    allowInsecure?: pulumi.Input<boolean>;
    collection?: pulumi.Input<string>;
    collectionRegex?: pulumi.Input<string>;
    database?: pulumi.Input<string>;
    databaseRegex?: pulumi.Input<string>;
    datasetName?: pulumi.Input<string>;
    defaultFormat?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    provenanceFieldName?: pulumi.Input<string>;
    storeName?: pulumi.Input<string>;
    urls?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FederatedDatabaseInstanceStorageDatabaseView {
    /**
     * Name of the Atlas Federated Database Instance.
     */
    name?: pulumi.Input<string>;
    pipeline?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
}

export interface FederatedDatabaseInstanceStorageStore {
    additionalStorageClasses?: pulumi.Input<pulumi.Input<string>[]>;
    allowInsecure?: pulumi.Input<boolean>;
    bucket?: pulumi.Input<string>;
    clusterName?: pulumi.Input<string>;
    defaultFormat?: pulumi.Input<string>;
    delimiter?: pulumi.Input<string>;
    includeTags?: pulumi.Input<boolean>;
    /**
     * Name of the Atlas Federated Database Instance.
     */
    name?: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
    /**
     * The unique ID for the project to create a Federated Database Instance.
     */
    projectId?: pulumi.Input<string>;
    provider?: pulumi.Input<string>;
    public?: pulumi.Input<string>;
    readPreference?: pulumi.Input<inputs.FederatedDatabaseInstanceStorageStoreReadPreference>;
    region?: pulumi.Input<string>;
    urls?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FederatedDatabaseInstanceStorageStoreReadPreference {
    maxStalenessSeconds?: pulumi.Input<number>;
    mode?: pulumi.Input<string>;
    tagSets?: pulumi.Input<pulumi.Input<inputs.FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet>[]>;
}

export interface FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet {
    tags: pulumi.Input<pulumi.Input<inputs.FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag>[]>;
}

export interface FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag {
    /**
     * Name of the Atlas Federated Database Instance.
     */
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface FederatedSettingsOrgConfigUserConflict {
    /**
     * Email address of the the user that conflicts with selected domains.
     */
    emailAddress?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
     */
    federationSettingsId?: pulumi.Input<string>;
    /**
     * First name of the the user that conflicts with selected domains.
     */
    firstName?: pulumi.Input<string>;
    /**
     * Last name of the the user that conflicts with selected domains.
     */
    lastName?: pulumi.Input<string>;
    /**
     * Name of the Atlas user that conflicts with selected domains.
     */
    userId?: pulumi.Input<string>;
}

export interface FederatedSettingsOrgRoleMappingRoleAssignment {
    /**
     * Unique identifier of the project to which you want the role mapping to apply.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Specifies the Roles that are attached to the Role Mapping. Available role IDs can be found on [the User Roles
     * Reference](https://www.mongodb.com/docs/atlas/reference/user-roles/).
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FlexClusterBackupSettings {
    /**
     * Flag that indicates whether backups are performed for this flex cluster. Backup uses [flex cluster backups](https://www.mongodb.com/docs/atlas/backup/cloud-backup/flex-cluster-backup/).
     */
    enabled?: pulumi.Input<boolean>;
}

export interface FlexClusterConnectionStrings {
    /**
     * Public connection string that you can use to connect to this cluster. This connection string uses the mongodb:// protocol.
     */
    standard?: pulumi.Input<string>;
    /**
     * Public connection string that you can use to connect to this flex cluster. This connection string uses the `mongodb+srv://` protocol.
     */
    standardSrv?: pulumi.Input<string>;
}

export interface FlexClusterProviderSettings {
    /**
     * Cloud service provider on which MongoDB Cloud provisioned the flex cluster.
     */
    backingProviderName: pulumi.Input<string>;
    /**
     * Storage capacity available to the flex cluster expressed in gigabytes.
     */
    diskSizeGb?: pulumi.Input<number>;
    /**
     * Human-readable label that identifies the cloud service provider.
     */
    providerName?: pulumi.Input<string>;
    /**
     * Human-readable label that identifies the geographic location of your MongoDB flex cluster. The region you choose can affect network latency for clients accessing your databases. For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
     */
    regionName: pulumi.Input<string>;
}

export interface GetAlertConfigurationOutput {
    label?: string;
    type: string;
    /**
     * Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
     * - `PRIMARY`
     * - `SECONDARY`
     * - `STANDALONE`
     * - `CONFIG`
     * - `MONGOS`
     */
    value?: string;
}

export interface GetAlertConfigurationOutputArgs {
    label?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    /**
     * Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
     * - `PRIMARY`
     * - `SECONDARY`
     * - `STANDALONE`
     * - `CONFIG`
     * - `MONGOS`
     */
    value?: pulumi.Input<string>;
}

export interface GetAlertConfigurationsListOption {
    includeCount?: boolean;
    itemsPerPage?: number;
    pageNum?: number;
}

export interface GetAlertConfigurationsListOptionArgs {
    includeCount?: pulumi.Input<boolean>;
    itemsPerPage?: pulumi.Input<number>;
    pageNum?: pulumi.Input<number>;
}

export interface GetCloudProviderAccessSetupAzureConfig {
    /**
     * Azure Active Directory Application ID of Atlas.
     */
    atlasAzureAppId?: string;
    /**
     * UUID string that identifies the Azure Service Principal.
     */
    servicePrincipalId?: string;
    /**
     * UUID String that identifies the Azure Active Directory Tenant ID.
     */
    tenantId?: string;
}

export interface GetCloudProviderAccessSetupAzureConfigArgs {
    /**
     * Azure Active Directory Application ID of Atlas.
     */
    atlasAzureAppId?: pulumi.Input<string>;
    /**
     * UUID string that identifies the Azure Service Principal.
     */
    servicePrincipalId?: pulumi.Input<string>;
    /**
     * UUID String that identifies the Azure Active Directory Tenant ID.
     */
    tenantId?: pulumi.Input<string>;
}

export interface GetCustomDbRoleInheritedRole {
    /**
     * (Required) Database on which the inherited role is granted.
     */
    databaseName?: string;
    /**
     * Name of the custom role.
     */
    roleName?: string;
}

export interface GetCustomDbRoleInheritedRoleArgs {
    /**
     * (Required) Database on which the inherited role is granted.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * Name of the custom role.
     */
    roleName?: pulumi.Input<string>;
}

export interface GetFederatedDatabaseInstanceCloudProviderConfig {
    aws?: inputs.GetFederatedDatabaseInstanceCloudProviderConfigAws;
    azures?: inputs.GetFederatedDatabaseInstanceCloudProviderConfigAzure[];
}

export interface GetFederatedDatabaseInstanceCloudProviderConfigArgs {
    aws?: pulumi.Input<inputs.GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs>;
    azures?: pulumi.Input<pulumi.Input<inputs.GetFederatedDatabaseInstanceCloudProviderConfigAzureArgs>[]>;
}

export interface GetFederatedDatabaseInstanceCloudProviderConfigAws {
    /**
     * Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
     */
    externalId?: string;
    /**
     * Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
     * * `s3:GetObject`
     * * `s3:ListBucket`
     * * `s3:GetObjectVersion`
     */
    iamAssumedRoleArn?: string;
    /**
     * Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
     */
    iamUserArn?: string;
    /**
     * Unique identifier of the role that the Federated Database Instance can use to access the data stores.
     */
    roleId?: string;
    testS3Bucket?: string;
}

export interface GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs {
    /**
     * Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
     */
    externalId?: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
     * * `s3:GetObject`
     * * `s3:ListBucket`
     * * `s3:GetObjectVersion`
     */
    iamAssumedRoleArn?: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
     */
    iamUserArn?: pulumi.Input<string>;
    /**
     * Unique identifier of the role that the Federated Database Instance can use to access the data stores.
     */
    roleId?: pulumi.Input<string>;
    testS3Bucket?: pulumi.Input<string>;
}

export interface GetFederatedDatabaseInstanceCloudProviderConfigAzure {
    atlasAppId?: string;
    /**
     * Unique identifier of the role that the Federated Database Instance can use to access the data stores.
     */
    roleId?: string;
    /**
     * Unique identifier of the Azure service principal that the Federated Database instance uses to access Azure Blob Storage.
     */
    servicePrincipalId?: string;
    /**
     * Unique identifier of the Azure Active Directory tenant where the service principal resides.
     */
    tenantId?: string;
}

export interface GetFederatedDatabaseInstanceCloudProviderConfigAzureArgs {
    atlasAppId?: pulumi.Input<string>;
    /**
     * Unique identifier of the role that the Federated Database Instance can use to access the data stores.
     */
    roleId?: pulumi.Input<string>;
    /**
     * Unique identifier of the Azure service principal that the Federated Database instance uses to access Azure Blob Storage.
     */
    servicePrincipalId?: pulumi.Input<string>;
    /**
     * Unique identifier of the Azure Active Directory tenant where the service principal resides.
     */
    tenantId?: pulumi.Input<string>;
}

export interface GetGlobalClusterConfigManagedNamespace {
    /**
     * (Required) The name of the collection associated with the managed namespace.
     */
    collection: string;
    /**
     * (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
     */
    customShardKey: string;
    /**
     * (Required) The name of the database containing the collection.
     */
    db: string;
    /**
     * Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
     */
    isCustomShardKeyHashed?: boolean;
    /**
     * Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
     */
    isShardKeyUnique?: boolean;
}

export interface GetGlobalClusterConfigManagedNamespaceArgs {
    /**
     * (Required) The name of the collection associated with the managed namespace.
     */
    collection: pulumi.Input<string>;
    /**
     * (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
     */
    customShardKey: pulumi.Input<string>;
    /**
     * (Required) The name of the database containing the collection.
     */
    db: pulumi.Input<string>;
    /**
     * Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
     */
    isCustomShardKeyHashed?: pulumi.Input<boolean>;
    /**
     * Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
     */
    isShardKeyUnique?: pulumi.Input<boolean>;
}

export interface GetServerlessInstanceLink {
    href?: string;
    rel?: string;
}

export interface GetServerlessInstanceLinkArgs {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface GlobalClusterConfigCustomZoneMapping {
    /**
     * The ISO location code to which you want to map a zone in your Global Cluster. You can find a list of all supported location codes [here](https://cloud.mongodb.com/static/atlas/country_iso_codes.txt).
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the zone in your Global Cluster that you want to map to location.
     */
    zone?: pulumi.Input<string>;
}

export interface GlobalClusterConfigManagedNamespace {
    /**
     * The name of the collection associated with the managed namespace.
     */
    collection: pulumi.Input<string>;
    /**
     * The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
     */
    customShardKey: pulumi.Input<string>;
    /**
     * The name of the database containing the collection.
     */
    db: pulumi.Input<string>;
    /**
     * Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
     */
    isCustomShardKeyHashed?: pulumi.Input<boolean>;
    /**
     * Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
     */
    isShardKeyUnique?: pulumi.Input<boolean>;
}

export interface LdapConfigurationUserToDnMapping {
    ldapQuery?: pulumi.Input<string>;
    match?: pulumi.Input<string>;
    substitution?: pulumi.Input<string>;
}

export interface LdapVerifyLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface LdapVerifyValidation {
    /**
     * The current status of the LDAP over TLS/SSL configuration. One of the following values: `PENDING`, `SUCCESS`, and `FAILED`.
     */
    status?: pulumi.Input<string>;
    validationType?: pulumi.Input<string>;
}

export interface MaintenanceWindowProtectedHours {
    /**
     * Zero-based integer that represents the end hour of the day for the protected hours window.
     */
    endHourOfDay: pulumi.Input<number>;
    /**
     * Zero-based integer that represents the beginning hour of the day for the protected hours window.
     */
    startHourOfDay: pulumi.Input<number>;
}

export interface OnlineArchiveCriteria {
    /**
     * Indexed database parameter that stores the date that determines when data moves to the online archive. MongoDB Cloud archives the data when the current date exceeds the date in this database parameter plus the number of days specified through the expireAfterDays parameter.
     */
    dateField?: pulumi.Input<string>;
    /**
     * Syntax used to write the date after which data moves to the online archive. Date can be expressed as ISO 8601 or Epoch timestamps. The Epoch timestamp can be expressed as nanoseconds, milliseconds, or seconds. You must set `type` to `DATE` if `collectionType` is `TIMESERIES`. Valid values:  ISODATE (default), EPOCH_SECONDS, EPOCH_MILLIS, EPOCH_NANOSECONDS.
     */
    dateFormat?: pulumi.Input<string>;
    /**
     * Number of days after the value in the criteria.dateField when MongoDB Cloud archives data in the specified cluster.
     *
     * **_NOTE: if `DATE` is selected, the `partition_fields.field_name` must be completed with the `dateField` value_**
     *
     * The only field required for criteria type `CUSTOM`
     */
    expireAfterDays?: pulumi.Input<number>;
    /**
     * JSON query to use to select documents for archiving. Atlas uses the specified query with the db.collection.find(query) command. The empty document {} to return all documents is not supported.
     */
    query?: pulumi.Input<string>;
    /**
     * Type of criteria (DATE, CUSTOM)
     *
     * The following fields are required for criteria type `DATE`
     */
    type: pulumi.Input<string>;
}

export interface OnlineArchiveDataExpirationRule {
    /**
     * Number of days used in the date criteria for nominating documents for deletion. Value must be between 7 and 9215.
     */
    expireAfterDays: pulumi.Input<number>;
}

export interface OnlineArchiveDataProcessRegion {
    /**
     * Human-readable label that identifies the Cloud service provider where you wish to store your archived data. `AZURE` may be selected only if Azure is the Cloud service provider for the cluster and no AWS online archive has been created for the cluster.
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * Human-readable label that identifies the geographic location of the region where you wish to store your archived data. For allowed values, see [MongoDB Atlas API documentation](https://www.mongodb.com/docs/api/doc/atlas-admin-api-v2/operation/operation-createonlinearchive)
     */
    region?: pulumi.Input<string>;
}

export interface OnlineArchivePartitionField {
    /**
     * Human-readable label that identifies the parameter that MongoDB Cloud uses to partition data. To specify a nested parameter, use the dot notation.
     */
    fieldName: pulumi.Input<string>;
    /**
     * Data type of the parameter that that MongoDB Cloud uses to partition data. Partition parameters of type UUID must be of binary subtype 4. MongoDB Cloud skips partition parameters of type UUID with subtype 3. Valid values: `date`, `int`, `long`, `objectId`, `string`, `uuid`.
     */
    fieldType?: pulumi.Input<string>;
    /**
     * Sequence in which MongoDB Cloud slices the collection data to create partitions. The resource expresses this sequence starting with zero. The value of the `criteria.dateField` parameter defaults as the first item in the partition sequence.
     */
    order: pulumi.Input<number>;
}

export interface OnlineArchiveSchedule {
    /**
     * Day of the month when the scheduled archive starts. This field should be provided only when schedule `type` is `MONTHLY`.
     */
    dayOfMonth?: pulumi.Input<number>;
    /**
     * Day of the week when the scheduled archive starts. The week starts with Monday (1) and ends with Sunday (7). This field should be provided only when schedule `type` is `WEEKLY`.
     */
    dayOfWeek?: pulumi.Input<number>;
    /**
     * Hour of the day when the scheduled window to run one online archive ends.
     */
    endHour?: pulumi.Input<number>;
    /**
     * Minute of the hour when the scheduled window to run one online archive ends.
     */
    endMinute?: pulumi.Input<number>;
    /**
     * Hour of the day when the when the scheduled window to run one online archive starts.
     */
    startHour?: pulumi.Input<number>;
    /**
     * Minute of the hour when the scheduled window to run one online archive starts.
     */
    startMinute?: pulumi.Input<number>;
    /**
     * Type of schedule (``DAILY`, `MONTHLY`, `WEEKLY`).
     */
    type: pulumi.Input<string>;
}

export interface PrivateLinkEndpointServiceEndpoint {
    /**
     * Forwarding rule that corresponds to the endpoint you created in GCP.
     */
    endpointName?: pulumi.Input<string>;
    /**
     * Private IP address of the endpoint you created in GCP.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
     */
    status?: pulumi.Input<string>;
}

export interface ProjectApiKeyProjectAssignment {
    /**
     * Project ID to assign to Access Key
     */
    projectId: pulumi.Input<string>;
    /**
     * List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project. You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#project-roles) describes the valid roles that can be assigned.
     */
    roleNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectIpAccessListTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
}

export interface ProjectIpAddresses {
    services?: pulumi.Input<inputs.ProjectIpAddressesServices>;
}

export interface ProjectIpAddressesServices {
    clusters?: pulumi.Input<pulumi.Input<inputs.ProjectIpAddressesServicesCluster>[]>;
}

export interface ProjectIpAddressesServicesCluster {
    clusterName?: pulumi.Input<string>;
    inbounds?: pulumi.Input<pulumi.Input<string>[]>;
    outbounds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectLimit {
    currentUsage?: pulumi.Input<number>;
    defaultLimit?: pulumi.Input<number>;
    maximumLimit?: pulumi.Input<number>;
    /**
     * Human-readable label that identifies this project limit. See [Project Limit Documentation](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects/operation/setProjectLimit) under `limitName` parameter to find all the limits that can be defined.
     */
    name: pulumi.Input<string>;
    /**
     * Amount to set the limit to. Use the [Project Limit Documentation](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects/operation/setProjectLimit) under `limitName` parameter to verify the override limits.
     */
    value: pulumi.Input<number>;
}

export interface ProjectTeam {
    /**
     * Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
     *
     * > **NOTE:** Project created by API Keys must belong to an existing organization.
     */
    roleNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
     */
    teamId: pulumi.Input<string>;
}

export interface ProviderAssumeRole {
    /**
     * The duration, between 15 minutes and 12 hours, of the role session. Valid time units are ns, us (or µs), ms, s, h, or m.
     */
    duration?: pulumi.Input<string>;
    /**
     * A unique identifier that might be required when you assume a role in another account.
     */
    externalId?: pulumi.Input<string>;
    /**
     * IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
     */
    policy?: pulumi.Input<string>;
    /**
     * Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.
     */
    policyArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Amazon Resource Name (ARN) of an IAM Role to assume prior to making API calls.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * An identifier for the assumed role session.
     */
    sessionName?: pulumi.Input<string>;
    /**
     * Source identity specified by the principal assuming the role.
     */
    sourceIdentity?: pulumi.Input<string>;
    /**
     * Assume role session tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Assume role session tag keys to pass to any subsequent sessions.
     */
    transitiveTagKeys?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PushBasedLogExportTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface ResourcePolicyCreatedByUser {
    /**
     * Unique 24-hexadecimal character string that identifies a user.
     */
    id?: pulumi.Input<string>;
    /**
     * Human-readable label that describes a user.
     */
    name?: pulumi.Input<string>;
}

export interface ResourcePolicyLastUpdatedByUser {
    /**
     * Unique 24-hexadecimal character string that identifies a user.
     */
    id?: pulumi.Input<string>;
    /**
     * Human-readable label that describes a user.
     */
    name?: pulumi.Input<string>;
}

export interface ResourcePolicyPolicy {
    /**
     * A string that defines the permissions for the policy. The syntax used is the Cedar Policy language.
     */
    body: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal character string that identifies the policy.
     */
    id?: pulumi.Input<string>;
}

export interface SearchDeploymentSpec {
    /**
     * Hardware specification for the search node instance sizes. The [MongoDB Atlas API](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Atlas-Search/operation/createAtlasSearchDeployment) describes the valid values. More details can also be found in the [Search Node Documentation](https://www.mongodb.com/docs/atlas/cluster-config/multi-cloud-distribution/#search-tier).
     */
    instanceSize: pulumi.Input<string>;
    /**
     * Number of search nodes in the cluster.
     */
    nodeCount: pulumi.Input<number>;
}

export interface SearchDeploymentTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface SearchIndexSynonym {
    /**
     * [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index. Defaults to [lucene.standard](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/standard/#std-label-ref-standard-analyzer)
     */
    analyzer: pulumi.Input<string>;
    /**
     * The name of the search index you want to create.
     */
    name: pulumi.Input<string>;
    /**
     * (Required) Name of the source MongoDB collection for the synonyms. Documents in this collection must be in the format described in the [Synonyms Source Collection Documents](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-coll-spec).
     */
    sourceCollection: pulumi.Input<string>;
}

export interface ServerlessInstanceLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface ServerlessInstanceTag {
    /**
     * Constant that defines the set of the tag.
     */
    key: pulumi.Input<string>;
    /**
     * Variable that belongs to the set of the tag.
     *
     * To learn more, see [Resource Tags](https://dochub.mongodb.org/core/add-cluster-tag-atlas).
     */
    value: pulumi.Input<string>;
}

export interface StreamConnectionAuthentication {
    /**
     * Style of authentication. Can be one of `PLAIN`, `SCRAM-256`, or `SCRAM-512`.
     */
    mechanism?: pulumi.Input<string>;
    /**
     * Password of the account to connect to the Kafka cluster.
     */
    password?: pulumi.Input<string>;
    /**
     * Username of the account to connect to the Kafka cluster.
     */
    username?: pulumi.Input<string>;
}

export interface StreamConnectionAws {
    /**
     * Amazon Resource Name (ARN) that identifies the Amazon Web Services (AWS) Identity and Access Management (IAM) role that MongoDB Cloud assumes when it accesses resources in your AWS account.
     */
    roleArn: pulumi.Input<string>;
}

export interface StreamConnectionDbRoleToExecute {
    /**
     * The name of the role to use. Value can be  `atlasAdmin`, `readWriteAnyDatabase`, or `readAnyDatabase` if `type` is set to `BUILT_IN`, or the name of a user-defined role if `type` is set to `CUSTOM`.
     */
    role: pulumi.Input<string>;
    /**
     * Type of connection. Can be `AWSLambda`, `Cluster`, `Https`, `Kafka` or `Sample`.
     */
    type: pulumi.Input<string>;
}

export interface StreamConnectionNetworking {
    /**
     * Information about the networking access. See access.
     */
    access: pulumi.Input<inputs.StreamConnectionNetworkingAccess>;
}

export interface StreamConnectionNetworkingAccess {
    /**
     * Id of the Private Link connection when type is `PRIVATE_LINK`.
     */
    connectionId?: pulumi.Input<string>;
    /**
     * Selected networking type. Either `PUBLIC`, `VPC` or `PRIVATE_LINK`. Defaults to `PUBLIC`.
     */
    type: pulumi.Input<string>;
}

export interface StreamConnectionSecurity {
    /**
     * A trusted, public x509 certificate for connecting to Kafka over SSL. String value of the certificate must be defined in the attribute.
     */
    brokerPublicCertificate?: pulumi.Input<string>;
    /**
     * Describes the transport type. Can be either `SASL_PLAINTEXT` or `SASL_SSL`.
     */
    protocol?: pulumi.Input<string>;
}

export interface StreamInstanceDataProcessRegion {
    /**
     * Label that identifies the cloud service provider where MongoDB Cloud performs stream processing. The [MongoDB Atlas API](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Streams/operation/createStreamInstance) describes the valid values.
     */
    cloudProvider: pulumi.Input<string>;
    /**
     * Name of the cloud provider region hosting Atlas Stream Processing. The [MongoDB Atlas API](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Streams/operation/createStreamInstance) describes the valid values.
     */
    region: pulumi.Input<string>;
}

export interface StreamInstanceStreamConfig {
    /**
     * Selected tier for the Stream Instance. Configures Memory / VCPU allowances. The [MongoDB Atlas API](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Streams/operation/createStreamInstance) describes the valid values.
     */
    tier?: pulumi.Input<string>;
}

export interface StreamProcessorOptions {
    /**
     * Dead letter queue for the stream processor. Refer to the [MongoDB Atlas Docs](https://www.mongodb.com/docs/atlas/reference/glossary/#std-term-dead-letter-queue) for more information.
     */
    dlq: pulumi.Input<inputs.StreamProcessorOptionsDlq>;
}

export interface StreamProcessorOptionsDlq {
    /**
     * Name of the collection to use for the DLQ.
     */
    coll: pulumi.Input<string>;
    /**
     * Name of the connection to write DLQ messages to. Must be an Atlas connection.
     */
    connectionName: pulumi.Input<string>;
    /**
     * Name of the database to use for the DLQ.
     */
    db: pulumi.Input<string>;
}

export interface X509AuthenticationDatabaseUserCertificate {
    createdAt?: pulumi.Input<string>;
    groupId?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    notAfter?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
}
export namespace config {
}
