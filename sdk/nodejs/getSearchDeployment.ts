// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * # Data Source: mongodbatlas.SearchDeployment
 *
 * `mongodbatlas.SearchDeployment` describes a search node deployment.
 *
 * ## Example Usage
 */
export function getSearchDeployment(args: GetSearchDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetSearchDeploymentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getSearchDeployment:getSearchDeployment", {
        "clusterName": args.clusterName,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSearchDeployment.
 */
export interface GetSearchDeploymentArgs {
    /**
     * Label that identifies the cluster to return the search nodes for.
     */
    clusterName: string;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: string;
}

/**
 * A collection of values returned by getSearchDeployment.
 */
export interface GetSearchDeploymentResult {
    /**
     * Label that identifies the cluster to return the search nodes for.
     */
    readonly clusterName: string;
    /**
     * Unique 24-hexadecimal digit string that identifies the search deployment.
     */
    readonly id: string;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    readonly projectId: string;
    /**
     * List of settings that configure the search nodes for your cluster. This list is currently limited to defining a single element.
     */
    readonly specs: outputs.GetSearchDeploymentSpec[];
    /**
     * Human-readable label that indicates the current operating condition of this search deployment.
     */
    readonly stateName: string;
}
/**
 * # Data Source: mongodbatlas.SearchDeployment
 *
 * `mongodbatlas.SearchDeployment` describes a search node deployment.
 *
 * ## Example Usage
 */
export function getSearchDeploymentOutput(args: GetSearchDeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSearchDeploymentResult> {
    return pulumi.output(args).apply((a: any) => getSearchDeployment(a, opts))
}

/**
 * A collection of arguments for invoking getSearchDeployment.
 */
export interface GetSearchDeploymentOutputArgs {
    /**
     * Label that identifies the cluster to return the search nodes for.
     */
    clusterName: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: pulumi.Input<string>;
}
