// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * # Resource: mongodbatlas.StreamInstance
 *
 * `mongodbatlas.StreamInstance` provides a Stream Instance resource. The resource lets you create, edit, and delete stream instances in a project.
 *
 * ## Import
 *
 * You can import stream instance resource using the project ID and instance name, in the format `PROJECT_ID-INSTANCE_NAME`. For example:
 *
 * ```sh
 * $ pulumi import mongodbatlas:index/streamInstance:StreamInstance test 650972848269185c55f40ca1-InstanceName
 * ```
 * To learn more, see: [MongoDB Atlas API - Stream Instance](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Streams/operation/createStreamInstance) Documentation.
 * The Terraform Provider Examples Section also contains details on the overall support for Atlas Streams Processing in Terraform.
 */
export class StreamInstance extends pulumi.CustomResource {
    /**
     * Get an existing StreamInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StreamInstanceState, opts?: pulumi.CustomResourceOptions): StreamInstance {
        return new StreamInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mongodbatlas:index/streamInstance:StreamInstance';

    /**
     * Returns true if the given object is an instance of StreamInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StreamInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StreamInstance.__pulumiType;
    }

    /**
     * Cloud service provider and region where MongoDB Cloud performs stream processing. See data process region.
     */
    public readonly dataProcessRegion!: pulumi.Output<outputs.StreamInstanceDataProcessRegion>;
    /**
     * List that contains the hostnames assigned to the stream instance.
     */
    public /*out*/ readonly hostnames!: pulumi.Output<string[]>;
    /**
     * Human-readable label that identifies the stream instance.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * Configuration options for an Atlas Stream Processing Instance. See stream config
     */
    public readonly streamConfig!: pulumi.Output<outputs.StreamInstanceStreamConfig>;

    /**
     * Create a StreamInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StreamInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StreamInstanceArgs | StreamInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StreamInstanceState | undefined;
            resourceInputs["dataProcessRegion"] = state ? state.dataProcessRegion : undefined;
            resourceInputs["hostnames"] = state ? state.hostnames : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["streamConfig"] = state ? state.streamConfig : undefined;
        } else {
            const args = argsOrState as StreamInstanceArgs | undefined;
            if ((!args || args.dataProcessRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataProcessRegion'");
            }
            if ((!args || args.instanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["dataProcessRegion"] = args ? args.dataProcessRegion : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["streamConfig"] = args ? args.streamConfig : undefined;
            resourceInputs["hostnames"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StreamInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StreamInstance resources.
 */
export interface StreamInstanceState {
    /**
     * Cloud service provider and region where MongoDB Cloud performs stream processing. See data process region.
     */
    dataProcessRegion?: pulumi.Input<inputs.StreamInstanceDataProcessRegion>;
    /**
     * List that contains the hostnames assigned to the stream instance.
     */
    hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Human-readable label that identifies the stream instance.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Configuration options for an Atlas Stream Processing Instance. See stream config
     */
    streamConfig?: pulumi.Input<inputs.StreamInstanceStreamConfig>;
}

/**
 * The set of arguments for constructing a StreamInstance resource.
 */
export interface StreamInstanceArgs {
    /**
     * Cloud service provider and region where MongoDB Cloud performs stream processing. See data process region.
     */
    dataProcessRegion: pulumi.Input<inputs.StreamInstanceDataProcessRegion>;
    /**
     * Human-readable label that identifies the stream instance.
     */
    instanceName: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: pulumi.Input<string>;
    /**
     * Configuration options for an Atlas Stream Processing Instance. See stream config
     */
    streamConfig?: pulumi.Input<inputs.StreamInstanceStreamConfig>;
}
