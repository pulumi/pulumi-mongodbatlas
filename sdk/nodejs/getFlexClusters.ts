// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # Data Source: mongodbatlas.getFlexClusters
 *
 * `mongodbatlas.getFlexClusters` returns all flex clusters in a project.
 *
 * **RECOMMENDATION:** We recommend using the `mongodbatlas.getAdvancedClusters` data source instead of the `mongodbatlas.getFlexClusters` data source to retrieve Flex clusters. The `mongodbatlas.getAdvancedClusters` data source not only supports Flex clusters, but also supports free and dedicated clusters, providing easier migration between different cluster types. For more information, see the Advanced Clusters data source.
 *
 * ## Example Usage
 */
export function getFlexClusters(args: GetFlexClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetFlexClustersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getFlexClusters:getFlexClusters", {
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlexClusters.
 */
export interface GetFlexClustersArgs {
    /**
     * Unique 24-hexadecimal character string that identifies the project.
     */
    projectId: string;
}

/**
 * A collection of values returned by getFlexClusters.
 */
export interface GetFlexClustersResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Unique 24-hexadecimal character string that identifies the project.
     */
    readonly projectId: string;
    /**
     * List of documents that MongoDB Cloud returns for this request.
     */
    readonly results: outputs.GetFlexClustersResult[];
}
/**
 * ## # Data Source: mongodbatlas.getFlexClusters
 *
 * `mongodbatlas.getFlexClusters` returns all flex clusters in a project.
 *
 * **RECOMMENDATION:** We recommend using the `mongodbatlas.getAdvancedClusters` data source instead of the `mongodbatlas.getFlexClusters` data source to retrieve Flex clusters. The `mongodbatlas.getAdvancedClusters` data source not only supports Flex clusters, but also supports free and dedicated clusters, providing easier migration between different cluster types. For more information, see the Advanced Clusters data source.
 *
 * ## Example Usage
 */
export function getFlexClustersOutput(args: GetFlexClustersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFlexClustersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getFlexClusters:getFlexClusters", {
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlexClusters.
 */
export interface GetFlexClustersOutputArgs {
    /**
     * Unique 24-hexadecimal character string that identifies the project.
     */
    projectId: pulumi.Input<string>;
}
