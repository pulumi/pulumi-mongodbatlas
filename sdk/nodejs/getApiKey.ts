// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 */
export function getApiKey(args: GetApiKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetApiKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getApiKey:getApiKey", {
        "apiKeyId": args.apiKeyId,
        "orgId": args.orgId,
    }, opts);
}

/**
 * A collection of arguments for invoking getApiKey.
 */
export interface GetApiKeyArgs {
    /**
     * Unique identifier for the organization API key.
     */
    apiKeyId: string;
    /**
     * Unique identifier for the organization.
     */
    orgId: string;
}

/**
 * A collection of values returned by getApiKey.
 */
export interface GetApiKeyResult {
    readonly apiKeyId: string;
    /**
     * Description of this Organization API key.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly orgId: string;
    /**
     * Public key for this Organization API key.
     */
    readonly publicKey: string;
    /**
     * Name of the role. This resource returns all the roles the user has in Atlas.
     * The following are valid roles:
     */
    readonly roleNames: string[];
}
/**
 * ## Example Usage
 */
export function getApiKeyOutput(args: GetApiKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApiKeyResult> {
    return pulumi.output(args).apply((a: any) => getApiKey(a, opts))
}

/**
 * A collection of arguments for invoking getApiKey.
 */
export interface GetApiKeyOutputArgs {
    /**
     * Unique identifier for the organization API key.
     */
    apiKeyId: pulumi.Input<string>;
    /**
     * Unique identifier for the organization.
     */
    orgId: pulumi.Input<string>;
}
