// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * **WARNING:** Data Lake is deprecated. To learn more, see <https://dochub.mongodb.org/core/data-lake-deprecation>
 *
 * `mongodbatlas.getDataLakePipelineRun` describes Data Lake Pipeline Runs.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 */
export function getDataLakePipelineRuns(args: GetDataLakePipelineRunsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataLakePipelineRunsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getDataLakePipelineRuns:getDataLakePipelineRuns", {
        "pipelineName": args.pipelineName,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataLakePipelineRuns.
 */
export interface GetDataLakePipelineRunsArgs {
    /**
     * Human-readable label that identifies the Data Lake Pipeline.
     */
    pipelineName: string;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: string;
}

/**
 * A collection of values returned by getDataLakePipelineRuns.
 */
export interface GetDataLakePipelineRunsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly pipelineName: string;
    readonly projectId: string;
    /**
     * A list where each represents a Data Lake Pipeline Run.
     */
    readonly results: outputs.GetDataLakePipelineRunsResult[];
}
/**
 * **WARNING:** Data Lake is deprecated. To learn more, see <https://dochub.mongodb.org/core/data-lake-deprecation>
 *
 * `mongodbatlas.getDataLakePipelineRun` describes Data Lake Pipeline Runs.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 */
export function getDataLakePipelineRunsOutput(args: GetDataLakePipelineRunsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDataLakePipelineRunsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getDataLakePipelineRuns:getDataLakePipelineRuns", {
        "pipelineName": args.pipelineName,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataLakePipelineRuns.
 */
export interface GetDataLakePipelineRunsOutputArgs {
    /**
     * Human-readable label that identifies the Data Lake Pipeline.
     */
    pipelineName: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: pulumi.Input<string>;
}
