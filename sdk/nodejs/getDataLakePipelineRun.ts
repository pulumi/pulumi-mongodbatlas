// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * **WARNING:** Data Lake is deprecated. To learn more, see <https://dochub.mongodb.org/core/data-lake-deprecation>
 *
 * `mongodbatlas.getDataLakePipelineRun` describes a Data Lake Pipeline Run.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 */
export function getDataLakePipelineRun(args: GetDataLakePipelineRunArgs, opts?: pulumi.InvokeOptions): Promise<GetDataLakePipelineRunResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getDataLakePipelineRun:getDataLakePipelineRun", {
        "pipelineName": args.pipelineName,
        "pipelineRunId": args.pipelineRunId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataLakePipelineRun.
 */
export interface GetDataLakePipelineRunArgs {
    /**
     * Human-readable label that identifies the Data Lake Pipeline.
     */
    pipelineName: string;
    /**
     * Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.
     */
    pipelineRunId: string;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: string;
}

/**
 * A collection of values returned by getDataLakePipelineRun.
 */
export interface GetDataLakePipelineRunResult {
    /**
     * Backup schedule interval of the Data Lake Pipeline.
     */
    readonly backupFrequencyType: string;
    /**
     * Timestamp that indicates when the pipeline run was created.
     */
    readonly createdDate: string;
    /**
     * Human-readable label that identifies the dataset that Atlas generates during this pipeline run.
     */
    readonly datasetName: string;
    /**
     * Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.
     */
    readonly id: string;
    /**
     * Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.
     */
    readonly lastUpdatedDate: string;
    /**
     * Processing phase of the Data Lake Pipeline.
     */
    readonly phase: string;
    /**
     * Unique 24-hexadecimal character string that identifies a Data Lake Pipeline.
     */
    readonly pipelineId: string;
    readonly pipelineName: string;
    readonly pipelineRunId: string;
    readonly projectId: string;
    /**
     * Unique 24-hexadecimal character string that identifies the snapshot of a cluster.
     */
    readonly snapshotId: string;
    /**
     * State of the pipeline run.
     */
    readonly state: string;
    /**
     * Runtime statistics for this Data Lake Pipeline run.
     */
    readonly stats: outputs.GetDataLakePipelineRunStat[];
}
/**
 * **WARNING:** Data Lake is deprecated. To learn more, see <https://dochub.mongodb.org/core/data-lake-deprecation>
 *
 * `mongodbatlas.getDataLakePipelineRun` describes a Data Lake Pipeline Run.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 */
export function getDataLakePipelineRunOutput(args: GetDataLakePipelineRunOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDataLakePipelineRunResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getDataLakePipelineRun:getDataLakePipelineRun", {
        "pipelineName": args.pipelineName,
        "pipelineRunId": args.pipelineRunId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataLakePipelineRun.
 */
export interface GetDataLakePipelineRunOutputArgs {
    /**
     * Human-readable label that identifies the Data Lake Pipeline.
     */
    pipelineName: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.
     */
    pipelineRunId: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: pulumi.Input<string>;
}
