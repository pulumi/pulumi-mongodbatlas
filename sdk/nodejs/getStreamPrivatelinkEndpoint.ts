// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Data Source: mongodbatlas.StreamPrivatelinkEndpoint
 *
 * `mongodbatlas.StreamPrivatelinkEndpoint` describes a Privatelink Endpoint for Streams.
 *
 * ## Example Usage
 *
 * ### S
 *
 * ### AWS S3 Privatelink
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * // S3 bucket for stream data
 * const streamBucket = new aws.index.S3Bucket("stream_bucket", {
 *     bucket: s3BucketName,
 *     forceDestroy: true,
 * });
 * const streamBucketVersioning = new aws.index.S3BucketVersioning("stream_bucket_versioning", {
 *     bucket: streamBucket.id,
 *     versioningConfiguration: [{
 *         status: "Enabled",
 *     }],
 * });
 * const streamBucketEncryption = new aws.index.S3BucketServerSideEncryptionConfiguration("stream_bucket_encryption", {
 *     bucket: streamBucket.id,
 *     rule: [{
 *         applyServerSideEncryptionByDefault: [{
 *             sseAlgorithm: "AES256",
 *         }],
 *     }],
 * });
 * // PrivateLink for S3
 * const _this = new mongodbatlas.StreamPrivatelinkEndpoint("this", {
 *     projectId: projectId,
 *     providerName: "AWS",
 *     vendor: "S3",
 *     region: region,
 *     serviceEndpointId: serviceEndpointId,
 * });
 * export const privatelinkEndpointId = _this.id;
 * ```
 */
export function getStreamPrivatelinkEndpoint(args: GetStreamPrivatelinkEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamPrivatelinkEndpointResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getStreamPrivatelinkEndpoint:getStreamPrivatelinkEndpoint", {
        "id": args.id,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamPrivatelinkEndpoint.
 */
export interface GetStreamPrivatelinkEndpointArgs {
    id: string;
    projectId: string;
}

/**
 * A collection of values returned by getStreamPrivatelinkEndpoint.
 */
export interface GetStreamPrivatelinkEndpointResult {
    readonly arn: string;
    readonly dnsDomain: string;
    readonly dnsSubDomains: string[];
    readonly errorMessage: string;
    readonly id: string;
    readonly interfaceEndpointId: string;
    readonly interfaceEndpointName: string;
    readonly projectId: string;
    readonly providerAccountId: string;
    readonly providerName: string;
    readonly region: string;
    readonly serviceEndpointId: string;
    readonly state: string;
    readonly vendor: string;
}
/**
 * ## # Data Source: mongodbatlas.StreamPrivatelinkEndpoint
 *
 * `mongodbatlas.StreamPrivatelinkEndpoint` describes a Privatelink Endpoint for Streams.
 *
 * ## Example Usage
 *
 * ### S
 *
 * ### AWS S3 Privatelink
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * // S3 bucket for stream data
 * const streamBucket = new aws.index.S3Bucket("stream_bucket", {
 *     bucket: s3BucketName,
 *     forceDestroy: true,
 * });
 * const streamBucketVersioning = new aws.index.S3BucketVersioning("stream_bucket_versioning", {
 *     bucket: streamBucket.id,
 *     versioningConfiguration: [{
 *         status: "Enabled",
 *     }],
 * });
 * const streamBucketEncryption = new aws.index.S3BucketServerSideEncryptionConfiguration("stream_bucket_encryption", {
 *     bucket: streamBucket.id,
 *     rule: [{
 *         applyServerSideEncryptionByDefault: [{
 *             sseAlgorithm: "AES256",
 *         }],
 *     }],
 * });
 * // PrivateLink for S3
 * const _this = new mongodbatlas.StreamPrivatelinkEndpoint("this", {
 *     projectId: projectId,
 *     providerName: "AWS",
 *     vendor: "S3",
 *     region: region,
 *     serviceEndpointId: serviceEndpointId,
 * });
 * export const privatelinkEndpointId = _this.id;
 * ```
 */
export function getStreamPrivatelinkEndpointOutput(args: GetStreamPrivatelinkEndpointOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamPrivatelinkEndpointResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getStreamPrivatelinkEndpoint:getStreamPrivatelinkEndpoint", {
        "id": args.id,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamPrivatelinkEndpoint.
 */
export interface GetStreamPrivatelinkEndpointOutputArgs {
    id: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
