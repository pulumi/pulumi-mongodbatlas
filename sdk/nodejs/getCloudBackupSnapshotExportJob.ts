// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * `mongodbatlas.CloudBackupSnapshotExportJob` datasource allows you to retrieve a snapshot export job for the specified project and cluster.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 */
export function getCloudBackupSnapshotExportJob(args: GetCloudBackupSnapshotExportJobArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudBackupSnapshotExportJobResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("mongodbatlas:index/getCloudBackupSnapshotExportJob:getCloudBackupSnapshotExportJob", {
        "clusterName": args.clusterName,
        "exportJobId": args.exportJobId,
        "id": args.id,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudBackupSnapshotExportJob.
 */
export interface GetCloudBackupSnapshotExportJobArgs {
    /**
     * Name of the Atlas cluster whose export job you want to retrieve.
     */
    clusterName: string;
    /**
     * -(Required) Unique identifier of the export job to retrieve.
     */
    exportJobId: string;
    id: string;
    /**
     * Unique 24-hexadecimal digit string that identifies the project which contains the Atlas cluster whose snapshot you want to retrieve.
     */
    projectId: string;
}

/**
 * A collection of values returned by getCloudBackupSnapshotExportJob.
 */
export interface GetCloudBackupSnapshotExportJobResult {
    readonly clusterName: string;
    /**
     * _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
     */
    readonly components: outputs.GetCloudBackupSnapshotExportJobComponent[];
    /**
     * Timestamp in ISO 8601 date and time format in UTC when the export job was created.
     */
    readonly createdAt: string;
    /**
     * Custom data to include in the metadata file named `.complete` that Atlas uploads to the bucket when the export job finishes. Custom data can be specified as key and value pairs.
     */
    readonly customDatas: outputs.GetCloudBackupSnapshotExportJobCustomData[];
    /**
     * Error message, only if the export job failed.
     */
    readonly errMsg: string;
    /**
     * Unique identifier of the AWS bucket to export the Cloud Backup snapshot to.
     */
    readonly exportBucketId: string;
    /**
     * Unique identifier of the export job.
     * * `prefix ` - Full path on the cloud provider bucket to the folder where the snapshot is exported. The path is in the following format:`/exported_snapshots/{ORG-NAME}/{PROJECT-NAME}/{CLUSTER-NAME}/{SNAPSHOT-INITIATION-DATE}/{TIMESTAMP}`
     */
    readonly exportJobId: string;
    readonly exportStatusExportedCollections: number;
    readonly exportStatusTotalCollections: number;
    /**
     * Timestamp in ISO 8601 date and time format in UTC when the export job completes.
     */
    readonly finishedAt: string;
    readonly id: string;
    readonly prefix: string;
    readonly projectId: string;
    /**
     * Unique identifier of the Cloud Backup snapshot to export.
     */
    readonly snapshotId: string;
    /**
     * Status of the export job. Value can be one of the following:
     */
    readonly state: string;
}

export function getCloudBackupSnapshotExportJobOutput(args: GetCloudBackupSnapshotExportJobOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudBackupSnapshotExportJobResult> {
    return pulumi.output(args).apply(a => getCloudBackupSnapshotExportJob(a, opts))
}

/**
 * A collection of arguments for invoking getCloudBackupSnapshotExportJob.
 */
export interface GetCloudBackupSnapshotExportJobOutputArgs {
    /**
     * Name of the Atlas cluster whose export job you want to retrieve.
     */
    clusterName: pulumi.Input<string>;
    /**
     * -(Required) Unique identifier of the export job to retrieve.
     */
    exportJobId: pulumi.Input<string>;
    id: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the project which contains the Atlas cluster whose snapshot you want to retrieve.
     */
    projectId: pulumi.Input<string>;
}
