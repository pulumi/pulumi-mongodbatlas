// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # Data Source: mongodbatlas.getStreamInstances
 *
 * `mongodbatlas.getStreamInstances` describes the stream instances defined in a project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = mongodbatlas.getStreamInstances({
 *     projectId: "<PROJECT_ID>",
 * });
 * ```
 */
export function getStreamInstances(args: GetStreamInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamInstancesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getStreamInstances:getStreamInstances", {
        "itemsPerPage": args.itemsPerPage,
        "pageNum": args.pageNum,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamInstances.
 */
export interface GetStreamInstancesArgs {
    /**
     * Number of items that the response returns per page, up to a maximum of `500`. Defaults to `100`.
     */
    itemsPerPage?: number;
    /**
     * Number of the page that displays the current set of the total objects that the response returns. Defaults to `1`.
     */
    pageNum?: number;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: string;
}

/**
 * A collection of values returned by getStreamInstances.
 */
export interface GetStreamInstancesResult {
    readonly id: string;
    readonly itemsPerPage?: number;
    readonly pageNum?: number;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    readonly projectId: string;
    /**
     * A list where each element contains a Stream Instance.
     */
    readonly results: outputs.GetStreamInstancesResult[];
    /**
     * Count of the total number of items in the result set. The count might be greater than the number of objects in the results array if the entire result set is paginated.
     */
    readonly totalCount: number;
}
/**
 * ## # Data Source: mongodbatlas.getStreamInstances
 *
 * `mongodbatlas.getStreamInstances` describes the stream instances defined in a project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = mongodbatlas.getStreamInstances({
 *     projectId: "<PROJECT_ID>",
 * });
 * ```
 */
export function getStreamInstancesOutput(args: GetStreamInstancesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamInstancesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getStreamInstances:getStreamInstances", {
        "itemsPerPage": args.itemsPerPage,
        "pageNum": args.pageNum,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamInstances.
 */
export interface GetStreamInstancesOutputArgs {
    /**
     * Number of items that the response returns per page, up to a maximum of `500`. Defaults to `100`.
     */
    itemsPerPage?: pulumi.Input<number>;
    /**
     * Number of the page that displays the current set of the total objects that the response returns. Defaults to `1`.
     */
    pageNum?: pulumi.Input<number>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: pulumi.Input<string>;
}
