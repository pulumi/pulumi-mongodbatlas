// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # Data Source: mongodbatlas.FlexCluster
 *
 * `mongodbatlas.FlexCluster` describes a flex cluster.
 *
 * **RECOMMENDATION:** We recommend using the `mongodbatlas.AdvancedCluster` data source instead of `mongodbatlas.FlexCluster` data source to retrieve Flex clusters. The `mongodbatlas.AdvancedCluster` data source not only supports Flex clusters, but also supports free and dedicated clusters, providing easier migration between different cluster types. For more information, see the Advanced Cluster data source.
 *
 * ## Example Usage
 */
export function getFlexCluster(args: GetFlexClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetFlexClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getFlexCluster:getFlexCluster", {
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlexCluster.
 */
export interface GetFlexClusterArgs {
    /**
     * Human-readable label that identifies the instance.
     */
    name: string;
    /**
     * Unique 24-hexadecimal character string that identifies the project.
     */
    projectId: string;
}

/**
 * A collection of values returned by getFlexCluster.
 */
export interface GetFlexClusterResult {
    /**
     * Flex backup configuration
     */
    readonly backupSettings: outputs.GetFlexClusterBackupSettings;
    /**
     * Flex cluster topology.
     */
    readonly clusterType: string;
    /**
     * Collection of Uniform Resource Locators that point to the MongoDB database.
     */
    readonly connectionStrings: outputs.GetFlexClusterConnectionStrings;
    /**
     * Date and time when MongoDB Cloud created this instance. This parameter expresses its value in ISO 8601 format in UTC.
     */
    readonly createDate: string;
    /**
     * Unique 24-hexadecimal digit string that identifies the instance.
     */
    readonly id: string;
    /**
     * Version of MongoDB that the instance runs.
     */
    readonly mongoDbVersion: string;
    /**
     * Human-readable label that identifies the instance.
     */
    readonly name: string;
    /**
     * Unique 24-hexadecimal character string that identifies the project.
     */
    readonly projectId: string;
    /**
     * Group of cloud provider settings that configure the provisioned MongoDB flex cluster.
     */
    readonly providerSettings: outputs.GetFlexClusterProviderSettings;
    /**
     * Human-readable label that indicates the current operating condition of this instance.
     */
    readonly stateName: string;
    /**
     * Map that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the instance.
     */
    readonly tags: {[key: string]: string};
    /**
     * Flag that indicates whether termination protection is enabled on the cluster. If set to `true`, MongoDB Cloud won't delete the cluster. If set to `false`, MongoDB Cloud will delete the cluster.
     */
    readonly terminationProtectionEnabled: boolean;
    /**
     * Method by which the cluster maintains the MongoDB versions.
     */
    readonly versionReleaseSystem: string;
}
/**
 * ## # Data Source: mongodbatlas.FlexCluster
 *
 * `mongodbatlas.FlexCluster` describes a flex cluster.
 *
 * **RECOMMENDATION:** We recommend using the `mongodbatlas.AdvancedCluster` data source instead of `mongodbatlas.FlexCluster` data source to retrieve Flex clusters. The `mongodbatlas.AdvancedCluster` data source not only supports Flex clusters, but also supports free and dedicated clusters, providing easier migration between different cluster types. For more information, see the Advanced Cluster data source.
 *
 * ## Example Usage
 */
export function getFlexClusterOutput(args: GetFlexClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFlexClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getFlexCluster:getFlexCluster", {
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlexCluster.
 */
export interface GetFlexClusterOutputArgs {
    /**
     * Human-readable label that identifies the instance.
     */
    name: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal character string that identifies the project.
     */
    projectId: pulumi.Input<string>;
}
