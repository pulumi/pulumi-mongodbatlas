// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Data Source: mongodbatlas.getStreamAccountDetails
 *
 * `mongodbatlas.getStreamAccountDetails` returns the AWS Account ID/Azure Subscription ID, and the AWS VPC ID/Azure Virtual Network Name for the group, cloud provider, and region that you specify.
 *
 * ## Example Usage
 *
 * ### S
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const accountDetails = mongodbatlas.getStreamAccountDetails({
 *     projectId: projectId,
 *     cloudProvider: "aws",
 *     regionName: "US_EAST_1",
 * });
 * export const awsAccountId = accountDetails.then(accountDetails => accountDetails.awsAccountId);
 * export const cidrBlock = accountDetails.then(accountDetails => accountDetails.cidrBlock);
 * export const cloudProvider = accountDetails.then(accountDetails => accountDetails.cloudProvider);
 * export const vpcId = accountDetails.then(accountDetails => accountDetails.vpcId);
 * ```
 */
export function getStreamAccountDetails(args: GetStreamAccountDetailsArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamAccountDetailsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getStreamAccountDetails:getStreamAccountDetails", {
        "cloudProvider": args.cloudProvider,
        "projectId": args.projectId,
        "regionName": args.regionName,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamAccountDetails.
 */
export interface GetStreamAccountDetailsArgs {
    /**
     * One of `aws` or `azure`.
     */
    cloudProvider: string;
    /**
     * Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.
     */
    projectId: string;
    regionName: string;
}

/**
 * A collection of values returned by getStreamAccountDetails.
 */
export interface GetStreamAccountDetailsResult {
    readonly awsAccountId: string;
    readonly azureSubscriptionId: string;
    readonly cidrBlock: string;
    /**
     * One of `aws` or `azure`.
     */
    readonly cloudProvider: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.
     */
    readonly projectId: string;
    readonly regionName: string;
    readonly virtualNetworkName: string;
    readonly vpcId: string;
}
/**
 * ## # Data Source: mongodbatlas.getStreamAccountDetails
 *
 * `mongodbatlas.getStreamAccountDetails` returns the AWS Account ID/Azure Subscription ID, and the AWS VPC ID/Azure Virtual Network Name for the group, cloud provider, and region that you specify.
 *
 * ## Example Usage
 *
 * ### S
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const accountDetails = mongodbatlas.getStreamAccountDetails({
 *     projectId: projectId,
 *     cloudProvider: "aws",
 *     regionName: "US_EAST_1",
 * });
 * export const awsAccountId = accountDetails.then(accountDetails => accountDetails.awsAccountId);
 * export const cidrBlock = accountDetails.then(accountDetails => accountDetails.cidrBlock);
 * export const cloudProvider = accountDetails.then(accountDetails => accountDetails.cloudProvider);
 * export const vpcId = accountDetails.then(accountDetails => accountDetails.vpcId);
 * ```
 */
export function getStreamAccountDetailsOutput(args: GetStreamAccountDetailsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamAccountDetailsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getStreamAccountDetails:getStreamAccountDetails", {
        "cloudProvider": args.cloudProvider,
        "projectId": args.projectId,
        "regionName": args.regionName,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamAccountDetails.
 */
export interface GetStreamAccountDetailsOutputArgs {
    /**
     * One of `aws` or `azure`.
     */
    cloudProvider: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.
     */
    projectId: pulumi.Input<string>;
    regionName: pulumi.Input<string>;
}
