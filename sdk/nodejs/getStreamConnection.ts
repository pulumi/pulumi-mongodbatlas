// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # Data Source: mongodbatlas.StreamConnection
 *
 * `mongodbatlas.StreamConnection` describes a stream connection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const example = mongodbatlas.getStreamConnection({
 *     projectId: "<PROJECT_ID>",
 *     instanceName: "<INSTANCE_NAME>",
 *     connectionName: "<CONNECTION_NAME>",
 * });
 * ```
 */
export function getStreamConnection(args: GetStreamConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamConnectionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getStreamConnection:getStreamConnection", {
        "connectionName": args.connectionName,
        "instanceName": args.instanceName,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamConnection.
 */
export interface GetStreamConnectionArgs {
    /**
     * Human-readable label that identifies the stream connection. In the case of the Sample type, this is the name of the sample source.
     */
    connectionName: string;
    /**
     * Human-readable label that identifies the stream instance.
     */
    instanceName: string;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: string;
}

/**
 * A collection of values returned by getStreamConnection.
 */
export interface GetStreamConnectionResult {
    /**
     * User credentials required to connect to a Kafka cluster. Includes the authentication type, as well as the parameters for that authentication mode. See authentication.
     */
    readonly authentication: outputs.GetStreamConnectionAuthentication;
    /**
     * Comma separated list of server addresses.
     */
    readonly bootstrapServers: string;
    /**
     * Name of the cluster configured for this connection.
     */
    readonly clusterName: string;
    /**
     * A map of Kafka key-value pairs for optional configuration. This is a flat object, and keys can have '.' characters.
     */
    readonly config: {[key: string]: string};
    readonly connectionName: string;
    /**
     * The name of a Built in or Custom DB Role to connect to an Atlas Cluster. See DBRoleToExecute.
     */
    readonly dbRoleToExecute: outputs.GetStreamConnectionDbRoleToExecute;
    readonly id: string;
    readonly instanceName: string;
    readonly projectId: string;
    /**
     * Properties for the secure transport connection to Kafka. For SSL, this can include the trusted certificate to use. See security.
     */
    readonly security: outputs.GetStreamConnectionSecurity;
    /**
     * Type of the DB role. Can be either BUILT_IN or CUSTOM.
     */
    readonly type: string;
}
/**
 * ## # Data Source: mongodbatlas.StreamConnection
 *
 * `mongodbatlas.StreamConnection` describes a stream connection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const example = mongodbatlas.getStreamConnection({
 *     projectId: "<PROJECT_ID>",
 *     instanceName: "<INSTANCE_NAME>",
 *     connectionName: "<CONNECTION_NAME>",
 * });
 * ```
 */
export function getStreamConnectionOutput(args: GetStreamConnectionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamConnectionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getStreamConnection:getStreamConnection", {
        "connectionName": args.connectionName,
        "instanceName": args.instanceName,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamConnection.
 */
export interface GetStreamConnectionOutputArgs {
    /**
     * Human-readable label that identifies the stream connection. In the case of the Sample type, this is the name of the sample source.
     */
    connectionName: pulumi.Input<string>;
    /**
     * Human-readable label that identifies the stream instance.
     */
    instanceName: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: pulumi.Input<string>;
}
