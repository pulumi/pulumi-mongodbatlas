// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # Data Source: mongodbatlas.getFlexSnapshots
 *
 * `mongodbatlas.getFlexSnapshots` returns all snapshots of a flex cluster.
 *
 * ## Example Usage
 *
 * ### S
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const snapshot = mongodbatlas.getFlexSnapshot({
 *     projectId: projectId,
 *     name: example_cluster.name,
 *     snapshotId: snapshotId,
 * });
 * const snapshots = mongodbatlas.getFlexSnapshots({
 *     projectId: projectId,
 *     name: example_cluster.name,
 * });
 * export const mongodbatlasFlexSnapshot = snapshot.then(snapshot => snapshot.name);
 * export const mongodbatlasFlexSnapshots = snapshots.then(snapshots => .map(snapshot => (snapshot.snapshotId)));
 * ```
 */
export function getFlexSnapshots(args: GetFlexSnapshotsArgs, opts?: pulumi.InvokeOptions): Promise<GetFlexSnapshotsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getFlexSnapshots:getFlexSnapshots", {
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlexSnapshots.
 */
export interface GetFlexSnapshotsArgs {
    /**
     * Human-readable label that identifies the flex cluster whose snapshot you want to restore.
     */
    name: string;
    /**
     * Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     */
    projectId: string;
}

/**
 * A collection of values returned by getFlexSnapshots.
 */
export interface GetFlexSnapshotsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Human-readable label that identifies the flex cluster whose snapshot you want to restore.
     */
    readonly name: string;
    /**
     * Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     */
    readonly projectId: string;
    readonly results: outputs.GetFlexSnapshotsResult[];
}
/**
 * ## # Data Source: mongodbatlas.getFlexSnapshots
 *
 * `mongodbatlas.getFlexSnapshots` returns all snapshots of a flex cluster.
 *
 * ## Example Usage
 *
 * ### S
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const snapshot = mongodbatlas.getFlexSnapshot({
 *     projectId: projectId,
 *     name: example_cluster.name,
 *     snapshotId: snapshotId,
 * });
 * const snapshots = mongodbatlas.getFlexSnapshots({
 *     projectId: projectId,
 *     name: example_cluster.name,
 * });
 * export const mongodbatlasFlexSnapshot = snapshot.then(snapshot => snapshot.name);
 * export const mongodbatlasFlexSnapshots = snapshots.then(snapshots => .map(snapshot => (snapshot.snapshotId)));
 * ```
 */
export function getFlexSnapshotsOutput(args: GetFlexSnapshotsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFlexSnapshotsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getFlexSnapshots:getFlexSnapshots", {
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlexSnapshots.
 */
export interface GetFlexSnapshotsOutputArgs {
    /**
     * Human-readable label that identifies the flex cluster whose snapshot you want to restore.
     */
    name: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     */
    projectId: pulumi.Input<string>;
}
