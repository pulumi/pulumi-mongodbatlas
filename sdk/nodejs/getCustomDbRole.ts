// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * `mongodbatlas.CustomDbRole` describe a Custom DB Role. This represents a custom db role.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
 */
export function getCustomDbRole(args: GetCustomDbRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomDbRoleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getCustomDbRole:getCustomDbRole", {
        "inheritedRoles": args.inheritedRoles,
        "projectId": args.projectId,
        "roleName": args.roleName,
    }, opts);
}

/**
 * A collection of arguments for invoking getCustomDbRole.
 */
export interface GetCustomDbRoleArgs {
    inheritedRoles?: inputs.GetCustomDbRoleInheritedRole[];
    /**
     * The unique ID for the project to create the database user.
     */
    projectId: string;
    /**
     * Name of the custom role.
     */
    roleName: string;
}

/**
 * A collection of values returned by getCustomDbRole.
 */
export interface GetCustomDbRoleResult {
    readonly actions: outputs.GetCustomDbRoleAction[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly inheritedRoles?: outputs.GetCustomDbRoleInheritedRole[];
    readonly projectId: string;
    /**
     * (Required) Name of the inherited role. This can either be another custom role or a built-in role.
     */
    readonly roleName: string;
}
/**
 * `mongodbatlas.CustomDbRole` describe a Custom DB Role. This represents a custom db role.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
 */
export function getCustomDbRoleOutput(args: GetCustomDbRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomDbRoleResult> {
    return pulumi.output(args).apply((a: any) => getCustomDbRole(a, opts))
}

/**
 * A collection of arguments for invoking getCustomDbRole.
 */
export interface GetCustomDbRoleOutputArgs {
    inheritedRoles?: pulumi.Input<pulumi.Input<inputs.GetCustomDbRoleInheritedRoleArgs>[]>;
    /**
     * The unique ID for the project to create the database user.
     */
    projectId: pulumi.Input<string>;
    /**
     * Name of the custom role.
     */
    roleName: pulumi.Input<string>;
}
