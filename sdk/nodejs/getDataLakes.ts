// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * `mongodbatlas.getDataLakes` describe all Data Lakes.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = pulumi.output(mongodbatlas.getDataLakes({
 *     projectId: "PROJECT ID",
 * }));
 * ```
 */
export function getDataLakes(args: GetDataLakesArgs, opts?: pulumi.InvokeOptions): Promise<GetDataLakesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("mongodbatlas:index/getDataLakes:getDataLakes", {
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataLakes.
 */
export interface GetDataLakesArgs {
    /**
     * The unique ID for the project to get all data lakes.
     */
    projectId: string;
}

/**
 * A collection of values returned by getDataLakes.
 */
export interface GetDataLakesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly projectId: string;
    /**
     * A list where each represents a Data lake.
     */
    readonly results: outputs.GetDataLakesResult[];
}

export function getDataLakesOutput(args: GetDataLakesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataLakesResult> {
    return pulumi.output(args).apply(a => getDataLakes(a, opts))
}

/**
 * A collection of arguments for invoking getDataLakes.
 */
export interface GetDataLakesOutputArgs {
    /**
     * The unique ID for the project to get all data lakes.
     */
    projectId: pulumi.Input<string>;
}
