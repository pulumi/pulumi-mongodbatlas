// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Data Source: mongodbatlas.getFlexSnapshot
 *
 * `mongodbatlas.getFlexSnapshot` describes a flex snapshot.
 *
 * ## Example Usage
 *
 * ### S
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const snapshot = mongodbatlas.getFlexSnapshot({
 *     projectId: projectId,
 *     name: example_cluster.name,
 *     snapshotId: snapshotId,
 * });
 * const snapshots = mongodbatlas.getFlexSnapshots({
 *     projectId: projectId,
 *     name: example_cluster.name,
 * });
 * export const mongodbatlasFlexSnapshot = snapshot.then(snapshot => snapshot.name);
 * export const mongodbatlasFlexSnapshots = snapshots.then(snapshots => .map(snapshot => (snapshot.snapshotId)));
 * ```
 */
export function getFlexSnapshot(args: GetFlexSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetFlexSnapshotResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getFlexSnapshot:getFlexSnapshot", {
        "name": args.name,
        "projectId": args.projectId,
        "snapshotId": args.snapshotId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlexSnapshot.
 */
export interface GetFlexSnapshotArgs {
    /**
     * Human-readable label that identifies the flex cluster whose snapshot you want to restore.
     */
    name: string;
    /**
     * Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     */
    projectId: string;
    snapshotId: string;
}

/**
 * A collection of values returned by getFlexSnapshot.
 */
export interface GetFlexSnapshotResult {
    readonly expiration: string;
    readonly finishTime: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly mongoDbVersion: string;
    /**
     * Human-readable label that identifies the flex cluster whose snapshot you want to restore.
     */
    readonly name: string;
    /**
     * Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     */
    readonly projectId: string;
    readonly scheduledTime: string;
    readonly snapshotId: string;
    readonly startTime: string;
    readonly status: string;
}
/**
 * ## # Data Source: mongodbatlas.getFlexSnapshot
 *
 * `mongodbatlas.getFlexSnapshot` describes a flex snapshot.
 *
 * ## Example Usage
 *
 * ### S
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const snapshot = mongodbatlas.getFlexSnapshot({
 *     projectId: projectId,
 *     name: example_cluster.name,
 *     snapshotId: snapshotId,
 * });
 * const snapshots = mongodbatlas.getFlexSnapshots({
 *     projectId: projectId,
 *     name: example_cluster.name,
 * });
 * export const mongodbatlasFlexSnapshot = snapshot.then(snapshot => snapshot.name);
 * export const mongodbatlasFlexSnapshots = snapshots.then(snapshots => .map(snapshot => (snapshot.snapshotId)));
 * ```
 */
export function getFlexSnapshotOutput(args: GetFlexSnapshotOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFlexSnapshotResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getFlexSnapshot:getFlexSnapshot", {
        "name": args.name,
        "projectId": args.projectId,
        "snapshotId": args.snapshotId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlexSnapshot.
 */
export interface GetFlexSnapshotOutputArgs {
    /**
     * Human-readable label that identifies the flex cluster whose snapshot you want to restore.
     */
    name: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     */
    projectId: pulumi.Input<string>;
    snapshotId: pulumi.Input<string>;
}
