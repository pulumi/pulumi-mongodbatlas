// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `mongodbatlas.getFederatedSettings` provides a federated settings data source. Atlas Cloud federated settings provides federated settings outputs.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const settings = mongodbatlas.getFederatedSettings({
 *     orgId: "627a9683e7f7f7ff7fe306f14",
 * });
 * ```
 */
export function getFederatedSettings(args: GetFederatedSettingsArgs, opts?: pulumi.InvokeOptions): Promise<GetFederatedSettingsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getFederatedSettings:getFederatedSettings", {
        "orgId": args.orgId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFederatedSettings.
 */
export interface GetFederatedSettingsArgs {
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
     */
    orgId: string;
}

/**
 * A collection of values returned by getFederatedSettings.
 */
export interface GetFederatedSettingsResult {
    /**
     * List that contains the domains associated with the organization's identity provider.
     */
    readonly federatedDomains: string[];
    /**
     * Flag that indicates whether this organization has role mappings configured.
     */
    readonly hasRoleMappings: boolean;
    /**
     * Unique 24-hexadecimal digit string that identifies this federation.
     */
    readonly id: string;
    /**
     * Unique 20-hexadecimal digit string that identifies the identity provider connected to this organization.
     */
    readonly identityProviderId: string;
    /**
     * Value that indicates whether the identity provider is active. Atlas returns ACTIVE if the identity provider is active and INACTIVE if the identity provider is inactive.
     */
    readonly identityProviderStatus: string;
    readonly orgId: string;
}
/**
 * `mongodbatlas.getFederatedSettings` provides a federated settings data source. Atlas Cloud federated settings provides federated settings outputs.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const settings = mongodbatlas.getFederatedSettings({
 *     orgId: "627a9683e7f7f7ff7fe306f14",
 * });
 * ```
 */
export function getFederatedSettingsOutput(args: GetFederatedSettingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFederatedSettingsResult> {
    return pulumi.output(args).apply((a: any) => getFederatedSettings(a, opts))
}

/**
 * A collection of arguments for invoking getFederatedSettings.
 */
export interface GetFederatedSettingsOutputArgs {
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
     */
    orgId: pulumi.Input<string>;
}
