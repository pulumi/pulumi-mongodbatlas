// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * Private Endpoint Link Connection can be imported using project ID and username, in the format `{project_id}--{private_link_id}--{endpoint_service_id}--{provider_name}`, e.g.
 *
 * ```sh
 * $ pulumi import mongodbatlas:index/privateLinkEndpointService:PrivateLinkEndpointService test 1112222b3bf99403840e8934--3242342343112--vpce-4242342343--AWS
 * ```
 * See detailed information for arguments and attributes: [MongoDB API Private Endpoint Link Connection](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/)
 */
export class PrivateLinkEndpointService extends pulumi.CustomResource {
    /**
     * Get an existing PrivateLinkEndpointService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivateLinkEndpointServiceState, opts?: pulumi.CustomResourceOptions): PrivateLinkEndpointService {
        return new PrivateLinkEndpointService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mongodbatlas:index/privateLinkEndpointService:PrivateLinkEndpointService';

    /**
     * Returns true if the given object is an instance of PrivateLinkEndpointService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrivateLinkEndpointService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivateLinkEndpointService.__pulumiType;
    }

    /**
     * Status of the interface endpoint for AWS.
     * Returns one of the following values:
     * * `NONE` - Atlas created the network load balancer and VPC endpoint service, but AWS hasn't yet created the VPC endpoint.
     * * `PENDING_ACCEPTANCE` - AWS has received the connection request from your VPC endpoint to the Atlas VPC endpoint service.
     * * `PENDING` - AWS is establishing the connection between your VPC endpoint and the Atlas VPC endpoint service.
     * * `AVAILABLE` - Atlas VPC resources are connected to the VPC endpoint in your VPC. You can connect to Atlas clusters in this region using AWS PrivateLink.
     * * `REJECTED` - AWS failed to establish a connection between Atlas VPC resources to the VPC endpoint in your VPC.
     * * `DELETING` - Atlas is removing the interface endpoint from the private endpoint connection.
     */
    declare public /*out*/ readonly awsConnectionStatus: pulumi.Output<string>;
    /**
     * Status of the interface endpoint for AZURE.
     * Returns one of the following values:
     * * `INITIATING` - Atlas has not yet accepted the connection to your private endpoint.
     * * `AVAILABLE` - Atlas approved the connection to your private endpoint.
     * * `FAILED` - Atlas failed to accept the connection your private endpoint.
     * * `DELETING` - Atlas is removing the connection to your private endpoint from the Private Link service.
     */
    declare public /*out*/ readonly azureStatus: pulumi.Output<string>;
    /**
     * Indicates if Atlas received a request to remove the interface endpoint from the private endpoint connection.
     */
    declare public /*out*/ readonly deleteRequested: pulumi.Output<boolean>;
    /**
     * (Optional) Unique identifier of the endpoint group. The endpoint group encompasses all of the endpoints that you created in GCP.
     */
    declare public /*out*/ readonly endpointGroupName: pulumi.Output<string>;
    /**
     * Unique identifier of the interface endpoint you created in your VPC with the `AWS`, `AZURE` or `GCP` resource.
     */
    declare public readonly endpointServiceId: pulumi.Output<string>;
    /**
     * Collection of individual private endpoints that comprise your endpoint group. Only for `GCP`. See below.
     */
    declare public readonly endpoints: pulumi.Output<outputs.PrivateLinkEndpointServiceEndpoint[]>;
    /**
     * Error message pertaining to the interface endpoint. Returns null if there are no errors.
     */
    declare public /*out*/ readonly errorMessage: pulumi.Output<string>;
    /**
     * Unique identifier of the GCP project in which you created your endpoints. Only for `GCP`.
     */
    declare public readonly gcpProjectId: pulumi.Output<string | undefined>;
    /**
     * Status of the interface endpoint for GCP.
     * Returns one of the following values:
     * * `INITIATING` - Atlas has not yet accepted the connection to your private endpoint.
     * * `AVAILABLE` - Atlas approved the connection to your private endpoint.
     * * `FAILED` - Atlas failed to accept the connection your private endpoint.
     * * `DELETING` - Atlas is removing the connection to your private endpoint from the Private Link service.
     */
    declare public /*out*/ readonly gcpStatus: pulumi.Output<string>;
    /**
     * Unique identifier of the interface endpoint.
     */
    declare public /*out*/ readonly interfaceEndpointId: pulumi.Output<string>;
    /**
     * Name of the connection for this private endpoint that Atlas generates.
     */
    declare public /*out*/ readonly privateEndpointConnectionName: pulumi.Output<string>;
    /**
     * Private IP address of the private endpoint network interface you created in your Azure VNet. Only for `AZURE`.
     */
    declare public readonly privateEndpointIpAddress: pulumi.Output<string>;
    /**
     * Unique identifier of the private endpoint.
     */
    declare public /*out*/ readonly privateEndpointResourceId: pulumi.Output<string>;
    /**
     * Unique identifier of the `AWS` or `AZURE` PrivateLink connection which is created by `mongodbatlas.PrivateLinkEndpoint` resource.
     */
    declare public readonly privateLinkId: pulumi.Output<string>;
    /**
     * Unique identifier for the project.
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * Cloud provider for which you want to create a private endpoint. Atlas accepts `AWS`, `AZURE` or `GCP`.
     */
    declare public readonly providerName: pulumi.Output<string>;

    /**
     * Create a PrivateLinkEndpointService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivateLinkEndpointServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivateLinkEndpointServiceArgs | PrivateLinkEndpointServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivateLinkEndpointServiceState | undefined;
            resourceInputs["awsConnectionStatus"] = state?.awsConnectionStatus;
            resourceInputs["azureStatus"] = state?.azureStatus;
            resourceInputs["deleteRequested"] = state?.deleteRequested;
            resourceInputs["endpointGroupName"] = state?.endpointGroupName;
            resourceInputs["endpointServiceId"] = state?.endpointServiceId;
            resourceInputs["endpoints"] = state?.endpoints;
            resourceInputs["errorMessage"] = state?.errorMessage;
            resourceInputs["gcpProjectId"] = state?.gcpProjectId;
            resourceInputs["gcpStatus"] = state?.gcpStatus;
            resourceInputs["interfaceEndpointId"] = state?.interfaceEndpointId;
            resourceInputs["privateEndpointConnectionName"] = state?.privateEndpointConnectionName;
            resourceInputs["privateEndpointIpAddress"] = state?.privateEndpointIpAddress;
            resourceInputs["privateEndpointResourceId"] = state?.privateEndpointResourceId;
            resourceInputs["privateLinkId"] = state?.privateLinkId;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["providerName"] = state?.providerName;
        } else {
            const args = argsOrState as PrivateLinkEndpointServiceArgs | undefined;
            if (args?.endpointServiceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'endpointServiceId'");
            }
            if (args?.privateLinkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'privateLinkId'");
            }
            if (args?.projectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if (args?.providerName === undefined && !opts.urn) {
                throw new Error("Missing required property 'providerName'");
            }
            resourceInputs["endpointServiceId"] = args?.endpointServiceId;
            resourceInputs["endpoints"] = args?.endpoints;
            resourceInputs["gcpProjectId"] = args?.gcpProjectId;
            resourceInputs["privateEndpointIpAddress"] = args?.privateEndpointIpAddress;
            resourceInputs["privateLinkId"] = args?.privateLinkId;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["providerName"] = args?.providerName;
            resourceInputs["awsConnectionStatus"] = undefined /*out*/;
            resourceInputs["azureStatus"] = undefined /*out*/;
            resourceInputs["deleteRequested"] = undefined /*out*/;
            resourceInputs["endpointGroupName"] = undefined /*out*/;
            resourceInputs["errorMessage"] = undefined /*out*/;
            resourceInputs["gcpStatus"] = undefined /*out*/;
            resourceInputs["interfaceEndpointId"] = undefined /*out*/;
            resourceInputs["privateEndpointConnectionName"] = undefined /*out*/;
            resourceInputs["privateEndpointResourceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrivateLinkEndpointService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PrivateLinkEndpointService resources.
 */
export interface PrivateLinkEndpointServiceState {
    /**
     * Status of the interface endpoint for AWS.
     * Returns one of the following values:
     * * `NONE` - Atlas created the network load balancer and VPC endpoint service, but AWS hasn't yet created the VPC endpoint.
     * * `PENDING_ACCEPTANCE` - AWS has received the connection request from your VPC endpoint to the Atlas VPC endpoint service.
     * * `PENDING` - AWS is establishing the connection between your VPC endpoint and the Atlas VPC endpoint service.
     * * `AVAILABLE` - Atlas VPC resources are connected to the VPC endpoint in your VPC. You can connect to Atlas clusters in this region using AWS PrivateLink.
     * * `REJECTED` - AWS failed to establish a connection between Atlas VPC resources to the VPC endpoint in your VPC.
     * * `DELETING` - Atlas is removing the interface endpoint from the private endpoint connection.
     */
    awsConnectionStatus?: pulumi.Input<string>;
    /**
     * Status of the interface endpoint for AZURE.
     * Returns one of the following values:
     * * `INITIATING` - Atlas has not yet accepted the connection to your private endpoint.
     * * `AVAILABLE` - Atlas approved the connection to your private endpoint.
     * * `FAILED` - Atlas failed to accept the connection your private endpoint.
     * * `DELETING` - Atlas is removing the connection to your private endpoint from the Private Link service.
     */
    azureStatus?: pulumi.Input<string>;
    /**
     * Indicates if Atlas received a request to remove the interface endpoint from the private endpoint connection.
     */
    deleteRequested?: pulumi.Input<boolean>;
    /**
     * (Optional) Unique identifier of the endpoint group. The endpoint group encompasses all of the endpoints that you created in GCP.
     */
    endpointGroupName?: pulumi.Input<string>;
    /**
     * Unique identifier of the interface endpoint you created in your VPC with the `AWS`, `AZURE` or `GCP` resource.
     */
    endpointServiceId?: pulumi.Input<string>;
    /**
     * Collection of individual private endpoints that comprise your endpoint group. Only for `GCP`. See below.
     */
    endpoints?: pulumi.Input<pulumi.Input<inputs.PrivateLinkEndpointServiceEndpoint>[]>;
    /**
     * Error message pertaining to the interface endpoint. Returns null if there are no errors.
     */
    errorMessage?: pulumi.Input<string>;
    /**
     * Unique identifier of the GCP project in which you created your endpoints. Only for `GCP`.
     */
    gcpProjectId?: pulumi.Input<string>;
    /**
     * Status of the interface endpoint for GCP.
     * Returns one of the following values:
     * * `INITIATING` - Atlas has not yet accepted the connection to your private endpoint.
     * * `AVAILABLE` - Atlas approved the connection to your private endpoint.
     * * `FAILED` - Atlas failed to accept the connection your private endpoint.
     * * `DELETING` - Atlas is removing the connection to your private endpoint from the Private Link service.
     */
    gcpStatus?: pulumi.Input<string>;
    /**
     * Unique identifier of the interface endpoint.
     */
    interfaceEndpointId?: pulumi.Input<string>;
    /**
     * Name of the connection for this private endpoint that Atlas generates.
     */
    privateEndpointConnectionName?: pulumi.Input<string>;
    /**
     * Private IP address of the private endpoint network interface you created in your Azure VNet. Only for `AZURE`.
     */
    privateEndpointIpAddress?: pulumi.Input<string>;
    /**
     * Unique identifier of the private endpoint.
     */
    privateEndpointResourceId?: pulumi.Input<string>;
    /**
     * Unique identifier of the `AWS` or `AZURE` PrivateLink connection which is created by `mongodbatlas.PrivateLinkEndpoint` resource.
     */
    privateLinkId?: pulumi.Input<string>;
    /**
     * Unique identifier for the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Cloud provider for which you want to create a private endpoint. Atlas accepts `AWS`, `AZURE` or `GCP`.
     */
    providerName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PrivateLinkEndpointService resource.
 */
export interface PrivateLinkEndpointServiceArgs {
    /**
     * Unique identifier of the interface endpoint you created in your VPC with the `AWS`, `AZURE` or `GCP` resource.
     */
    endpointServiceId: pulumi.Input<string>;
    /**
     * Collection of individual private endpoints that comprise your endpoint group. Only for `GCP`. See below.
     */
    endpoints?: pulumi.Input<pulumi.Input<inputs.PrivateLinkEndpointServiceEndpoint>[]>;
    /**
     * Unique identifier of the GCP project in which you created your endpoints. Only for `GCP`.
     */
    gcpProjectId?: pulumi.Input<string>;
    /**
     * Private IP address of the private endpoint network interface you created in your Azure VNet. Only for `AZURE`.
     */
    privateEndpointIpAddress?: pulumi.Input<string>;
    /**
     * Unique identifier of the `AWS` or `AZURE` PrivateLink connection which is created by `mongodbatlas.PrivateLinkEndpoint` resource.
     */
    privateLinkId: pulumi.Input<string>;
    /**
     * Unique identifier for the project.
     */
    projectId: pulumi.Input<string>;
    /**
     * Cloud provider for which you want to create a private endpoint. Atlas accepts `AWS`, `AZURE` or `GCP`.
     */
    providerName: pulumi.Input<string>;
}
