// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `mongodbatlas.PrivateLinkEndpoint` describe a Private Endpoint. This represents a Private Endpoint Connection to retrieve details regarding a private endpoint by id in an Atlas project
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testPrivateLinkEndpoint = new mongodbatlas.PrivateLinkEndpoint("test", {
 *     projectId: "<PROJECT-ID>",
 *     providerName: "AWS",
 *     region: "US_EAST_1",
 * });
 * const test = mongodbatlas.getPrivateLinkEndpointOutput({
 *     projectId: testPrivateLinkEndpoint.projectId,
 *     privateLinkId: testPrivateLinkEndpoint.privateLinkId,
 *     providerName: "AWS",
 * });
 * ```
 *
 * ### Available complete examples
 * - Setup private connection to a MongoDB Atlas Cluster with AWS VPC
 */
export function getPrivateLinkEndpoint(args: GetPrivateLinkEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivateLinkEndpointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getPrivateLinkEndpoint:getPrivateLinkEndpoint", {
        "privateLinkId": args.privateLinkId,
        "projectId": args.projectId,
        "providerName": args.providerName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrivateLinkEndpoint.
 */
export interface GetPrivateLinkEndpointArgs {
    /**
     * Unique identifier of the private endpoint service that you want to retrieve.
     */
    privateLinkId: string;
    /**
     * Unique identifier for the project.
     */
    projectId: string;
    /**
     * Cloud provider for which you want to retrieve a private endpoint service. Atlas accepts `AWS`, `AZURE` or `GCP`.
     */
    providerName: string;
}

/**
 * A collection of values returned by getPrivateLinkEndpoint.
 */
export interface GetPrivateLinkEndpointResult {
    /**
     * GCP network endpoint groups corresponding to the Private Service Connect endpoint service.
     */
    readonly endpointGroupNames: string[];
    /**
     * Name of the PrivateLink endpoint service in AWS. Returns null while the endpoint service is being created.
     */
    readonly endpointServiceName: string;
    /**
     * Error message pertaining to the AWS PrivateLink connection. Returns null if there are no errors.
     */
    readonly errorMessage: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Unique identifiers of the interface endpoints in your VPC that you added to the AWS PrivateLink connection.
     */
    readonly interfaceEndpoints: string[];
    /**
     * All private endpoints that you have added to this Azure Private Link Service.
     */
    readonly privateEndpoints: string[];
    readonly privateLinkId: string;
    /**
     * Name of the Azure Private Link Service that Atlas manages.
     */
    readonly privateLinkServiceName: string;
    /**
     * Resource ID of the Azure Private Link Service that Atlas manages.
     */
    readonly privateLinkServiceResourceId: string;
    readonly projectId: string;
    readonly providerName: string;
    /**
     * GCP region for the Private Service Connect endpoint service.
     */
    readonly regionName: string;
    /**
     * Unique alphanumeric and special character strings that identify the service attachments associated with the GCP Private Service Connect endpoint service.
     */
    readonly serviceAttachmentNames: string[];
    /**
     * Status of the AWS PrivateLink connection.
     * Returns one of the following values:
     * * `AVAILABLE` 	Atlas created the load balancer and the Private Link Service.
     * * `INITIATING` 	Atlas is creating the network load balancer and VPC endpoint service.
     * * `WAITING_FOR_USER` The Atlas network load balancer and VPC endpoint service are created and ready to receive connection requests. When you receive this status, create an interface endpoint to continue configuring the AWS PrivateLink connection.
     * * `FAILED` 	A system failure has occurred.
     * * `DELETING` 	The Private Link service is being deleted.
     */
    readonly status: string;
}
/**
 * `mongodbatlas.PrivateLinkEndpoint` describe a Private Endpoint. This represents a Private Endpoint Connection to retrieve details regarding a private endpoint by id in an Atlas project
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testPrivateLinkEndpoint = new mongodbatlas.PrivateLinkEndpoint("test", {
 *     projectId: "<PROJECT-ID>",
 *     providerName: "AWS",
 *     region: "US_EAST_1",
 * });
 * const test = mongodbatlas.getPrivateLinkEndpointOutput({
 *     projectId: testPrivateLinkEndpoint.projectId,
 *     privateLinkId: testPrivateLinkEndpoint.privateLinkId,
 *     providerName: "AWS",
 * });
 * ```
 *
 * ### Available complete examples
 * - Setup private connection to a MongoDB Atlas Cluster with AWS VPC
 */
export function getPrivateLinkEndpointOutput(args: GetPrivateLinkEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrivateLinkEndpointResult> {
    return pulumi.output(args).apply((a: any) => getPrivateLinkEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getPrivateLinkEndpoint.
 */
export interface GetPrivateLinkEndpointOutputArgs {
    /**
     * Unique identifier of the private endpoint service that you want to retrieve.
     */
    privateLinkId: pulumi.Input<string>;
    /**
     * Unique identifier for the project.
     */
    projectId: pulumi.Input<string>;
    /**
     * Cloud provider for which you want to retrieve a private endpoint service. Atlas accepts `AWS`, `AZURE` or `GCP`.
     */
    providerName: pulumi.Input<string>;
}
