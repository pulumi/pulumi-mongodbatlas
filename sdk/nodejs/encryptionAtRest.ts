// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * `mongodbatlas..EncryptionAtRest` Allows management of encryption at rest for an Atlas project with one of the following providers:
 *
 * [Amazon Web Services Key Management Service](https://docs.atlas.mongodb.com/security-aws-kms/#security-aws-kms)
 * [Azure Key Vault](https://docs.atlas.mongodb.com/security-azure-kms/#security-azure-kms)
 * [Google Cloud KMS](https://docs.atlas.mongodb.com/security-gcp-kms/#security-gcp-kms)
 *
 * After configuring at least one Encryption at Rest provider for the Atlas project, Project Owners can enable Encryption at Rest for each Atlas cluster for which they require encryption. The Encryption at Rest provider does not have to match the cluster cloud service provider.
 *
 * Atlas does not automatically rotate user-managed encryption keys. Defer to your preferred Encryption at Rest providerâ€™s documentation and guidance for best practices on key rotation. Atlas automatically creates a 365-day key rotation alert when you configure Encryption at Rest using your Key Management in an Atlas project.
 *
 * See [Encryption at Rest](https://docs.atlas.mongodb.com/security-kms-encryption/index.html) for more information, including prerequisites and restrictions.
 *
 * > **IMPORTANT** Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 *
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = new mongodbatlas.EncryptionAtRest("test", {
 *     awsKms: {
 *         access_key_id: "AKIAIOSFODNN7EXAMPLE",
 *         customer_master_key_id: "030gce02-586d-48d2-a966-05ea954fde0g",
 *         enabled: true,
 *         region: "US_EAST_1",
 *         secret_access_key: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
 *     },
 *     azureKeyVault: {
 *         azure_environment: "AZURE",
 *         client_id: "g54f9e2-89e3-40fd-8188-EXAMPLEID",
 *         enabled: true,
 *         key_identifier: "https://EXAMPLEKeyVault.vault.azure.net/keys/EXAMPLEKey/d891821e3d364e9eb88fbd3d11807b86",
 *         key_vault_name: "EXAMPLEKeyVault",
 *         resource_group_name: "ExampleRGName",
 *         secret: "EXAMPLESECRET",
 *         subscription_id: "0ec944e3-g725-44f9-a147-EXAMPLEID",
 *         tenant_id: "e8e4b6ba-ff32-4c88-a9af-EXAMPLEID",
 *     },
 *     googleCloudKms: {
 *         enabled: true,
 *         key_version_resource_id: "projects/my-project-common-0/locations/us-east4/keyRings/my-key-ring-0/cryptoKeys/my-key-0/cryptoKeyVersions/1",
 *         service_account_key: "{\"type\": \"service_account\",\"project_id\": \"my-project-common-0\",\"private_key_id\": \"e120598ea4f88249469fcdd75a9a785c1bb3\",\"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEuwIBA(truncated)SfecnS0mT94D9\\n-----END PRIVATE KEY-----\\n\",\"client_email\": \"my-email-kms-0@my-project-common-0.iam.gserviceaccount.com\",\"client_id\": \"10180967717292066\",\"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/my-email-kms-0%40my-project-common-0.iam.gserviceaccount.com\"}",
 *     },
 *     projectId: "<PROJECT-ID>",
 * });
 * ```
 */
export class EncryptionAtRest extends pulumi.CustomResource {
    /**
     * Get an existing EncryptionAtRest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EncryptionAtRestState, opts?: pulumi.CustomResourceOptions): EncryptionAtRest {
        return new EncryptionAtRest(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mongodbatlas:index/encryptionAtRest:EncryptionAtRest';

    /**
     * Returns true if the given object is an instance of EncryptionAtRest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EncryptionAtRest {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EncryptionAtRest.__pulumiType;
    }

    /**
     * Specifies AWS KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
     */
    public readonly awsKms!: pulumi.Output<outputs.EncryptionAtRestAwsKms | undefined>;
    /**
     * Specifies Azure Key Vault configuration details and whether Encryption at Rest is enabled for an Atlas project.
     */
    public readonly azureKeyVault!: pulumi.Output<outputs.EncryptionAtRestAzureKeyVault | undefined>;
    /**
     * Specifies GCP KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
     */
    public readonly googleCloudKms!: pulumi.Output<outputs.EncryptionAtRestGoogleCloudKms | undefined>;
    /**
     * The unique identifier for the project.
     */
    public readonly projectId!: pulumi.Output<string>;

    /**
     * Create a EncryptionAtRest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EncryptionAtRestArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EncryptionAtRestArgs | EncryptionAtRestState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as EncryptionAtRestState | undefined;
            inputs["awsKms"] = state ? state.awsKms : undefined;
            inputs["azureKeyVault"] = state ? state.azureKeyVault : undefined;
            inputs["googleCloudKms"] = state ? state.googleCloudKms : undefined;
            inputs["projectId"] = state ? state.projectId : undefined;
        } else {
            const args = argsOrState as EncryptionAtRestArgs | undefined;
            if (!args || args.projectId === undefined) {
                throw new Error("Missing required property 'projectId'");
            }
            inputs["awsKms"] = args ? args.awsKms : undefined;
            inputs["azureKeyVault"] = args ? args.azureKeyVault : undefined;
            inputs["googleCloudKms"] = args ? args.googleCloudKms : undefined;
            inputs["projectId"] = args ? args.projectId : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(EncryptionAtRest.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EncryptionAtRest resources.
 */
export interface EncryptionAtRestState {
    /**
     * Specifies AWS KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
     */
    readonly awsKms?: pulumi.Input<inputs.EncryptionAtRestAwsKms>;
    /**
     * Specifies Azure Key Vault configuration details and whether Encryption at Rest is enabled for an Atlas project.
     */
    readonly azureKeyVault?: pulumi.Input<inputs.EncryptionAtRestAzureKeyVault>;
    /**
     * Specifies GCP KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
     */
    readonly googleCloudKms?: pulumi.Input<inputs.EncryptionAtRestGoogleCloudKms>;
    /**
     * The unique identifier for the project.
     */
    readonly projectId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EncryptionAtRest resource.
 */
export interface EncryptionAtRestArgs {
    /**
     * Specifies AWS KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
     */
    readonly awsKms?: pulumi.Input<inputs.EncryptionAtRestAwsKms>;
    /**
     * Specifies Azure Key Vault configuration details and whether Encryption at Rest is enabled for an Atlas project.
     */
    readonly azureKeyVault?: pulumi.Input<inputs.EncryptionAtRestAzureKeyVault>;
    /**
     * Specifies GCP KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
     */
    readonly googleCloudKms?: pulumi.Input<inputs.EncryptionAtRestGoogleCloudKms>;
    /**
     * The unique identifier for the project.
     */
    readonly projectId: pulumi.Input<string>;
}
