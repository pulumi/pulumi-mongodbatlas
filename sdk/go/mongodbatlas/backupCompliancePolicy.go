// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Backup Compliance Policy entries can be imported using project project_id
//
// in the format `project_id`, e.g.
//
// ```sh
//
//	$ pulumi import mongodbatlas:index/backupCompliancePolicy:BackupCompliancePolicy backup_policy 5d0f1f73cf09a29120e173cf
//
// ```
//
//	For more information see[MongoDB Atlas API Reference](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Cloud-Backups/operation/updateDataProtectionSettings) and [Backup Compliance Policy Prohibited Actions](https://www.mongodb.com/docs/atlas/backup/cloud-backup/backup-compliance-policy/#prohibited-actions).
type BackupCompliancePolicy struct {
	pulumi.CustomResourceState

	// Email address of a security or legal representative for the Backup Compliance Policy who is authorized to update the Backup Compliance Policy settings.
	AuthorizedEmail pulumi.StringOutput `pulumi:"authorizedEmail"`
	// Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
	CopyProtectionEnabled pulumi.BoolOutput `pulumi:"copyProtectionEnabled"`
	// Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
	EncryptionAtRestEnabled pulumi.BoolOutput                              `pulumi:"encryptionAtRestEnabled"`
	OnDemandPolicyItem      BackupCompliancePolicyOnDemandPolicyItemOutput `pulumi:"onDemandPolicyItem"`
	// Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
	PitEnabled          pulumi.BoolOutput                                  `pulumi:"pitEnabled"`
	PolicyItemDaily     BackupCompliancePolicyPolicyItemDailyPtrOutput     `pulumi:"policyItemDaily"`
	PolicyItemHourly    BackupCompliancePolicyPolicyItemHourlyPtrOutput    `pulumi:"policyItemHourly"`
	PolicyItemMonthlies BackupCompliancePolicyPolicyItemMonthlyArrayOutput `pulumi:"policyItemMonthlies"`
	PolicyItemWeeklies  BackupCompliancePolicyPolicyItemWeeklyArrayOutput  `pulumi:"policyItemWeeklies"`
	// Unique 24-hexadecimal digit string that identifies your project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
	RestoreWindowDays pulumi.IntOutput `pulumi:"restoreWindowDays"`
	// Label that indicates the state of the Backup Compliance Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
	State pulumi.StringOutput `pulumi:"state"`
	// ISO 8601 timestamp format in UTC that indicates when the user updated the Data Protection Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
	UpdatedDate pulumi.StringOutput `pulumi:"updatedDate"`
	// Email address that identifies the user who updated the Backup Compliance Policy settings. MongoDB Cloud ignores this email setting when you enable or update the Backup Compliance Policy settings.
	UpdatedUser pulumi.StringOutput `pulumi:"updatedUser"`
}

// NewBackupCompliancePolicy registers a new resource with the given unique name, arguments, and options.
func NewBackupCompliancePolicy(ctx *pulumi.Context,
	name string, args *BackupCompliancePolicyArgs, opts ...pulumi.ResourceOption) (*BackupCompliancePolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthorizedEmail == nil {
		return nil, errors.New("invalid value for required argument 'AuthorizedEmail'")
	}
	if args.CopyProtectionEnabled == nil {
		return nil, errors.New("invalid value for required argument 'CopyProtectionEnabled'")
	}
	if args.EncryptionAtRestEnabled == nil {
		return nil, errors.New("invalid value for required argument 'EncryptionAtRestEnabled'")
	}
	if args.OnDemandPolicyItem == nil {
		return nil, errors.New("invalid value for required argument 'OnDemandPolicyItem'")
	}
	if args.PitEnabled == nil {
		return nil, errors.New("invalid value for required argument 'PitEnabled'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BackupCompliancePolicy
	err := ctx.RegisterResource("mongodbatlas:index/backupCompliancePolicy:BackupCompliancePolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupCompliancePolicy gets an existing BackupCompliancePolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupCompliancePolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupCompliancePolicyState, opts ...pulumi.ResourceOption) (*BackupCompliancePolicy, error) {
	var resource BackupCompliancePolicy
	err := ctx.ReadResource("mongodbatlas:index/backupCompliancePolicy:BackupCompliancePolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupCompliancePolicy resources.
type backupCompliancePolicyState struct {
	// Email address of a security or legal representative for the Backup Compliance Policy who is authorized to update the Backup Compliance Policy settings.
	AuthorizedEmail *string `pulumi:"authorizedEmail"`
	// Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
	CopyProtectionEnabled *bool `pulumi:"copyProtectionEnabled"`
	// Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
	EncryptionAtRestEnabled *bool                                     `pulumi:"encryptionAtRestEnabled"`
	OnDemandPolicyItem      *BackupCompliancePolicyOnDemandPolicyItem `pulumi:"onDemandPolicyItem"`
	// Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
	PitEnabled          *bool                                     `pulumi:"pitEnabled"`
	PolicyItemDaily     *BackupCompliancePolicyPolicyItemDaily    `pulumi:"policyItemDaily"`
	PolicyItemHourly    *BackupCompliancePolicyPolicyItemHourly   `pulumi:"policyItemHourly"`
	PolicyItemMonthlies []BackupCompliancePolicyPolicyItemMonthly `pulumi:"policyItemMonthlies"`
	PolicyItemWeeklies  []BackupCompliancePolicyPolicyItemWeekly  `pulumi:"policyItemWeeklies"`
	// Unique 24-hexadecimal digit string that identifies your project.
	ProjectId *string `pulumi:"projectId"`
	// Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
	RestoreWindowDays *int `pulumi:"restoreWindowDays"`
	// Label that indicates the state of the Backup Compliance Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
	State *string `pulumi:"state"`
	// ISO 8601 timestamp format in UTC that indicates when the user updated the Data Protection Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
	UpdatedDate *string `pulumi:"updatedDate"`
	// Email address that identifies the user who updated the Backup Compliance Policy settings. MongoDB Cloud ignores this email setting when you enable or update the Backup Compliance Policy settings.
	UpdatedUser *string `pulumi:"updatedUser"`
}

type BackupCompliancePolicyState struct {
	// Email address of a security or legal representative for the Backup Compliance Policy who is authorized to update the Backup Compliance Policy settings.
	AuthorizedEmail pulumi.StringPtrInput
	// Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
	CopyProtectionEnabled pulumi.BoolPtrInput
	// Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
	EncryptionAtRestEnabled pulumi.BoolPtrInput
	OnDemandPolicyItem      BackupCompliancePolicyOnDemandPolicyItemPtrInput
	// Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
	PitEnabled          pulumi.BoolPtrInput
	PolicyItemDaily     BackupCompliancePolicyPolicyItemDailyPtrInput
	PolicyItemHourly    BackupCompliancePolicyPolicyItemHourlyPtrInput
	PolicyItemMonthlies BackupCompliancePolicyPolicyItemMonthlyArrayInput
	PolicyItemWeeklies  BackupCompliancePolicyPolicyItemWeeklyArrayInput
	// Unique 24-hexadecimal digit string that identifies your project.
	ProjectId pulumi.StringPtrInput
	// Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
	RestoreWindowDays pulumi.IntPtrInput
	// Label that indicates the state of the Backup Compliance Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
	State pulumi.StringPtrInput
	// ISO 8601 timestamp format in UTC that indicates when the user updated the Data Protection Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
	UpdatedDate pulumi.StringPtrInput
	// Email address that identifies the user who updated the Backup Compliance Policy settings. MongoDB Cloud ignores this email setting when you enable or update the Backup Compliance Policy settings.
	UpdatedUser pulumi.StringPtrInput
}

func (BackupCompliancePolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupCompliancePolicyState)(nil)).Elem()
}

type backupCompliancePolicyArgs struct {
	// Email address of a security or legal representative for the Backup Compliance Policy who is authorized to update the Backup Compliance Policy settings.
	AuthorizedEmail string `pulumi:"authorizedEmail"`
	// Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
	CopyProtectionEnabled bool `pulumi:"copyProtectionEnabled"`
	// Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
	EncryptionAtRestEnabled bool                                     `pulumi:"encryptionAtRestEnabled"`
	OnDemandPolicyItem      BackupCompliancePolicyOnDemandPolicyItem `pulumi:"onDemandPolicyItem"`
	// Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
	PitEnabled          bool                                      `pulumi:"pitEnabled"`
	PolicyItemDaily     *BackupCompliancePolicyPolicyItemDaily    `pulumi:"policyItemDaily"`
	PolicyItemHourly    *BackupCompliancePolicyPolicyItemHourly   `pulumi:"policyItemHourly"`
	PolicyItemMonthlies []BackupCompliancePolicyPolicyItemMonthly `pulumi:"policyItemMonthlies"`
	PolicyItemWeeklies  []BackupCompliancePolicyPolicyItemWeekly  `pulumi:"policyItemWeeklies"`
	// Unique 24-hexadecimal digit string that identifies your project.
	ProjectId string `pulumi:"projectId"`
	// Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
	RestoreWindowDays *int `pulumi:"restoreWindowDays"`
}

// The set of arguments for constructing a BackupCompliancePolicy resource.
type BackupCompliancePolicyArgs struct {
	// Email address of a security or legal representative for the Backup Compliance Policy who is authorized to update the Backup Compliance Policy settings.
	AuthorizedEmail pulumi.StringInput
	// Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
	CopyProtectionEnabled pulumi.BoolInput
	// Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
	EncryptionAtRestEnabled pulumi.BoolInput
	OnDemandPolicyItem      BackupCompliancePolicyOnDemandPolicyItemInput
	// Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
	PitEnabled          pulumi.BoolInput
	PolicyItemDaily     BackupCompliancePolicyPolicyItemDailyPtrInput
	PolicyItemHourly    BackupCompliancePolicyPolicyItemHourlyPtrInput
	PolicyItemMonthlies BackupCompliancePolicyPolicyItemMonthlyArrayInput
	PolicyItemWeeklies  BackupCompliancePolicyPolicyItemWeeklyArrayInput
	// Unique 24-hexadecimal digit string that identifies your project.
	ProjectId pulumi.StringInput
	// Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
	RestoreWindowDays pulumi.IntPtrInput
}

func (BackupCompliancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupCompliancePolicyArgs)(nil)).Elem()
}

type BackupCompliancePolicyInput interface {
	pulumi.Input

	ToBackupCompliancePolicyOutput() BackupCompliancePolicyOutput
	ToBackupCompliancePolicyOutputWithContext(ctx context.Context) BackupCompliancePolicyOutput
}

func (*BackupCompliancePolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupCompliancePolicy)(nil)).Elem()
}

func (i *BackupCompliancePolicy) ToBackupCompliancePolicyOutput() BackupCompliancePolicyOutput {
	return i.ToBackupCompliancePolicyOutputWithContext(context.Background())
}

func (i *BackupCompliancePolicy) ToBackupCompliancePolicyOutputWithContext(ctx context.Context) BackupCompliancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyOutput)
}

// BackupCompliancePolicyArrayInput is an input type that accepts BackupCompliancePolicyArray and BackupCompliancePolicyArrayOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyArrayInput` via:
//
//	BackupCompliancePolicyArray{ BackupCompliancePolicyArgs{...} }
type BackupCompliancePolicyArrayInput interface {
	pulumi.Input

	ToBackupCompliancePolicyArrayOutput() BackupCompliancePolicyArrayOutput
	ToBackupCompliancePolicyArrayOutputWithContext(context.Context) BackupCompliancePolicyArrayOutput
}

type BackupCompliancePolicyArray []BackupCompliancePolicyInput

func (BackupCompliancePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupCompliancePolicy)(nil)).Elem()
}

func (i BackupCompliancePolicyArray) ToBackupCompliancePolicyArrayOutput() BackupCompliancePolicyArrayOutput {
	return i.ToBackupCompliancePolicyArrayOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyArray) ToBackupCompliancePolicyArrayOutputWithContext(ctx context.Context) BackupCompliancePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyArrayOutput)
}

// BackupCompliancePolicyMapInput is an input type that accepts BackupCompliancePolicyMap and BackupCompliancePolicyMapOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyMapInput` via:
//
//	BackupCompliancePolicyMap{ "key": BackupCompliancePolicyArgs{...} }
type BackupCompliancePolicyMapInput interface {
	pulumi.Input

	ToBackupCompliancePolicyMapOutput() BackupCompliancePolicyMapOutput
	ToBackupCompliancePolicyMapOutputWithContext(context.Context) BackupCompliancePolicyMapOutput
}

type BackupCompliancePolicyMap map[string]BackupCompliancePolicyInput

func (BackupCompliancePolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupCompliancePolicy)(nil)).Elem()
}

func (i BackupCompliancePolicyMap) ToBackupCompliancePolicyMapOutput() BackupCompliancePolicyMapOutput {
	return i.ToBackupCompliancePolicyMapOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyMap) ToBackupCompliancePolicyMapOutputWithContext(ctx context.Context) BackupCompliancePolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyMapOutput)
}

type BackupCompliancePolicyOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupCompliancePolicy)(nil)).Elem()
}

func (o BackupCompliancePolicyOutput) ToBackupCompliancePolicyOutput() BackupCompliancePolicyOutput {
	return o
}

func (o BackupCompliancePolicyOutput) ToBackupCompliancePolicyOutputWithContext(ctx context.Context) BackupCompliancePolicyOutput {
	return o
}

// Email address of a security or legal representative for the Backup Compliance Policy who is authorized to update the Backup Compliance Policy settings.
func (o BackupCompliancePolicyOutput) AuthorizedEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupCompliancePolicy) pulumi.StringOutput { return v.AuthorizedEmail }).(pulumi.StringOutput)
}

// Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
func (o BackupCompliancePolicyOutput) CopyProtectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *BackupCompliancePolicy) pulumi.BoolOutput { return v.CopyProtectionEnabled }).(pulumi.BoolOutput)
}

// Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
func (o BackupCompliancePolicyOutput) EncryptionAtRestEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *BackupCompliancePolicy) pulumi.BoolOutput { return v.EncryptionAtRestEnabled }).(pulumi.BoolOutput)
}

func (o BackupCompliancePolicyOutput) OnDemandPolicyItem() BackupCompliancePolicyOnDemandPolicyItemOutput {
	return o.ApplyT(func(v *BackupCompliancePolicy) BackupCompliancePolicyOnDemandPolicyItemOutput {
		return v.OnDemandPolicyItem
	}).(BackupCompliancePolicyOnDemandPolicyItemOutput)
}

// Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
func (o BackupCompliancePolicyOutput) PitEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *BackupCompliancePolicy) pulumi.BoolOutput { return v.PitEnabled }).(pulumi.BoolOutput)
}

func (o BackupCompliancePolicyOutput) PolicyItemDaily() BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicy) BackupCompliancePolicyPolicyItemDailyPtrOutput {
		return v.PolicyItemDaily
	}).(BackupCompliancePolicyPolicyItemDailyPtrOutput)
}

func (o BackupCompliancePolicyOutput) PolicyItemHourly() BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicy) BackupCompliancePolicyPolicyItemHourlyPtrOutput {
		return v.PolicyItemHourly
	}).(BackupCompliancePolicyPolicyItemHourlyPtrOutput)
}

func (o BackupCompliancePolicyOutput) PolicyItemMonthlies() BackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return o.ApplyT(func(v *BackupCompliancePolicy) BackupCompliancePolicyPolicyItemMonthlyArrayOutput {
		return v.PolicyItemMonthlies
	}).(BackupCompliancePolicyPolicyItemMonthlyArrayOutput)
}

func (o BackupCompliancePolicyOutput) PolicyItemWeeklies() BackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return o.ApplyT(func(v *BackupCompliancePolicy) BackupCompliancePolicyPolicyItemWeeklyArrayOutput {
		return v.PolicyItemWeeklies
	}).(BackupCompliancePolicyPolicyItemWeeklyArrayOutput)
}

// Unique 24-hexadecimal digit string that identifies your project.
func (o BackupCompliancePolicyOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupCompliancePolicy) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
func (o BackupCompliancePolicyOutput) RestoreWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v *BackupCompliancePolicy) pulumi.IntOutput { return v.RestoreWindowDays }).(pulumi.IntOutput)
}

// Label that indicates the state of the Backup Compliance Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
func (o BackupCompliancePolicyOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupCompliancePolicy) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// ISO 8601 timestamp format in UTC that indicates when the user updated the Data Protection Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
func (o BackupCompliancePolicyOutput) UpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupCompliancePolicy) pulumi.StringOutput { return v.UpdatedDate }).(pulumi.StringOutput)
}

// Email address that identifies the user who updated the Backup Compliance Policy settings. MongoDB Cloud ignores this email setting when you enable or update the Backup Compliance Policy settings.
func (o BackupCompliancePolicyOutput) UpdatedUser() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupCompliancePolicy) pulumi.StringOutput { return v.UpdatedUser }).(pulumi.StringOutput)
}

type BackupCompliancePolicyArrayOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupCompliancePolicy)(nil)).Elem()
}

func (o BackupCompliancePolicyArrayOutput) ToBackupCompliancePolicyArrayOutput() BackupCompliancePolicyArrayOutput {
	return o
}

func (o BackupCompliancePolicyArrayOutput) ToBackupCompliancePolicyArrayOutputWithContext(ctx context.Context) BackupCompliancePolicyArrayOutput {
	return o
}

func (o BackupCompliancePolicyArrayOutput) Index(i pulumi.IntInput) BackupCompliancePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BackupCompliancePolicy {
		return vs[0].([]*BackupCompliancePolicy)[vs[1].(int)]
	}).(BackupCompliancePolicyOutput)
}

type BackupCompliancePolicyMapOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupCompliancePolicy)(nil)).Elem()
}

func (o BackupCompliancePolicyMapOutput) ToBackupCompliancePolicyMapOutput() BackupCompliancePolicyMapOutput {
	return o
}

func (o BackupCompliancePolicyMapOutput) ToBackupCompliancePolicyMapOutputWithContext(ctx context.Context) BackupCompliancePolicyMapOutput {
	return o
}

func (o BackupCompliancePolicyMapOutput) MapIndex(k pulumi.StringInput) BackupCompliancePolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BackupCompliancePolicy {
		return vs[0].(map[string]*BackupCompliancePolicy)[vs[1].(string)]
	}).(BackupCompliancePolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyInput)(nil)).Elem(), &BackupCompliancePolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyArrayInput)(nil)).Elem(), BackupCompliancePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyMapInput)(nil)).Elem(), BackupCompliancePolicyMap{})
	pulumi.RegisterOutputType(BackupCompliancePolicyOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyArrayOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyMapOutput{})
}
