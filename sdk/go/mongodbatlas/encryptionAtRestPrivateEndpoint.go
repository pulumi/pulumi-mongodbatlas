// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Resource: EncryptionAtRestPrivateEndpoint
//
// `EncryptionAtRestPrivateEndpoint` provides a resource for managing a private endpoint used for encryption at rest with customer-managed keys. This ensures all traffic between Atlas and customer key management systems take place over private network interfaces.
//
// > **NOTE:** As a prerequisite to configuring a private endpoint for Azure Key Vault or AWS KMS, the corresponding `EncryptionAtRest` resource has to be adjusted by configuring to true `azure_key_vault_config.require_private_networking` or `aws_kms_config.require_private_networking`, respectively. This attribute should be updated in place, ensuring the customer-managed keys encryption is never disabled.
//
// > **NOTE:** This resource does not support update operations. To modify values of a private endpoint the existing resource must be deleted and a new one can be created with the modified values.
//
// ## Example Usage
//
// ### S
//
// > **NOTE:** Only Azure Key Vault with Azure Private Link and AWS KMS over AWS PrivateLink is supported at this time.
//
// ### Configuring Atlas Encryption at Rest using Azure Key Vault with Azure Private Link
// To learn more about existing limitations, see [Manage Customer Keys with Azure Key Vault Over Private Endpoints](https://www.mongodb.com/docs/atlas/security/azure-kms-over-private-endpoint/#manage-customer-keys-with-azure-key-vault-over-private-endpoints).
//
// Make sure to reference the complete example section for detailed steps and considerations.
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//	"fmt"
//
//	"github.com/pulumi/pulumi-azapi/sdk/go/azapi"
//	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// ear, err := mongodbatlas.NewEncryptionAtRest(ctx, "ear", &mongodbatlas.EncryptionAtRestArgs{
// ProjectId: pulumi.Any(atlasProjectId),
// AzureKeyVaultConfig: &mongodbatlas.EncryptionAtRestAzureKeyVaultConfigArgs{
// RequirePrivateNetworking: pulumi.Bool(true),
// Enabled: pulumi.Bool(true),
// AzureEnvironment: pulumi.String("AZURE"),
// TenantId: pulumi.Any(azureTenantId),
// SubscriptionId: pulumi.Any(azureSubscriptionId),
// ClientId: pulumi.Any(azureClientId),
// Secret: pulumi.Any(azureClientSecret),
// ResourceGroupName: pulumi.Any(azureResourceGroupName),
// KeyVaultName: pulumi.Any(azureKeyVaultName),
// KeyIdentifier: pulumi.Any(azureKeyIdentifier),
// },
// })
// if err != nil {
// return err
// }
// // Creates private endpoint
// endpoint, err := mongodbatlas.NewEncryptionAtRestPrivateEndpoint(ctx, "endpoint", &mongodbatlas.EncryptionAtRestPrivateEndpointArgs{
// ProjectId: ear.ProjectId,
// CloudProvider: pulumi.String("AZURE"),
// RegionName: pulumi.Any(azureRegionName),
// })
// if err != nil {
// return err
// }
// keyVaultResourceId := fmt.Sprintf("/subscriptions/%v/resourceGroups/%v/providers/Microsoft.KeyVault/vaults/%v", azureSubscriptionId, azureResourceGroupName, azureKeyVaultName);
// // Approves private endpoint connection from Azure Key Vault
// _, err = azapi.NewUpdateResource(ctx, "approval", &azapi.UpdateResourceArgs{
// Type: "Microsoft.KeyVault/Vaults/PrivateEndpointConnections@2023-07-01",
// Name: endpoint.PrivateEndpointConnectionName,
// ParentId: keyVaultResourceId,
// Body: %!v(PANIC=Format method: fatal: An assertion has failed: unlowered function toJSON),
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ### Configuring Atlas Encryption at Rest using AWS KMS with AWS PrivateLink
//
// Make sure to reference the complete example section for detailed steps and considerations.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			ear, err := mongodbatlas.NewEncryptionAtRest(ctx, "ear", &mongodbatlas.EncryptionAtRestArgs{
//				ProjectId: pulumi.Any(atlasProjectId),
//				AwsKmsConfig: &mongodbatlas.EncryptionAtRestAwsKmsConfigArgs{
//					RequirePrivateNetworking: pulumi.Bool(true),
//					Enabled:                  pulumi.Bool(true),
//					CustomerMasterKeyId:      pulumi.Any(awsKmsKeyId),
//					Region:                   pulumi.Any(atlasAwsRegion),
//					RoleId:                   pulumi.Any(authRole.RoleId),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Creates private endpoint
//			_, err = mongodbatlas.NewEncryptionAtRestPrivateEndpoint(ctx, "endpoint", &mongodbatlas.EncryptionAtRestPrivateEndpointArgs{
//				ProjectId:     ear.ProjectId,
//				CloudProvider: pulumi.String("AWS"),
//				RegionName:    pulumi.Any(atlasAwsRegion),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Encryption At Rest Private Endpoint resource can be imported using the project ID, cloud provider, and private endpoint ID. The format must be `{project_id}-{cloud_provider}-{private_endpoint_id}` e.g.
//
// For more information see:
// - [MongoDB Atlas API - Private Endpoint for Encryption at Rest Using Customer Key Management](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Encryption-at-Rest-using-Customer-Key-Management/operation/getEncryptionAtRestPrivateEndpoint) Documentation.
// - [Manage Customer Keys with Azure Key Vault Over Private Endpoints](https://www.mongodb.com/docs/atlas/security/azure-kms-over-private-endpoint/).
type EncryptionAtRestPrivateEndpoint struct {
	pulumi.CustomResourceState

	// Label that identifies the cloud provider for the Encryption At Rest private endpoint.
	CloudProvider pulumi.StringOutput `pulumi:"cloudProvider"`
	// Error message for failures associated with the Encryption At Rest private endpoint.
	ErrorMessage pulumi.StringOutput `pulumi:"errorMessage"`
	// Connection name of the Azure Private Endpoint.
	PrivateEndpointConnectionName pulumi.StringOutput `pulumi:"privateEndpointConnectionName"`
	// Unique 24-hexadecimal digit string that identifies your project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Cloud provider region in which the Encryption At Rest private endpoint is located.
	RegionName pulumi.StringOutput `pulumi:"regionName"`
	// State of the Encryption At Rest private endpoint.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewEncryptionAtRestPrivateEndpoint registers a new resource with the given unique name, arguments, and options.
func NewEncryptionAtRestPrivateEndpoint(ctx *pulumi.Context,
	name string, args *EncryptionAtRestPrivateEndpointArgs, opts ...pulumi.ResourceOption) (*EncryptionAtRestPrivateEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CloudProvider == nil {
		return nil, errors.New("invalid value for required argument 'CloudProvider'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.RegionName == nil {
		return nil, errors.New("invalid value for required argument 'RegionName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EncryptionAtRestPrivateEndpoint
	err := ctx.RegisterResource("mongodbatlas:index/encryptionAtRestPrivateEndpoint:EncryptionAtRestPrivateEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEncryptionAtRestPrivateEndpoint gets an existing EncryptionAtRestPrivateEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEncryptionAtRestPrivateEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EncryptionAtRestPrivateEndpointState, opts ...pulumi.ResourceOption) (*EncryptionAtRestPrivateEndpoint, error) {
	var resource EncryptionAtRestPrivateEndpoint
	err := ctx.ReadResource("mongodbatlas:index/encryptionAtRestPrivateEndpoint:EncryptionAtRestPrivateEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EncryptionAtRestPrivateEndpoint resources.
type encryptionAtRestPrivateEndpointState struct {
	// Label that identifies the cloud provider for the Encryption At Rest private endpoint.
	CloudProvider *string `pulumi:"cloudProvider"`
	// Error message for failures associated with the Encryption At Rest private endpoint.
	ErrorMessage *string `pulumi:"errorMessage"`
	// Connection name of the Azure Private Endpoint.
	PrivateEndpointConnectionName *string `pulumi:"privateEndpointConnectionName"`
	// Unique 24-hexadecimal digit string that identifies your project.
	ProjectId *string `pulumi:"projectId"`
	// Cloud provider region in which the Encryption At Rest private endpoint is located.
	RegionName *string `pulumi:"regionName"`
	// State of the Encryption At Rest private endpoint.
	Status *string `pulumi:"status"`
}

type EncryptionAtRestPrivateEndpointState struct {
	// Label that identifies the cloud provider for the Encryption At Rest private endpoint.
	CloudProvider pulumi.StringPtrInput
	// Error message for failures associated with the Encryption At Rest private endpoint.
	ErrorMessage pulumi.StringPtrInput
	// Connection name of the Azure Private Endpoint.
	PrivateEndpointConnectionName pulumi.StringPtrInput
	// Unique 24-hexadecimal digit string that identifies your project.
	ProjectId pulumi.StringPtrInput
	// Cloud provider region in which the Encryption At Rest private endpoint is located.
	RegionName pulumi.StringPtrInput
	// State of the Encryption At Rest private endpoint.
	Status pulumi.StringPtrInput
}

func (EncryptionAtRestPrivateEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*encryptionAtRestPrivateEndpointState)(nil)).Elem()
}

type encryptionAtRestPrivateEndpointArgs struct {
	// Label that identifies the cloud provider for the Encryption At Rest private endpoint.
	CloudProvider string `pulumi:"cloudProvider"`
	// Unique 24-hexadecimal digit string that identifies your project.
	ProjectId string `pulumi:"projectId"`
	// Cloud provider region in which the Encryption At Rest private endpoint is located.
	RegionName string `pulumi:"regionName"`
}

// The set of arguments for constructing a EncryptionAtRestPrivateEndpoint resource.
type EncryptionAtRestPrivateEndpointArgs struct {
	// Label that identifies the cloud provider for the Encryption At Rest private endpoint.
	CloudProvider pulumi.StringInput
	// Unique 24-hexadecimal digit string that identifies your project.
	ProjectId pulumi.StringInput
	// Cloud provider region in which the Encryption At Rest private endpoint is located.
	RegionName pulumi.StringInput
}

func (EncryptionAtRestPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*encryptionAtRestPrivateEndpointArgs)(nil)).Elem()
}

type EncryptionAtRestPrivateEndpointInput interface {
	pulumi.Input

	ToEncryptionAtRestPrivateEndpointOutput() EncryptionAtRestPrivateEndpointOutput
	ToEncryptionAtRestPrivateEndpointOutputWithContext(ctx context.Context) EncryptionAtRestPrivateEndpointOutput
}

func (*EncryptionAtRestPrivateEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestPrivateEndpoint)(nil)).Elem()
}

func (i *EncryptionAtRestPrivateEndpoint) ToEncryptionAtRestPrivateEndpointOutput() EncryptionAtRestPrivateEndpointOutput {
	return i.ToEncryptionAtRestPrivateEndpointOutputWithContext(context.Background())
}

func (i *EncryptionAtRestPrivateEndpoint) ToEncryptionAtRestPrivateEndpointOutputWithContext(ctx context.Context) EncryptionAtRestPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestPrivateEndpointOutput)
}

// EncryptionAtRestPrivateEndpointArrayInput is an input type that accepts EncryptionAtRestPrivateEndpointArray and EncryptionAtRestPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `EncryptionAtRestPrivateEndpointArrayInput` via:
//
//	EncryptionAtRestPrivateEndpointArray{ EncryptionAtRestPrivateEndpointArgs{...} }
type EncryptionAtRestPrivateEndpointArrayInput interface {
	pulumi.Input

	ToEncryptionAtRestPrivateEndpointArrayOutput() EncryptionAtRestPrivateEndpointArrayOutput
	ToEncryptionAtRestPrivateEndpointArrayOutputWithContext(context.Context) EncryptionAtRestPrivateEndpointArrayOutput
}

type EncryptionAtRestPrivateEndpointArray []EncryptionAtRestPrivateEndpointInput

func (EncryptionAtRestPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EncryptionAtRestPrivateEndpoint)(nil)).Elem()
}

func (i EncryptionAtRestPrivateEndpointArray) ToEncryptionAtRestPrivateEndpointArrayOutput() EncryptionAtRestPrivateEndpointArrayOutput {
	return i.ToEncryptionAtRestPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i EncryptionAtRestPrivateEndpointArray) ToEncryptionAtRestPrivateEndpointArrayOutputWithContext(ctx context.Context) EncryptionAtRestPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestPrivateEndpointArrayOutput)
}

// EncryptionAtRestPrivateEndpointMapInput is an input type that accepts EncryptionAtRestPrivateEndpointMap and EncryptionAtRestPrivateEndpointMapOutput values.
// You can construct a concrete instance of `EncryptionAtRestPrivateEndpointMapInput` via:
//
//	EncryptionAtRestPrivateEndpointMap{ "key": EncryptionAtRestPrivateEndpointArgs{...} }
type EncryptionAtRestPrivateEndpointMapInput interface {
	pulumi.Input

	ToEncryptionAtRestPrivateEndpointMapOutput() EncryptionAtRestPrivateEndpointMapOutput
	ToEncryptionAtRestPrivateEndpointMapOutputWithContext(context.Context) EncryptionAtRestPrivateEndpointMapOutput
}

type EncryptionAtRestPrivateEndpointMap map[string]EncryptionAtRestPrivateEndpointInput

func (EncryptionAtRestPrivateEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EncryptionAtRestPrivateEndpoint)(nil)).Elem()
}

func (i EncryptionAtRestPrivateEndpointMap) ToEncryptionAtRestPrivateEndpointMapOutput() EncryptionAtRestPrivateEndpointMapOutput {
	return i.ToEncryptionAtRestPrivateEndpointMapOutputWithContext(context.Background())
}

func (i EncryptionAtRestPrivateEndpointMap) ToEncryptionAtRestPrivateEndpointMapOutputWithContext(ctx context.Context) EncryptionAtRestPrivateEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestPrivateEndpointMapOutput)
}

type EncryptionAtRestPrivateEndpointOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestPrivateEndpoint)(nil)).Elem()
}

func (o EncryptionAtRestPrivateEndpointOutput) ToEncryptionAtRestPrivateEndpointOutput() EncryptionAtRestPrivateEndpointOutput {
	return o
}

func (o EncryptionAtRestPrivateEndpointOutput) ToEncryptionAtRestPrivateEndpointOutputWithContext(ctx context.Context) EncryptionAtRestPrivateEndpointOutput {
	return o
}

// Label that identifies the cloud provider for the Encryption At Rest private endpoint.
func (o EncryptionAtRestPrivateEndpointOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *EncryptionAtRestPrivateEndpoint) pulumi.StringOutput { return v.CloudProvider }).(pulumi.StringOutput)
}

// Error message for failures associated with the Encryption At Rest private endpoint.
func (o EncryptionAtRestPrivateEndpointOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *EncryptionAtRestPrivateEndpoint) pulumi.StringOutput { return v.ErrorMessage }).(pulumi.StringOutput)
}

// Connection name of the Azure Private Endpoint.
func (o EncryptionAtRestPrivateEndpointOutput) PrivateEndpointConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v *EncryptionAtRestPrivateEndpoint) pulumi.StringOutput { return v.PrivateEndpointConnectionName }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies your project.
func (o EncryptionAtRestPrivateEndpointOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *EncryptionAtRestPrivateEndpoint) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// Cloud provider region in which the Encryption At Rest private endpoint is located.
func (o EncryptionAtRestPrivateEndpointOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v *EncryptionAtRestPrivateEndpoint) pulumi.StringOutput { return v.RegionName }).(pulumi.StringOutput)
}

// State of the Encryption At Rest private endpoint.
func (o EncryptionAtRestPrivateEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *EncryptionAtRestPrivateEndpoint) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type EncryptionAtRestPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EncryptionAtRestPrivateEndpoint)(nil)).Elem()
}

func (o EncryptionAtRestPrivateEndpointArrayOutput) ToEncryptionAtRestPrivateEndpointArrayOutput() EncryptionAtRestPrivateEndpointArrayOutput {
	return o
}

func (o EncryptionAtRestPrivateEndpointArrayOutput) ToEncryptionAtRestPrivateEndpointArrayOutputWithContext(ctx context.Context) EncryptionAtRestPrivateEndpointArrayOutput {
	return o
}

func (o EncryptionAtRestPrivateEndpointArrayOutput) Index(i pulumi.IntInput) EncryptionAtRestPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EncryptionAtRestPrivateEndpoint {
		return vs[0].([]*EncryptionAtRestPrivateEndpoint)[vs[1].(int)]
	}).(EncryptionAtRestPrivateEndpointOutput)
}

type EncryptionAtRestPrivateEndpointMapOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestPrivateEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EncryptionAtRestPrivateEndpoint)(nil)).Elem()
}

func (o EncryptionAtRestPrivateEndpointMapOutput) ToEncryptionAtRestPrivateEndpointMapOutput() EncryptionAtRestPrivateEndpointMapOutput {
	return o
}

func (o EncryptionAtRestPrivateEndpointMapOutput) ToEncryptionAtRestPrivateEndpointMapOutputWithContext(ctx context.Context) EncryptionAtRestPrivateEndpointMapOutput {
	return o
}

func (o EncryptionAtRestPrivateEndpointMapOutput) MapIndex(k pulumi.StringInput) EncryptionAtRestPrivateEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EncryptionAtRestPrivateEndpoint {
		return vs[0].(map[string]*EncryptionAtRestPrivateEndpoint)[vs[1].(string)]
	}).(EncryptionAtRestPrivateEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestPrivateEndpointInput)(nil)).Elem(), &EncryptionAtRestPrivateEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestPrivateEndpointArrayInput)(nil)).Elem(), EncryptionAtRestPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestPrivateEndpointMapInput)(nil)).Elem(), EncryptionAtRestPrivateEndpointMap{})
	pulumi.RegisterOutputType(EncryptionAtRestPrivateEndpointOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestPrivateEndpointMapOutput{})
}
