// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Data Source: getFederatedSettingsOrgConfigs
//
// `getFederatedSettingsOrgConfigs` provides an Federated Settings Identity Providers datasource. Atlas Cloud Federated Settings Identity Providers provides federated settings outputs for the configured Identity Providers.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := mongodbatlas.NewFederatedSettingsOrgConfig(ctx, "org_connection", &mongodbatlas.FederatedSettingsOrgConfigArgs{
//				FederationSettingsId: pulumi.String("627a9687f7f7f7f774de306f14"),
//				OrgId:                pulumi.String("627a9683ea7ff7f74de306f14"),
//				DataAccessIdentityProviderIds: pulumi.StringArray{
//					pulumi.String("64d613677e1ad50839cce4db"),
//				},
//				DomainRestrictionEnabled: pulumi.Bool(false),
//				DomainAllowLists: pulumi.StringArray{
//					pulumi.String("mydomain.com"),
//				},
//				PostAuthRoleGrants: pulumi.StringArray{
//					pulumi.String("ORG_MEMBER"),
//				},
//				IdentityProviderId: pulumi.String("0oaqyt9fc2ySTWnA0357"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = mongodbatlas.LookupFederatedSettingsOrgConfigs(ctx, &mongodbatlas.LookupFederatedSettingsOrgConfigsArgs{
//				FederationSettingsId: orgConnectionMongodbatlasFederatedSettingsOrgConfig.FederationSettingsId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupFederatedSettingsOrgConfigs(ctx *pulumi.Context, args *LookupFederatedSettingsOrgConfigsArgs, opts ...pulumi.InvokeOption) (*LookupFederatedSettingsOrgConfigsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFederatedSettingsOrgConfigsResult
	err := ctx.Invoke("mongodbatlas:index/getFederatedSettingsOrgConfigs:getFederatedSettingsOrgConfigs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFederatedSettingsOrgConfigs.
type LookupFederatedSettingsOrgConfigsArgs struct {
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId string `pulumi:"federationSettingsId"`
	// Number of items to return per page, up to a maximum of 500. Defaults to `100`.
	ItemsPerPage *int `pulumi:"itemsPerPage"`
	// The page to return. Defaults to `1`.
	PageNum *int `pulumi:"pageNum"`
}

// A collection of values returned by getFederatedSettingsOrgConfigs.
type LookupFederatedSettingsOrgConfigsResult struct {
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId string `pulumi:"federationSettingsId"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	ItemsPerPage *int   `pulumi:"itemsPerPage"`
	PageNum      *int   `pulumi:"pageNum"`
	// Includes cloudProviderSnapshot object for each item detailed in the results array section.
	// * `totalCount` - Count of the total number of items in the result set. It may be greater than the number of objects in the results array if the entire result set is paginated.
	Results []GetFederatedSettingsOrgConfigsResult `pulumi:"results"`
}

func LookupFederatedSettingsOrgConfigsOutput(ctx *pulumi.Context, args LookupFederatedSettingsOrgConfigsOutputArgs, opts ...pulumi.InvokeOption) LookupFederatedSettingsOrgConfigsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFederatedSettingsOrgConfigsResultOutput, error) {
			args := v.(LookupFederatedSettingsOrgConfigsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupFederatedSettingsOrgConfigsResult
			secret, err := ctx.InvokePackageRaw("mongodbatlas:index/getFederatedSettingsOrgConfigs:getFederatedSettingsOrgConfigs", args, &rv, "", opts...)
			if err != nil {
				return LookupFederatedSettingsOrgConfigsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupFederatedSettingsOrgConfigsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupFederatedSettingsOrgConfigsResultOutput), nil
			}
			return output, nil
		}).(LookupFederatedSettingsOrgConfigsResultOutput)
}

// A collection of arguments for invoking getFederatedSettingsOrgConfigs.
type LookupFederatedSettingsOrgConfigsOutputArgs struct {
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId pulumi.StringInput `pulumi:"federationSettingsId"`
	// Number of items to return per page, up to a maximum of 500. Defaults to `100`.
	ItemsPerPage pulumi.IntPtrInput `pulumi:"itemsPerPage"`
	// The page to return. Defaults to `1`.
	PageNum pulumi.IntPtrInput `pulumi:"pageNum"`
}

func (LookupFederatedSettingsOrgConfigsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFederatedSettingsOrgConfigsArgs)(nil)).Elem()
}

// A collection of values returned by getFederatedSettingsOrgConfigs.
type LookupFederatedSettingsOrgConfigsResultOutput struct{ *pulumi.OutputState }

func (LookupFederatedSettingsOrgConfigsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFederatedSettingsOrgConfigsResult)(nil)).Elem()
}

func (o LookupFederatedSettingsOrgConfigsResultOutput) ToLookupFederatedSettingsOrgConfigsResultOutput() LookupFederatedSettingsOrgConfigsResultOutput {
	return o
}

func (o LookupFederatedSettingsOrgConfigsResultOutput) ToLookupFederatedSettingsOrgConfigsResultOutputWithContext(ctx context.Context) LookupFederatedSettingsOrgConfigsResultOutput {
	return o
}

// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
func (o LookupFederatedSettingsOrgConfigsResultOutput) FederationSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFederatedSettingsOrgConfigsResult) string { return v.FederationSettingsId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFederatedSettingsOrgConfigsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFederatedSettingsOrgConfigsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFederatedSettingsOrgConfigsResultOutput) ItemsPerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupFederatedSettingsOrgConfigsResult) *int { return v.ItemsPerPage }).(pulumi.IntPtrOutput)
}

func (o LookupFederatedSettingsOrgConfigsResultOutput) PageNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupFederatedSettingsOrgConfigsResult) *int { return v.PageNum }).(pulumi.IntPtrOutput)
}

// Includes cloudProviderSnapshot object for each item detailed in the results array section.
// * `totalCount` - Count of the total number of items in the result set. It may be greater than the number of objects in the results array if the entire result set is paginated.
func (o LookupFederatedSettingsOrgConfigsResultOutput) Results() GetFederatedSettingsOrgConfigsResultArrayOutput {
	return o.ApplyT(func(v LookupFederatedSettingsOrgConfigsResult) []GetFederatedSettingsOrgConfigsResult {
		return v.Results
	}).(GetFederatedSettingsOrgConfigsResultArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFederatedSettingsOrgConfigsResultOutput{})
}
