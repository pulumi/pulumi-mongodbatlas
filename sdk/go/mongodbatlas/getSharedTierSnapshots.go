// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSharedTierSnapshots(ctx *pulumi.Context, args *LookupSharedTierSnapshotsArgs, opts ...pulumi.InvokeOption) (*LookupSharedTierSnapshotsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSharedTierSnapshotsResult
	err := ctx.Invoke("mongodbatlas:index/getSharedTierSnapshots:getSharedTierSnapshots", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSharedTierSnapshots.
type LookupSharedTierSnapshotsArgs struct {
	ClusterName string `pulumi:"clusterName"`
	ProjectId   string `pulumi:"projectId"`
}

// A collection of values returned by getSharedTierSnapshots.
type LookupSharedTierSnapshotsResult struct {
	ClusterName string `pulumi:"clusterName"`
	// The provider-assigned unique ID for this managed resource.
	Id         string                         `pulumi:"id"`
	ProjectId  string                         `pulumi:"projectId"`
	Results    []GetSharedTierSnapshotsResult `pulumi:"results"`
	TotalCount int                            `pulumi:"totalCount"`
}

func LookupSharedTierSnapshotsOutput(ctx *pulumi.Context, args LookupSharedTierSnapshotsOutputArgs, opts ...pulumi.InvokeOption) LookupSharedTierSnapshotsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSharedTierSnapshotsResultOutput, error) {
			args := v.(LookupSharedTierSnapshotsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("mongodbatlas:index/getSharedTierSnapshots:getSharedTierSnapshots", args, LookupSharedTierSnapshotsResultOutput{}, options).(LookupSharedTierSnapshotsResultOutput), nil
		}).(LookupSharedTierSnapshotsResultOutput)
}

// A collection of arguments for invoking getSharedTierSnapshots.
type LookupSharedTierSnapshotsOutputArgs struct {
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	ProjectId   pulumi.StringInput `pulumi:"projectId"`
}

func (LookupSharedTierSnapshotsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSharedTierSnapshotsArgs)(nil)).Elem()
}

// A collection of values returned by getSharedTierSnapshots.
type LookupSharedTierSnapshotsResultOutput struct{ *pulumi.OutputState }

func (LookupSharedTierSnapshotsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSharedTierSnapshotsResult)(nil)).Elem()
}

func (o LookupSharedTierSnapshotsResultOutput) ToLookupSharedTierSnapshotsResultOutput() LookupSharedTierSnapshotsResultOutput {
	return o
}

func (o LookupSharedTierSnapshotsResultOutput) ToLookupSharedTierSnapshotsResultOutputWithContext(ctx context.Context) LookupSharedTierSnapshotsResultOutput {
	return o
}

func (o LookupSharedTierSnapshotsResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSharedTierSnapshotsResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSharedTierSnapshotsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSharedTierSnapshotsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSharedTierSnapshotsResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSharedTierSnapshotsResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o LookupSharedTierSnapshotsResultOutput) Results() GetSharedTierSnapshotsResultArrayOutput {
	return o.ApplyT(func(v LookupSharedTierSnapshotsResult) []GetSharedTierSnapshotsResult { return v.Results }).(GetSharedTierSnapshotsResultArrayOutput)
}

func (o LookupSharedTierSnapshotsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSharedTierSnapshotsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSharedTierSnapshotsResultOutput{})
}
