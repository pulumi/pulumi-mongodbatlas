// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Data Source: StreamPrivatelinkEndpoint
//
// `StreamPrivatelinkEndpoint` describes a Privatelink Endpoint for Streams.
//
// ## Example Usage
//
// ### S
func LookupStreamPrivatelinkEndpoint(ctx *pulumi.Context, args *LookupStreamPrivatelinkEndpointArgs, opts ...pulumi.InvokeOption) (*LookupStreamPrivatelinkEndpointResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStreamPrivatelinkEndpointResult
	err := ctx.Invoke("mongodbatlas:index/getStreamPrivatelinkEndpoint:getStreamPrivatelinkEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamPrivatelinkEndpoint.
type LookupStreamPrivatelinkEndpointArgs struct {
	// The ID of the Private Link connection.
	Id string `pulumi:"id"`
	// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.\n\n**NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group or project id remains the same. The resource and corresponding endpoints use the term groups.
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getStreamPrivatelinkEndpoint.
type LookupStreamPrivatelinkEndpointResult struct {
	// Amazon Resource Name (ARN). Required for AWS Provider and MSK vendor.
	Arn string `pulumi:"arn"`
	// The domain hostname. Required for the following provider and vendor combinations:\n\n- AWS provider with CONFLUENT vendor.\n\n- AZURE provider with EVENTHUB or CONFLUENT vendor.
	DnsDomain string `pulumi:"dnsDomain"`
	// Sub-Domain name of Confluent cluster. These are typically your availability zones. Required for AWS Provider and CONFLUENT vendor. If your AWS CONFLUENT cluster doesn't use subdomains, you must set this to the empty array [].
	DnsSubDomains []string `pulumi:"dnsSubDomains"`
	// Error message if the connection is in a failed state.
	ErrorMessage string `pulumi:"errorMessage"`
	// The ID of the Private Link connection.
	Id string `pulumi:"id"`
	// Interface endpoint ID that is created from the specified service endpoint ID.
	InterfaceEndpointId string `pulumi:"interfaceEndpointId"`
	// Name of interface endpoint that is created from the specified service endpoint ID.
	InterfaceEndpointName string `pulumi:"interfaceEndpointName"`
	// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.\n\n**NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group or project id remains the same. The resource and corresponding endpoints use the term groups.
	ProjectId string `pulumi:"projectId"`
	// Account ID from the cloud provider.
	ProviderAccountId string `pulumi:"providerAccountId"`
	// Provider where the Kafka cluster is deployed. Valid values are AWS and AZURE.
	ProviderName string `pulumi:"providerName"`
	// The region of the Providerâ€™s cluster. See [AZURE](https://www.mongodb.com/docs/atlas/reference/microsoft-azure/#stream-processing-instances) and [AWS](https://www.mongodb.com/docs/atlas/reference/amazon-aws/#stream-processing-instances) supported regions. When the vendor is `CONFLUENT`, this is the domain name of Confluent cluster. When the vendor is `MSK`, this is computed by the API from the provided `arn`.
	Region string `pulumi:"region"`
	// For AZURE EVENTHUB, this is the [namespace endpoint ID](https://learn.microsoft.com/en-us/rest/api/eventhub/namespaces/get). For AWS CONFLUENT cluster, this is the [VPC Endpoint service name](https://docs.confluent.io/cloud/current/networking/private-links/aws-privatelink.html).
	ServiceEndpointId string `pulumi:"serviceEndpointId"`
	// Status of the connection.
	State string `pulumi:"state"`
	// Vendor that manages the Kafka cluster. The following are the vendor values per provider:\n\n- MSK and CONFLUENT for the AWS provider.\n\n- EVENTHUB and CONFLUENT for the AZURE provider.
	Vendor string `pulumi:"vendor"`
}

func LookupStreamPrivatelinkEndpointOutput(ctx *pulumi.Context, args LookupStreamPrivatelinkEndpointOutputArgs, opts ...pulumi.InvokeOption) LookupStreamPrivatelinkEndpointResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupStreamPrivatelinkEndpointResultOutput, error) {
			args := v.(LookupStreamPrivatelinkEndpointArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("mongodbatlas:index/getStreamPrivatelinkEndpoint:getStreamPrivatelinkEndpoint", args, LookupStreamPrivatelinkEndpointResultOutput{}, options).(LookupStreamPrivatelinkEndpointResultOutput), nil
		}).(LookupStreamPrivatelinkEndpointResultOutput)
}

// A collection of arguments for invoking getStreamPrivatelinkEndpoint.
type LookupStreamPrivatelinkEndpointOutputArgs struct {
	// The ID of the Private Link connection.
	Id pulumi.StringInput `pulumi:"id"`
	// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.\n\n**NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group or project id remains the same. The resource and corresponding endpoints use the term groups.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupStreamPrivatelinkEndpointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamPrivatelinkEndpointArgs)(nil)).Elem()
}

// A collection of values returned by getStreamPrivatelinkEndpoint.
type LookupStreamPrivatelinkEndpointResultOutput struct{ *pulumi.OutputState }

func (LookupStreamPrivatelinkEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamPrivatelinkEndpointResult)(nil)).Elem()
}

func (o LookupStreamPrivatelinkEndpointResultOutput) ToLookupStreamPrivatelinkEndpointResultOutput() LookupStreamPrivatelinkEndpointResultOutput {
	return o
}

func (o LookupStreamPrivatelinkEndpointResultOutput) ToLookupStreamPrivatelinkEndpointResultOutputWithContext(ctx context.Context) LookupStreamPrivatelinkEndpointResultOutput {
	return o
}

// Amazon Resource Name (ARN). Required for AWS Provider and MSK vendor.
func (o LookupStreamPrivatelinkEndpointResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The domain hostname. Required for the following provider and vendor combinations:\n\n- AWS provider with CONFLUENT vendor.\n\n- AZURE provider with EVENTHUB or CONFLUENT vendor.
func (o LookupStreamPrivatelinkEndpointResultOutput) DnsDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.DnsDomain }).(pulumi.StringOutput)
}

// Sub-Domain name of Confluent cluster. These are typically your availability zones. Required for AWS Provider and CONFLUENT vendor. If your AWS CONFLUENT cluster doesn't use subdomains, you must set this to the empty array [].
func (o LookupStreamPrivatelinkEndpointResultOutput) DnsSubDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) []string { return v.DnsSubDomains }).(pulumi.StringArrayOutput)
}

// Error message if the connection is in a failed state.
func (o LookupStreamPrivatelinkEndpointResultOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// The ID of the Private Link connection.
func (o LookupStreamPrivatelinkEndpointResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.Id }).(pulumi.StringOutput)
}

// Interface endpoint ID that is created from the specified service endpoint ID.
func (o LookupStreamPrivatelinkEndpointResultOutput) InterfaceEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.InterfaceEndpointId }).(pulumi.StringOutput)
}

// Name of interface endpoint that is created from the specified service endpoint ID.
func (o LookupStreamPrivatelinkEndpointResultOutput) InterfaceEndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.InterfaceEndpointName }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.\n\n**NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group or project id remains the same. The resource and corresponding endpoints use the term groups.
func (o LookupStreamPrivatelinkEndpointResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Account ID from the cloud provider.
func (o LookupStreamPrivatelinkEndpointResultOutput) ProviderAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.ProviderAccountId }).(pulumi.StringOutput)
}

// Provider where the Kafka cluster is deployed. Valid values are AWS and AZURE.
func (o LookupStreamPrivatelinkEndpointResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// The region of the Providerâ€™s cluster. See [AZURE](https://www.mongodb.com/docs/atlas/reference/microsoft-azure/#stream-processing-instances) and [AWS](https://www.mongodb.com/docs/atlas/reference/amazon-aws/#stream-processing-instances) supported regions. When the vendor is `CONFLUENT`, this is the domain name of Confluent cluster. When the vendor is `MSK`, this is computed by the API from the provided `arn`.
func (o LookupStreamPrivatelinkEndpointResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.Region }).(pulumi.StringOutput)
}

// For AZURE EVENTHUB, this is the [namespace endpoint ID](https://learn.microsoft.com/en-us/rest/api/eventhub/namespaces/get). For AWS CONFLUENT cluster, this is the [VPC Endpoint service name](https://docs.confluent.io/cloud/current/networking/private-links/aws-privatelink.html).
func (o LookupStreamPrivatelinkEndpointResultOutput) ServiceEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.ServiceEndpointId }).(pulumi.StringOutput)
}

// Status of the connection.
func (o LookupStreamPrivatelinkEndpointResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.State }).(pulumi.StringOutput)
}

// Vendor that manages the Kafka cluster. The following are the vendor values per provider:\n\n- MSK and CONFLUENT for the AWS provider.\n\n- EVENTHUB and CONFLUENT for the AZURE provider.
func (o LookupStreamPrivatelinkEndpointResultOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.Vendor }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStreamPrivatelinkEndpointResultOutput{})
}
