// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Data Source: StreamPrivatelinkEndpoint
//
// `StreamPrivatelinkEndpoint` describes a Privatelink Endpoint for Streams.
//
// ## Example Usage
//
// ### S
//
// ### AWS S3 Privatelink
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws"
//	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// S3 bucket for stream data
//			streamBucket, err := aws.NewS3Bucket(ctx, "stream_bucket", &aws.S3BucketArgs{
//				Bucket:       s3BucketName,
//				ForceDestroy: true,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = aws.NewS3BucketVersioning(ctx, "stream_bucket_versioning", &aws.S3BucketVersioningArgs{
//				Bucket: streamBucket.Id,
//				VersioningConfiguration: []map[string]interface{}{
//					map[string]interface{}{
//						"status": "Enabled",
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = aws.NewS3BucketServerSideEncryptionConfiguration(ctx, "stream_bucket_encryption", &aws.S3BucketServerSideEncryptionConfigurationArgs{
//				Bucket: streamBucket.Id,
//				Rule: []map[string]interface{}{
//					map[string]interface{}{
//						"applyServerSideEncryptionByDefault": []map[string]interface{}{
//							map[string]interface{}{
//								"sseAlgorithm": "AES256",
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// PrivateLink for S3
//			this, err := mongodbatlas.NewStreamPrivatelinkEndpoint(ctx, "this", &mongodbatlas.StreamPrivatelinkEndpointArgs{
//				ProjectId:         pulumi.Any(projectId),
//				ProviderName:      pulumi.String("AWS"),
//				Vendor:            pulumi.String("S3"),
//				Region:            pulumi.Any(region),
//				ServiceEndpointId: pulumi.Any(serviceEndpointId),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("privatelinkEndpointId", this.ID())
//			return nil
//		})
//	}
//
// ```
func LookupStreamPrivatelinkEndpoint(ctx *pulumi.Context, args *LookupStreamPrivatelinkEndpointArgs, opts ...pulumi.InvokeOption) (*LookupStreamPrivatelinkEndpointResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStreamPrivatelinkEndpointResult
	err := ctx.Invoke("mongodbatlas:index/getStreamPrivatelinkEndpoint:getStreamPrivatelinkEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamPrivatelinkEndpoint.
type LookupStreamPrivatelinkEndpointArgs struct {
	Id        string `pulumi:"id"`
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getStreamPrivatelinkEndpoint.
type LookupStreamPrivatelinkEndpointResult struct {
	Arn                   string   `pulumi:"arn"`
	DnsDomain             string   `pulumi:"dnsDomain"`
	DnsSubDomains         []string `pulumi:"dnsSubDomains"`
	ErrorMessage          string   `pulumi:"errorMessage"`
	Id                    string   `pulumi:"id"`
	InterfaceEndpointId   string   `pulumi:"interfaceEndpointId"`
	InterfaceEndpointName string   `pulumi:"interfaceEndpointName"`
	ProjectId             string   `pulumi:"projectId"`
	ProviderAccountId     string   `pulumi:"providerAccountId"`
	ProviderName          string   `pulumi:"providerName"`
	Region                string   `pulumi:"region"`
	ServiceEndpointId     string   `pulumi:"serviceEndpointId"`
	State                 string   `pulumi:"state"`
	Vendor                string   `pulumi:"vendor"`
}

func LookupStreamPrivatelinkEndpointOutput(ctx *pulumi.Context, args LookupStreamPrivatelinkEndpointOutputArgs, opts ...pulumi.InvokeOption) LookupStreamPrivatelinkEndpointResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupStreamPrivatelinkEndpointResultOutput, error) {
			args := v.(LookupStreamPrivatelinkEndpointArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("mongodbatlas:index/getStreamPrivatelinkEndpoint:getStreamPrivatelinkEndpoint", args, LookupStreamPrivatelinkEndpointResultOutput{}, options).(LookupStreamPrivatelinkEndpointResultOutput), nil
		}).(LookupStreamPrivatelinkEndpointResultOutput)
}

// A collection of arguments for invoking getStreamPrivatelinkEndpoint.
type LookupStreamPrivatelinkEndpointOutputArgs struct {
	Id        pulumi.StringInput `pulumi:"id"`
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupStreamPrivatelinkEndpointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamPrivatelinkEndpointArgs)(nil)).Elem()
}

// A collection of values returned by getStreamPrivatelinkEndpoint.
type LookupStreamPrivatelinkEndpointResultOutput struct{ *pulumi.OutputState }

func (LookupStreamPrivatelinkEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamPrivatelinkEndpointResult)(nil)).Elem()
}

func (o LookupStreamPrivatelinkEndpointResultOutput) ToLookupStreamPrivatelinkEndpointResultOutput() LookupStreamPrivatelinkEndpointResultOutput {
	return o
}

func (o LookupStreamPrivatelinkEndpointResultOutput) ToLookupStreamPrivatelinkEndpointResultOutputWithContext(ctx context.Context) LookupStreamPrivatelinkEndpointResultOutput {
	return o
}

func (o LookupStreamPrivatelinkEndpointResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupStreamPrivatelinkEndpointResultOutput) DnsDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.DnsDomain }).(pulumi.StringOutput)
}

func (o LookupStreamPrivatelinkEndpointResultOutput) DnsSubDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) []string { return v.DnsSubDomains }).(pulumi.StringArrayOutput)
}

func (o LookupStreamPrivatelinkEndpointResultOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

func (o LookupStreamPrivatelinkEndpointResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupStreamPrivatelinkEndpointResultOutput) InterfaceEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.InterfaceEndpointId }).(pulumi.StringOutput)
}

func (o LookupStreamPrivatelinkEndpointResultOutput) InterfaceEndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.InterfaceEndpointName }).(pulumi.StringOutput)
}

func (o LookupStreamPrivatelinkEndpointResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o LookupStreamPrivatelinkEndpointResultOutput) ProviderAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.ProviderAccountId }).(pulumi.StringOutput)
}

func (o LookupStreamPrivatelinkEndpointResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

func (o LookupStreamPrivatelinkEndpointResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupStreamPrivatelinkEndpointResultOutput) ServiceEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.ServiceEndpointId }).(pulumi.StringOutput)
}

func (o LookupStreamPrivatelinkEndpointResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupStreamPrivatelinkEndpointResultOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamPrivatelinkEndpointResult) string { return v.Vendor }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStreamPrivatelinkEndpointResultOutput{})
}
