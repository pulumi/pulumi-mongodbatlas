// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupBackupCompliancePolicy(ctx *pulumi.Context, args *LookupBackupCompliancePolicyArgs, opts ...pulumi.InvokeOption) (*LookupBackupCompliancePolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBackupCompliancePolicyResult
	err := ctx.Invoke("mongodbatlas:index/getBackupCompliancePolicy:getBackupCompliancePolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBackupCompliancePolicy.
type LookupBackupCompliancePolicyArgs struct {
	OnDemandPolicyItem  *GetBackupCompliancePolicyOnDemandPolicyItem `pulumi:"onDemandPolicyItem"`
	PolicyItemDaily     *GetBackupCompliancePolicyPolicyItemDaily    `pulumi:"policyItemDaily"`
	PolicyItemHourly    *GetBackupCompliancePolicyPolicyItemHourly   `pulumi:"policyItemHourly"`
	PolicyItemMonthlies []GetBackupCompliancePolicyPolicyItemMonthly `pulumi:"policyItemMonthlies"`
	PolicyItemWeeklies  []GetBackupCompliancePolicyPolicyItemWeekly  `pulumi:"policyItemWeeklies"`
	// Unique 24-hexadecimal digit string that identifies your project
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getBackupCompliancePolicy.
type LookupBackupCompliancePolicyResult struct {
	// Email address of the user who is authorized to update the Backup Compliance Policy settings.
	AuthorizedEmail string `pulumi:"authorizedEmail"`
	// Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
	CopyProtectionEnabled bool `pulumi:"copyProtectionEnabled"`
	// Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
	EncryptionAtRestEnabled bool `pulumi:"encryptionAtRestEnabled"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string                                       `pulumi:"id"`
	OnDemandPolicyItem *GetBackupCompliancePolicyOnDemandPolicyItem `pulumi:"onDemandPolicyItem"`
	// Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
	PitEnabled          bool                                         `pulumi:"pitEnabled"`
	PolicyItemDaily     *GetBackupCompliancePolicyPolicyItemDaily    `pulumi:"policyItemDaily"`
	PolicyItemHourly    *GetBackupCompliancePolicyPolicyItemHourly   `pulumi:"policyItemHourly"`
	PolicyItemMonthlies []GetBackupCompliancePolicyPolicyItemMonthly `pulumi:"policyItemMonthlies"`
	PolicyItemWeeklies  []GetBackupCompliancePolicyPolicyItemWeekly  `pulumi:"policyItemWeeklies"`
	ProjectId           string                                       `pulumi:"projectId"`
	// Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
	RestoreWindowDays int `pulumi:"restoreWindowDays"`
	// Label that indicates the state of the Backup Compliance Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
	State string `pulumi:"state"`
	// ISO 8601 timestamp format in UTC that indicates when the user updated the Data Protection Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
	UpdatedDate string `pulumi:"updatedDate"`
	// Email address that identifies the user who updated the Backup Compliance Policy settings. MongoDB Cloud ignores this email setting when you enable or update the Backup Compliance Policy settings.
	UpdatedUser string `pulumi:"updatedUser"`
}

func LookupBackupCompliancePolicyOutput(ctx *pulumi.Context, args LookupBackupCompliancePolicyOutputArgs, opts ...pulumi.InvokeOption) LookupBackupCompliancePolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBackupCompliancePolicyResult, error) {
			args := v.(LookupBackupCompliancePolicyArgs)
			r, err := LookupBackupCompliancePolicy(ctx, &args, opts...)
			var s LookupBackupCompliancePolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBackupCompliancePolicyResultOutput)
}

// A collection of arguments for invoking getBackupCompliancePolicy.
type LookupBackupCompliancePolicyOutputArgs struct {
	OnDemandPolicyItem  GetBackupCompliancePolicyOnDemandPolicyItemPtrInput  `pulumi:"onDemandPolicyItem"`
	PolicyItemDaily     GetBackupCompliancePolicyPolicyItemDailyPtrInput     `pulumi:"policyItemDaily"`
	PolicyItemHourly    GetBackupCompliancePolicyPolicyItemHourlyPtrInput    `pulumi:"policyItemHourly"`
	PolicyItemMonthlies GetBackupCompliancePolicyPolicyItemMonthlyArrayInput `pulumi:"policyItemMonthlies"`
	PolicyItemWeeklies  GetBackupCompliancePolicyPolicyItemWeeklyArrayInput  `pulumi:"policyItemWeeklies"`
	// Unique 24-hexadecimal digit string that identifies your project
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupBackupCompliancePolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupCompliancePolicyArgs)(nil)).Elem()
}

// A collection of values returned by getBackupCompliancePolicy.
type LookupBackupCompliancePolicyResultOutput struct{ *pulumi.OutputState }

func (LookupBackupCompliancePolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupCompliancePolicyResult)(nil)).Elem()
}

func (o LookupBackupCompliancePolicyResultOutput) ToLookupBackupCompliancePolicyResultOutput() LookupBackupCompliancePolicyResultOutput {
	return o
}

func (o LookupBackupCompliancePolicyResultOutput) ToLookupBackupCompliancePolicyResultOutputWithContext(ctx context.Context) LookupBackupCompliancePolicyResultOutput {
	return o
}

func (o LookupBackupCompliancePolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupBackupCompliancePolicyResult] {
	return pulumix.Output[LookupBackupCompliancePolicyResult]{
		OutputState: o.OutputState,
	}
}

// Email address of the user who is authorized to update the Backup Compliance Policy settings.
func (o LookupBackupCompliancePolicyResultOutput) AuthorizedEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) string { return v.AuthorizedEmail }).(pulumi.StringOutput)
}

// Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
func (o LookupBackupCompliancePolicyResultOutput) CopyProtectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) bool { return v.CopyProtectionEnabled }).(pulumi.BoolOutput)
}

// Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
func (o LookupBackupCompliancePolicyResultOutput) EncryptionAtRestEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) bool { return v.EncryptionAtRestEnabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBackupCompliancePolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBackupCompliancePolicyResultOutput) OnDemandPolicyItem() GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) *GetBackupCompliancePolicyOnDemandPolicyItem {
		return v.OnDemandPolicyItem
	}).(GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput)
}

// Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
func (o LookupBackupCompliancePolicyResultOutput) PitEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) bool { return v.PitEnabled }).(pulumi.BoolOutput)
}

func (o LookupBackupCompliancePolicyResultOutput) PolicyItemDaily() GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) *GetBackupCompliancePolicyPolicyItemDaily {
		return v.PolicyItemDaily
	}).(GetBackupCompliancePolicyPolicyItemDailyPtrOutput)
}

func (o LookupBackupCompliancePolicyResultOutput) PolicyItemHourly() GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) *GetBackupCompliancePolicyPolicyItemHourly {
		return v.PolicyItemHourly
	}).(GetBackupCompliancePolicyPolicyItemHourlyPtrOutput)
}

func (o LookupBackupCompliancePolicyResultOutput) PolicyItemMonthlies() GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) []GetBackupCompliancePolicyPolicyItemMonthly {
		return v.PolicyItemMonthlies
	}).(GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput)
}

func (o LookupBackupCompliancePolicyResultOutput) PolicyItemWeeklies() GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) []GetBackupCompliancePolicyPolicyItemWeekly {
		return v.PolicyItemWeeklies
	}).(GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput)
}

func (o LookupBackupCompliancePolicyResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
func (o LookupBackupCompliancePolicyResultOutput) RestoreWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) int { return v.RestoreWindowDays }).(pulumi.IntOutput)
}

// Label that indicates the state of the Backup Compliance Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
func (o LookupBackupCompliancePolicyResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) string { return v.State }).(pulumi.StringOutput)
}

// ISO 8601 timestamp format in UTC that indicates when the user updated the Data Protection Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
func (o LookupBackupCompliancePolicyResultOutput) UpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) string { return v.UpdatedDate }).(pulumi.StringOutput)
}

// Email address that identifies the user who updated the Backup Compliance Policy settings. MongoDB Cloud ignores this email setting when you enable or update the Backup Compliance Policy settings.
func (o LookupBackupCompliancePolicyResultOutput) UpdatedUser() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupCompliancePolicyResult) string { return v.UpdatedUser }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBackupCompliancePolicyResultOutput{})
}
