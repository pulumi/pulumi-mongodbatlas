// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AlertConfigurationMatcher struct {
	// Name of the field in the target object to match on.
	// Host alerts support these fields:
	// - `TYPE_NAME`
	// - `HOSTNAME`
	// - `PORT`
	// - `HOSTNAME_AND_PORT`
	// - `REPLICA_SET_NAME`
	//   Replica set alerts support these fields:
	// - `REPLICA_SET_NAME`
	// - `SHARD_NAME`
	// - `CLUSTER_NAME`
	//   Sharded cluster alerts support these fields:
	// - `CLUSTER_NAME`
	// - `SHARD_NAME`
	FieldName *string `pulumi:"fieldName"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator *string `pulumi:"operator"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	// - `PRIMARY`
	// - `SECONDARY`
	// - `STANDALONE`
	// - `CONFIG`
	// - `MONGOS`
	Value *string `pulumi:"value"`
}

// AlertConfigurationMatcherInput is an input type that accepts AlertConfigurationMatcherArgs and AlertConfigurationMatcherOutput values.
// You can construct a concrete instance of `AlertConfigurationMatcherInput` via:
//
//          AlertConfigurationMatcherArgs{...}
type AlertConfigurationMatcherInput interface {
	pulumi.Input

	ToAlertConfigurationMatcherOutput() AlertConfigurationMatcherOutput
	ToAlertConfigurationMatcherOutputWithContext(context.Context) AlertConfigurationMatcherOutput
}

type AlertConfigurationMatcherArgs struct {
	// Name of the field in the target object to match on.
	// Host alerts support these fields:
	// - `TYPE_NAME`
	// - `HOSTNAME`
	// - `PORT`
	// - `HOSTNAME_AND_PORT`
	// - `REPLICA_SET_NAME`
	//   Replica set alerts support these fields:
	// - `REPLICA_SET_NAME`
	// - `SHARD_NAME`
	// - `CLUSTER_NAME`
	//   Sharded cluster alerts support these fields:
	// - `CLUSTER_NAME`
	// - `SHARD_NAME`
	FieldName pulumi.StringPtrInput `pulumi:"fieldName"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	// - `PRIMARY`
	// - `SECONDARY`
	// - `STANDALONE`
	// - `CONFIG`
	// - `MONGOS`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AlertConfigurationMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMatcher)(nil)).Elem()
}

func (i AlertConfigurationMatcherArgs) ToAlertConfigurationMatcherOutput() AlertConfigurationMatcherOutput {
	return i.ToAlertConfigurationMatcherOutputWithContext(context.Background())
}

func (i AlertConfigurationMatcherArgs) ToAlertConfigurationMatcherOutputWithContext(ctx context.Context) AlertConfigurationMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMatcherOutput)
}

// AlertConfigurationMatcherArrayInput is an input type that accepts AlertConfigurationMatcherArray and AlertConfigurationMatcherArrayOutput values.
// You can construct a concrete instance of `AlertConfigurationMatcherArrayInput` via:
//
//          AlertConfigurationMatcherArray{ AlertConfigurationMatcherArgs{...} }
type AlertConfigurationMatcherArrayInput interface {
	pulumi.Input

	ToAlertConfigurationMatcherArrayOutput() AlertConfigurationMatcherArrayOutput
	ToAlertConfigurationMatcherArrayOutputWithContext(context.Context) AlertConfigurationMatcherArrayOutput
}

type AlertConfigurationMatcherArray []AlertConfigurationMatcherInput

func (AlertConfigurationMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationMatcher)(nil)).Elem()
}

func (i AlertConfigurationMatcherArray) ToAlertConfigurationMatcherArrayOutput() AlertConfigurationMatcherArrayOutput {
	return i.ToAlertConfigurationMatcherArrayOutputWithContext(context.Background())
}

func (i AlertConfigurationMatcherArray) ToAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) AlertConfigurationMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMatcherArrayOutput)
}

type AlertConfigurationMatcherOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMatcher)(nil)).Elem()
}

func (o AlertConfigurationMatcherOutput) ToAlertConfigurationMatcherOutput() AlertConfigurationMatcherOutput {
	return o
}

func (o AlertConfigurationMatcherOutput) ToAlertConfigurationMatcherOutputWithContext(ctx context.Context) AlertConfigurationMatcherOutput {
	return o
}

// Name of the field in the target object to match on.
// Host alerts support these fields:
// - `TYPE_NAME`
// - `HOSTNAME`
// - `PORT`
// - `HOSTNAME_AND_PORT`
// - `REPLICA_SET_NAME`
//   Replica set alerts support these fields:
// - `REPLICA_SET_NAME`
// - `SHARD_NAME`
// - `CLUSTER_NAME`
//   Sharded cluster alerts support these fields:
// - `CLUSTER_NAME`
// - `SHARD_NAME`
func (o AlertConfigurationMatcherOutput) FieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMatcher) *string { return v.FieldName }).(pulumi.StringPtrOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
// - `GREATER_THAN`
// - `LESS_THAN`
func (o AlertConfigurationMatcherOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMatcher) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
// - `PRIMARY`
// - `SECONDARY`
// - `STANDALONE`
// - `CONFIG`
// - `MONGOS`
func (o AlertConfigurationMatcherOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMatcher) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlertConfigurationMatcherArrayOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationMatcher)(nil)).Elem()
}

func (o AlertConfigurationMatcherArrayOutput) ToAlertConfigurationMatcherArrayOutput() AlertConfigurationMatcherArrayOutput {
	return o
}

func (o AlertConfigurationMatcherArrayOutput) ToAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) AlertConfigurationMatcherArrayOutput {
	return o
}

func (o AlertConfigurationMatcherArrayOutput) Index(i pulumi.IntInput) AlertConfigurationMatcherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConfigurationMatcher {
		return vs[0].([]AlertConfigurationMatcher)[vs[1].(int)]
	}).(AlertConfigurationMatcherOutput)
}

type AlertConfigurationMetricThreshold struct {
	// Name of the metric to check.
	MetricName *string `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode *string `pulumi:"mode"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator *string `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold *float64 `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Accepted values are:
	// - `RAW`
	// - `BITS`
	// - `BYTES`
	// - `KILOBITS`
	// - `KILOBYTES`
	// - `MEGABITS`
	// - `MEGABYTES`
	// - `GIGABITS`
	// - `GIGABYTES`
	// - `TERABYTES`
	// - `PETABYTES`
	// - `MILLISECONDS`
	// - `SECONDS`
	// - `MINUTES`
	// - `HOURS`
	// - `DAYS`
	Units *string `pulumi:"units"`
}

// AlertConfigurationMetricThresholdInput is an input type that accepts AlertConfigurationMetricThresholdArgs and AlertConfigurationMetricThresholdOutput values.
// You can construct a concrete instance of `AlertConfigurationMetricThresholdInput` via:
//
//          AlertConfigurationMetricThresholdArgs{...}
type AlertConfigurationMetricThresholdInput interface {
	pulumi.Input

	ToAlertConfigurationMetricThresholdOutput() AlertConfigurationMetricThresholdOutput
	ToAlertConfigurationMetricThresholdOutputWithContext(context.Context) AlertConfigurationMetricThresholdOutput
}

type AlertConfigurationMetricThresholdArgs struct {
	// Name of the metric to check.
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Accepted values are:
	// - `RAW`
	// - `BITS`
	// - `BYTES`
	// - `KILOBITS`
	// - `KILOBYTES`
	// - `MEGABITS`
	// - `MEGABYTES`
	// - `GIGABITS`
	// - `GIGABYTES`
	// - `TERABYTES`
	// - `PETABYTES`
	// - `MILLISECONDS`
	// - `SECONDS`
	// - `MINUTES`
	// - `HOURS`
	// - `DAYS`
	Units pulumi.StringPtrInput `pulumi:"units"`
}

func (AlertConfigurationMetricThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMetricThreshold)(nil)).Elem()
}

func (i AlertConfigurationMetricThresholdArgs) ToAlertConfigurationMetricThresholdOutput() AlertConfigurationMetricThresholdOutput {
	return i.ToAlertConfigurationMetricThresholdOutputWithContext(context.Background())
}

func (i AlertConfigurationMetricThresholdArgs) ToAlertConfigurationMetricThresholdOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMetricThresholdOutput)
}

func (i AlertConfigurationMetricThresholdArgs) ToAlertConfigurationMetricThresholdPtrOutput() AlertConfigurationMetricThresholdPtrOutput {
	return i.ToAlertConfigurationMetricThresholdPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationMetricThresholdArgs) ToAlertConfigurationMetricThresholdPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMetricThresholdOutput).ToAlertConfigurationMetricThresholdPtrOutputWithContext(ctx)
}

// AlertConfigurationMetricThresholdPtrInput is an input type that accepts AlertConfigurationMetricThresholdArgs, AlertConfigurationMetricThresholdPtr and AlertConfigurationMetricThresholdPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationMetricThresholdPtrInput` via:
//
//          AlertConfigurationMetricThresholdArgs{...}
//
//  or:
//
//          nil
type AlertConfigurationMetricThresholdPtrInput interface {
	pulumi.Input

	ToAlertConfigurationMetricThresholdPtrOutput() AlertConfigurationMetricThresholdPtrOutput
	ToAlertConfigurationMetricThresholdPtrOutputWithContext(context.Context) AlertConfigurationMetricThresholdPtrOutput
}

type alertConfigurationMetricThresholdPtrType AlertConfigurationMetricThresholdArgs

func AlertConfigurationMetricThresholdPtr(v *AlertConfigurationMetricThresholdArgs) AlertConfigurationMetricThresholdPtrInput {
	return (*alertConfigurationMetricThresholdPtrType)(v)
}

func (*alertConfigurationMetricThresholdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationMetricThreshold)(nil)).Elem()
}

func (i *alertConfigurationMetricThresholdPtrType) ToAlertConfigurationMetricThresholdPtrOutput() AlertConfigurationMetricThresholdPtrOutput {
	return i.ToAlertConfigurationMetricThresholdPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationMetricThresholdPtrType) ToAlertConfigurationMetricThresholdPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMetricThresholdPtrOutput)
}

type AlertConfigurationMetricThresholdOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMetricThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMetricThreshold)(nil)).Elem()
}

func (o AlertConfigurationMetricThresholdOutput) ToAlertConfigurationMetricThresholdOutput() AlertConfigurationMetricThresholdOutput {
	return o
}

func (o AlertConfigurationMetricThresholdOutput) ToAlertConfigurationMetricThresholdOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdOutput {
	return o
}

func (o AlertConfigurationMetricThresholdOutput) ToAlertConfigurationMetricThresholdPtrOutput() AlertConfigurationMetricThresholdPtrOutput {
	return o.ToAlertConfigurationMetricThresholdPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationMetricThresholdOutput) ToAlertConfigurationMetricThresholdPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThreshold) *AlertConfigurationMetricThreshold {
		return &v
	}).(AlertConfigurationMetricThresholdPtrOutput)
}

// Name of the metric to check.
func (o AlertConfigurationMetricThresholdOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThreshold) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// This must be set to AVERAGE. Atlas computes the current metric value as an average.
func (o AlertConfigurationMetricThresholdOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThreshold) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
// - `GREATER_THAN`
// - `LESS_THAN`
func (o AlertConfigurationMetricThresholdOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThreshold) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o AlertConfigurationMetricThresholdOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThreshold) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

// The units for the threshold value. Depends on the type of metric.
// Accepted values are:
// - `RAW`
// - `BITS`
// - `BYTES`
// - `KILOBITS`
// - `KILOBYTES`
// - `MEGABITS`
// - `MEGABYTES`
// - `GIGABITS`
// - `GIGABYTES`
// - `TERABYTES`
// - `PETABYTES`
// - `MILLISECONDS`
// - `SECONDS`
// - `MINUTES`
// - `HOURS`
// - `DAYS`
func (o AlertConfigurationMetricThresholdOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThreshold) *string { return v.Units }).(pulumi.StringPtrOutput)
}

type AlertConfigurationMetricThresholdPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMetricThresholdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationMetricThreshold)(nil)).Elem()
}

func (o AlertConfigurationMetricThresholdPtrOutput) ToAlertConfigurationMetricThresholdPtrOutput() AlertConfigurationMetricThresholdPtrOutput {
	return o
}

func (o AlertConfigurationMetricThresholdPtrOutput) ToAlertConfigurationMetricThresholdPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdPtrOutput {
	return o
}

func (o AlertConfigurationMetricThresholdPtrOutput) Elem() AlertConfigurationMetricThresholdOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThreshold) AlertConfigurationMetricThreshold { return *v }).(AlertConfigurationMetricThresholdOutput)
}

// Name of the metric to check.
func (o AlertConfigurationMetricThresholdPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThreshold) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

// This must be set to AVERAGE. Atlas computes the current metric value as an average.
func (o AlertConfigurationMetricThresholdPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThreshold) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
// - `GREATER_THAN`
// - `LESS_THAN`
func (o AlertConfigurationMetricThresholdPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThreshold) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o AlertConfigurationMetricThresholdPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThreshold) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

// The units for the threshold value. Depends on the type of metric.
// Accepted values are:
// - `RAW`
// - `BITS`
// - `BYTES`
// - `KILOBITS`
// - `KILOBYTES`
// - `MEGABITS`
// - `MEGABYTES`
// - `GIGABITS`
// - `GIGABYTES`
// - `TERABYTES`
// - `PETABYTES`
// - `MILLISECONDS`
// - `SECONDS`
// - `MINUTES`
// - `HOURS`
// - `DAYS`
func (o AlertConfigurationMetricThresholdPtrOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThreshold) *string {
		if v == nil {
			return nil
		}
		return v.Units
	}).(pulumi.StringPtrOutput)
}

type AlertConfigurationNotification struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken *string `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName *string `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey *string `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion *string `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin *int `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress *string `pulumi:"emailAddress"`
	// Flag indicating if email notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	EmailEnabled *bool `pulumi:"emailEnabled"`
	// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
	FlowName *string `pulumi:"flowName"`
	// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	FlowdockApiToken *string `pulumi:"flowdockApiToken"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
	IntervalMin *int `pulumi:"intervalMin"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber *string `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey *string `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion *string `pulumi:"opsGenieRegion"`
	// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
	OrgName *string  `pulumi:"orgName"`
	Roles   []string `pulumi:"roles"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey *string `pulumi:"serviceKey"`
	// Flag indicating if text message notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	SmsEnabled *bool `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId *string `pulumi:"teamId"`
	// Type of alert notification.
	// Accepted values are:
	// - `DATADOG`
	// - `EMAIL`
	// - `FLOWDOCK`
	// - `GROUP` (Project)
	// - `OPS_GENIE`
	// - `ORG`
	// - `PAGER_DUTY`
	// - `SLACK`
	// - `SMS`
	// - `TEAM`
	// - `USER`
	// - `VICTOR_OPS`
	// - `WEBHOOK`
	TypeName *string `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username *string `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey *string `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey *string `pulumi:"victorOpsRoutingKey"`
}

// AlertConfigurationNotificationInput is an input type that accepts AlertConfigurationNotificationArgs and AlertConfigurationNotificationOutput values.
// You can construct a concrete instance of `AlertConfigurationNotificationInput` via:
//
//          AlertConfigurationNotificationArgs{...}
type AlertConfigurationNotificationInput interface {
	pulumi.Input

	ToAlertConfigurationNotificationOutput() AlertConfigurationNotificationOutput
	ToAlertConfigurationNotificationOutputWithContext(context.Context) AlertConfigurationNotificationOutput
}

type AlertConfigurationNotificationArgs struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken pulumi.StringPtrInput `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName pulumi.StringPtrInput `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey pulumi.StringPtrInput `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion pulumi.StringPtrInput `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin pulumi.IntPtrInput `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress pulumi.StringPtrInput `pulumi:"emailAddress"`
	// Flag indicating if email notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	EmailEnabled pulumi.BoolPtrInput `pulumi:"emailEnabled"`
	// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
	FlowName pulumi.StringPtrInput `pulumi:"flowName"`
	// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	FlowdockApiToken pulumi.StringPtrInput `pulumi:"flowdockApiToken"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
	IntervalMin pulumi.IntPtrInput `pulumi:"intervalMin"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber pulumi.StringPtrInput `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey pulumi.StringPtrInput `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion pulumi.StringPtrInput `pulumi:"opsGenieRegion"`
	// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
	OrgName pulumi.StringPtrInput   `pulumi:"orgName"`
	Roles   pulumi.StringArrayInput `pulumi:"roles"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey pulumi.StringPtrInput `pulumi:"serviceKey"`
	// Flag indicating if text message notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	SmsEnabled pulumi.BoolPtrInput `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
	// Type of alert notification.
	// Accepted values are:
	// - `DATADOG`
	// - `EMAIL`
	// - `FLOWDOCK`
	// - `GROUP` (Project)
	// - `OPS_GENIE`
	// - `ORG`
	// - `PAGER_DUTY`
	// - `SLACK`
	// - `SMS`
	// - `TEAM`
	// - `USER`
	// - `VICTOR_OPS`
	// - `WEBHOOK`
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey pulumi.StringPtrInput `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey pulumi.StringPtrInput `pulumi:"victorOpsRoutingKey"`
}

func (AlertConfigurationNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationNotification)(nil)).Elem()
}

func (i AlertConfigurationNotificationArgs) ToAlertConfigurationNotificationOutput() AlertConfigurationNotificationOutput {
	return i.ToAlertConfigurationNotificationOutputWithContext(context.Background())
}

func (i AlertConfigurationNotificationArgs) ToAlertConfigurationNotificationOutputWithContext(ctx context.Context) AlertConfigurationNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationNotificationOutput)
}

// AlertConfigurationNotificationArrayInput is an input type that accepts AlertConfigurationNotificationArray and AlertConfigurationNotificationArrayOutput values.
// You can construct a concrete instance of `AlertConfigurationNotificationArrayInput` via:
//
//          AlertConfigurationNotificationArray{ AlertConfigurationNotificationArgs{...} }
type AlertConfigurationNotificationArrayInput interface {
	pulumi.Input

	ToAlertConfigurationNotificationArrayOutput() AlertConfigurationNotificationArrayOutput
	ToAlertConfigurationNotificationArrayOutputWithContext(context.Context) AlertConfigurationNotificationArrayOutput
}

type AlertConfigurationNotificationArray []AlertConfigurationNotificationInput

func (AlertConfigurationNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationNotification)(nil)).Elem()
}

func (i AlertConfigurationNotificationArray) ToAlertConfigurationNotificationArrayOutput() AlertConfigurationNotificationArrayOutput {
	return i.ToAlertConfigurationNotificationArrayOutputWithContext(context.Background())
}

func (i AlertConfigurationNotificationArray) ToAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) AlertConfigurationNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationNotificationArrayOutput)
}

type AlertConfigurationNotificationOutput struct{ *pulumi.OutputState }

func (AlertConfigurationNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationNotification)(nil)).Elem()
}

func (o AlertConfigurationNotificationOutput) ToAlertConfigurationNotificationOutput() AlertConfigurationNotificationOutput {
	return o
}

func (o AlertConfigurationNotificationOutput) ToAlertConfigurationNotificationOutputWithContext(ctx context.Context) AlertConfigurationNotificationOutput {
	return o
}

// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o AlertConfigurationNotificationOutput) ApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.ApiToken }).(pulumi.StringPtrOutput)
}

// Slack channel name. Required for the SLACK notifications type.
func (o AlertConfigurationNotificationOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.ChannelName }).(pulumi.StringPtrOutput)
}

// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
func (o AlertConfigurationNotificationOutput) DatadogApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.DatadogApiKey }).(pulumi.StringPtrOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
func (o AlertConfigurationNotificationOutput) DatadogRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.DatadogRegion }).(pulumi.StringPtrOutput)
}

// Number of minutes to wait after an alert condition is detected before sending out the first notification.
func (o AlertConfigurationNotificationOutput) DelayMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *int { return v.DelayMin }).(pulumi.IntPtrOutput)
}

// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
func (o AlertConfigurationNotificationOutput) EmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.EmailAddress }).(pulumi.StringPtrOutput)
}

// Flag indicating if email notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
func (o AlertConfigurationNotificationOutput) EmailEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *bool { return v.EmailEnabled }).(pulumi.BoolPtrOutput)
}

// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
func (o AlertConfigurationNotificationOutput) FlowName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.FlowName }).(pulumi.StringPtrOutput)
}

// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o AlertConfigurationNotificationOutput) FlowdockApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.FlowdockApiToken }).(pulumi.StringPtrOutput)
}

// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
func (o AlertConfigurationNotificationOutput) IntervalMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *int { return v.IntervalMin }).(pulumi.IntPtrOutput)
}

// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
func (o AlertConfigurationNotificationOutput) MobileNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.MobileNumber }).(pulumi.StringPtrOutput)
}

// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o AlertConfigurationNotificationOutput) OpsGenieApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.OpsGenieApiKey }).(pulumi.StringPtrOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
func (o AlertConfigurationNotificationOutput) OpsGenieRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.OpsGenieRegion }).(pulumi.StringPtrOutput)
}

// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
func (o AlertConfigurationNotificationOutput) OrgName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.OrgName }).(pulumi.StringPtrOutput)
}

func (o AlertConfigurationNotificationOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o AlertConfigurationNotificationOutput) ServiceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.ServiceKey }).(pulumi.StringPtrOutput)
}

// Flag indicating if text message notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
func (o AlertConfigurationNotificationOutput) SmsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *bool { return v.SmsEnabled }).(pulumi.BoolPtrOutput)
}

// Unique identifier of a team.
func (o AlertConfigurationNotificationOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

// Type of alert notification.
// Accepted values are:
// - `DATADOG`
// - `EMAIL`
// - `FLOWDOCK`
// - `GROUP` (Project)
// - `OPS_GENIE`
// - `ORG`
// - `PAGER_DUTY`
// - `SLACK`
// - `SMS`
// - `TEAM`
// - `USER`
// - `VICTOR_OPS`
// - `WEBHOOK`
func (o AlertConfigurationNotificationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
func (o AlertConfigurationNotificationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o AlertConfigurationNotificationOutput) VictorOpsApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.VictorOpsApiKey }).(pulumi.StringPtrOutput)
}

// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o AlertConfigurationNotificationOutput) VictorOpsRoutingKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.VictorOpsRoutingKey }).(pulumi.StringPtrOutput)
}

type AlertConfigurationNotificationArrayOutput struct{ *pulumi.OutputState }

func (AlertConfigurationNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationNotification)(nil)).Elem()
}

func (o AlertConfigurationNotificationArrayOutput) ToAlertConfigurationNotificationArrayOutput() AlertConfigurationNotificationArrayOutput {
	return o
}

func (o AlertConfigurationNotificationArrayOutput) ToAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) AlertConfigurationNotificationArrayOutput {
	return o
}

func (o AlertConfigurationNotificationArrayOutput) Index(i pulumi.IntInput) AlertConfigurationNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConfigurationNotification {
		return vs[0].([]AlertConfigurationNotification)[vs[1].(int)]
	}).(AlertConfigurationNotificationOutput)
}

type CloudProviderSnapshotBackupPolicyPolicy struct {
	Id          string                                              `pulumi:"id"`
	PolicyItems []CloudProviderSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// CloudProviderSnapshotBackupPolicyPolicyInput is an input type that accepts CloudProviderSnapshotBackupPolicyPolicyArgs and CloudProviderSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotBackupPolicyPolicyInput` via:
//
//          CloudProviderSnapshotBackupPolicyPolicyArgs{...}
type CloudProviderSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToCloudProviderSnapshotBackupPolicyPolicyOutput() CloudProviderSnapshotBackupPolicyPolicyOutput
	ToCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(context.Context) CloudProviderSnapshotBackupPolicyPolicyOutput
}

type CloudProviderSnapshotBackupPolicyPolicyArgs struct {
	Id          pulumi.StringInput                                          `pulumi:"id"`
	PolicyItems CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (CloudProviderSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i CloudProviderSnapshotBackupPolicyPolicyArgs) ToCloudProviderSnapshotBackupPolicyPolicyOutput() CloudProviderSnapshotBackupPolicyPolicyOutput {
	return i.ToCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotBackupPolicyPolicyArgs) ToCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotBackupPolicyPolicyOutput)
}

// CloudProviderSnapshotBackupPolicyPolicyArrayInput is an input type that accepts CloudProviderSnapshotBackupPolicyPolicyArray and CloudProviderSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotBackupPolicyPolicyArrayInput` via:
//
//          CloudProviderSnapshotBackupPolicyPolicyArray{ CloudProviderSnapshotBackupPolicyPolicyArgs{...} }
type CloudProviderSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToCloudProviderSnapshotBackupPolicyPolicyArrayOutput() CloudProviderSnapshotBackupPolicyPolicyArrayOutput
	ToCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) CloudProviderSnapshotBackupPolicyPolicyArrayOutput
}

type CloudProviderSnapshotBackupPolicyPolicyArray []CloudProviderSnapshotBackupPolicyPolicyInput

func (CloudProviderSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i CloudProviderSnapshotBackupPolicyPolicyArray) ToCloudProviderSnapshotBackupPolicyPolicyArrayOutput() CloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotBackupPolicyPolicyArray) ToCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotBackupPolicyPolicyArrayOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o CloudProviderSnapshotBackupPolicyPolicyOutput) ToCloudProviderSnapshotBackupPolicyPolicyOutput() CloudProviderSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyOutput) ToCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyOutput) PolicyItems() CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicy) []CloudProviderSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o CloudProviderSnapshotBackupPolicyPolicyArrayOutput) ToCloudProviderSnapshotBackupPolicyPolicyArrayOutput() CloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyArrayOutput) ToCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) CloudProviderSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderSnapshotBackupPolicyPolicy {
		return vs[0].([]CloudProviderSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(CloudProviderSnapshotBackupPolicyPolicyOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	Id                string `pulumi:"id"`
	RetentionUnit     string `pulumi:"retentionUnit"`
	RetentionValue    int    `pulumi:"retentionValue"`
}

// CloudProviderSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs and CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//          CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type CloudProviderSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput
	ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	Id                pulumi.StringInput `pulumi:"id"`
	RetentionUnit     pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue    pulumi.IntInput    `pulumi:"retentionValue"`
}

func (CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray and CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//          CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray{ CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray []CloudProviderSnapshotBackupPolicyPolicyPolicyItemInput

func (CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]CloudProviderSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type CloudProviderSnapshotRestoreJobDeliveryType struct {
	Automated             *bool `pulumi:"automated"`
	Download              *bool `pulumi:"download"`
	OplogInc              *int  `pulumi:"oplogInc"`
	OplogTs               *int  `pulumi:"oplogTs"`
	PointInTime           *bool `pulumi:"pointInTime"`
	PointInTimeUtcSeconds *int  `pulumi:"pointInTimeUtcSeconds"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only required if deliveryType is automated.
	TargetClusterName *string `pulumi:"targetClusterName"`
	TargetProjectId   *string `pulumi:"targetProjectId"`
}

// CloudProviderSnapshotRestoreJobDeliveryTypeInput is an input type that accepts CloudProviderSnapshotRestoreJobDeliveryTypeArgs and CloudProviderSnapshotRestoreJobDeliveryTypeOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotRestoreJobDeliveryTypeInput` via:
//
//          CloudProviderSnapshotRestoreJobDeliveryTypeArgs{...}
type CloudProviderSnapshotRestoreJobDeliveryTypeInput interface {
	pulumi.Input

	ToCloudProviderSnapshotRestoreJobDeliveryTypeOutput() CloudProviderSnapshotRestoreJobDeliveryTypeOutput
	ToCloudProviderSnapshotRestoreJobDeliveryTypeOutputWithContext(context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeOutput
}

type CloudProviderSnapshotRestoreJobDeliveryTypeArgs struct {
	Automated             pulumi.BoolPtrInput `pulumi:"automated"`
	Download              pulumi.BoolPtrInput `pulumi:"download"`
	OplogInc              pulumi.IntPtrInput  `pulumi:"oplogInc"`
	OplogTs               pulumi.IntPtrInput  `pulumi:"oplogTs"`
	PointInTime           pulumi.BoolPtrInput `pulumi:"pointInTime"`
	PointInTimeUtcSeconds pulumi.IntPtrInput  `pulumi:"pointInTimeUtcSeconds"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only required if deliveryType is automated.
	TargetClusterName pulumi.StringPtrInput `pulumi:"targetClusterName"`
	TargetProjectId   pulumi.StringPtrInput `pulumi:"targetProjectId"`
}

func (CloudProviderSnapshotRestoreJobDeliveryTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotRestoreJobDeliveryType)(nil)).Elem()
}

func (i CloudProviderSnapshotRestoreJobDeliveryTypeArgs) ToCloudProviderSnapshotRestoreJobDeliveryTypeOutput() CloudProviderSnapshotRestoreJobDeliveryTypeOutput {
	return i.ToCloudProviderSnapshotRestoreJobDeliveryTypeOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotRestoreJobDeliveryTypeArgs) ToCloudProviderSnapshotRestoreJobDeliveryTypeOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotRestoreJobDeliveryTypeOutput)
}

func (i CloudProviderSnapshotRestoreJobDeliveryTypeArgs) ToCloudProviderSnapshotRestoreJobDeliveryTypePtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput {
	return i.ToCloudProviderSnapshotRestoreJobDeliveryTypePtrOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotRestoreJobDeliveryTypeArgs) ToCloudProviderSnapshotRestoreJobDeliveryTypePtrOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotRestoreJobDeliveryTypeOutput).ToCloudProviderSnapshotRestoreJobDeliveryTypePtrOutputWithContext(ctx)
}

// CloudProviderSnapshotRestoreJobDeliveryTypePtrInput is an input type that accepts CloudProviderSnapshotRestoreJobDeliveryTypeArgs, CloudProviderSnapshotRestoreJobDeliveryTypePtr and CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotRestoreJobDeliveryTypePtrInput` via:
//
//          CloudProviderSnapshotRestoreJobDeliveryTypeArgs{...}
//
//  or:
//
//          nil
type CloudProviderSnapshotRestoreJobDeliveryTypePtrInput interface {
	pulumi.Input

	ToCloudProviderSnapshotRestoreJobDeliveryTypePtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput
	ToCloudProviderSnapshotRestoreJobDeliveryTypePtrOutputWithContext(context.Context) CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput
}

type cloudProviderSnapshotRestoreJobDeliveryTypePtrType CloudProviderSnapshotRestoreJobDeliveryTypeArgs

func CloudProviderSnapshotRestoreJobDeliveryTypePtr(v *CloudProviderSnapshotRestoreJobDeliveryTypeArgs) CloudProviderSnapshotRestoreJobDeliveryTypePtrInput {
	return (*cloudProviderSnapshotRestoreJobDeliveryTypePtrType)(v)
}

func (*cloudProviderSnapshotRestoreJobDeliveryTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderSnapshotRestoreJobDeliveryType)(nil)).Elem()
}

func (i *cloudProviderSnapshotRestoreJobDeliveryTypePtrType) ToCloudProviderSnapshotRestoreJobDeliveryTypePtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput {
	return i.ToCloudProviderSnapshotRestoreJobDeliveryTypePtrOutputWithContext(context.Background())
}

func (i *cloudProviderSnapshotRestoreJobDeliveryTypePtrType) ToCloudProviderSnapshotRestoreJobDeliveryTypePtrOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput)
}

type CloudProviderSnapshotRestoreJobDeliveryTypeOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotRestoreJobDeliveryTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotRestoreJobDeliveryType)(nil)).Elem()
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypeOutput() CloudProviderSnapshotRestoreJobDeliveryTypeOutput {
	return o
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypeOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeOutput {
	return o
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypePtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput {
	return o.ToCloudProviderSnapshotRestoreJobDeliveryTypePtrOutputWithContext(context.Background())
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypePtrOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryType) *CloudProviderSnapshotRestoreJobDeliveryType {
		return &v
	}).(CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput)
}
func (o CloudProviderSnapshotRestoreJobDeliveryTypeOutput) Automated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryType) *bool { return v.Automated }).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeOutput) Download() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryType) *bool { return v.Download }).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeOutput) OplogInc() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryType) *int { return v.OplogInc }).(pulumi.IntPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeOutput) OplogTs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryType) *int { return v.OplogTs }).(pulumi.IntPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeOutput) PointInTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryType) *bool { return v.PointInTime }).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeOutput) PointInTimeUtcSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryType) *int { return v.PointInTimeUtcSeconds }).(pulumi.IntPtrOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only required if deliveryType is automated.
func (o CloudProviderSnapshotRestoreJobDeliveryTypeOutput) TargetClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryType) *string { return v.TargetClusterName }).(pulumi.StringPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeOutput) TargetProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryType) *string { return v.TargetProjectId }).(pulumi.StringPtrOutput)
}

type CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderSnapshotRestoreJobDeliveryType)(nil)).Elem()
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypePtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput {
	return o
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypePtrOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput {
	return o
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput) Elem() CloudProviderSnapshotRestoreJobDeliveryTypeOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryType) CloudProviderSnapshotRestoreJobDeliveryType {
		return *v
	}).(CloudProviderSnapshotRestoreJobDeliveryTypeOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput) Automated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryType) *bool {
		if v == nil {
			return nil
		}
		return v.Automated
	}).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput) Download() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryType) *bool {
		if v == nil {
			return nil
		}
		return v.Download
	}).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput) OplogInc() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryType) *int {
		if v == nil {
			return nil
		}
		return v.OplogInc
	}).(pulumi.IntPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput) OplogTs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryType) *int {
		if v == nil {
			return nil
		}
		return v.OplogTs
	}).(pulumi.IntPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput) PointInTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryType) *bool {
		if v == nil {
			return nil
		}
		return v.PointInTime
	}).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput) PointInTimeUtcSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryType) *int {
		if v == nil {
			return nil
		}
		return v.PointInTimeUtcSeconds
	}).(pulumi.IntPtrOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only required if deliveryType is automated.
func (o CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput) TargetClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryType) *string {
		if v == nil {
			return nil
		}
		return v.TargetClusterName
	}).(pulumi.StringPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput) TargetProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryType) *string {
		if v == nil {
			return nil
		}
		return v.TargetProjectId
	}).(pulumi.StringPtrOutput)
}

type ClusterAdvancedConfiguration struct {
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong *bool `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled *bool `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol *string `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan *bool `pulumi:"noTableScan"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb *int `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector *int `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector *int `pulumi:"sampleSizeBiConnector"`
}

// ClusterAdvancedConfigurationInput is an input type that accepts ClusterAdvancedConfigurationArgs and ClusterAdvancedConfigurationOutput values.
// You can construct a concrete instance of `ClusterAdvancedConfigurationInput` via:
//
//          ClusterAdvancedConfigurationArgs{...}
type ClusterAdvancedConfigurationInput interface {
	pulumi.Input

	ToClusterAdvancedConfigurationOutput() ClusterAdvancedConfigurationOutput
	ToClusterAdvancedConfigurationOutputWithContext(context.Context) ClusterAdvancedConfigurationOutput
}

type ClusterAdvancedConfigurationArgs struct {
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong pulumi.BoolPtrInput `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled pulumi.BoolPtrInput `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol pulumi.StringPtrInput `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan pulumi.BoolPtrInput `pulumi:"noTableScan"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb pulumi.IntPtrInput `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector pulumi.IntPtrInput `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector pulumi.IntPtrInput `pulumi:"sampleSizeBiConnector"`
}

func (ClusterAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAdvancedConfiguration)(nil)).Elem()
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationOutput() ClusterAdvancedConfigurationOutput {
	return i.ToClusterAdvancedConfigurationOutputWithContext(context.Background())
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAdvancedConfigurationOutput)
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return i.ToClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAdvancedConfigurationOutput).ToClusterAdvancedConfigurationPtrOutputWithContext(ctx)
}

// ClusterAdvancedConfigurationPtrInput is an input type that accepts ClusterAdvancedConfigurationArgs, ClusterAdvancedConfigurationPtr and ClusterAdvancedConfigurationPtrOutput values.
// You can construct a concrete instance of `ClusterAdvancedConfigurationPtrInput` via:
//
//          ClusterAdvancedConfigurationArgs{...}
//
//  or:
//
//          nil
type ClusterAdvancedConfigurationPtrInput interface {
	pulumi.Input

	ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput
	ToClusterAdvancedConfigurationPtrOutputWithContext(context.Context) ClusterAdvancedConfigurationPtrOutput
}

type clusterAdvancedConfigurationPtrType ClusterAdvancedConfigurationArgs

func ClusterAdvancedConfigurationPtr(v *ClusterAdvancedConfigurationArgs) ClusterAdvancedConfigurationPtrInput {
	return (*clusterAdvancedConfigurationPtrType)(v)
}

func (*clusterAdvancedConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAdvancedConfiguration)(nil)).Elem()
}

func (i *clusterAdvancedConfigurationPtrType) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return i.ToClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (i *clusterAdvancedConfigurationPtrType) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAdvancedConfigurationPtrOutput)
}

type ClusterAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (ClusterAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAdvancedConfiguration)(nil)).Elem()
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationOutput() ClusterAdvancedConfigurationOutput {
	return o
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationOutput {
	return o
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return o.ToClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *ClusterAdvancedConfiguration {
		return &v
	}).(ClusterAdvancedConfigurationPtrOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o ClusterAdvancedConfigurationOutput) FailIndexKeyTooLong() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *bool { return v.FailIndexKeyTooLong }).(pulumi.BoolPtrOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o ClusterAdvancedConfigurationOutput) JavascriptEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *bool { return v.JavascriptEnabled }).(pulumi.BoolPtrOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o ClusterAdvancedConfigurationOutput) MinimumEnabledTlsProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *string { return v.MinimumEnabledTlsProtocol }).(pulumi.StringPtrOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o ClusterAdvancedConfigurationOutput) NoTableScan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *bool { return v.NoTableScan }).(pulumi.BoolPtrOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o ClusterAdvancedConfigurationOutput) OplogSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.OplogSizeMb }).(pulumi.IntPtrOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationOutput) SampleRefreshIntervalBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.SampleRefreshIntervalBiConnector }).(pulumi.IntPtrOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationOutput) SampleSizeBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.SampleSizeBiConnector }).(pulumi.IntPtrOutput)
}

type ClusterAdvancedConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClusterAdvancedConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAdvancedConfiguration)(nil)).Elem()
}

func (o ClusterAdvancedConfigurationPtrOutput) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return o
}

func (o ClusterAdvancedConfigurationPtrOutput) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return o
}

func (o ClusterAdvancedConfigurationPtrOutput) Elem() ClusterAdvancedConfigurationOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) ClusterAdvancedConfiguration { return *v }).(ClusterAdvancedConfigurationOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o ClusterAdvancedConfigurationPtrOutput) FailIndexKeyTooLong() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.FailIndexKeyTooLong
	}).(pulumi.BoolPtrOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o ClusterAdvancedConfigurationPtrOutput) JavascriptEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.JavascriptEnabled
	}).(pulumi.BoolPtrOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o ClusterAdvancedConfigurationPtrOutput) MinimumEnabledTlsProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.MinimumEnabledTlsProtocol
	}).(pulumi.StringPtrOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o ClusterAdvancedConfigurationPtrOutput) NoTableScan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.NoTableScan
	}).(pulumi.BoolPtrOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o ClusterAdvancedConfigurationPtrOutput) OplogSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.OplogSizeMb
	}).(pulumi.IntPtrOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationPtrOutput) SampleRefreshIntervalBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SampleRefreshIntervalBiConnector
	}).(pulumi.IntPtrOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationPtrOutput) SampleSizeBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SampleSizeBiConnector
	}).(pulumi.IntPtrOutput)
}

type ClusterBiConnector struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled *string `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference *string `pulumi:"readPreference"`
}

// ClusterBiConnectorInput is an input type that accepts ClusterBiConnectorArgs and ClusterBiConnectorOutput values.
// You can construct a concrete instance of `ClusterBiConnectorInput` via:
//
//          ClusterBiConnectorArgs{...}
type ClusterBiConnectorInput interface {
	pulumi.Input

	ToClusterBiConnectorOutput() ClusterBiConnectorOutput
	ToClusterBiConnectorOutputWithContext(context.Context) ClusterBiConnectorOutput
}

type ClusterBiConnectorArgs struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled pulumi.StringPtrInput `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringPtrInput `pulumi:"readPreference"`
}

func (ClusterBiConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBiConnector)(nil)).Elem()
}

func (i ClusterBiConnectorArgs) ToClusterBiConnectorOutput() ClusterBiConnectorOutput {
	return i.ToClusterBiConnectorOutputWithContext(context.Background())
}

func (i ClusterBiConnectorArgs) ToClusterBiConnectorOutputWithContext(ctx context.Context) ClusterBiConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBiConnectorOutput)
}

func (i ClusterBiConnectorArgs) ToClusterBiConnectorPtrOutput() ClusterBiConnectorPtrOutput {
	return i.ToClusterBiConnectorPtrOutputWithContext(context.Background())
}

func (i ClusterBiConnectorArgs) ToClusterBiConnectorPtrOutputWithContext(ctx context.Context) ClusterBiConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBiConnectorOutput).ToClusterBiConnectorPtrOutputWithContext(ctx)
}

// ClusterBiConnectorPtrInput is an input type that accepts ClusterBiConnectorArgs, ClusterBiConnectorPtr and ClusterBiConnectorPtrOutput values.
// You can construct a concrete instance of `ClusterBiConnectorPtrInput` via:
//
//          ClusterBiConnectorArgs{...}
//
//  or:
//
//          nil
type ClusterBiConnectorPtrInput interface {
	pulumi.Input

	ToClusterBiConnectorPtrOutput() ClusterBiConnectorPtrOutput
	ToClusterBiConnectorPtrOutputWithContext(context.Context) ClusterBiConnectorPtrOutput
}

type clusterBiConnectorPtrType ClusterBiConnectorArgs

func ClusterBiConnectorPtr(v *ClusterBiConnectorArgs) ClusterBiConnectorPtrInput {
	return (*clusterBiConnectorPtrType)(v)
}

func (*clusterBiConnectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBiConnector)(nil)).Elem()
}

func (i *clusterBiConnectorPtrType) ToClusterBiConnectorPtrOutput() ClusterBiConnectorPtrOutput {
	return i.ToClusterBiConnectorPtrOutputWithContext(context.Background())
}

func (i *clusterBiConnectorPtrType) ToClusterBiConnectorPtrOutputWithContext(ctx context.Context) ClusterBiConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBiConnectorPtrOutput)
}

type ClusterBiConnectorOutput struct{ *pulumi.OutputState }

func (ClusterBiConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBiConnector)(nil)).Elem()
}

func (o ClusterBiConnectorOutput) ToClusterBiConnectorOutput() ClusterBiConnectorOutput {
	return o
}

func (o ClusterBiConnectorOutput) ToClusterBiConnectorOutputWithContext(ctx context.Context) ClusterBiConnectorOutput {
	return o
}

func (o ClusterBiConnectorOutput) ToClusterBiConnectorPtrOutput() ClusterBiConnectorPtrOutput {
	return o.ToClusterBiConnectorPtrOutputWithContext(context.Background())
}

func (o ClusterBiConnectorOutput) ToClusterBiConnectorPtrOutputWithContext(ctx context.Context) ClusterBiConnectorPtrOutput {
	return o.ApplyT(func(v ClusterBiConnector) *ClusterBiConnector {
		return &v
	}).(ClusterBiConnectorPtrOutput)
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o ClusterBiConnectorOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBiConnector) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o ClusterBiConnectorOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBiConnector) *string { return v.ReadPreference }).(pulumi.StringPtrOutput)
}

type ClusterBiConnectorPtrOutput struct{ *pulumi.OutputState }

func (ClusterBiConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBiConnector)(nil)).Elem()
}

func (o ClusterBiConnectorPtrOutput) ToClusterBiConnectorPtrOutput() ClusterBiConnectorPtrOutput {
	return o
}

func (o ClusterBiConnectorPtrOutput) ToClusterBiConnectorPtrOutputWithContext(ctx context.Context) ClusterBiConnectorPtrOutput {
	return o
}

func (o ClusterBiConnectorPtrOutput) Elem() ClusterBiConnectorOutput {
	return o.ApplyT(func(v *ClusterBiConnector) ClusterBiConnector { return *v }).(ClusterBiConnectorOutput)
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o ClusterBiConnectorPtrOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBiConnector) *string {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.StringPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o ClusterBiConnectorPtrOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBiConnector) *string {
		if v == nil {
			return nil
		}
		return v.ReadPreference
	}).(pulumi.StringPtrOutput)
}

type ClusterConnectionStrings struct {
	AwsPrivateLink    map[string]interface{} `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv map[string]interface{} `pulumi:"awsPrivateLinkSrv"`
	Private           *string                `pulumi:"private"`
	PrivateSrv        *string                `pulumi:"privateSrv"`
	Standard          *string                `pulumi:"standard"`
	StandardSrv       *string                `pulumi:"standardSrv"`
}

// ClusterConnectionStringsInput is an input type that accepts ClusterConnectionStringsArgs and ClusterConnectionStringsOutput values.
// You can construct a concrete instance of `ClusterConnectionStringsInput` via:
//
//          ClusterConnectionStringsArgs{...}
type ClusterConnectionStringsInput interface {
	pulumi.Input

	ToClusterConnectionStringsOutput() ClusterConnectionStringsOutput
	ToClusterConnectionStringsOutputWithContext(context.Context) ClusterConnectionStringsOutput
}

type ClusterConnectionStringsArgs struct {
	AwsPrivateLink    pulumi.MapInput       `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv pulumi.MapInput       `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringPtrInput `pulumi:"private"`
	PrivateSrv        pulumi.StringPtrInput `pulumi:"privateSrv"`
	Standard          pulumi.StringPtrInput `pulumi:"standard"`
	StandardSrv       pulumi.StringPtrInput `pulumi:"standardSrv"`
}

func (ClusterConnectionStringsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionStrings)(nil)).Elem()
}

func (i ClusterConnectionStringsArgs) ToClusterConnectionStringsOutput() ClusterConnectionStringsOutput {
	return i.ToClusterConnectionStringsOutputWithContext(context.Background())
}

func (i ClusterConnectionStringsArgs) ToClusterConnectionStringsOutputWithContext(ctx context.Context) ClusterConnectionStringsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringsOutput)
}

func (i ClusterConnectionStringsArgs) ToClusterConnectionStringsPtrOutput() ClusterConnectionStringsPtrOutput {
	return i.ToClusterConnectionStringsPtrOutputWithContext(context.Background())
}

func (i ClusterConnectionStringsArgs) ToClusterConnectionStringsPtrOutputWithContext(ctx context.Context) ClusterConnectionStringsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringsOutput).ToClusterConnectionStringsPtrOutputWithContext(ctx)
}

// ClusterConnectionStringsPtrInput is an input type that accepts ClusterConnectionStringsArgs, ClusterConnectionStringsPtr and ClusterConnectionStringsPtrOutput values.
// You can construct a concrete instance of `ClusterConnectionStringsPtrInput` via:
//
//          ClusterConnectionStringsArgs{...}
//
//  or:
//
//          nil
type ClusterConnectionStringsPtrInput interface {
	pulumi.Input

	ToClusterConnectionStringsPtrOutput() ClusterConnectionStringsPtrOutput
	ToClusterConnectionStringsPtrOutputWithContext(context.Context) ClusterConnectionStringsPtrOutput
}

type clusterConnectionStringsPtrType ClusterConnectionStringsArgs

func ClusterConnectionStringsPtr(v *ClusterConnectionStringsArgs) ClusterConnectionStringsPtrInput {
	return (*clusterConnectionStringsPtrType)(v)
}

func (*clusterConnectionStringsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConnectionStrings)(nil)).Elem()
}

func (i *clusterConnectionStringsPtrType) ToClusterConnectionStringsPtrOutput() ClusterConnectionStringsPtrOutput {
	return i.ToClusterConnectionStringsPtrOutputWithContext(context.Background())
}

func (i *clusterConnectionStringsPtrType) ToClusterConnectionStringsPtrOutputWithContext(ctx context.Context) ClusterConnectionStringsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringsPtrOutput)
}

type ClusterConnectionStringsOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionStrings)(nil)).Elem()
}

func (o ClusterConnectionStringsOutput) ToClusterConnectionStringsOutput() ClusterConnectionStringsOutput {
	return o
}

func (o ClusterConnectionStringsOutput) ToClusterConnectionStringsOutputWithContext(ctx context.Context) ClusterConnectionStringsOutput {
	return o
}

func (o ClusterConnectionStringsOutput) ToClusterConnectionStringsPtrOutput() ClusterConnectionStringsPtrOutput {
	return o.ToClusterConnectionStringsPtrOutputWithContext(context.Background())
}

func (o ClusterConnectionStringsOutput) ToClusterConnectionStringsPtrOutputWithContext(ctx context.Context) ClusterConnectionStringsPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStrings) *ClusterConnectionStrings {
		return &v
	}).(ClusterConnectionStringsPtrOutput)
}
func (o ClusterConnectionStringsOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterConnectionStrings) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

func (o ClusterConnectionStringsOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterConnectionStrings) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o ClusterConnectionStringsOutput) Private() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStrings) *string { return v.Private }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringsOutput) PrivateSrv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStrings) *string { return v.PrivateSrv }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringsOutput) Standard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStrings) *string { return v.Standard }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringsOutput) StandardSrv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStrings) *string { return v.StandardSrv }).(pulumi.StringPtrOutput)
}

type ClusterConnectionStringsPtrOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConnectionStrings)(nil)).Elem()
}

func (o ClusterConnectionStringsPtrOutput) ToClusterConnectionStringsPtrOutput() ClusterConnectionStringsPtrOutput {
	return o
}

func (o ClusterConnectionStringsPtrOutput) ToClusterConnectionStringsPtrOutputWithContext(ctx context.Context) ClusterConnectionStringsPtrOutput {
	return o
}

func (o ClusterConnectionStringsPtrOutput) Elem() ClusterConnectionStringsOutput {
	return o.ApplyT(func(v *ClusterConnectionStrings) ClusterConnectionStrings { return *v }).(ClusterConnectionStringsOutput)
}

func (o ClusterConnectionStringsPtrOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterConnectionStrings) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AwsPrivateLink
	}).(pulumi.MapOutput)
}

func (o ClusterConnectionStringsPtrOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterConnectionStrings) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AwsPrivateLinkSrv
	}).(pulumi.MapOutput)
}

func (o ClusterConnectionStringsPtrOutput) Private() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterConnectionStrings) *string {
		if v == nil {
			return nil
		}
		return v.Private
	}).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringsPtrOutput) PrivateSrv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterConnectionStrings) *string {
		if v == nil {
			return nil
		}
		return v.PrivateSrv
	}).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringsPtrOutput) Standard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterConnectionStrings) *string {
		if v == nil {
			return nil
		}
		return v.Standard
	}).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringsPtrOutput) StandardSrv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterConnectionStrings) *string {
		if v == nil {
			return nil
		}
		return v.StandardSrv
	}).(pulumi.StringPtrOutput)
}

type ClusterLabel struct {
	// The key that you want to write.
	Key *string `pulumi:"key"`
	// The value that you want to write.
	Value *string `pulumi:"value"`
}

// ClusterLabelInput is an input type that accepts ClusterLabelArgs and ClusterLabelOutput values.
// You can construct a concrete instance of `ClusterLabelInput` via:
//
//          ClusterLabelArgs{...}
type ClusterLabelInput interface {
	pulumi.Input

	ToClusterLabelOutput() ClusterLabelOutput
	ToClusterLabelOutputWithContext(context.Context) ClusterLabelOutput
}

type ClusterLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClusterLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLabel)(nil)).Elem()
}

func (i ClusterLabelArgs) ToClusterLabelOutput() ClusterLabelOutput {
	return i.ToClusterLabelOutputWithContext(context.Background())
}

func (i ClusterLabelArgs) ToClusterLabelOutputWithContext(ctx context.Context) ClusterLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLabelOutput)
}

// ClusterLabelArrayInput is an input type that accepts ClusterLabelArray and ClusterLabelArrayOutput values.
// You can construct a concrete instance of `ClusterLabelArrayInput` via:
//
//          ClusterLabelArray{ ClusterLabelArgs{...} }
type ClusterLabelArrayInput interface {
	pulumi.Input

	ToClusterLabelArrayOutput() ClusterLabelArrayOutput
	ToClusterLabelArrayOutputWithContext(context.Context) ClusterLabelArrayOutput
}

type ClusterLabelArray []ClusterLabelInput

func (ClusterLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterLabel)(nil)).Elem()
}

func (i ClusterLabelArray) ToClusterLabelArrayOutput() ClusterLabelArrayOutput {
	return i.ToClusterLabelArrayOutputWithContext(context.Background())
}

func (i ClusterLabelArray) ToClusterLabelArrayOutputWithContext(ctx context.Context) ClusterLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLabelArrayOutput)
}

type ClusterLabelOutput struct{ *pulumi.OutputState }

func (ClusterLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLabel)(nil)).Elem()
}

func (o ClusterLabelOutput) ToClusterLabelOutput() ClusterLabelOutput {
	return o
}

func (o ClusterLabelOutput) ToClusterLabelOutputWithContext(ctx context.Context) ClusterLabelOutput {
	return o
}

// The key that you want to write.
func (o ClusterLabelOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLabel) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value that you want to write.
func (o ClusterLabelOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLabel) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClusterLabelArrayOutput struct{ *pulumi.OutputState }

func (ClusterLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterLabel)(nil)).Elem()
}

func (o ClusterLabelArrayOutput) ToClusterLabelArrayOutput() ClusterLabelArrayOutput {
	return o
}

func (o ClusterLabelArrayOutput) ToClusterLabelArrayOutputWithContext(ctx context.Context) ClusterLabelArrayOutput {
	return o
}

func (o ClusterLabelArrayOutput) Index(i pulumi.IntInput) ClusterLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterLabel {
		return vs[0].([]ClusterLabel)[vs[1].(int)]
	}).(ClusterLabelOutput)
}

type ClusterReplicationSpec struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id *string `pulumi:"id"`
	// Number of shards to deploy in the specified zone, minimum 1.
	NumShards int `pulumi:"numShards"`
	// Physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs []ClusterReplicationSpecRegionsConfig `pulumi:"regionsConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName *string `pulumi:"zoneName"`
}

// ClusterReplicationSpecInput is an input type that accepts ClusterReplicationSpecArgs and ClusterReplicationSpecOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecInput` via:
//
//          ClusterReplicationSpecArgs{...}
type ClusterReplicationSpecInput interface {
	pulumi.Input

	ToClusterReplicationSpecOutput() ClusterReplicationSpecOutput
	ToClusterReplicationSpecOutputWithContext(context.Context) ClusterReplicationSpecOutput
}

type ClusterReplicationSpecArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Number of shards to deploy in the specified zone, minimum 1.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs ClusterReplicationSpecRegionsConfigArrayInput `pulumi:"regionsConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName pulumi.StringPtrInput `pulumi:"zoneName"`
}

func (ClusterReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpec)(nil)).Elem()
}

func (i ClusterReplicationSpecArgs) ToClusterReplicationSpecOutput() ClusterReplicationSpecOutput {
	return i.ToClusterReplicationSpecOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecArgs) ToClusterReplicationSpecOutputWithContext(ctx context.Context) ClusterReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecOutput)
}

// ClusterReplicationSpecArrayInput is an input type that accepts ClusterReplicationSpecArray and ClusterReplicationSpecArrayOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecArrayInput` via:
//
//          ClusterReplicationSpecArray{ ClusterReplicationSpecArgs{...} }
type ClusterReplicationSpecArrayInput interface {
	pulumi.Input

	ToClusterReplicationSpecArrayOutput() ClusterReplicationSpecArrayOutput
	ToClusterReplicationSpecArrayOutputWithContext(context.Context) ClusterReplicationSpecArrayOutput
}

type ClusterReplicationSpecArray []ClusterReplicationSpecInput

func (ClusterReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpec)(nil)).Elem()
}

func (i ClusterReplicationSpecArray) ToClusterReplicationSpecArrayOutput() ClusterReplicationSpecArrayOutput {
	return i.ToClusterReplicationSpecArrayOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecArray) ToClusterReplicationSpecArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecArrayOutput)
}

type ClusterReplicationSpecOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpec)(nil)).Elem()
}

func (o ClusterReplicationSpecOutput) ToClusterReplicationSpecOutput() ClusterReplicationSpecOutput {
	return o
}

func (o ClusterReplicationSpecOutput) ToClusterReplicationSpecOutputWithContext(ctx context.Context) ClusterReplicationSpecOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o ClusterReplicationSpecOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Number of shards to deploy in the specified zone, minimum 1.
func (o ClusterReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
func (o ClusterReplicationSpecOutput) RegionsConfigs() ClusterReplicationSpecRegionsConfigArrayOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) []ClusterReplicationSpecRegionsConfig { return v.RegionsConfigs }).(ClusterReplicationSpecRegionsConfigArrayOutput)
}

// Name for the zone in a Global Cluster.
func (o ClusterReplicationSpecOutput) ZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) *string { return v.ZoneName }).(pulumi.StringPtrOutput)
}

type ClusterReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpec)(nil)).Elem()
}

func (o ClusterReplicationSpecArrayOutput) ToClusterReplicationSpecArrayOutput() ClusterReplicationSpecArrayOutput {
	return o
}

func (o ClusterReplicationSpecArrayOutput) ToClusterReplicationSpecArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecArrayOutput {
	return o
}

func (o ClusterReplicationSpecArrayOutput) Index(i pulumi.IntInput) ClusterReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterReplicationSpec {
		return vs[0].([]ClusterReplicationSpec)[vs[1].(int)]
	}).(ClusterReplicationSpecOutput)
}

type ClusterReplicationSpecRegionsConfig struct {
	// The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
	AnalyticsNodes *int `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
	// * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
	// * Specify 0 if you do not want any electable nodes in the region.
	// * You cannot create electable nodes in a region if `priority` is 0.
	ElectableNodes *int `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	// * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
	// * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
	// * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
	Priority *int `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes *int `pulumi:"readOnlyNodes"`
	// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	RegionName *string `pulumi:"regionName"`
}

// ClusterReplicationSpecRegionsConfigInput is an input type that accepts ClusterReplicationSpecRegionsConfigArgs and ClusterReplicationSpecRegionsConfigOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecRegionsConfigInput` via:
//
//          ClusterReplicationSpecRegionsConfigArgs{...}
type ClusterReplicationSpecRegionsConfigInput interface {
	pulumi.Input

	ToClusterReplicationSpecRegionsConfigOutput() ClusterReplicationSpecRegionsConfigOutput
	ToClusterReplicationSpecRegionsConfigOutputWithContext(context.Context) ClusterReplicationSpecRegionsConfigOutput
}

type ClusterReplicationSpecRegionsConfigArgs struct {
	// The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
	AnalyticsNodes pulumi.IntPtrInput `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
	// * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
	// * Specify 0 if you do not want any electable nodes in the region.
	// * You cannot create electable nodes in a region if `priority` is 0.
	ElectableNodes pulumi.IntPtrInput `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	// * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
	// * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
	// * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes pulumi.IntPtrInput `pulumi:"readOnlyNodes"`
	// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	RegionName pulumi.StringPtrInput `pulumi:"regionName"`
}

func (ClusterReplicationSpecRegionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i ClusterReplicationSpecRegionsConfigArgs) ToClusterReplicationSpecRegionsConfigOutput() ClusterReplicationSpecRegionsConfigOutput {
	return i.ToClusterReplicationSpecRegionsConfigOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecRegionsConfigArgs) ToClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecRegionsConfigOutput)
}

// ClusterReplicationSpecRegionsConfigArrayInput is an input type that accepts ClusterReplicationSpecRegionsConfigArray and ClusterReplicationSpecRegionsConfigArrayOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecRegionsConfigArrayInput` via:
//
//          ClusterReplicationSpecRegionsConfigArray{ ClusterReplicationSpecRegionsConfigArgs{...} }
type ClusterReplicationSpecRegionsConfigArrayInput interface {
	pulumi.Input

	ToClusterReplicationSpecRegionsConfigArrayOutput() ClusterReplicationSpecRegionsConfigArrayOutput
	ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Context) ClusterReplicationSpecRegionsConfigArrayOutput
}

type ClusterReplicationSpecRegionsConfigArray []ClusterReplicationSpecRegionsConfigInput

func (ClusterReplicationSpecRegionsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i ClusterReplicationSpecRegionsConfigArray) ToClusterReplicationSpecRegionsConfigArrayOutput() ClusterReplicationSpecRegionsConfigArrayOutput {
	return i.ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecRegionsConfigArray) ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecRegionsConfigArrayOutput)
}

type ClusterReplicationSpecRegionsConfigOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecRegionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o ClusterReplicationSpecRegionsConfigOutput) ToClusterReplicationSpecRegionsConfigOutput() ClusterReplicationSpecRegionsConfigOutput {
	return o
}

func (o ClusterReplicationSpecRegionsConfigOutput) ToClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigOutput {
	return o
}

// The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
func (o ClusterReplicationSpecRegionsConfigOutput) AnalyticsNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.AnalyticsNodes }).(pulumi.IntPtrOutput)
}

// Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
// * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
// * Specify 0 if you do not want any electable nodes in the region.
// * You cannot create electable nodes in a region if `priority` is 0.
func (o ClusterReplicationSpecRegionsConfigOutput) ElectableNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.ElectableNodes }).(pulumi.IntPtrOutput)
}

// Election priority of the region. For regions with only read-only nodes, set this value to 0.
// * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
// * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
// * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
func (o ClusterReplicationSpecRegionsConfigOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
func (o ClusterReplicationSpecRegionsConfigOutput) ReadOnlyNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.ReadOnlyNodes }).(pulumi.IntPtrOutput)
}

// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
func (o ClusterReplicationSpecRegionsConfigOutput) RegionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *string { return v.RegionName }).(pulumi.StringPtrOutput)
}

type ClusterReplicationSpecRegionsConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecRegionsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o ClusterReplicationSpecRegionsConfigArrayOutput) ToClusterReplicationSpecRegionsConfigArrayOutput() ClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o ClusterReplicationSpecRegionsConfigArrayOutput) ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o ClusterReplicationSpecRegionsConfigArrayOutput) Index(i pulumi.IntInput) ClusterReplicationSpecRegionsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterReplicationSpecRegionsConfig {
		return vs[0].([]ClusterReplicationSpecRegionsConfig)[vs[1].(int)]
	}).(ClusterReplicationSpecRegionsConfigOutput)
}

type ClusterSnapshotBackupPolicy struct {
	// The cluster ID.
	ClusterId             *string                             `pulumi:"clusterId"`
	ClusterName           *string                             `pulumi:"clusterName"`
	NextSnapshot          *string                             `pulumi:"nextSnapshot"`
	Policies              []ClusterSnapshotBackupPolicyPolicy `pulumi:"policies"`
	ReferenceHourOfDay    *int                                `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour *int                                `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     *int                                `pulumi:"restoreWindowDays"`
	UpdateSnapshots       *bool                               `pulumi:"updateSnapshots"`
}

// ClusterSnapshotBackupPolicyInput is an input type that accepts ClusterSnapshotBackupPolicyArgs and ClusterSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyInput` via:
//
//          ClusterSnapshotBackupPolicyArgs{...}
type ClusterSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyOutput() ClusterSnapshotBackupPolicyOutput
	ToClusterSnapshotBackupPolicyOutputWithContext(context.Context) ClusterSnapshotBackupPolicyOutput
}

type ClusterSnapshotBackupPolicyArgs struct {
	// The cluster ID.
	ClusterId             pulumi.StringPtrInput                       `pulumi:"clusterId"`
	ClusterName           pulumi.StringPtrInput                       `pulumi:"clusterName"`
	NextSnapshot          pulumi.StringPtrInput                       `pulumi:"nextSnapshot"`
	Policies              ClusterSnapshotBackupPolicyPolicyArrayInput `pulumi:"policies"`
	ReferenceHourOfDay    pulumi.IntPtrInput                          `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour pulumi.IntPtrInput                          `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     pulumi.IntPtrInput                          `pulumi:"restoreWindowDays"`
	UpdateSnapshots       pulumi.BoolPtrInput                         `pulumi:"updateSnapshots"`
}

func (ClusterSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyArgs) ToClusterSnapshotBackupPolicyOutput() ClusterSnapshotBackupPolicyOutput {
	return i.ToClusterSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyArgs) ToClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyOutput)
}

// ClusterSnapshotBackupPolicyArrayInput is an input type that accepts ClusterSnapshotBackupPolicyArray and ClusterSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyArrayInput` via:
//
//          ClusterSnapshotBackupPolicyArray{ ClusterSnapshotBackupPolicyArgs{...} }
type ClusterSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyArrayOutput() ClusterSnapshotBackupPolicyArrayOutput
	ToClusterSnapshotBackupPolicyArrayOutputWithContext(context.Context) ClusterSnapshotBackupPolicyArrayOutput
}

type ClusterSnapshotBackupPolicyArray []ClusterSnapshotBackupPolicyInput

func (ClusterSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyArray) ToClusterSnapshotBackupPolicyArrayOutput() ClusterSnapshotBackupPolicyArrayOutput {
	return i.ToClusterSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyArray) ToClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyArrayOutput)
}

type ClusterSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyOutput) ToClusterSnapshotBackupPolicyOutput() ClusterSnapshotBackupPolicyOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyOutput) ToClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyOutput {
	return o
}

// The cluster ID.
func (o ClusterSnapshotBackupPolicyOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) NextSnapshot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *string { return v.NextSnapshot }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) Policies() ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) []ClusterSnapshotBackupPolicyPolicy { return v.Policies }).(ClusterSnapshotBackupPolicyPolicyArrayOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) ReferenceHourOfDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *int { return v.ReferenceHourOfDay }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) ReferenceMinuteOfHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *int { return v.ReferenceMinuteOfHour }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) RestoreWindowDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *int { return v.RestoreWindowDays }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) UpdateSnapshots() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *bool { return v.UpdateSnapshots }).(pulumi.BoolPtrOutput)
}

type ClusterSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyArrayOutput) ToClusterSnapshotBackupPolicyArrayOutput() ClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyArrayOutput) ToClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) ClusterSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSnapshotBackupPolicy {
		return vs[0].([]ClusterSnapshotBackupPolicy)[vs[1].(int)]
	}).(ClusterSnapshotBackupPolicyOutput)
}

type ClusterSnapshotBackupPolicyPolicy struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          *string                                       `pulumi:"id"`
	PolicyItems []ClusterSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// ClusterSnapshotBackupPolicyPolicyInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyArgs and ClusterSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyInput` via:
//
//          ClusterSnapshotBackupPolicyPolicyArgs{...}
type ClusterSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyOutput() ClusterSnapshotBackupPolicyPolicyOutput
	ToClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyOutput
}

type ClusterSnapshotBackupPolicyPolicyArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          pulumi.StringPtrInput                                 `pulumi:"id"`
	PolicyItems ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (ClusterSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyArgs) ToClusterSnapshotBackupPolicyPolicyOutput() ClusterSnapshotBackupPolicyPolicyOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyArgs) ToClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyOutput)
}

// ClusterSnapshotBackupPolicyPolicyArrayInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyArray and ClusterSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyArrayInput` via:
//
//          ClusterSnapshotBackupPolicyPolicyArray{ ClusterSnapshotBackupPolicyPolicyArgs{...} }
type ClusterSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyArrayOutput() ClusterSnapshotBackupPolicyPolicyArrayOutput
	ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyArrayOutput
}

type ClusterSnapshotBackupPolicyPolicyArray []ClusterSnapshotBackupPolicyPolicyInput

func (ClusterSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyArray) ToClusterSnapshotBackupPolicyPolicyArrayOutput() ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyArray) ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyArrayOutput)
}

type ClusterSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyOutput) ToClusterSnapshotBackupPolicyPolicyOutput() ClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyOutput) ToClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o ClusterSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicy) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyOutput) PolicyItems() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicy) []ClusterSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type ClusterSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyArrayOutput) ToClusterSnapshotBackupPolicyPolicyArrayOutput() ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyArrayOutput) ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) ClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSnapshotBackupPolicyPolicy {
		return vs[0].([]ClusterSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(ClusterSnapshotBackupPolicyPolicyOutput)
}

type ClusterSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval *int    `pulumi:"frequencyInterval"`
	FrequencyType     *string `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             *string `pulumi:"id"`
	RetentionUnit  *string `pulumi:"retentionUnit"`
	RetentionValue *int    `pulumi:"retentionValue"`
}

// ClusterSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyPolicyItemArgs and ClusterSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//          ClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type ClusterSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyPolicyItemOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemOutput
	ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntPtrInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             pulumi.StringPtrInput `pulumi:"id"`
	RetentionUnit  pulumi.StringPtrInput `pulumi:"retentionUnit"`
	RetentionValue pulumi.IntPtrInput    `pulumi:"retentionValue"`
}

func (ClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyPolicyItemArray and ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//          ClusterSnapshotBackupPolicyPolicyPolicyItemArray{ ClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemArray []ClusterSnapshotBackupPolicyPolicyPolicyItemInput

func (ClusterSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *int { return v.FrequencyInterval }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *string { return v.RetentionUnit }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *int { return v.RetentionValue }).(pulumi.IntPtrOutput)
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]ClusterSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(ClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type CustomDbRoleAction struct {
	// Name of the privilege action. For a complete list of actions available in the Atlas API, see [Custom Role Actions](https://docs.atlas.mongodb.com/reference/api/custom-role-actions)
	// > **Note**: The privilege actions available to the Custom Roles API resource represent a subset of the privilege actions available in the Atlas Custom Roles UI.
	Action string `pulumi:"action"`
	// Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources []CustomDbRoleActionResource `pulumi:"resources"`
}

// CustomDbRoleActionInput is an input type that accepts CustomDbRoleActionArgs and CustomDbRoleActionOutput values.
// You can construct a concrete instance of `CustomDbRoleActionInput` via:
//
//          CustomDbRoleActionArgs{...}
type CustomDbRoleActionInput interface {
	pulumi.Input

	ToCustomDbRoleActionOutput() CustomDbRoleActionOutput
	ToCustomDbRoleActionOutputWithContext(context.Context) CustomDbRoleActionOutput
}

type CustomDbRoleActionArgs struct {
	// Name of the privilege action. For a complete list of actions available in the Atlas API, see [Custom Role Actions](https://docs.atlas.mongodb.com/reference/api/custom-role-actions)
	// > **Note**: The privilege actions available to the Custom Roles API resource represent a subset of the privilege actions available in the Atlas Custom Roles UI.
	Action pulumi.StringInput `pulumi:"action"`
	// Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources CustomDbRoleActionResourceArrayInput `pulumi:"resources"`
}

func (CustomDbRoleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleAction)(nil)).Elem()
}

func (i CustomDbRoleActionArgs) ToCustomDbRoleActionOutput() CustomDbRoleActionOutput {
	return i.ToCustomDbRoleActionOutputWithContext(context.Background())
}

func (i CustomDbRoleActionArgs) ToCustomDbRoleActionOutputWithContext(ctx context.Context) CustomDbRoleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionOutput)
}

// CustomDbRoleActionArrayInput is an input type that accepts CustomDbRoleActionArray and CustomDbRoleActionArrayOutput values.
// You can construct a concrete instance of `CustomDbRoleActionArrayInput` via:
//
//          CustomDbRoleActionArray{ CustomDbRoleActionArgs{...} }
type CustomDbRoleActionArrayInput interface {
	pulumi.Input

	ToCustomDbRoleActionArrayOutput() CustomDbRoleActionArrayOutput
	ToCustomDbRoleActionArrayOutputWithContext(context.Context) CustomDbRoleActionArrayOutput
}

type CustomDbRoleActionArray []CustomDbRoleActionInput

func (CustomDbRoleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleAction)(nil)).Elem()
}

func (i CustomDbRoleActionArray) ToCustomDbRoleActionArrayOutput() CustomDbRoleActionArrayOutput {
	return i.ToCustomDbRoleActionArrayOutputWithContext(context.Background())
}

func (i CustomDbRoleActionArray) ToCustomDbRoleActionArrayOutputWithContext(ctx context.Context) CustomDbRoleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionArrayOutput)
}

type CustomDbRoleActionOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleAction)(nil)).Elem()
}

func (o CustomDbRoleActionOutput) ToCustomDbRoleActionOutput() CustomDbRoleActionOutput {
	return o
}

func (o CustomDbRoleActionOutput) ToCustomDbRoleActionOutputWithContext(ctx context.Context) CustomDbRoleActionOutput {
	return o
}

// Name of the privilege action. For a complete list of actions available in the Atlas API, see [Custom Role Actions](https://docs.atlas.mongodb.com/reference/api/custom-role-actions)
// > **Note**: The privilege actions available to the Custom Roles API resource represent a subset of the privilege actions available in the Atlas Custom Roles UI.
func (o CustomDbRoleActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDbRoleAction) string { return v.Action }).(pulumi.StringOutput)
}

// Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
func (o CustomDbRoleActionOutput) Resources() CustomDbRoleActionResourceArrayOutput {
	return o.ApplyT(func(v CustomDbRoleAction) []CustomDbRoleActionResource { return v.Resources }).(CustomDbRoleActionResourceArrayOutput)
}

type CustomDbRoleActionArrayOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleAction)(nil)).Elem()
}

func (o CustomDbRoleActionArrayOutput) ToCustomDbRoleActionArrayOutput() CustomDbRoleActionArrayOutput {
	return o
}

func (o CustomDbRoleActionArrayOutput) ToCustomDbRoleActionArrayOutputWithContext(ctx context.Context) CustomDbRoleActionArrayOutput {
	return o
}

func (o CustomDbRoleActionArrayOutput) Index(i pulumi.IntInput) CustomDbRoleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDbRoleAction {
		return vs[0].([]CustomDbRoleAction)[vs[1].(int)]
	}).(CustomDbRoleActionOutput)
}

type CustomDbRoleActionResource struct {
	Cluster        *bool   `pulumi:"cluster"`
	CollectionName *string `pulumi:"collectionName"`
	// Database on which the inherited role is granted.
	DatabaseName *string `pulumi:"databaseName"`
}

// CustomDbRoleActionResourceInput is an input type that accepts CustomDbRoleActionResourceArgs and CustomDbRoleActionResourceOutput values.
// You can construct a concrete instance of `CustomDbRoleActionResourceInput` via:
//
//          CustomDbRoleActionResourceArgs{...}
type CustomDbRoleActionResourceInput interface {
	pulumi.Input

	ToCustomDbRoleActionResourceOutput() CustomDbRoleActionResourceOutput
	ToCustomDbRoleActionResourceOutputWithContext(context.Context) CustomDbRoleActionResourceOutput
}

type CustomDbRoleActionResourceArgs struct {
	Cluster        pulumi.BoolPtrInput   `pulumi:"cluster"`
	CollectionName pulumi.StringPtrInput `pulumi:"collectionName"`
	// Database on which the inherited role is granted.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
}

func (CustomDbRoleActionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleActionResource)(nil)).Elem()
}

func (i CustomDbRoleActionResourceArgs) ToCustomDbRoleActionResourceOutput() CustomDbRoleActionResourceOutput {
	return i.ToCustomDbRoleActionResourceOutputWithContext(context.Background())
}

func (i CustomDbRoleActionResourceArgs) ToCustomDbRoleActionResourceOutputWithContext(ctx context.Context) CustomDbRoleActionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionResourceOutput)
}

// CustomDbRoleActionResourceArrayInput is an input type that accepts CustomDbRoleActionResourceArray and CustomDbRoleActionResourceArrayOutput values.
// You can construct a concrete instance of `CustomDbRoleActionResourceArrayInput` via:
//
//          CustomDbRoleActionResourceArray{ CustomDbRoleActionResourceArgs{...} }
type CustomDbRoleActionResourceArrayInput interface {
	pulumi.Input

	ToCustomDbRoleActionResourceArrayOutput() CustomDbRoleActionResourceArrayOutput
	ToCustomDbRoleActionResourceArrayOutputWithContext(context.Context) CustomDbRoleActionResourceArrayOutput
}

type CustomDbRoleActionResourceArray []CustomDbRoleActionResourceInput

func (CustomDbRoleActionResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleActionResource)(nil)).Elem()
}

func (i CustomDbRoleActionResourceArray) ToCustomDbRoleActionResourceArrayOutput() CustomDbRoleActionResourceArrayOutput {
	return i.ToCustomDbRoleActionResourceArrayOutputWithContext(context.Background())
}

func (i CustomDbRoleActionResourceArray) ToCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) CustomDbRoleActionResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionResourceArrayOutput)
}

type CustomDbRoleActionResourceOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleActionResource)(nil)).Elem()
}

func (o CustomDbRoleActionResourceOutput) ToCustomDbRoleActionResourceOutput() CustomDbRoleActionResourceOutput {
	return o
}

func (o CustomDbRoleActionResourceOutput) ToCustomDbRoleActionResourceOutputWithContext(ctx context.Context) CustomDbRoleActionResourceOutput {
	return o
}

func (o CustomDbRoleActionResourceOutput) Cluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDbRoleActionResource) *bool { return v.Cluster }).(pulumi.BoolPtrOutput)
}

func (o CustomDbRoleActionResourceOutput) CollectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDbRoleActionResource) *string { return v.CollectionName }).(pulumi.StringPtrOutput)
}

// Database on which the inherited role is granted.
func (o CustomDbRoleActionResourceOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDbRoleActionResource) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

type CustomDbRoleActionResourceArrayOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleActionResource)(nil)).Elem()
}

func (o CustomDbRoleActionResourceArrayOutput) ToCustomDbRoleActionResourceArrayOutput() CustomDbRoleActionResourceArrayOutput {
	return o
}

func (o CustomDbRoleActionResourceArrayOutput) ToCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) CustomDbRoleActionResourceArrayOutput {
	return o
}

func (o CustomDbRoleActionResourceArrayOutput) Index(i pulumi.IntInput) CustomDbRoleActionResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDbRoleActionResource {
		return vs[0].([]CustomDbRoleActionResource)[vs[1].(int)]
	}).(CustomDbRoleActionResourceOutput)
}

type CustomDbRoleInheritedRole struct {
	// Database on which the inherited role is granted.
	DatabaseName string `pulumi:"databaseName"`
	// Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName string `pulumi:"roleName"`
}

// CustomDbRoleInheritedRoleInput is an input type that accepts CustomDbRoleInheritedRoleArgs and CustomDbRoleInheritedRoleOutput values.
// You can construct a concrete instance of `CustomDbRoleInheritedRoleInput` via:
//
//          CustomDbRoleInheritedRoleArgs{...}
type CustomDbRoleInheritedRoleInput interface {
	pulumi.Input

	ToCustomDbRoleInheritedRoleOutput() CustomDbRoleInheritedRoleOutput
	ToCustomDbRoleInheritedRoleOutputWithContext(context.Context) CustomDbRoleInheritedRoleOutput
}

type CustomDbRoleInheritedRoleArgs struct {
	// Database on which the inherited role is granted.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (CustomDbRoleInheritedRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleInheritedRole)(nil)).Elem()
}

func (i CustomDbRoleInheritedRoleArgs) ToCustomDbRoleInheritedRoleOutput() CustomDbRoleInheritedRoleOutput {
	return i.ToCustomDbRoleInheritedRoleOutputWithContext(context.Background())
}

func (i CustomDbRoleInheritedRoleArgs) ToCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleInheritedRoleOutput)
}

// CustomDbRoleInheritedRoleArrayInput is an input type that accepts CustomDbRoleInheritedRoleArray and CustomDbRoleInheritedRoleArrayOutput values.
// You can construct a concrete instance of `CustomDbRoleInheritedRoleArrayInput` via:
//
//          CustomDbRoleInheritedRoleArray{ CustomDbRoleInheritedRoleArgs{...} }
type CustomDbRoleInheritedRoleArrayInput interface {
	pulumi.Input

	ToCustomDbRoleInheritedRoleArrayOutput() CustomDbRoleInheritedRoleArrayOutput
	ToCustomDbRoleInheritedRoleArrayOutputWithContext(context.Context) CustomDbRoleInheritedRoleArrayOutput
}

type CustomDbRoleInheritedRoleArray []CustomDbRoleInheritedRoleInput

func (CustomDbRoleInheritedRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleInheritedRole)(nil)).Elem()
}

func (i CustomDbRoleInheritedRoleArray) ToCustomDbRoleInheritedRoleArrayOutput() CustomDbRoleInheritedRoleArrayOutput {
	return i.ToCustomDbRoleInheritedRoleArrayOutputWithContext(context.Background())
}

func (i CustomDbRoleInheritedRoleArray) ToCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleInheritedRoleArrayOutput)
}

type CustomDbRoleInheritedRoleOutput struct{ *pulumi.OutputState }

func (CustomDbRoleInheritedRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleInheritedRole)(nil)).Elem()
}

func (o CustomDbRoleInheritedRoleOutput) ToCustomDbRoleInheritedRoleOutput() CustomDbRoleInheritedRoleOutput {
	return o
}

func (o CustomDbRoleInheritedRoleOutput) ToCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleOutput {
	return o
}

// Database on which the inherited role is granted.
func (o CustomDbRoleInheritedRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDbRoleInheritedRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Name of the inherited role. This can either be another custom role or a built-in role.
func (o CustomDbRoleInheritedRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDbRoleInheritedRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type CustomDbRoleInheritedRoleArrayOutput struct{ *pulumi.OutputState }

func (CustomDbRoleInheritedRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleInheritedRole)(nil)).Elem()
}

func (o CustomDbRoleInheritedRoleArrayOutput) ToCustomDbRoleInheritedRoleArrayOutput() CustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o CustomDbRoleInheritedRoleArrayOutput) ToCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o CustomDbRoleInheritedRoleArrayOutput) Index(i pulumi.IntInput) CustomDbRoleInheritedRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDbRoleInheritedRole {
		return vs[0].([]CustomDbRoleInheritedRole)[vs[1].(int)]
	}).(CustomDbRoleInheritedRoleOutput)
}

type DatabaseUserLabel struct {
	// The key that you want to write.
	Key *string `pulumi:"key"`
	// The value that you want to write.
	Value *string `pulumi:"value"`
}

// DatabaseUserLabelInput is an input type that accepts DatabaseUserLabelArgs and DatabaseUserLabelOutput values.
// You can construct a concrete instance of `DatabaseUserLabelInput` via:
//
//          DatabaseUserLabelArgs{...}
type DatabaseUserLabelInput interface {
	pulumi.Input

	ToDatabaseUserLabelOutput() DatabaseUserLabelOutput
	ToDatabaseUserLabelOutputWithContext(context.Context) DatabaseUserLabelOutput
}

type DatabaseUserLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DatabaseUserLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserLabel)(nil)).Elem()
}

func (i DatabaseUserLabelArgs) ToDatabaseUserLabelOutput() DatabaseUserLabelOutput {
	return i.ToDatabaseUserLabelOutputWithContext(context.Background())
}

func (i DatabaseUserLabelArgs) ToDatabaseUserLabelOutputWithContext(ctx context.Context) DatabaseUserLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserLabelOutput)
}

// DatabaseUserLabelArrayInput is an input type that accepts DatabaseUserLabelArray and DatabaseUserLabelArrayOutput values.
// You can construct a concrete instance of `DatabaseUserLabelArrayInput` via:
//
//          DatabaseUserLabelArray{ DatabaseUserLabelArgs{...} }
type DatabaseUserLabelArrayInput interface {
	pulumi.Input

	ToDatabaseUserLabelArrayOutput() DatabaseUserLabelArrayOutput
	ToDatabaseUserLabelArrayOutputWithContext(context.Context) DatabaseUserLabelArrayOutput
}

type DatabaseUserLabelArray []DatabaseUserLabelInput

func (DatabaseUserLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserLabel)(nil)).Elem()
}

func (i DatabaseUserLabelArray) ToDatabaseUserLabelArrayOutput() DatabaseUserLabelArrayOutput {
	return i.ToDatabaseUserLabelArrayOutputWithContext(context.Background())
}

func (i DatabaseUserLabelArray) ToDatabaseUserLabelArrayOutputWithContext(ctx context.Context) DatabaseUserLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserLabelArrayOutput)
}

type DatabaseUserLabelOutput struct{ *pulumi.OutputState }

func (DatabaseUserLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserLabel)(nil)).Elem()
}

func (o DatabaseUserLabelOutput) ToDatabaseUserLabelOutput() DatabaseUserLabelOutput {
	return o
}

func (o DatabaseUserLabelOutput) ToDatabaseUserLabelOutputWithContext(ctx context.Context) DatabaseUserLabelOutput {
	return o
}

// The key that you want to write.
func (o DatabaseUserLabelOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserLabel) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value that you want to write.
func (o DatabaseUserLabelOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserLabel) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DatabaseUserLabelArrayOutput struct{ *pulumi.OutputState }

func (DatabaseUserLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserLabel)(nil)).Elem()
}

func (o DatabaseUserLabelArrayOutput) ToDatabaseUserLabelArrayOutput() DatabaseUserLabelArrayOutput {
	return o
}

func (o DatabaseUserLabelArrayOutput) ToDatabaseUserLabelArrayOutputWithContext(ctx context.Context) DatabaseUserLabelArrayOutput {
	return o
}

func (o DatabaseUserLabelArrayOutput) Index(i pulumi.IntInput) DatabaseUserLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseUserLabel {
		return vs[0].([]DatabaseUserLabel)[vs[1].(int)]
	}).(DatabaseUserLabelOutput)
}

type DatabaseUserRole struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName *string `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName *string `pulumi:"databaseName"`
	// Name of the role to grant. See [Create a Database User](https://docs.atlas.mongodb.com/reference/api/database-users-create-a-user/) `roles.roleName` for valid values and restrictions.
	RoleName *string `pulumi:"roleName"`
}

// DatabaseUserRoleInput is an input type that accepts DatabaseUserRoleArgs and DatabaseUserRoleOutput values.
// You can construct a concrete instance of `DatabaseUserRoleInput` via:
//
//          DatabaseUserRoleArgs{...}
type DatabaseUserRoleInput interface {
	pulumi.Input

	ToDatabaseUserRoleOutput() DatabaseUserRoleOutput
	ToDatabaseUserRoleOutputWithContext(context.Context) DatabaseUserRoleOutput
}

type DatabaseUserRoleArgs struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName pulumi.StringPtrInput `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Name of the role to grant. See [Create a Database User](https://docs.atlas.mongodb.com/reference/api/database-users-create-a-user/) `roles.roleName` for valid values and restrictions.
	RoleName pulumi.StringPtrInput `pulumi:"roleName"`
}

func (DatabaseUserRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserRole)(nil)).Elem()
}

func (i DatabaseUserRoleArgs) ToDatabaseUserRoleOutput() DatabaseUserRoleOutput {
	return i.ToDatabaseUserRoleOutputWithContext(context.Background())
}

func (i DatabaseUserRoleArgs) ToDatabaseUserRoleOutputWithContext(ctx context.Context) DatabaseUserRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserRoleOutput)
}

// DatabaseUserRoleArrayInput is an input type that accepts DatabaseUserRoleArray and DatabaseUserRoleArrayOutput values.
// You can construct a concrete instance of `DatabaseUserRoleArrayInput` via:
//
//          DatabaseUserRoleArray{ DatabaseUserRoleArgs{...} }
type DatabaseUserRoleArrayInput interface {
	pulumi.Input

	ToDatabaseUserRoleArrayOutput() DatabaseUserRoleArrayOutput
	ToDatabaseUserRoleArrayOutputWithContext(context.Context) DatabaseUserRoleArrayOutput
}

type DatabaseUserRoleArray []DatabaseUserRoleInput

func (DatabaseUserRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserRole)(nil)).Elem()
}

func (i DatabaseUserRoleArray) ToDatabaseUserRoleArrayOutput() DatabaseUserRoleArrayOutput {
	return i.ToDatabaseUserRoleArrayOutputWithContext(context.Background())
}

func (i DatabaseUserRoleArray) ToDatabaseUserRoleArrayOutputWithContext(ctx context.Context) DatabaseUserRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserRoleArrayOutput)
}

type DatabaseUserRoleOutput struct{ *pulumi.OutputState }

func (DatabaseUserRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserRole)(nil)).Elem()
}

func (o DatabaseUserRoleOutput) ToDatabaseUserRoleOutput() DatabaseUserRoleOutput {
	return o
}

func (o DatabaseUserRoleOutput) ToDatabaseUserRoleOutputWithContext(ctx context.Context) DatabaseUserRoleOutput {
	return o
}

// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
func (o DatabaseUserRoleOutput) CollectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserRole) *string { return v.CollectionName }).(pulumi.StringPtrOutput)
}

// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
func (o DatabaseUserRoleOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserRole) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Name of the role to grant. See [Create a Database User](https://docs.atlas.mongodb.com/reference/api/database-users-create-a-user/) `roles.roleName` for valid values and restrictions.
func (o DatabaseUserRoleOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserRole) *string { return v.RoleName }).(pulumi.StringPtrOutput)
}

type DatabaseUserRoleArrayOutput struct{ *pulumi.OutputState }

func (DatabaseUserRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserRole)(nil)).Elem()
}

func (o DatabaseUserRoleArrayOutput) ToDatabaseUserRoleArrayOutput() DatabaseUserRoleArrayOutput {
	return o
}

func (o DatabaseUserRoleArrayOutput) ToDatabaseUserRoleArrayOutputWithContext(ctx context.Context) DatabaseUserRoleArrayOutput {
	return o
}

func (o DatabaseUserRoleArrayOutput) Index(i pulumi.IntInput) DatabaseUserRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseUserRole {
		return vs[0].([]DatabaseUserRole)[vs[1].(int)]
	}).(DatabaseUserRoleOutput)
}

type EncryptionAtRestAwsKms struct {
	// The IAM access key ID with permissions to access the customer master key specified by customerMasterKeyID.
	AccessKeyId string `pulumi:"accessKeyId"`
	// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
	CustomerMasterKeyId string `pulumi:"customerMasterKeyId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled bool `pulumi:"enabled"`
	// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
	Region string `pulumi:"region"`
	// The IAM secret access key with permissions to access the customer master key specified by customerMasterKeyID.
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

// EncryptionAtRestAwsKmsInput is an input type that accepts EncryptionAtRestAwsKmsArgs and EncryptionAtRestAwsKmsOutput values.
// You can construct a concrete instance of `EncryptionAtRestAwsKmsInput` via:
//
//          EncryptionAtRestAwsKmsArgs{...}
type EncryptionAtRestAwsKmsInput interface {
	pulumi.Input

	ToEncryptionAtRestAwsKmsOutput() EncryptionAtRestAwsKmsOutput
	ToEncryptionAtRestAwsKmsOutputWithContext(context.Context) EncryptionAtRestAwsKmsOutput
}

type EncryptionAtRestAwsKmsArgs struct {
	// The IAM access key ID with permissions to access the customer master key specified by customerMasterKeyID.
	AccessKeyId pulumi.StringInput `pulumi:"accessKeyId"`
	// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
	CustomerMasterKeyId pulumi.StringInput `pulumi:"customerMasterKeyId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
	Region pulumi.StringInput `pulumi:"region"`
	// The IAM secret access key with permissions to access the customer master key specified by customerMasterKeyID.
	SecretAccessKey pulumi.StringInput `pulumi:"secretAccessKey"`
}

func (EncryptionAtRestAwsKmsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAwsKms)(nil)).Elem()
}

func (i EncryptionAtRestAwsKmsArgs) ToEncryptionAtRestAwsKmsOutput() EncryptionAtRestAwsKmsOutput {
	return i.ToEncryptionAtRestAwsKmsOutputWithContext(context.Background())
}

func (i EncryptionAtRestAwsKmsArgs) ToEncryptionAtRestAwsKmsOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAwsKmsOutput)
}

func (i EncryptionAtRestAwsKmsArgs) ToEncryptionAtRestAwsKmsPtrOutput() EncryptionAtRestAwsKmsPtrOutput {
	return i.ToEncryptionAtRestAwsKmsPtrOutputWithContext(context.Background())
}

func (i EncryptionAtRestAwsKmsArgs) ToEncryptionAtRestAwsKmsPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAwsKmsOutput).ToEncryptionAtRestAwsKmsPtrOutputWithContext(ctx)
}

// EncryptionAtRestAwsKmsPtrInput is an input type that accepts EncryptionAtRestAwsKmsArgs, EncryptionAtRestAwsKmsPtr and EncryptionAtRestAwsKmsPtrOutput values.
// You can construct a concrete instance of `EncryptionAtRestAwsKmsPtrInput` via:
//
//          EncryptionAtRestAwsKmsArgs{...}
//
//  or:
//
//          nil
type EncryptionAtRestAwsKmsPtrInput interface {
	pulumi.Input

	ToEncryptionAtRestAwsKmsPtrOutput() EncryptionAtRestAwsKmsPtrOutput
	ToEncryptionAtRestAwsKmsPtrOutputWithContext(context.Context) EncryptionAtRestAwsKmsPtrOutput
}

type encryptionAtRestAwsKmsPtrType EncryptionAtRestAwsKmsArgs

func EncryptionAtRestAwsKmsPtr(v *EncryptionAtRestAwsKmsArgs) EncryptionAtRestAwsKmsPtrInput {
	return (*encryptionAtRestAwsKmsPtrType)(v)
}

func (*encryptionAtRestAwsKmsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAwsKms)(nil)).Elem()
}

func (i *encryptionAtRestAwsKmsPtrType) ToEncryptionAtRestAwsKmsPtrOutput() EncryptionAtRestAwsKmsPtrOutput {
	return i.ToEncryptionAtRestAwsKmsPtrOutputWithContext(context.Background())
}

func (i *encryptionAtRestAwsKmsPtrType) ToEncryptionAtRestAwsKmsPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAwsKmsPtrOutput)
}

type EncryptionAtRestAwsKmsOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAwsKmsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAwsKms)(nil)).Elem()
}

func (o EncryptionAtRestAwsKmsOutput) ToEncryptionAtRestAwsKmsOutput() EncryptionAtRestAwsKmsOutput {
	return o
}

func (o EncryptionAtRestAwsKmsOutput) ToEncryptionAtRestAwsKmsOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsOutput {
	return o
}

func (o EncryptionAtRestAwsKmsOutput) ToEncryptionAtRestAwsKmsPtrOutput() EncryptionAtRestAwsKmsPtrOutput {
	return o.ToEncryptionAtRestAwsKmsPtrOutputWithContext(context.Background())
}

func (o EncryptionAtRestAwsKmsOutput) ToEncryptionAtRestAwsKmsPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKms) *EncryptionAtRestAwsKms {
		return &v
	}).(EncryptionAtRestAwsKmsPtrOutput)
}

// The IAM access key ID with permissions to access the customer master key specified by customerMasterKeyID.
func (o EncryptionAtRestAwsKmsOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKms) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
func (o EncryptionAtRestAwsKmsOutput) CustomerMasterKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKms) string { return v.CustomerMasterKeyId }).(pulumi.StringOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAwsKmsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKms) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
func (o EncryptionAtRestAwsKmsOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKms) string { return v.Region }).(pulumi.StringOutput)
}

// The IAM secret access key with permissions to access the customer master key specified by customerMasterKeyID.
func (o EncryptionAtRestAwsKmsOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKms) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

type EncryptionAtRestAwsKmsPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAwsKmsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAwsKms)(nil)).Elem()
}

func (o EncryptionAtRestAwsKmsPtrOutput) ToEncryptionAtRestAwsKmsPtrOutput() EncryptionAtRestAwsKmsPtrOutput {
	return o
}

func (o EncryptionAtRestAwsKmsPtrOutput) ToEncryptionAtRestAwsKmsPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsPtrOutput {
	return o
}

func (o EncryptionAtRestAwsKmsPtrOutput) Elem() EncryptionAtRestAwsKmsOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKms) EncryptionAtRestAwsKms { return *v }).(EncryptionAtRestAwsKmsOutput)
}

// The IAM access key ID with permissions to access the customer master key specified by customerMasterKeyID.
func (o EncryptionAtRestAwsKmsPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKms) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
func (o EncryptionAtRestAwsKmsPtrOutput) CustomerMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKms) *string {
		if v == nil {
			return nil
		}
		return &v.CustomerMasterKeyId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAwsKmsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKms) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
func (o EncryptionAtRestAwsKmsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKms) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// The IAM secret access key with permissions to access the customer master key specified by customerMasterKeyID.
func (o EncryptionAtRestAwsKmsPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKms) *string {
		if v == nil {
			return nil
		}
		return &v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

type EncryptionAtRestAzureKeyVault struct {
	// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
	AzureEnvironment string `pulumi:"azureEnvironment"`
	// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
	ClientId string `pulumi:"clientId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled bool `pulumi:"enabled"`
	// The unique identifier of a key in an Azure Key Vault.
	KeyIdentifier string `pulumi:"keyIdentifier"`
	// The name of an Azure Key Vault containing your key.
	KeyVaultName string `pulumi:"keyVaultName"`
	// The name of the Azure Resource group that contains an Azure Key Vault.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
	Secret string `pulumi:"secret"`
	// The unique identifier associated with an Azure subscription.
	SubscriptionId string `pulumi:"subscriptionId"`
	// The unique identifier for an Azure AD tenant within an Azure subscription.
	TenantId string `pulumi:"tenantId"`
}

// EncryptionAtRestAzureKeyVaultInput is an input type that accepts EncryptionAtRestAzureKeyVaultArgs and EncryptionAtRestAzureKeyVaultOutput values.
// You can construct a concrete instance of `EncryptionAtRestAzureKeyVaultInput` via:
//
//          EncryptionAtRestAzureKeyVaultArgs{...}
type EncryptionAtRestAzureKeyVaultInput interface {
	pulumi.Input

	ToEncryptionAtRestAzureKeyVaultOutput() EncryptionAtRestAzureKeyVaultOutput
	ToEncryptionAtRestAzureKeyVaultOutputWithContext(context.Context) EncryptionAtRestAzureKeyVaultOutput
}

type EncryptionAtRestAzureKeyVaultArgs struct {
	// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
	AzureEnvironment pulumi.StringInput `pulumi:"azureEnvironment"`
	// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The unique identifier of a key in an Azure Key Vault.
	KeyIdentifier pulumi.StringInput `pulumi:"keyIdentifier"`
	// The name of an Azure Key Vault containing your key.
	KeyVaultName pulumi.StringInput `pulumi:"keyVaultName"`
	// The name of the Azure Resource group that contains an Azure Key Vault.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
	Secret pulumi.StringInput `pulumi:"secret"`
	// The unique identifier associated with an Azure subscription.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// The unique identifier for an Azure AD tenant within an Azure subscription.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (EncryptionAtRestAzureKeyVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAzureKeyVault)(nil)).Elem()
}

func (i EncryptionAtRestAzureKeyVaultArgs) ToEncryptionAtRestAzureKeyVaultOutput() EncryptionAtRestAzureKeyVaultOutput {
	return i.ToEncryptionAtRestAzureKeyVaultOutputWithContext(context.Background())
}

func (i EncryptionAtRestAzureKeyVaultArgs) ToEncryptionAtRestAzureKeyVaultOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAzureKeyVaultOutput)
}

func (i EncryptionAtRestAzureKeyVaultArgs) ToEncryptionAtRestAzureKeyVaultPtrOutput() EncryptionAtRestAzureKeyVaultPtrOutput {
	return i.ToEncryptionAtRestAzureKeyVaultPtrOutputWithContext(context.Background())
}

func (i EncryptionAtRestAzureKeyVaultArgs) ToEncryptionAtRestAzureKeyVaultPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAzureKeyVaultOutput).ToEncryptionAtRestAzureKeyVaultPtrOutputWithContext(ctx)
}

// EncryptionAtRestAzureKeyVaultPtrInput is an input type that accepts EncryptionAtRestAzureKeyVaultArgs, EncryptionAtRestAzureKeyVaultPtr and EncryptionAtRestAzureKeyVaultPtrOutput values.
// You can construct a concrete instance of `EncryptionAtRestAzureKeyVaultPtrInput` via:
//
//          EncryptionAtRestAzureKeyVaultArgs{...}
//
//  or:
//
//          nil
type EncryptionAtRestAzureKeyVaultPtrInput interface {
	pulumi.Input

	ToEncryptionAtRestAzureKeyVaultPtrOutput() EncryptionAtRestAzureKeyVaultPtrOutput
	ToEncryptionAtRestAzureKeyVaultPtrOutputWithContext(context.Context) EncryptionAtRestAzureKeyVaultPtrOutput
}

type encryptionAtRestAzureKeyVaultPtrType EncryptionAtRestAzureKeyVaultArgs

func EncryptionAtRestAzureKeyVaultPtr(v *EncryptionAtRestAzureKeyVaultArgs) EncryptionAtRestAzureKeyVaultPtrInput {
	return (*encryptionAtRestAzureKeyVaultPtrType)(v)
}

func (*encryptionAtRestAzureKeyVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAzureKeyVault)(nil)).Elem()
}

func (i *encryptionAtRestAzureKeyVaultPtrType) ToEncryptionAtRestAzureKeyVaultPtrOutput() EncryptionAtRestAzureKeyVaultPtrOutput {
	return i.ToEncryptionAtRestAzureKeyVaultPtrOutputWithContext(context.Background())
}

func (i *encryptionAtRestAzureKeyVaultPtrType) ToEncryptionAtRestAzureKeyVaultPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAzureKeyVaultPtrOutput)
}

type EncryptionAtRestAzureKeyVaultOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAzureKeyVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAzureKeyVault)(nil)).Elem()
}

func (o EncryptionAtRestAzureKeyVaultOutput) ToEncryptionAtRestAzureKeyVaultOutput() EncryptionAtRestAzureKeyVaultOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultOutput) ToEncryptionAtRestAzureKeyVaultOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultOutput) ToEncryptionAtRestAzureKeyVaultPtrOutput() EncryptionAtRestAzureKeyVaultPtrOutput {
	return o.ToEncryptionAtRestAzureKeyVaultPtrOutputWithContext(context.Background())
}

func (o EncryptionAtRestAzureKeyVaultOutput) ToEncryptionAtRestAzureKeyVaultPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVault) *EncryptionAtRestAzureKeyVault {
		return &v
	}).(EncryptionAtRestAzureKeyVaultPtrOutput)
}

// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
func (o EncryptionAtRestAzureKeyVaultOutput) AzureEnvironment() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVault) string { return v.AzureEnvironment }).(pulumi.StringOutput)
}

// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
func (o EncryptionAtRestAzureKeyVaultOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVault) string { return v.ClientId }).(pulumi.StringOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAzureKeyVaultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVault) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The unique identifier of a key in an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultOutput) KeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVault) string { return v.KeyIdentifier }).(pulumi.StringOutput)
}

// The name of an Azure Key Vault containing your key.
func (o EncryptionAtRestAzureKeyVaultOutput) KeyVaultName() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVault) string { return v.KeyVaultName }).(pulumi.StringOutput)
}

// The name of the Azure Resource group that contains an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVault) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
func (o EncryptionAtRestAzureKeyVaultOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVault) string { return v.Secret }).(pulumi.StringOutput)
}

// The unique identifier associated with an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVault) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// The unique identifier for an Azure AD tenant within an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVault) string { return v.TenantId }).(pulumi.StringOutput)
}

type EncryptionAtRestAzureKeyVaultPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAzureKeyVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAzureKeyVault)(nil)).Elem()
}

func (o EncryptionAtRestAzureKeyVaultPtrOutput) ToEncryptionAtRestAzureKeyVaultPtrOutput() EncryptionAtRestAzureKeyVaultPtrOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultPtrOutput) ToEncryptionAtRestAzureKeyVaultPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultPtrOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultPtrOutput) Elem() EncryptionAtRestAzureKeyVaultOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVault) EncryptionAtRestAzureKeyVault { return *v }).(EncryptionAtRestAzureKeyVaultOutput)
}

// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
func (o EncryptionAtRestAzureKeyVaultPtrOutput) AzureEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVault) *string {
		if v == nil {
			return nil
		}
		return &v.AzureEnvironment
	}).(pulumi.StringPtrOutput)
}

// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
func (o EncryptionAtRestAzureKeyVaultPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVault) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAzureKeyVaultPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVault) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The unique identifier of a key in an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultPtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVault) *string {
		if v == nil {
			return nil
		}
		return &v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The name of an Azure Key Vault containing your key.
func (o EncryptionAtRestAzureKeyVaultPtrOutput) KeyVaultName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVault) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultName
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure Resource group that contains an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultPtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVault) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
func (o EncryptionAtRestAzureKeyVaultPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVault) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

// The unique identifier associated with an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVault) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The unique identifier for an Azure AD tenant within an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVault) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type EncryptionAtRestGoogleCloudKms struct {
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled bool `pulumi:"enabled"`
	// The Key Version Resource ID from your GCP account.
	KeyVersionResourceId string `pulumi:"keyVersionResourceId"`
	// String-formatted JSON object containing GCP KMS credentials from your GCP account.
	ServiceAccountKey string `pulumi:"serviceAccountKey"`
}

// EncryptionAtRestGoogleCloudKmsInput is an input type that accepts EncryptionAtRestGoogleCloudKmsArgs and EncryptionAtRestGoogleCloudKmsOutput values.
// You can construct a concrete instance of `EncryptionAtRestGoogleCloudKmsInput` via:
//
//          EncryptionAtRestGoogleCloudKmsArgs{...}
type EncryptionAtRestGoogleCloudKmsInput interface {
	pulumi.Input

	ToEncryptionAtRestGoogleCloudKmsOutput() EncryptionAtRestGoogleCloudKmsOutput
	ToEncryptionAtRestGoogleCloudKmsOutputWithContext(context.Context) EncryptionAtRestGoogleCloudKmsOutput
}

type EncryptionAtRestGoogleCloudKmsArgs struct {
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The Key Version Resource ID from your GCP account.
	KeyVersionResourceId pulumi.StringInput `pulumi:"keyVersionResourceId"`
	// String-formatted JSON object containing GCP KMS credentials from your GCP account.
	ServiceAccountKey pulumi.StringInput `pulumi:"serviceAccountKey"`
}

func (EncryptionAtRestGoogleCloudKmsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestGoogleCloudKms)(nil)).Elem()
}

func (i EncryptionAtRestGoogleCloudKmsArgs) ToEncryptionAtRestGoogleCloudKmsOutput() EncryptionAtRestGoogleCloudKmsOutput {
	return i.ToEncryptionAtRestGoogleCloudKmsOutputWithContext(context.Background())
}

func (i EncryptionAtRestGoogleCloudKmsArgs) ToEncryptionAtRestGoogleCloudKmsOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestGoogleCloudKmsOutput)
}

func (i EncryptionAtRestGoogleCloudKmsArgs) ToEncryptionAtRestGoogleCloudKmsPtrOutput() EncryptionAtRestGoogleCloudKmsPtrOutput {
	return i.ToEncryptionAtRestGoogleCloudKmsPtrOutputWithContext(context.Background())
}

func (i EncryptionAtRestGoogleCloudKmsArgs) ToEncryptionAtRestGoogleCloudKmsPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestGoogleCloudKmsOutput).ToEncryptionAtRestGoogleCloudKmsPtrOutputWithContext(ctx)
}

// EncryptionAtRestGoogleCloudKmsPtrInput is an input type that accepts EncryptionAtRestGoogleCloudKmsArgs, EncryptionAtRestGoogleCloudKmsPtr and EncryptionAtRestGoogleCloudKmsPtrOutput values.
// You can construct a concrete instance of `EncryptionAtRestGoogleCloudKmsPtrInput` via:
//
//          EncryptionAtRestGoogleCloudKmsArgs{...}
//
//  or:
//
//          nil
type EncryptionAtRestGoogleCloudKmsPtrInput interface {
	pulumi.Input

	ToEncryptionAtRestGoogleCloudKmsPtrOutput() EncryptionAtRestGoogleCloudKmsPtrOutput
	ToEncryptionAtRestGoogleCloudKmsPtrOutputWithContext(context.Context) EncryptionAtRestGoogleCloudKmsPtrOutput
}

type encryptionAtRestGoogleCloudKmsPtrType EncryptionAtRestGoogleCloudKmsArgs

func EncryptionAtRestGoogleCloudKmsPtr(v *EncryptionAtRestGoogleCloudKmsArgs) EncryptionAtRestGoogleCloudKmsPtrInput {
	return (*encryptionAtRestGoogleCloudKmsPtrType)(v)
}

func (*encryptionAtRestGoogleCloudKmsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestGoogleCloudKms)(nil)).Elem()
}

func (i *encryptionAtRestGoogleCloudKmsPtrType) ToEncryptionAtRestGoogleCloudKmsPtrOutput() EncryptionAtRestGoogleCloudKmsPtrOutput {
	return i.ToEncryptionAtRestGoogleCloudKmsPtrOutputWithContext(context.Background())
}

func (i *encryptionAtRestGoogleCloudKmsPtrType) ToEncryptionAtRestGoogleCloudKmsPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestGoogleCloudKmsPtrOutput)
}

type EncryptionAtRestGoogleCloudKmsOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestGoogleCloudKmsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestGoogleCloudKms)(nil)).Elem()
}

func (o EncryptionAtRestGoogleCloudKmsOutput) ToEncryptionAtRestGoogleCloudKmsOutput() EncryptionAtRestGoogleCloudKmsOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsOutput) ToEncryptionAtRestGoogleCloudKmsOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsOutput) ToEncryptionAtRestGoogleCloudKmsPtrOutput() EncryptionAtRestGoogleCloudKmsPtrOutput {
	return o.ToEncryptionAtRestGoogleCloudKmsPtrOutputWithContext(context.Background())
}

func (o EncryptionAtRestGoogleCloudKmsOutput) ToEncryptionAtRestGoogleCloudKmsPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestGoogleCloudKms) *EncryptionAtRestGoogleCloudKms {
		return &v
	}).(EncryptionAtRestGoogleCloudKmsPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestGoogleCloudKmsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v EncryptionAtRestGoogleCloudKms) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The Key Version Resource ID from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsOutput) KeyVersionResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionAtRestGoogleCloudKms) string { return v.KeyVersionResourceId }).(pulumi.StringOutput)
}

// String-formatted JSON object containing GCP KMS credentials from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsOutput) ServiceAccountKey() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionAtRestGoogleCloudKms) string { return v.ServiceAccountKey }).(pulumi.StringOutput)
}

type EncryptionAtRestGoogleCloudKmsPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestGoogleCloudKmsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestGoogleCloudKms)(nil)).Elem()
}

func (o EncryptionAtRestGoogleCloudKmsPtrOutput) ToEncryptionAtRestGoogleCloudKmsPtrOutput() EncryptionAtRestGoogleCloudKmsPtrOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsPtrOutput) ToEncryptionAtRestGoogleCloudKmsPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsPtrOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsPtrOutput) Elem() EncryptionAtRestGoogleCloudKmsOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKms) EncryptionAtRestGoogleCloudKms { return *v }).(EncryptionAtRestGoogleCloudKmsOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestGoogleCloudKmsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKms) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Key Version Resource ID from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsPtrOutput) KeyVersionResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKms) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVersionResourceId
	}).(pulumi.StringPtrOutput)
}

// String-formatted JSON object containing GCP KMS credentials from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsPtrOutput) ServiceAccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKms) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountKey
	}).(pulumi.StringPtrOutput)
}

type GlobalClusterConfigCustomZoneMapping struct {
	// The ISO location code to which you want to map a zone in your Global Cluster. You can find a list of all supported location codes [here](https://cloud.mongodb.com/static/atlas/country_iso_codes.txt).
	Location *string `pulumi:"location"`
	// The name of the zone in your Global Cluster that you want to map to location.
	Zone *string `pulumi:"zone"`
}

// GlobalClusterConfigCustomZoneMappingInput is an input type that accepts GlobalClusterConfigCustomZoneMappingArgs and GlobalClusterConfigCustomZoneMappingOutput values.
// You can construct a concrete instance of `GlobalClusterConfigCustomZoneMappingInput` via:
//
//          GlobalClusterConfigCustomZoneMappingArgs{...}
type GlobalClusterConfigCustomZoneMappingInput interface {
	pulumi.Input

	ToGlobalClusterConfigCustomZoneMappingOutput() GlobalClusterConfigCustomZoneMappingOutput
	ToGlobalClusterConfigCustomZoneMappingOutputWithContext(context.Context) GlobalClusterConfigCustomZoneMappingOutput
}

type GlobalClusterConfigCustomZoneMappingArgs struct {
	// The ISO location code to which you want to map a zone in your Global Cluster. You can find a list of all supported location codes [here](https://cloud.mongodb.com/static/atlas/country_iso_codes.txt).
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the zone in your Global Cluster that you want to map to location.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (GlobalClusterConfigCustomZoneMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (i GlobalClusterConfigCustomZoneMappingArgs) ToGlobalClusterConfigCustomZoneMappingOutput() GlobalClusterConfigCustomZoneMappingOutput {
	return i.ToGlobalClusterConfigCustomZoneMappingOutputWithContext(context.Background())
}

func (i GlobalClusterConfigCustomZoneMappingArgs) ToGlobalClusterConfigCustomZoneMappingOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigCustomZoneMappingOutput)
}

// GlobalClusterConfigCustomZoneMappingArrayInput is an input type that accepts GlobalClusterConfigCustomZoneMappingArray and GlobalClusterConfigCustomZoneMappingArrayOutput values.
// You can construct a concrete instance of `GlobalClusterConfigCustomZoneMappingArrayInput` via:
//
//          GlobalClusterConfigCustomZoneMappingArray{ GlobalClusterConfigCustomZoneMappingArgs{...} }
type GlobalClusterConfigCustomZoneMappingArrayInput interface {
	pulumi.Input

	ToGlobalClusterConfigCustomZoneMappingArrayOutput() GlobalClusterConfigCustomZoneMappingArrayOutput
	ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(context.Context) GlobalClusterConfigCustomZoneMappingArrayOutput
}

type GlobalClusterConfigCustomZoneMappingArray []GlobalClusterConfigCustomZoneMappingInput

func (GlobalClusterConfigCustomZoneMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (i GlobalClusterConfigCustomZoneMappingArray) ToGlobalClusterConfigCustomZoneMappingArrayOutput() GlobalClusterConfigCustomZoneMappingArrayOutput {
	return i.ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(context.Background())
}

func (i GlobalClusterConfigCustomZoneMappingArray) ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigCustomZoneMappingArrayOutput)
}

type GlobalClusterConfigCustomZoneMappingOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigCustomZoneMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (o GlobalClusterConfigCustomZoneMappingOutput) ToGlobalClusterConfigCustomZoneMappingOutput() GlobalClusterConfigCustomZoneMappingOutput {
	return o
}

func (o GlobalClusterConfigCustomZoneMappingOutput) ToGlobalClusterConfigCustomZoneMappingOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingOutput {
	return o
}

// The ISO location code to which you want to map a zone in your Global Cluster. You can find a list of all supported location codes [here](https://cloud.mongodb.com/static/atlas/country_iso_codes.txt).
func (o GlobalClusterConfigCustomZoneMappingOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClusterConfigCustomZoneMapping) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the zone in your Global Cluster that you want to map to location.
func (o GlobalClusterConfigCustomZoneMappingOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClusterConfigCustomZoneMapping) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type GlobalClusterConfigCustomZoneMappingArrayOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigCustomZoneMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (o GlobalClusterConfigCustomZoneMappingArrayOutput) ToGlobalClusterConfigCustomZoneMappingArrayOutput() GlobalClusterConfigCustomZoneMappingArrayOutput {
	return o
}

func (o GlobalClusterConfigCustomZoneMappingArrayOutput) ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingArrayOutput {
	return o
}

func (o GlobalClusterConfigCustomZoneMappingArrayOutput) Index(i pulumi.IntInput) GlobalClusterConfigCustomZoneMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalClusterConfigCustomZoneMapping {
		return vs[0].([]GlobalClusterConfigCustomZoneMapping)[vs[1].(int)]
	}).(GlobalClusterConfigCustomZoneMappingOutput)
}

type GlobalClusterConfigManagedNamespace struct {
	// The name of the collection associated with the managed namespace.
	Collection string `pulumi:"collection"`
	// The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey string `pulumi:"customShardKey"`
	// The name of the database containing the collection.
	Db string `pulumi:"db"`
}

// GlobalClusterConfigManagedNamespaceInput is an input type that accepts GlobalClusterConfigManagedNamespaceArgs and GlobalClusterConfigManagedNamespaceOutput values.
// You can construct a concrete instance of `GlobalClusterConfigManagedNamespaceInput` via:
//
//          GlobalClusterConfigManagedNamespaceArgs{...}
type GlobalClusterConfigManagedNamespaceInput interface {
	pulumi.Input

	ToGlobalClusterConfigManagedNamespaceOutput() GlobalClusterConfigManagedNamespaceOutput
	ToGlobalClusterConfigManagedNamespaceOutputWithContext(context.Context) GlobalClusterConfigManagedNamespaceOutput
}

type GlobalClusterConfigManagedNamespaceArgs struct {
	// The name of the collection associated with the managed namespace.
	Collection pulumi.StringInput `pulumi:"collection"`
	// The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey pulumi.StringInput `pulumi:"customShardKey"`
	// The name of the database containing the collection.
	Db pulumi.StringInput `pulumi:"db"`
}

func (GlobalClusterConfigManagedNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GlobalClusterConfigManagedNamespaceArgs) ToGlobalClusterConfigManagedNamespaceOutput() GlobalClusterConfigManagedNamespaceOutput {
	return i.ToGlobalClusterConfigManagedNamespaceOutputWithContext(context.Background())
}

func (i GlobalClusterConfigManagedNamespaceArgs) ToGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigManagedNamespaceOutput)
}

// GlobalClusterConfigManagedNamespaceArrayInput is an input type that accepts GlobalClusterConfigManagedNamespaceArray and GlobalClusterConfigManagedNamespaceArrayOutput values.
// You can construct a concrete instance of `GlobalClusterConfigManagedNamespaceArrayInput` via:
//
//          GlobalClusterConfigManagedNamespaceArray{ GlobalClusterConfigManagedNamespaceArgs{...} }
type GlobalClusterConfigManagedNamespaceArrayInput interface {
	pulumi.Input

	ToGlobalClusterConfigManagedNamespaceArrayOutput() GlobalClusterConfigManagedNamespaceArrayOutput
	ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Context) GlobalClusterConfigManagedNamespaceArrayOutput
}

type GlobalClusterConfigManagedNamespaceArray []GlobalClusterConfigManagedNamespaceInput

func (GlobalClusterConfigManagedNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GlobalClusterConfigManagedNamespaceArray) ToGlobalClusterConfigManagedNamespaceArrayOutput() GlobalClusterConfigManagedNamespaceArrayOutput {
	return i.ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Background())
}

func (i GlobalClusterConfigManagedNamespaceArray) ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigManagedNamespaceArrayOutput)
}

type GlobalClusterConfigManagedNamespaceOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigManagedNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GlobalClusterConfigManagedNamespaceOutput) ToGlobalClusterConfigManagedNamespaceOutput() GlobalClusterConfigManagedNamespaceOutput {
	return o
}

func (o GlobalClusterConfigManagedNamespaceOutput) ToGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceOutput {
	return o
}

// The name of the collection associated with the managed namespace.
func (o GlobalClusterConfigManagedNamespaceOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) string { return v.Collection }).(pulumi.StringOutput)
}

// The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
func (o GlobalClusterConfigManagedNamespaceOutput) CustomShardKey() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) string { return v.CustomShardKey }).(pulumi.StringOutput)
}

// The name of the database containing the collection.
func (o GlobalClusterConfigManagedNamespaceOutput) Db() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) string { return v.Db }).(pulumi.StringOutput)
}

type GlobalClusterConfigManagedNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigManagedNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GlobalClusterConfigManagedNamespaceArrayOutput) ToGlobalClusterConfigManagedNamespaceArrayOutput() GlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GlobalClusterConfigManagedNamespaceArrayOutput) ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GlobalClusterConfigManagedNamespaceArrayOutput) Index(i pulumi.IntInput) GlobalClusterConfigManagedNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalClusterConfigManagedNamespace {
		return vs[0].([]GlobalClusterConfigManagedNamespace)[vs[1].(int)]
	}).(GlobalClusterConfigManagedNamespaceOutput)
}

type ProjectTeam struct {
	// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team.
	// The following are valid roles:
	// * `GROUP_OWNER`
	// * `GROUP_READ_ONLY`
	// * `GROUP_DATA_ACCESS_ADMIN`
	// * `GROUP_DATA_ACCESS_READ_WRITE`
	// * `GROUP_DATA_ACCESS_READ_ONLY`
	// * `GROUP_CLUSTER_MANAGER`
	RoleNames []string `pulumi:"roleNames"`
	// The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	TeamId string `pulumi:"teamId"`
}

// ProjectTeamInput is an input type that accepts ProjectTeamArgs and ProjectTeamOutput values.
// You can construct a concrete instance of `ProjectTeamInput` via:
//
//          ProjectTeamArgs{...}
type ProjectTeamInput interface {
	pulumi.Input

	ToProjectTeamOutput() ProjectTeamOutput
	ToProjectTeamOutputWithContext(context.Context) ProjectTeamOutput
}

type ProjectTeamArgs struct {
	// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team.
	// The following are valid roles:
	// * `GROUP_OWNER`
	// * `GROUP_READ_ONLY`
	// * `GROUP_DATA_ACCESS_ADMIN`
	// * `GROUP_DATA_ACCESS_READ_WRITE`
	// * `GROUP_DATA_ACCESS_READ_ONLY`
	// * `GROUP_CLUSTER_MANAGER`
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	// The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	TeamId pulumi.StringInput `pulumi:"teamId"`
}

func (ProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTeam)(nil)).Elem()
}

func (i ProjectTeamArgs) ToProjectTeamOutput() ProjectTeamOutput {
	return i.ToProjectTeamOutputWithContext(context.Background())
}

func (i ProjectTeamArgs) ToProjectTeamOutputWithContext(ctx context.Context) ProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTeamOutput)
}

// ProjectTeamArrayInput is an input type that accepts ProjectTeamArray and ProjectTeamArrayOutput values.
// You can construct a concrete instance of `ProjectTeamArrayInput` via:
//
//          ProjectTeamArray{ ProjectTeamArgs{...} }
type ProjectTeamArrayInput interface {
	pulumi.Input

	ToProjectTeamArrayOutput() ProjectTeamArrayOutput
	ToProjectTeamArrayOutputWithContext(context.Context) ProjectTeamArrayOutput
}

type ProjectTeamArray []ProjectTeamInput

func (ProjectTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTeam)(nil)).Elem()
}

func (i ProjectTeamArray) ToProjectTeamArrayOutput() ProjectTeamArrayOutput {
	return i.ToProjectTeamArrayOutputWithContext(context.Background())
}

func (i ProjectTeamArray) ToProjectTeamArrayOutputWithContext(ctx context.Context) ProjectTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTeamArrayOutput)
}

type ProjectTeamOutput struct{ *pulumi.OutputState }

func (ProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTeam)(nil)).Elem()
}

func (o ProjectTeamOutput) ToProjectTeamOutput() ProjectTeamOutput {
	return o
}

func (o ProjectTeamOutput) ToProjectTeamOutputWithContext(ctx context.Context) ProjectTeamOutput {
	return o
}

// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team.
// The following are valid roles:
// * `GROUP_OWNER`
// * `GROUP_READ_ONLY`
// * `GROUP_DATA_ACCESS_ADMIN`
// * `GROUP_DATA_ACCESS_READ_WRITE`
// * `GROUP_DATA_ACCESS_READ_ONLY`
// * `GROUP_CLUSTER_MANAGER`
func (o ProjectTeamOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectTeam) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

// The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
func (o ProjectTeamOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTeam) string { return v.TeamId }).(pulumi.StringOutput)
}

type ProjectTeamArrayOutput struct{ *pulumi.OutputState }

func (ProjectTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTeam)(nil)).Elem()
}

func (o ProjectTeamArrayOutput) ToProjectTeamArrayOutput() ProjectTeamArrayOutput {
	return o
}

func (o ProjectTeamArrayOutput) ToProjectTeamArrayOutputWithContext(ctx context.Context) ProjectTeamArrayOutput {
	return o
}

func (o ProjectTeamArrayOutput) Index(i pulumi.IntInput) ProjectTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTeam {
		return vs[0].([]ProjectTeam)[vs[1].(int)]
	}).(ProjectTeamOutput)
}

type X509AuthenticationDatabaseUserCertificate struct {
	CreatedAt *string `pulumi:"createdAt"`
	GroupId   *string `pulumi:"groupId"`
	Id        *int    `pulumi:"id"`
	NotAfter  *string `pulumi:"notAfter"`
	Subject   *string `pulumi:"subject"`
}

// X509AuthenticationDatabaseUserCertificateInput is an input type that accepts X509AuthenticationDatabaseUserCertificateArgs and X509AuthenticationDatabaseUserCertificateOutput values.
// You can construct a concrete instance of `X509AuthenticationDatabaseUserCertificateInput` via:
//
//          X509AuthenticationDatabaseUserCertificateArgs{...}
type X509AuthenticationDatabaseUserCertificateInput interface {
	pulumi.Input

	ToX509AuthenticationDatabaseUserCertificateOutput() X509AuthenticationDatabaseUserCertificateOutput
	ToX509AuthenticationDatabaseUserCertificateOutputWithContext(context.Context) X509AuthenticationDatabaseUserCertificateOutput
}

type X509AuthenticationDatabaseUserCertificateArgs struct {
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	GroupId   pulumi.StringPtrInput `pulumi:"groupId"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	NotAfter  pulumi.StringPtrInput `pulumi:"notAfter"`
	Subject   pulumi.StringPtrInput `pulumi:"subject"`
}

func (X509AuthenticationDatabaseUserCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i X509AuthenticationDatabaseUserCertificateArgs) ToX509AuthenticationDatabaseUserCertificateOutput() X509AuthenticationDatabaseUserCertificateOutput {
	return i.ToX509AuthenticationDatabaseUserCertificateOutputWithContext(context.Background())
}

func (i X509AuthenticationDatabaseUserCertificateArgs) ToX509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509AuthenticationDatabaseUserCertificateOutput)
}

// X509AuthenticationDatabaseUserCertificateArrayInput is an input type that accepts X509AuthenticationDatabaseUserCertificateArray and X509AuthenticationDatabaseUserCertificateArrayOutput values.
// You can construct a concrete instance of `X509AuthenticationDatabaseUserCertificateArrayInput` via:
//
//          X509AuthenticationDatabaseUserCertificateArray{ X509AuthenticationDatabaseUserCertificateArgs{...} }
type X509AuthenticationDatabaseUserCertificateArrayInput interface {
	pulumi.Input

	ToX509AuthenticationDatabaseUserCertificateArrayOutput() X509AuthenticationDatabaseUserCertificateArrayOutput
	ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Context) X509AuthenticationDatabaseUserCertificateArrayOutput
}

type X509AuthenticationDatabaseUserCertificateArray []X509AuthenticationDatabaseUserCertificateInput

func (X509AuthenticationDatabaseUserCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i X509AuthenticationDatabaseUserCertificateArray) ToX509AuthenticationDatabaseUserCertificateArrayOutput() X509AuthenticationDatabaseUserCertificateArrayOutput {
	return i.ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Background())
}

func (i X509AuthenticationDatabaseUserCertificateArray) ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509AuthenticationDatabaseUserCertificateArrayOutput)
}

type X509AuthenticationDatabaseUserCertificateOutput struct{ *pulumi.OutputState }

func (X509AuthenticationDatabaseUserCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o X509AuthenticationDatabaseUserCertificateOutput) ToX509AuthenticationDatabaseUserCertificateOutput() X509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateOutput) ToX509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) NotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.NotAfter }).(pulumi.StringPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

type X509AuthenticationDatabaseUserCertificateArrayOutput struct{ *pulumi.OutputState }

func (X509AuthenticationDatabaseUserCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o X509AuthenticationDatabaseUserCertificateArrayOutput) ToX509AuthenticationDatabaseUserCertificateArrayOutput() X509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateArrayOutput) ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateArrayOutput) Index(i pulumi.IntInput) X509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) X509AuthenticationDatabaseUserCertificate {
		return vs[0].([]X509AuthenticationDatabaseUserCertificate)[vs[1].(int)]
	}).(X509AuthenticationDatabaseUserCertificateOutput)
}

type Get509AuthenticationDatabaseUserCertificate struct {
	CreatedAt string `pulumi:"createdAt"`
	GroupId   string `pulumi:"groupId"`
	Id        int    `pulumi:"id"`
	NotAfter  string `pulumi:"notAfter"`
	Subject   string `pulumi:"subject"`
}

// Get509AuthenticationDatabaseUserCertificateInput is an input type that accepts Get509AuthenticationDatabaseUserCertificateArgs and Get509AuthenticationDatabaseUserCertificateOutput values.
// You can construct a concrete instance of `Get509AuthenticationDatabaseUserCertificateInput` via:
//
//          Get509AuthenticationDatabaseUserCertificateArgs{...}
type Get509AuthenticationDatabaseUserCertificateInput interface {
	pulumi.Input

	ToGet509AuthenticationDatabaseUserCertificateOutput() Get509AuthenticationDatabaseUserCertificateOutput
	ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(context.Context) Get509AuthenticationDatabaseUserCertificateOutput
}

type Get509AuthenticationDatabaseUserCertificateArgs struct {
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	GroupId   pulumi.StringInput `pulumi:"groupId"`
	Id        pulumi.IntInput    `pulumi:"id"`
	NotAfter  pulumi.StringInput `pulumi:"notAfter"`
	Subject   pulumi.StringInput `pulumi:"subject"`
}

func (Get509AuthenticationDatabaseUserCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i Get509AuthenticationDatabaseUserCertificateArgs) ToGet509AuthenticationDatabaseUserCertificateOutput() Get509AuthenticationDatabaseUserCertificateOutput {
	return i.ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(context.Background())
}

func (i Get509AuthenticationDatabaseUserCertificateArgs) ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Get509AuthenticationDatabaseUserCertificateOutput)
}

// Get509AuthenticationDatabaseUserCertificateArrayInput is an input type that accepts Get509AuthenticationDatabaseUserCertificateArray and Get509AuthenticationDatabaseUserCertificateArrayOutput values.
// You can construct a concrete instance of `Get509AuthenticationDatabaseUserCertificateArrayInput` via:
//
//          Get509AuthenticationDatabaseUserCertificateArray{ Get509AuthenticationDatabaseUserCertificateArgs{...} }
type Get509AuthenticationDatabaseUserCertificateArrayInput interface {
	pulumi.Input

	ToGet509AuthenticationDatabaseUserCertificateArrayOutput() Get509AuthenticationDatabaseUserCertificateArrayOutput
	ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Context) Get509AuthenticationDatabaseUserCertificateArrayOutput
}

type Get509AuthenticationDatabaseUserCertificateArray []Get509AuthenticationDatabaseUserCertificateInput

func (Get509AuthenticationDatabaseUserCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i Get509AuthenticationDatabaseUserCertificateArray) ToGet509AuthenticationDatabaseUserCertificateArrayOutput() Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return i.ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Background())
}

func (i Get509AuthenticationDatabaseUserCertificateArray) ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Get509AuthenticationDatabaseUserCertificateArrayOutput)
}

type Get509AuthenticationDatabaseUserCertificateOutput struct{ *pulumi.OutputState }

func (Get509AuthenticationDatabaseUserCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) ToGet509AuthenticationDatabaseUserCertificateOutput() Get509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.GroupId }).(pulumi.StringOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) int { return v.Id }).(pulumi.IntOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) NotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.NotAfter }).(pulumi.StringOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.Subject }).(pulumi.StringOutput)
}

type Get509AuthenticationDatabaseUserCertificateArrayOutput struct{ *pulumi.OutputState }

func (Get509AuthenticationDatabaseUserCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o Get509AuthenticationDatabaseUserCertificateArrayOutput) ToGet509AuthenticationDatabaseUserCertificateArrayOutput() Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateArrayOutput) ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateArrayOutput) Index(i pulumi.IntInput) Get509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Get509AuthenticationDatabaseUserCertificate {
		return vs[0].([]Get509AuthenticationDatabaseUserCertificate)[vs[1].(int)]
	}).(Get509AuthenticationDatabaseUserCertificateOutput)
}

type GetAlertConfigurationMatcher struct {
	// Name of the field in the target object to match on.
	// Host alerts support these fields:
	// - `TYPE_NAME`
	// - `HOSTNAME`
	// - `PORT`
	// - `HOSTNAME_AND_PORT`
	// - `REPLICA_SET_NAME`
	//   Replica set alerts support these fields:
	// - `REPLICA_SET_NAME`
	// - `SHARD_NAME`
	// - `CLUSTER_NAME`
	//   Sharded cluster alerts support these fields:
	// - `CLUSTER_NAME`
	// - `SHARD_NAME`
	FieldName string `pulumi:"fieldName"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator string `pulumi:"operator"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	// - `PRIMARY`
	// - `SECONDARY`
	// - `STANDALONE`
	// - `CONFIG`
	// - `MONGOS`
	Value string `pulumi:"value"`
}

// GetAlertConfigurationMatcherInput is an input type that accepts GetAlertConfigurationMatcherArgs and GetAlertConfigurationMatcherOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMatcherInput` via:
//
//          GetAlertConfigurationMatcherArgs{...}
type GetAlertConfigurationMatcherInput interface {
	pulumi.Input

	ToGetAlertConfigurationMatcherOutput() GetAlertConfigurationMatcherOutput
	ToGetAlertConfigurationMatcherOutputWithContext(context.Context) GetAlertConfigurationMatcherOutput
}

type GetAlertConfigurationMatcherArgs struct {
	// Name of the field in the target object to match on.
	// Host alerts support these fields:
	// - `TYPE_NAME`
	// - `HOSTNAME`
	// - `PORT`
	// - `HOSTNAME_AND_PORT`
	// - `REPLICA_SET_NAME`
	//   Replica set alerts support these fields:
	// - `REPLICA_SET_NAME`
	// - `SHARD_NAME`
	// - `CLUSTER_NAME`
	//   Sharded cluster alerts support these fields:
	// - `CLUSTER_NAME`
	// - `SHARD_NAME`
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	// - `PRIMARY`
	// - `SECONDARY`
	// - `STANDALONE`
	// - `CONFIG`
	// - `MONGOS`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAlertConfigurationMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMatcher)(nil)).Elem()
}

func (i GetAlertConfigurationMatcherArgs) ToGetAlertConfigurationMatcherOutput() GetAlertConfigurationMatcherOutput {
	return i.ToGetAlertConfigurationMatcherOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMatcherArgs) ToGetAlertConfigurationMatcherOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMatcherOutput)
}

// GetAlertConfigurationMatcherArrayInput is an input type that accepts GetAlertConfigurationMatcherArray and GetAlertConfigurationMatcherArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMatcherArrayInput` via:
//
//          GetAlertConfigurationMatcherArray{ GetAlertConfigurationMatcherArgs{...} }
type GetAlertConfigurationMatcherArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationMatcherArrayOutput() GetAlertConfigurationMatcherArrayOutput
	ToGetAlertConfigurationMatcherArrayOutputWithContext(context.Context) GetAlertConfigurationMatcherArrayOutput
}

type GetAlertConfigurationMatcherArray []GetAlertConfigurationMatcherInput

func (GetAlertConfigurationMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationMatcher)(nil)).Elem()
}

func (i GetAlertConfigurationMatcherArray) ToGetAlertConfigurationMatcherArrayOutput() GetAlertConfigurationMatcherArrayOutput {
	return i.ToGetAlertConfigurationMatcherArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMatcherArray) ToGetAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMatcherArrayOutput)
}

type GetAlertConfigurationMatcherOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMatcher)(nil)).Elem()
}

func (o GetAlertConfigurationMatcherOutput) ToGetAlertConfigurationMatcherOutput() GetAlertConfigurationMatcherOutput {
	return o
}

func (o GetAlertConfigurationMatcherOutput) ToGetAlertConfigurationMatcherOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherOutput {
	return o
}

// Name of the field in the target object to match on.
// Host alerts support these fields:
// - `TYPE_NAME`
// - `HOSTNAME`
// - `PORT`
// - `HOSTNAME_AND_PORT`
// - `REPLICA_SET_NAME`
//   Replica set alerts support these fields:
// - `REPLICA_SET_NAME`
// - `SHARD_NAME`
// - `CLUSTER_NAME`
//   Sharded cluster alerts support these fields:
// - `CLUSTER_NAME`
// - `SHARD_NAME`
func (o GetAlertConfigurationMatcherOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMatcher) string { return v.FieldName }).(pulumi.StringOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
// - `GREATER_THAN`
// - `LESS_THAN`
func (o GetAlertConfigurationMatcherOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMatcher) string { return v.Operator }).(pulumi.StringOutput)
}

// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
// - `PRIMARY`
// - `SECONDARY`
// - `STANDALONE`
// - `CONFIG`
// - `MONGOS`
func (o GetAlertConfigurationMatcherOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMatcher) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertConfigurationMatcherArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationMatcher)(nil)).Elem()
}

func (o GetAlertConfigurationMatcherArrayOutput) ToGetAlertConfigurationMatcherArrayOutput() GetAlertConfigurationMatcherArrayOutput {
	return o
}

func (o GetAlertConfigurationMatcherArrayOutput) ToGetAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherArrayOutput {
	return o
}

func (o GetAlertConfigurationMatcherArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationMatcherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationMatcher {
		return vs[0].([]GetAlertConfigurationMatcher)[vs[1].(int)]
	}).(GetAlertConfigurationMatcherOutput)
}

type GetAlertConfigurationMetricThreshold struct {
	// Name of the metric to check.
	MetricName string `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode string `pulumi:"mode"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator string `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold float64 `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Accepted values are:
	// - `RAW`
	// - `BITS`
	// - `BYTES`
	// - `KILOBITS`
	// - `KILOBYTES`
	// - `MEGABITS`
	// - `MEGABYTES`
	// - `GIGABITS`
	// - `GIGABYTES`
	// - `TERABYTES`
	// - `PETABYTES`
	// - `MILLISECONDS`
	// - `SECONDS`
	// - `MINUTES`
	// - `HOURS`
	// - `DAYS`
	Units string `pulumi:"units"`
}

// GetAlertConfigurationMetricThresholdInput is an input type that accepts GetAlertConfigurationMetricThresholdArgs and GetAlertConfigurationMetricThresholdOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMetricThresholdInput` via:
//
//          GetAlertConfigurationMetricThresholdArgs{...}
type GetAlertConfigurationMetricThresholdInput interface {
	pulumi.Input

	ToGetAlertConfigurationMetricThresholdOutput() GetAlertConfigurationMetricThresholdOutput
	ToGetAlertConfigurationMetricThresholdOutputWithContext(context.Context) GetAlertConfigurationMetricThresholdOutput
}

type GetAlertConfigurationMetricThresholdArgs struct {
	// Name of the metric to check.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Accepted values are:
	// - `RAW`
	// - `BITS`
	// - `BYTES`
	// - `KILOBITS`
	// - `KILOBYTES`
	// - `MEGABITS`
	// - `MEGABYTES`
	// - `GIGABITS`
	// - `GIGABYTES`
	// - `TERABYTES`
	// - `PETABYTES`
	// - `MILLISECONDS`
	// - `SECONDS`
	// - `MINUTES`
	// - `HOURS`
	// - `DAYS`
	Units pulumi.StringInput `pulumi:"units"`
}

func (GetAlertConfigurationMetricThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMetricThreshold)(nil)).Elem()
}

func (i GetAlertConfigurationMetricThresholdArgs) ToGetAlertConfigurationMetricThresholdOutput() GetAlertConfigurationMetricThresholdOutput {
	return i.ToGetAlertConfigurationMetricThresholdOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMetricThresholdArgs) ToGetAlertConfigurationMetricThresholdOutputWithContext(ctx context.Context) GetAlertConfigurationMetricThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMetricThresholdOutput)
}

type GetAlertConfigurationMetricThresholdOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMetricThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMetricThreshold)(nil)).Elem()
}

func (o GetAlertConfigurationMetricThresholdOutput) ToGetAlertConfigurationMetricThresholdOutput() GetAlertConfigurationMetricThresholdOutput {
	return o
}

func (o GetAlertConfigurationMetricThresholdOutput) ToGetAlertConfigurationMetricThresholdOutputWithContext(ctx context.Context) GetAlertConfigurationMetricThresholdOutput {
	return o
}

// Name of the metric to check.
func (o GetAlertConfigurationMetricThresholdOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThreshold) string { return v.MetricName }).(pulumi.StringOutput)
}

// This must be set to AVERAGE. Atlas computes the current metric value as an average.
func (o GetAlertConfigurationMetricThresholdOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThreshold) string { return v.Mode }).(pulumi.StringOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
// - `GREATER_THAN`
// - `LESS_THAN`
func (o GetAlertConfigurationMetricThresholdOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThreshold) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o GetAlertConfigurationMetricThresholdOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetAlertConfigurationMetricThreshold) float64 { return v.Threshold }).(pulumi.Float64Output)
}

// The units for the threshold value. Depends on the type of metric.
// Accepted values are:
// - `RAW`
// - `BITS`
// - `BYTES`
// - `KILOBITS`
// - `KILOBYTES`
// - `MEGABITS`
// - `MEGABYTES`
// - `GIGABITS`
// - `GIGABYTES`
// - `TERABYTES`
// - `PETABYTES`
// - `MILLISECONDS`
// - `SECONDS`
// - `MINUTES`
// - `HOURS`
// - `DAYS`
func (o GetAlertConfigurationMetricThresholdOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThreshold) string { return v.Units }).(pulumi.StringOutput)
}

type GetAlertConfigurationNotification struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken string `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName string `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey string `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion string `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin int `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress string `pulumi:"emailAddress"`
	// Flag indicating if email notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	EmailEnabled bool `pulumi:"emailEnabled"`
	// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
	FlowName string `pulumi:"flowName"`
	// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	FlowdockApiToken string `pulumi:"flowdockApiToken"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
	IntervalMin int `pulumi:"intervalMin"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber string `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey string `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion string `pulumi:"opsGenieRegion"`
	// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
	OrgName string `pulumi:"orgName"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey string `pulumi:"serviceKey"`
	// Flag indicating if text message notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	SmsEnabled bool `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId string `pulumi:"teamId"`
	// Type of alert notification.
	// Accepted values are:
	// - `DATADOG`
	// - `EMAIL`
	// - `FLOWDOCK`
	// - `GROUP` (Project)
	// - `OPS_GENIE`
	// - `ORG`
	// - `PAGER_DUTY`
	// - `SLACK`
	// - `SMS`
	// - `TEAM`
	// - `USER`
	// - `VICTOR_OPS`
	// - `WEBHOOK`
	TypeName string `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username string `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey string `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey string `pulumi:"victorOpsRoutingKey"`
}

// GetAlertConfigurationNotificationInput is an input type that accepts GetAlertConfigurationNotificationArgs and GetAlertConfigurationNotificationOutput values.
// You can construct a concrete instance of `GetAlertConfigurationNotificationInput` via:
//
//          GetAlertConfigurationNotificationArgs{...}
type GetAlertConfigurationNotificationInput interface {
	pulumi.Input

	ToGetAlertConfigurationNotificationOutput() GetAlertConfigurationNotificationOutput
	ToGetAlertConfigurationNotificationOutputWithContext(context.Context) GetAlertConfigurationNotificationOutput
}

type GetAlertConfigurationNotificationArgs struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken pulumi.StringInput `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey pulumi.StringInput `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion pulumi.StringInput `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin pulumi.IntInput `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// Flag indicating if email notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	EmailEnabled pulumi.BoolInput `pulumi:"emailEnabled"`
	// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
	FlowName pulumi.StringInput `pulumi:"flowName"`
	// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	FlowdockApiToken pulumi.StringInput `pulumi:"flowdockApiToken"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
	IntervalMin pulumi.IntInput `pulumi:"intervalMin"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber pulumi.StringInput `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey pulumi.StringInput `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion pulumi.StringInput `pulumi:"opsGenieRegion"`
	// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
	OrgName pulumi.StringInput `pulumi:"orgName"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey pulumi.StringInput `pulumi:"serviceKey"`
	// Flag indicating if text message notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	SmsEnabled pulumi.BoolInput `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId pulumi.StringInput `pulumi:"teamId"`
	// Type of alert notification.
	// Accepted values are:
	// - `DATADOG`
	// - `EMAIL`
	// - `FLOWDOCK`
	// - `GROUP` (Project)
	// - `OPS_GENIE`
	// - `ORG`
	// - `PAGER_DUTY`
	// - `SLACK`
	// - `SMS`
	// - `TEAM`
	// - `USER`
	// - `VICTOR_OPS`
	// - `WEBHOOK`
	TypeName pulumi.StringInput `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username pulumi.StringInput `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey pulumi.StringInput `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey pulumi.StringInput `pulumi:"victorOpsRoutingKey"`
}

func (GetAlertConfigurationNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationNotification)(nil)).Elem()
}

func (i GetAlertConfigurationNotificationArgs) ToGetAlertConfigurationNotificationOutput() GetAlertConfigurationNotificationOutput {
	return i.ToGetAlertConfigurationNotificationOutputWithContext(context.Background())
}

func (i GetAlertConfigurationNotificationArgs) ToGetAlertConfigurationNotificationOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationNotificationOutput)
}

// GetAlertConfigurationNotificationArrayInput is an input type that accepts GetAlertConfigurationNotificationArray and GetAlertConfigurationNotificationArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationNotificationArrayInput` via:
//
//          GetAlertConfigurationNotificationArray{ GetAlertConfigurationNotificationArgs{...} }
type GetAlertConfigurationNotificationArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationNotificationArrayOutput() GetAlertConfigurationNotificationArrayOutput
	ToGetAlertConfigurationNotificationArrayOutputWithContext(context.Context) GetAlertConfigurationNotificationArrayOutput
}

type GetAlertConfigurationNotificationArray []GetAlertConfigurationNotificationInput

func (GetAlertConfigurationNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationNotification)(nil)).Elem()
}

func (i GetAlertConfigurationNotificationArray) ToGetAlertConfigurationNotificationArrayOutput() GetAlertConfigurationNotificationArrayOutput {
	return i.ToGetAlertConfigurationNotificationArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationNotificationArray) ToGetAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationNotificationArrayOutput)
}

type GetAlertConfigurationNotificationOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationNotification)(nil)).Elem()
}

func (o GetAlertConfigurationNotificationOutput) ToGetAlertConfigurationNotificationOutput() GetAlertConfigurationNotificationOutput {
	return o
}

func (o GetAlertConfigurationNotificationOutput) ToGetAlertConfigurationNotificationOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationOutput {
	return o
}

// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o GetAlertConfigurationNotificationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.ApiToken }).(pulumi.StringOutput)
}

// Slack channel name. Required for the SLACK notifications type.
func (o GetAlertConfigurationNotificationOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
func (o GetAlertConfigurationNotificationOutput) DatadogApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.DatadogApiKey }).(pulumi.StringOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
func (o GetAlertConfigurationNotificationOutput) DatadogRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.DatadogRegion }).(pulumi.StringOutput)
}

// Number of minutes to wait after an alert condition is detected before sending out the first notification.
func (o GetAlertConfigurationNotificationOutput) DelayMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) int { return v.DelayMin }).(pulumi.IntOutput)
}

// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
func (o GetAlertConfigurationNotificationOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// Flag indicating if email notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
func (o GetAlertConfigurationNotificationOutput) EmailEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) bool { return v.EmailEnabled }).(pulumi.BoolOutput)
}

// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
func (o GetAlertConfigurationNotificationOutput) FlowName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.FlowName }).(pulumi.StringOutput)
}

// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o GetAlertConfigurationNotificationOutput) FlowdockApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.FlowdockApiToken }).(pulumi.StringOutput)
}

// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
func (o GetAlertConfigurationNotificationOutput) IntervalMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) int { return v.IntervalMin }).(pulumi.IntOutput)
}

// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
func (o GetAlertConfigurationNotificationOutput) MobileNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.MobileNumber }).(pulumi.StringOutput)
}

// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o GetAlertConfigurationNotificationOutput) OpsGenieApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.OpsGenieApiKey }).(pulumi.StringOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
func (o GetAlertConfigurationNotificationOutput) OpsGenieRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.OpsGenieRegion }).(pulumi.StringOutput)
}

// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
func (o GetAlertConfigurationNotificationOutput) OrgName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.OrgName }).(pulumi.StringOutput)
}

// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o GetAlertConfigurationNotificationOutput) ServiceKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.ServiceKey }).(pulumi.StringOutput)
}

// Flag indicating if text message notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
func (o GetAlertConfigurationNotificationOutput) SmsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) bool { return v.SmsEnabled }).(pulumi.BoolOutput)
}

// Unique identifier of a team.
func (o GetAlertConfigurationNotificationOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.TeamId }).(pulumi.StringOutput)
}

// Type of alert notification.
// Accepted values are:
// - `DATADOG`
// - `EMAIL`
// - `FLOWDOCK`
// - `GROUP` (Project)
// - `OPS_GENIE`
// - `ORG`
// - `PAGER_DUTY`
// - `SLACK`
// - `SMS`
// - `TEAM`
// - `USER`
// - `VICTOR_OPS`
// - `WEBHOOK`
func (o GetAlertConfigurationNotificationOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.TypeName }).(pulumi.StringOutput)
}

// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
func (o GetAlertConfigurationNotificationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.Username }).(pulumi.StringOutput)
}

// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o GetAlertConfigurationNotificationOutput) VictorOpsApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.VictorOpsApiKey }).(pulumi.StringOutput)
}

// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o GetAlertConfigurationNotificationOutput) VictorOpsRoutingKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.VictorOpsRoutingKey }).(pulumi.StringOutput)
}

type GetAlertConfigurationNotificationArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationNotification)(nil)).Elem()
}

func (o GetAlertConfigurationNotificationArrayOutput) ToGetAlertConfigurationNotificationArrayOutput() GetAlertConfigurationNotificationArrayOutput {
	return o
}

func (o GetAlertConfigurationNotificationArrayOutput) ToGetAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationArrayOutput {
	return o
}

func (o GetAlertConfigurationNotificationArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationNotification {
		return vs[0].([]GetAlertConfigurationNotification)[vs[1].(int)]
	}).(GetAlertConfigurationNotificationOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicy struct {
	Id          string                                                 `pulumi:"id"`
	PolicyItems []GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// GetCloudProviderSnapshotBackupPolicyPolicyInput is an input type that accepts GetCloudProviderSnapshotBackupPolicyPolicyArgs and GetCloudProviderSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotBackupPolicyPolicyInput` via:
//
//          GetCloudProviderSnapshotBackupPolicyPolicyArgs{...}
type GetCloudProviderSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotBackupPolicyPolicyOutput() GetCloudProviderSnapshotBackupPolicyPolicyOutput
	ToGetCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(context.Context) GetCloudProviderSnapshotBackupPolicyPolicyOutput
}

type GetCloudProviderSnapshotBackupPolicyPolicyArgs struct {
	Id          pulumi.StringInput                                             `pulumi:"id"`
	PolicyItems GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (GetCloudProviderSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyArgs) ToGetCloudProviderSnapshotBackupPolicyPolicyOutput() GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return i.ToGetCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyArgs) ToGetCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotBackupPolicyPolicyOutput)
}

// GetCloudProviderSnapshotBackupPolicyPolicyArrayInput is an input type that accepts GetCloudProviderSnapshotBackupPolicyPolicyArray and GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotBackupPolicyPolicyArrayInput` via:
//
//          GetCloudProviderSnapshotBackupPolicyPolicyArray{ GetCloudProviderSnapshotBackupPolicyPolicyArgs{...} }
type GetCloudProviderSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput
	ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput
}

type GetCloudProviderSnapshotBackupPolicyPolicyArray []GetCloudProviderSnapshotBackupPolicyPolicyInput

func (GetCloudProviderSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyArray) ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyArray) ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyOutput() GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyOutput) PolicyItems() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicy) []GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderSnapshotBackupPolicyPolicy {
		return vs[0].([]GetCloudProviderSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(GetCloudProviderSnapshotBackupPolicyPolicyOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	Id                string `pulumi:"id"`
	RetentionUnit     string `pulumi:"retentionUnit"`
	RetentionValue    int    `pulumi:"retentionValue"`
}

// GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs and GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//          GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput
	ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	Id                pulumi.StringInput `pulumi:"id"`
	RetentionUnit     pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue    pulumi.IntInput    `pulumi:"retentionValue"`
}

func (GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray and GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//          GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray{ GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray []GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemInput

func (GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type GetCloudProviderSnapshotRestoreJobsResultType struct {
	// Indicates whether the restore job was canceled.
	Cancelled bool `pulumi:"cancelled"`
	// UTC ISO 8601 formatted point in time when Atlas created the restore job.
	CreatedAt string `pulumi:"createdAt"`
	// Type of restore job to create. Possible values are: automated and download.
	DeliveryType string `pulumi:"deliveryType"`
	// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
	DeliveryUrls []string `pulumi:"deliveryUrls"`
	// Indicates whether the restore job expired.
	Expired bool `pulumi:"expired"`
	// UTC ISO 8601 formatted point in time when the restore job expires.
	ExpiresAt string `pulumi:"expiresAt"`
	// UTC ISO 8601 formatted point in time when the restore job completed.
	FinishedAt string `pulumi:"finishedAt"`
	// The unique identifier of the restore job.
	Id                    string `pulumi:"id"`
	OplogInc              int    `pulumi:"oplogInc"`
	OplogTs               int    `pulumi:"oplogTs"`
	PointInTimeUtcSeconds int    `pulumi:"pointInTimeUtcSeconds"`
	// Unique identifier of the source snapshot ID of the restore job.
	SnapshotId string `pulumi:"snapshotId"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
	TargetClusterName string `pulumi:"targetClusterName"`
	TargetProjectId   string `pulumi:"targetProjectId"`
	// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
	Timestamp string `pulumi:"timestamp"`
}

// GetCloudProviderSnapshotRestoreJobsResultTypeInput is an input type that accepts GetCloudProviderSnapshotRestoreJobsResultTypeArgs and GetCloudProviderSnapshotRestoreJobsResultTypeOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotRestoreJobsResultTypeInput` via:
//
//          GetCloudProviderSnapshotRestoreJobsResultTypeArgs{...}
type GetCloudProviderSnapshotRestoreJobsResultTypeInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotRestoreJobsResultTypeOutput() GetCloudProviderSnapshotRestoreJobsResultTypeOutput
	ToGetCloudProviderSnapshotRestoreJobsResultTypeOutputWithContext(context.Context) GetCloudProviderSnapshotRestoreJobsResultTypeOutput
}

type GetCloudProviderSnapshotRestoreJobsResultTypeArgs struct {
	// Indicates whether the restore job was canceled.
	Cancelled pulumi.BoolInput `pulumi:"cancelled"`
	// UTC ISO 8601 formatted point in time when Atlas created the restore job.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Type of restore job to create. Possible values are: automated and download.
	DeliveryType pulumi.StringInput `pulumi:"deliveryType"`
	// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
	DeliveryUrls pulumi.StringArrayInput `pulumi:"deliveryUrls"`
	// Indicates whether the restore job expired.
	Expired pulumi.BoolInput `pulumi:"expired"`
	// UTC ISO 8601 formatted point in time when the restore job expires.
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// UTC ISO 8601 formatted point in time when the restore job completed.
	FinishedAt pulumi.StringInput `pulumi:"finishedAt"`
	// The unique identifier of the restore job.
	Id                    pulumi.StringInput `pulumi:"id"`
	OplogInc              pulumi.IntInput    `pulumi:"oplogInc"`
	OplogTs               pulumi.IntInput    `pulumi:"oplogTs"`
	PointInTimeUtcSeconds pulumi.IntInput    `pulumi:"pointInTimeUtcSeconds"`
	// Unique identifier of the source snapshot ID of the restore job.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
	TargetClusterName pulumi.StringInput `pulumi:"targetClusterName"`
	TargetProjectId   pulumi.StringInput `pulumi:"targetProjectId"`
	// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
}

func (GetCloudProviderSnapshotRestoreJobsResultTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotRestoreJobsResultType)(nil)).Elem()
}

func (i GetCloudProviderSnapshotRestoreJobsResultTypeArgs) ToGetCloudProviderSnapshotRestoreJobsResultTypeOutput() GetCloudProviderSnapshotRestoreJobsResultTypeOutput {
	return i.ToGetCloudProviderSnapshotRestoreJobsResultTypeOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotRestoreJobsResultTypeArgs) ToGetCloudProviderSnapshotRestoreJobsResultTypeOutputWithContext(ctx context.Context) GetCloudProviderSnapshotRestoreJobsResultTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotRestoreJobsResultTypeOutput)
}

// GetCloudProviderSnapshotRestoreJobsResultTypeArrayInput is an input type that accepts GetCloudProviderSnapshotRestoreJobsResultTypeArray and GetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotRestoreJobsResultTypeArrayInput` via:
//
//          GetCloudProviderSnapshotRestoreJobsResultTypeArray{ GetCloudProviderSnapshotRestoreJobsResultTypeArgs{...} }
type GetCloudProviderSnapshotRestoreJobsResultTypeArrayInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput() GetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput
	ToGetCloudProviderSnapshotRestoreJobsResultTypeArrayOutputWithContext(context.Context) GetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput
}

type GetCloudProviderSnapshotRestoreJobsResultTypeArray []GetCloudProviderSnapshotRestoreJobsResultTypeInput

func (GetCloudProviderSnapshotRestoreJobsResultTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotRestoreJobsResultType)(nil)).Elem()
}

func (i GetCloudProviderSnapshotRestoreJobsResultTypeArray) ToGetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput() GetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput {
	return i.ToGetCloudProviderSnapshotRestoreJobsResultTypeArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotRestoreJobsResultTypeArray) ToGetCloudProviderSnapshotRestoreJobsResultTypeArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput)
}

type GetCloudProviderSnapshotRestoreJobsResultTypeOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotRestoreJobsResultTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotRestoreJobsResultType)(nil)).Elem()
}

func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) ToGetCloudProviderSnapshotRestoreJobsResultTypeOutput() GetCloudProviderSnapshotRestoreJobsResultTypeOutput {
	return o
}

func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) ToGetCloudProviderSnapshotRestoreJobsResultTypeOutputWithContext(ctx context.Context) GetCloudProviderSnapshotRestoreJobsResultTypeOutput {
	return o
}

// Indicates whether the restore job was canceled.
func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) Cancelled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) bool { return v.Cancelled }).(pulumi.BoolOutput)
}

// UTC ISO 8601 formatted point in time when Atlas created the restore job.
func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Type of restore job to create. Possible values are: automated and download.
func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) DeliveryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) string { return v.DeliveryType }).(pulumi.StringOutput)
}

// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) DeliveryUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) []string { return v.DeliveryUrls }).(pulumi.StringArrayOutput)
}

// Indicates whether the restore job expired.
func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) Expired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) bool { return v.Expired }).(pulumi.BoolOutput)
}

// UTC ISO 8601 formatted point in time when the restore job expires.
func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// UTC ISO 8601 formatted point in time when the restore job completed.
func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) FinishedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) string { return v.FinishedAt }).(pulumi.StringOutput)
}

// The unique identifier of the restore job.
func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) OplogInc() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) int { return v.OplogInc }).(pulumi.IntOutput)
}

func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) OplogTs() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) int { return v.OplogTs }).(pulumi.IntOutput)
}

func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) PointInTimeUtcSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) int { return v.PointInTimeUtcSeconds }).(pulumi.IntOutput)
}

// Unique identifier of the source snapshot ID of the restore job.
func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) TargetClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) string { return v.TargetClusterName }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) TargetProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) string { return v.TargetProjectId }).(pulumi.StringOutput)
}

// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
func (o GetCloudProviderSnapshotRestoreJobsResultTypeOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResultType) string { return v.Timestamp }).(pulumi.StringOutput)
}

type GetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotRestoreJobsResultType)(nil)).Elem()
}

func (o GetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput) ToGetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput() GetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput) ToGetCloudProviderSnapshotRestoreJobsResultTypeArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput) Index(i pulumi.IntInput) GetCloudProviderSnapshotRestoreJobsResultTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderSnapshotRestoreJobsResultType {
		return vs[0].([]GetCloudProviderSnapshotRestoreJobsResultType)[vs[1].(int)]
	}).(GetCloudProviderSnapshotRestoreJobsResultTypeOutput)
}

type GetCloudProviderSnapshotsResultType struct {
	// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
	CreatedAt string `pulumi:"createdAt"`
	// UDescription of the snapshot. Only present for on-demand snapshots.
	Description string `pulumi:"description"`
	// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
	ExpiresAt string `pulumi:"expiresAt"`
	// Unique identifier of the snapshot.
	Id string `pulumi:"id"`
	// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
	MasterKeyUuid string `pulumi:"masterKeyUuid"`
	// Version of the MongoDB server.
	MongodVersion string `pulumi:"mongodVersion"`
	// Specified the type of snapshot. Valid values are onDemand and scheduled.
	SnapshotType string `pulumi:"snapshotType"`
	// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
	Status string `pulumi:"status"`
	// Specifies the size of the snapshot in bytes.
	StorageSizeBytes int `pulumi:"storageSizeBytes"`
	// Specifies the type of cluster: replicaSet or shardedCluster.
	Type string `pulumi:"type"`
}

// GetCloudProviderSnapshotsResultTypeInput is an input type that accepts GetCloudProviderSnapshotsResultTypeArgs and GetCloudProviderSnapshotsResultTypeOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotsResultTypeInput` via:
//
//          GetCloudProviderSnapshotsResultTypeArgs{...}
type GetCloudProviderSnapshotsResultTypeInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotsResultTypeOutput() GetCloudProviderSnapshotsResultTypeOutput
	ToGetCloudProviderSnapshotsResultTypeOutputWithContext(context.Context) GetCloudProviderSnapshotsResultTypeOutput
}

type GetCloudProviderSnapshotsResultTypeArgs struct {
	// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// UDescription of the snapshot. Only present for on-demand snapshots.
	Description pulumi.StringInput `pulumi:"description"`
	// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// Unique identifier of the snapshot.
	Id pulumi.StringInput `pulumi:"id"`
	// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
	MasterKeyUuid pulumi.StringInput `pulumi:"masterKeyUuid"`
	// Version of the MongoDB server.
	MongodVersion pulumi.StringInput `pulumi:"mongodVersion"`
	// Specified the type of snapshot. Valid values are onDemand and scheduled.
	SnapshotType pulumi.StringInput `pulumi:"snapshotType"`
	// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
	Status pulumi.StringInput `pulumi:"status"`
	// Specifies the size of the snapshot in bytes.
	StorageSizeBytes pulumi.IntInput `pulumi:"storageSizeBytes"`
	// Specifies the type of cluster: replicaSet or shardedCluster.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCloudProviderSnapshotsResultTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotsResultType)(nil)).Elem()
}

func (i GetCloudProviderSnapshotsResultTypeArgs) ToGetCloudProviderSnapshotsResultTypeOutput() GetCloudProviderSnapshotsResultTypeOutput {
	return i.ToGetCloudProviderSnapshotsResultTypeOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotsResultTypeArgs) ToGetCloudProviderSnapshotsResultTypeOutputWithContext(ctx context.Context) GetCloudProviderSnapshotsResultTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotsResultTypeOutput)
}

// GetCloudProviderSnapshotsResultTypeArrayInput is an input type that accepts GetCloudProviderSnapshotsResultTypeArray and GetCloudProviderSnapshotsResultTypeArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotsResultTypeArrayInput` via:
//
//          GetCloudProviderSnapshotsResultTypeArray{ GetCloudProviderSnapshotsResultTypeArgs{...} }
type GetCloudProviderSnapshotsResultTypeArrayInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotsResultTypeArrayOutput() GetCloudProviderSnapshotsResultTypeArrayOutput
	ToGetCloudProviderSnapshotsResultTypeArrayOutputWithContext(context.Context) GetCloudProviderSnapshotsResultTypeArrayOutput
}

type GetCloudProviderSnapshotsResultTypeArray []GetCloudProviderSnapshotsResultTypeInput

func (GetCloudProviderSnapshotsResultTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotsResultType)(nil)).Elem()
}

func (i GetCloudProviderSnapshotsResultTypeArray) ToGetCloudProviderSnapshotsResultTypeArrayOutput() GetCloudProviderSnapshotsResultTypeArrayOutput {
	return i.ToGetCloudProviderSnapshotsResultTypeArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotsResultTypeArray) ToGetCloudProviderSnapshotsResultTypeArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotsResultTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotsResultTypeArrayOutput)
}

type GetCloudProviderSnapshotsResultTypeOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotsResultTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotsResultType)(nil)).Elem()
}

func (o GetCloudProviderSnapshotsResultTypeOutput) ToGetCloudProviderSnapshotsResultTypeOutput() GetCloudProviderSnapshotsResultTypeOutput {
	return o
}

func (o GetCloudProviderSnapshotsResultTypeOutput) ToGetCloudProviderSnapshotsResultTypeOutputWithContext(ctx context.Context) GetCloudProviderSnapshotsResultTypeOutput {
	return o
}

// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
func (o GetCloudProviderSnapshotsResultTypeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResultType) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// UDescription of the snapshot. Only present for on-demand snapshots.
func (o GetCloudProviderSnapshotsResultTypeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResultType) string { return v.Description }).(pulumi.StringOutput)
}

// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
func (o GetCloudProviderSnapshotsResultTypeOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResultType) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// Unique identifier of the snapshot.
func (o GetCloudProviderSnapshotsResultTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResultType) string { return v.Id }).(pulumi.StringOutput)
}

// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
func (o GetCloudProviderSnapshotsResultTypeOutput) MasterKeyUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResultType) string { return v.MasterKeyUuid }).(pulumi.StringOutput)
}

// Version of the MongoDB server.
func (o GetCloudProviderSnapshotsResultTypeOutput) MongodVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResultType) string { return v.MongodVersion }).(pulumi.StringOutput)
}

// Specified the type of snapshot. Valid values are onDemand and scheduled.
func (o GetCloudProviderSnapshotsResultTypeOutput) SnapshotType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResultType) string { return v.SnapshotType }).(pulumi.StringOutput)
}

// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
func (o GetCloudProviderSnapshotsResultTypeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResultType) string { return v.Status }).(pulumi.StringOutput)
}

// Specifies the size of the snapshot in bytes.
func (o GetCloudProviderSnapshotsResultTypeOutput) StorageSizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResultType) int { return v.StorageSizeBytes }).(pulumi.IntOutput)
}

// Specifies the type of cluster: replicaSet or shardedCluster.
func (o GetCloudProviderSnapshotsResultTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResultType) string { return v.Type }).(pulumi.StringOutput)
}

type GetCloudProviderSnapshotsResultTypeArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotsResultTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotsResultType)(nil)).Elem()
}

func (o GetCloudProviderSnapshotsResultTypeArrayOutput) ToGetCloudProviderSnapshotsResultTypeArrayOutput() GetCloudProviderSnapshotsResultTypeArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotsResultTypeArrayOutput) ToGetCloudProviderSnapshotsResultTypeArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotsResultTypeArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotsResultTypeArrayOutput) Index(i pulumi.IntInput) GetCloudProviderSnapshotsResultTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderSnapshotsResultType {
		return vs[0].([]GetCloudProviderSnapshotsResultType)[vs[1].(int)]
	}).(GetCloudProviderSnapshotsResultTypeOutput)
}

type GetClusterBiConnector struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled string `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference string `pulumi:"readPreference"`
}

// GetClusterBiConnectorInput is an input type that accepts GetClusterBiConnectorArgs and GetClusterBiConnectorOutput values.
// You can construct a concrete instance of `GetClusterBiConnectorInput` via:
//
//          GetClusterBiConnectorArgs{...}
type GetClusterBiConnectorInput interface {
	pulumi.Input

	ToGetClusterBiConnectorOutput() GetClusterBiConnectorOutput
	ToGetClusterBiConnectorOutputWithContext(context.Context) GetClusterBiConnectorOutput
}

type GetClusterBiConnectorArgs struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled pulumi.StringInput `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringInput `pulumi:"readPreference"`
}

func (GetClusterBiConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBiConnector)(nil)).Elem()
}

func (i GetClusterBiConnectorArgs) ToGetClusterBiConnectorOutput() GetClusterBiConnectorOutput {
	return i.ToGetClusterBiConnectorOutputWithContext(context.Background())
}

func (i GetClusterBiConnectorArgs) ToGetClusterBiConnectorOutputWithContext(ctx context.Context) GetClusterBiConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBiConnectorOutput)
}

type GetClusterBiConnectorOutput struct{ *pulumi.OutputState }

func (GetClusterBiConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBiConnector)(nil)).Elem()
}

func (o GetClusterBiConnectorOutput) ToGetClusterBiConnectorOutput() GetClusterBiConnectorOutput {
	return o
}

func (o GetClusterBiConnectorOutput) ToGetClusterBiConnectorOutputWithContext(ctx context.Context) GetClusterBiConnectorOutput {
	return o
}

// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
func (o GetClusterBiConnectorOutput) Enabled() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterBiConnector) string { return v.Enabled }).(pulumi.StringOutput)
}

// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o GetClusterBiConnectorOutput) ReadPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterBiConnector) string { return v.ReadPreference }).(pulumi.StringOutput)
}

type GetClusterConnectionStrings struct {
	AwsPrivateLink    map[string]interface{} `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv map[string]interface{} `pulumi:"awsPrivateLinkSrv"`
	Private           string                 `pulumi:"private"`
	PrivateSrv        string                 `pulumi:"privateSrv"`
	Standard          string                 `pulumi:"standard"`
	StandardSrv       string                 `pulumi:"standardSrv"`
}

// GetClusterConnectionStringsInput is an input type that accepts GetClusterConnectionStringsArgs and GetClusterConnectionStringsOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringsInput` via:
//
//          GetClusterConnectionStringsArgs{...}
type GetClusterConnectionStringsInput interface {
	pulumi.Input

	ToGetClusterConnectionStringsOutput() GetClusterConnectionStringsOutput
	ToGetClusterConnectionStringsOutputWithContext(context.Context) GetClusterConnectionStringsOutput
}

type GetClusterConnectionStringsArgs struct {
	AwsPrivateLink    pulumi.MapInput    `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv pulumi.MapInput    `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringInput `pulumi:"private"`
	PrivateSrv        pulumi.StringInput `pulumi:"privateSrv"`
	Standard          pulumi.StringInput `pulumi:"standard"`
	StandardSrv       pulumi.StringInput `pulumi:"standardSrv"`
}

func (GetClusterConnectionStringsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionStrings)(nil)).Elem()
}

func (i GetClusterConnectionStringsArgs) ToGetClusterConnectionStringsOutput() GetClusterConnectionStringsOutput {
	return i.ToGetClusterConnectionStringsOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringsArgs) ToGetClusterConnectionStringsOutputWithContext(ctx context.Context) GetClusterConnectionStringsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringsOutput)
}

type GetClusterConnectionStringsOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionStrings)(nil)).Elem()
}

func (o GetClusterConnectionStringsOutput) ToGetClusterConnectionStringsOutput() GetClusterConnectionStringsOutput {
	return o
}

func (o GetClusterConnectionStringsOutput) ToGetClusterConnectionStringsOutputWithContext(ctx context.Context) GetClusterConnectionStringsOutput {
	return o
}

func (o GetClusterConnectionStringsOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v GetClusterConnectionStrings) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

func (o GetClusterConnectionStringsOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v GetClusterConnectionStrings) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o GetClusterConnectionStringsOutput) Private() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStrings) string { return v.Private }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringsOutput) PrivateSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStrings) string { return v.PrivateSrv }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringsOutput) Standard() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStrings) string { return v.Standard }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringsOutput) StandardSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStrings) string { return v.StandardSrv }).(pulumi.StringOutput)
}

type GetClusterLabel struct {
	// The key that was set.
	Key string `pulumi:"key"`
	// The value that represents the key.
	Value string `pulumi:"value"`
}

// GetClusterLabelInput is an input type that accepts GetClusterLabelArgs and GetClusterLabelOutput values.
// You can construct a concrete instance of `GetClusterLabelInput` via:
//
//          GetClusterLabelArgs{...}
type GetClusterLabelInput interface {
	pulumi.Input

	ToGetClusterLabelOutput() GetClusterLabelOutput
	ToGetClusterLabelOutputWithContext(context.Context) GetClusterLabelOutput
}

type GetClusterLabelArgs struct {
	// The key that was set.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that represents the key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClusterLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLabel)(nil)).Elem()
}

func (i GetClusterLabelArgs) ToGetClusterLabelOutput() GetClusterLabelOutput {
	return i.ToGetClusterLabelOutputWithContext(context.Background())
}

func (i GetClusterLabelArgs) ToGetClusterLabelOutputWithContext(ctx context.Context) GetClusterLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLabelOutput)
}

// GetClusterLabelArrayInput is an input type that accepts GetClusterLabelArray and GetClusterLabelArrayOutput values.
// You can construct a concrete instance of `GetClusterLabelArrayInput` via:
//
//          GetClusterLabelArray{ GetClusterLabelArgs{...} }
type GetClusterLabelArrayInput interface {
	pulumi.Input

	ToGetClusterLabelArrayOutput() GetClusterLabelArrayOutput
	ToGetClusterLabelArrayOutputWithContext(context.Context) GetClusterLabelArrayOutput
}

type GetClusterLabelArray []GetClusterLabelInput

func (GetClusterLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterLabel)(nil)).Elem()
}

func (i GetClusterLabelArray) ToGetClusterLabelArrayOutput() GetClusterLabelArrayOutput {
	return i.ToGetClusterLabelArrayOutputWithContext(context.Background())
}

func (i GetClusterLabelArray) ToGetClusterLabelArrayOutputWithContext(ctx context.Context) GetClusterLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLabelArrayOutput)
}

type GetClusterLabelOutput struct{ *pulumi.OutputState }

func (GetClusterLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLabel)(nil)).Elem()
}

func (o GetClusterLabelOutput) ToGetClusterLabelOutput() GetClusterLabelOutput {
	return o
}

func (o GetClusterLabelOutput) ToGetClusterLabelOutputWithContext(ctx context.Context) GetClusterLabelOutput {
	return o
}

// The key that was set.
func (o GetClusterLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that represents the key.
func (o GetClusterLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetClusterLabelArrayOutput struct{ *pulumi.OutputState }

func (GetClusterLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterLabel)(nil)).Elem()
}

func (o GetClusterLabelArrayOutput) ToGetClusterLabelArrayOutput() GetClusterLabelArrayOutput {
	return o
}

func (o GetClusterLabelArrayOutput) ToGetClusterLabelArrayOutputWithContext(ctx context.Context) GetClusterLabelArrayOutput {
	return o
}

func (o GetClusterLabelArrayOutput) Index(i pulumi.IntInput) GetClusterLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterLabel {
		return vs[0].([]GetClusterLabel)[vs[1].(int)]
	}).(GetClusterLabelOutput)
}

type GetClusterReplicationSpec struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id string `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards int `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs []GetClusterReplicationSpecRegionsConfig `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName string `pulumi:"zoneName"`
}

// GetClusterReplicationSpecInput is an input type that accepts GetClusterReplicationSpecArgs and GetClusterReplicationSpecOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecInput` via:
//
//          GetClusterReplicationSpecArgs{...}
type GetClusterReplicationSpecInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecOutput() GetClusterReplicationSpecOutput
	ToGetClusterReplicationSpecOutputWithContext(context.Context) GetClusterReplicationSpecOutput
}

type GetClusterReplicationSpecArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs GetClusterReplicationSpecRegionsConfigArrayInput `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetClusterReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpec)(nil)).Elem()
}

func (i GetClusterReplicationSpecArgs) ToGetClusterReplicationSpecOutput() GetClusterReplicationSpecOutput {
	return i.ToGetClusterReplicationSpecOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecArgs) ToGetClusterReplicationSpecOutputWithContext(ctx context.Context) GetClusterReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecOutput)
}

// GetClusterReplicationSpecArrayInput is an input type that accepts GetClusterReplicationSpecArray and GetClusterReplicationSpecArrayOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecArrayInput` via:
//
//          GetClusterReplicationSpecArray{ GetClusterReplicationSpecArgs{...} }
type GetClusterReplicationSpecArrayInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecArrayOutput() GetClusterReplicationSpecArrayOutput
	ToGetClusterReplicationSpecArrayOutputWithContext(context.Context) GetClusterReplicationSpecArrayOutput
}

type GetClusterReplicationSpecArray []GetClusterReplicationSpecInput

func (GetClusterReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpec)(nil)).Elem()
}

func (i GetClusterReplicationSpecArray) ToGetClusterReplicationSpecArrayOutput() GetClusterReplicationSpecArrayOutput {
	return i.ToGetClusterReplicationSpecArrayOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecArray) ToGetClusterReplicationSpecArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecArrayOutput)
}

type GetClusterReplicationSpecOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpec)(nil)).Elem()
}

func (o GetClusterReplicationSpecOutput) ToGetClusterReplicationSpecOutput() GetClusterReplicationSpecOutput {
	return o
}

func (o GetClusterReplicationSpecOutput) ToGetClusterReplicationSpecOutputWithContext(ctx context.Context) GetClusterReplicationSpecOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClusterReplicationSpecOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) string { return v.Id }).(pulumi.StringOutput)
}

// Number of shards to deploy in the specified zone.
func (o GetClusterReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
func (o GetClusterReplicationSpecOutput) RegionsConfigs() GetClusterReplicationSpecRegionsConfigArrayOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) []GetClusterReplicationSpecRegionsConfig { return v.RegionsConfigs }).(GetClusterReplicationSpecRegionsConfigArrayOutput)
}

// Indicates the n ame for the zone in a Global Cluster.
func (o GetClusterReplicationSpecOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetClusterReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpec)(nil)).Elem()
}

func (o GetClusterReplicationSpecArrayOutput) ToGetClusterReplicationSpecArrayOutput() GetClusterReplicationSpecArrayOutput {
	return o
}

func (o GetClusterReplicationSpecArrayOutput) ToGetClusterReplicationSpecArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecArrayOutput {
	return o
}

func (o GetClusterReplicationSpecArrayOutput) Index(i pulumi.IntInput) GetClusterReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterReplicationSpec {
		return vs[0].([]GetClusterReplicationSpec)[vs[1].(int)]
	}).(GetClusterReplicationSpecOutput)
}

type GetClusterReplicationSpecRegionsConfig struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes int `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes int `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority int `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes int `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName string `pulumi:"regionName"`
}

// GetClusterReplicationSpecRegionsConfigInput is an input type that accepts GetClusterReplicationSpecRegionsConfigArgs and GetClusterReplicationSpecRegionsConfigOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecRegionsConfigInput` via:
//
//          GetClusterReplicationSpecRegionsConfigArgs{...}
type GetClusterReplicationSpecRegionsConfigInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecRegionsConfigOutput() GetClusterReplicationSpecRegionsConfigOutput
	ToGetClusterReplicationSpecRegionsConfigOutputWithContext(context.Context) GetClusterReplicationSpecRegionsConfigOutput
}

type GetClusterReplicationSpecRegionsConfigArgs struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes pulumi.IntInput `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes pulumi.IntInput `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes pulumi.IntInput `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetClusterReplicationSpecRegionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClusterReplicationSpecRegionsConfigArgs) ToGetClusterReplicationSpecRegionsConfigOutput() GetClusterReplicationSpecRegionsConfigOutput {
	return i.ToGetClusterReplicationSpecRegionsConfigOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecRegionsConfigArgs) ToGetClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecRegionsConfigOutput)
}

// GetClusterReplicationSpecRegionsConfigArrayInput is an input type that accepts GetClusterReplicationSpecRegionsConfigArray and GetClusterReplicationSpecRegionsConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecRegionsConfigArrayInput` via:
//
//          GetClusterReplicationSpecRegionsConfigArray{ GetClusterReplicationSpecRegionsConfigArgs{...} }
type GetClusterReplicationSpecRegionsConfigArrayInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecRegionsConfigArrayOutput() GetClusterReplicationSpecRegionsConfigArrayOutput
	ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Context) GetClusterReplicationSpecRegionsConfigArrayOutput
}

type GetClusterReplicationSpecRegionsConfigArray []GetClusterReplicationSpecRegionsConfigInput

func (GetClusterReplicationSpecRegionsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClusterReplicationSpecRegionsConfigArray) ToGetClusterReplicationSpecRegionsConfigArrayOutput() GetClusterReplicationSpecRegionsConfigArrayOutput {
	return i.ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecRegionsConfigArray) ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecRegionsConfigArrayOutput)
}

type GetClusterReplicationSpecRegionsConfigOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecRegionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClusterReplicationSpecRegionsConfigOutput) ToGetClusterReplicationSpecRegionsConfigOutput() GetClusterReplicationSpecRegionsConfigOutput {
	return o
}

func (o GetClusterReplicationSpecRegionsConfigOutput) ToGetClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigOutput {
	return o
}

// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
func (o GetClusterReplicationSpecRegionsConfigOutput) AnalyticsNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.AnalyticsNodes }).(pulumi.IntOutput)
}

// Number of electable nodes for Atlas to deploy to the region.
func (o GetClusterReplicationSpecRegionsConfigOutput) ElectableNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.ElectableNodes }).(pulumi.IntOutput)
}

// Election priority of the region. For regions with only read-only nodes, set this value to 0.
func (o GetClusterReplicationSpecRegionsConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
func (o GetClusterReplicationSpecRegionsConfigOutput) ReadOnlyNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.ReadOnlyNodes }).(pulumi.IntOutput)
}

// Name for the region specified.
func (o GetClusterReplicationSpecRegionsConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetClusterReplicationSpecRegionsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecRegionsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClusterReplicationSpecRegionsConfigArrayOutput) ToGetClusterReplicationSpecRegionsConfigArrayOutput() GetClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClusterReplicationSpecRegionsConfigArrayOutput) ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClusterReplicationSpecRegionsConfigArrayOutput) Index(i pulumi.IntInput) GetClusterReplicationSpecRegionsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterReplicationSpecRegionsConfig {
		return vs[0].([]GetClusterReplicationSpecRegionsConfig)[vs[1].(int)]
	}).(GetClusterReplicationSpecRegionsConfigOutput)
}

type GetClusterSnapshotBackupPolicy struct {
	ClusterId             string                                 `pulumi:"clusterId"`
	ClusterName           string                                 `pulumi:"clusterName"`
	NextSnapshot          string                                 `pulumi:"nextSnapshot"`
	Policies              []GetClusterSnapshotBackupPolicyPolicy `pulumi:"policies"`
	ReferenceHourOfDay    int                                    `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour int                                    `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     int                                    `pulumi:"restoreWindowDays"`
	UpdateSnapshots       bool                                   `pulumi:"updateSnapshots"`
}

// GetClusterSnapshotBackupPolicyInput is an input type that accepts GetClusterSnapshotBackupPolicyArgs and GetClusterSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyInput` via:
//
//          GetClusterSnapshotBackupPolicyArgs{...}
type GetClusterSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyOutput() GetClusterSnapshotBackupPolicyOutput
	ToGetClusterSnapshotBackupPolicyOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyOutput
}

type GetClusterSnapshotBackupPolicyArgs struct {
	ClusterId             pulumi.StringInput                             `pulumi:"clusterId"`
	ClusterName           pulumi.StringInput                             `pulumi:"clusterName"`
	NextSnapshot          pulumi.StringInput                             `pulumi:"nextSnapshot"`
	Policies              GetClusterSnapshotBackupPolicyPolicyArrayInput `pulumi:"policies"`
	ReferenceHourOfDay    pulumi.IntInput                                `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour pulumi.IntInput                                `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     pulumi.IntInput                                `pulumi:"restoreWindowDays"`
	UpdateSnapshots       pulumi.BoolInput                               `pulumi:"updateSnapshots"`
}

func (GetClusterSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyArgs) ToGetClusterSnapshotBackupPolicyOutput() GetClusterSnapshotBackupPolicyOutput {
	return i.ToGetClusterSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyArgs) ToGetClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyOutput)
}

// GetClusterSnapshotBackupPolicyArrayInput is an input type that accepts GetClusterSnapshotBackupPolicyArray and GetClusterSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyArrayInput` via:
//
//          GetClusterSnapshotBackupPolicyArray{ GetClusterSnapshotBackupPolicyArgs{...} }
type GetClusterSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyArrayOutput() GetClusterSnapshotBackupPolicyArrayOutput
	ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyArrayOutput
}

type GetClusterSnapshotBackupPolicyArray []GetClusterSnapshotBackupPolicyInput

func (GetClusterSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyArray) ToGetClusterSnapshotBackupPolicyArrayOutput() GetClusterSnapshotBackupPolicyArrayOutput {
	return i.ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyArray) ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyArrayOutput)
}

type GetClusterSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyOutput) ToGetClusterSnapshotBackupPolicyOutput() GetClusterSnapshotBackupPolicyOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyOutput) ToGetClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) NextSnapshot() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) string { return v.NextSnapshot }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) Policies() GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) []GetClusterSnapshotBackupPolicyPolicy { return v.Policies }).(GetClusterSnapshotBackupPolicyPolicyArrayOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) ReferenceHourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) int { return v.ReferenceHourOfDay }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) ReferenceMinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) int { return v.ReferenceMinuteOfHour }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) RestoreWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) int { return v.RestoreWindowDays }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) UpdateSnapshots() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) bool { return v.UpdateSnapshots }).(pulumi.BoolOutput)
}

type GetClusterSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyArrayOutput() GetClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterSnapshotBackupPolicy {
		return vs[0].([]GetClusterSnapshotBackupPolicy)[vs[1].(int)]
	}).(GetClusterSnapshotBackupPolicyOutput)
}

type GetClusterSnapshotBackupPolicyPolicy struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          string                                           `pulumi:"id"`
	PolicyItems []GetClusterSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// GetClusterSnapshotBackupPolicyPolicyInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyArgs and GetClusterSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyInput` via:
//
//          GetClusterSnapshotBackupPolicyPolicyArgs{...}
type GetClusterSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyOutput() GetClusterSnapshotBackupPolicyPolicyOutput
	ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyOutput
}

type GetClusterSnapshotBackupPolicyPolicyArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          pulumi.StringInput                                       `pulumi:"id"`
	PolicyItems GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (GetClusterSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyArgs) ToGetClusterSnapshotBackupPolicyPolicyOutput() GetClusterSnapshotBackupPolicyPolicyOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyArgs) ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyOutput)
}

// GetClusterSnapshotBackupPolicyPolicyArrayInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyArray and GetClusterSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyArrayInput` via:
//
//          GetClusterSnapshotBackupPolicyPolicyArray{ GetClusterSnapshotBackupPolicyPolicyArgs{...} }
type GetClusterSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyArrayOutput() GetClusterSnapshotBackupPolicyPolicyArrayOutput
	ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyArrayOutput
}

type GetClusterSnapshotBackupPolicyPolicyArray []GetClusterSnapshotBackupPolicyPolicyInput

func (GetClusterSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyArray) ToGetClusterSnapshotBackupPolicyPolicyArrayOutput() GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyArray) ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyArrayOutput)
}

type GetClusterSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyOutput) ToGetClusterSnapshotBackupPolicyPolicyOutput() GetClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyOutput) ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClusterSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyOutput) PolicyItems() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicy) []GetClusterSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetClusterSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyArrayOutput() GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterSnapshotBackupPolicyPolicy {
		return vs[0].([]GetClusterSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(GetClusterSnapshotBackupPolicyPolicyOutput)
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             string `pulumi:"id"`
	RetentionUnit  string `pulumi:"retentionUnit"`
	RetentionValue int    `pulumi:"retentionValue"`
}

// GetClusterSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs and GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//          GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type GetClusterSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput
	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             pulumi.StringInput `pulumi:"id"`
	RetentionUnit  pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue pulumi.IntInput    `pulumi:"retentionValue"`
}

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyPolicyItemArray and GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//          GetClusterSnapshotBackupPolicyPolicyPolicyItemArray{ GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemArray []GetClusterSnapshotBackupPolicyPolicyPolicyItemInput

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]GetClusterSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type GetClustersResultType struct {
	// (Optional) Specifies whether cluster tier auto-scaling is enabled. The default is false.
	AutoScalingComputeEnabled bool `pulumi:"autoScalingComputeEnabled"`
	// (Optional) Set to `true` to enable the cluster tier to scale down.
	AutoScalingComputeScaleDownEnabled bool `pulumi:"autoScalingComputeScaleDownEnabled"`
	// Indicates whether disk auto-scaling is enabled.
	AutoScalingDiskGbEnabled bool `pulumi:"autoScalingDiskGbEnabled"`
	// Indicates Cloud service provider on which the server for a multi-tenant cluster is provisioned.
	BackingProviderName string `pulumi:"backingProviderName"`
	// Legacy Option, Indicates whether Atlas continuous backups are enabled for the cluster.
	BackupEnabled bool `pulumi:"backupEnabled"`
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
	BiConnector GetClustersResultBiConnector `pulumi:"biConnector"`
	// Indicates the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
	ClusterType string `pulumi:"clusterType"`
	// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
	// - `connection_strings.standard` -   Public mongodb:// connection string for this cluster.
	// - `connection_strings.standard_srv` - Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.standard.
	// - `connection_strings.aws_private_link` -  [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster.
	// - `connection_strings.aws_private_link_srv` - [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.awsPrivateLink.
	// - `connection_strings.private` -   [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	// - `connection_strings.private_srv` -  [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	ConnectionStrings GetClustersResultConnectionStrings `pulumi:"connectionStrings"`
	// The Network Peering Container ID.
	ContainerId string `pulumi:"containerId"`
	// Indicates the size in gigabytes of the server’s root volume (AWS/GCP Only).
	DiskSizeGb float64 `pulumi:"diskSizeGb"`
	// Indicates whether Encryption at Rest is enabled or disabled.
	EncryptionAtRestProvider string                   `pulumi:"encryptionAtRestProvider"`
	Labels                   []GetClustersResultLabel `pulumi:"labels"`
	// Indicates the version of the cluster to deploy.
	MongoDbMajorVersion string `pulumi:"mongoDbMajorVersion"`
	// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
	MongoDbVersion string `pulumi:"mongoDbVersion"`
	// Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
	MongoUri string `pulumi:"mongoUri"`
	// Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
	MongoUriUpdated string `pulumi:"mongoUriUpdated"`
	// Describes connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
	MongoUriWithOptions string `pulumi:"mongoUriWithOptions"`
	// The name of the current plugin
	Name string `pulumi:"name"`
	// Number of shards to deploy in the specified zone.
	NumShards int `pulumi:"numShards"`
	// Flag that indicates whether the cluster is paused or not.
	Paused bool `pulumi:"paused"`
	// Flag that indicates if the cluster uses Continuous Cloud Backup.
	PitEnabled bool `pulumi:"pitEnabled"`
	// (Optional) Maximum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMaxInstanceSize string `pulumi:"providerAutoScalingComputeMaxInstanceSize"`
	// (Optional) Minimum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMinInstanceSize string `pulumi:"providerAutoScalingComputeMinInstanceSize"`
	// Flag indicating if the cluster uses Cloud Backup Snapshots for backups.
	ProviderBackupEnabled bool `pulumi:"providerBackupEnabled"`
	// Indicates the maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected providerSettings.instanceSizeName and diskSizeGB.
	ProviderDiskIops int `pulumi:"providerDiskIops"`
	// Describes Azure disk type of the server’s root volume (Azure Only).
	ProviderDiskTypeName string `pulumi:"providerDiskTypeName"`
	// Indicates whether the Amazon EBS encryption is enabled. This feature encrypts the server’s root volume for both data at rest within the volume and data moving between the volume and the instance.
	ProviderEncryptEbsVolume bool `pulumi:"providerEncryptEbsVolume"`
	// Atlas provides different instance sizes, each with a default storage capacity and RAM size.
	ProviderInstanceSizeName string `pulumi:"providerInstanceSizeName"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	// Indicates Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. Requires the Atlas Region name, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	ProviderRegionName string `pulumi:"providerRegionName"`
	// Indicates the type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.
	ProviderVolumeType string `pulumi:"providerVolumeType"`
	// Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
	ReplicationFactor int `pulumi:"replicationFactor"`
	// Configuration for cluster regions.  See Replication Spec below for more details.
	ReplicationSpecs []GetClustersResultReplicationSpec `pulumi:"replicationSpecs"`
	// current snapshot schedule and retention settings for the cluster.
	SnapshotBackupPolicies []GetClustersResultSnapshotBackupPolicy `pulumi:"snapshotBackupPolicies"`
	// Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
	SrvAddress string `pulumi:"srvAddress"`
	// Indicates the current state of the cluster. The possible states are:
	// - IDLE
	// - CREATING
	// - UPDATING
	// - DELETING
	// - DELETED
	// - REPAIRING
	StateName string `pulumi:"stateName"`
}

// GetClustersResultTypeInput is an input type that accepts GetClustersResultTypeArgs and GetClustersResultTypeOutput values.
// You can construct a concrete instance of `GetClustersResultTypeInput` via:
//
//          GetClustersResultTypeArgs{...}
type GetClustersResultTypeInput interface {
	pulumi.Input

	ToGetClustersResultTypeOutput() GetClustersResultTypeOutput
	ToGetClustersResultTypeOutputWithContext(context.Context) GetClustersResultTypeOutput
}

type GetClustersResultTypeArgs struct {
	// (Optional) Specifies whether cluster tier auto-scaling is enabled. The default is false.
	AutoScalingComputeEnabled pulumi.BoolInput `pulumi:"autoScalingComputeEnabled"`
	// (Optional) Set to `true` to enable the cluster tier to scale down.
	AutoScalingComputeScaleDownEnabled pulumi.BoolInput `pulumi:"autoScalingComputeScaleDownEnabled"`
	// Indicates whether disk auto-scaling is enabled.
	AutoScalingDiskGbEnabled pulumi.BoolInput `pulumi:"autoScalingDiskGbEnabled"`
	// Indicates Cloud service provider on which the server for a multi-tenant cluster is provisioned.
	BackingProviderName pulumi.StringInput `pulumi:"backingProviderName"`
	// Legacy Option, Indicates whether Atlas continuous backups are enabled for the cluster.
	BackupEnabled pulumi.BoolInput `pulumi:"backupEnabled"`
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
	BiConnector GetClustersResultBiConnectorInput `pulumi:"biConnector"`
	// Indicates the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
	// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
	// - `connection_strings.standard` -   Public mongodb:// connection string for this cluster.
	// - `connection_strings.standard_srv` - Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.standard.
	// - `connection_strings.aws_private_link` -  [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster.
	// - `connection_strings.aws_private_link_srv` - [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.awsPrivateLink.
	// - `connection_strings.private` -   [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	// - `connection_strings.private_srv` -  [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	ConnectionStrings GetClustersResultConnectionStringsInput `pulumi:"connectionStrings"`
	// The Network Peering Container ID.
	ContainerId pulumi.StringInput `pulumi:"containerId"`
	// Indicates the size in gigabytes of the server’s root volume (AWS/GCP Only).
	DiskSizeGb pulumi.Float64Input `pulumi:"diskSizeGb"`
	// Indicates whether Encryption at Rest is enabled or disabled.
	EncryptionAtRestProvider pulumi.StringInput               `pulumi:"encryptionAtRestProvider"`
	Labels                   GetClustersResultLabelArrayInput `pulumi:"labels"`
	// Indicates the version of the cluster to deploy.
	MongoDbMajorVersion pulumi.StringInput `pulumi:"mongoDbMajorVersion"`
	// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
	MongoDbVersion pulumi.StringInput `pulumi:"mongoDbVersion"`
	// Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
	MongoUri pulumi.StringInput `pulumi:"mongoUri"`
	// Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
	MongoUriUpdated pulumi.StringInput `pulumi:"mongoUriUpdated"`
	// Describes connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
	MongoUriWithOptions pulumi.StringInput `pulumi:"mongoUriWithOptions"`
	// The name of the current plugin
	Name pulumi.StringInput `pulumi:"name"`
	// Number of shards to deploy in the specified zone.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Flag that indicates whether the cluster is paused or not.
	Paused pulumi.BoolInput `pulumi:"paused"`
	// Flag that indicates if the cluster uses Continuous Cloud Backup.
	PitEnabled pulumi.BoolInput `pulumi:"pitEnabled"`
	// (Optional) Maximum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMaxInstanceSize pulumi.StringInput `pulumi:"providerAutoScalingComputeMaxInstanceSize"`
	// (Optional) Minimum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMinInstanceSize pulumi.StringInput `pulumi:"providerAutoScalingComputeMinInstanceSize"`
	// Flag indicating if the cluster uses Cloud Backup Snapshots for backups.
	ProviderBackupEnabled pulumi.BoolInput `pulumi:"providerBackupEnabled"`
	// Indicates the maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected providerSettings.instanceSizeName and diskSizeGB.
	ProviderDiskIops pulumi.IntInput `pulumi:"providerDiskIops"`
	// Describes Azure disk type of the server’s root volume (Azure Only).
	ProviderDiskTypeName pulumi.StringInput `pulumi:"providerDiskTypeName"`
	// Indicates whether the Amazon EBS encryption is enabled. This feature encrypts the server’s root volume for both data at rest within the volume and data moving between the volume and the instance.
	ProviderEncryptEbsVolume pulumi.BoolInput `pulumi:"providerEncryptEbsVolume"`
	// Atlas provides different instance sizes, each with a default storage capacity and RAM size.
	ProviderInstanceSizeName pulumi.StringInput `pulumi:"providerInstanceSizeName"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Indicates Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. Requires the Atlas Region name, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	ProviderRegionName pulumi.StringInput `pulumi:"providerRegionName"`
	// Indicates the type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.
	ProviderVolumeType pulumi.StringInput `pulumi:"providerVolumeType"`
	// Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
	ReplicationFactor pulumi.IntInput `pulumi:"replicationFactor"`
	// Configuration for cluster regions.  See Replication Spec below for more details.
	ReplicationSpecs GetClustersResultReplicationSpecArrayInput `pulumi:"replicationSpecs"`
	// current snapshot schedule and retention settings for the cluster.
	SnapshotBackupPolicies GetClustersResultSnapshotBackupPolicyArrayInput `pulumi:"snapshotBackupPolicies"`
	// Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
	SrvAddress pulumi.StringInput `pulumi:"srvAddress"`
	// Indicates the current state of the cluster. The possible states are:
	// - IDLE
	// - CREATING
	// - UPDATING
	// - DELETING
	// - DELETED
	// - REPAIRING
	StateName pulumi.StringInput `pulumi:"stateName"`
}

func (GetClustersResultTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultType)(nil)).Elem()
}

func (i GetClustersResultTypeArgs) ToGetClustersResultTypeOutput() GetClustersResultTypeOutput {
	return i.ToGetClustersResultTypeOutputWithContext(context.Background())
}

func (i GetClustersResultTypeArgs) ToGetClustersResultTypeOutputWithContext(ctx context.Context) GetClustersResultTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultTypeOutput)
}

// GetClustersResultTypeArrayInput is an input type that accepts GetClustersResultTypeArray and GetClustersResultTypeArrayOutput values.
// You can construct a concrete instance of `GetClustersResultTypeArrayInput` via:
//
//          GetClustersResultTypeArray{ GetClustersResultTypeArgs{...} }
type GetClustersResultTypeArrayInput interface {
	pulumi.Input

	ToGetClustersResultTypeArrayOutput() GetClustersResultTypeArrayOutput
	ToGetClustersResultTypeArrayOutputWithContext(context.Context) GetClustersResultTypeArrayOutput
}

type GetClustersResultTypeArray []GetClustersResultTypeInput

func (GetClustersResultTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultType)(nil)).Elem()
}

func (i GetClustersResultTypeArray) ToGetClustersResultTypeArrayOutput() GetClustersResultTypeArrayOutput {
	return i.ToGetClustersResultTypeArrayOutputWithContext(context.Background())
}

func (i GetClustersResultTypeArray) ToGetClustersResultTypeArrayOutputWithContext(ctx context.Context) GetClustersResultTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultTypeArrayOutput)
}

type GetClustersResultTypeOutput struct{ *pulumi.OutputState }

func (GetClustersResultTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultType)(nil)).Elem()
}

func (o GetClustersResultTypeOutput) ToGetClustersResultTypeOutput() GetClustersResultTypeOutput {
	return o
}

func (o GetClustersResultTypeOutput) ToGetClustersResultTypeOutputWithContext(ctx context.Context) GetClustersResultTypeOutput {
	return o
}

// (Optional) Specifies whether cluster tier auto-scaling is enabled. The default is false.
func (o GetClustersResultTypeOutput) AutoScalingComputeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultType) bool { return v.AutoScalingComputeEnabled }).(pulumi.BoolOutput)
}

// (Optional) Set to `true` to enable the cluster tier to scale down.
func (o GetClustersResultTypeOutput) AutoScalingComputeScaleDownEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultType) bool { return v.AutoScalingComputeScaleDownEnabled }).(pulumi.BoolOutput)
}

// Indicates whether disk auto-scaling is enabled.
func (o GetClustersResultTypeOutput) AutoScalingDiskGbEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultType) bool { return v.AutoScalingDiskGbEnabled }).(pulumi.BoolOutput)
}

// Indicates Cloud service provider on which the server for a multi-tenant cluster is provisioned.
func (o GetClustersResultTypeOutput) BackingProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.BackingProviderName }).(pulumi.StringOutput)
}

// Legacy Option, Indicates whether Atlas continuous backups are enabled for the cluster.
func (o GetClustersResultTypeOutput) BackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultType) bool { return v.BackupEnabled }).(pulumi.BoolOutput)
}

// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
func (o GetClustersResultTypeOutput) BiConnector() GetClustersResultBiConnectorOutput {
	return o.ApplyT(func(v GetClustersResultType) GetClustersResultBiConnector { return v.BiConnector }).(GetClustersResultBiConnectorOutput)
}

// Indicates the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
func (o GetClustersResultTypeOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
// - `connection_strings.standard` -   Public mongodb:// connection string for this cluster.
// - `connection_strings.standard_srv` - Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.standard.
// - `connection_strings.aws_private_link` -  [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster.
// - `connection_strings.aws_private_link_srv` - [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.awsPrivateLink.
// - `connection_strings.private` -   [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
// - `connection_strings.private_srv` -  [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
func (o GetClustersResultTypeOutput) ConnectionStrings() GetClustersResultConnectionStringsOutput {
	return o.ApplyT(func(v GetClustersResultType) GetClustersResultConnectionStrings { return v.ConnectionStrings }).(GetClustersResultConnectionStringsOutput)
}

// The Network Peering Container ID.
func (o GetClustersResultTypeOutput) ContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.ContainerId }).(pulumi.StringOutput)
}

// Indicates the size in gigabytes of the server’s root volume (AWS/GCP Only).
func (o GetClustersResultTypeOutput) DiskSizeGb() pulumi.Float64Output {
	return o.ApplyT(func(v GetClustersResultType) float64 { return v.DiskSizeGb }).(pulumi.Float64Output)
}

// Indicates whether Encryption at Rest is enabled or disabled.
func (o GetClustersResultTypeOutput) EncryptionAtRestProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.EncryptionAtRestProvider }).(pulumi.StringOutput)
}

func (o GetClustersResultTypeOutput) Labels() GetClustersResultLabelArrayOutput {
	return o.ApplyT(func(v GetClustersResultType) []GetClustersResultLabel { return v.Labels }).(GetClustersResultLabelArrayOutput)
}

// Indicates the version of the cluster to deploy.
func (o GetClustersResultTypeOutput) MongoDbMajorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.MongoDbMajorVersion }).(pulumi.StringOutput)
}

// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
func (o GetClustersResultTypeOutput) MongoDbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.MongoDbVersion }).(pulumi.StringOutput)
}

// Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
func (o GetClustersResultTypeOutput) MongoUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.MongoUri }).(pulumi.StringOutput)
}

// Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
func (o GetClustersResultTypeOutput) MongoUriUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.MongoUriUpdated }).(pulumi.StringOutput)
}

// Describes connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
func (o GetClustersResultTypeOutput) MongoUriWithOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.MongoUriWithOptions }).(pulumi.StringOutput)
}

// The name of the current plugin
func (o GetClustersResultTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.Name }).(pulumi.StringOutput)
}

// Number of shards to deploy in the specified zone.
func (o GetClustersResultTypeOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultType) int { return v.NumShards }).(pulumi.IntOutput)
}

// Flag that indicates whether the cluster is paused or not.
func (o GetClustersResultTypeOutput) Paused() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultType) bool { return v.Paused }).(pulumi.BoolOutput)
}

// Flag that indicates if the cluster uses Continuous Cloud Backup.
func (o GetClustersResultTypeOutput) PitEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultType) bool { return v.PitEnabled }).(pulumi.BoolOutput)
}

// (Optional) Maximum instance size to which your cluster can automatically scale.
func (o GetClustersResultTypeOutput) ProviderAutoScalingComputeMaxInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.ProviderAutoScalingComputeMaxInstanceSize }).(pulumi.StringOutput)
}

// (Optional) Minimum instance size to which your cluster can automatically scale.
func (o GetClustersResultTypeOutput) ProviderAutoScalingComputeMinInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.ProviderAutoScalingComputeMinInstanceSize }).(pulumi.StringOutput)
}

// Flag indicating if the cluster uses Cloud Backup Snapshots for backups.
func (o GetClustersResultTypeOutput) ProviderBackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultType) bool { return v.ProviderBackupEnabled }).(pulumi.BoolOutput)
}

// Indicates the maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected providerSettings.instanceSizeName and diskSizeGB.
func (o GetClustersResultTypeOutput) ProviderDiskIops() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultType) int { return v.ProviderDiskIops }).(pulumi.IntOutput)
}

// Describes Azure disk type of the server’s root volume (Azure Only).
func (o GetClustersResultTypeOutput) ProviderDiskTypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.ProviderDiskTypeName }).(pulumi.StringOutput)
}

// Indicates whether the Amazon EBS encryption is enabled. This feature encrypts the server’s root volume for both data at rest within the volume and data moving between the volume and the instance.
func (o GetClustersResultTypeOutput) ProviderEncryptEbsVolume() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultType) bool { return v.ProviderEncryptEbsVolume }).(pulumi.BoolOutput)
}

// Atlas provides different instance sizes, each with a default storage capacity and RAM size.
func (o GetClustersResultTypeOutput) ProviderInstanceSizeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.ProviderInstanceSizeName }).(pulumi.StringOutput)
}

// Indicates the cloud service provider on which the servers are provisioned.
func (o GetClustersResultTypeOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Indicates Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. Requires the Atlas Region name, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
func (o GetClustersResultTypeOutput) ProviderRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.ProviderRegionName }).(pulumi.StringOutput)
}

// Indicates the type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.
func (o GetClustersResultTypeOutput) ProviderVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.ProviderVolumeType }).(pulumi.StringOutput)
}

// Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
func (o GetClustersResultTypeOutput) ReplicationFactor() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultType) int { return v.ReplicationFactor }).(pulumi.IntOutput)
}

// Configuration for cluster regions.  See Replication Spec below for more details.
func (o GetClustersResultTypeOutput) ReplicationSpecs() GetClustersResultReplicationSpecArrayOutput {
	return o.ApplyT(func(v GetClustersResultType) []GetClustersResultReplicationSpec { return v.ReplicationSpecs }).(GetClustersResultReplicationSpecArrayOutput)
}

// current snapshot schedule and retention settings for the cluster.
func (o GetClustersResultTypeOutput) SnapshotBackupPolicies() GetClustersResultSnapshotBackupPolicyArrayOutput {
	return o.ApplyT(func(v GetClustersResultType) []GetClustersResultSnapshotBackupPolicy { return v.SnapshotBackupPolicies }).(GetClustersResultSnapshotBackupPolicyArrayOutput)
}

// Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
func (o GetClustersResultTypeOutput) SrvAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.SrvAddress }).(pulumi.StringOutput)
}

// Indicates the current state of the cluster. The possible states are:
// - IDLE
// - CREATING
// - UPDATING
// - DELETING
// - DELETED
// - REPAIRING
func (o GetClustersResultTypeOutput) StateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultType) string { return v.StateName }).(pulumi.StringOutput)
}

type GetClustersResultTypeArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultType)(nil)).Elem()
}

func (o GetClustersResultTypeArrayOutput) ToGetClustersResultTypeArrayOutput() GetClustersResultTypeArrayOutput {
	return o
}

func (o GetClustersResultTypeArrayOutput) ToGetClustersResultTypeArrayOutputWithContext(ctx context.Context) GetClustersResultTypeArrayOutput {
	return o
}

func (o GetClustersResultTypeArrayOutput) Index(i pulumi.IntInput) GetClustersResultTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultType {
		return vs[0].([]GetClustersResultType)[vs[1].(int)]
	}).(GetClustersResultTypeOutput)
}

type GetClustersResultBiConnector struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled string `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference string `pulumi:"readPreference"`
}

// GetClustersResultBiConnectorInput is an input type that accepts GetClustersResultBiConnectorArgs and GetClustersResultBiConnectorOutput values.
// You can construct a concrete instance of `GetClustersResultBiConnectorInput` via:
//
//          GetClustersResultBiConnectorArgs{...}
type GetClustersResultBiConnectorInput interface {
	pulumi.Input

	ToGetClustersResultBiConnectorOutput() GetClustersResultBiConnectorOutput
	ToGetClustersResultBiConnectorOutputWithContext(context.Context) GetClustersResultBiConnectorOutput
}

type GetClustersResultBiConnectorArgs struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled pulumi.StringInput `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringInput `pulumi:"readPreference"`
}

func (GetClustersResultBiConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultBiConnector)(nil)).Elem()
}

func (i GetClustersResultBiConnectorArgs) ToGetClustersResultBiConnectorOutput() GetClustersResultBiConnectorOutput {
	return i.ToGetClustersResultBiConnectorOutputWithContext(context.Background())
}

func (i GetClustersResultBiConnectorArgs) ToGetClustersResultBiConnectorOutputWithContext(ctx context.Context) GetClustersResultBiConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultBiConnectorOutput)
}

type GetClustersResultBiConnectorOutput struct{ *pulumi.OutputState }

func (GetClustersResultBiConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultBiConnector)(nil)).Elem()
}

func (o GetClustersResultBiConnectorOutput) ToGetClustersResultBiConnectorOutput() GetClustersResultBiConnectorOutput {
	return o
}

func (o GetClustersResultBiConnectorOutput) ToGetClustersResultBiConnectorOutputWithContext(ctx context.Context) GetClustersResultBiConnectorOutput {
	return o
}

// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
func (o GetClustersResultBiConnectorOutput) Enabled() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultBiConnector) string { return v.Enabled }).(pulumi.StringOutput)
}

// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o GetClustersResultBiConnectorOutput) ReadPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultBiConnector) string { return v.ReadPreference }).(pulumi.StringOutput)
}

type GetClustersResultConnectionStrings struct {
	AwsPrivateLink    map[string]interface{} `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv map[string]interface{} `pulumi:"awsPrivateLinkSrv"`
	Private           string                 `pulumi:"private"`
	PrivateSrv        string                 `pulumi:"privateSrv"`
	Standard          string                 `pulumi:"standard"`
	StandardSrv       string                 `pulumi:"standardSrv"`
}

// GetClustersResultConnectionStringsInput is an input type that accepts GetClustersResultConnectionStringsArgs and GetClustersResultConnectionStringsOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringsInput` via:
//
//          GetClustersResultConnectionStringsArgs{...}
type GetClustersResultConnectionStringsInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringsOutput() GetClustersResultConnectionStringsOutput
	ToGetClustersResultConnectionStringsOutputWithContext(context.Context) GetClustersResultConnectionStringsOutput
}

type GetClustersResultConnectionStringsArgs struct {
	AwsPrivateLink    pulumi.MapInput    `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv pulumi.MapInput    `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringInput `pulumi:"private"`
	PrivateSrv        pulumi.StringInput `pulumi:"privateSrv"`
	Standard          pulumi.StringInput `pulumi:"standard"`
	StandardSrv       pulumi.StringInput `pulumi:"standardSrv"`
}

func (GetClustersResultConnectionStringsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionStrings)(nil)).Elem()
}

func (i GetClustersResultConnectionStringsArgs) ToGetClustersResultConnectionStringsOutput() GetClustersResultConnectionStringsOutput {
	return i.ToGetClustersResultConnectionStringsOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringsArgs) ToGetClustersResultConnectionStringsOutputWithContext(ctx context.Context) GetClustersResultConnectionStringsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringsOutput)
}

type GetClustersResultConnectionStringsOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionStrings)(nil)).Elem()
}

func (o GetClustersResultConnectionStringsOutput) ToGetClustersResultConnectionStringsOutput() GetClustersResultConnectionStringsOutput {
	return o
}

func (o GetClustersResultConnectionStringsOutput) ToGetClustersResultConnectionStringsOutputWithContext(ctx context.Context) GetClustersResultConnectionStringsOutput {
	return o
}

func (o GetClustersResultConnectionStringsOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStrings) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

func (o GetClustersResultConnectionStringsOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStrings) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o GetClustersResultConnectionStringsOutput) Private() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStrings) string { return v.Private }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringsOutput) PrivateSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStrings) string { return v.PrivateSrv }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringsOutput) Standard() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStrings) string { return v.Standard }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringsOutput) StandardSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStrings) string { return v.StandardSrv }).(pulumi.StringOutput)
}

type GetClustersResultLabel struct {
	// The key that was set.
	Key string `pulumi:"key"`
	// The value that represents the key.
	Value string `pulumi:"value"`
}

// GetClustersResultLabelInput is an input type that accepts GetClustersResultLabelArgs and GetClustersResultLabelOutput values.
// You can construct a concrete instance of `GetClustersResultLabelInput` via:
//
//          GetClustersResultLabelArgs{...}
type GetClustersResultLabelInput interface {
	pulumi.Input

	ToGetClustersResultLabelOutput() GetClustersResultLabelOutput
	ToGetClustersResultLabelOutputWithContext(context.Context) GetClustersResultLabelOutput
}

type GetClustersResultLabelArgs struct {
	// The key that was set.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that represents the key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClustersResultLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultLabel)(nil)).Elem()
}

func (i GetClustersResultLabelArgs) ToGetClustersResultLabelOutput() GetClustersResultLabelOutput {
	return i.ToGetClustersResultLabelOutputWithContext(context.Background())
}

func (i GetClustersResultLabelArgs) ToGetClustersResultLabelOutputWithContext(ctx context.Context) GetClustersResultLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultLabelOutput)
}

// GetClustersResultLabelArrayInput is an input type that accepts GetClustersResultLabelArray and GetClustersResultLabelArrayOutput values.
// You can construct a concrete instance of `GetClustersResultLabelArrayInput` via:
//
//          GetClustersResultLabelArray{ GetClustersResultLabelArgs{...} }
type GetClustersResultLabelArrayInput interface {
	pulumi.Input

	ToGetClustersResultLabelArrayOutput() GetClustersResultLabelArrayOutput
	ToGetClustersResultLabelArrayOutputWithContext(context.Context) GetClustersResultLabelArrayOutput
}

type GetClustersResultLabelArray []GetClustersResultLabelInput

func (GetClustersResultLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultLabel)(nil)).Elem()
}

func (i GetClustersResultLabelArray) ToGetClustersResultLabelArrayOutput() GetClustersResultLabelArrayOutput {
	return i.ToGetClustersResultLabelArrayOutputWithContext(context.Background())
}

func (i GetClustersResultLabelArray) ToGetClustersResultLabelArrayOutputWithContext(ctx context.Context) GetClustersResultLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultLabelArrayOutput)
}

type GetClustersResultLabelOutput struct{ *pulumi.OutputState }

func (GetClustersResultLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultLabel)(nil)).Elem()
}

func (o GetClustersResultLabelOutput) ToGetClustersResultLabelOutput() GetClustersResultLabelOutput {
	return o
}

func (o GetClustersResultLabelOutput) ToGetClustersResultLabelOutputWithContext(ctx context.Context) GetClustersResultLabelOutput {
	return o
}

// The key that was set.
func (o GetClustersResultLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that represents the key.
func (o GetClustersResultLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetClustersResultLabelArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultLabel)(nil)).Elem()
}

func (o GetClustersResultLabelArrayOutput) ToGetClustersResultLabelArrayOutput() GetClustersResultLabelArrayOutput {
	return o
}

func (o GetClustersResultLabelArrayOutput) ToGetClustersResultLabelArrayOutputWithContext(ctx context.Context) GetClustersResultLabelArrayOutput {
	return o
}

func (o GetClustersResultLabelArrayOutput) Index(i pulumi.IntInput) GetClustersResultLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultLabel {
		return vs[0].([]GetClustersResultLabel)[vs[1].(int)]
	}).(GetClustersResultLabelOutput)
}

type GetClustersResultReplicationSpec struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id string `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards int `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs []GetClustersResultReplicationSpecRegionsConfig `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName string `pulumi:"zoneName"`
}

// GetClustersResultReplicationSpecInput is an input type that accepts GetClustersResultReplicationSpecArgs and GetClustersResultReplicationSpecOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecInput` via:
//
//          GetClustersResultReplicationSpecArgs{...}
type GetClustersResultReplicationSpecInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecOutput() GetClustersResultReplicationSpecOutput
	ToGetClustersResultReplicationSpecOutputWithContext(context.Context) GetClustersResultReplicationSpecOutput
}

type GetClustersResultReplicationSpecArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs GetClustersResultReplicationSpecRegionsConfigArrayInput `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetClustersResultReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpec)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecArgs) ToGetClustersResultReplicationSpecOutput() GetClustersResultReplicationSpecOutput {
	return i.ToGetClustersResultReplicationSpecOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecArgs) ToGetClustersResultReplicationSpecOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecOutput)
}

// GetClustersResultReplicationSpecArrayInput is an input type that accepts GetClustersResultReplicationSpecArray and GetClustersResultReplicationSpecArrayOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecArrayInput` via:
//
//          GetClustersResultReplicationSpecArray{ GetClustersResultReplicationSpecArgs{...} }
type GetClustersResultReplicationSpecArrayInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecArrayOutput() GetClustersResultReplicationSpecArrayOutput
	ToGetClustersResultReplicationSpecArrayOutputWithContext(context.Context) GetClustersResultReplicationSpecArrayOutput
}

type GetClustersResultReplicationSpecArray []GetClustersResultReplicationSpecInput

func (GetClustersResultReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpec)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecArray) ToGetClustersResultReplicationSpecArrayOutput() GetClustersResultReplicationSpecArrayOutput {
	return i.ToGetClustersResultReplicationSpecArrayOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecArray) ToGetClustersResultReplicationSpecArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecArrayOutput)
}

type GetClustersResultReplicationSpecOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpec)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecOutput) ToGetClustersResultReplicationSpecOutput() GetClustersResultReplicationSpecOutput {
	return o
}

func (o GetClustersResultReplicationSpecOutput) ToGetClustersResultReplicationSpecOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClustersResultReplicationSpecOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) string { return v.Id }).(pulumi.StringOutput)
}

// Number of shards to deploy in the specified zone.
func (o GetClustersResultReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
func (o GetClustersResultReplicationSpecOutput) RegionsConfigs() GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) []GetClustersResultReplicationSpecRegionsConfig {
		return v.RegionsConfigs
	}).(GetClustersResultReplicationSpecRegionsConfigArrayOutput)
}

// Indicates the n ame for the zone in a Global Cluster.
func (o GetClustersResultReplicationSpecOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetClustersResultReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpec)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecArrayOutput) ToGetClustersResultReplicationSpecArrayOutput() GetClustersResultReplicationSpecArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecArrayOutput) ToGetClustersResultReplicationSpecArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecArrayOutput) Index(i pulumi.IntInput) GetClustersResultReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultReplicationSpec {
		return vs[0].([]GetClustersResultReplicationSpec)[vs[1].(int)]
	}).(GetClustersResultReplicationSpecOutput)
}

type GetClustersResultReplicationSpecRegionsConfig struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes int `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes int `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority int `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes int `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName string `pulumi:"regionName"`
}

// GetClustersResultReplicationSpecRegionsConfigInput is an input type that accepts GetClustersResultReplicationSpecRegionsConfigArgs and GetClustersResultReplicationSpecRegionsConfigOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecRegionsConfigInput` via:
//
//          GetClustersResultReplicationSpecRegionsConfigArgs{...}
type GetClustersResultReplicationSpecRegionsConfigInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecRegionsConfigOutput() GetClustersResultReplicationSpecRegionsConfigOutput
	ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(context.Context) GetClustersResultReplicationSpecRegionsConfigOutput
}

type GetClustersResultReplicationSpecRegionsConfigArgs struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes pulumi.IntInput `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes pulumi.IntInput `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes pulumi.IntInput `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetClustersResultReplicationSpecRegionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecRegionsConfigArgs) ToGetClustersResultReplicationSpecRegionsConfigOutput() GetClustersResultReplicationSpecRegionsConfigOutput {
	return i.ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecRegionsConfigArgs) ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecRegionsConfigOutput)
}

// GetClustersResultReplicationSpecRegionsConfigArrayInput is an input type that accepts GetClustersResultReplicationSpecRegionsConfigArray and GetClustersResultReplicationSpecRegionsConfigArrayOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecRegionsConfigArrayInput` via:
//
//          GetClustersResultReplicationSpecRegionsConfigArray{ GetClustersResultReplicationSpecRegionsConfigArgs{...} }
type GetClustersResultReplicationSpecRegionsConfigArrayInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecRegionsConfigArrayOutput() GetClustersResultReplicationSpecRegionsConfigArrayOutput
	ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(context.Context) GetClustersResultReplicationSpecRegionsConfigArrayOutput
}

type GetClustersResultReplicationSpecRegionsConfigArray []GetClustersResultReplicationSpecRegionsConfigInput

func (GetClustersResultReplicationSpecRegionsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecRegionsConfigArray) ToGetClustersResultReplicationSpecRegionsConfigArrayOutput() GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return i.ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecRegionsConfigArray) ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecRegionsConfigArrayOutput)
}

type GetClustersResultReplicationSpecRegionsConfigOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecRegionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecRegionsConfigOutput) ToGetClustersResultReplicationSpecRegionsConfigOutput() GetClustersResultReplicationSpecRegionsConfigOutput {
	return o
}

func (o GetClustersResultReplicationSpecRegionsConfigOutput) ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigOutput {
	return o
}

// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) AnalyticsNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.AnalyticsNodes }).(pulumi.IntOutput)
}

// Number of electable nodes for Atlas to deploy to the region.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) ElectableNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.ElectableNodes }).(pulumi.IntOutput)
}

// Election priority of the region. For regions with only read-only nodes, set this value to 0.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) ReadOnlyNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.ReadOnlyNodes }).(pulumi.IntOutput)
}

// Name for the region specified.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetClustersResultReplicationSpecRegionsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecRegionsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecRegionsConfigArrayOutput) ToGetClustersResultReplicationSpecRegionsConfigArrayOutput() GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecRegionsConfigArrayOutput) ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecRegionsConfigArrayOutput) Index(i pulumi.IntInput) GetClustersResultReplicationSpecRegionsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultReplicationSpecRegionsConfig {
		return vs[0].([]GetClustersResultReplicationSpecRegionsConfig)[vs[1].(int)]
	}).(GetClustersResultReplicationSpecRegionsConfigOutput)
}

type GetClustersResultSnapshotBackupPolicy struct {
	ClusterId             string                                        `pulumi:"clusterId"`
	ClusterName           string                                        `pulumi:"clusterName"`
	NextSnapshot          string                                        `pulumi:"nextSnapshot"`
	Policies              []GetClustersResultSnapshotBackupPolicyPolicy `pulumi:"policies"`
	ReferenceHourOfDay    int                                           `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour int                                           `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     int                                           `pulumi:"restoreWindowDays"`
	UpdateSnapshots       bool                                          `pulumi:"updateSnapshots"`
}

// GetClustersResultSnapshotBackupPolicyInput is an input type that accepts GetClustersResultSnapshotBackupPolicyArgs and GetClustersResultSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyInput` via:
//
//          GetClustersResultSnapshotBackupPolicyArgs{...}
type GetClustersResultSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyOutput() GetClustersResultSnapshotBackupPolicyOutput
	ToGetClustersResultSnapshotBackupPolicyOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyOutput
}

type GetClustersResultSnapshotBackupPolicyArgs struct {
	ClusterId             pulumi.StringInput                                    `pulumi:"clusterId"`
	ClusterName           pulumi.StringInput                                    `pulumi:"clusterName"`
	NextSnapshot          pulumi.StringInput                                    `pulumi:"nextSnapshot"`
	Policies              GetClustersResultSnapshotBackupPolicyPolicyArrayInput `pulumi:"policies"`
	ReferenceHourOfDay    pulumi.IntInput                                       `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour pulumi.IntInput                                       `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     pulumi.IntInput                                       `pulumi:"restoreWindowDays"`
	UpdateSnapshots       pulumi.BoolInput                                      `pulumi:"updateSnapshots"`
}

func (GetClustersResultSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyArgs) ToGetClustersResultSnapshotBackupPolicyOutput() GetClustersResultSnapshotBackupPolicyOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyArgs) ToGetClustersResultSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyOutput)
}

// GetClustersResultSnapshotBackupPolicyArrayInput is an input type that accepts GetClustersResultSnapshotBackupPolicyArray and GetClustersResultSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyArrayInput` via:
//
//          GetClustersResultSnapshotBackupPolicyArray{ GetClustersResultSnapshotBackupPolicyArgs{...} }
type GetClustersResultSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyArrayOutput
	ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyArrayOutput
}

type GetClustersResultSnapshotBackupPolicyArray []GetClustersResultSnapshotBackupPolicyInput

func (GetClustersResultSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyArray) ToGetClustersResultSnapshotBackupPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyArrayOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyArray) ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyArrayOutput)
}

type GetClustersResultSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ToGetClustersResultSnapshotBackupPolicyOutput() GetClustersResultSnapshotBackupPolicyOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ToGetClustersResultSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) NextSnapshot() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) string { return v.NextSnapshot }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) Policies() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) []GetClustersResultSnapshotBackupPolicyPolicy {
		return v.Policies
	}).(GetClustersResultSnapshotBackupPolicyPolicyArrayOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ReferenceHourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) int { return v.ReferenceHourOfDay }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ReferenceMinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) int { return v.ReferenceMinuteOfHour }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) RestoreWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) int { return v.RestoreWindowDays }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) UpdateSnapshots() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) bool { return v.UpdateSnapshots }).(pulumi.BoolOutput)
}

type GetClustersResultSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetClustersResultSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultSnapshotBackupPolicy {
		return vs[0].([]GetClustersResultSnapshotBackupPolicy)[vs[1].(int)]
	}).(GetClustersResultSnapshotBackupPolicyOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicy struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          string                                                  `pulumi:"id"`
	PolicyItems []GetClustersResultSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// GetClustersResultSnapshotBackupPolicyPolicyInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyArgs and GetClustersResultSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyInput` via:
//
//          GetClustersResultSnapshotBackupPolicyPolicyArgs{...}
type GetClustersResultSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyOutput() GetClustersResultSnapshotBackupPolicyPolicyOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          pulumi.StringInput                                              `pulumi:"id"`
	PolicyItems GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (GetClustersResultSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArgs) ToGetClustersResultSnapshotBackupPolicyPolicyOutput() GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArgs) ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyOutput)
}

// GetClustersResultSnapshotBackupPolicyPolicyArrayInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyArray and GetClustersResultSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyArrayInput` via:
//
//          GetClustersResultSnapshotBackupPolicyPolicyArray{ GetClustersResultSnapshotBackupPolicyPolicyArgs{...} }
type GetClustersResultSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyArrayOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyArray []GetClustersResultSnapshotBackupPolicyPolicyInput

func (GetClustersResultSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArray) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArray) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyArrayOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) ToGetClustersResultSnapshotBackupPolicyPolicyOutput() GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) PolicyItems() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicy) []GetClustersResultSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultSnapshotBackupPolicyPolicy {
		return vs[0].([]GetClustersResultSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(GetClustersResultSnapshotBackupPolicyPolicyOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             string `pulumi:"id"`
	RetentionUnit  string `pulumi:"retentionUnit"`
	RetentionValue int    `pulumi:"retentionValue"`
}

// GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs and GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//          GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             pulumi.StringInput `pulumi:"id"`
	RetentionUnit  pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue pulumi.IntInput    `pulumi:"retentionValue"`
}

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray and GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//          GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray{ GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray []GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type GetCustomDbRoleAction struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action string `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources []GetCustomDbRoleActionResource `pulumi:"resources"`
}

// GetCustomDbRoleActionInput is an input type that accepts GetCustomDbRoleActionArgs and GetCustomDbRoleActionOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionInput` via:
//
//          GetCustomDbRoleActionArgs{...}
type GetCustomDbRoleActionInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionOutput() GetCustomDbRoleActionOutput
	ToGetCustomDbRoleActionOutputWithContext(context.Context) GetCustomDbRoleActionOutput
}

type GetCustomDbRoleActionArgs struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action pulumi.StringInput `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources GetCustomDbRoleActionResourceArrayInput `pulumi:"resources"`
}

func (GetCustomDbRoleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleAction)(nil)).Elem()
}

func (i GetCustomDbRoleActionArgs) ToGetCustomDbRoleActionOutput() GetCustomDbRoleActionOutput {
	return i.ToGetCustomDbRoleActionOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionArgs) ToGetCustomDbRoleActionOutputWithContext(ctx context.Context) GetCustomDbRoleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionOutput)
}

// GetCustomDbRoleActionArrayInput is an input type that accepts GetCustomDbRoleActionArray and GetCustomDbRoleActionArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionArrayInput` via:
//
//          GetCustomDbRoleActionArray{ GetCustomDbRoleActionArgs{...} }
type GetCustomDbRoleActionArrayInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionArrayOutput() GetCustomDbRoleActionArrayOutput
	ToGetCustomDbRoleActionArrayOutputWithContext(context.Context) GetCustomDbRoleActionArrayOutput
}

type GetCustomDbRoleActionArray []GetCustomDbRoleActionInput

func (GetCustomDbRoleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleAction)(nil)).Elem()
}

func (i GetCustomDbRoleActionArray) ToGetCustomDbRoleActionArrayOutput() GetCustomDbRoleActionArrayOutput {
	return i.ToGetCustomDbRoleActionArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionArray) ToGetCustomDbRoleActionArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionArrayOutput)
}

type GetCustomDbRoleActionOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleAction)(nil)).Elem()
}

func (o GetCustomDbRoleActionOutput) ToGetCustomDbRoleActionOutput() GetCustomDbRoleActionOutput {
	return o
}

func (o GetCustomDbRoleActionOutput) ToGetCustomDbRoleActionOutputWithContext(ctx context.Context) GetCustomDbRoleActionOutput {
	return o
}

// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
func (o GetCustomDbRoleActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleAction) string { return v.Action }).(pulumi.StringOutput)
}

// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
func (o GetCustomDbRoleActionOutput) Resources() GetCustomDbRoleActionResourceArrayOutput {
	return o.ApplyT(func(v GetCustomDbRoleAction) []GetCustomDbRoleActionResource { return v.Resources }).(GetCustomDbRoleActionResourceArrayOutput)
}

type GetCustomDbRoleActionArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleAction)(nil)).Elem()
}

func (o GetCustomDbRoleActionArrayOutput) ToGetCustomDbRoleActionArrayOutput() GetCustomDbRoleActionArrayOutput {
	return o
}

func (o GetCustomDbRoleActionArrayOutput) ToGetCustomDbRoleActionArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionArrayOutput {
	return o
}

func (o GetCustomDbRoleActionArrayOutput) Index(i pulumi.IntInput) GetCustomDbRoleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRoleAction {
		return vs[0].([]GetCustomDbRoleAction)[vs[1].(int)]
	}).(GetCustomDbRoleActionOutput)
}

type GetCustomDbRoleActionResource struct {
	Cluster        bool   `pulumi:"cluster"`
	CollectionName string `pulumi:"collectionName"`
	DatabaseName   string `pulumi:"databaseName"`
}

// GetCustomDbRoleActionResourceInput is an input type that accepts GetCustomDbRoleActionResourceArgs and GetCustomDbRoleActionResourceOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionResourceInput` via:
//
//          GetCustomDbRoleActionResourceArgs{...}
type GetCustomDbRoleActionResourceInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionResourceOutput() GetCustomDbRoleActionResourceOutput
	ToGetCustomDbRoleActionResourceOutputWithContext(context.Context) GetCustomDbRoleActionResourceOutput
}

type GetCustomDbRoleActionResourceArgs struct {
	Cluster        pulumi.BoolInput   `pulumi:"cluster"`
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	DatabaseName   pulumi.StringInput `pulumi:"databaseName"`
}

func (GetCustomDbRoleActionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleActionResource)(nil)).Elem()
}

func (i GetCustomDbRoleActionResourceArgs) ToGetCustomDbRoleActionResourceOutput() GetCustomDbRoleActionResourceOutput {
	return i.ToGetCustomDbRoleActionResourceOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionResourceArgs) ToGetCustomDbRoleActionResourceOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionResourceOutput)
}

// GetCustomDbRoleActionResourceArrayInput is an input type that accepts GetCustomDbRoleActionResourceArray and GetCustomDbRoleActionResourceArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionResourceArrayInput` via:
//
//          GetCustomDbRoleActionResourceArray{ GetCustomDbRoleActionResourceArgs{...} }
type GetCustomDbRoleActionResourceArrayInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionResourceArrayOutput() GetCustomDbRoleActionResourceArrayOutput
	ToGetCustomDbRoleActionResourceArrayOutputWithContext(context.Context) GetCustomDbRoleActionResourceArrayOutput
}

type GetCustomDbRoleActionResourceArray []GetCustomDbRoleActionResourceInput

func (GetCustomDbRoleActionResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleActionResource)(nil)).Elem()
}

func (i GetCustomDbRoleActionResourceArray) ToGetCustomDbRoleActionResourceArrayOutput() GetCustomDbRoleActionResourceArrayOutput {
	return i.ToGetCustomDbRoleActionResourceArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionResourceArray) ToGetCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionResourceArrayOutput)
}

type GetCustomDbRoleActionResourceOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleActionResource)(nil)).Elem()
}

func (o GetCustomDbRoleActionResourceOutput) ToGetCustomDbRoleActionResourceOutput() GetCustomDbRoleActionResourceOutput {
	return o
}

func (o GetCustomDbRoleActionResourceOutput) ToGetCustomDbRoleActionResourceOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceOutput {
	return o
}

func (o GetCustomDbRoleActionResourceOutput) Cluster() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCustomDbRoleActionResource) bool { return v.Cluster }).(pulumi.BoolOutput)
}

func (o GetCustomDbRoleActionResourceOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleActionResource) string { return v.CollectionName }).(pulumi.StringOutput)
}

func (o GetCustomDbRoleActionResourceOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleActionResource) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type GetCustomDbRoleActionResourceArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleActionResource)(nil)).Elem()
}

func (o GetCustomDbRoleActionResourceArrayOutput) ToGetCustomDbRoleActionResourceArrayOutput() GetCustomDbRoleActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRoleActionResourceArrayOutput) ToGetCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRoleActionResourceArrayOutput) Index(i pulumi.IntInput) GetCustomDbRoleActionResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRoleActionResource {
		return vs[0].([]GetCustomDbRoleActionResource)[vs[1].(int)]
	}).(GetCustomDbRoleActionResourceOutput)
}

type GetCustomDbRoleInheritedRole struct {
	DatabaseName string `pulumi:"databaseName"`
	// Name of the custom role.
	RoleName string `pulumi:"roleName"`
}

// GetCustomDbRoleInheritedRoleInput is an input type that accepts GetCustomDbRoleInheritedRoleArgs and GetCustomDbRoleInheritedRoleOutput values.
// You can construct a concrete instance of `GetCustomDbRoleInheritedRoleInput` via:
//
//          GetCustomDbRoleInheritedRoleArgs{...}
type GetCustomDbRoleInheritedRoleInput interface {
	pulumi.Input

	ToGetCustomDbRoleInheritedRoleOutput() GetCustomDbRoleInheritedRoleOutput
	ToGetCustomDbRoleInheritedRoleOutputWithContext(context.Context) GetCustomDbRoleInheritedRoleOutput
}

type GetCustomDbRoleInheritedRoleArgs struct {
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Name of the custom role.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (GetCustomDbRoleInheritedRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRoleInheritedRoleArgs) ToGetCustomDbRoleInheritedRoleOutput() GetCustomDbRoleInheritedRoleOutput {
	return i.ToGetCustomDbRoleInheritedRoleOutputWithContext(context.Background())
}

func (i GetCustomDbRoleInheritedRoleArgs) ToGetCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleInheritedRoleOutput)
}

// GetCustomDbRoleInheritedRoleArrayInput is an input type that accepts GetCustomDbRoleInheritedRoleArray and GetCustomDbRoleInheritedRoleArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRoleInheritedRoleArrayInput` via:
//
//          GetCustomDbRoleInheritedRoleArray{ GetCustomDbRoleInheritedRoleArgs{...} }
type GetCustomDbRoleInheritedRoleArrayInput interface {
	pulumi.Input

	ToGetCustomDbRoleInheritedRoleArrayOutput() GetCustomDbRoleInheritedRoleArrayOutput
	ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(context.Context) GetCustomDbRoleInheritedRoleArrayOutput
}

type GetCustomDbRoleInheritedRoleArray []GetCustomDbRoleInheritedRoleInput

func (GetCustomDbRoleInheritedRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRoleInheritedRoleArray) ToGetCustomDbRoleInheritedRoleArrayOutput() GetCustomDbRoleInheritedRoleArrayOutput {
	return i.ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRoleInheritedRoleArray) ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleInheritedRoleArrayOutput)
}

type GetCustomDbRoleInheritedRoleOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleInheritedRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRoleInheritedRoleOutput) ToGetCustomDbRoleInheritedRoleOutput() GetCustomDbRoleInheritedRoleOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleOutput) ToGetCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleInheritedRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Name of the custom role.
func (o GetCustomDbRoleInheritedRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleInheritedRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetCustomDbRoleInheritedRoleArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleInheritedRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRoleInheritedRoleArrayOutput) ToGetCustomDbRoleInheritedRoleArrayOutput() GetCustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleArrayOutput) ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleArrayOutput) Index(i pulumi.IntInput) GetCustomDbRoleInheritedRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRoleInheritedRole {
		return vs[0].([]GetCustomDbRoleInheritedRole)[vs[1].(int)]
	}).(GetCustomDbRoleInheritedRoleOutput)
}

type GetCustomDbRolesResultType struct {
	Actions        []GetCustomDbRolesResultAction        `pulumi:"actions"`
	InheritedRoles []GetCustomDbRolesResultInheritedRole `pulumi:"inheritedRoles"`
	RoleName       string                                `pulumi:"roleName"`
}

// GetCustomDbRolesResultTypeInput is an input type that accepts GetCustomDbRolesResultTypeArgs and GetCustomDbRolesResultTypeOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultTypeInput` via:
//
//          GetCustomDbRolesResultTypeArgs{...}
type GetCustomDbRolesResultTypeInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultTypeOutput() GetCustomDbRolesResultTypeOutput
	ToGetCustomDbRolesResultTypeOutputWithContext(context.Context) GetCustomDbRolesResultTypeOutput
}

type GetCustomDbRolesResultTypeArgs struct {
	Actions        GetCustomDbRolesResultActionArrayInput        `pulumi:"actions"`
	InheritedRoles GetCustomDbRolesResultInheritedRoleArrayInput `pulumi:"inheritedRoles"`
	RoleName       pulumi.StringInput                            `pulumi:"roleName"`
}

func (GetCustomDbRolesResultTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultType)(nil)).Elem()
}

func (i GetCustomDbRolesResultTypeArgs) ToGetCustomDbRolesResultTypeOutput() GetCustomDbRolesResultTypeOutput {
	return i.ToGetCustomDbRolesResultTypeOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultTypeArgs) ToGetCustomDbRolesResultTypeOutputWithContext(ctx context.Context) GetCustomDbRolesResultTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultTypeOutput)
}

// GetCustomDbRolesResultTypeArrayInput is an input type that accepts GetCustomDbRolesResultTypeArray and GetCustomDbRolesResultTypeArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultTypeArrayInput` via:
//
//          GetCustomDbRolesResultTypeArray{ GetCustomDbRolesResultTypeArgs{...} }
type GetCustomDbRolesResultTypeArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultTypeArrayOutput() GetCustomDbRolesResultTypeArrayOutput
	ToGetCustomDbRolesResultTypeArrayOutputWithContext(context.Context) GetCustomDbRolesResultTypeArrayOutput
}

type GetCustomDbRolesResultTypeArray []GetCustomDbRolesResultTypeInput

func (GetCustomDbRolesResultTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultType)(nil)).Elem()
}

func (i GetCustomDbRolesResultTypeArray) ToGetCustomDbRolesResultTypeArrayOutput() GetCustomDbRolesResultTypeArrayOutput {
	return i.ToGetCustomDbRolesResultTypeArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultTypeArray) ToGetCustomDbRolesResultTypeArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultTypeArrayOutput)
}

type GetCustomDbRolesResultTypeOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultType)(nil)).Elem()
}

func (o GetCustomDbRolesResultTypeOutput) ToGetCustomDbRolesResultTypeOutput() GetCustomDbRolesResultTypeOutput {
	return o
}

func (o GetCustomDbRolesResultTypeOutput) ToGetCustomDbRolesResultTypeOutputWithContext(ctx context.Context) GetCustomDbRolesResultTypeOutput {
	return o
}

func (o GetCustomDbRolesResultTypeOutput) Actions() GetCustomDbRolesResultActionArrayOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultType) []GetCustomDbRolesResultAction { return v.Actions }).(GetCustomDbRolesResultActionArrayOutput)
}

func (o GetCustomDbRolesResultTypeOutput) InheritedRoles() GetCustomDbRolesResultInheritedRoleArrayOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultType) []GetCustomDbRolesResultInheritedRole { return v.InheritedRoles }).(GetCustomDbRolesResultInheritedRoleArrayOutput)
}

func (o GetCustomDbRolesResultTypeOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultType) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetCustomDbRolesResultTypeArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultType)(nil)).Elem()
}

func (o GetCustomDbRolesResultTypeArrayOutput) ToGetCustomDbRolesResultTypeArrayOutput() GetCustomDbRolesResultTypeArrayOutput {
	return o
}

func (o GetCustomDbRolesResultTypeArrayOutput) ToGetCustomDbRolesResultTypeArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultTypeArrayOutput {
	return o
}

func (o GetCustomDbRolesResultTypeArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResultType {
		return vs[0].([]GetCustomDbRolesResultType)[vs[1].(int)]
	}).(GetCustomDbRolesResultTypeOutput)
}

type GetCustomDbRolesResultAction struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action string `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources []GetCustomDbRolesResultActionResource `pulumi:"resources"`
}

// GetCustomDbRolesResultActionInput is an input type that accepts GetCustomDbRolesResultActionArgs and GetCustomDbRolesResultActionOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionInput` via:
//
//          GetCustomDbRolesResultActionArgs{...}
type GetCustomDbRolesResultActionInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionOutput() GetCustomDbRolesResultActionOutput
	ToGetCustomDbRolesResultActionOutputWithContext(context.Context) GetCustomDbRolesResultActionOutput
}

type GetCustomDbRolesResultActionArgs struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action pulumi.StringInput `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources GetCustomDbRolesResultActionResourceArrayInput `pulumi:"resources"`
}

func (GetCustomDbRolesResultActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultAction)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionArgs) ToGetCustomDbRolesResultActionOutput() GetCustomDbRolesResultActionOutput {
	return i.ToGetCustomDbRolesResultActionOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionArgs) ToGetCustomDbRolesResultActionOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionOutput)
}

// GetCustomDbRolesResultActionArrayInput is an input type that accepts GetCustomDbRolesResultActionArray and GetCustomDbRolesResultActionArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionArrayInput` via:
//
//          GetCustomDbRolesResultActionArray{ GetCustomDbRolesResultActionArgs{...} }
type GetCustomDbRolesResultActionArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionArrayOutput() GetCustomDbRolesResultActionArrayOutput
	ToGetCustomDbRolesResultActionArrayOutputWithContext(context.Context) GetCustomDbRolesResultActionArrayOutput
}

type GetCustomDbRolesResultActionArray []GetCustomDbRolesResultActionInput

func (GetCustomDbRolesResultActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultAction)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionArray) ToGetCustomDbRolesResultActionArrayOutput() GetCustomDbRolesResultActionArrayOutput {
	return i.ToGetCustomDbRolesResultActionArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionArray) ToGetCustomDbRolesResultActionArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionArrayOutput)
}

type GetCustomDbRolesResultActionOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultAction)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionOutput) ToGetCustomDbRolesResultActionOutput() GetCustomDbRolesResultActionOutput {
	return o
}

func (o GetCustomDbRolesResultActionOutput) ToGetCustomDbRolesResultActionOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionOutput {
	return o
}

// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
func (o GetCustomDbRolesResultActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultAction) string { return v.Action }).(pulumi.StringOutput)
}

// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
func (o GetCustomDbRolesResultActionOutput) Resources() GetCustomDbRolesResultActionResourceArrayOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultAction) []GetCustomDbRolesResultActionResource { return v.Resources }).(GetCustomDbRolesResultActionResourceArrayOutput)
}

type GetCustomDbRolesResultActionArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultAction)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionArrayOutput) ToGetCustomDbRolesResultActionArrayOutput() GetCustomDbRolesResultActionArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionArrayOutput) ToGetCustomDbRolesResultActionArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResultAction {
		return vs[0].([]GetCustomDbRolesResultAction)[vs[1].(int)]
	}).(GetCustomDbRolesResultActionOutput)
}

type GetCustomDbRolesResultActionResource struct {
	Cluster        bool   `pulumi:"cluster"`
	CollectionName string `pulumi:"collectionName"`
	DatabaseName   string `pulumi:"databaseName"`
}

// GetCustomDbRolesResultActionResourceInput is an input type that accepts GetCustomDbRolesResultActionResourceArgs and GetCustomDbRolesResultActionResourceOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionResourceInput` via:
//
//          GetCustomDbRolesResultActionResourceArgs{...}
type GetCustomDbRolesResultActionResourceInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionResourceOutput() GetCustomDbRolesResultActionResourceOutput
	ToGetCustomDbRolesResultActionResourceOutputWithContext(context.Context) GetCustomDbRolesResultActionResourceOutput
}

type GetCustomDbRolesResultActionResourceArgs struct {
	Cluster        pulumi.BoolInput   `pulumi:"cluster"`
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	DatabaseName   pulumi.StringInput `pulumi:"databaseName"`
}

func (GetCustomDbRolesResultActionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionResourceArgs) ToGetCustomDbRolesResultActionResourceOutput() GetCustomDbRolesResultActionResourceOutput {
	return i.ToGetCustomDbRolesResultActionResourceOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionResourceArgs) ToGetCustomDbRolesResultActionResourceOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionResourceOutput)
}

// GetCustomDbRolesResultActionResourceArrayInput is an input type that accepts GetCustomDbRolesResultActionResourceArray and GetCustomDbRolesResultActionResourceArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionResourceArrayInput` via:
//
//          GetCustomDbRolesResultActionResourceArray{ GetCustomDbRolesResultActionResourceArgs{...} }
type GetCustomDbRolesResultActionResourceArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionResourceArrayOutput() GetCustomDbRolesResultActionResourceArrayOutput
	ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(context.Context) GetCustomDbRolesResultActionResourceArrayOutput
}

type GetCustomDbRolesResultActionResourceArray []GetCustomDbRolesResultActionResourceInput

func (GetCustomDbRolesResultActionResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionResourceArray) ToGetCustomDbRolesResultActionResourceArrayOutput() GetCustomDbRolesResultActionResourceArrayOutput {
	return i.ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionResourceArray) ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionResourceArrayOutput)
}

type GetCustomDbRolesResultActionResourceOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionResourceOutput) ToGetCustomDbRolesResultActionResourceOutput() GetCustomDbRolesResultActionResourceOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceOutput) ToGetCustomDbRolesResultActionResourceOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceOutput) Cluster() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultActionResource) bool { return v.Cluster }).(pulumi.BoolOutput)
}

func (o GetCustomDbRolesResultActionResourceOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultActionResource) string { return v.CollectionName }).(pulumi.StringOutput)
}

func (o GetCustomDbRolesResultActionResourceOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultActionResource) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type GetCustomDbRolesResultActionResourceArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionResourceArrayOutput) ToGetCustomDbRolesResultActionResourceArrayOutput() GetCustomDbRolesResultActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceArrayOutput) ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultActionResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResultActionResource {
		return vs[0].([]GetCustomDbRolesResultActionResource)[vs[1].(int)]
	}).(GetCustomDbRolesResultActionResourceOutput)
}

type GetCustomDbRolesResultInheritedRole struct {
	DatabaseName string `pulumi:"databaseName"`
	RoleName     string `pulumi:"roleName"`
}

// GetCustomDbRolesResultInheritedRoleInput is an input type that accepts GetCustomDbRolesResultInheritedRoleArgs and GetCustomDbRolesResultInheritedRoleOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultInheritedRoleInput` via:
//
//          GetCustomDbRolesResultInheritedRoleArgs{...}
type GetCustomDbRolesResultInheritedRoleInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultInheritedRoleOutput() GetCustomDbRolesResultInheritedRoleOutput
	ToGetCustomDbRolesResultInheritedRoleOutputWithContext(context.Context) GetCustomDbRolesResultInheritedRoleOutput
}

type GetCustomDbRolesResultInheritedRoleArgs struct {
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	RoleName     pulumi.StringInput `pulumi:"roleName"`
}

func (GetCustomDbRolesResultInheritedRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRolesResultInheritedRoleArgs) ToGetCustomDbRolesResultInheritedRoleOutput() GetCustomDbRolesResultInheritedRoleOutput {
	return i.ToGetCustomDbRolesResultInheritedRoleOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultInheritedRoleArgs) ToGetCustomDbRolesResultInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultInheritedRoleOutput)
}

// GetCustomDbRolesResultInheritedRoleArrayInput is an input type that accepts GetCustomDbRolesResultInheritedRoleArray and GetCustomDbRolesResultInheritedRoleArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultInheritedRoleArrayInput` via:
//
//          GetCustomDbRolesResultInheritedRoleArray{ GetCustomDbRolesResultInheritedRoleArgs{...} }
type GetCustomDbRolesResultInheritedRoleArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultInheritedRoleArrayOutput() GetCustomDbRolesResultInheritedRoleArrayOutput
	ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(context.Context) GetCustomDbRolesResultInheritedRoleArrayOutput
}

type GetCustomDbRolesResultInheritedRoleArray []GetCustomDbRolesResultInheritedRoleInput

func (GetCustomDbRolesResultInheritedRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRolesResultInheritedRoleArray) ToGetCustomDbRolesResultInheritedRoleArrayOutput() GetCustomDbRolesResultInheritedRoleArrayOutput {
	return i.ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultInheritedRoleArray) ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultInheritedRoleArrayOutput)
}

type GetCustomDbRolesResultInheritedRoleOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultInheritedRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRolesResultInheritedRoleOutput) ToGetCustomDbRolesResultInheritedRoleOutput() GetCustomDbRolesResultInheritedRoleOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleOutput) ToGetCustomDbRolesResultInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultInheritedRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o GetCustomDbRolesResultInheritedRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultInheritedRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetCustomDbRolesResultInheritedRoleArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultInheritedRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRolesResultInheritedRoleArrayOutput) ToGetCustomDbRolesResultInheritedRoleArrayOutput() GetCustomDbRolesResultInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleArrayOutput) ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultInheritedRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResultInheritedRole {
		return vs[0].([]GetCustomDbRolesResultInheritedRole)[vs[1].(int)]
	}).(GetCustomDbRolesResultInheritedRoleOutput)
}

type GetDatabaseUserLabel struct {
	// The key that you want to write.
	Key string `pulumi:"key"`
	// The value that you want to write.
	Value string `pulumi:"value"`
}

// GetDatabaseUserLabelInput is an input type that accepts GetDatabaseUserLabelArgs and GetDatabaseUserLabelOutput values.
// You can construct a concrete instance of `GetDatabaseUserLabelInput` via:
//
//          GetDatabaseUserLabelArgs{...}
type GetDatabaseUserLabelInput interface {
	pulumi.Input

	ToGetDatabaseUserLabelOutput() GetDatabaseUserLabelOutput
	ToGetDatabaseUserLabelOutputWithContext(context.Context) GetDatabaseUserLabelOutput
}

type GetDatabaseUserLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDatabaseUserLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserLabel)(nil)).Elem()
}

func (i GetDatabaseUserLabelArgs) ToGetDatabaseUserLabelOutput() GetDatabaseUserLabelOutput {
	return i.ToGetDatabaseUserLabelOutputWithContext(context.Background())
}

func (i GetDatabaseUserLabelArgs) ToGetDatabaseUserLabelOutputWithContext(ctx context.Context) GetDatabaseUserLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserLabelOutput)
}

// GetDatabaseUserLabelArrayInput is an input type that accepts GetDatabaseUserLabelArray and GetDatabaseUserLabelArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUserLabelArrayInput` via:
//
//          GetDatabaseUserLabelArray{ GetDatabaseUserLabelArgs{...} }
type GetDatabaseUserLabelArrayInput interface {
	pulumi.Input

	ToGetDatabaseUserLabelArrayOutput() GetDatabaseUserLabelArrayOutput
	ToGetDatabaseUserLabelArrayOutputWithContext(context.Context) GetDatabaseUserLabelArrayOutput
}

type GetDatabaseUserLabelArray []GetDatabaseUserLabelInput

func (GetDatabaseUserLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserLabel)(nil)).Elem()
}

func (i GetDatabaseUserLabelArray) ToGetDatabaseUserLabelArrayOutput() GetDatabaseUserLabelArrayOutput {
	return i.ToGetDatabaseUserLabelArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUserLabelArray) ToGetDatabaseUserLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUserLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserLabelArrayOutput)
}

type GetDatabaseUserLabelOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserLabel)(nil)).Elem()
}

func (o GetDatabaseUserLabelOutput) ToGetDatabaseUserLabelOutput() GetDatabaseUserLabelOutput {
	return o
}

func (o GetDatabaseUserLabelOutput) ToGetDatabaseUserLabelOutputWithContext(ctx context.Context) GetDatabaseUserLabelOutput {
	return o
}

// The key that you want to write.
func (o GetDatabaseUserLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that you want to write.
func (o GetDatabaseUserLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetDatabaseUserLabelArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserLabel)(nil)).Elem()
}

func (o GetDatabaseUserLabelArrayOutput) ToGetDatabaseUserLabelArrayOutput() GetDatabaseUserLabelArrayOutput {
	return o
}

func (o GetDatabaseUserLabelArrayOutput) ToGetDatabaseUserLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUserLabelArrayOutput {
	return o
}

func (o GetDatabaseUserLabelArrayOutput) Index(i pulumi.IntInput) GetDatabaseUserLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUserLabel {
		return vs[0].([]GetDatabaseUserLabel)[vs[1].(int)]
	}).(GetDatabaseUserLabelOutput)
}

type GetDatabaseUserRole struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName string `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName string `pulumi:"databaseName"`
	RoleName     string `pulumi:"roleName"`
}

// GetDatabaseUserRoleInput is an input type that accepts GetDatabaseUserRoleArgs and GetDatabaseUserRoleOutput values.
// You can construct a concrete instance of `GetDatabaseUserRoleInput` via:
//
//          GetDatabaseUserRoleArgs{...}
type GetDatabaseUserRoleInput interface {
	pulumi.Input

	ToGetDatabaseUserRoleOutput() GetDatabaseUserRoleOutput
	ToGetDatabaseUserRoleOutputWithContext(context.Context) GetDatabaseUserRoleOutput
}

type GetDatabaseUserRoleArgs struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	RoleName     pulumi.StringInput `pulumi:"roleName"`
}

func (GetDatabaseUserRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserRole)(nil)).Elem()
}

func (i GetDatabaseUserRoleArgs) ToGetDatabaseUserRoleOutput() GetDatabaseUserRoleOutput {
	return i.ToGetDatabaseUserRoleOutputWithContext(context.Background())
}

func (i GetDatabaseUserRoleArgs) ToGetDatabaseUserRoleOutputWithContext(ctx context.Context) GetDatabaseUserRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserRoleOutput)
}

// GetDatabaseUserRoleArrayInput is an input type that accepts GetDatabaseUserRoleArray and GetDatabaseUserRoleArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUserRoleArrayInput` via:
//
//          GetDatabaseUserRoleArray{ GetDatabaseUserRoleArgs{...} }
type GetDatabaseUserRoleArrayInput interface {
	pulumi.Input

	ToGetDatabaseUserRoleArrayOutput() GetDatabaseUserRoleArrayOutput
	ToGetDatabaseUserRoleArrayOutputWithContext(context.Context) GetDatabaseUserRoleArrayOutput
}

type GetDatabaseUserRoleArray []GetDatabaseUserRoleInput

func (GetDatabaseUserRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserRole)(nil)).Elem()
}

func (i GetDatabaseUserRoleArray) ToGetDatabaseUserRoleArrayOutput() GetDatabaseUserRoleArrayOutput {
	return i.ToGetDatabaseUserRoleArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUserRoleArray) ToGetDatabaseUserRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUserRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserRoleArrayOutput)
}

type GetDatabaseUserRoleOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserRole)(nil)).Elem()
}

func (o GetDatabaseUserRoleOutput) ToGetDatabaseUserRoleOutput() GetDatabaseUserRoleOutput {
	return o
}

func (o GetDatabaseUserRoleOutput) ToGetDatabaseUserRoleOutputWithContext(ctx context.Context) GetDatabaseUserRoleOutput {
	return o
}

// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
func (o GetDatabaseUserRoleOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserRole) string { return v.CollectionName }).(pulumi.StringOutput)
}

// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
func (o GetDatabaseUserRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o GetDatabaseUserRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetDatabaseUserRoleArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserRole)(nil)).Elem()
}

func (o GetDatabaseUserRoleArrayOutput) ToGetDatabaseUserRoleArrayOutput() GetDatabaseUserRoleArrayOutput {
	return o
}

func (o GetDatabaseUserRoleArrayOutput) ToGetDatabaseUserRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUserRoleArrayOutput {
	return o
}

func (o GetDatabaseUserRoleArrayOutput) Index(i pulumi.IntInput) GetDatabaseUserRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUserRole {
		return vs[0].([]GetDatabaseUserRole)[vs[1].(int)]
	}).(GetDatabaseUserRoleOutput)
}

type GetDatabaseUsersResultType struct {
	// The user’s authentication database. A user must provide both a username and authentication database to log into MongoDB. In Atlas deployments of MongoDB, the authentication database is always the admin database.
	AuthDatabaseName string                        `pulumi:"authDatabaseName"`
	Labels           []GetDatabaseUsersResultLabel `pulumi:"labels"`
	// The unique ID for the project to get all database users.
	ProjectId string `pulumi:"projectId"`
	// List of user’s roles and the databases / collections on which the roles apply. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. See Roles below for more details.
	Roles []GetDatabaseUsersResultRole `pulumi:"roles"`
	// Username for authenticating to MongoDB.
	Username string `pulumi:"username"`
	// X.509 method by which the provided username is authenticated.
	X509Type string `pulumi:"x509Type"`
}

// GetDatabaseUsersResultTypeInput is an input type that accepts GetDatabaseUsersResultTypeArgs and GetDatabaseUsersResultTypeOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultTypeInput` via:
//
//          GetDatabaseUsersResultTypeArgs{...}
type GetDatabaseUsersResultTypeInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultTypeOutput() GetDatabaseUsersResultTypeOutput
	ToGetDatabaseUsersResultTypeOutputWithContext(context.Context) GetDatabaseUsersResultTypeOutput
}

type GetDatabaseUsersResultTypeArgs struct {
	// The user’s authentication database. A user must provide both a username and authentication database to log into MongoDB. In Atlas deployments of MongoDB, the authentication database is always the admin database.
	AuthDatabaseName pulumi.StringInput                    `pulumi:"authDatabaseName"`
	Labels           GetDatabaseUsersResultLabelArrayInput `pulumi:"labels"`
	// The unique ID for the project to get all database users.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// List of user’s roles and the databases / collections on which the roles apply. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. See Roles below for more details.
	Roles GetDatabaseUsersResultRoleArrayInput `pulumi:"roles"`
	// Username for authenticating to MongoDB.
	Username pulumi.StringInput `pulumi:"username"`
	// X.509 method by which the provided username is authenticated.
	X509Type pulumi.StringInput `pulumi:"x509Type"`
}

func (GetDatabaseUsersResultTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultType)(nil)).Elem()
}

func (i GetDatabaseUsersResultTypeArgs) ToGetDatabaseUsersResultTypeOutput() GetDatabaseUsersResultTypeOutput {
	return i.ToGetDatabaseUsersResultTypeOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultTypeArgs) ToGetDatabaseUsersResultTypeOutputWithContext(ctx context.Context) GetDatabaseUsersResultTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultTypeOutput)
}

// GetDatabaseUsersResultTypeArrayInput is an input type that accepts GetDatabaseUsersResultTypeArray and GetDatabaseUsersResultTypeArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultTypeArrayInput` via:
//
//          GetDatabaseUsersResultTypeArray{ GetDatabaseUsersResultTypeArgs{...} }
type GetDatabaseUsersResultTypeArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultTypeArrayOutput() GetDatabaseUsersResultTypeArrayOutput
	ToGetDatabaseUsersResultTypeArrayOutputWithContext(context.Context) GetDatabaseUsersResultTypeArrayOutput
}

type GetDatabaseUsersResultTypeArray []GetDatabaseUsersResultTypeInput

func (GetDatabaseUsersResultTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultType)(nil)).Elem()
}

func (i GetDatabaseUsersResultTypeArray) ToGetDatabaseUsersResultTypeArrayOutput() GetDatabaseUsersResultTypeArrayOutput {
	return i.ToGetDatabaseUsersResultTypeArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultTypeArray) ToGetDatabaseUsersResultTypeArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultTypeArrayOutput)
}

type GetDatabaseUsersResultTypeOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultType)(nil)).Elem()
}

func (o GetDatabaseUsersResultTypeOutput) ToGetDatabaseUsersResultTypeOutput() GetDatabaseUsersResultTypeOutput {
	return o
}

func (o GetDatabaseUsersResultTypeOutput) ToGetDatabaseUsersResultTypeOutputWithContext(ctx context.Context) GetDatabaseUsersResultTypeOutput {
	return o
}

// The user’s authentication database. A user must provide both a username and authentication database to log into MongoDB. In Atlas deployments of MongoDB, the authentication database is always the admin database.
func (o GetDatabaseUsersResultTypeOutput) AuthDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultType) string { return v.AuthDatabaseName }).(pulumi.StringOutput)
}

func (o GetDatabaseUsersResultTypeOutput) Labels() GetDatabaseUsersResultLabelArrayOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultType) []GetDatabaseUsersResultLabel { return v.Labels }).(GetDatabaseUsersResultLabelArrayOutput)
}

// The unique ID for the project to get all database users.
func (o GetDatabaseUsersResultTypeOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultType) string { return v.ProjectId }).(pulumi.StringOutput)
}

// List of user’s roles and the databases / collections on which the roles apply. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. See Roles below for more details.
func (o GetDatabaseUsersResultTypeOutput) Roles() GetDatabaseUsersResultRoleArrayOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultType) []GetDatabaseUsersResultRole { return v.Roles }).(GetDatabaseUsersResultRoleArrayOutput)
}

// Username for authenticating to MongoDB.
func (o GetDatabaseUsersResultTypeOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultType) string { return v.Username }).(pulumi.StringOutput)
}

// X.509 method by which the provided username is authenticated.
func (o GetDatabaseUsersResultTypeOutput) X509Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultType) string { return v.X509Type }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultTypeArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultType)(nil)).Elem()
}

func (o GetDatabaseUsersResultTypeArrayOutput) ToGetDatabaseUsersResultTypeArrayOutput() GetDatabaseUsersResultTypeArrayOutput {
	return o
}

func (o GetDatabaseUsersResultTypeArrayOutput) ToGetDatabaseUsersResultTypeArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultTypeArrayOutput {
	return o
}

func (o GetDatabaseUsersResultTypeArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResultType {
		return vs[0].([]GetDatabaseUsersResultType)[vs[1].(int)]
	}).(GetDatabaseUsersResultTypeOutput)
}

type GetDatabaseUsersResultLabel struct {
	// The key that you want to write.
	Key string `pulumi:"key"`
	// The value that you want to write.
	Value string `pulumi:"value"`
}

// GetDatabaseUsersResultLabelInput is an input type that accepts GetDatabaseUsersResultLabelArgs and GetDatabaseUsersResultLabelOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultLabelInput` via:
//
//          GetDatabaseUsersResultLabelArgs{...}
type GetDatabaseUsersResultLabelInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultLabelOutput() GetDatabaseUsersResultLabelOutput
	ToGetDatabaseUsersResultLabelOutputWithContext(context.Context) GetDatabaseUsersResultLabelOutput
}

type GetDatabaseUsersResultLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDatabaseUsersResultLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (i GetDatabaseUsersResultLabelArgs) ToGetDatabaseUsersResultLabelOutput() GetDatabaseUsersResultLabelOutput {
	return i.ToGetDatabaseUsersResultLabelOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultLabelArgs) ToGetDatabaseUsersResultLabelOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultLabelOutput)
}

// GetDatabaseUsersResultLabelArrayInput is an input type that accepts GetDatabaseUsersResultLabelArray and GetDatabaseUsersResultLabelArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultLabelArrayInput` via:
//
//          GetDatabaseUsersResultLabelArray{ GetDatabaseUsersResultLabelArgs{...} }
type GetDatabaseUsersResultLabelArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultLabelArrayOutput() GetDatabaseUsersResultLabelArrayOutput
	ToGetDatabaseUsersResultLabelArrayOutputWithContext(context.Context) GetDatabaseUsersResultLabelArrayOutput
}

type GetDatabaseUsersResultLabelArray []GetDatabaseUsersResultLabelInput

func (GetDatabaseUsersResultLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (i GetDatabaseUsersResultLabelArray) ToGetDatabaseUsersResultLabelArrayOutput() GetDatabaseUsersResultLabelArrayOutput {
	return i.ToGetDatabaseUsersResultLabelArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultLabelArray) ToGetDatabaseUsersResultLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultLabelArrayOutput)
}

type GetDatabaseUsersResultLabelOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (o GetDatabaseUsersResultLabelOutput) ToGetDatabaseUsersResultLabelOutput() GetDatabaseUsersResultLabelOutput {
	return o
}

func (o GetDatabaseUsersResultLabelOutput) ToGetDatabaseUsersResultLabelOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelOutput {
	return o
}

// The key that you want to write.
func (o GetDatabaseUsersResultLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that you want to write.
func (o GetDatabaseUsersResultLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultLabelArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (o GetDatabaseUsersResultLabelArrayOutput) ToGetDatabaseUsersResultLabelArrayOutput() GetDatabaseUsersResultLabelArrayOutput {
	return o
}

func (o GetDatabaseUsersResultLabelArrayOutput) ToGetDatabaseUsersResultLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelArrayOutput {
	return o
}

func (o GetDatabaseUsersResultLabelArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResultLabel {
		return vs[0].([]GetDatabaseUsersResultLabel)[vs[1].(int)]
	}).(GetDatabaseUsersResultLabelOutput)
}

type GetDatabaseUsersResultRole struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName string `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName string `pulumi:"databaseName"`
	RoleName     string `pulumi:"roleName"`
}

// GetDatabaseUsersResultRoleInput is an input type that accepts GetDatabaseUsersResultRoleArgs and GetDatabaseUsersResultRoleOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultRoleInput` via:
//
//          GetDatabaseUsersResultRoleArgs{...}
type GetDatabaseUsersResultRoleInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultRoleOutput() GetDatabaseUsersResultRoleOutput
	ToGetDatabaseUsersResultRoleOutputWithContext(context.Context) GetDatabaseUsersResultRoleOutput
}

type GetDatabaseUsersResultRoleArgs struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	RoleName     pulumi.StringInput `pulumi:"roleName"`
}

func (GetDatabaseUsersResultRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultRole)(nil)).Elem()
}

func (i GetDatabaseUsersResultRoleArgs) ToGetDatabaseUsersResultRoleOutput() GetDatabaseUsersResultRoleOutput {
	return i.ToGetDatabaseUsersResultRoleOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultRoleArgs) ToGetDatabaseUsersResultRoleOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultRoleOutput)
}

// GetDatabaseUsersResultRoleArrayInput is an input type that accepts GetDatabaseUsersResultRoleArray and GetDatabaseUsersResultRoleArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultRoleArrayInput` via:
//
//          GetDatabaseUsersResultRoleArray{ GetDatabaseUsersResultRoleArgs{...} }
type GetDatabaseUsersResultRoleArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultRoleArrayOutput() GetDatabaseUsersResultRoleArrayOutput
	ToGetDatabaseUsersResultRoleArrayOutputWithContext(context.Context) GetDatabaseUsersResultRoleArrayOutput
}

type GetDatabaseUsersResultRoleArray []GetDatabaseUsersResultRoleInput

func (GetDatabaseUsersResultRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultRole)(nil)).Elem()
}

func (i GetDatabaseUsersResultRoleArray) ToGetDatabaseUsersResultRoleArrayOutput() GetDatabaseUsersResultRoleArrayOutput {
	return i.ToGetDatabaseUsersResultRoleArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultRoleArray) ToGetDatabaseUsersResultRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultRoleArrayOutput)
}

type GetDatabaseUsersResultRoleOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultRole)(nil)).Elem()
}

func (o GetDatabaseUsersResultRoleOutput) ToGetDatabaseUsersResultRoleOutput() GetDatabaseUsersResultRoleOutput {
	return o
}

func (o GetDatabaseUsersResultRoleOutput) ToGetDatabaseUsersResultRoleOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleOutput {
	return o
}

// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
func (o GetDatabaseUsersResultRoleOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultRole) string { return v.CollectionName }).(pulumi.StringOutput)
}

// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
func (o GetDatabaseUsersResultRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o GetDatabaseUsersResultRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultRoleArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultRole)(nil)).Elem()
}

func (o GetDatabaseUsersResultRoleArrayOutput) ToGetDatabaseUsersResultRoleArrayOutput() GetDatabaseUsersResultRoleArrayOutput {
	return o
}

func (o GetDatabaseUsersResultRoleArrayOutput) ToGetDatabaseUsersResultRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleArrayOutput {
	return o
}

func (o GetDatabaseUsersResultRoleArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResultRole {
		return vs[0].([]GetDatabaseUsersResultRole)[vs[1].(int)]
	}).(GetDatabaseUsersResultRoleOutput)
}

type GetGlobalClusterConfigManagedNamespace struct {
	// (Required) The name of the collection associated with the managed namespace.
	Collection string `pulumi:"collection"`
	// (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey string `pulumi:"customShardKey"`
	// (Required) The name of the database containing the collection.
	Db string `pulumi:"db"`
}

// GetGlobalClusterConfigManagedNamespaceInput is an input type that accepts GetGlobalClusterConfigManagedNamespaceArgs and GetGlobalClusterConfigManagedNamespaceOutput values.
// You can construct a concrete instance of `GetGlobalClusterConfigManagedNamespaceInput` via:
//
//          GetGlobalClusterConfigManagedNamespaceArgs{...}
type GetGlobalClusterConfigManagedNamespaceInput interface {
	pulumi.Input

	ToGetGlobalClusterConfigManagedNamespaceOutput() GetGlobalClusterConfigManagedNamespaceOutput
	ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(context.Context) GetGlobalClusterConfigManagedNamespaceOutput
}

type GetGlobalClusterConfigManagedNamespaceArgs struct {
	// (Required) The name of the collection associated with the managed namespace.
	Collection pulumi.StringInput `pulumi:"collection"`
	// (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey pulumi.StringInput `pulumi:"customShardKey"`
	// (Required) The name of the database containing the collection.
	Db pulumi.StringInput `pulumi:"db"`
}

func (GetGlobalClusterConfigManagedNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GetGlobalClusterConfigManagedNamespaceArgs) ToGetGlobalClusterConfigManagedNamespaceOutput() GetGlobalClusterConfigManagedNamespaceOutput {
	return i.ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(context.Background())
}

func (i GetGlobalClusterConfigManagedNamespaceArgs) ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClusterConfigManagedNamespaceOutput)
}

// GetGlobalClusterConfigManagedNamespaceArrayInput is an input type that accepts GetGlobalClusterConfigManagedNamespaceArray and GetGlobalClusterConfigManagedNamespaceArrayOutput values.
// You can construct a concrete instance of `GetGlobalClusterConfigManagedNamespaceArrayInput` via:
//
//          GetGlobalClusterConfigManagedNamespaceArray{ GetGlobalClusterConfigManagedNamespaceArgs{...} }
type GetGlobalClusterConfigManagedNamespaceArrayInput interface {
	pulumi.Input

	ToGetGlobalClusterConfigManagedNamespaceArrayOutput() GetGlobalClusterConfigManagedNamespaceArrayOutput
	ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Context) GetGlobalClusterConfigManagedNamespaceArrayOutput
}

type GetGlobalClusterConfigManagedNamespaceArray []GetGlobalClusterConfigManagedNamespaceInput

func (GetGlobalClusterConfigManagedNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GetGlobalClusterConfigManagedNamespaceArray) ToGetGlobalClusterConfigManagedNamespaceArrayOutput() GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return i.ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Background())
}

func (i GetGlobalClusterConfigManagedNamespaceArray) ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClusterConfigManagedNamespaceArrayOutput)
}

type GetGlobalClusterConfigManagedNamespaceOutput struct{ *pulumi.OutputState }

func (GetGlobalClusterConfigManagedNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GetGlobalClusterConfigManagedNamespaceOutput) ToGetGlobalClusterConfigManagedNamespaceOutput() GetGlobalClusterConfigManagedNamespaceOutput {
	return o
}

func (o GetGlobalClusterConfigManagedNamespaceOutput) ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceOutput {
	return o
}

// (Required) The name of the collection associated with the managed namespace.
func (o GetGlobalClusterConfigManagedNamespaceOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) string { return v.Collection }).(pulumi.StringOutput)
}

// (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
func (o GetGlobalClusterConfigManagedNamespaceOutput) CustomShardKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) string { return v.CustomShardKey }).(pulumi.StringOutput)
}

// (Required) The name of the database containing the collection.
func (o GetGlobalClusterConfigManagedNamespaceOutput) Db() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) string { return v.Db }).(pulumi.StringOutput)
}

type GetGlobalClusterConfigManagedNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClusterConfigManagedNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GetGlobalClusterConfigManagedNamespaceArrayOutput) ToGetGlobalClusterConfigManagedNamespaceArrayOutput() GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GetGlobalClusterConfigManagedNamespaceArrayOutput) ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GetGlobalClusterConfigManagedNamespaceArrayOutput) Index(i pulumi.IntInput) GetGlobalClusterConfigManagedNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClusterConfigManagedNamespace {
		return vs[0].([]GetGlobalClusterConfigManagedNamespace)[vs[1].(int)]
	}).(GetGlobalClusterConfigManagedNamespaceOutput)
}

type GetNetworkContainersResultType struct {
	// CIDR block that Atlas uses for your clusters. Atlas uses the specified CIDR block for all other Network Peering connections created in the project. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following [private networks](https://tools.ietf.org/html/rfc1918.html#section-3).
	AtlasCidrBlock string `pulumi:"atlasCidrBlock"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	// Unique identifier of the GCP project in which the Network Peering connection resides.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// The Network Peering Container ID.
	Id string `pulumi:"id"`
	// Name of the Network Peering connection in the Atlas project.
	NetworkName string `pulumi:"networkName"`
	// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
	ProviderName string `pulumi:"providerName"`
	// Indicates whether the project has Network Peering connections deployed in the container.
	Provisioned bool `pulumi:"provisioned"`
	// The Atlas Azure region name for where this container exists.
	Region string `pulumi:"region"`
	// The Atlas AWS region name for where this container exists.
	RegionName string `pulumi:"regionName"`
	// The name of the Azure VNet. This value is null until you provision an Azure VNet in the container.
	VnetName string `pulumi:"vnetName"`
	// Unique identifier of the project’s VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetNetworkContainersResultTypeInput is an input type that accepts GetNetworkContainersResultTypeArgs and GetNetworkContainersResultTypeOutput values.
// You can construct a concrete instance of `GetNetworkContainersResultTypeInput` via:
//
//          GetNetworkContainersResultTypeArgs{...}
type GetNetworkContainersResultTypeInput interface {
	pulumi.Input

	ToGetNetworkContainersResultTypeOutput() GetNetworkContainersResultTypeOutput
	ToGetNetworkContainersResultTypeOutputWithContext(context.Context) GetNetworkContainersResultTypeOutput
}

type GetNetworkContainersResultTypeArgs struct {
	// CIDR block that Atlas uses for your clusters. Atlas uses the specified CIDR block for all other Network Peering connections created in the project. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following [private networks](https://tools.ietf.org/html/rfc1918.html#section-3).
	AtlasCidrBlock pulumi.StringInput `pulumi:"atlasCidrBlock"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId pulumi.StringInput `pulumi:"azureSubscriptionId"`
	// Unique identifier of the GCP project in which the Network Peering connection resides.
	GcpProjectId pulumi.StringInput `pulumi:"gcpProjectId"`
	// The Network Peering Container ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the Network Peering connection in the Atlas project.
	NetworkName pulumi.StringInput `pulumi:"networkName"`
	// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Indicates whether the project has Network Peering connections deployed in the container.
	Provisioned pulumi.BoolInput `pulumi:"provisioned"`
	// The Atlas Azure region name for where this container exists.
	Region pulumi.StringInput `pulumi:"region"`
	// The Atlas AWS region name for where this container exists.
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// The name of the Azure VNet. This value is null until you provision an Azure VNet in the container.
	VnetName pulumi.StringInput `pulumi:"vnetName"`
	// Unique identifier of the project’s VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetNetworkContainersResultTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkContainersResultType)(nil)).Elem()
}

func (i GetNetworkContainersResultTypeArgs) ToGetNetworkContainersResultTypeOutput() GetNetworkContainersResultTypeOutput {
	return i.ToGetNetworkContainersResultTypeOutputWithContext(context.Background())
}

func (i GetNetworkContainersResultTypeArgs) ToGetNetworkContainersResultTypeOutputWithContext(ctx context.Context) GetNetworkContainersResultTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkContainersResultTypeOutput)
}

// GetNetworkContainersResultTypeArrayInput is an input type that accepts GetNetworkContainersResultTypeArray and GetNetworkContainersResultTypeArrayOutput values.
// You can construct a concrete instance of `GetNetworkContainersResultTypeArrayInput` via:
//
//          GetNetworkContainersResultTypeArray{ GetNetworkContainersResultTypeArgs{...} }
type GetNetworkContainersResultTypeArrayInput interface {
	pulumi.Input

	ToGetNetworkContainersResultTypeArrayOutput() GetNetworkContainersResultTypeArrayOutput
	ToGetNetworkContainersResultTypeArrayOutputWithContext(context.Context) GetNetworkContainersResultTypeArrayOutput
}

type GetNetworkContainersResultTypeArray []GetNetworkContainersResultTypeInput

func (GetNetworkContainersResultTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkContainersResultType)(nil)).Elem()
}

func (i GetNetworkContainersResultTypeArray) ToGetNetworkContainersResultTypeArrayOutput() GetNetworkContainersResultTypeArrayOutput {
	return i.ToGetNetworkContainersResultTypeArrayOutputWithContext(context.Background())
}

func (i GetNetworkContainersResultTypeArray) ToGetNetworkContainersResultTypeArrayOutputWithContext(ctx context.Context) GetNetworkContainersResultTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkContainersResultTypeArrayOutput)
}

type GetNetworkContainersResultTypeOutput struct{ *pulumi.OutputState }

func (GetNetworkContainersResultTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkContainersResultType)(nil)).Elem()
}

func (o GetNetworkContainersResultTypeOutput) ToGetNetworkContainersResultTypeOutput() GetNetworkContainersResultTypeOutput {
	return o
}

func (o GetNetworkContainersResultTypeOutput) ToGetNetworkContainersResultTypeOutputWithContext(ctx context.Context) GetNetworkContainersResultTypeOutput {
	return o
}

// CIDR block that Atlas uses for your clusters. Atlas uses the specified CIDR block for all other Network Peering connections created in the project. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following [private networks](https://tools.ietf.org/html/rfc1918.html#section-3).
func (o GetNetworkContainersResultTypeOutput) AtlasCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResultType) string { return v.AtlasCidrBlock }).(pulumi.StringOutput)
}

// Unique identifer of the Azure subscription in which the VNet resides.
func (o GetNetworkContainersResultTypeOutput) AzureSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResultType) string { return v.AzureSubscriptionId }).(pulumi.StringOutput)
}

// Unique identifier of the GCP project in which the Network Peering connection resides.
func (o GetNetworkContainersResultTypeOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResultType) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

// The Network Peering Container ID.
func (o GetNetworkContainersResultTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResultType) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the Network Peering connection in the Atlas project.
func (o GetNetworkContainersResultTypeOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResultType) string { return v.NetworkName }).(pulumi.StringOutput)
}

// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
func (o GetNetworkContainersResultTypeOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResultType) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Indicates whether the project has Network Peering connections deployed in the container.
func (o GetNetworkContainersResultTypeOutput) Provisioned() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkContainersResultType) bool { return v.Provisioned }).(pulumi.BoolOutput)
}

// The Atlas Azure region name for where this container exists.
func (o GetNetworkContainersResultTypeOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResultType) string { return v.Region }).(pulumi.StringOutput)
}

// The Atlas AWS region name for where this container exists.
func (o GetNetworkContainersResultTypeOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResultType) string { return v.RegionName }).(pulumi.StringOutput)
}

// The name of the Azure VNet. This value is null until you provision an Azure VNet in the container.
func (o GetNetworkContainersResultTypeOutput) VnetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResultType) string { return v.VnetName }).(pulumi.StringOutput)
}

// Unique identifier of the project’s VPC.
func (o GetNetworkContainersResultTypeOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResultType) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetNetworkContainersResultTypeArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkContainersResultTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkContainersResultType)(nil)).Elem()
}

func (o GetNetworkContainersResultTypeArrayOutput) ToGetNetworkContainersResultTypeArrayOutput() GetNetworkContainersResultTypeArrayOutput {
	return o
}

func (o GetNetworkContainersResultTypeArrayOutput) ToGetNetworkContainersResultTypeArrayOutputWithContext(ctx context.Context) GetNetworkContainersResultTypeArrayOutput {
	return o
}

func (o GetNetworkContainersResultTypeArrayOutput) Index(i pulumi.IntInput) GetNetworkContainersResultTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkContainersResultType {
		return vs[0].([]GetNetworkContainersResultType)[vs[1].(int)]
	}).(GetNetworkContainersResultTypeOutput)
}

type GetNetworkPeeringsResultType struct {
	// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
	AccepterRegionName string `pulumi:"accepterRegionName"`
	// Unique identifier for an Azure AD directory.
	AtlasCidrBlock string `pulumi:"atlasCidrBlock"`
	// Account ID of the owner of the peer VPC.
	AwsAccountId string `pulumi:"awsAccountId"`
	// Unique identifier for an Azure AD directory.
	AzureDirectoryId string `pulumi:"azureDirectoryId"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	// Unique identifier for the peering connection.
	ConnectionId string `pulumi:"connectionId"`
	ContainerId  string `pulumi:"containerId"`
	// When `"status" : "FAILED"`, Atlas provides a description of the error.
	ErrorMessage string `pulumi:"errorMessage"`
	// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
	ErrorState string `pulumi:"errorState"`
	// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
	ErrorStateName string `pulumi:"errorStateName"`
	// GCP project ID of the owner of the network peer.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// Name of the network peer to which Atlas connects.
	NetworkName string `pulumi:"networkName"`
	// Atlas assigned unique ID for the peering connection.
	PeeringId string `pulumi:"peeringId"`
	// Cloud provider for this VPC peering connection. If omitted, Atlas sets this parameter to AWS. (Possible Values `AWS`, `AZURE`, `GCP`).
	ProviderName string `pulumi:"providerName"`
	// Name of your Azure resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Peer VPC CIDR block or subnet.
	RouteTableCidrBlock string `pulumi:"routeTableCidrBlock"`
	// Status of the Atlas network peering connection: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING`, `WAITING_FOR_USER`.
	Status string `pulumi:"status"`
	// The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
	StatusName string `pulumi:"statusName"`
	// Name of your Azure VNet.
	VnetName string `pulumi:"vnetName"`
	// Unique identifier of the peer VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetNetworkPeeringsResultTypeInput is an input type that accepts GetNetworkPeeringsResultTypeArgs and GetNetworkPeeringsResultTypeOutput values.
// You can construct a concrete instance of `GetNetworkPeeringsResultTypeInput` via:
//
//          GetNetworkPeeringsResultTypeArgs{...}
type GetNetworkPeeringsResultTypeInput interface {
	pulumi.Input

	ToGetNetworkPeeringsResultTypeOutput() GetNetworkPeeringsResultTypeOutput
	ToGetNetworkPeeringsResultTypeOutputWithContext(context.Context) GetNetworkPeeringsResultTypeOutput
}

type GetNetworkPeeringsResultTypeArgs struct {
	// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
	AccepterRegionName pulumi.StringInput `pulumi:"accepterRegionName"`
	// Unique identifier for an Azure AD directory.
	AtlasCidrBlock pulumi.StringInput `pulumi:"atlasCidrBlock"`
	// Account ID of the owner of the peer VPC.
	AwsAccountId pulumi.StringInput `pulumi:"awsAccountId"`
	// Unique identifier for an Azure AD directory.
	AzureDirectoryId pulumi.StringInput `pulumi:"azureDirectoryId"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId pulumi.StringInput `pulumi:"azureSubscriptionId"`
	// Unique identifier for the peering connection.
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
	ContainerId  pulumi.StringInput `pulumi:"containerId"`
	// When `"status" : "FAILED"`, Atlas provides a description of the error.
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
	ErrorState pulumi.StringInput `pulumi:"errorState"`
	// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
	ErrorStateName pulumi.StringInput `pulumi:"errorStateName"`
	// GCP project ID of the owner of the network peer.
	GcpProjectId pulumi.StringInput `pulumi:"gcpProjectId"`
	// Name of the network peer to which Atlas connects.
	NetworkName pulumi.StringInput `pulumi:"networkName"`
	// Atlas assigned unique ID for the peering connection.
	PeeringId pulumi.StringInput `pulumi:"peeringId"`
	// Cloud provider for this VPC peering connection. If omitted, Atlas sets this parameter to AWS. (Possible Values `AWS`, `AZURE`, `GCP`).
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Name of your Azure resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Peer VPC CIDR block or subnet.
	RouteTableCidrBlock pulumi.StringInput `pulumi:"routeTableCidrBlock"`
	// Status of the Atlas network peering connection: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING`, `WAITING_FOR_USER`.
	Status pulumi.StringInput `pulumi:"status"`
	// The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
	StatusName pulumi.StringInput `pulumi:"statusName"`
	// Name of your Azure VNet.
	VnetName pulumi.StringInput `pulumi:"vnetName"`
	// Unique identifier of the peer VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetNetworkPeeringsResultTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPeeringsResultType)(nil)).Elem()
}

func (i GetNetworkPeeringsResultTypeArgs) ToGetNetworkPeeringsResultTypeOutput() GetNetworkPeeringsResultTypeOutput {
	return i.ToGetNetworkPeeringsResultTypeOutputWithContext(context.Background())
}

func (i GetNetworkPeeringsResultTypeArgs) ToGetNetworkPeeringsResultTypeOutputWithContext(ctx context.Context) GetNetworkPeeringsResultTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPeeringsResultTypeOutput)
}

// GetNetworkPeeringsResultTypeArrayInput is an input type that accepts GetNetworkPeeringsResultTypeArray and GetNetworkPeeringsResultTypeArrayOutput values.
// You can construct a concrete instance of `GetNetworkPeeringsResultTypeArrayInput` via:
//
//          GetNetworkPeeringsResultTypeArray{ GetNetworkPeeringsResultTypeArgs{...} }
type GetNetworkPeeringsResultTypeArrayInput interface {
	pulumi.Input

	ToGetNetworkPeeringsResultTypeArrayOutput() GetNetworkPeeringsResultTypeArrayOutput
	ToGetNetworkPeeringsResultTypeArrayOutputWithContext(context.Context) GetNetworkPeeringsResultTypeArrayOutput
}

type GetNetworkPeeringsResultTypeArray []GetNetworkPeeringsResultTypeInput

func (GetNetworkPeeringsResultTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPeeringsResultType)(nil)).Elem()
}

func (i GetNetworkPeeringsResultTypeArray) ToGetNetworkPeeringsResultTypeArrayOutput() GetNetworkPeeringsResultTypeArrayOutput {
	return i.ToGetNetworkPeeringsResultTypeArrayOutputWithContext(context.Background())
}

func (i GetNetworkPeeringsResultTypeArray) ToGetNetworkPeeringsResultTypeArrayOutputWithContext(ctx context.Context) GetNetworkPeeringsResultTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPeeringsResultTypeArrayOutput)
}

type GetNetworkPeeringsResultTypeOutput struct{ *pulumi.OutputState }

func (GetNetworkPeeringsResultTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPeeringsResultType)(nil)).Elem()
}

func (o GetNetworkPeeringsResultTypeOutput) ToGetNetworkPeeringsResultTypeOutput() GetNetworkPeeringsResultTypeOutput {
	return o
}

func (o GetNetworkPeeringsResultTypeOutput) ToGetNetworkPeeringsResultTypeOutputWithContext(ctx context.Context) GetNetworkPeeringsResultTypeOutput {
	return o
}

// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
func (o GetNetworkPeeringsResultTypeOutput) AccepterRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.AccepterRegionName }).(pulumi.StringOutput)
}

// Unique identifier for an Azure AD directory.
func (o GetNetworkPeeringsResultTypeOutput) AtlasCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.AtlasCidrBlock }).(pulumi.StringOutput)
}

// Account ID of the owner of the peer VPC.
func (o GetNetworkPeeringsResultTypeOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.AwsAccountId }).(pulumi.StringOutput)
}

// Unique identifier for an Azure AD directory.
func (o GetNetworkPeeringsResultTypeOutput) AzureDirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.AzureDirectoryId }).(pulumi.StringOutput)
}

// Unique identifer of the Azure subscription in which the VNet resides.
func (o GetNetworkPeeringsResultTypeOutput) AzureSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.AzureSubscriptionId }).(pulumi.StringOutput)
}

// Unique identifier for the peering connection.
func (o GetNetworkPeeringsResultTypeOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.ConnectionId }).(pulumi.StringOutput)
}

func (o GetNetworkPeeringsResultTypeOutput) ContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.ContainerId }).(pulumi.StringOutput)
}

// When `"status" : "FAILED"`, Atlas provides a description of the error.
func (o GetNetworkPeeringsResultTypeOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
func (o GetNetworkPeeringsResultTypeOutput) ErrorState() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.ErrorState }).(pulumi.StringOutput)
}

// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
func (o GetNetworkPeeringsResultTypeOutput) ErrorStateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.ErrorStateName }).(pulumi.StringOutput)
}

// GCP project ID of the owner of the network peer.
func (o GetNetworkPeeringsResultTypeOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

// Name of the network peer to which Atlas connects.
func (o GetNetworkPeeringsResultTypeOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.NetworkName }).(pulumi.StringOutput)
}

// Atlas assigned unique ID for the peering connection.
func (o GetNetworkPeeringsResultTypeOutput) PeeringId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.PeeringId }).(pulumi.StringOutput)
}

// Cloud provider for this VPC peering connection. If omitted, Atlas sets this parameter to AWS. (Possible Values `AWS`, `AZURE`, `GCP`).
func (o GetNetworkPeeringsResultTypeOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Name of your Azure resource group.
func (o GetNetworkPeeringsResultTypeOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Peer VPC CIDR block or subnet.
func (o GetNetworkPeeringsResultTypeOutput) RouteTableCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.RouteTableCidrBlock }).(pulumi.StringOutput)
}

// Status of the Atlas network peering connection: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING`, `WAITING_FOR_USER`.
func (o GetNetworkPeeringsResultTypeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.Status }).(pulumi.StringOutput)
}

// The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
func (o GetNetworkPeeringsResultTypeOutput) StatusName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.StatusName }).(pulumi.StringOutput)
}

// Name of your Azure VNet.
func (o GetNetworkPeeringsResultTypeOutput) VnetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.VnetName }).(pulumi.StringOutput)
}

// Unique identifier of the peer VPC.
func (o GetNetworkPeeringsResultTypeOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResultType) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetNetworkPeeringsResultTypeArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkPeeringsResultTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPeeringsResultType)(nil)).Elem()
}

func (o GetNetworkPeeringsResultTypeArrayOutput) ToGetNetworkPeeringsResultTypeArrayOutput() GetNetworkPeeringsResultTypeArrayOutput {
	return o
}

func (o GetNetworkPeeringsResultTypeArrayOutput) ToGetNetworkPeeringsResultTypeArrayOutputWithContext(ctx context.Context) GetNetworkPeeringsResultTypeArrayOutput {
	return o
}

func (o GetNetworkPeeringsResultTypeArrayOutput) Index(i pulumi.IntInput) GetNetworkPeeringsResultTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkPeeringsResultType {
		return vs[0].([]GetNetworkPeeringsResultType)[vs[1].(int)]
	}).(GetNetworkPeeringsResultTypeOutput)
}

type GetProjectTeam struct {
	RoleNames []string `pulumi:"roleNames"`
	TeamId    string   `pulumi:"teamId"`
}

// GetProjectTeamInput is an input type that accepts GetProjectTeamArgs and GetProjectTeamOutput values.
// You can construct a concrete instance of `GetProjectTeamInput` via:
//
//          GetProjectTeamArgs{...}
type GetProjectTeamInput interface {
	pulumi.Input

	ToGetProjectTeamOutput() GetProjectTeamOutput
	ToGetProjectTeamOutputWithContext(context.Context) GetProjectTeamOutput
}

type GetProjectTeamArgs struct {
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	TeamId    pulumi.StringInput      `pulumi:"teamId"`
}

func (GetProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTeam)(nil)).Elem()
}

func (i GetProjectTeamArgs) ToGetProjectTeamOutput() GetProjectTeamOutput {
	return i.ToGetProjectTeamOutputWithContext(context.Background())
}

func (i GetProjectTeamArgs) ToGetProjectTeamOutputWithContext(ctx context.Context) GetProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTeamOutput)
}

// GetProjectTeamArrayInput is an input type that accepts GetProjectTeamArray and GetProjectTeamArrayOutput values.
// You can construct a concrete instance of `GetProjectTeamArrayInput` via:
//
//          GetProjectTeamArray{ GetProjectTeamArgs{...} }
type GetProjectTeamArrayInput interface {
	pulumi.Input

	ToGetProjectTeamArrayOutput() GetProjectTeamArrayOutput
	ToGetProjectTeamArrayOutputWithContext(context.Context) GetProjectTeamArrayOutput
}

type GetProjectTeamArray []GetProjectTeamInput

func (GetProjectTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTeam)(nil)).Elem()
}

func (i GetProjectTeamArray) ToGetProjectTeamArrayOutput() GetProjectTeamArrayOutput {
	return i.ToGetProjectTeamArrayOutputWithContext(context.Background())
}

func (i GetProjectTeamArray) ToGetProjectTeamArrayOutputWithContext(ctx context.Context) GetProjectTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTeamArrayOutput)
}

type GetProjectTeamOutput struct{ *pulumi.OutputState }

func (GetProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTeam)(nil)).Elem()
}

func (o GetProjectTeamOutput) ToGetProjectTeamOutput() GetProjectTeamOutput {
	return o
}

func (o GetProjectTeamOutput) ToGetProjectTeamOutputWithContext(ctx context.Context) GetProjectTeamOutput {
	return o
}

func (o GetProjectTeamOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectTeam) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

func (o GetProjectTeamOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTeam) string { return v.TeamId }).(pulumi.StringOutput)
}

type GetProjectTeamArrayOutput struct{ *pulumi.OutputState }

func (GetProjectTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTeam)(nil)).Elem()
}

func (o GetProjectTeamArrayOutput) ToGetProjectTeamArrayOutput() GetProjectTeamArrayOutput {
	return o
}

func (o GetProjectTeamArrayOutput) ToGetProjectTeamArrayOutputWithContext(ctx context.Context) GetProjectTeamArrayOutput {
	return o
}

func (o GetProjectTeamArrayOutput) Index(i pulumi.IntInput) GetProjectTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectTeam {
		return vs[0].([]GetProjectTeam)[vs[1].(int)]
	}).(GetProjectTeamOutput)
}

type GetProjectsResultType struct {
	ClusterCount int    `pulumi:"clusterCount"`
	Created      string `pulumi:"created"`
	// Autogenerated Unique ID for this data source.
	Id string `pulumi:"id"`
	// The name of the project you want to create. (Cannot be changed via this Provider after creation.)
	Name string `pulumi:"name"`
	// The ID of the organization you want to create the project within.
	// *`clusterCount` - The number of Atlas clusters deployed in the project.
	// *`created` - The ISO-8601-formatted timestamp of when Atlas created the project.
	// * `teams.#.team_id` - The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	// * `teams.#.role_names` - Each string in the array represents a project role assigned to the team. Every user associated with the team inherits these roles.
	//   The following are valid roles:
	// * `GROUP_OWNER`
	// * `GROUP_READ_ONLY`
	// * `GROUP_DATA_ACCESS_ADMIN`
	// * `GROUP_DATA_ACCESS_READ_WRITE`
	// * `GROUP_DATA_ACCESS_READ_ONLY`
	// * `GROUP_CLUSTER_MANAGER`
	OrgId string                  `pulumi:"orgId"`
	Teams []GetProjectsResultTeam `pulumi:"teams"`
}

// GetProjectsResultTypeInput is an input type that accepts GetProjectsResultTypeArgs and GetProjectsResultTypeOutput values.
// You can construct a concrete instance of `GetProjectsResultTypeInput` via:
//
//          GetProjectsResultTypeArgs{...}
type GetProjectsResultTypeInput interface {
	pulumi.Input

	ToGetProjectsResultTypeOutput() GetProjectsResultTypeOutput
	ToGetProjectsResultTypeOutputWithContext(context.Context) GetProjectsResultTypeOutput
}

type GetProjectsResultTypeArgs struct {
	ClusterCount pulumi.IntInput    `pulumi:"clusterCount"`
	Created      pulumi.StringInput `pulumi:"created"`
	// Autogenerated Unique ID for this data source.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the project you want to create. (Cannot be changed via this Provider after creation.)
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the organization you want to create the project within.
	// *`clusterCount` - The number of Atlas clusters deployed in the project.
	// *`created` - The ISO-8601-formatted timestamp of when Atlas created the project.
	// * `teams.#.team_id` - The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	// * `teams.#.role_names` - Each string in the array represents a project role assigned to the team. Every user associated with the team inherits these roles.
	//   The following are valid roles:
	// * `GROUP_OWNER`
	// * `GROUP_READ_ONLY`
	// * `GROUP_DATA_ACCESS_ADMIN`
	// * `GROUP_DATA_ACCESS_READ_WRITE`
	// * `GROUP_DATA_ACCESS_READ_ONLY`
	// * `GROUP_CLUSTER_MANAGER`
	OrgId pulumi.StringInput              `pulumi:"orgId"`
	Teams GetProjectsResultTeamArrayInput `pulumi:"teams"`
}

func (GetProjectsResultTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultType)(nil)).Elem()
}

func (i GetProjectsResultTypeArgs) ToGetProjectsResultTypeOutput() GetProjectsResultTypeOutput {
	return i.ToGetProjectsResultTypeOutputWithContext(context.Background())
}

func (i GetProjectsResultTypeArgs) ToGetProjectsResultTypeOutputWithContext(ctx context.Context) GetProjectsResultTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultTypeOutput)
}

// GetProjectsResultTypeArrayInput is an input type that accepts GetProjectsResultTypeArray and GetProjectsResultTypeArrayOutput values.
// You can construct a concrete instance of `GetProjectsResultTypeArrayInput` via:
//
//          GetProjectsResultTypeArray{ GetProjectsResultTypeArgs{...} }
type GetProjectsResultTypeArrayInput interface {
	pulumi.Input

	ToGetProjectsResultTypeArrayOutput() GetProjectsResultTypeArrayOutput
	ToGetProjectsResultTypeArrayOutputWithContext(context.Context) GetProjectsResultTypeArrayOutput
}

type GetProjectsResultTypeArray []GetProjectsResultTypeInput

func (GetProjectsResultTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultType)(nil)).Elem()
}

func (i GetProjectsResultTypeArray) ToGetProjectsResultTypeArrayOutput() GetProjectsResultTypeArrayOutput {
	return i.ToGetProjectsResultTypeArrayOutputWithContext(context.Background())
}

func (i GetProjectsResultTypeArray) ToGetProjectsResultTypeArrayOutputWithContext(ctx context.Context) GetProjectsResultTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultTypeArrayOutput)
}

type GetProjectsResultTypeOutput struct{ *pulumi.OutputState }

func (GetProjectsResultTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultType)(nil)).Elem()
}

func (o GetProjectsResultTypeOutput) ToGetProjectsResultTypeOutput() GetProjectsResultTypeOutput {
	return o
}

func (o GetProjectsResultTypeOutput) ToGetProjectsResultTypeOutputWithContext(ctx context.Context) GetProjectsResultTypeOutput {
	return o
}

func (o GetProjectsResultTypeOutput) ClusterCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsResultType) int { return v.ClusterCount }).(pulumi.IntOutput)
}

func (o GetProjectsResultTypeOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResultType) string { return v.Created }).(pulumi.StringOutput)
}

// Autogenerated Unique ID for this data source.
func (o GetProjectsResultTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResultType) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the project you want to create. (Cannot be changed via this Provider after creation.)
func (o GetProjectsResultTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResultType) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the organization you want to create the project within.
// *`clusterCount` - The number of Atlas clusters deployed in the project.
// *`created` - The ISO-8601-formatted timestamp of when Atlas created the project.
// * `teams.#.team_id` - The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
// * `teams.#.role_names` - Each string in the array represents a project role assigned to the team. Every user associated with the team inherits these roles.
//   The following are valid roles:
// * `GROUP_OWNER`
// * `GROUP_READ_ONLY`
// * `GROUP_DATA_ACCESS_ADMIN`
// * `GROUP_DATA_ACCESS_READ_WRITE`
// * `GROUP_DATA_ACCESS_READ_ONLY`
// * `GROUP_CLUSTER_MANAGER`
func (o GetProjectsResultTypeOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResultType) string { return v.OrgId }).(pulumi.StringOutput)
}

func (o GetProjectsResultTypeOutput) Teams() GetProjectsResultTeamArrayOutput {
	return o.ApplyT(func(v GetProjectsResultType) []GetProjectsResultTeam { return v.Teams }).(GetProjectsResultTeamArrayOutput)
}

type GetProjectsResultTypeArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsResultTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultType)(nil)).Elem()
}

func (o GetProjectsResultTypeArrayOutput) ToGetProjectsResultTypeArrayOutput() GetProjectsResultTypeArrayOutput {
	return o
}

func (o GetProjectsResultTypeArrayOutput) ToGetProjectsResultTypeArrayOutputWithContext(ctx context.Context) GetProjectsResultTypeArrayOutput {
	return o
}

func (o GetProjectsResultTypeArrayOutput) Index(i pulumi.IntInput) GetProjectsResultTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsResultType {
		return vs[0].([]GetProjectsResultType)[vs[1].(int)]
	}).(GetProjectsResultTypeOutput)
}

type GetProjectsResultTeam struct {
	RoleNames []string `pulumi:"roleNames"`
	TeamId    string   `pulumi:"teamId"`
}

// GetProjectsResultTeamInput is an input type that accepts GetProjectsResultTeamArgs and GetProjectsResultTeamOutput values.
// You can construct a concrete instance of `GetProjectsResultTeamInput` via:
//
//          GetProjectsResultTeamArgs{...}
type GetProjectsResultTeamInput interface {
	pulumi.Input

	ToGetProjectsResultTeamOutput() GetProjectsResultTeamOutput
	ToGetProjectsResultTeamOutputWithContext(context.Context) GetProjectsResultTeamOutput
}

type GetProjectsResultTeamArgs struct {
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	TeamId    pulumi.StringInput      `pulumi:"teamId"`
}

func (GetProjectsResultTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultTeam)(nil)).Elem()
}

func (i GetProjectsResultTeamArgs) ToGetProjectsResultTeamOutput() GetProjectsResultTeamOutput {
	return i.ToGetProjectsResultTeamOutputWithContext(context.Background())
}

func (i GetProjectsResultTeamArgs) ToGetProjectsResultTeamOutputWithContext(ctx context.Context) GetProjectsResultTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultTeamOutput)
}

// GetProjectsResultTeamArrayInput is an input type that accepts GetProjectsResultTeamArray and GetProjectsResultTeamArrayOutput values.
// You can construct a concrete instance of `GetProjectsResultTeamArrayInput` via:
//
//          GetProjectsResultTeamArray{ GetProjectsResultTeamArgs{...} }
type GetProjectsResultTeamArrayInput interface {
	pulumi.Input

	ToGetProjectsResultTeamArrayOutput() GetProjectsResultTeamArrayOutput
	ToGetProjectsResultTeamArrayOutputWithContext(context.Context) GetProjectsResultTeamArrayOutput
}

type GetProjectsResultTeamArray []GetProjectsResultTeamInput

func (GetProjectsResultTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultTeam)(nil)).Elem()
}

func (i GetProjectsResultTeamArray) ToGetProjectsResultTeamArrayOutput() GetProjectsResultTeamArrayOutput {
	return i.ToGetProjectsResultTeamArrayOutputWithContext(context.Background())
}

func (i GetProjectsResultTeamArray) ToGetProjectsResultTeamArrayOutputWithContext(ctx context.Context) GetProjectsResultTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultTeamArrayOutput)
}

type GetProjectsResultTeamOutput struct{ *pulumi.OutputState }

func (GetProjectsResultTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultTeam)(nil)).Elem()
}

func (o GetProjectsResultTeamOutput) ToGetProjectsResultTeamOutput() GetProjectsResultTeamOutput {
	return o
}

func (o GetProjectsResultTeamOutput) ToGetProjectsResultTeamOutputWithContext(ctx context.Context) GetProjectsResultTeamOutput {
	return o
}

func (o GetProjectsResultTeamOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsResultTeam) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

func (o GetProjectsResultTeamOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResultTeam) string { return v.TeamId }).(pulumi.StringOutput)
}

type GetProjectsResultTeamArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsResultTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultTeam)(nil)).Elem()
}

func (o GetProjectsResultTeamArrayOutput) ToGetProjectsResultTeamArrayOutput() GetProjectsResultTeamArrayOutput {
	return o
}

func (o GetProjectsResultTeamArrayOutput) ToGetProjectsResultTeamArrayOutputWithContext(ctx context.Context) GetProjectsResultTeamArrayOutput {
	return o
}

func (o GetProjectsResultTeamArrayOutput) Index(i pulumi.IntInput) GetProjectsResultTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsResultTeam {
		return vs[0].([]GetProjectsResultTeam)[vs[1].(int)]
	}).(GetProjectsResultTeamOutput)
}

func init() {
	pulumi.RegisterOutputType(AlertConfigurationMatcherOutput{})
	pulumi.RegisterOutputType(AlertConfigurationMatcherArrayOutput{})
	pulumi.RegisterOutputType(AlertConfigurationMetricThresholdOutput{})
	pulumi.RegisterOutputType(AlertConfigurationMetricThresholdPtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationNotificationOutput{})
	pulumi.RegisterOutputType(AlertConfigurationNotificationArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotRestoreJobDeliveryTypeOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotRestoreJobDeliveryTypePtrOutput{})
	pulumi.RegisterOutputType(ClusterAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(ClusterAdvancedConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClusterBiConnectorOutput{})
	pulumi.RegisterOutputType(ClusterBiConnectorPtrOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringsOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringsPtrOutput{})
	pulumi.RegisterOutputType(ClusterLabelOutput{})
	pulumi.RegisterOutputType(ClusterLabelArrayOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecRegionsConfigOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecRegionsConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionArrayOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionResourceOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionResourceArrayOutput{})
	pulumi.RegisterOutputType(CustomDbRoleInheritedRoleOutput{})
	pulumi.RegisterOutputType(CustomDbRoleInheritedRoleArrayOutput{})
	pulumi.RegisterOutputType(DatabaseUserLabelOutput{})
	pulumi.RegisterOutputType(DatabaseUserLabelArrayOutput{})
	pulumi.RegisterOutputType(DatabaseUserRoleOutput{})
	pulumi.RegisterOutputType(DatabaseUserRoleArrayOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAwsKmsOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAwsKmsPtrOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAzureKeyVaultOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAzureKeyVaultPtrOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestGoogleCloudKmsOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestGoogleCloudKmsPtrOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigCustomZoneMappingOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigCustomZoneMappingArrayOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigManagedNamespaceOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigManagedNamespaceArrayOutput{})
	pulumi.RegisterOutputType(ProjectTeamOutput{})
	pulumi.RegisterOutputType(ProjectTeamArrayOutput{})
	pulumi.RegisterOutputType(X509AuthenticationDatabaseUserCertificateOutput{})
	pulumi.RegisterOutputType(X509AuthenticationDatabaseUserCertificateArrayOutput{})
	pulumi.RegisterOutputType(Get509AuthenticationDatabaseUserCertificateOutput{})
	pulumi.RegisterOutputType(Get509AuthenticationDatabaseUserCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMatcherOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMatcherArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMetricThresholdOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationNotificationOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationNotificationArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotRestoreJobsResultTypeOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotRestoreJobsResultTypeArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotsResultTypeOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotsResultTypeArrayOutput{})
	pulumi.RegisterOutputType(GetClusterBiConnectorOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringsOutput{})
	pulumi.RegisterOutputType(GetClusterLabelOutput{})
	pulumi.RegisterOutputType(GetClusterLabelArrayOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecRegionsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecRegionsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultTypeOutput{})
	pulumi.RegisterOutputType(GetClustersResultTypeArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultBiConnectorOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringsOutput{})
	pulumi.RegisterOutputType(GetClustersResultLabelOutput{})
	pulumi.RegisterOutputType(GetClustersResultLabelArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecRegionsConfigOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecRegionsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionResourceOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionResourceArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleInheritedRoleOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleInheritedRoleArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultTypeOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultTypeArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionResourceOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionResourceArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultInheritedRoleOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultInheritedRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserLabelOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserLabelArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserRoleOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultTypeOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultTypeArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultLabelOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultLabelArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultRoleOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultRoleArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClusterConfigManagedNamespaceOutput{})
	pulumi.RegisterOutputType(GetGlobalClusterConfigManagedNamespaceArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkContainersResultTypeOutput{})
	pulumi.RegisterOutputType(GetNetworkContainersResultTypeArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkPeeringsResultTypeOutput{})
	pulumi.RegisterOutputType(GetNetworkPeeringsResultTypeArrayOutput{})
	pulumi.RegisterOutputType(GetProjectTeamOutput{})
	pulumi.RegisterOutputType(GetProjectTeamArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsResultTypeOutput{})
	pulumi.RegisterOutputType(GetProjectsResultTypeArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsResultTeamOutput{})
	pulumi.RegisterOutputType(GetProjectsResultTeamArrayOutput{})
}
