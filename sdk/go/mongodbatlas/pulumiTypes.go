// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AdvancedClusterAdvancedConfiguration struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern *string `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern *string `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong *bool `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled *bool `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol *string `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan *bool `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
	OplogMinRetentionHours *int `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb *int `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector *int `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector *int `pulumi:"sampleSizeBiConnector"`
}

// AdvancedClusterAdvancedConfigurationInput is an input type that accepts AdvancedClusterAdvancedConfigurationArgs and AdvancedClusterAdvancedConfigurationOutput values.
// You can construct a concrete instance of `AdvancedClusterAdvancedConfigurationInput` via:
//
//	AdvancedClusterAdvancedConfigurationArgs{...}
type AdvancedClusterAdvancedConfigurationInput interface {
	pulumi.Input

	ToAdvancedClusterAdvancedConfigurationOutput() AdvancedClusterAdvancedConfigurationOutput
	ToAdvancedClusterAdvancedConfigurationOutputWithContext(context.Context) AdvancedClusterAdvancedConfigurationOutput
}

type AdvancedClusterAdvancedConfigurationArgs struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern pulumi.StringPtrInput `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern pulumi.StringPtrInput `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong pulumi.BoolPtrInput `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled pulumi.BoolPtrInput `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol pulumi.StringPtrInput `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan pulumi.BoolPtrInput `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
	OplogMinRetentionHours pulumi.IntPtrInput `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb pulumi.IntPtrInput `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector pulumi.IntPtrInput `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector pulumi.IntPtrInput `pulumi:"sampleSizeBiConnector"`
}

func (AdvancedClusterAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (i AdvancedClusterAdvancedConfigurationArgs) ToAdvancedClusterAdvancedConfigurationOutput() AdvancedClusterAdvancedConfigurationOutput {
	return i.ToAdvancedClusterAdvancedConfigurationOutputWithContext(context.Background())
}

func (i AdvancedClusterAdvancedConfigurationArgs) ToAdvancedClusterAdvancedConfigurationOutputWithContext(ctx context.Context) AdvancedClusterAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterAdvancedConfigurationOutput)
}

func (i AdvancedClusterAdvancedConfigurationArgs) ToAdvancedClusterAdvancedConfigurationPtrOutput() AdvancedClusterAdvancedConfigurationPtrOutput {
	return i.ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterAdvancedConfigurationArgs) ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) AdvancedClusterAdvancedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterAdvancedConfigurationOutput).ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(ctx)
}

// AdvancedClusterAdvancedConfigurationPtrInput is an input type that accepts AdvancedClusterAdvancedConfigurationArgs, AdvancedClusterAdvancedConfigurationPtr and AdvancedClusterAdvancedConfigurationPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterAdvancedConfigurationPtrInput` via:
//
//	        AdvancedClusterAdvancedConfigurationArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterAdvancedConfigurationPtrInput interface {
	pulumi.Input

	ToAdvancedClusterAdvancedConfigurationPtrOutput() AdvancedClusterAdvancedConfigurationPtrOutput
	ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(context.Context) AdvancedClusterAdvancedConfigurationPtrOutput
}

type advancedClusterAdvancedConfigurationPtrType AdvancedClusterAdvancedConfigurationArgs

func AdvancedClusterAdvancedConfigurationPtr(v *AdvancedClusterAdvancedConfigurationArgs) AdvancedClusterAdvancedConfigurationPtrInput {
	return (*advancedClusterAdvancedConfigurationPtrType)(v)
}

func (*advancedClusterAdvancedConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (i *advancedClusterAdvancedConfigurationPtrType) ToAdvancedClusterAdvancedConfigurationPtrOutput() AdvancedClusterAdvancedConfigurationPtrOutput {
	return i.ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (i *advancedClusterAdvancedConfigurationPtrType) ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) AdvancedClusterAdvancedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterAdvancedConfigurationPtrOutput)
}

type AdvancedClusterAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (AdvancedClusterAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (o AdvancedClusterAdvancedConfigurationOutput) ToAdvancedClusterAdvancedConfigurationOutput() AdvancedClusterAdvancedConfigurationOutput {
	return o
}

func (o AdvancedClusterAdvancedConfigurationOutput) ToAdvancedClusterAdvancedConfigurationOutputWithContext(ctx context.Context) AdvancedClusterAdvancedConfigurationOutput {
	return o
}

func (o AdvancedClusterAdvancedConfigurationOutput) ToAdvancedClusterAdvancedConfigurationPtrOutput() AdvancedClusterAdvancedConfigurationPtrOutput {
	return o.ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterAdvancedConfigurationOutput) ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) AdvancedClusterAdvancedConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterAdvancedConfiguration) *AdvancedClusterAdvancedConfiguration {
		return &v
	}).(AdvancedClusterAdvancedConfigurationPtrOutput)
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o AdvancedClusterAdvancedConfigurationOutput) DefaultReadConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *string { return v.DefaultReadConcern }).(pulumi.StringPtrOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o AdvancedClusterAdvancedConfigurationOutput) DefaultWriteConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *string { return v.DefaultWriteConcern }).(pulumi.StringPtrOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o AdvancedClusterAdvancedConfigurationOutput) FailIndexKeyTooLong() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *bool { return v.FailIndexKeyTooLong }).(pulumi.BoolPtrOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o AdvancedClusterAdvancedConfigurationOutput) JavascriptEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *bool { return v.JavascriptEnabled }).(pulumi.BoolPtrOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o AdvancedClusterAdvancedConfigurationOutput) MinimumEnabledTlsProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *string { return v.MinimumEnabledTlsProtocol }).(pulumi.StringPtrOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o AdvancedClusterAdvancedConfigurationOutput) NoTableScan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *bool { return v.NoTableScan }).(pulumi.BoolPtrOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
func (o AdvancedClusterAdvancedConfigurationOutput) OplogMinRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *int { return v.OplogMinRetentionHours }).(pulumi.IntPtrOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o AdvancedClusterAdvancedConfigurationOutput) OplogSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *int { return v.OplogSizeMb }).(pulumi.IntPtrOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o AdvancedClusterAdvancedConfigurationOutput) SampleRefreshIntervalBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *int { return v.SampleRefreshIntervalBiConnector }).(pulumi.IntPtrOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o AdvancedClusterAdvancedConfigurationOutput) SampleSizeBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *int { return v.SampleSizeBiConnector }).(pulumi.IntPtrOutput)
}

type AdvancedClusterAdvancedConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterAdvancedConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (o AdvancedClusterAdvancedConfigurationPtrOutput) ToAdvancedClusterAdvancedConfigurationPtrOutput() AdvancedClusterAdvancedConfigurationPtrOutput {
	return o
}

func (o AdvancedClusterAdvancedConfigurationPtrOutput) ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) AdvancedClusterAdvancedConfigurationPtrOutput {
	return o
}

func (o AdvancedClusterAdvancedConfigurationPtrOutput) Elem() AdvancedClusterAdvancedConfigurationOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) AdvancedClusterAdvancedConfiguration {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterAdvancedConfiguration
		return ret
	}).(AdvancedClusterAdvancedConfigurationOutput)
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o AdvancedClusterAdvancedConfigurationPtrOutput) DefaultReadConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DefaultReadConcern
	}).(pulumi.StringPtrOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o AdvancedClusterAdvancedConfigurationPtrOutput) DefaultWriteConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DefaultWriteConcern
	}).(pulumi.StringPtrOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o AdvancedClusterAdvancedConfigurationPtrOutput) FailIndexKeyTooLong() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.FailIndexKeyTooLong
	}).(pulumi.BoolPtrOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o AdvancedClusterAdvancedConfigurationPtrOutput) JavascriptEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.JavascriptEnabled
	}).(pulumi.BoolPtrOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o AdvancedClusterAdvancedConfigurationPtrOutput) MinimumEnabledTlsProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.MinimumEnabledTlsProtocol
	}).(pulumi.StringPtrOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o AdvancedClusterAdvancedConfigurationPtrOutput) NoTableScan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.NoTableScan
	}).(pulumi.BoolPtrOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
func (o AdvancedClusterAdvancedConfigurationPtrOutput) OplogMinRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.OplogMinRetentionHours
	}).(pulumi.IntPtrOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o AdvancedClusterAdvancedConfigurationPtrOutput) OplogSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.OplogSizeMb
	}).(pulumi.IntPtrOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o AdvancedClusterAdvancedConfigurationPtrOutput) SampleRefreshIntervalBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SampleRefreshIntervalBiConnector
	}).(pulumi.IntPtrOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o AdvancedClusterAdvancedConfigurationPtrOutput) SampleSizeBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SampleSizeBiConnector
	}).(pulumi.IntPtrOutput)
}

type AdvancedClusterBiConnector struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference *string `pulumi:"readPreference"`
}

// AdvancedClusterBiConnectorInput is an input type that accepts AdvancedClusterBiConnectorArgs and AdvancedClusterBiConnectorOutput values.
// You can construct a concrete instance of `AdvancedClusterBiConnectorInput` via:
//
//	AdvancedClusterBiConnectorArgs{...}
type AdvancedClusterBiConnectorInput interface {
	pulumi.Input

	ToAdvancedClusterBiConnectorOutput() AdvancedClusterBiConnectorOutput
	ToAdvancedClusterBiConnectorOutputWithContext(context.Context) AdvancedClusterBiConnectorOutput
}

type AdvancedClusterBiConnectorArgs struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringPtrInput `pulumi:"readPreference"`
}

func (AdvancedClusterBiConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterBiConnector)(nil)).Elem()
}

func (i AdvancedClusterBiConnectorArgs) ToAdvancedClusterBiConnectorOutput() AdvancedClusterBiConnectorOutput {
	return i.ToAdvancedClusterBiConnectorOutputWithContext(context.Background())
}

func (i AdvancedClusterBiConnectorArgs) ToAdvancedClusterBiConnectorOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterBiConnectorOutput)
}

func (i AdvancedClusterBiConnectorArgs) ToAdvancedClusterBiConnectorPtrOutput() AdvancedClusterBiConnectorPtrOutput {
	return i.ToAdvancedClusterBiConnectorPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterBiConnectorArgs) ToAdvancedClusterBiConnectorPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterBiConnectorOutput).ToAdvancedClusterBiConnectorPtrOutputWithContext(ctx)
}

// AdvancedClusterBiConnectorPtrInput is an input type that accepts AdvancedClusterBiConnectorArgs, AdvancedClusterBiConnectorPtr and AdvancedClusterBiConnectorPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterBiConnectorPtrInput` via:
//
//	        AdvancedClusterBiConnectorArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterBiConnectorPtrInput interface {
	pulumi.Input

	ToAdvancedClusterBiConnectorPtrOutput() AdvancedClusterBiConnectorPtrOutput
	ToAdvancedClusterBiConnectorPtrOutputWithContext(context.Context) AdvancedClusterBiConnectorPtrOutput
}

type advancedClusterBiConnectorPtrType AdvancedClusterBiConnectorArgs

func AdvancedClusterBiConnectorPtr(v *AdvancedClusterBiConnectorArgs) AdvancedClusterBiConnectorPtrInput {
	return (*advancedClusterBiConnectorPtrType)(v)
}

func (*advancedClusterBiConnectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterBiConnector)(nil)).Elem()
}

func (i *advancedClusterBiConnectorPtrType) ToAdvancedClusterBiConnectorPtrOutput() AdvancedClusterBiConnectorPtrOutput {
	return i.ToAdvancedClusterBiConnectorPtrOutputWithContext(context.Background())
}

func (i *advancedClusterBiConnectorPtrType) ToAdvancedClusterBiConnectorPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterBiConnectorPtrOutput)
}

type AdvancedClusterBiConnectorOutput struct{ *pulumi.OutputState }

func (AdvancedClusterBiConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterBiConnector)(nil)).Elem()
}

func (o AdvancedClusterBiConnectorOutput) ToAdvancedClusterBiConnectorOutput() AdvancedClusterBiConnectorOutput {
	return o
}

func (o AdvancedClusterBiConnectorOutput) ToAdvancedClusterBiConnectorOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorOutput {
	return o
}

func (o AdvancedClusterBiConnectorOutput) ToAdvancedClusterBiConnectorPtrOutput() AdvancedClusterBiConnectorPtrOutput {
	return o.ToAdvancedClusterBiConnectorPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterBiConnectorOutput) ToAdvancedClusterBiConnectorPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterBiConnector) *AdvancedClusterBiConnector {
		return &v
	}).(AdvancedClusterBiConnectorPtrOutput)
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o AdvancedClusterBiConnectorOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterBiConnector) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o AdvancedClusterBiConnectorOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterBiConnector) *string { return v.ReadPreference }).(pulumi.StringPtrOutput)
}

type AdvancedClusterBiConnectorPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterBiConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterBiConnector)(nil)).Elem()
}

func (o AdvancedClusterBiConnectorPtrOutput) ToAdvancedClusterBiConnectorPtrOutput() AdvancedClusterBiConnectorPtrOutput {
	return o
}

func (o AdvancedClusterBiConnectorPtrOutput) ToAdvancedClusterBiConnectorPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorPtrOutput {
	return o
}

func (o AdvancedClusterBiConnectorPtrOutput) Elem() AdvancedClusterBiConnectorOutput {
	return o.ApplyT(func(v *AdvancedClusterBiConnector) AdvancedClusterBiConnector {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterBiConnector
		return ret
	}).(AdvancedClusterBiConnectorOutput)
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o AdvancedClusterBiConnectorPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterBiConnector) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o AdvancedClusterBiConnectorPtrOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterBiConnector) *string {
		if v == nil {
			return nil
		}
		return v.ReadPreference
	}).(pulumi.StringPtrOutput)
}

type AdvancedClusterBiConnectorConfig struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference *string `pulumi:"readPreference"`
}

// AdvancedClusterBiConnectorConfigInput is an input type that accepts AdvancedClusterBiConnectorConfigArgs and AdvancedClusterBiConnectorConfigOutput values.
// You can construct a concrete instance of `AdvancedClusterBiConnectorConfigInput` via:
//
//	AdvancedClusterBiConnectorConfigArgs{...}
type AdvancedClusterBiConnectorConfigInput interface {
	pulumi.Input

	ToAdvancedClusterBiConnectorConfigOutput() AdvancedClusterBiConnectorConfigOutput
	ToAdvancedClusterBiConnectorConfigOutputWithContext(context.Context) AdvancedClusterBiConnectorConfigOutput
}

type AdvancedClusterBiConnectorConfigArgs struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringPtrInput `pulumi:"readPreference"`
}

func (AdvancedClusterBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (i AdvancedClusterBiConnectorConfigArgs) ToAdvancedClusterBiConnectorConfigOutput() AdvancedClusterBiConnectorConfigOutput {
	return i.ToAdvancedClusterBiConnectorConfigOutputWithContext(context.Background())
}

func (i AdvancedClusterBiConnectorConfigArgs) ToAdvancedClusterBiConnectorConfigOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterBiConnectorConfigOutput)
}

func (i AdvancedClusterBiConnectorConfigArgs) ToAdvancedClusterBiConnectorConfigPtrOutput() AdvancedClusterBiConnectorConfigPtrOutput {
	return i.ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterBiConnectorConfigArgs) ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterBiConnectorConfigOutput).ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(ctx)
}

// AdvancedClusterBiConnectorConfigPtrInput is an input type that accepts AdvancedClusterBiConnectorConfigArgs, AdvancedClusterBiConnectorConfigPtr and AdvancedClusterBiConnectorConfigPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterBiConnectorConfigPtrInput` via:
//
//	        AdvancedClusterBiConnectorConfigArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterBiConnectorConfigPtrInput interface {
	pulumi.Input

	ToAdvancedClusterBiConnectorConfigPtrOutput() AdvancedClusterBiConnectorConfigPtrOutput
	ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(context.Context) AdvancedClusterBiConnectorConfigPtrOutput
}

type advancedClusterBiConnectorConfigPtrType AdvancedClusterBiConnectorConfigArgs

func AdvancedClusterBiConnectorConfigPtr(v *AdvancedClusterBiConnectorConfigArgs) AdvancedClusterBiConnectorConfigPtrInput {
	return (*advancedClusterBiConnectorConfigPtrType)(v)
}

func (*advancedClusterBiConnectorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (i *advancedClusterBiConnectorConfigPtrType) ToAdvancedClusterBiConnectorConfigPtrOutput() AdvancedClusterBiConnectorConfigPtrOutput {
	return i.ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (i *advancedClusterBiConnectorConfigPtrType) ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterBiConnectorConfigPtrOutput)
}

type AdvancedClusterBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (AdvancedClusterBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (o AdvancedClusterBiConnectorConfigOutput) ToAdvancedClusterBiConnectorConfigOutput() AdvancedClusterBiConnectorConfigOutput {
	return o
}

func (o AdvancedClusterBiConnectorConfigOutput) ToAdvancedClusterBiConnectorConfigOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorConfigOutput {
	return o
}

func (o AdvancedClusterBiConnectorConfigOutput) ToAdvancedClusterBiConnectorConfigPtrOutput() AdvancedClusterBiConnectorConfigPtrOutput {
	return o.ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterBiConnectorConfigOutput) ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterBiConnectorConfig) *AdvancedClusterBiConnectorConfig {
		return &v
	}).(AdvancedClusterBiConnectorConfigPtrOutput)
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o AdvancedClusterBiConnectorConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterBiConnectorConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o AdvancedClusterBiConnectorConfigOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterBiConnectorConfig) *string { return v.ReadPreference }).(pulumi.StringPtrOutput)
}

type AdvancedClusterBiConnectorConfigPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterBiConnectorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (o AdvancedClusterBiConnectorConfigPtrOutput) ToAdvancedClusterBiConnectorConfigPtrOutput() AdvancedClusterBiConnectorConfigPtrOutput {
	return o
}

func (o AdvancedClusterBiConnectorConfigPtrOutput) ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorConfigPtrOutput {
	return o
}

func (o AdvancedClusterBiConnectorConfigPtrOutput) Elem() AdvancedClusterBiConnectorConfigOutput {
	return o.ApplyT(func(v *AdvancedClusterBiConnectorConfig) AdvancedClusterBiConnectorConfig {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterBiConnectorConfig
		return ret
	}).(AdvancedClusterBiConnectorConfigOutput)
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o AdvancedClusterBiConnectorConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterBiConnectorConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o AdvancedClusterBiConnectorConfigPtrOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterBiConnectorConfig) *string {
		if v == nil {
			return nil
		}
		return v.ReadPreference
	}).(pulumi.StringPtrOutput)
}

type AdvancedClusterConnectionString struct {
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
	AwsPrivateLink map[string]interface{} `pulumi:"awsPrivateLink"`
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
	AwsPrivateLinkSrv map[string]interface{}                           `pulumi:"awsPrivateLinkSrv"`
	Private           *string                                          `pulumi:"private"`
	PrivateEndpoints  []AdvancedClusterConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        *string                                          `pulumi:"privateSrv"`
	Standard          *string                                          `pulumi:"standard"`
	StandardSrv       *string                                          `pulumi:"standardSrv"`
}

// AdvancedClusterConnectionStringInput is an input type that accepts AdvancedClusterConnectionStringArgs and AdvancedClusterConnectionStringOutput values.
// You can construct a concrete instance of `AdvancedClusterConnectionStringInput` via:
//
//	AdvancedClusterConnectionStringArgs{...}
type AdvancedClusterConnectionStringInput interface {
	pulumi.Input

	ToAdvancedClusterConnectionStringOutput() AdvancedClusterConnectionStringOutput
	ToAdvancedClusterConnectionStringOutputWithContext(context.Context) AdvancedClusterConnectionStringOutput
}

type AdvancedClusterConnectionStringArgs struct {
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
	AwsPrivateLink pulumi.MapInput `pulumi:"awsPrivateLink"`
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
	AwsPrivateLinkSrv pulumi.MapInput                                          `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringPtrInput                                    `pulumi:"private"`
	PrivateEndpoints  AdvancedClusterConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringPtrInput                                    `pulumi:"privateSrv"`
	Standard          pulumi.StringPtrInput                                    `pulumi:"standard"`
	StandardSrv       pulumi.StringPtrInput                                    `pulumi:"standardSrv"`
}

func (AdvancedClusterConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterConnectionString)(nil)).Elem()
}

func (i AdvancedClusterConnectionStringArgs) ToAdvancedClusterConnectionStringOutput() AdvancedClusterConnectionStringOutput {
	return i.ToAdvancedClusterConnectionStringOutputWithContext(context.Background())
}

func (i AdvancedClusterConnectionStringArgs) ToAdvancedClusterConnectionStringOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterConnectionStringOutput)
}

// AdvancedClusterConnectionStringArrayInput is an input type that accepts AdvancedClusterConnectionStringArray and AdvancedClusterConnectionStringArrayOutput values.
// You can construct a concrete instance of `AdvancedClusterConnectionStringArrayInput` via:
//
//	AdvancedClusterConnectionStringArray{ AdvancedClusterConnectionStringArgs{...} }
type AdvancedClusterConnectionStringArrayInput interface {
	pulumi.Input

	ToAdvancedClusterConnectionStringArrayOutput() AdvancedClusterConnectionStringArrayOutput
	ToAdvancedClusterConnectionStringArrayOutputWithContext(context.Context) AdvancedClusterConnectionStringArrayOutput
}

type AdvancedClusterConnectionStringArray []AdvancedClusterConnectionStringInput

func (AdvancedClusterConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterConnectionString)(nil)).Elem()
}

func (i AdvancedClusterConnectionStringArray) ToAdvancedClusterConnectionStringArrayOutput() AdvancedClusterConnectionStringArrayOutput {
	return i.ToAdvancedClusterConnectionStringArrayOutputWithContext(context.Background())
}

func (i AdvancedClusterConnectionStringArray) ToAdvancedClusterConnectionStringArrayOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterConnectionStringArrayOutput)
}

type AdvancedClusterConnectionStringOutput struct{ *pulumi.OutputState }

func (AdvancedClusterConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterConnectionString)(nil)).Elem()
}

func (o AdvancedClusterConnectionStringOutput) ToAdvancedClusterConnectionStringOutput() AdvancedClusterConnectionStringOutput {
	return o
}

func (o AdvancedClusterConnectionStringOutput) ToAdvancedClusterConnectionStringOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringOutput {
	return o
}

// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
func (o AdvancedClusterConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
func (o AdvancedClusterConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o AdvancedClusterConnectionStringOutput) Private() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionString) *string { return v.Private }).(pulumi.StringPtrOutput)
}

func (o AdvancedClusterConnectionStringOutput) PrivateEndpoints() AdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionString) []AdvancedClusterConnectionStringPrivateEndpoint {
		return v.PrivateEndpoints
	}).(AdvancedClusterConnectionStringPrivateEndpointArrayOutput)
}

func (o AdvancedClusterConnectionStringOutput) PrivateSrv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionString) *string { return v.PrivateSrv }).(pulumi.StringPtrOutput)
}

func (o AdvancedClusterConnectionStringOutput) Standard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionString) *string { return v.Standard }).(pulumi.StringPtrOutput)
}

func (o AdvancedClusterConnectionStringOutput) StandardSrv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionString) *string { return v.StandardSrv }).(pulumi.StringPtrOutput)
}

type AdvancedClusterConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (AdvancedClusterConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterConnectionString)(nil)).Elem()
}

func (o AdvancedClusterConnectionStringArrayOutput) ToAdvancedClusterConnectionStringArrayOutput() AdvancedClusterConnectionStringArrayOutput {
	return o
}

func (o AdvancedClusterConnectionStringArrayOutput) ToAdvancedClusterConnectionStringArrayOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringArrayOutput {
	return o
}

func (o AdvancedClusterConnectionStringArrayOutput) Index(i pulumi.IntInput) AdvancedClusterConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdvancedClusterConnectionString {
		return vs[0].([]AdvancedClusterConnectionString)[vs[1].(int)]
	}).(AdvancedClusterConnectionStringOutput)
}

type AdvancedClusterConnectionStringPrivateEndpoint struct {
	ConnectionString    *string                                                  `pulumi:"connectionString"`
	Endpoints           []AdvancedClusterConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString *string                                                  `pulumi:"srvConnectionString"`
	Type                *string                                                  `pulumi:"type"`
}

// AdvancedClusterConnectionStringPrivateEndpointInput is an input type that accepts AdvancedClusterConnectionStringPrivateEndpointArgs and AdvancedClusterConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `AdvancedClusterConnectionStringPrivateEndpointInput` via:
//
//	AdvancedClusterConnectionStringPrivateEndpointArgs{...}
type AdvancedClusterConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToAdvancedClusterConnectionStringPrivateEndpointOutput() AdvancedClusterConnectionStringPrivateEndpointOutput
	ToAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(context.Context) AdvancedClusterConnectionStringPrivateEndpointOutput
}

type AdvancedClusterConnectionStringPrivateEndpointArgs struct {
	ConnectionString    pulumi.StringPtrInput                                            `pulumi:"connectionString"`
	Endpoints           AdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString pulumi.StringPtrInput                                            `pulumi:"srvConnectionString"`
	Type                pulumi.StringPtrInput                                            `pulumi:"type"`
}

func (AdvancedClusterConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i AdvancedClusterConnectionStringPrivateEndpointArgs) ToAdvancedClusterConnectionStringPrivateEndpointOutput() AdvancedClusterConnectionStringPrivateEndpointOutput {
	return i.ToAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i AdvancedClusterConnectionStringPrivateEndpointArgs) ToAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterConnectionStringPrivateEndpointOutput)
}

// AdvancedClusterConnectionStringPrivateEndpointArrayInput is an input type that accepts AdvancedClusterConnectionStringPrivateEndpointArray and AdvancedClusterConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `AdvancedClusterConnectionStringPrivateEndpointArrayInput` via:
//
//	AdvancedClusterConnectionStringPrivateEndpointArray{ AdvancedClusterConnectionStringPrivateEndpointArgs{...} }
type AdvancedClusterConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToAdvancedClusterConnectionStringPrivateEndpointArrayOutput() AdvancedClusterConnectionStringPrivateEndpointArrayOutput
	ToAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) AdvancedClusterConnectionStringPrivateEndpointArrayOutput
}

type AdvancedClusterConnectionStringPrivateEndpointArray []AdvancedClusterConnectionStringPrivateEndpointInput

func (AdvancedClusterConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i AdvancedClusterConnectionStringPrivateEndpointArray) ToAdvancedClusterConnectionStringPrivateEndpointArrayOutput() AdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return i.ToAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i AdvancedClusterConnectionStringPrivateEndpointArray) ToAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterConnectionStringPrivateEndpointArrayOutput)
}

type AdvancedClusterConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (AdvancedClusterConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o AdvancedClusterConnectionStringPrivateEndpointOutput) ToAdvancedClusterConnectionStringPrivateEndpointOutput() AdvancedClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointOutput) ToAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpoint) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

func (o AdvancedClusterConnectionStringPrivateEndpointOutput) Endpoints() AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpoint) []AdvancedClusterConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o AdvancedClusterConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpoint) *string { return v.SrvConnectionString }).(pulumi.StringPtrOutput)
}

func (o AdvancedClusterConnectionStringPrivateEndpointOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpoint) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AdvancedClusterConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (AdvancedClusterConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o AdvancedClusterConnectionStringPrivateEndpointArrayOutput) ToAdvancedClusterConnectionStringPrivateEndpointArrayOutput() AdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointArrayOutput) ToAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) AdvancedClusterConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdvancedClusterConnectionStringPrivateEndpoint {
		return vs[0].([]AdvancedClusterConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(AdvancedClusterConnectionStringPrivateEndpointOutput)
}

type AdvancedClusterConnectionStringPrivateEndpointEndpoint struct {
	EndpointId *string `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	// The possible values are:
	ProviderName *string `pulumi:"providerName"`
	Region       *string `pulumi:"region"`
}

// AdvancedClusterConnectionStringPrivateEndpointEndpointInput is an input type that accepts AdvancedClusterConnectionStringPrivateEndpointEndpointArgs and AdvancedClusterConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `AdvancedClusterConnectionStringPrivateEndpointEndpointInput` via:
//
//	AdvancedClusterConnectionStringPrivateEndpointEndpointArgs{...}
type AdvancedClusterConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutput() AdvancedClusterConnectionStringPrivateEndpointEndpointOutput
	ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) AdvancedClusterConnectionStringPrivateEndpointEndpointOutput
}

type AdvancedClusterConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringPtrInput `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	// The possible values are:
	ProviderName pulumi.StringPtrInput `pulumi:"providerName"`
	Region       pulumi.StringPtrInput `pulumi:"region"`
}

func (AdvancedClusterConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i AdvancedClusterConnectionStringPrivateEndpointEndpointArgs) ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutput() AdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return i.ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i AdvancedClusterConnectionStringPrivateEndpointEndpointArgs) ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterConnectionStringPrivateEndpointEndpointOutput)
}

// AdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts AdvancedClusterConnectionStringPrivateEndpointEndpointArray and AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `AdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//	AdvancedClusterConnectionStringPrivateEndpointEndpointArray{ AdvancedClusterConnectionStringPrivateEndpointEndpointArgs{...} }
type AdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput() AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput
	ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput
}

type AdvancedClusterConnectionStringPrivateEndpointEndpointArray []AdvancedClusterConnectionStringPrivateEndpointEndpointInput

func (AdvancedClusterConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i AdvancedClusterConnectionStringPrivateEndpointEndpointArray) ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput() AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i AdvancedClusterConnectionStringPrivateEndpointEndpointArray) ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

type AdvancedClusterConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (AdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutput() AdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpointEndpoint) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// Cloud service provider on which the servers are provisioned.
// The possible values are:
func (o AdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpointEndpoint) *string { return v.ProviderName }).(pulumi.StringPtrOutput)
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpointEndpoint) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput() AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) AdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdvancedClusterConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]AdvancedClusterConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(AdvancedClusterConnectionStringPrivateEndpointEndpointOutput)
}

type AdvancedClusterLabel struct {
	// The key that you want to write.
	Key *string `pulumi:"key"`
	// The value that you want to write.
	Value *string `pulumi:"value"`
}

// AdvancedClusterLabelInput is an input type that accepts AdvancedClusterLabelArgs and AdvancedClusterLabelOutput values.
// You can construct a concrete instance of `AdvancedClusterLabelInput` via:
//
//	AdvancedClusterLabelArgs{...}
type AdvancedClusterLabelInput interface {
	pulumi.Input

	ToAdvancedClusterLabelOutput() AdvancedClusterLabelOutput
	ToAdvancedClusterLabelOutputWithContext(context.Context) AdvancedClusterLabelOutput
}

type AdvancedClusterLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AdvancedClusterLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterLabel)(nil)).Elem()
}

func (i AdvancedClusterLabelArgs) ToAdvancedClusterLabelOutput() AdvancedClusterLabelOutput {
	return i.ToAdvancedClusterLabelOutputWithContext(context.Background())
}

func (i AdvancedClusterLabelArgs) ToAdvancedClusterLabelOutputWithContext(ctx context.Context) AdvancedClusterLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterLabelOutput)
}

// AdvancedClusterLabelArrayInput is an input type that accepts AdvancedClusterLabelArray and AdvancedClusterLabelArrayOutput values.
// You can construct a concrete instance of `AdvancedClusterLabelArrayInput` via:
//
//	AdvancedClusterLabelArray{ AdvancedClusterLabelArgs{...} }
type AdvancedClusterLabelArrayInput interface {
	pulumi.Input

	ToAdvancedClusterLabelArrayOutput() AdvancedClusterLabelArrayOutput
	ToAdvancedClusterLabelArrayOutputWithContext(context.Context) AdvancedClusterLabelArrayOutput
}

type AdvancedClusterLabelArray []AdvancedClusterLabelInput

func (AdvancedClusterLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterLabel)(nil)).Elem()
}

func (i AdvancedClusterLabelArray) ToAdvancedClusterLabelArrayOutput() AdvancedClusterLabelArrayOutput {
	return i.ToAdvancedClusterLabelArrayOutputWithContext(context.Background())
}

func (i AdvancedClusterLabelArray) ToAdvancedClusterLabelArrayOutputWithContext(ctx context.Context) AdvancedClusterLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterLabelArrayOutput)
}

type AdvancedClusterLabelOutput struct{ *pulumi.OutputState }

func (AdvancedClusterLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterLabel)(nil)).Elem()
}

func (o AdvancedClusterLabelOutput) ToAdvancedClusterLabelOutput() AdvancedClusterLabelOutput {
	return o
}

func (o AdvancedClusterLabelOutput) ToAdvancedClusterLabelOutputWithContext(ctx context.Context) AdvancedClusterLabelOutput {
	return o
}

// The key that you want to write.
func (o AdvancedClusterLabelOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterLabel) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value that you want to write.
func (o AdvancedClusterLabelOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterLabel) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AdvancedClusterLabelArrayOutput struct{ *pulumi.OutputState }

func (AdvancedClusterLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterLabel)(nil)).Elem()
}

func (o AdvancedClusterLabelArrayOutput) ToAdvancedClusterLabelArrayOutput() AdvancedClusterLabelArrayOutput {
	return o
}

func (o AdvancedClusterLabelArrayOutput) ToAdvancedClusterLabelArrayOutputWithContext(ctx context.Context) AdvancedClusterLabelArrayOutput {
	return o
}

func (o AdvancedClusterLabelArrayOutput) Index(i pulumi.IntInput) AdvancedClusterLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdvancedClusterLabel {
		return vs[0].([]AdvancedClusterLabel)[vs[1].(int)]
	}).(AdvancedClusterLabelOutput)
}

type AdvancedClusterReplicationSpec struct {
	ContainerId map[string]string `pulumi:"containerId"`
	Id          *string           `pulumi:"id"`
	// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED. Omit this value if you selected a `clusterType` of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a `numShards` value of 1 and a `clusterType` of SHARDED, Atlas deploys a single-shard [sharded cluster](https://docs.atlas.mongodb.com/reference/glossary/#std-term-sharded-cluster). Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations.
	NumShards *int `pulumi:"numShards"`
	// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
	RegionConfigs []AdvancedClusterReplicationSpecRegionConfig `pulumi:"regionConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName *string `pulumi:"zoneName"`
}

// AdvancedClusterReplicationSpecInput is an input type that accepts AdvancedClusterReplicationSpecArgs and AdvancedClusterReplicationSpecOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecInput` via:
//
//	AdvancedClusterReplicationSpecArgs{...}
type AdvancedClusterReplicationSpecInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecOutput() AdvancedClusterReplicationSpecOutput
	ToAdvancedClusterReplicationSpecOutputWithContext(context.Context) AdvancedClusterReplicationSpecOutput
}

type AdvancedClusterReplicationSpecArgs struct {
	ContainerId pulumi.StringMapInput `pulumi:"containerId"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED. Omit this value if you selected a `clusterType` of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a `numShards` value of 1 and a `clusterType` of SHARDED, Atlas deploys a single-shard [sharded cluster](https://docs.atlas.mongodb.com/reference/glossary/#std-term-sharded-cluster). Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations.
	NumShards pulumi.IntPtrInput `pulumi:"numShards"`
	// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
	RegionConfigs AdvancedClusterReplicationSpecRegionConfigArrayInput `pulumi:"regionConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName pulumi.StringPtrInput `pulumi:"zoneName"`
}

func (AdvancedClusterReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpec)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecArgs) ToAdvancedClusterReplicationSpecOutput() AdvancedClusterReplicationSpecOutput {
	return i.ToAdvancedClusterReplicationSpecOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecArgs) ToAdvancedClusterReplicationSpecOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecOutput)
}

// AdvancedClusterReplicationSpecArrayInput is an input type that accepts AdvancedClusterReplicationSpecArray and AdvancedClusterReplicationSpecArrayOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecArrayInput` via:
//
//	AdvancedClusterReplicationSpecArray{ AdvancedClusterReplicationSpecArgs{...} }
type AdvancedClusterReplicationSpecArrayInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecArrayOutput() AdvancedClusterReplicationSpecArrayOutput
	ToAdvancedClusterReplicationSpecArrayOutputWithContext(context.Context) AdvancedClusterReplicationSpecArrayOutput
}

type AdvancedClusterReplicationSpecArray []AdvancedClusterReplicationSpecInput

func (AdvancedClusterReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterReplicationSpec)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecArray) ToAdvancedClusterReplicationSpecArrayOutput() AdvancedClusterReplicationSpecArrayOutput {
	return i.ToAdvancedClusterReplicationSpecArrayOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecArray) ToAdvancedClusterReplicationSpecArrayOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecArrayOutput)
}

type AdvancedClusterReplicationSpecOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpec)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecOutput) ToAdvancedClusterReplicationSpecOutput() AdvancedClusterReplicationSpecOutput {
	return o
}

func (o AdvancedClusterReplicationSpecOutput) ToAdvancedClusterReplicationSpecOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecOutput {
	return o
}

func (o AdvancedClusterReplicationSpecOutput) ContainerId() pulumi.StringMapOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpec) map[string]string { return v.ContainerId }).(pulumi.StringMapOutput)
}

func (o AdvancedClusterReplicationSpecOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpec) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED. Omit this value if you selected a `clusterType` of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a `numShards` value of 1 and a `clusterType` of SHARDED, Atlas deploys a single-shard [sharded cluster](https://docs.atlas.mongodb.com/reference/glossary/#std-term-sharded-cluster). Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations.
func (o AdvancedClusterReplicationSpecOutput) NumShards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpec) *int { return v.NumShards }).(pulumi.IntPtrOutput)
}

// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
func (o AdvancedClusterReplicationSpecOutput) RegionConfigs() AdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpec) []AdvancedClusterReplicationSpecRegionConfig {
		return v.RegionConfigs
	}).(AdvancedClusterReplicationSpecRegionConfigArrayOutput)
}

// Name for the zone in a Global Cluster.
func (o AdvancedClusterReplicationSpecOutput) ZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpec) *string { return v.ZoneName }).(pulumi.StringPtrOutput)
}

type AdvancedClusterReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterReplicationSpec)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecArrayOutput) ToAdvancedClusterReplicationSpecArrayOutput() AdvancedClusterReplicationSpecArrayOutput {
	return o
}

func (o AdvancedClusterReplicationSpecArrayOutput) ToAdvancedClusterReplicationSpecArrayOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecArrayOutput {
	return o
}

func (o AdvancedClusterReplicationSpecArrayOutput) Index(i pulumi.IntInput) AdvancedClusterReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdvancedClusterReplicationSpec {
		return vs[0].([]AdvancedClusterReplicationSpec)[vs[1].(int)]
	}).(AdvancedClusterReplicationSpecOutput)
}

type AdvancedClusterReplicationSpecRegionConfig struct {
	// Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. The values for the `analyticsAutoScaling` parameter must be the same for every item in the `replicationSpecs` array. See below
	AnalyticsAutoScaling *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling `pulumi:"analyticsAutoScaling"`
	// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. Analytics nodes handle analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only and can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary). If you don't specify this parameter, no analytics nodes deploy to this region. See below
	AnalyticsSpecs *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs `pulumi:"analyticsSpecs"`
	// Configuration for the Collection of settings that configures auto-scaling information for the cluster. The values for the `autoScaling` parameter must be the same for every item in the `replicationSpecs` array. See below
	AutoScaling *AdvancedClusterReplicationSpecRegionConfigAutoScaling `pulumi:"autoScaling"`
	// Cloud service provider on which you provision the host for a multi-tenant cluster. Use this only when a `providerName` is `TENANT` and `instanceSize` of a specs is `M2` or `M5`.
	BackingProviderName *string `pulumi:"backingProviderName"`
	// Hardware specifications for electable nodes in the region. Electable nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you do not specify this option, no electable nodes are deployed to the region. See below
	ElectableSpecs *AdvancedClusterReplicationSpecRegionConfigElectableSpecs `pulumi:"electableSpecs"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	// * If you have multiple `regionConfigs` objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is 7.
	// * If your region has set `region_configs.#.electable_specs.0.node_count` to 1 or higher, it must have a priority of exactly one (1) less than another region in the `replication_specs.#.region_configs.#` array. The highest-priority region must have a priority of 7. The lowest possible priority is 1.
	Priority int `pulumi:"priority"`
	// Cloud service provider on which the servers are provisioned.
	// The possible values are:
	ProviderName string `pulumi:"providerName"`
	// Hardware specifications for read-only nodes in the region. Read-only nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you don't specify this parameter, no read-only nodes are deployed to the region. See below
	ReadOnlySpecs *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs `pulumi:"readOnlySpecs"`
	// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	RegionName string `pulumi:"regionName"`
}

// AdvancedClusterReplicationSpecRegionConfigInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigArgs and AdvancedClusterReplicationSpecRegionConfigOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigInput` via:
//
//	AdvancedClusterReplicationSpecRegionConfigArgs{...}
type AdvancedClusterReplicationSpecRegionConfigInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigOutput() AdvancedClusterReplicationSpecRegionConfigOutput
	ToAdvancedClusterReplicationSpecRegionConfigOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigOutput
}

type AdvancedClusterReplicationSpecRegionConfigArgs struct {
	// Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. The values for the `analyticsAutoScaling` parameter must be the same for every item in the `replicationSpecs` array. See below
	AnalyticsAutoScaling AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrInput `pulumi:"analyticsAutoScaling"`
	// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. Analytics nodes handle analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only and can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary). If you don't specify this parameter, no analytics nodes deploy to this region. See below
	AnalyticsSpecs AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput `pulumi:"analyticsSpecs"`
	// Configuration for the Collection of settings that configures auto-scaling information for the cluster. The values for the `autoScaling` parameter must be the same for every item in the `replicationSpecs` array. See below
	AutoScaling AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrInput `pulumi:"autoScaling"`
	// Cloud service provider on which you provision the host for a multi-tenant cluster. Use this only when a `providerName` is `TENANT` and `instanceSize` of a specs is `M2` or `M5`.
	BackingProviderName pulumi.StringPtrInput `pulumi:"backingProviderName"`
	// Hardware specifications for electable nodes in the region. Electable nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you do not specify this option, no electable nodes are deployed to the region. See below
	ElectableSpecs AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput `pulumi:"electableSpecs"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	// * If you have multiple `regionConfigs` objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is 7.
	// * If your region has set `region_configs.#.electable_specs.0.node_count` to 1 or higher, it must have a priority of exactly one (1) less than another region in the `replication_specs.#.region_configs.#` array. The highest-priority region must have a priority of 7. The lowest possible priority is 1.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Cloud service provider on which the servers are provisioned.
	// The possible values are:
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Hardware specifications for read-only nodes in the region. Read-only nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you don't specify this parameter, no read-only nodes are deployed to the region. See below
	ReadOnlySpecs AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput `pulumi:"readOnlySpecs"`
	// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (AdvancedClusterReplicationSpecRegionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecRegionConfigArgs) ToAdvancedClusterReplicationSpecRegionConfigOutput() AdvancedClusterReplicationSpecRegionConfigOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigArgs) ToAdvancedClusterReplicationSpecRegionConfigOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigOutput)
}

// AdvancedClusterReplicationSpecRegionConfigArrayInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigArray and AdvancedClusterReplicationSpecRegionConfigArrayOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigArrayInput` via:
//
//	AdvancedClusterReplicationSpecRegionConfigArray{ AdvancedClusterReplicationSpecRegionConfigArgs{...} }
type AdvancedClusterReplicationSpecRegionConfigArrayInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigArrayOutput() AdvancedClusterReplicationSpecRegionConfigArrayOutput
	ToAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigArrayOutput
}

type AdvancedClusterReplicationSpecRegionConfigArray []AdvancedClusterReplicationSpecRegionConfigInput

func (AdvancedClusterReplicationSpecRegionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecRegionConfigArray) ToAdvancedClusterReplicationSpecRegionConfigArrayOutput() AdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigArray) ToAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigArrayOutput)
}

type AdvancedClusterReplicationSpecRegionConfigOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigOutput) ToAdvancedClusterReplicationSpecRegionConfigOutput() AdvancedClusterReplicationSpecRegionConfigOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigOutput) ToAdvancedClusterReplicationSpecRegionConfigOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigOutput {
	return o
}

// Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. The values for the `analyticsAutoScaling` parameter must be the same for every item in the `replicationSpecs` array. See below
func (o AdvancedClusterReplicationSpecRegionConfigOutput) AnalyticsAutoScaling() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling {
		return v.AnalyticsAutoScaling
	}).(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput)
}

// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. Analytics nodes handle analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only and can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary). If you don't specify this parameter, no analytics nodes deploy to this region. See below
func (o AdvancedClusterReplicationSpecRegionConfigOutput) AnalyticsSpecs() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
		return v.AnalyticsSpecs
	}).(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

// Configuration for the Collection of settings that configures auto-scaling information for the cluster. The values for the `autoScaling` parameter must be the same for every item in the `replicationSpecs` array. See below
func (o AdvancedClusterReplicationSpecRegionConfigOutput) AutoScaling() AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) *AdvancedClusterReplicationSpecRegionConfigAutoScaling {
		return v.AutoScaling
	}).(AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput)
}

// Cloud service provider on which you provision the host for a multi-tenant cluster. Use this only when a `providerName` is `TENANT` and `instanceSize` of a specs is `M2` or `M5`.
func (o AdvancedClusterReplicationSpecRegionConfigOutput) BackingProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) *string { return v.BackingProviderName }).(pulumi.StringPtrOutput)
}

// Hardware specifications for electable nodes in the region. Electable nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you do not specify this option, no electable nodes are deployed to the region. See below
func (o AdvancedClusterReplicationSpecRegionConfigOutput) ElectableSpecs() AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) *AdvancedClusterReplicationSpecRegionConfigElectableSpecs {
		return v.ElectableSpecs
	}).(AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

// Election priority of the region. For regions with only read-only nodes, set this value to 0.
// * If you have multiple `regionConfigs` objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is 7.
// * If your region has set `region_configs.#.electable_specs.0.node_count` to 1 or higher, it must have a priority of exactly one (1) less than another region in the `replication_specs.#.region_configs.#` array. The highest-priority region must have a priority of 7. The lowest possible priority is 1.
func (o AdvancedClusterReplicationSpecRegionConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Cloud service provider on which the servers are provisioned.
// The possible values are:
func (o AdvancedClusterReplicationSpecRegionConfigOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Hardware specifications for read-only nodes in the region. Read-only nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you don't specify this parameter, no read-only nodes are deployed to the region. See below
func (o AdvancedClusterReplicationSpecRegionConfigOutput) ReadOnlySpecs() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
		return v.ReadOnlySpecs
	}).(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
func (o AdvancedClusterReplicationSpecRegionConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type AdvancedClusterReplicationSpecRegionConfigArrayOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigArrayOutput) ToAdvancedClusterReplicationSpecRegionConfigArrayOutput() AdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigArrayOutput) ToAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigArrayOutput) Index(i pulumi.IntInput) AdvancedClusterReplicationSpecRegionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdvancedClusterReplicationSpecRegionConfig {
		return vs[0].([]AdvancedClusterReplicationSpecRegionConfig)[vs[1].(int)]
	}).(AdvancedClusterReplicationSpecRegionConfigOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling struct {
	// Flag that indicates whether instance size auto-scaling is enabled. This parameter defaults to false.
	ComputeEnabled *bool `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` is true.
	ComputeMaxInstanceSize *string `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_scale_down_enabled` is true.
	ComputeMinInstanceSize *string `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_min_instance_size`.
	ComputeScaleDownEnabled *bool `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
	DiskGbEnabled *bool `pulumi:"diskGbEnabled"`
}

// AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs and AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput` via:
//
//	AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs{...}
type AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput
	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs struct {
	// Flag that indicates whether instance size auto-scaling is enabled. This parameter defaults to false.
	ComputeEnabled pulumi.BoolPtrInput `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` is true.
	ComputeMaxInstanceSize pulumi.StringPtrInput `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_scale_down_enabled` is true.
	ComputeMinInstanceSize pulumi.StringPtrInput `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_min_instance_size`.
	ComputeScaleDownEnabled pulumi.BoolPtrInput `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
	DiskGbEnabled pulumi.BoolPtrInput `pulumi:"diskGbEnabled"`
}

func (AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput)
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput).ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(ctx)
}

// AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs, AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtr and AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrInput` via:
//
//	        AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput
	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput
}

type advancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrType AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs

func AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtr(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrInput {
	return (*advancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrType)(v)
}

func (*advancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (i *advancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrType) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(context.Background())
}

func (i *advancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrType) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return o.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling {
		return &v
	}).(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput)
}

// Flag that indicates whether instance size auto-scaling is enabled. This parameter defaults to false.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *bool { return v.ComputeEnabled }).(pulumi.BoolPtrOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeMaxInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *string {
		return v.ComputeMaxInstanceSize
	}).(pulumi.StringPtrOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_scale_down_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeMinInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *string {
		return v.ComputeMinInstanceSize
	}).(pulumi.StringPtrOutput)
}

// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_min_instance_size`.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeScaleDownEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *bool {
		return v.ComputeScaleDownEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) DiskGbEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *bool { return v.DiskGbEnabled }).(pulumi.BoolPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) Elem() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling
		return ret
	}).(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput)
}

// Flag that indicates whether instance size auto-scaling is enabled. This parameter defaults to false.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ComputeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *bool {
		if v == nil {
			return nil
		}
		return v.ComputeEnabled
	}).(pulumi.BoolPtrOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ComputeMaxInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *string {
		if v == nil {
			return nil
		}
		return v.ComputeMaxInstanceSize
	}).(pulumi.StringPtrOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_scale_down_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ComputeMinInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *string {
		if v == nil {
			return nil
		}
		return v.ComputeMinInstanceSize
	}).(pulumi.StringPtrOutput)
}

// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_min_instance_size`.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ComputeScaleDownEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *bool {
		if v == nil {
			return nil
		}
		return v.ComputeScaleDownEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) DiskGbEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *bool {
		if v == nil {
			return nil
		}
		return v.DiskGbEnabled
	}).(pulumi.BoolPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
	NodeCount *int `pulumi:"nodeCount"`
}

// AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs and AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput` via:
//
//	AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{...}
type AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput
	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput)
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput).ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx)
}

// AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs, AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtr and AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput` via:
//
//	        AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput
	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput
}

type advancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs

func AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtr(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput {
	return (*advancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType)(v)
}

func (*advancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (i *advancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (i *advancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
		return &v
	}).(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *string { return v.EbsVolumeType }).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) string { return v.InstanceSize }).(pulumi.StringOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) Elem() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs
		return ret
	}).(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAutoScaling struct {
	// Flag that indicates whether instance size auto-scaling is enabled. This parameter defaults to false.
	ComputeEnabled *bool `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` is true.
	ComputeMaxInstanceSize *string `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled` is true.
	ComputeMinInstanceSize *string `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size`.
	ComputeScaleDownEnabled *bool `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
	DiskGbEnabled *bool `pulumi:"diskGbEnabled"`
}

// AdvancedClusterReplicationSpecRegionConfigAutoScalingInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs and AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigAutoScalingInput` via:
//
//	AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs{...}
type AdvancedClusterReplicationSpecRegionConfigAutoScalingInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput
	ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput
}

type AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs struct {
	// Flag that indicates whether instance size auto-scaling is enabled. This parameter defaults to false.
	ComputeEnabled pulumi.BoolPtrInput `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` is true.
	ComputeMaxInstanceSize pulumi.StringPtrInput `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled` is true.
	ComputeMinInstanceSize pulumi.StringPtrInput `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size`.
	ComputeScaleDownEnabled pulumi.BoolPtrInput `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
	DiskGbEnabled pulumi.BoolPtrInput `pulumi:"diskGbEnabled"`
}

func (AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput)
}

func (i AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput).ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(ctx)
}

// AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs, AdvancedClusterReplicationSpecRegionConfigAutoScalingPtr and AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrInput` via:
//
//	        AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput
	ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput
}

type advancedClusterReplicationSpecRegionConfigAutoScalingPtrType AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs

func AdvancedClusterReplicationSpecRegionConfigAutoScalingPtr(v *AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrInput {
	return (*advancedClusterReplicationSpecRegionConfigAutoScalingPtrType)(v)
}

func (*advancedClusterReplicationSpecRegionConfigAutoScalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (i *advancedClusterReplicationSpecRegionConfigAutoScalingPtrType) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(context.Background())
}

func (i *advancedClusterReplicationSpecRegionConfigAutoScalingPtrType) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return o.ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterReplicationSpecRegionConfigAutoScaling) *AdvancedClusterReplicationSpecRegionConfigAutoScaling {
		return &v
	}).(AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput)
}

// Flag that indicates whether instance size auto-scaling is enabled. This parameter defaults to false.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAutoScaling) *bool { return v.ComputeEnabled }).(pulumi.BoolPtrOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeMaxInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAutoScaling) *string { return v.ComputeMaxInstanceSize }).(pulumi.StringPtrOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeMinInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAutoScaling) *string { return v.ComputeMinInstanceSize }).(pulumi.StringPtrOutput)
}

// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size`.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeScaleDownEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAutoScaling) *bool { return v.ComputeScaleDownEnabled }).(pulumi.BoolPtrOutput)
}

// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) DiskGbEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAutoScaling) *bool { return v.DiskGbEnabled }).(pulumi.BoolPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) Elem() AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAutoScaling) AdvancedClusterReplicationSpecRegionConfigAutoScaling {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterReplicationSpecRegionConfigAutoScaling
		return ret
	}).(AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput)
}

// Flag that indicates whether instance size auto-scaling is enabled. This parameter defaults to false.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ComputeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAutoScaling) *bool {
		if v == nil {
			return nil
		}
		return v.ComputeEnabled
	}).(pulumi.BoolPtrOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ComputeMaxInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAutoScaling) *string {
		if v == nil {
			return nil
		}
		return v.ComputeMaxInstanceSize
	}).(pulumi.StringPtrOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ComputeMinInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAutoScaling) *string {
		if v == nil {
			return nil
		}
		return v.ComputeMinInstanceSize
	}).(pulumi.StringPtrOutput)
}

// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size`.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ComputeScaleDownEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAutoScaling) *bool {
		if v == nil {
			return nil
		}
		return v.ComputeScaleDownEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) DiskGbEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAutoScaling) *bool {
		if v == nil {
			return nil
		}
		return v.DiskGbEnabled
	}).(pulumi.BoolPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigElectableSpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
	NodeCount *int `pulumi:"nodeCount"`
}

// AdvancedClusterReplicationSpecRegionConfigElectableSpecsInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs and AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigElectableSpecsInput` via:
//
//	AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{...}
type AdvancedClusterReplicationSpecRegionConfigElectableSpecsInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput
	ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput
}

type AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput)
}

func (i AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput).ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx)
}

// AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs, AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtr and AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput` via:
//
//	        AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput
	ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput
}

type advancedClusterReplicationSpecRegionConfigElectableSpecsPtrType AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs

func AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtr(v *AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput {
	return (*advancedClusterReplicationSpecRegionConfigElectableSpecsPtrType)(v)
}

func (*advancedClusterReplicationSpecRegionConfigElectableSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (i *advancedClusterReplicationSpecRegionConfigElectableSpecsPtrType) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (i *advancedClusterReplicationSpecRegionConfigElectableSpecsPtrType) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *AdvancedClusterReplicationSpecRegionConfigElectableSpecs {
		return &v
	}).(AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *string { return v.EbsVolumeType }).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigElectableSpecs) string { return v.InstanceSize }).(pulumi.StringOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) Elem() AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigElectableSpecs) AdvancedClusterReplicationSpecRegionConfigElectableSpecs {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterReplicationSpecRegionConfigElectableSpecs
		return ret
	}).(AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
	NodeCount *int `pulumi:"nodeCount"`
}

// AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs and AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput` via:
//
//	AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{...}
type AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput
	ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput
}

type AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput)
}

func (i AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput).ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx)
}

// AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs, AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtr and AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput` via:
//
//	        AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput
	ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput
}

type advancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs

func AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtr(v *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput {
	return (*advancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType)(v)
}

func (*advancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (i *advancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (i *advancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
		return &v
	}).(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *string { return v.EbsVolumeType }).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) string { return v.InstanceSize }).(pulumi.StringOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) Elem() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs
		return ret
	}).(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary), but can enable local reads.
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type AlertConfigurationMatcher struct {
	// Name of the field in the target object to match on.
	FieldName *string `pulumi:"fieldName"`
	// If omitted, the configuration is disabled.
	// Accepted values are:
	// Accepted values are:
	// Accepted values are:
	Operator *string `pulumi:"operator"`
	// If omitted, the configuration is disabled.
	Value *string `pulumi:"value"`
}

// AlertConfigurationMatcherInput is an input type that accepts AlertConfigurationMatcherArgs and AlertConfigurationMatcherOutput values.
// You can construct a concrete instance of `AlertConfigurationMatcherInput` via:
//
//	AlertConfigurationMatcherArgs{...}
type AlertConfigurationMatcherInput interface {
	pulumi.Input

	ToAlertConfigurationMatcherOutput() AlertConfigurationMatcherOutput
	ToAlertConfigurationMatcherOutputWithContext(context.Context) AlertConfigurationMatcherOutput
}

type AlertConfigurationMatcherArgs struct {
	// Name of the field in the target object to match on.
	FieldName pulumi.StringPtrInput `pulumi:"fieldName"`
	// If omitted, the configuration is disabled.
	// Accepted values are:
	// Accepted values are:
	// Accepted values are:
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// If omitted, the configuration is disabled.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AlertConfigurationMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMatcher)(nil)).Elem()
}

func (i AlertConfigurationMatcherArgs) ToAlertConfigurationMatcherOutput() AlertConfigurationMatcherOutput {
	return i.ToAlertConfigurationMatcherOutputWithContext(context.Background())
}

func (i AlertConfigurationMatcherArgs) ToAlertConfigurationMatcherOutputWithContext(ctx context.Context) AlertConfigurationMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMatcherOutput)
}

// AlertConfigurationMatcherArrayInput is an input type that accepts AlertConfigurationMatcherArray and AlertConfigurationMatcherArrayOutput values.
// You can construct a concrete instance of `AlertConfigurationMatcherArrayInput` via:
//
//	AlertConfigurationMatcherArray{ AlertConfigurationMatcherArgs{...} }
type AlertConfigurationMatcherArrayInput interface {
	pulumi.Input

	ToAlertConfigurationMatcherArrayOutput() AlertConfigurationMatcherArrayOutput
	ToAlertConfigurationMatcherArrayOutputWithContext(context.Context) AlertConfigurationMatcherArrayOutput
}

type AlertConfigurationMatcherArray []AlertConfigurationMatcherInput

func (AlertConfigurationMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationMatcher)(nil)).Elem()
}

func (i AlertConfigurationMatcherArray) ToAlertConfigurationMatcherArrayOutput() AlertConfigurationMatcherArrayOutput {
	return i.ToAlertConfigurationMatcherArrayOutputWithContext(context.Background())
}

func (i AlertConfigurationMatcherArray) ToAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) AlertConfigurationMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMatcherArrayOutput)
}

type AlertConfigurationMatcherOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMatcher)(nil)).Elem()
}

func (o AlertConfigurationMatcherOutput) ToAlertConfigurationMatcherOutput() AlertConfigurationMatcherOutput {
	return o
}

func (o AlertConfigurationMatcherOutput) ToAlertConfigurationMatcherOutputWithContext(ctx context.Context) AlertConfigurationMatcherOutput {
	return o
}

// Name of the field in the target object to match on.
func (o AlertConfigurationMatcherOutput) FieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMatcher) *string { return v.FieldName }).(pulumi.StringPtrOutput)
}

// If omitted, the configuration is disabled.
// Accepted values are:
// Accepted values are:
// Accepted values are:
func (o AlertConfigurationMatcherOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMatcher) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// If omitted, the configuration is disabled.
func (o AlertConfigurationMatcherOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMatcher) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlertConfigurationMatcherArrayOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationMatcher)(nil)).Elem()
}

func (o AlertConfigurationMatcherArrayOutput) ToAlertConfigurationMatcherArrayOutput() AlertConfigurationMatcherArrayOutput {
	return o
}

func (o AlertConfigurationMatcherArrayOutput) ToAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) AlertConfigurationMatcherArrayOutput {
	return o
}

func (o AlertConfigurationMatcherArrayOutput) Index(i pulumi.IntInput) AlertConfigurationMatcherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConfigurationMatcher {
		return vs[0].([]AlertConfigurationMatcher)[vs[1].(int)]
	}).(AlertConfigurationMatcherOutput)
}

type AlertConfigurationMetricThresholdConfig struct {
	// Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
	MetricName *string `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode *string `pulumi:"mode"`
	// If omitted, the configuration is disabled.
	// Accepted values are:
	// Accepted values are:
	// Accepted values are:
	Operator *string `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold *float64 `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units *string `pulumi:"units"`
}

// AlertConfigurationMetricThresholdConfigInput is an input type that accepts AlertConfigurationMetricThresholdConfigArgs and AlertConfigurationMetricThresholdConfigOutput values.
// You can construct a concrete instance of `AlertConfigurationMetricThresholdConfigInput` via:
//
//	AlertConfigurationMetricThresholdConfigArgs{...}
type AlertConfigurationMetricThresholdConfigInput interface {
	pulumi.Input

	ToAlertConfigurationMetricThresholdConfigOutput() AlertConfigurationMetricThresholdConfigOutput
	ToAlertConfigurationMetricThresholdConfigOutputWithContext(context.Context) AlertConfigurationMetricThresholdConfigOutput
}

type AlertConfigurationMetricThresholdConfigArgs struct {
	// Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// If omitted, the configuration is disabled.
	// Accepted values are:
	// Accepted values are:
	// Accepted values are:
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units pulumi.StringPtrInput `pulumi:"units"`
}

func (AlertConfigurationMetricThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (i AlertConfigurationMetricThresholdConfigArgs) ToAlertConfigurationMetricThresholdConfigOutput() AlertConfigurationMetricThresholdConfigOutput {
	return i.ToAlertConfigurationMetricThresholdConfigOutputWithContext(context.Background())
}

func (i AlertConfigurationMetricThresholdConfigArgs) ToAlertConfigurationMetricThresholdConfigOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMetricThresholdConfigOutput)
}

func (i AlertConfigurationMetricThresholdConfigArgs) ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput {
	return i.ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationMetricThresholdConfigArgs) ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMetricThresholdConfigOutput).ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx)
}

// AlertConfigurationMetricThresholdConfigPtrInput is an input type that accepts AlertConfigurationMetricThresholdConfigArgs, AlertConfigurationMetricThresholdConfigPtr and AlertConfigurationMetricThresholdConfigPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationMetricThresholdConfigPtrInput` via:
//
//	        AlertConfigurationMetricThresholdConfigArgs{...}
//
//	or:
//
//	        nil
type AlertConfigurationMetricThresholdConfigPtrInput interface {
	pulumi.Input

	ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput
	ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(context.Context) AlertConfigurationMetricThresholdConfigPtrOutput
}

type alertConfigurationMetricThresholdConfigPtrType AlertConfigurationMetricThresholdConfigArgs

func AlertConfigurationMetricThresholdConfigPtr(v *AlertConfigurationMetricThresholdConfigArgs) AlertConfigurationMetricThresholdConfigPtrInput {
	return (*alertConfigurationMetricThresholdConfigPtrType)(v)
}

func (*alertConfigurationMetricThresholdConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (i *alertConfigurationMetricThresholdConfigPtrType) ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput {
	return i.ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationMetricThresholdConfigPtrType) ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMetricThresholdConfigPtrOutput)
}

type AlertConfigurationMetricThresholdConfigOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMetricThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (o AlertConfigurationMetricThresholdConfigOutput) ToAlertConfigurationMetricThresholdConfigOutput() AlertConfigurationMetricThresholdConfigOutput {
	return o
}

func (o AlertConfigurationMetricThresholdConfigOutput) ToAlertConfigurationMetricThresholdConfigOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigOutput {
	return o
}

func (o AlertConfigurationMetricThresholdConfigOutput) ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput {
	return o.ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationMetricThresholdConfigOutput) ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfigurationMetricThresholdConfig) *AlertConfigurationMetricThresholdConfig {
		return &v
	}).(AlertConfigurationMetricThresholdConfigPtrOutput)
}

// Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
func (o AlertConfigurationMetricThresholdConfigOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// This must be set to AVERAGE. Atlas computes the current metric value as an average.
func (o AlertConfigurationMetricThresholdConfigOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// If omitted, the configuration is disabled.
// Accepted values are:
// Accepted values are:
// Accepted values are:
func (o AlertConfigurationMetricThresholdConfigOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o AlertConfigurationMetricThresholdConfigOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

// The units for the threshold value. Depends on the type of metric.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
func (o AlertConfigurationMetricThresholdConfigOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *string { return v.Units }).(pulumi.StringPtrOutput)
}

type AlertConfigurationMetricThresholdConfigPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMetricThresholdConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (o AlertConfigurationMetricThresholdConfigPtrOutput) ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput {
	return o
}

func (o AlertConfigurationMetricThresholdConfigPtrOutput) ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigPtrOutput {
	return o
}

func (o AlertConfigurationMetricThresholdConfigPtrOutput) Elem() AlertConfigurationMetricThresholdConfigOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) AlertConfigurationMetricThresholdConfig {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationMetricThresholdConfig
		return ret
	}).(AlertConfigurationMetricThresholdConfigOutput)
}

// Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
func (o AlertConfigurationMetricThresholdConfigPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

// This must be set to AVERAGE. Atlas computes the current metric value as an average.
func (o AlertConfigurationMetricThresholdConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// If omitted, the configuration is disabled.
// Accepted values are:
// Accepted values are:
// Accepted values are:
func (o AlertConfigurationMetricThresholdConfigPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o AlertConfigurationMetricThresholdConfigPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

// The units for the threshold value. Depends on the type of metric.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
func (o AlertConfigurationMetricThresholdConfigPtrOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Units
	}).(pulumi.StringPtrOutput)
}

type AlertConfigurationNotification struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken *string `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName *string `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey *string `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion *string `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin *int `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress *string `pulumi:"emailAddress"`
	// Flag indicating email notifications should be sent. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	EmailEnabled *bool `pulumi:"emailEnabled"`
	// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
	FlowName *string `pulumi:"flowName"`
	// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	FlowdockApiToken *string `pulumi:"flowdockApiToken"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5. **NOTE** `PAGER_DUTY`, `VICTOR_OPS`, and `OPS_GENIE` notifications do not return this value. The notification interval must be configured and managed within each external service.
	IntervalMin *int `pulumi:"intervalMin"`
	// Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB Cloud needs to send this notification via Microsoft Teams. Required if `typeName` is `MICROSOFT_TEAMS`. If the URL later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.
	MicrosoftTeamsWebhookUrl *string `pulumi:"microsoftTeamsWebhookUrl"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber *string `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey *string `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion *string `pulumi:"opsGenieRegion"`
	// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
	OrgName *string `pulumi:"orgName"`
	// Optional. One or more roles that receive the configured alert. If you include this field, Atlas sends alerts only to users assigned the roles you specify in the array. If you omit this field, Atlas sends alerts to users assigned any role. This parameter is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	// Accepted values are:
	Roles []string `pulumi:"roles"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey *string `pulumi:"serviceKey"`
	// Flag indicating if text message notifications should be sent to this user's mobile phone. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	SmsEnabled *bool `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId *string `pulumi:"teamId"`
	// Label for the team that receives this notification.
	TeamName *string `pulumi:"teamName"`
	// Type of alert notification.
	// Accepted values are:
	TypeName *string `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username *string `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey *string `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey *string `pulumi:"victorOpsRoutingKey"`
	// Optional authentication secret for the `WEBHOOK` notifications type.
	WebhookSecret *string `pulumi:"webhookSecret"`
	// Target URL  for the `WEBHOOK` notifications type.
	WebhookUrl *string `pulumi:"webhookUrl"`
}

// AlertConfigurationNotificationInput is an input type that accepts AlertConfigurationNotificationArgs and AlertConfigurationNotificationOutput values.
// You can construct a concrete instance of `AlertConfigurationNotificationInput` via:
//
//	AlertConfigurationNotificationArgs{...}
type AlertConfigurationNotificationInput interface {
	pulumi.Input

	ToAlertConfigurationNotificationOutput() AlertConfigurationNotificationOutput
	ToAlertConfigurationNotificationOutputWithContext(context.Context) AlertConfigurationNotificationOutput
}

type AlertConfigurationNotificationArgs struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken pulumi.StringPtrInput `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName pulumi.StringPtrInput `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey pulumi.StringPtrInput `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion pulumi.StringPtrInput `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin pulumi.IntPtrInput `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress pulumi.StringPtrInput `pulumi:"emailAddress"`
	// Flag indicating email notifications should be sent. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	EmailEnabled pulumi.BoolPtrInput `pulumi:"emailEnabled"`
	// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
	FlowName pulumi.StringPtrInput `pulumi:"flowName"`
	// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	FlowdockApiToken pulumi.StringPtrInput `pulumi:"flowdockApiToken"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5. **NOTE** `PAGER_DUTY`, `VICTOR_OPS`, and `OPS_GENIE` notifications do not return this value. The notification interval must be configured and managed within each external service.
	IntervalMin pulumi.IntPtrInput `pulumi:"intervalMin"`
	// Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB Cloud needs to send this notification via Microsoft Teams. Required if `typeName` is `MICROSOFT_TEAMS`. If the URL later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.
	MicrosoftTeamsWebhookUrl pulumi.StringPtrInput `pulumi:"microsoftTeamsWebhookUrl"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber pulumi.StringPtrInput `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey pulumi.StringPtrInput `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion pulumi.StringPtrInput `pulumi:"opsGenieRegion"`
	// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
	OrgName pulumi.StringPtrInput `pulumi:"orgName"`
	// Optional. One or more roles that receive the configured alert. If you include this field, Atlas sends alerts only to users assigned the roles you specify in the array. If you omit this field, Atlas sends alerts to users assigned any role. This parameter is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	// Accepted values are:
	Roles pulumi.StringArrayInput `pulumi:"roles"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey pulumi.StringPtrInput `pulumi:"serviceKey"`
	// Flag indicating if text message notifications should be sent to this user's mobile phone. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	SmsEnabled pulumi.BoolPtrInput `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
	// Label for the team that receives this notification.
	TeamName pulumi.StringPtrInput `pulumi:"teamName"`
	// Type of alert notification.
	// Accepted values are:
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey pulumi.StringPtrInput `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey pulumi.StringPtrInput `pulumi:"victorOpsRoutingKey"`
	// Optional authentication secret for the `WEBHOOK` notifications type.
	WebhookSecret pulumi.StringPtrInput `pulumi:"webhookSecret"`
	// Target URL  for the `WEBHOOK` notifications type.
	WebhookUrl pulumi.StringPtrInput `pulumi:"webhookUrl"`
}

func (AlertConfigurationNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationNotification)(nil)).Elem()
}

func (i AlertConfigurationNotificationArgs) ToAlertConfigurationNotificationOutput() AlertConfigurationNotificationOutput {
	return i.ToAlertConfigurationNotificationOutputWithContext(context.Background())
}

func (i AlertConfigurationNotificationArgs) ToAlertConfigurationNotificationOutputWithContext(ctx context.Context) AlertConfigurationNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationNotificationOutput)
}

// AlertConfigurationNotificationArrayInput is an input type that accepts AlertConfigurationNotificationArray and AlertConfigurationNotificationArrayOutput values.
// You can construct a concrete instance of `AlertConfigurationNotificationArrayInput` via:
//
//	AlertConfigurationNotificationArray{ AlertConfigurationNotificationArgs{...} }
type AlertConfigurationNotificationArrayInput interface {
	pulumi.Input

	ToAlertConfigurationNotificationArrayOutput() AlertConfigurationNotificationArrayOutput
	ToAlertConfigurationNotificationArrayOutputWithContext(context.Context) AlertConfigurationNotificationArrayOutput
}

type AlertConfigurationNotificationArray []AlertConfigurationNotificationInput

func (AlertConfigurationNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationNotification)(nil)).Elem()
}

func (i AlertConfigurationNotificationArray) ToAlertConfigurationNotificationArrayOutput() AlertConfigurationNotificationArrayOutput {
	return i.ToAlertConfigurationNotificationArrayOutputWithContext(context.Background())
}

func (i AlertConfigurationNotificationArray) ToAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) AlertConfigurationNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationNotificationArrayOutput)
}

type AlertConfigurationNotificationOutput struct{ *pulumi.OutputState }

func (AlertConfigurationNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationNotification)(nil)).Elem()
}

func (o AlertConfigurationNotificationOutput) ToAlertConfigurationNotificationOutput() AlertConfigurationNotificationOutput {
	return o
}

func (o AlertConfigurationNotificationOutput) ToAlertConfigurationNotificationOutputWithContext(ctx context.Context) AlertConfigurationNotificationOutput {
	return o
}

// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o AlertConfigurationNotificationOutput) ApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.ApiToken }).(pulumi.StringPtrOutput)
}

// Slack channel name. Required for the SLACK notifications type.
func (o AlertConfigurationNotificationOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.ChannelName }).(pulumi.StringPtrOutput)
}

// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
func (o AlertConfigurationNotificationOutput) DatadogApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.DatadogApiKey }).(pulumi.StringPtrOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
func (o AlertConfigurationNotificationOutput) DatadogRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.DatadogRegion }).(pulumi.StringPtrOutput)
}

// Number of minutes to wait after an alert condition is detected before sending out the first notification.
func (o AlertConfigurationNotificationOutput) DelayMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *int { return v.DelayMin }).(pulumi.IntPtrOutput)
}

// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
func (o AlertConfigurationNotificationOutput) EmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.EmailAddress }).(pulumi.StringPtrOutput)
}

// Flag indicating email notifications should be sent. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
func (o AlertConfigurationNotificationOutput) EmailEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *bool { return v.EmailEnabled }).(pulumi.BoolPtrOutput)
}

// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
func (o AlertConfigurationNotificationOutput) FlowName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.FlowName }).(pulumi.StringPtrOutput)
}

// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o AlertConfigurationNotificationOutput) FlowdockApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.FlowdockApiToken }).(pulumi.StringPtrOutput)
}

// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5. **NOTE** `PAGER_DUTY`, `VICTOR_OPS`, and `OPS_GENIE` notifications do not return this value. The notification interval must be configured and managed within each external service.
func (o AlertConfigurationNotificationOutput) IntervalMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *int { return v.IntervalMin }).(pulumi.IntPtrOutput)
}

// Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB Cloud needs to send this notification via Microsoft Teams. Required if `typeName` is `MICROSOFT_TEAMS`. If the URL later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.
func (o AlertConfigurationNotificationOutput) MicrosoftTeamsWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.MicrosoftTeamsWebhookUrl }).(pulumi.StringPtrOutput)
}

// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
func (o AlertConfigurationNotificationOutput) MobileNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.MobileNumber }).(pulumi.StringPtrOutput)
}

// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o AlertConfigurationNotificationOutput) OpsGenieApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.OpsGenieApiKey }).(pulumi.StringPtrOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
func (o AlertConfigurationNotificationOutput) OpsGenieRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.OpsGenieRegion }).(pulumi.StringPtrOutput)
}

// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
func (o AlertConfigurationNotificationOutput) OrgName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.OrgName }).(pulumi.StringPtrOutput)
}

// Optional. One or more roles that receive the configured alert. If you include this field, Atlas sends alerts only to users assigned the roles you specify in the array. If you omit this field, Atlas sends alerts to users assigned any role. This parameter is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
// Accepted values are:
func (o AlertConfigurationNotificationOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o AlertConfigurationNotificationOutput) ServiceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.ServiceKey }).(pulumi.StringPtrOutput)
}

// Flag indicating if text message notifications should be sent to this user's mobile phone. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
func (o AlertConfigurationNotificationOutput) SmsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *bool { return v.SmsEnabled }).(pulumi.BoolPtrOutput)
}

// Unique identifier of a team.
func (o AlertConfigurationNotificationOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

// Label for the team that receives this notification.
func (o AlertConfigurationNotificationOutput) TeamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.TeamName }).(pulumi.StringPtrOutput)
}

// Type of alert notification.
// Accepted values are:
func (o AlertConfigurationNotificationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
func (o AlertConfigurationNotificationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o AlertConfigurationNotificationOutput) VictorOpsApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.VictorOpsApiKey }).(pulumi.StringPtrOutput)
}

// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o AlertConfigurationNotificationOutput) VictorOpsRoutingKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.VictorOpsRoutingKey }).(pulumi.StringPtrOutput)
}

// Optional authentication secret for the `WEBHOOK` notifications type.
func (o AlertConfigurationNotificationOutput) WebhookSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.WebhookSecret }).(pulumi.StringPtrOutput)
}

// Target URL  for the `WEBHOOK` notifications type.
func (o AlertConfigurationNotificationOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.WebhookUrl }).(pulumi.StringPtrOutput)
}

type AlertConfigurationNotificationArrayOutput struct{ *pulumi.OutputState }

func (AlertConfigurationNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationNotification)(nil)).Elem()
}

func (o AlertConfigurationNotificationArrayOutput) ToAlertConfigurationNotificationArrayOutput() AlertConfigurationNotificationArrayOutput {
	return o
}

func (o AlertConfigurationNotificationArrayOutput) ToAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) AlertConfigurationNotificationArrayOutput {
	return o
}

func (o AlertConfigurationNotificationArrayOutput) Index(i pulumi.IntInput) AlertConfigurationNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConfigurationNotification {
		return vs[0].([]AlertConfigurationNotification)[vs[1].(int)]
	}).(AlertConfigurationNotificationOutput)
}

type AlertConfigurationThresholdConfig struct {
	// If omitted, the configuration is disabled.
	// Accepted values are:
	// Accepted values are:
	// Accepted values are:
	Operator *string `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold *float64 `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units *string `pulumi:"units"`
}

// AlertConfigurationThresholdConfigInput is an input type that accepts AlertConfigurationThresholdConfigArgs and AlertConfigurationThresholdConfigOutput values.
// You can construct a concrete instance of `AlertConfigurationThresholdConfigInput` via:
//
//	AlertConfigurationThresholdConfigArgs{...}
type AlertConfigurationThresholdConfigInput interface {
	pulumi.Input

	ToAlertConfigurationThresholdConfigOutput() AlertConfigurationThresholdConfigOutput
	ToAlertConfigurationThresholdConfigOutputWithContext(context.Context) AlertConfigurationThresholdConfigOutput
}

type AlertConfigurationThresholdConfigArgs struct {
	// If omitted, the configuration is disabled.
	// Accepted values are:
	// Accepted values are:
	// Accepted values are:
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units pulumi.StringPtrInput `pulumi:"units"`
}

func (AlertConfigurationThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationThresholdConfig)(nil)).Elem()
}

func (i AlertConfigurationThresholdConfigArgs) ToAlertConfigurationThresholdConfigOutput() AlertConfigurationThresholdConfigOutput {
	return i.ToAlertConfigurationThresholdConfigOutputWithContext(context.Background())
}

func (i AlertConfigurationThresholdConfigArgs) ToAlertConfigurationThresholdConfigOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationThresholdConfigOutput)
}

func (i AlertConfigurationThresholdConfigArgs) ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput {
	return i.ToAlertConfigurationThresholdConfigPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationThresholdConfigArgs) ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationThresholdConfigOutput).ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx)
}

// AlertConfigurationThresholdConfigPtrInput is an input type that accepts AlertConfigurationThresholdConfigArgs, AlertConfigurationThresholdConfigPtr and AlertConfigurationThresholdConfigPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationThresholdConfigPtrInput` via:
//
//	        AlertConfigurationThresholdConfigArgs{...}
//
//	or:
//
//	        nil
type AlertConfigurationThresholdConfigPtrInput interface {
	pulumi.Input

	ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput
	ToAlertConfigurationThresholdConfigPtrOutputWithContext(context.Context) AlertConfigurationThresholdConfigPtrOutput
}

type alertConfigurationThresholdConfigPtrType AlertConfigurationThresholdConfigArgs

func AlertConfigurationThresholdConfigPtr(v *AlertConfigurationThresholdConfigArgs) AlertConfigurationThresholdConfigPtrInput {
	return (*alertConfigurationThresholdConfigPtrType)(v)
}

func (*alertConfigurationThresholdConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationThresholdConfig)(nil)).Elem()
}

func (i *alertConfigurationThresholdConfigPtrType) ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput {
	return i.ToAlertConfigurationThresholdConfigPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationThresholdConfigPtrType) ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationThresholdConfigPtrOutput)
}

type AlertConfigurationThresholdConfigOutput struct{ *pulumi.OutputState }

func (AlertConfigurationThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationThresholdConfig)(nil)).Elem()
}

func (o AlertConfigurationThresholdConfigOutput) ToAlertConfigurationThresholdConfigOutput() AlertConfigurationThresholdConfigOutput {
	return o
}

func (o AlertConfigurationThresholdConfigOutput) ToAlertConfigurationThresholdConfigOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigOutput {
	return o
}

func (o AlertConfigurationThresholdConfigOutput) ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput {
	return o.ToAlertConfigurationThresholdConfigPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationThresholdConfigOutput) ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfigurationThresholdConfig) *AlertConfigurationThresholdConfig {
		return &v
	}).(AlertConfigurationThresholdConfigPtrOutput)
}

// If omitted, the configuration is disabled.
// Accepted values are:
// Accepted values are:
// Accepted values are:
func (o AlertConfigurationThresholdConfigOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationThresholdConfig) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o AlertConfigurationThresholdConfigOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AlertConfigurationThresholdConfig) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

// The units for the threshold value. Depends on the type of metric.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
func (o AlertConfigurationThresholdConfigOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationThresholdConfig) *string { return v.Units }).(pulumi.StringPtrOutput)
}

type AlertConfigurationThresholdConfigPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationThresholdConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationThresholdConfig)(nil)).Elem()
}

func (o AlertConfigurationThresholdConfigPtrOutput) ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput {
	return o
}

func (o AlertConfigurationThresholdConfigPtrOutput) ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigPtrOutput {
	return o
}

func (o AlertConfigurationThresholdConfigPtrOutput) Elem() AlertConfigurationThresholdConfigOutput {
	return o.ApplyT(func(v *AlertConfigurationThresholdConfig) AlertConfigurationThresholdConfig {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationThresholdConfig
		return ret
	}).(AlertConfigurationThresholdConfigOutput)
}

// If omitted, the configuration is disabled.
// Accepted values are:
// Accepted values are:
// Accepted values are:
func (o AlertConfigurationThresholdConfigPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o AlertConfigurationThresholdConfigPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AlertConfigurationThresholdConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

// The units for the threshold value. Depends on the type of metric.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
func (o AlertConfigurationThresholdConfigPtrOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Units
	}).(pulumi.StringPtrOutput)
}

type BackupCompliancePolicyOnDemandPolicyItem struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// BackupCompliancePolicyOnDemandPolicyItemInput is an input type that accepts BackupCompliancePolicyOnDemandPolicyItemArgs and BackupCompliancePolicyOnDemandPolicyItemOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyOnDemandPolicyItemInput` via:
//
//	BackupCompliancePolicyOnDemandPolicyItemArgs{...}
type BackupCompliancePolicyOnDemandPolicyItemInput interface {
	pulumi.Input

	ToBackupCompliancePolicyOnDemandPolicyItemOutput() BackupCompliancePolicyOnDemandPolicyItemOutput
	ToBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(context.Context) BackupCompliancePolicyOnDemandPolicyItemOutput
}

type BackupCompliancePolicyOnDemandPolicyItemArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (BackupCompliancePolicyOnDemandPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (i BackupCompliancePolicyOnDemandPolicyItemArgs) ToBackupCompliancePolicyOnDemandPolicyItemOutput() BackupCompliancePolicyOnDemandPolicyItemOutput {
	return i.ToBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyOnDemandPolicyItemArgs) ToBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(ctx context.Context) BackupCompliancePolicyOnDemandPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyOnDemandPolicyItemOutput)
}

func (i BackupCompliancePolicyOnDemandPolicyItemArgs) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutput() BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return i.ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyOnDemandPolicyItemArgs) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyOnDemandPolicyItemOutput).ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx)
}

// BackupCompliancePolicyOnDemandPolicyItemPtrInput is an input type that accepts BackupCompliancePolicyOnDemandPolicyItemArgs, BackupCompliancePolicyOnDemandPolicyItemPtr and BackupCompliancePolicyOnDemandPolicyItemPtrOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyOnDemandPolicyItemPtrInput` via:
//
//	        BackupCompliancePolicyOnDemandPolicyItemArgs{...}
//
//	or:
//
//	        nil
type BackupCompliancePolicyOnDemandPolicyItemPtrInput interface {
	pulumi.Input

	ToBackupCompliancePolicyOnDemandPolicyItemPtrOutput() BackupCompliancePolicyOnDemandPolicyItemPtrOutput
	ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Context) BackupCompliancePolicyOnDemandPolicyItemPtrOutput
}

type backupCompliancePolicyOnDemandPolicyItemPtrType BackupCompliancePolicyOnDemandPolicyItemArgs

func BackupCompliancePolicyOnDemandPolicyItemPtr(v *BackupCompliancePolicyOnDemandPolicyItemArgs) BackupCompliancePolicyOnDemandPolicyItemPtrInput {
	return (*backupCompliancePolicyOnDemandPolicyItemPtrType)(v)
}

func (*backupCompliancePolicyOnDemandPolicyItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (i *backupCompliancePolicyOnDemandPolicyItemPtrType) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutput() BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return i.ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Background())
}

func (i *backupCompliancePolicyOnDemandPolicyItemPtrType) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyOnDemandPolicyItemPtrOutput)
}

type BackupCompliancePolicyOnDemandPolicyItemOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyOnDemandPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (o BackupCompliancePolicyOnDemandPolicyItemOutput) ToBackupCompliancePolicyOnDemandPolicyItemOutput() BackupCompliancePolicyOnDemandPolicyItemOutput {
	return o
}

func (o BackupCompliancePolicyOnDemandPolicyItemOutput) ToBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(ctx context.Context) BackupCompliancePolicyOnDemandPolicyItemOutput {
	return o
}

func (o BackupCompliancePolicyOnDemandPolicyItemOutput) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutput() BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o.ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Background())
}

func (o BackupCompliancePolicyOnDemandPolicyItemOutput) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupCompliancePolicyOnDemandPolicyItem) *BackupCompliancePolicyOnDemandPolicyItem {
		return &v
	}).(BackupCompliancePolicyOnDemandPolicyItemPtrOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyOnDemandPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyOnDemandPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyOnDemandPolicyItemOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyOnDemandPolicyItem) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyOnDemandPolicyItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyOnDemandPolicyItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyOnDemandPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupCompliancePolicyOnDemandPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyOnDemandPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyOnDemandPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type BackupCompliancePolicyOnDemandPolicyItemPtrOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyOnDemandPolicyItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutput() BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o
}

func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o
}

func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) Elem() BackupCompliancePolicyOnDemandPolicyItemOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyOnDemandPolicyItem) BackupCompliancePolicyOnDemandPolicyItem {
		if v != nil {
			return *v
		}
		var ret BackupCompliancePolicyOnDemandPolicyItem
		return ret
	}).(BackupCompliancePolicyOnDemandPolicyItemOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyOnDemandPolicyItem) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyOnDemandPolicyItem) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyOnDemandPolicyItem) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyOnDemandPolicyItem) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyOnDemandPolicyItem) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type BackupCompliancePolicyPolicyItemDaily struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// BackupCompliancePolicyPolicyItemDailyInput is an input type that accepts BackupCompliancePolicyPolicyItemDailyArgs and BackupCompliancePolicyPolicyItemDailyOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemDailyInput` via:
//
//	BackupCompliancePolicyPolicyItemDailyArgs{...}
type BackupCompliancePolicyPolicyItemDailyInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemDailyOutput() BackupCompliancePolicyPolicyItemDailyOutput
	ToBackupCompliancePolicyPolicyItemDailyOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemDailyOutput
}

type BackupCompliancePolicyPolicyItemDailyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (BackupCompliancePolicyPolicyItemDailyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (i BackupCompliancePolicyPolicyItemDailyArgs) ToBackupCompliancePolicyPolicyItemDailyOutput() BackupCompliancePolicyPolicyItemDailyOutput {
	return i.ToBackupCompliancePolicyPolicyItemDailyOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemDailyArgs) ToBackupCompliancePolicyPolicyItemDailyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemDailyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemDailyOutput)
}

func (i BackupCompliancePolicyPolicyItemDailyArgs) ToBackupCompliancePolicyPolicyItemDailyPtrOutput() BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return i.ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemDailyArgs) ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemDailyOutput).ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx)
}

// BackupCompliancePolicyPolicyItemDailyPtrInput is an input type that accepts BackupCompliancePolicyPolicyItemDailyArgs, BackupCompliancePolicyPolicyItemDailyPtr and BackupCompliancePolicyPolicyItemDailyPtrOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemDailyPtrInput` via:
//
//	        BackupCompliancePolicyPolicyItemDailyArgs{...}
//
//	or:
//
//	        nil
type BackupCompliancePolicyPolicyItemDailyPtrInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemDailyPtrOutput() BackupCompliancePolicyPolicyItemDailyPtrOutput
	ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemDailyPtrOutput
}

type backupCompliancePolicyPolicyItemDailyPtrType BackupCompliancePolicyPolicyItemDailyArgs

func BackupCompliancePolicyPolicyItemDailyPtr(v *BackupCompliancePolicyPolicyItemDailyArgs) BackupCompliancePolicyPolicyItemDailyPtrInput {
	return (*backupCompliancePolicyPolicyItemDailyPtrType)(v)
}

func (*backupCompliancePolicyPolicyItemDailyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (i *backupCompliancePolicyPolicyItemDailyPtrType) ToBackupCompliancePolicyPolicyItemDailyPtrOutput() BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return i.ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Background())
}

func (i *backupCompliancePolicyPolicyItemDailyPtrType) ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemDailyPtrOutput)
}

type BackupCompliancePolicyPolicyItemDailyOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemDailyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemDailyOutput) ToBackupCompliancePolicyPolicyItemDailyOutput() BackupCompliancePolicyPolicyItemDailyOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemDailyOutput) ToBackupCompliancePolicyPolicyItemDailyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemDailyOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemDailyOutput) ToBackupCompliancePolicyPolicyItemDailyPtrOutput() BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o.ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Background())
}

func (o BackupCompliancePolicyPolicyItemDailyOutput) ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupCompliancePolicyPolicyItemDaily) *BackupCompliancePolicyPolicyItemDaily {
		return &v
	}).(BackupCompliancePolicyPolicyItemDailyPtrOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyPolicyItemDailyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemDaily) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyPolicyItemDailyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemDaily) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyPolicyItemDailyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemDaily) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyPolicyItemDailyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemDaily) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyPolicyItemDailyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemDaily) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type BackupCompliancePolicyPolicyItemDailyPtrOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemDailyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) ToBackupCompliancePolicyPolicyItemDailyPtrOutput() BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) Elem() BackupCompliancePolicyPolicyItemDailyOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemDaily) BackupCompliancePolicyPolicyItemDaily {
		if v != nil {
			return *v
		}
		var ret BackupCompliancePolicyPolicyItemDaily
		return ret
	}).(BackupCompliancePolicyPolicyItemDailyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemDaily) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemDaily) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type BackupCompliancePolicyPolicyItemHourly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// BackupCompliancePolicyPolicyItemHourlyInput is an input type that accepts BackupCompliancePolicyPolicyItemHourlyArgs and BackupCompliancePolicyPolicyItemHourlyOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemHourlyInput` via:
//
//	BackupCompliancePolicyPolicyItemHourlyArgs{...}
type BackupCompliancePolicyPolicyItemHourlyInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemHourlyOutput() BackupCompliancePolicyPolicyItemHourlyOutput
	ToBackupCompliancePolicyPolicyItemHourlyOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemHourlyOutput
}

type BackupCompliancePolicyPolicyItemHourlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (BackupCompliancePolicyPolicyItemHourlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (i BackupCompliancePolicyPolicyItemHourlyArgs) ToBackupCompliancePolicyPolicyItemHourlyOutput() BackupCompliancePolicyPolicyItemHourlyOutput {
	return i.ToBackupCompliancePolicyPolicyItemHourlyOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemHourlyArgs) ToBackupCompliancePolicyPolicyItemHourlyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemHourlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemHourlyOutput)
}

func (i BackupCompliancePolicyPolicyItemHourlyArgs) ToBackupCompliancePolicyPolicyItemHourlyPtrOutput() BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return i.ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemHourlyArgs) ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemHourlyOutput).ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx)
}

// BackupCompliancePolicyPolicyItemHourlyPtrInput is an input type that accepts BackupCompliancePolicyPolicyItemHourlyArgs, BackupCompliancePolicyPolicyItemHourlyPtr and BackupCompliancePolicyPolicyItemHourlyPtrOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemHourlyPtrInput` via:
//
//	        BackupCompliancePolicyPolicyItemHourlyArgs{...}
//
//	or:
//
//	        nil
type BackupCompliancePolicyPolicyItemHourlyPtrInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemHourlyPtrOutput() BackupCompliancePolicyPolicyItemHourlyPtrOutput
	ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemHourlyPtrOutput
}

type backupCompliancePolicyPolicyItemHourlyPtrType BackupCompliancePolicyPolicyItemHourlyArgs

func BackupCompliancePolicyPolicyItemHourlyPtr(v *BackupCompliancePolicyPolicyItemHourlyArgs) BackupCompliancePolicyPolicyItemHourlyPtrInput {
	return (*backupCompliancePolicyPolicyItemHourlyPtrType)(v)
}

func (*backupCompliancePolicyPolicyItemHourlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (i *backupCompliancePolicyPolicyItemHourlyPtrType) ToBackupCompliancePolicyPolicyItemHourlyPtrOutput() BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return i.ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (i *backupCompliancePolicyPolicyItemHourlyPtrType) ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemHourlyPtrOutput)
}

type BackupCompliancePolicyPolicyItemHourlyOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemHourlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemHourlyOutput) ToBackupCompliancePolicyPolicyItemHourlyOutput() BackupCompliancePolicyPolicyItemHourlyOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemHourlyOutput) ToBackupCompliancePolicyPolicyItemHourlyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemHourlyOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemHourlyOutput) ToBackupCompliancePolicyPolicyItemHourlyPtrOutput() BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o.ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (o BackupCompliancePolicyPolicyItemHourlyOutput) ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupCompliancePolicyPolicyItemHourly) *BackupCompliancePolicyPolicyItemHourly {
		return &v
	}).(BackupCompliancePolicyPolicyItemHourlyPtrOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyPolicyItemHourlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemHourly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyPolicyItemHourlyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemHourly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyPolicyItemHourlyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemHourly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyPolicyItemHourlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemHourly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyPolicyItemHourlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemHourly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type BackupCompliancePolicyPolicyItemHourlyPtrOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemHourlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) ToBackupCompliancePolicyPolicyItemHourlyPtrOutput() BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) Elem() BackupCompliancePolicyPolicyItemHourlyOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemHourly) BackupCompliancePolicyPolicyItemHourly {
		if v != nil {
			return *v
		}
		var ret BackupCompliancePolicyPolicyItemHourly
		return ret
	}).(BackupCompliancePolicyPolicyItemHourlyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemHourly) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemHourly) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type BackupCompliancePolicyPolicyItemMonthly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// BackupCompliancePolicyPolicyItemMonthlyInput is an input type that accepts BackupCompliancePolicyPolicyItemMonthlyArgs and BackupCompliancePolicyPolicyItemMonthlyOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemMonthlyInput` via:
//
//	BackupCompliancePolicyPolicyItemMonthlyArgs{...}
type BackupCompliancePolicyPolicyItemMonthlyInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemMonthlyOutput() BackupCompliancePolicyPolicyItemMonthlyOutput
	ToBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemMonthlyOutput
}

type BackupCompliancePolicyPolicyItemMonthlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (BackupCompliancePolicyPolicyItemMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (i BackupCompliancePolicyPolicyItemMonthlyArgs) ToBackupCompliancePolicyPolicyItemMonthlyOutput() BackupCompliancePolicyPolicyItemMonthlyOutput {
	return i.ToBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemMonthlyArgs) ToBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemMonthlyOutput)
}

// BackupCompliancePolicyPolicyItemMonthlyArrayInput is an input type that accepts BackupCompliancePolicyPolicyItemMonthlyArray and BackupCompliancePolicyPolicyItemMonthlyArrayOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemMonthlyArrayInput` via:
//
//	BackupCompliancePolicyPolicyItemMonthlyArray{ BackupCompliancePolicyPolicyItemMonthlyArgs{...} }
type BackupCompliancePolicyPolicyItemMonthlyArrayInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemMonthlyArrayOutput() BackupCompliancePolicyPolicyItemMonthlyArrayOutput
	ToBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemMonthlyArrayOutput
}

type BackupCompliancePolicyPolicyItemMonthlyArray []BackupCompliancePolicyPolicyItemMonthlyInput

func (BackupCompliancePolicyPolicyItemMonthlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (i BackupCompliancePolicyPolicyItemMonthlyArray) ToBackupCompliancePolicyPolicyItemMonthlyArrayOutput() BackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return i.ToBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemMonthlyArray) ToBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemMonthlyArrayOutput)
}

type BackupCompliancePolicyPolicyItemMonthlyOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemMonthlyOutput) ToBackupCompliancePolicyPolicyItemMonthlyOutput() BackupCompliancePolicyPolicyItemMonthlyOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemMonthlyOutput) ToBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemMonthlyOutput {
	return o
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyPolicyItemMonthlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemMonthly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyPolicyItemMonthlyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemMonthly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyPolicyItemMonthlyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemMonthly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyPolicyItemMonthlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemMonthly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyPolicyItemMonthlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemMonthly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type BackupCompliancePolicyPolicyItemMonthlyArrayOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemMonthlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemMonthlyArrayOutput) ToBackupCompliancePolicyPolicyItemMonthlyArrayOutput() BackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemMonthlyArrayOutput) ToBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemMonthlyArrayOutput) Index(i pulumi.IntInput) BackupCompliancePolicyPolicyItemMonthlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupCompliancePolicyPolicyItemMonthly {
		return vs[0].([]BackupCompliancePolicyPolicyItemMonthly)[vs[1].(int)]
	}).(BackupCompliancePolicyPolicyItemMonthlyOutput)
}

type BackupCompliancePolicyPolicyItemWeekly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// BackupCompliancePolicyPolicyItemWeeklyInput is an input type that accepts BackupCompliancePolicyPolicyItemWeeklyArgs and BackupCompliancePolicyPolicyItemWeeklyOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemWeeklyInput` via:
//
//	BackupCompliancePolicyPolicyItemWeeklyArgs{...}
type BackupCompliancePolicyPolicyItemWeeklyInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemWeeklyOutput() BackupCompliancePolicyPolicyItemWeeklyOutput
	ToBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemWeeklyOutput
}

type BackupCompliancePolicyPolicyItemWeeklyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (BackupCompliancePolicyPolicyItemWeeklyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (i BackupCompliancePolicyPolicyItemWeeklyArgs) ToBackupCompliancePolicyPolicyItemWeeklyOutput() BackupCompliancePolicyPolicyItemWeeklyOutput {
	return i.ToBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemWeeklyArgs) ToBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemWeeklyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemWeeklyOutput)
}

// BackupCompliancePolicyPolicyItemWeeklyArrayInput is an input type that accepts BackupCompliancePolicyPolicyItemWeeklyArray and BackupCompliancePolicyPolicyItemWeeklyArrayOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemWeeklyArrayInput` via:
//
//	BackupCompliancePolicyPolicyItemWeeklyArray{ BackupCompliancePolicyPolicyItemWeeklyArgs{...} }
type BackupCompliancePolicyPolicyItemWeeklyArrayInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemWeeklyArrayOutput() BackupCompliancePolicyPolicyItemWeeklyArrayOutput
	ToBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemWeeklyArrayOutput
}

type BackupCompliancePolicyPolicyItemWeeklyArray []BackupCompliancePolicyPolicyItemWeeklyInput

func (BackupCompliancePolicyPolicyItemWeeklyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (i BackupCompliancePolicyPolicyItemWeeklyArray) ToBackupCompliancePolicyPolicyItemWeeklyArrayOutput() BackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return i.ToBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemWeeklyArray) ToBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemWeeklyArrayOutput)
}

type BackupCompliancePolicyPolicyItemWeeklyOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemWeeklyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemWeeklyOutput) ToBackupCompliancePolicyPolicyItemWeeklyOutput() BackupCompliancePolicyPolicyItemWeeklyOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemWeeklyOutput) ToBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemWeeklyOutput {
	return o
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyPolicyItemWeeklyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemWeekly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyPolicyItemWeeklyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemWeekly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyPolicyItemWeeklyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemWeekly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyPolicyItemWeeklyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemWeekly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyPolicyItemWeeklyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemWeekly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type BackupCompliancePolicyPolicyItemWeeklyArrayOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemWeeklyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemWeeklyArrayOutput) ToBackupCompliancePolicyPolicyItemWeeklyArrayOutput() BackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemWeeklyArrayOutput) ToBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemWeeklyArrayOutput) Index(i pulumi.IntInput) BackupCompliancePolicyPolicyItemWeeklyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupCompliancePolicyPolicyItemWeekly {
		return vs[0].([]BackupCompliancePolicyPolicyItemWeekly)[vs[1].(int)]
	}).(BackupCompliancePolicyPolicyItemWeeklyOutput)
}

type CloudBackupScheduleCopySetting struct {
	// Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. "AWS" "AZURE" "GCP"
	CloudProvider *string `pulumi:"cloudProvider"`
	// List that describes which types of snapshots to copy. i.e. "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "ON_DEMAND"
	Frequencies []string `pulumi:"frequencies"`
	// Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under https://www.mongodb.com/docs/atlas/reference/cloud-providers/ 'regions' link
	RegionName *string `pulumi:"regionName"`
	// Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, do a GET request to Return One Cluster in One Project and consult the replicationSpecs array https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#operation/returnOneCluster
	ReplicationSpecId *string `pulumi:"replicationSpecId"`
	// Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
	ShouldCopyOplogs *bool `pulumi:"shouldCopyOplogs"`
}

// CloudBackupScheduleCopySettingInput is an input type that accepts CloudBackupScheduleCopySettingArgs and CloudBackupScheduleCopySettingOutput values.
// You can construct a concrete instance of `CloudBackupScheduleCopySettingInput` via:
//
//	CloudBackupScheduleCopySettingArgs{...}
type CloudBackupScheduleCopySettingInput interface {
	pulumi.Input

	ToCloudBackupScheduleCopySettingOutput() CloudBackupScheduleCopySettingOutput
	ToCloudBackupScheduleCopySettingOutputWithContext(context.Context) CloudBackupScheduleCopySettingOutput
}

type CloudBackupScheduleCopySettingArgs struct {
	// Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. "AWS" "AZURE" "GCP"
	CloudProvider pulumi.StringPtrInput `pulumi:"cloudProvider"`
	// List that describes which types of snapshots to copy. i.e. "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "ON_DEMAND"
	Frequencies pulumi.StringArrayInput `pulumi:"frequencies"`
	// Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under https://www.mongodb.com/docs/atlas/reference/cloud-providers/ 'regions' link
	RegionName pulumi.StringPtrInput `pulumi:"regionName"`
	// Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, do a GET request to Return One Cluster in One Project and consult the replicationSpecs array https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#operation/returnOneCluster
	ReplicationSpecId pulumi.StringPtrInput `pulumi:"replicationSpecId"`
	// Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
	ShouldCopyOplogs pulumi.BoolPtrInput `pulumi:"shouldCopyOplogs"`
}

func (CloudBackupScheduleCopySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupScheduleCopySetting)(nil)).Elem()
}

func (i CloudBackupScheduleCopySettingArgs) ToCloudBackupScheduleCopySettingOutput() CloudBackupScheduleCopySettingOutput {
	return i.ToCloudBackupScheduleCopySettingOutputWithContext(context.Background())
}

func (i CloudBackupScheduleCopySettingArgs) ToCloudBackupScheduleCopySettingOutputWithContext(ctx context.Context) CloudBackupScheduleCopySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupScheduleCopySettingOutput)
}

// CloudBackupScheduleCopySettingArrayInput is an input type that accepts CloudBackupScheduleCopySettingArray and CloudBackupScheduleCopySettingArrayOutput values.
// You can construct a concrete instance of `CloudBackupScheduleCopySettingArrayInput` via:
//
//	CloudBackupScheduleCopySettingArray{ CloudBackupScheduleCopySettingArgs{...} }
type CloudBackupScheduleCopySettingArrayInput interface {
	pulumi.Input

	ToCloudBackupScheduleCopySettingArrayOutput() CloudBackupScheduleCopySettingArrayOutput
	ToCloudBackupScheduleCopySettingArrayOutputWithContext(context.Context) CloudBackupScheduleCopySettingArrayOutput
}

type CloudBackupScheduleCopySettingArray []CloudBackupScheduleCopySettingInput

func (CloudBackupScheduleCopySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupScheduleCopySetting)(nil)).Elem()
}

func (i CloudBackupScheduleCopySettingArray) ToCloudBackupScheduleCopySettingArrayOutput() CloudBackupScheduleCopySettingArrayOutput {
	return i.ToCloudBackupScheduleCopySettingArrayOutputWithContext(context.Background())
}

func (i CloudBackupScheduleCopySettingArray) ToCloudBackupScheduleCopySettingArrayOutputWithContext(ctx context.Context) CloudBackupScheduleCopySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupScheduleCopySettingArrayOutput)
}

type CloudBackupScheduleCopySettingOutput struct{ *pulumi.OutputState }

func (CloudBackupScheduleCopySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupScheduleCopySetting)(nil)).Elem()
}

func (o CloudBackupScheduleCopySettingOutput) ToCloudBackupScheduleCopySettingOutput() CloudBackupScheduleCopySettingOutput {
	return o
}

func (o CloudBackupScheduleCopySettingOutput) ToCloudBackupScheduleCopySettingOutputWithContext(ctx context.Context) CloudBackupScheduleCopySettingOutput {
	return o
}

// Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. "AWS" "AZURE" "GCP"
func (o CloudBackupScheduleCopySettingOutput) CloudProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupScheduleCopySetting) *string { return v.CloudProvider }).(pulumi.StringPtrOutput)
}

// List that describes which types of snapshots to copy. i.e. "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "ON_DEMAND"
func (o CloudBackupScheduleCopySettingOutput) Frequencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudBackupScheduleCopySetting) []string { return v.Frequencies }).(pulumi.StringArrayOutput)
}

// Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under https://www.mongodb.com/docs/atlas/reference/cloud-providers/ 'regions' link
func (o CloudBackupScheduleCopySettingOutput) RegionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupScheduleCopySetting) *string { return v.RegionName }).(pulumi.StringPtrOutput)
}

// Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, do a GET request to Return One Cluster in One Project and consult the replicationSpecs array https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#operation/returnOneCluster
func (o CloudBackupScheduleCopySettingOutput) ReplicationSpecId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupScheduleCopySetting) *string { return v.ReplicationSpecId }).(pulumi.StringPtrOutput)
}

// Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
func (o CloudBackupScheduleCopySettingOutput) ShouldCopyOplogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudBackupScheduleCopySetting) *bool { return v.ShouldCopyOplogs }).(pulumi.BoolPtrOutput)
}

type CloudBackupScheduleCopySettingArrayOutput struct{ *pulumi.OutputState }

func (CloudBackupScheduleCopySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupScheduleCopySetting)(nil)).Elem()
}

func (o CloudBackupScheduleCopySettingArrayOutput) ToCloudBackupScheduleCopySettingArrayOutput() CloudBackupScheduleCopySettingArrayOutput {
	return o
}

func (o CloudBackupScheduleCopySettingArrayOutput) ToCloudBackupScheduleCopySettingArrayOutputWithContext(ctx context.Context) CloudBackupScheduleCopySettingArrayOutput {
	return o
}

func (o CloudBackupScheduleCopySettingArrayOutput) Index(i pulumi.IntInput) CloudBackupScheduleCopySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudBackupScheduleCopySetting {
		return vs[0].([]CloudBackupScheduleCopySetting)[vs[1].(int)]
	}).(CloudBackupScheduleCopySettingOutput)
}

type CloudBackupScheduleExport struct {
	// Unique identifier of the CloudBackupSnapshotExportBucket export_bucket_id value.
	ExportBucketId *string `pulumi:"exportBucketId"`
	// Frequency associated with the export snapshot item.
	FrequencyType *string `pulumi:"frequencyType"`
}

// CloudBackupScheduleExportInput is an input type that accepts CloudBackupScheduleExportArgs and CloudBackupScheduleExportOutput values.
// You can construct a concrete instance of `CloudBackupScheduleExportInput` via:
//
//	CloudBackupScheduleExportArgs{...}
type CloudBackupScheduleExportInput interface {
	pulumi.Input

	ToCloudBackupScheduleExportOutput() CloudBackupScheduleExportOutput
	ToCloudBackupScheduleExportOutputWithContext(context.Context) CloudBackupScheduleExportOutput
}

type CloudBackupScheduleExportArgs struct {
	// Unique identifier of the CloudBackupSnapshotExportBucket export_bucket_id value.
	ExportBucketId pulumi.StringPtrInput `pulumi:"exportBucketId"`
	// Frequency associated with the export snapshot item.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
}

func (CloudBackupScheduleExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupScheduleExport)(nil)).Elem()
}

func (i CloudBackupScheduleExportArgs) ToCloudBackupScheduleExportOutput() CloudBackupScheduleExportOutput {
	return i.ToCloudBackupScheduleExportOutputWithContext(context.Background())
}

func (i CloudBackupScheduleExportArgs) ToCloudBackupScheduleExportOutputWithContext(ctx context.Context) CloudBackupScheduleExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupScheduleExportOutput)
}

func (i CloudBackupScheduleExportArgs) ToCloudBackupScheduleExportPtrOutput() CloudBackupScheduleExportPtrOutput {
	return i.ToCloudBackupScheduleExportPtrOutputWithContext(context.Background())
}

func (i CloudBackupScheduleExportArgs) ToCloudBackupScheduleExportPtrOutputWithContext(ctx context.Context) CloudBackupScheduleExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupScheduleExportOutput).ToCloudBackupScheduleExportPtrOutputWithContext(ctx)
}

// CloudBackupScheduleExportPtrInput is an input type that accepts CloudBackupScheduleExportArgs, CloudBackupScheduleExportPtr and CloudBackupScheduleExportPtrOutput values.
// You can construct a concrete instance of `CloudBackupScheduleExportPtrInput` via:
//
//	        CloudBackupScheduleExportArgs{...}
//
//	or:
//
//	        nil
type CloudBackupScheduleExportPtrInput interface {
	pulumi.Input

	ToCloudBackupScheduleExportPtrOutput() CloudBackupScheduleExportPtrOutput
	ToCloudBackupScheduleExportPtrOutputWithContext(context.Context) CloudBackupScheduleExportPtrOutput
}

type cloudBackupScheduleExportPtrType CloudBackupScheduleExportArgs

func CloudBackupScheduleExportPtr(v *CloudBackupScheduleExportArgs) CloudBackupScheduleExportPtrInput {
	return (*cloudBackupScheduleExportPtrType)(v)
}

func (*cloudBackupScheduleExportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupScheduleExport)(nil)).Elem()
}

func (i *cloudBackupScheduleExportPtrType) ToCloudBackupScheduleExportPtrOutput() CloudBackupScheduleExportPtrOutput {
	return i.ToCloudBackupScheduleExportPtrOutputWithContext(context.Background())
}

func (i *cloudBackupScheduleExportPtrType) ToCloudBackupScheduleExportPtrOutputWithContext(ctx context.Context) CloudBackupScheduleExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupScheduleExportPtrOutput)
}

type CloudBackupScheduleExportOutput struct{ *pulumi.OutputState }

func (CloudBackupScheduleExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupScheduleExport)(nil)).Elem()
}

func (o CloudBackupScheduleExportOutput) ToCloudBackupScheduleExportOutput() CloudBackupScheduleExportOutput {
	return o
}

func (o CloudBackupScheduleExportOutput) ToCloudBackupScheduleExportOutputWithContext(ctx context.Context) CloudBackupScheduleExportOutput {
	return o
}

func (o CloudBackupScheduleExportOutput) ToCloudBackupScheduleExportPtrOutput() CloudBackupScheduleExportPtrOutput {
	return o.ToCloudBackupScheduleExportPtrOutputWithContext(context.Background())
}

func (o CloudBackupScheduleExportOutput) ToCloudBackupScheduleExportPtrOutputWithContext(ctx context.Context) CloudBackupScheduleExportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudBackupScheduleExport) *CloudBackupScheduleExport {
		return &v
	}).(CloudBackupScheduleExportPtrOutput)
}

// Unique identifier of the CloudBackupSnapshotExportBucket export_bucket_id value.
func (o CloudBackupScheduleExportOutput) ExportBucketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupScheduleExport) *string { return v.ExportBucketId }).(pulumi.StringPtrOutput)
}

// Frequency associated with the export snapshot item.
func (o CloudBackupScheduleExportOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupScheduleExport) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

type CloudBackupScheduleExportPtrOutput struct{ *pulumi.OutputState }

func (CloudBackupScheduleExportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupScheduleExport)(nil)).Elem()
}

func (o CloudBackupScheduleExportPtrOutput) ToCloudBackupScheduleExportPtrOutput() CloudBackupScheduleExportPtrOutput {
	return o
}

func (o CloudBackupScheduleExportPtrOutput) ToCloudBackupScheduleExportPtrOutputWithContext(ctx context.Context) CloudBackupScheduleExportPtrOutput {
	return o
}

func (o CloudBackupScheduleExportPtrOutput) Elem() CloudBackupScheduleExportOutput {
	return o.ApplyT(func(v *CloudBackupScheduleExport) CloudBackupScheduleExport {
		if v != nil {
			return *v
		}
		var ret CloudBackupScheduleExport
		return ret
	}).(CloudBackupScheduleExportOutput)
}

// Unique identifier of the CloudBackupSnapshotExportBucket export_bucket_id value.
func (o CloudBackupScheduleExportPtrOutput) ExportBucketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupScheduleExport) *string {
		if v == nil {
			return nil
		}
		return v.ExportBucketId
	}).(pulumi.StringPtrOutput)
}

// Frequency associated with the export snapshot item.
func (o CloudBackupScheduleExportPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupScheduleExport) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

type CloudBackupSchedulePolicyItemDaily struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (daily in this case). The only supported value for daily policies is `1` day.
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For daily policies, the frequency type is defined as `daily`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.  Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the hourly policy item specifies a retention of two days, the daily retention policy must specify two days or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// CloudBackupSchedulePolicyItemDailyInput is an input type that accepts CloudBackupSchedulePolicyItemDailyArgs and CloudBackupSchedulePolicyItemDailyOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemDailyInput` via:
//
//	CloudBackupSchedulePolicyItemDailyArgs{...}
type CloudBackupSchedulePolicyItemDailyInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemDailyOutput() CloudBackupSchedulePolicyItemDailyOutput
	ToCloudBackupSchedulePolicyItemDailyOutputWithContext(context.Context) CloudBackupSchedulePolicyItemDailyOutput
}

type CloudBackupSchedulePolicyItemDailyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (daily in this case). The only supported value for daily policies is `1` day.
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For daily policies, the frequency type is defined as `daily`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.  Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the hourly policy item specifies a retention of two days, the daily retention policy must specify two days or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (CloudBackupSchedulePolicyItemDailyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemDailyArgs) ToCloudBackupSchedulePolicyItemDailyOutput() CloudBackupSchedulePolicyItemDailyOutput {
	return i.ToCloudBackupSchedulePolicyItemDailyOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemDailyArgs) ToCloudBackupSchedulePolicyItemDailyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemDailyOutput)
}

func (i CloudBackupSchedulePolicyItemDailyArgs) ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemDailyArgs) ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemDailyOutput).ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx)
}

// CloudBackupSchedulePolicyItemDailyPtrInput is an input type that accepts CloudBackupSchedulePolicyItemDailyArgs, CloudBackupSchedulePolicyItemDailyPtr and CloudBackupSchedulePolicyItemDailyPtrOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemDailyPtrInput` via:
//
//	        CloudBackupSchedulePolicyItemDailyArgs{...}
//
//	or:
//
//	        nil
type CloudBackupSchedulePolicyItemDailyPtrInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput
	ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput
}

type cloudBackupSchedulePolicyItemDailyPtrType CloudBackupSchedulePolicyItemDailyArgs

func CloudBackupSchedulePolicyItemDailyPtr(v *CloudBackupSchedulePolicyItemDailyArgs) CloudBackupSchedulePolicyItemDailyPtrInput {
	return (*cloudBackupSchedulePolicyItemDailyPtrType)(v)
}

func (*cloudBackupSchedulePolicyItemDailyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (i *cloudBackupSchedulePolicyItemDailyPtrType) ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(context.Background())
}

func (i *cloudBackupSchedulePolicyItemDailyPtrType) ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemDailyPtrOutput)
}

type CloudBackupSchedulePolicyItemDailyOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemDailyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemDailyOutput) ToCloudBackupSchedulePolicyItemDailyOutput() CloudBackupSchedulePolicyItemDailyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemDailyOutput) ToCloudBackupSchedulePolicyItemDailyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemDailyOutput) ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput {
	return o.ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(context.Background())
}

func (o CloudBackupSchedulePolicyItemDailyOutput) ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudBackupSchedulePolicyItemDaily) *CloudBackupSchedulePolicyItemDaily {
		return &v
	}).(CloudBackupSchedulePolicyItemDailyPtrOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (daily in this case). The only supported value for daily policies is `1` day.
func (o CloudBackupSchedulePolicyItemDailyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For daily policies, the frequency type is defined as `daily`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o CloudBackupSchedulePolicyItemDailyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o CloudBackupSchedulePolicyItemDailyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o CloudBackupSchedulePolicyItemDailyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`.  Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the hourly policy item specifies a retention of two days, the daily retention policy must specify two days or greater.
func (o CloudBackupSchedulePolicyItemDailyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudBackupSchedulePolicyItemDailyPtrOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemDailyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemDailyPtrOutput) ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemDailyPtrOutput) ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemDailyPtrOutput) Elem() CloudBackupSchedulePolicyItemDailyOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) CloudBackupSchedulePolicyItemDaily {
		if v != nil {
			return *v
		}
		var ret CloudBackupSchedulePolicyItemDaily
		return ret
	}).(CloudBackupSchedulePolicyItemDailyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (daily in this case). The only supported value for daily policies is `1` day.
func (o CloudBackupSchedulePolicyItemDailyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For daily policies, the frequency type is defined as `daily`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o CloudBackupSchedulePolicyItemDailyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o CloudBackupSchedulePolicyItemDailyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o CloudBackupSchedulePolicyItemDailyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`.  Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the hourly policy item specifies a retention of two days, the daily retention policy must specify two days or greater.
func (o CloudBackupSchedulePolicyItemDailyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type CloudBackupSchedulePolicyItemHourly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (hourly in this case). The supported values for hourly policies are `1`, `2`, `4`, `6`, `8` or `12` hours. Note that `12` hours is the only accepted value for NVMe clusters.
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For hourly policies, the frequency type is defined as `hourly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue int `pulumi:"retentionValue"`
}

// CloudBackupSchedulePolicyItemHourlyInput is an input type that accepts CloudBackupSchedulePolicyItemHourlyArgs and CloudBackupSchedulePolicyItemHourlyOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemHourlyInput` via:
//
//	CloudBackupSchedulePolicyItemHourlyArgs{...}
type CloudBackupSchedulePolicyItemHourlyInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemHourlyOutput() CloudBackupSchedulePolicyItemHourlyOutput
	ToCloudBackupSchedulePolicyItemHourlyOutputWithContext(context.Context) CloudBackupSchedulePolicyItemHourlyOutput
}

type CloudBackupSchedulePolicyItemHourlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (hourly in this case). The supported values for hourly policies are `1`, `2`, `4`, `6`, `8` or `12` hours. Note that `12` hours is the only accepted value for NVMe clusters.
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For hourly policies, the frequency type is defined as `hourly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (CloudBackupSchedulePolicyItemHourlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemHourlyArgs) ToCloudBackupSchedulePolicyItemHourlyOutput() CloudBackupSchedulePolicyItemHourlyOutput {
	return i.ToCloudBackupSchedulePolicyItemHourlyOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemHourlyArgs) ToCloudBackupSchedulePolicyItemHourlyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemHourlyOutput)
}

func (i CloudBackupSchedulePolicyItemHourlyArgs) ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemHourlyArgs) ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemHourlyOutput).ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx)
}

// CloudBackupSchedulePolicyItemHourlyPtrInput is an input type that accepts CloudBackupSchedulePolicyItemHourlyArgs, CloudBackupSchedulePolicyItemHourlyPtr and CloudBackupSchedulePolicyItemHourlyPtrOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemHourlyPtrInput` via:
//
//	        CloudBackupSchedulePolicyItemHourlyArgs{...}
//
//	or:
//
//	        nil
type CloudBackupSchedulePolicyItemHourlyPtrInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput
	ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput
}

type cloudBackupSchedulePolicyItemHourlyPtrType CloudBackupSchedulePolicyItemHourlyArgs

func CloudBackupSchedulePolicyItemHourlyPtr(v *CloudBackupSchedulePolicyItemHourlyArgs) CloudBackupSchedulePolicyItemHourlyPtrInput {
	return (*cloudBackupSchedulePolicyItemHourlyPtrType)(v)
}

func (*cloudBackupSchedulePolicyItemHourlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (i *cloudBackupSchedulePolicyItemHourlyPtrType) ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (i *cloudBackupSchedulePolicyItemHourlyPtrType) ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemHourlyPtrOutput)
}

type CloudBackupSchedulePolicyItemHourlyOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemHourlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) ToCloudBackupSchedulePolicyItemHourlyOutput() CloudBackupSchedulePolicyItemHourlyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) ToCloudBackupSchedulePolicyItemHourlyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return o.ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudBackupSchedulePolicyItemHourly) *CloudBackupSchedulePolicyItemHourly {
		return &v
	}).(CloudBackupSchedulePolicyItemHourlyPtrOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (hourly in this case). The supported values for hourly policies are `1`, `2`, `4`, `6`, `8` or `12` hours. Note that `12` hours is the only accepted value for NVMe clusters.
func (o CloudBackupSchedulePolicyItemHourlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For hourly policies, the frequency type is defined as `hourly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o CloudBackupSchedulePolicyItemHourlyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o CloudBackupSchedulePolicyItemHourlyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o CloudBackupSchedulePolicyItemHourlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`.
func (o CloudBackupSchedulePolicyItemHourlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudBackupSchedulePolicyItemHourlyPtrOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemHourlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) Elem() CloudBackupSchedulePolicyItemHourlyOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) CloudBackupSchedulePolicyItemHourly {
		if v != nil {
			return *v
		}
		var ret CloudBackupSchedulePolicyItemHourly
		return ret
	}).(CloudBackupSchedulePolicyItemHourlyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (hourly in this case). The supported values for hourly policies are `1`, `2`, `4`, `6`, `8` or `12` hours. Note that `12` hours is the only accepted value for NVMe clusters.
func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For hourly policies, the frequency type is defined as `hourly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`.
func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type CloudBackupSchedulePolicyItemMonthly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// CloudBackupSchedulePolicyItemMonthlyInput is an input type that accepts CloudBackupSchedulePolicyItemMonthlyArgs and CloudBackupSchedulePolicyItemMonthlyOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemMonthlyInput` via:
//
//	CloudBackupSchedulePolicyItemMonthlyArgs{...}
type CloudBackupSchedulePolicyItemMonthlyInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemMonthlyOutput() CloudBackupSchedulePolicyItemMonthlyOutput
	ToCloudBackupSchedulePolicyItemMonthlyOutputWithContext(context.Context) CloudBackupSchedulePolicyItemMonthlyOutput
}

type CloudBackupSchedulePolicyItemMonthlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (CloudBackupSchedulePolicyItemMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemMonthlyArgs) ToCloudBackupSchedulePolicyItemMonthlyOutput() CloudBackupSchedulePolicyItemMonthlyOutput {
	return i.ToCloudBackupSchedulePolicyItemMonthlyOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemMonthlyArgs) ToCloudBackupSchedulePolicyItemMonthlyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemMonthlyOutput)
}

// CloudBackupSchedulePolicyItemMonthlyArrayInput is an input type that accepts CloudBackupSchedulePolicyItemMonthlyArray and CloudBackupSchedulePolicyItemMonthlyArrayOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemMonthlyArrayInput` via:
//
//	CloudBackupSchedulePolicyItemMonthlyArray{ CloudBackupSchedulePolicyItemMonthlyArgs{...} }
type CloudBackupSchedulePolicyItemMonthlyArrayInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemMonthlyArrayOutput() CloudBackupSchedulePolicyItemMonthlyArrayOutput
	ToCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(context.Context) CloudBackupSchedulePolicyItemMonthlyArrayOutput
}

type CloudBackupSchedulePolicyItemMonthlyArray []CloudBackupSchedulePolicyItemMonthlyInput

func (CloudBackupSchedulePolicyItemMonthlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemMonthlyArray) ToCloudBackupSchedulePolicyItemMonthlyArrayOutput() CloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return i.ToCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemMonthlyArray) ToCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemMonthlyArrayOutput)
}

type CloudBackupSchedulePolicyItemMonthlyOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemMonthlyOutput) ToCloudBackupSchedulePolicyItemMonthlyOutput() CloudBackupSchedulePolicyItemMonthlyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemMonthlyOutput) ToCloudBackupSchedulePolicyItemMonthlyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemMonthlyOutput {
	return o
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o CloudBackupSchedulePolicyItemMonthlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o CloudBackupSchedulePolicyItemMonthlyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o CloudBackupSchedulePolicyItemMonthlyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o CloudBackupSchedulePolicyItemMonthlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o CloudBackupSchedulePolicyItemMonthlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudBackupSchedulePolicyItemMonthlyArrayOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemMonthlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemMonthlyArrayOutput) ToCloudBackupSchedulePolicyItemMonthlyArrayOutput() CloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemMonthlyArrayOutput) ToCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemMonthlyArrayOutput) Index(i pulumi.IntInput) CloudBackupSchedulePolicyItemMonthlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudBackupSchedulePolicyItemMonthly {
		return vs[0].([]CloudBackupSchedulePolicyItemMonthly)[vs[1].(int)]
	}).(CloudBackupSchedulePolicyItemMonthlyOutput)
}

type CloudBackupSchedulePolicyItemWeekly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (weekly in this case). The supported values for weekly policies are `1` through `7`, where `1` represents Monday and `7` represents Sunday.
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For weekly policies, the frequency type is defined as `weekly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Weekly policy must have retention of at least 7 days or 1 week. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the daily policy item specifies a retention of two weeks, the weekly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// CloudBackupSchedulePolicyItemWeeklyInput is an input type that accepts CloudBackupSchedulePolicyItemWeeklyArgs and CloudBackupSchedulePolicyItemWeeklyOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemWeeklyInput` via:
//
//	CloudBackupSchedulePolicyItemWeeklyArgs{...}
type CloudBackupSchedulePolicyItemWeeklyInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemWeeklyOutput() CloudBackupSchedulePolicyItemWeeklyOutput
	ToCloudBackupSchedulePolicyItemWeeklyOutputWithContext(context.Context) CloudBackupSchedulePolicyItemWeeklyOutput
}

type CloudBackupSchedulePolicyItemWeeklyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (weekly in this case). The supported values for weekly policies are `1` through `7`, where `1` represents Monday and `7` represents Sunday.
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For weekly policies, the frequency type is defined as `weekly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Weekly policy must have retention of at least 7 days or 1 week. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the daily policy item specifies a retention of two weeks, the weekly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (CloudBackupSchedulePolicyItemWeeklyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemWeeklyArgs) ToCloudBackupSchedulePolicyItemWeeklyOutput() CloudBackupSchedulePolicyItemWeeklyOutput {
	return i.ToCloudBackupSchedulePolicyItemWeeklyOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemWeeklyArgs) ToCloudBackupSchedulePolicyItemWeeklyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemWeeklyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemWeeklyOutput)
}

// CloudBackupSchedulePolicyItemWeeklyArrayInput is an input type that accepts CloudBackupSchedulePolicyItemWeeklyArray and CloudBackupSchedulePolicyItemWeeklyArrayOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemWeeklyArrayInput` via:
//
//	CloudBackupSchedulePolicyItemWeeklyArray{ CloudBackupSchedulePolicyItemWeeklyArgs{...} }
type CloudBackupSchedulePolicyItemWeeklyArrayInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemWeeklyArrayOutput() CloudBackupSchedulePolicyItemWeeklyArrayOutput
	ToCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(context.Context) CloudBackupSchedulePolicyItemWeeklyArrayOutput
}

type CloudBackupSchedulePolicyItemWeeklyArray []CloudBackupSchedulePolicyItemWeeklyInput

func (CloudBackupSchedulePolicyItemWeeklyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemWeeklyArray) ToCloudBackupSchedulePolicyItemWeeklyArrayOutput() CloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return i.ToCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemWeeklyArray) ToCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemWeeklyArrayOutput)
}

type CloudBackupSchedulePolicyItemWeeklyOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemWeeklyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemWeeklyOutput) ToCloudBackupSchedulePolicyItemWeeklyOutput() CloudBackupSchedulePolicyItemWeeklyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemWeeklyOutput) ToCloudBackupSchedulePolicyItemWeeklyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemWeeklyOutput {
	return o
}

// Desired frequency of the new backup policy item specified by `frequencyType` (weekly in this case). The supported values for weekly policies are `1` through `7`, where `1` represents Monday and `7` represents Sunday.
func (o CloudBackupSchedulePolicyItemWeeklyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For weekly policies, the frequency type is defined as `weekly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o CloudBackupSchedulePolicyItemWeeklyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o CloudBackupSchedulePolicyItemWeeklyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o CloudBackupSchedulePolicyItemWeeklyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Weekly policy must have retention of at least 7 days or 1 week. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the daily policy item specifies a retention of two weeks, the weekly retention policy must specify two weeks or greater.
func (o CloudBackupSchedulePolicyItemWeeklyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudBackupSchedulePolicyItemWeeklyArrayOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemWeeklyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemWeeklyArrayOutput) ToCloudBackupSchedulePolicyItemWeeklyArrayOutput() CloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemWeeklyArrayOutput) ToCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemWeeklyArrayOutput) Index(i pulumi.IntInput) CloudBackupSchedulePolicyItemWeeklyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudBackupSchedulePolicyItemWeekly {
		return vs[0].([]CloudBackupSchedulePolicyItemWeekly)[vs[1].(int)]
	}).(CloudBackupSchedulePolicyItemWeeklyOutput)
}

type CloudBackupSnapshotExportJobComponent struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	ExportId *string `pulumi:"exportId"`
	// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
	ReplicaSetName *string `pulumi:"replicaSetName"`
}

// CloudBackupSnapshotExportJobComponentInput is an input type that accepts CloudBackupSnapshotExportJobComponentArgs and CloudBackupSnapshotExportJobComponentOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotExportJobComponentInput` via:
//
//	CloudBackupSnapshotExportJobComponentArgs{...}
type CloudBackupSnapshotExportJobComponentInput interface {
	pulumi.Input

	ToCloudBackupSnapshotExportJobComponentOutput() CloudBackupSnapshotExportJobComponentOutput
	ToCloudBackupSnapshotExportJobComponentOutputWithContext(context.Context) CloudBackupSnapshotExportJobComponentOutput
}

type CloudBackupSnapshotExportJobComponentArgs struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	ExportId pulumi.StringPtrInput `pulumi:"exportId"`
	// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
	ReplicaSetName pulumi.StringPtrInput `pulumi:"replicaSetName"`
}

func (CloudBackupSnapshotExportJobComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (i CloudBackupSnapshotExportJobComponentArgs) ToCloudBackupSnapshotExportJobComponentOutput() CloudBackupSnapshotExportJobComponentOutput {
	return i.ToCloudBackupSnapshotExportJobComponentOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotExportJobComponentArgs) ToCloudBackupSnapshotExportJobComponentOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotExportJobComponentOutput)
}

// CloudBackupSnapshotExportJobComponentArrayInput is an input type that accepts CloudBackupSnapshotExportJobComponentArray and CloudBackupSnapshotExportJobComponentArrayOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotExportJobComponentArrayInput` via:
//
//	CloudBackupSnapshotExportJobComponentArray{ CloudBackupSnapshotExportJobComponentArgs{...} }
type CloudBackupSnapshotExportJobComponentArrayInput interface {
	pulumi.Input

	ToCloudBackupSnapshotExportJobComponentArrayOutput() CloudBackupSnapshotExportJobComponentArrayOutput
	ToCloudBackupSnapshotExportJobComponentArrayOutputWithContext(context.Context) CloudBackupSnapshotExportJobComponentArrayOutput
}

type CloudBackupSnapshotExportJobComponentArray []CloudBackupSnapshotExportJobComponentInput

func (CloudBackupSnapshotExportJobComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (i CloudBackupSnapshotExportJobComponentArray) ToCloudBackupSnapshotExportJobComponentArrayOutput() CloudBackupSnapshotExportJobComponentArrayOutput {
	return i.ToCloudBackupSnapshotExportJobComponentArrayOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotExportJobComponentArray) ToCloudBackupSnapshotExportJobComponentArrayOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotExportJobComponentArrayOutput)
}

type CloudBackupSnapshotExportJobComponentOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotExportJobComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (o CloudBackupSnapshotExportJobComponentOutput) ToCloudBackupSnapshotExportJobComponentOutput() CloudBackupSnapshotExportJobComponentOutput {
	return o
}

func (o CloudBackupSnapshotExportJobComponentOutput) ToCloudBackupSnapshotExportJobComponentOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobComponentOutput {
	return o
}

// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
func (o CloudBackupSnapshotExportJobComponentOutput) ExportId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotExportJobComponent) *string { return v.ExportId }).(pulumi.StringPtrOutput)
}

// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
func (o CloudBackupSnapshotExportJobComponentOutput) ReplicaSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotExportJobComponent) *string { return v.ReplicaSetName }).(pulumi.StringPtrOutput)
}

type CloudBackupSnapshotExportJobComponentArrayOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotExportJobComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (o CloudBackupSnapshotExportJobComponentArrayOutput) ToCloudBackupSnapshotExportJobComponentArrayOutput() CloudBackupSnapshotExportJobComponentArrayOutput {
	return o
}

func (o CloudBackupSnapshotExportJobComponentArrayOutput) ToCloudBackupSnapshotExportJobComponentArrayOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobComponentArrayOutput {
	return o
}

func (o CloudBackupSnapshotExportJobComponentArrayOutput) Index(i pulumi.IntInput) CloudBackupSnapshotExportJobComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudBackupSnapshotExportJobComponent {
		return vs[0].([]CloudBackupSnapshotExportJobComponent)[vs[1].(int)]
	}).(CloudBackupSnapshotExportJobComponentOutput)
}

type CloudBackupSnapshotExportJobCustomData struct {
	// Required if you want to include custom data using `customData` in the metadata file uploaded to the bucket. Key to include in the metadata file that Atlas uploads to the bucket when the export job finishes.
	Key string `pulumi:"key"`
	// Required if you specify `key`.
	Value string `pulumi:"value"`
}

// CloudBackupSnapshotExportJobCustomDataInput is an input type that accepts CloudBackupSnapshotExportJobCustomDataArgs and CloudBackupSnapshotExportJobCustomDataOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotExportJobCustomDataInput` via:
//
//	CloudBackupSnapshotExportJobCustomDataArgs{...}
type CloudBackupSnapshotExportJobCustomDataInput interface {
	pulumi.Input

	ToCloudBackupSnapshotExportJobCustomDataOutput() CloudBackupSnapshotExportJobCustomDataOutput
	ToCloudBackupSnapshotExportJobCustomDataOutputWithContext(context.Context) CloudBackupSnapshotExportJobCustomDataOutput
}

type CloudBackupSnapshotExportJobCustomDataArgs struct {
	// Required if you want to include custom data using `customData` in the metadata file uploaded to the bucket. Key to include in the metadata file that Atlas uploads to the bucket when the export job finishes.
	Key pulumi.StringInput `pulumi:"key"`
	// Required if you specify `key`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CloudBackupSnapshotExportJobCustomDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (i CloudBackupSnapshotExportJobCustomDataArgs) ToCloudBackupSnapshotExportJobCustomDataOutput() CloudBackupSnapshotExportJobCustomDataOutput {
	return i.ToCloudBackupSnapshotExportJobCustomDataOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotExportJobCustomDataArgs) ToCloudBackupSnapshotExportJobCustomDataOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobCustomDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotExportJobCustomDataOutput)
}

// CloudBackupSnapshotExportJobCustomDataArrayInput is an input type that accepts CloudBackupSnapshotExportJobCustomDataArray and CloudBackupSnapshotExportJobCustomDataArrayOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotExportJobCustomDataArrayInput` via:
//
//	CloudBackupSnapshotExportJobCustomDataArray{ CloudBackupSnapshotExportJobCustomDataArgs{...} }
type CloudBackupSnapshotExportJobCustomDataArrayInput interface {
	pulumi.Input

	ToCloudBackupSnapshotExportJobCustomDataArrayOutput() CloudBackupSnapshotExportJobCustomDataArrayOutput
	ToCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(context.Context) CloudBackupSnapshotExportJobCustomDataArrayOutput
}

type CloudBackupSnapshotExportJobCustomDataArray []CloudBackupSnapshotExportJobCustomDataInput

func (CloudBackupSnapshotExportJobCustomDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (i CloudBackupSnapshotExportJobCustomDataArray) ToCloudBackupSnapshotExportJobCustomDataArrayOutput() CloudBackupSnapshotExportJobCustomDataArrayOutput {
	return i.ToCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotExportJobCustomDataArray) ToCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobCustomDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotExportJobCustomDataArrayOutput)
}

type CloudBackupSnapshotExportJobCustomDataOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotExportJobCustomDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (o CloudBackupSnapshotExportJobCustomDataOutput) ToCloudBackupSnapshotExportJobCustomDataOutput() CloudBackupSnapshotExportJobCustomDataOutput {
	return o
}

func (o CloudBackupSnapshotExportJobCustomDataOutput) ToCloudBackupSnapshotExportJobCustomDataOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobCustomDataOutput {
	return o
}

// Required if you want to include custom data using `customData` in the metadata file uploaded to the bucket. Key to include in the metadata file that Atlas uploads to the bucket when the export job finishes.
func (o CloudBackupSnapshotExportJobCustomDataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSnapshotExportJobCustomData) string { return v.Key }).(pulumi.StringOutput)
}

// Required if you specify `key`.
func (o CloudBackupSnapshotExportJobCustomDataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSnapshotExportJobCustomData) string { return v.Value }).(pulumi.StringOutput)
}

type CloudBackupSnapshotExportJobCustomDataArrayOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotExportJobCustomDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (o CloudBackupSnapshotExportJobCustomDataArrayOutput) ToCloudBackupSnapshotExportJobCustomDataArrayOutput() CloudBackupSnapshotExportJobCustomDataArrayOutput {
	return o
}

func (o CloudBackupSnapshotExportJobCustomDataArrayOutput) ToCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobCustomDataArrayOutput {
	return o
}

func (o CloudBackupSnapshotExportJobCustomDataArrayOutput) Index(i pulumi.IntInput) CloudBackupSnapshotExportJobCustomDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudBackupSnapshotExportJobCustomData {
		return vs[0].([]CloudBackupSnapshotExportJobCustomData)[vs[1].(int)]
	}).(CloudBackupSnapshotExportJobCustomDataOutput)
}

type CloudBackupSnapshotMember struct {
	// Cloud provider that stores this snapshot.
	CloudProvider *string `pulumi:"cloudProvider"`
	// Unique identifier for the sharded cluster snapshot.
	Id *string `pulumi:"id"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName *string `pulumi:"replicaSetName"`
}

// CloudBackupSnapshotMemberInput is an input type that accepts CloudBackupSnapshotMemberArgs and CloudBackupSnapshotMemberOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotMemberInput` via:
//
//	CloudBackupSnapshotMemberArgs{...}
type CloudBackupSnapshotMemberInput interface {
	pulumi.Input

	ToCloudBackupSnapshotMemberOutput() CloudBackupSnapshotMemberOutput
	ToCloudBackupSnapshotMemberOutputWithContext(context.Context) CloudBackupSnapshotMemberOutput
}

type CloudBackupSnapshotMemberArgs struct {
	// Cloud provider that stores this snapshot.
	CloudProvider pulumi.StringPtrInput `pulumi:"cloudProvider"`
	// Unique identifier for the sharded cluster snapshot.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName pulumi.StringPtrInput `pulumi:"replicaSetName"`
}

func (CloudBackupSnapshotMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotMember)(nil)).Elem()
}

func (i CloudBackupSnapshotMemberArgs) ToCloudBackupSnapshotMemberOutput() CloudBackupSnapshotMemberOutput {
	return i.ToCloudBackupSnapshotMemberOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotMemberArgs) ToCloudBackupSnapshotMemberOutputWithContext(ctx context.Context) CloudBackupSnapshotMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotMemberOutput)
}

// CloudBackupSnapshotMemberArrayInput is an input type that accepts CloudBackupSnapshotMemberArray and CloudBackupSnapshotMemberArrayOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotMemberArrayInput` via:
//
//	CloudBackupSnapshotMemberArray{ CloudBackupSnapshotMemberArgs{...} }
type CloudBackupSnapshotMemberArrayInput interface {
	pulumi.Input

	ToCloudBackupSnapshotMemberArrayOutput() CloudBackupSnapshotMemberArrayOutput
	ToCloudBackupSnapshotMemberArrayOutputWithContext(context.Context) CloudBackupSnapshotMemberArrayOutput
}

type CloudBackupSnapshotMemberArray []CloudBackupSnapshotMemberInput

func (CloudBackupSnapshotMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSnapshotMember)(nil)).Elem()
}

func (i CloudBackupSnapshotMemberArray) ToCloudBackupSnapshotMemberArrayOutput() CloudBackupSnapshotMemberArrayOutput {
	return i.ToCloudBackupSnapshotMemberArrayOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotMemberArray) ToCloudBackupSnapshotMemberArrayOutputWithContext(ctx context.Context) CloudBackupSnapshotMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotMemberArrayOutput)
}

type CloudBackupSnapshotMemberOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotMember)(nil)).Elem()
}

func (o CloudBackupSnapshotMemberOutput) ToCloudBackupSnapshotMemberOutput() CloudBackupSnapshotMemberOutput {
	return o
}

func (o CloudBackupSnapshotMemberOutput) ToCloudBackupSnapshotMemberOutputWithContext(ctx context.Context) CloudBackupSnapshotMemberOutput {
	return o
}

// Cloud provider that stores this snapshot.
func (o CloudBackupSnapshotMemberOutput) CloudProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotMember) *string { return v.CloudProvider }).(pulumi.StringPtrOutput)
}

// Unique identifier for the sharded cluster snapshot.
func (o CloudBackupSnapshotMemberOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotMember) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Label given to a shard or config server from which Atlas took this snapshot.
func (o CloudBackupSnapshotMemberOutput) ReplicaSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotMember) *string { return v.ReplicaSetName }).(pulumi.StringPtrOutput)
}

type CloudBackupSnapshotMemberArrayOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSnapshotMember)(nil)).Elem()
}

func (o CloudBackupSnapshotMemberArrayOutput) ToCloudBackupSnapshotMemberArrayOutput() CloudBackupSnapshotMemberArrayOutput {
	return o
}

func (o CloudBackupSnapshotMemberArrayOutput) ToCloudBackupSnapshotMemberArrayOutputWithContext(ctx context.Context) CloudBackupSnapshotMemberArrayOutput {
	return o
}

func (o CloudBackupSnapshotMemberArrayOutput) Index(i pulumi.IntInput) CloudBackupSnapshotMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudBackupSnapshotMember {
		return vs[0].([]CloudBackupSnapshotMember)[vs[1].(int)]
	}).(CloudBackupSnapshotMemberOutput)
}

type CloudBackupSnapshotRestoreJobDeliveryTypeConfig struct {
	Automated             *bool `pulumi:"automated"`
	Download              *bool `pulumi:"download"`
	OplogInc              *int  `pulumi:"oplogInc"`
	OplogTs               *int  `pulumi:"oplogTs"`
	PointInTime           *bool `pulumi:"pointInTime"`
	PointInTimeUtcSeconds *int  `pulumi:"pointInTimeUtcSeconds"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
	TargetClusterName *string `pulumi:"targetClusterName"`
	// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
	TargetProjectId *string `pulumi:"targetProjectId"`
}

// CloudBackupSnapshotRestoreJobDeliveryTypeConfigInput is an input type that accepts CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs and CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotRestoreJobDeliveryTypeConfigInput` via:
//
//	CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs{...}
type CloudBackupSnapshotRestoreJobDeliveryTypeConfigInput interface {
	pulumi.Input

	ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput
	ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput
}

type CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs struct {
	Automated             pulumi.BoolPtrInput `pulumi:"automated"`
	Download              pulumi.BoolPtrInput `pulumi:"download"`
	OplogInc              pulumi.IntPtrInput  `pulumi:"oplogInc"`
	OplogTs               pulumi.IntPtrInput  `pulumi:"oplogTs"`
	PointInTime           pulumi.BoolPtrInput `pulumi:"pointInTime"`
	PointInTimeUtcSeconds pulumi.IntPtrInput  `pulumi:"pointInTimeUtcSeconds"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
	TargetClusterName pulumi.StringPtrInput `pulumi:"targetClusterName"`
	// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
	TargetProjectId pulumi.StringPtrInput `pulumi:"targetProjectId"`
}

func (CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (i CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput {
	return i.ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(ctx context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput)
}

func (i CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return i.ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput).ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx)
}

// CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrInput is an input type that accepts CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs, CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtr and CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrInput` via:
//
//	        CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs{...}
//
//	or:
//
//	        nil
type CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrInput interface {
	pulumi.Input

	ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput
	ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput
}

type cloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrType CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs

func CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtr(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs) CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrInput {
	return (*cloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrType)(v)
}

func (*cloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (i *cloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrType) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return i.ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Background())
}

func (i *cloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrType) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput)
}

type CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput {
	return o
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(ctx context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput {
	return o
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o.ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Background())
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *CloudBackupSnapshotRestoreJobDeliveryTypeConfig {
		return &v
	}).(CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) Automated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *bool { return v.Automated }).(pulumi.BoolPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) Download() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *bool { return v.Download }).(pulumi.BoolPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) OplogInc() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *int { return v.OplogInc }).(pulumi.IntPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) OplogTs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *int { return v.OplogTs }).(pulumi.IntPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) PointInTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *bool { return v.PointInTime }).(pulumi.BoolPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) PointInTimeUtcSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *int { return v.PointInTimeUtcSeconds }).(pulumi.IntPtrOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) TargetClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *string { return v.TargetClusterName }).(pulumi.StringPtrOutput)
}

// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) TargetProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *string { return v.TargetProjectId }).(pulumi.StringPtrOutput)
}

type CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) Elem() CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) CloudBackupSnapshotRestoreJobDeliveryTypeConfig {
		if v != nil {
			return *v
		}
		var ret CloudBackupSnapshotRestoreJobDeliveryTypeConfig
		return ret
	}).(CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) Automated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Automated
	}).(pulumi.BoolPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) Download() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Download
	}).(pulumi.BoolPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) OplogInc() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *int {
		if v == nil {
			return nil
		}
		return v.OplogInc
	}).(pulumi.IntPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) OplogTs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *int {
		if v == nil {
			return nil
		}
		return v.OplogTs
	}).(pulumi.IntPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) PointInTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.PointInTime
	}).(pulumi.BoolPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) PointInTimeUtcSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *int {
		if v == nil {
			return nil
		}
		return v.PointInTimeUtcSeconds
	}).(pulumi.IntPtrOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) TargetClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *string {
		if v == nil {
			return nil
		}
		return v.TargetClusterName
	}).(pulumi.StringPtrOutput)
}

// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) TargetProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *string {
		if v == nil {
			return nil
		}
		return v.TargetProjectId
	}).(pulumi.StringPtrOutput)
}

type CloudProviderAccessAuthorizationAws struct {
	IamAssumedRoleArn string `pulumi:"iamAssumedRoleArn"`
}

// CloudProviderAccessAuthorizationAwsInput is an input type that accepts CloudProviderAccessAuthorizationAwsArgs and CloudProviderAccessAuthorizationAwsOutput values.
// You can construct a concrete instance of `CloudProviderAccessAuthorizationAwsInput` via:
//
//	CloudProviderAccessAuthorizationAwsArgs{...}
type CloudProviderAccessAuthorizationAwsInput interface {
	pulumi.Input

	ToCloudProviderAccessAuthorizationAwsOutput() CloudProviderAccessAuthorizationAwsOutput
	ToCloudProviderAccessAuthorizationAwsOutputWithContext(context.Context) CloudProviderAccessAuthorizationAwsOutput
}

type CloudProviderAccessAuthorizationAwsArgs struct {
	IamAssumedRoleArn pulumi.StringInput `pulumi:"iamAssumedRoleArn"`
}

func (CloudProviderAccessAuthorizationAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessAuthorizationAws)(nil)).Elem()
}

func (i CloudProviderAccessAuthorizationAwsArgs) ToCloudProviderAccessAuthorizationAwsOutput() CloudProviderAccessAuthorizationAwsOutput {
	return i.ToCloudProviderAccessAuthorizationAwsOutputWithContext(context.Background())
}

func (i CloudProviderAccessAuthorizationAwsArgs) ToCloudProviderAccessAuthorizationAwsOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationAwsOutput)
}

func (i CloudProviderAccessAuthorizationAwsArgs) ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput {
	return i.ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(context.Background())
}

func (i CloudProviderAccessAuthorizationAwsArgs) ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationAwsOutput).ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx)
}

// CloudProviderAccessAuthorizationAwsPtrInput is an input type that accepts CloudProviderAccessAuthorizationAwsArgs, CloudProviderAccessAuthorizationAwsPtr and CloudProviderAccessAuthorizationAwsPtrOutput values.
// You can construct a concrete instance of `CloudProviderAccessAuthorizationAwsPtrInput` via:
//
//	        CloudProviderAccessAuthorizationAwsArgs{...}
//
//	or:
//
//	        nil
type CloudProviderAccessAuthorizationAwsPtrInput interface {
	pulumi.Input

	ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput
	ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(context.Context) CloudProviderAccessAuthorizationAwsPtrOutput
}

type cloudProviderAccessAuthorizationAwsPtrType CloudProviderAccessAuthorizationAwsArgs

func CloudProviderAccessAuthorizationAwsPtr(v *CloudProviderAccessAuthorizationAwsArgs) CloudProviderAccessAuthorizationAwsPtrInput {
	return (*cloudProviderAccessAuthorizationAwsPtrType)(v)
}

func (*cloudProviderAccessAuthorizationAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderAccessAuthorizationAws)(nil)).Elem()
}

func (i *cloudProviderAccessAuthorizationAwsPtrType) ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput {
	return i.ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(context.Background())
}

func (i *cloudProviderAccessAuthorizationAwsPtrType) ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationAwsPtrOutput)
}

type CloudProviderAccessAuthorizationAwsOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessAuthorizationAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessAuthorizationAws)(nil)).Elem()
}

func (o CloudProviderAccessAuthorizationAwsOutput) ToCloudProviderAccessAuthorizationAwsOutput() CloudProviderAccessAuthorizationAwsOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAwsOutput) ToCloudProviderAccessAuthorizationAwsOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAwsOutput) ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput {
	return o.ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(context.Background())
}

func (o CloudProviderAccessAuthorizationAwsOutput) ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudProviderAccessAuthorizationAws) *CloudProviderAccessAuthorizationAws {
		return &v
	}).(CloudProviderAccessAuthorizationAwsPtrOutput)
}

func (o CloudProviderAccessAuthorizationAwsOutput) IamAssumedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderAccessAuthorizationAws) string { return v.IamAssumedRoleArn }).(pulumi.StringOutput)
}

type CloudProviderAccessAuthorizationAwsPtrOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessAuthorizationAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderAccessAuthorizationAws)(nil)).Elem()
}

func (o CloudProviderAccessAuthorizationAwsPtrOutput) ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAwsPtrOutput) ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsPtrOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAwsPtrOutput) Elem() CloudProviderAccessAuthorizationAwsOutput {
	return o.ApplyT(func(v *CloudProviderAccessAuthorizationAws) CloudProviderAccessAuthorizationAws {
		if v != nil {
			return *v
		}
		var ret CloudProviderAccessAuthorizationAws
		return ret
	}).(CloudProviderAccessAuthorizationAwsOutput)
}

func (o CloudProviderAccessAuthorizationAwsPtrOutput) IamAssumedRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProviderAccessAuthorizationAws) *string {
		if v == nil {
			return nil
		}
		return &v.IamAssumedRoleArn
	}).(pulumi.StringPtrOutput)
}

type CloudProviderAccessAuthorizationFeatureUsage struct {
	FeatureId   map[string]interface{} `pulumi:"featureId"`
	FeatureType *string                `pulumi:"featureType"`
}

// CloudProviderAccessAuthorizationFeatureUsageInput is an input type that accepts CloudProviderAccessAuthorizationFeatureUsageArgs and CloudProviderAccessAuthorizationFeatureUsageOutput values.
// You can construct a concrete instance of `CloudProviderAccessAuthorizationFeatureUsageInput` via:
//
//	CloudProviderAccessAuthorizationFeatureUsageArgs{...}
type CloudProviderAccessAuthorizationFeatureUsageInput interface {
	pulumi.Input

	ToCloudProviderAccessAuthorizationFeatureUsageOutput() CloudProviderAccessAuthorizationFeatureUsageOutput
	ToCloudProviderAccessAuthorizationFeatureUsageOutputWithContext(context.Context) CloudProviderAccessAuthorizationFeatureUsageOutput
}

type CloudProviderAccessAuthorizationFeatureUsageArgs struct {
	FeatureId   pulumi.MapInput       `pulumi:"featureId"`
	FeatureType pulumi.StringPtrInput `pulumi:"featureType"`
}

func (CloudProviderAccessAuthorizationFeatureUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessAuthorizationFeatureUsage)(nil)).Elem()
}

func (i CloudProviderAccessAuthorizationFeatureUsageArgs) ToCloudProviderAccessAuthorizationFeatureUsageOutput() CloudProviderAccessAuthorizationFeatureUsageOutput {
	return i.ToCloudProviderAccessAuthorizationFeatureUsageOutputWithContext(context.Background())
}

func (i CloudProviderAccessAuthorizationFeatureUsageArgs) ToCloudProviderAccessAuthorizationFeatureUsageOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationFeatureUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationFeatureUsageOutput)
}

// CloudProviderAccessAuthorizationFeatureUsageArrayInput is an input type that accepts CloudProviderAccessAuthorizationFeatureUsageArray and CloudProviderAccessAuthorizationFeatureUsageArrayOutput values.
// You can construct a concrete instance of `CloudProviderAccessAuthorizationFeatureUsageArrayInput` via:
//
//	CloudProviderAccessAuthorizationFeatureUsageArray{ CloudProviderAccessAuthorizationFeatureUsageArgs{...} }
type CloudProviderAccessAuthorizationFeatureUsageArrayInput interface {
	pulumi.Input

	ToCloudProviderAccessAuthorizationFeatureUsageArrayOutput() CloudProviderAccessAuthorizationFeatureUsageArrayOutput
	ToCloudProviderAccessAuthorizationFeatureUsageArrayOutputWithContext(context.Context) CloudProviderAccessAuthorizationFeatureUsageArrayOutput
}

type CloudProviderAccessAuthorizationFeatureUsageArray []CloudProviderAccessAuthorizationFeatureUsageInput

func (CloudProviderAccessAuthorizationFeatureUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessAuthorizationFeatureUsage)(nil)).Elem()
}

func (i CloudProviderAccessAuthorizationFeatureUsageArray) ToCloudProviderAccessAuthorizationFeatureUsageArrayOutput() CloudProviderAccessAuthorizationFeatureUsageArrayOutput {
	return i.ToCloudProviderAccessAuthorizationFeatureUsageArrayOutputWithContext(context.Background())
}

func (i CloudProviderAccessAuthorizationFeatureUsageArray) ToCloudProviderAccessAuthorizationFeatureUsageArrayOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationFeatureUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationFeatureUsageArrayOutput)
}

type CloudProviderAccessAuthorizationFeatureUsageOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessAuthorizationFeatureUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessAuthorizationFeatureUsage)(nil)).Elem()
}

func (o CloudProviderAccessAuthorizationFeatureUsageOutput) ToCloudProviderAccessAuthorizationFeatureUsageOutput() CloudProviderAccessAuthorizationFeatureUsageOutput {
	return o
}

func (o CloudProviderAccessAuthorizationFeatureUsageOutput) ToCloudProviderAccessAuthorizationFeatureUsageOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationFeatureUsageOutput {
	return o
}

func (o CloudProviderAccessAuthorizationFeatureUsageOutput) FeatureId() pulumi.MapOutput {
	return o.ApplyT(func(v CloudProviderAccessAuthorizationFeatureUsage) map[string]interface{} { return v.FeatureId }).(pulumi.MapOutput)
}

func (o CloudProviderAccessAuthorizationFeatureUsageOutput) FeatureType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderAccessAuthorizationFeatureUsage) *string { return v.FeatureType }).(pulumi.StringPtrOutput)
}

type CloudProviderAccessAuthorizationFeatureUsageArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessAuthorizationFeatureUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessAuthorizationFeatureUsage)(nil)).Elem()
}

func (o CloudProviderAccessAuthorizationFeatureUsageArrayOutput) ToCloudProviderAccessAuthorizationFeatureUsageArrayOutput() CloudProviderAccessAuthorizationFeatureUsageArrayOutput {
	return o
}

func (o CloudProviderAccessAuthorizationFeatureUsageArrayOutput) ToCloudProviderAccessAuthorizationFeatureUsageArrayOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationFeatureUsageArrayOutput {
	return o
}

func (o CloudProviderAccessAuthorizationFeatureUsageArrayOutput) Index(i pulumi.IntInput) CloudProviderAccessAuthorizationFeatureUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderAccessAuthorizationFeatureUsage {
		return vs[0].([]CloudProviderAccessAuthorizationFeatureUsage)[vs[1].(int)]
	}).(CloudProviderAccessAuthorizationFeatureUsageOutput)
}

type CloudProviderAccessFeatureUsage struct {
	FeatureId   map[string]interface{} `pulumi:"featureId"`
	FeatureType *string                `pulumi:"featureType"`
}

// CloudProviderAccessFeatureUsageInput is an input type that accepts CloudProviderAccessFeatureUsageArgs and CloudProviderAccessFeatureUsageOutput values.
// You can construct a concrete instance of `CloudProviderAccessFeatureUsageInput` via:
//
//	CloudProviderAccessFeatureUsageArgs{...}
type CloudProviderAccessFeatureUsageInput interface {
	pulumi.Input

	ToCloudProviderAccessFeatureUsageOutput() CloudProviderAccessFeatureUsageOutput
	ToCloudProviderAccessFeatureUsageOutputWithContext(context.Context) CloudProviderAccessFeatureUsageOutput
}

type CloudProviderAccessFeatureUsageArgs struct {
	FeatureId   pulumi.MapInput       `pulumi:"featureId"`
	FeatureType pulumi.StringPtrInput `pulumi:"featureType"`
}

func (CloudProviderAccessFeatureUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessFeatureUsage)(nil)).Elem()
}

func (i CloudProviderAccessFeatureUsageArgs) ToCloudProviderAccessFeatureUsageOutput() CloudProviderAccessFeatureUsageOutput {
	return i.ToCloudProviderAccessFeatureUsageOutputWithContext(context.Background())
}

func (i CloudProviderAccessFeatureUsageArgs) ToCloudProviderAccessFeatureUsageOutputWithContext(ctx context.Context) CloudProviderAccessFeatureUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessFeatureUsageOutput)
}

// CloudProviderAccessFeatureUsageArrayInput is an input type that accepts CloudProviderAccessFeatureUsageArray and CloudProviderAccessFeatureUsageArrayOutput values.
// You can construct a concrete instance of `CloudProviderAccessFeatureUsageArrayInput` via:
//
//	CloudProviderAccessFeatureUsageArray{ CloudProviderAccessFeatureUsageArgs{...} }
type CloudProviderAccessFeatureUsageArrayInput interface {
	pulumi.Input

	ToCloudProviderAccessFeatureUsageArrayOutput() CloudProviderAccessFeatureUsageArrayOutput
	ToCloudProviderAccessFeatureUsageArrayOutputWithContext(context.Context) CloudProviderAccessFeatureUsageArrayOutput
}

type CloudProviderAccessFeatureUsageArray []CloudProviderAccessFeatureUsageInput

func (CloudProviderAccessFeatureUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessFeatureUsage)(nil)).Elem()
}

func (i CloudProviderAccessFeatureUsageArray) ToCloudProviderAccessFeatureUsageArrayOutput() CloudProviderAccessFeatureUsageArrayOutput {
	return i.ToCloudProviderAccessFeatureUsageArrayOutputWithContext(context.Background())
}

func (i CloudProviderAccessFeatureUsageArray) ToCloudProviderAccessFeatureUsageArrayOutputWithContext(ctx context.Context) CloudProviderAccessFeatureUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessFeatureUsageArrayOutput)
}

type CloudProviderAccessFeatureUsageOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessFeatureUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessFeatureUsage)(nil)).Elem()
}

func (o CloudProviderAccessFeatureUsageOutput) ToCloudProviderAccessFeatureUsageOutput() CloudProviderAccessFeatureUsageOutput {
	return o
}

func (o CloudProviderAccessFeatureUsageOutput) ToCloudProviderAccessFeatureUsageOutputWithContext(ctx context.Context) CloudProviderAccessFeatureUsageOutput {
	return o
}

func (o CloudProviderAccessFeatureUsageOutput) FeatureId() pulumi.MapOutput {
	return o.ApplyT(func(v CloudProviderAccessFeatureUsage) map[string]interface{} { return v.FeatureId }).(pulumi.MapOutput)
}

func (o CloudProviderAccessFeatureUsageOutput) FeatureType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderAccessFeatureUsage) *string { return v.FeatureType }).(pulumi.StringPtrOutput)
}

type CloudProviderAccessFeatureUsageArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessFeatureUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessFeatureUsage)(nil)).Elem()
}

func (o CloudProviderAccessFeatureUsageArrayOutput) ToCloudProviderAccessFeatureUsageArrayOutput() CloudProviderAccessFeatureUsageArrayOutput {
	return o
}

func (o CloudProviderAccessFeatureUsageArrayOutput) ToCloudProviderAccessFeatureUsageArrayOutputWithContext(ctx context.Context) CloudProviderAccessFeatureUsageArrayOutput {
	return o
}

func (o CloudProviderAccessFeatureUsageArrayOutput) Index(i pulumi.IntInput) CloudProviderAccessFeatureUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderAccessFeatureUsage {
		return vs[0].([]CloudProviderAccessFeatureUsage)[vs[1].(int)]
	}).(CloudProviderAccessFeatureUsageOutput)
}

type CloudProviderAccessSetupAwsConfig struct {
	AtlasAssumedRoleExternalId *string `pulumi:"atlasAssumedRoleExternalId"`
	AtlasAwsAccountArn         *string `pulumi:"atlasAwsAccountArn"`
}

// CloudProviderAccessSetupAwsConfigInput is an input type that accepts CloudProviderAccessSetupAwsConfigArgs and CloudProviderAccessSetupAwsConfigOutput values.
// You can construct a concrete instance of `CloudProviderAccessSetupAwsConfigInput` via:
//
//	CloudProviderAccessSetupAwsConfigArgs{...}
type CloudProviderAccessSetupAwsConfigInput interface {
	pulumi.Input

	ToCloudProviderAccessSetupAwsConfigOutput() CloudProviderAccessSetupAwsConfigOutput
	ToCloudProviderAccessSetupAwsConfigOutputWithContext(context.Context) CloudProviderAccessSetupAwsConfigOutput
}

type CloudProviderAccessSetupAwsConfigArgs struct {
	AtlasAssumedRoleExternalId pulumi.StringPtrInput `pulumi:"atlasAssumedRoleExternalId"`
	AtlasAwsAccountArn         pulumi.StringPtrInput `pulumi:"atlasAwsAccountArn"`
}

func (CloudProviderAccessSetupAwsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (i CloudProviderAccessSetupAwsConfigArgs) ToCloudProviderAccessSetupAwsConfigOutput() CloudProviderAccessSetupAwsConfigOutput {
	return i.ToCloudProviderAccessSetupAwsConfigOutputWithContext(context.Background())
}

func (i CloudProviderAccessSetupAwsConfigArgs) ToCloudProviderAccessSetupAwsConfigOutputWithContext(ctx context.Context) CloudProviderAccessSetupAwsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessSetupAwsConfigOutput)
}

// CloudProviderAccessSetupAwsConfigArrayInput is an input type that accepts CloudProviderAccessSetupAwsConfigArray and CloudProviderAccessSetupAwsConfigArrayOutput values.
// You can construct a concrete instance of `CloudProviderAccessSetupAwsConfigArrayInput` via:
//
//	CloudProviderAccessSetupAwsConfigArray{ CloudProviderAccessSetupAwsConfigArgs{...} }
type CloudProviderAccessSetupAwsConfigArrayInput interface {
	pulumi.Input

	ToCloudProviderAccessSetupAwsConfigArrayOutput() CloudProviderAccessSetupAwsConfigArrayOutput
	ToCloudProviderAccessSetupAwsConfigArrayOutputWithContext(context.Context) CloudProviderAccessSetupAwsConfigArrayOutput
}

type CloudProviderAccessSetupAwsConfigArray []CloudProviderAccessSetupAwsConfigInput

func (CloudProviderAccessSetupAwsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (i CloudProviderAccessSetupAwsConfigArray) ToCloudProviderAccessSetupAwsConfigArrayOutput() CloudProviderAccessSetupAwsConfigArrayOutput {
	return i.ToCloudProviderAccessSetupAwsConfigArrayOutputWithContext(context.Background())
}

func (i CloudProviderAccessSetupAwsConfigArray) ToCloudProviderAccessSetupAwsConfigArrayOutputWithContext(ctx context.Context) CloudProviderAccessSetupAwsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessSetupAwsConfigArrayOutput)
}

type CloudProviderAccessSetupAwsConfigOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessSetupAwsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (o CloudProviderAccessSetupAwsConfigOutput) ToCloudProviderAccessSetupAwsConfigOutput() CloudProviderAccessSetupAwsConfigOutput {
	return o
}

func (o CloudProviderAccessSetupAwsConfigOutput) ToCloudProviderAccessSetupAwsConfigOutputWithContext(ctx context.Context) CloudProviderAccessSetupAwsConfigOutput {
	return o
}

func (o CloudProviderAccessSetupAwsConfigOutput) AtlasAssumedRoleExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderAccessSetupAwsConfig) *string { return v.AtlasAssumedRoleExternalId }).(pulumi.StringPtrOutput)
}

func (o CloudProviderAccessSetupAwsConfigOutput) AtlasAwsAccountArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderAccessSetupAwsConfig) *string { return v.AtlasAwsAccountArn }).(pulumi.StringPtrOutput)
}

type CloudProviderAccessSetupAwsConfigArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessSetupAwsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (o CloudProviderAccessSetupAwsConfigArrayOutput) ToCloudProviderAccessSetupAwsConfigArrayOutput() CloudProviderAccessSetupAwsConfigArrayOutput {
	return o
}

func (o CloudProviderAccessSetupAwsConfigArrayOutput) ToCloudProviderAccessSetupAwsConfigArrayOutputWithContext(ctx context.Context) CloudProviderAccessSetupAwsConfigArrayOutput {
	return o
}

func (o CloudProviderAccessSetupAwsConfigArrayOutput) Index(i pulumi.IntInput) CloudProviderAccessSetupAwsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderAccessSetupAwsConfig {
		return vs[0].([]CloudProviderAccessSetupAwsConfig)[vs[1].(int)]
	}).(CloudProviderAccessSetupAwsConfigOutput)
}

type CloudProviderSnapshotBackupPolicyPolicy struct {
	Id          string                                              `pulumi:"id"`
	PolicyItems []CloudProviderSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// CloudProviderSnapshotBackupPolicyPolicyInput is an input type that accepts CloudProviderSnapshotBackupPolicyPolicyArgs and CloudProviderSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotBackupPolicyPolicyInput` via:
//
//	CloudProviderSnapshotBackupPolicyPolicyArgs{...}
type CloudProviderSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToCloudProviderSnapshotBackupPolicyPolicyOutput() CloudProviderSnapshotBackupPolicyPolicyOutput
	ToCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(context.Context) CloudProviderSnapshotBackupPolicyPolicyOutput
}

type CloudProviderSnapshotBackupPolicyPolicyArgs struct {
	Id          pulumi.StringInput                                          `pulumi:"id"`
	PolicyItems CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (CloudProviderSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i CloudProviderSnapshotBackupPolicyPolicyArgs) ToCloudProviderSnapshotBackupPolicyPolicyOutput() CloudProviderSnapshotBackupPolicyPolicyOutput {
	return i.ToCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotBackupPolicyPolicyArgs) ToCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotBackupPolicyPolicyOutput)
}

// CloudProviderSnapshotBackupPolicyPolicyArrayInput is an input type that accepts CloudProviderSnapshotBackupPolicyPolicyArray and CloudProviderSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotBackupPolicyPolicyArrayInput` via:
//
//	CloudProviderSnapshotBackupPolicyPolicyArray{ CloudProviderSnapshotBackupPolicyPolicyArgs{...} }
type CloudProviderSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToCloudProviderSnapshotBackupPolicyPolicyArrayOutput() CloudProviderSnapshotBackupPolicyPolicyArrayOutput
	ToCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) CloudProviderSnapshotBackupPolicyPolicyArrayOutput
}

type CloudProviderSnapshotBackupPolicyPolicyArray []CloudProviderSnapshotBackupPolicyPolicyInput

func (CloudProviderSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i CloudProviderSnapshotBackupPolicyPolicyArray) ToCloudProviderSnapshotBackupPolicyPolicyArrayOutput() CloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotBackupPolicyPolicyArray) ToCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotBackupPolicyPolicyArrayOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o CloudProviderSnapshotBackupPolicyPolicyOutput) ToCloudProviderSnapshotBackupPolicyPolicyOutput() CloudProviderSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyOutput) ToCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyOutput) PolicyItems() CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicy) []CloudProviderSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o CloudProviderSnapshotBackupPolicyPolicyArrayOutput) ToCloudProviderSnapshotBackupPolicyPolicyArrayOutput() CloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyArrayOutput) ToCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) CloudProviderSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderSnapshotBackupPolicyPolicy {
		return vs[0].([]CloudProviderSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(CloudProviderSnapshotBackupPolicyPolicyOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	Id                string `pulumi:"id"`
	RetentionUnit     string `pulumi:"retentionUnit"`
	RetentionValue    int    `pulumi:"retentionValue"`
}

// CloudProviderSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs and CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//	CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type CloudProviderSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput
	ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	Id                pulumi.StringInput `pulumi:"id"`
	RetentionUnit     pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue    pulumi.IntInput    `pulumi:"retentionValue"`
}

func (CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray and CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//	CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray{ CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray []CloudProviderSnapshotBackupPolicyPolicyPolicyItemInput

func (CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]CloudProviderSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type CloudProviderSnapshotRestoreJobDeliveryTypeConfig struct {
	Automated             *bool `pulumi:"automated"`
	Download              *bool `pulumi:"download"`
	OplogInc              *int  `pulumi:"oplogInc"`
	OplogTs               *int  `pulumi:"oplogTs"`
	PointInTime           *bool `pulumi:"pointInTime"`
	PointInTimeUtcSeconds *int  `pulumi:"pointInTimeUtcSeconds"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only required if deliveryType is automated.
	TargetClusterName *string `pulumi:"targetClusterName"`
	// Unique ID of the target Atlas project for the specified targetClusterName. Only required if deliveryType is automated.
	TargetProjectId *string `pulumi:"targetProjectId"`
}

// CloudProviderSnapshotRestoreJobDeliveryTypeConfigInput is an input type that accepts CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs and CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotRestoreJobDeliveryTypeConfigInput` via:
//
//	CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs{...}
type CloudProviderSnapshotRestoreJobDeliveryTypeConfigInput interface {
	pulumi.Input

	ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput
	ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput
}

type CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs struct {
	Automated             pulumi.BoolPtrInput `pulumi:"automated"`
	Download              pulumi.BoolPtrInput `pulumi:"download"`
	OplogInc              pulumi.IntPtrInput  `pulumi:"oplogInc"`
	OplogTs               pulumi.IntPtrInput  `pulumi:"oplogTs"`
	PointInTime           pulumi.BoolPtrInput `pulumi:"pointInTime"`
	PointInTimeUtcSeconds pulumi.IntPtrInput  `pulumi:"pointInTimeUtcSeconds"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only required if deliveryType is automated.
	TargetClusterName pulumi.StringPtrInput `pulumi:"targetClusterName"`
	// Unique ID of the target Atlas project for the specified targetClusterName. Only required if deliveryType is automated.
	TargetProjectId pulumi.StringPtrInput `pulumi:"targetProjectId"`
}

func (CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (i CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput {
	return i.ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput)
}

func (i CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return i.ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput).ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx)
}

// CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrInput is an input type that accepts CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs, CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtr and CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrInput` via:
//
//	        CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs{...}
//
//	or:
//
//	        nil
type CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrInput interface {
	pulumi.Input

	ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput
	ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput
}

type cloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrType CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs

func CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtr(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs) CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrInput {
	return (*cloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrType)(v)
}

func (*cloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (i *cloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrType) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return i.ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Background())
}

func (i *cloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrType) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput)
}

type CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput {
	return o
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput {
	return o
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o.ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Background())
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *CloudProviderSnapshotRestoreJobDeliveryTypeConfig {
		return &v
	}).(CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) Automated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *bool { return v.Automated }).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) Download() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *bool { return v.Download }).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) OplogInc() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *int { return v.OplogInc }).(pulumi.IntPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) OplogTs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *int { return v.OplogTs }).(pulumi.IntPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) PointInTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *bool { return v.PointInTime }).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) PointInTimeUtcSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *int { return v.PointInTimeUtcSeconds }).(pulumi.IntPtrOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only required if deliveryType is automated.
func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) TargetClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *string { return v.TargetClusterName }).(pulumi.StringPtrOutput)
}

// Unique ID of the target Atlas project for the specified targetClusterName. Only required if deliveryType is automated.
func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) TargetProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *string { return v.TargetProjectId }).(pulumi.StringPtrOutput)
}

type CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) Elem() CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) CloudProviderSnapshotRestoreJobDeliveryTypeConfig {
		if v != nil {
			return *v
		}
		var ret CloudProviderSnapshotRestoreJobDeliveryTypeConfig
		return ret
	}).(CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) Automated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Automated
	}).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) Download() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Download
	}).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) OplogInc() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *int {
		if v == nil {
			return nil
		}
		return v.OplogInc
	}).(pulumi.IntPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) OplogTs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *int {
		if v == nil {
			return nil
		}
		return v.OplogTs
	}).(pulumi.IntPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) PointInTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.PointInTime
	}).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) PointInTimeUtcSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *int {
		if v == nil {
			return nil
		}
		return v.PointInTimeUtcSeconds
	}).(pulumi.IntPtrOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only required if deliveryType is automated.
func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) TargetClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *string {
		if v == nil {
			return nil
		}
		return v.TargetClusterName
	}).(pulumi.StringPtrOutput)
}

// Unique ID of the target Atlas project for the specified targetClusterName. Only required if deliveryType is automated.
func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) TargetProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *string {
		if v == nil {
			return nil
		}
		return v.TargetProjectId
	}).(pulumi.StringPtrOutput)
}

type ClusterAdvancedConfiguration struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern *string `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern *string `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong *bool `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled *bool `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol *string `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan *bool `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see  [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
	OplogMinRetentionHours *int `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb *int `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector *int `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector *int `pulumi:"sampleSizeBiConnector"`
}

// ClusterAdvancedConfigurationInput is an input type that accepts ClusterAdvancedConfigurationArgs and ClusterAdvancedConfigurationOutput values.
// You can construct a concrete instance of `ClusterAdvancedConfigurationInput` via:
//
//	ClusterAdvancedConfigurationArgs{...}
type ClusterAdvancedConfigurationInput interface {
	pulumi.Input

	ToClusterAdvancedConfigurationOutput() ClusterAdvancedConfigurationOutput
	ToClusterAdvancedConfigurationOutputWithContext(context.Context) ClusterAdvancedConfigurationOutput
}

type ClusterAdvancedConfigurationArgs struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern pulumi.StringPtrInput `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern pulumi.StringPtrInput `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong pulumi.BoolPtrInput `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled pulumi.BoolPtrInput `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol pulumi.StringPtrInput `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan pulumi.BoolPtrInput `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see  [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
	OplogMinRetentionHours pulumi.IntPtrInput `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb pulumi.IntPtrInput `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector pulumi.IntPtrInput `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector pulumi.IntPtrInput `pulumi:"sampleSizeBiConnector"`
}

func (ClusterAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAdvancedConfiguration)(nil)).Elem()
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationOutput() ClusterAdvancedConfigurationOutput {
	return i.ToClusterAdvancedConfigurationOutputWithContext(context.Background())
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAdvancedConfigurationOutput)
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return i.ToClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAdvancedConfigurationOutput).ToClusterAdvancedConfigurationPtrOutputWithContext(ctx)
}

// ClusterAdvancedConfigurationPtrInput is an input type that accepts ClusterAdvancedConfigurationArgs, ClusterAdvancedConfigurationPtr and ClusterAdvancedConfigurationPtrOutput values.
// You can construct a concrete instance of `ClusterAdvancedConfigurationPtrInput` via:
//
//	        ClusterAdvancedConfigurationArgs{...}
//
//	or:
//
//	        nil
type ClusterAdvancedConfigurationPtrInput interface {
	pulumi.Input

	ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput
	ToClusterAdvancedConfigurationPtrOutputWithContext(context.Context) ClusterAdvancedConfigurationPtrOutput
}

type clusterAdvancedConfigurationPtrType ClusterAdvancedConfigurationArgs

func ClusterAdvancedConfigurationPtr(v *ClusterAdvancedConfigurationArgs) ClusterAdvancedConfigurationPtrInput {
	return (*clusterAdvancedConfigurationPtrType)(v)
}

func (*clusterAdvancedConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAdvancedConfiguration)(nil)).Elem()
}

func (i *clusterAdvancedConfigurationPtrType) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return i.ToClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (i *clusterAdvancedConfigurationPtrType) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAdvancedConfigurationPtrOutput)
}

type ClusterAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (ClusterAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAdvancedConfiguration)(nil)).Elem()
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationOutput() ClusterAdvancedConfigurationOutput {
	return o
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationOutput {
	return o
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return o.ToClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAdvancedConfiguration) *ClusterAdvancedConfiguration {
		return &v
	}).(ClusterAdvancedConfigurationPtrOutput)
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o ClusterAdvancedConfigurationOutput) DefaultReadConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *string { return v.DefaultReadConcern }).(pulumi.StringPtrOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o ClusterAdvancedConfigurationOutput) DefaultWriteConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *string { return v.DefaultWriteConcern }).(pulumi.StringPtrOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o ClusterAdvancedConfigurationOutput) FailIndexKeyTooLong() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *bool { return v.FailIndexKeyTooLong }).(pulumi.BoolPtrOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o ClusterAdvancedConfigurationOutput) JavascriptEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *bool { return v.JavascriptEnabled }).(pulumi.BoolPtrOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o ClusterAdvancedConfigurationOutput) MinimumEnabledTlsProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *string { return v.MinimumEnabledTlsProtocol }).(pulumi.StringPtrOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o ClusterAdvancedConfigurationOutput) NoTableScan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *bool { return v.NoTableScan }).(pulumi.BoolPtrOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see  [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
func (o ClusterAdvancedConfigurationOutput) OplogMinRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.OplogMinRetentionHours }).(pulumi.IntPtrOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o ClusterAdvancedConfigurationOutput) OplogSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.OplogSizeMb }).(pulumi.IntPtrOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationOutput) SampleRefreshIntervalBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.SampleRefreshIntervalBiConnector }).(pulumi.IntPtrOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationOutput) SampleSizeBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.SampleSizeBiConnector }).(pulumi.IntPtrOutput)
}

type ClusterAdvancedConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClusterAdvancedConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAdvancedConfiguration)(nil)).Elem()
}

func (o ClusterAdvancedConfigurationPtrOutput) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return o
}

func (o ClusterAdvancedConfigurationPtrOutput) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return o
}

func (o ClusterAdvancedConfigurationPtrOutput) Elem() ClusterAdvancedConfigurationOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) ClusterAdvancedConfiguration {
		if v != nil {
			return *v
		}
		var ret ClusterAdvancedConfiguration
		return ret
	}).(ClusterAdvancedConfigurationOutput)
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o ClusterAdvancedConfigurationPtrOutput) DefaultReadConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DefaultReadConcern
	}).(pulumi.StringPtrOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o ClusterAdvancedConfigurationPtrOutput) DefaultWriteConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DefaultWriteConcern
	}).(pulumi.StringPtrOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o ClusterAdvancedConfigurationPtrOutput) FailIndexKeyTooLong() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.FailIndexKeyTooLong
	}).(pulumi.BoolPtrOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o ClusterAdvancedConfigurationPtrOutput) JavascriptEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.JavascriptEnabled
	}).(pulumi.BoolPtrOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o ClusterAdvancedConfigurationPtrOutput) MinimumEnabledTlsProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.MinimumEnabledTlsProtocol
	}).(pulumi.StringPtrOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o ClusterAdvancedConfigurationPtrOutput) NoTableScan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.NoTableScan
	}).(pulumi.BoolPtrOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see  [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
func (o ClusterAdvancedConfigurationPtrOutput) OplogMinRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.OplogMinRetentionHours
	}).(pulumi.IntPtrOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o ClusterAdvancedConfigurationPtrOutput) OplogSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.OplogSizeMb
	}).(pulumi.IntPtrOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationPtrOutput) SampleRefreshIntervalBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SampleRefreshIntervalBiConnector
	}).(pulumi.IntPtrOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationPtrOutput) SampleSizeBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SampleSizeBiConnector
	}).(pulumi.IntPtrOutput)
}

type ClusterBiConnectorConfig struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference *string `pulumi:"readPreference"`
}

// ClusterBiConnectorConfigInput is an input type that accepts ClusterBiConnectorConfigArgs and ClusterBiConnectorConfigOutput values.
// You can construct a concrete instance of `ClusterBiConnectorConfigInput` via:
//
//	ClusterBiConnectorConfigArgs{...}
type ClusterBiConnectorConfigInput interface {
	pulumi.Input

	ToClusterBiConnectorConfigOutput() ClusterBiConnectorConfigOutput
	ToClusterBiConnectorConfigOutputWithContext(context.Context) ClusterBiConnectorConfigOutput
}

type ClusterBiConnectorConfigArgs struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringPtrInput `pulumi:"readPreference"`
}

func (ClusterBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBiConnectorConfig)(nil)).Elem()
}

func (i ClusterBiConnectorConfigArgs) ToClusterBiConnectorConfigOutput() ClusterBiConnectorConfigOutput {
	return i.ToClusterBiConnectorConfigOutputWithContext(context.Background())
}

func (i ClusterBiConnectorConfigArgs) ToClusterBiConnectorConfigOutputWithContext(ctx context.Context) ClusterBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBiConnectorConfigOutput)
}

func (i ClusterBiConnectorConfigArgs) ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput {
	return i.ToClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (i ClusterBiConnectorConfigArgs) ToClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterBiConnectorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBiConnectorConfigOutput).ToClusterBiConnectorConfigPtrOutputWithContext(ctx)
}

// ClusterBiConnectorConfigPtrInput is an input type that accepts ClusterBiConnectorConfigArgs, ClusterBiConnectorConfigPtr and ClusterBiConnectorConfigPtrOutput values.
// You can construct a concrete instance of `ClusterBiConnectorConfigPtrInput` via:
//
//	        ClusterBiConnectorConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterBiConnectorConfigPtrInput interface {
	pulumi.Input

	ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput
	ToClusterBiConnectorConfigPtrOutputWithContext(context.Context) ClusterBiConnectorConfigPtrOutput
}

type clusterBiConnectorConfigPtrType ClusterBiConnectorConfigArgs

func ClusterBiConnectorConfigPtr(v *ClusterBiConnectorConfigArgs) ClusterBiConnectorConfigPtrInput {
	return (*clusterBiConnectorConfigPtrType)(v)
}

func (*clusterBiConnectorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBiConnectorConfig)(nil)).Elem()
}

func (i *clusterBiConnectorConfigPtrType) ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput {
	return i.ToClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (i *clusterBiConnectorConfigPtrType) ToClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterBiConnectorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBiConnectorConfigPtrOutput)
}

type ClusterBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (ClusterBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBiConnectorConfig)(nil)).Elem()
}

func (o ClusterBiConnectorConfigOutput) ToClusterBiConnectorConfigOutput() ClusterBiConnectorConfigOutput {
	return o
}

func (o ClusterBiConnectorConfigOutput) ToClusterBiConnectorConfigOutputWithContext(ctx context.Context) ClusterBiConnectorConfigOutput {
	return o
}

func (o ClusterBiConnectorConfigOutput) ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput {
	return o.ToClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (o ClusterBiConnectorConfigOutput) ToClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterBiConnectorConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBiConnectorConfig) *ClusterBiConnectorConfig {
		return &v
	}).(ClusterBiConnectorConfigPtrOutput)
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o ClusterBiConnectorConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBiConnectorConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o ClusterBiConnectorConfigOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBiConnectorConfig) *string { return v.ReadPreference }).(pulumi.StringPtrOutput)
}

type ClusterBiConnectorConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterBiConnectorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBiConnectorConfig)(nil)).Elem()
}

func (o ClusterBiConnectorConfigPtrOutput) ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput {
	return o
}

func (o ClusterBiConnectorConfigPtrOutput) ToClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterBiConnectorConfigPtrOutput {
	return o
}

func (o ClusterBiConnectorConfigPtrOutput) Elem() ClusterBiConnectorConfigOutput {
	return o.ApplyT(func(v *ClusterBiConnectorConfig) ClusterBiConnectorConfig {
		if v != nil {
			return *v
		}
		var ret ClusterBiConnectorConfig
		return ret
	}).(ClusterBiConnectorConfigOutput)
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o ClusterBiConnectorConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBiConnectorConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o ClusterBiConnectorConfigPtrOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBiConnectorConfig) *string {
		if v == nil {
			return nil
		}
		return v.ReadPreference
	}).(pulumi.StringPtrOutput)
}

type ClusterConnectionString struct {
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
	AwsPrivateLink map[string]interface{} `pulumi:"awsPrivateLink"`
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
	AwsPrivateLinkSrv map[string]interface{}                   `pulumi:"awsPrivateLinkSrv"`
	Private           *string                                  `pulumi:"private"`
	PrivateEndpoints  []ClusterConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        *string                                  `pulumi:"privateSrv"`
	Standard          *string                                  `pulumi:"standard"`
	StandardSrv       *string                                  `pulumi:"standardSrv"`
}

// ClusterConnectionStringInput is an input type that accepts ClusterConnectionStringArgs and ClusterConnectionStringOutput values.
// You can construct a concrete instance of `ClusterConnectionStringInput` via:
//
//	ClusterConnectionStringArgs{...}
type ClusterConnectionStringInput interface {
	pulumi.Input

	ToClusterConnectionStringOutput() ClusterConnectionStringOutput
	ToClusterConnectionStringOutputWithContext(context.Context) ClusterConnectionStringOutput
}

type ClusterConnectionStringArgs struct {
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
	AwsPrivateLink pulumi.MapInput `pulumi:"awsPrivateLink"`
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
	AwsPrivateLinkSrv pulumi.MapInput                                  `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringPtrInput                            `pulumi:"private"`
	PrivateEndpoints  ClusterConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringPtrInput                            `pulumi:"privateSrv"`
	Standard          pulumi.StringPtrInput                            `pulumi:"standard"`
	StandardSrv       pulumi.StringPtrInput                            `pulumi:"standardSrv"`
}

func (ClusterConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionString)(nil)).Elem()
}

func (i ClusterConnectionStringArgs) ToClusterConnectionStringOutput() ClusterConnectionStringOutput {
	return i.ToClusterConnectionStringOutputWithContext(context.Background())
}

func (i ClusterConnectionStringArgs) ToClusterConnectionStringOutputWithContext(ctx context.Context) ClusterConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringOutput)
}

// ClusterConnectionStringArrayInput is an input type that accepts ClusterConnectionStringArray and ClusterConnectionStringArrayOutput values.
// You can construct a concrete instance of `ClusterConnectionStringArrayInput` via:
//
//	ClusterConnectionStringArray{ ClusterConnectionStringArgs{...} }
type ClusterConnectionStringArrayInput interface {
	pulumi.Input

	ToClusterConnectionStringArrayOutput() ClusterConnectionStringArrayOutput
	ToClusterConnectionStringArrayOutputWithContext(context.Context) ClusterConnectionStringArrayOutput
}

type ClusterConnectionStringArray []ClusterConnectionStringInput

func (ClusterConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionString)(nil)).Elem()
}

func (i ClusterConnectionStringArray) ToClusterConnectionStringArrayOutput() ClusterConnectionStringArrayOutput {
	return i.ToClusterConnectionStringArrayOutputWithContext(context.Background())
}

func (i ClusterConnectionStringArray) ToClusterConnectionStringArrayOutputWithContext(ctx context.Context) ClusterConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringArrayOutput)
}

type ClusterConnectionStringOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionString)(nil)).Elem()
}

func (o ClusterConnectionStringOutput) ToClusterConnectionStringOutput() ClusterConnectionStringOutput {
	return o
}

func (o ClusterConnectionStringOutput) ToClusterConnectionStringOutputWithContext(ctx context.Context) ClusterConnectionStringOutput {
	return o
}

// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
func (o ClusterConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
func (o ClusterConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o ClusterConnectionStringOutput) Private() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionString) *string { return v.Private }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringOutput) PrivateEndpoints() ClusterConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v ClusterConnectionString) []ClusterConnectionStringPrivateEndpoint { return v.PrivateEndpoints }).(ClusterConnectionStringPrivateEndpointArrayOutput)
}

func (o ClusterConnectionStringOutput) PrivateSrv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionString) *string { return v.PrivateSrv }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringOutput) Standard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionString) *string { return v.Standard }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringOutput) StandardSrv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionString) *string { return v.StandardSrv }).(pulumi.StringPtrOutput)
}

type ClusterConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionString)(nil)).Elem()
}

func (o ClusterConnectionStringArrayOutput) ToClusterConnectionStringArrayOutput() ClusterConnectionStringArrayOutput {
	return o
}

func (o ClusterConnectionStringArrayOutput) ToClusterConnectionStringArrayOutputWithContext(ctx context.Context) ClusterConnectionStringArrayOutput {
	return o
}

func (o ClusterConnectionStringArrayOutput) Index(i pulumi.IntInput) ClusterConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterConnectionString {
		return vs[0].([]ClusterConnectionString)[vs[1].(int)]
	}).(ClusterConnectionStringOutput)
}

type ClusterConnectionStringPrivateEndpoint struct {
	ConnectionString    *string                                          `pulumi:"connectionString"`
	Endpoints           []ClusterConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString *string                                          `pulumi:"srvConnectionString"`
	Type                *string                                          `pulumi:"type"`
}

// ClusterConnectionStringPrivateEndpointInput is an input type that accepts ClusterConnectionStringPrivateEndpointArgs and ClusterConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `ClusterConnectionStringPrivateEndpointInput` via:
//
//	ClusterConnectionStringPrivateEndpointArgs{...}
type ClusterConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToClusterConnectionStringPrivateEndpointOutput() ClusterConnectionStringPrivateEndpointOutput
	ToClusterConnectionStringPrivateEndpointOutputWithContext(context.Context) ClusterConnectionStringPrivateEndpointOutput
}

type ClusterConnectionStringPrivateEndpointArgs struct {
	ConnectionString    pulumi.StringPtrInput                                    `pulumi:"connectionString"`
	Endpoints           ClusterConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString pulumi.StringPtrInput                                    `pulumi:"srvConnectionString"`
	Type                pulumi.StringPtrInput                                    `pulumi:"type"`
}

func (ClusterConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i ClusterConnectionStringPrivateEndpointArgs) ToClusterConnectionStringPrivateEndpointOutput() ClusterConnectionStringPrivateEndpointOutput {
	return i.ToClusterConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i ClusterConnectionStringPrivateEndpointArgs) ToClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringPrivateEndpointOutput)
}

// ClusterConnectionStringPrivateEndpointArrayInput is an input type that accepts ClusterConnectionStringPrivateEndpointArray and ClusterConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `ClusterConnectionStringPrivateEndpointArrayInput` via:
//
//	ClusterConnectionStringPrivateEndpointArray{ ClusterConnectionStringPrivateEndpointArgs{...} }
type ClusterConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToClusterConnectionStringPrivateEndpointArrayOutput() ClusterConnectionStringPrivateEndpointArrayOutput
	ToClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) ClusterConnectionStringPrivateEndpointArrayOutput
}

type ClusterConnectionStringPrivateEndpointArray []ClusterConnectionStringPrivateEndpointInput

func (ClusterConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i ClusterConnectionStringPrivateEndpointArray) ToClusterConnectionStringPrivateEndpointArrayOutput() ClusterConnectionStringPrivateEndpointArrayOutput {
	return i.ToClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i ClusterConnectionStringPrivateEndpointArray) ToClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringPrivateEndpointArrayOutput)
}

type ClusterConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o ClusterConnectionStringPrivateEndpointOutput) ToClusterConnectionStringPrivateEndpointOutput() ClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointOutput) ToClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpoint) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringPrivateEndpointOutput) Endpoints() ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpoint) []ClusterConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(ClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o ClusterConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpoint) *string { return v.SrvConnectionString }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringPrivateEndpointOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpoint) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ClusterConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o ClusterConnectionStringPrivateEndpointArrayOutput) ToClusterConnectionStringPrivateEndpointArrayOutput() ClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointArrayOutput) ToClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) ClusterConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterConnectionStringPrivateEndpoint {
		return vs[0].([]ClusterConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(ClusterConnectionStringPrivateEndpointOutput)
}

type ClusterConnectionStringPrivateEndpointEndpoint struct {
	EndpointId *string `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName *string `pulumi:"providerName"`
	Region       *string `pulumi:"region"`
}

// ClusterConnectionStringPrivateEndpointEndpointInput is an input type that accepts ClusterConnectionStringPrivateEndpointEndpointArgs and ClusterConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `ClusterConnectionStringPrivateEndpointEndpointInput` via:
//
//	ClusterConnectionStringPrivateEndpointEndpointArgs{...}
type ClusterConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToClusterConnectionStringPrivateEndpointEndpointOutput() ClusterConnectionStringPrivateEndpointEndpointOutput
	ToClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) ClusterConnectionStringPrivateEndpointEndpointOutput
}

type ClusterConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringPtrInput `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringPtrInput `pulumi:"providerName"`
	Region       pulumi.StringPtrInput `pulumi:"region"`
}

func (ClusterConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i ClusterConnectionStringPrivateEndpointEndpointArgs) ToClusterConnectionStringPrivateEndpointEndpointOutput() ClusterConnectionStringPrivateEndpointEndpointOutput {
	return i.ToClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i ClusterConnectionStringPrivateEndpointEndpointArgs) ToClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringPrivateEndpointEndpointOutput)
}

// ClusterConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts ClusterConnectionStringPrivateEndpointEndpointArray and ClusterConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `ClusterConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//	ClusterConnectionStringPrivateEndpointEndpointArray{ ClusterConnectionStringPrivateEndpointEndpointArgs{...} }
type ClusterConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToClusterConnectionStringPrivateEndpointEndpointArrayOutput() ClusterConnectionStringPrivateEndpointEndpointArrayOutput
	ToClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) ClusterConnectionStringPrivateEndpointEndpointArrayOutput
}

type ClusterConnectionStringPrivateEndpointEndpointArray []ClusterConnectionStringPrivateEndpointEndpointInput

func (ClusterConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i ClusterConnectionStringPrivateEndpointEndpointArray) ToClusterConnectionStringPrivateEndpointEndpointArrayOutput() ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i ClusterConnectionStringPrivateEndpointEndpointArray) ToClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

type ClusterConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o ClusterConnectionStringPrivateEndpointEndpointOutput) ToClusterConnectionStringPrivateEndpointEndpointOutput() ClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointEndpointOutput) ToClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpointEndpoint) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// Cloud service provider on which the servers are provisioned.
func (o ClusterConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpointEndpoint) *string { return v.ProviderName }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpointEndpoint) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type ClusterConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o ClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToClusterConnectionStringPrivateEndpointEndpointArrayOutput() ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) ClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]ClusterConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(ClusterConnectionStringPrivateEndpointEndpointOutput)
}

type ClusterLabel struct {
	// The key that you want to write.
	Key *string `pulumi:"key"`
	// The value that you want to write.
	Value *string `pulumi:"value"`
}

// ClusterLabelInput is an input type that accepts ClusterLabelArgs and ClusterLabelOutput values.
// You can construct a concrete instance of `ClusterLabelInput` via:
//
//	ClusterLabelArgs{...}
type ClusterLabelInput interface {
	pulumi.Input

	ToClusterLabelOutput() ClusterLabelOutput
	ToClusterLabelOutputWithContext(context.Context) ClusterLabelOutput
}

type ClusterLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClusterLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLabel)(nil)).Elem()
}

func (i ClusterLabelArgs) ToClusterLabelOutput() ClusterLabelOutput {
	return i.ToClusterLabelOutputWithContext(context.Background())
}

func (i ClusterLabelArgs) ToClusterLabelOutputWithContext(ctx context.Context) ClusterLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLabelOutput)
}

// ClusterLabelArrayInput is an input type that accepts ClusterLabelArray and ClusterLabelArrayOutput values.
// You can construct a concrete instance of `ClusterLabelArrayInput` via:
//
//	ClusterLabelArray{ ClusterLabelArgs{...} }
type ClusterLabelArrayInput interface {
	pulumi.Input

	ToClusterLabelArrayOutput() ClusterLabelArrayOutput
	ToClusterLabelArrayOutputWithContext(context.Context) ClusterLabelArrayOutput
}

type ClusterLabelArray []ClusterLabelInput

func (ClusterLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterLabel)(nil)).Elem()
}

func (i ClusterLabelArray) ToClusterLabelArrayOutput() ClusterLabelArrayOutput {
	return i.ToClusterLabelArrayOutputWithContext(context.Background())
}

func (i ClusterLabelArray) ToClusterLabelArrayOutputWithContext(ctx context.Context) ClusterLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLabelArrayOutput)
}

type ClusterLabelOutput struct{ *pulumi.OutputState }

func (ClusterLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLabel)(nil)).Elem()
}

func (o ClusterLabelOutput) ToClusterLabelOutput() ClusterLabelOutput {
	return o
}

func (o ClusterLabelOutput) ToClusterLabelOutputWithContext(ctx context.Context) ClusterLabelOutput {
	return o
}

// The key that you want to write.
func (o ClusterLabelOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLabel) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value that you want to write.
func (o ClusterLabelOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLabel) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClusterLabelArrayOutput struct{ *pulumi.OutputState }

func (ClusterLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterLabel)(nil)).Elem()
}

func (o ClusterLabelArrayOutput) ToClusterLabelArrayOutput() ClusterLabelArrayOutput {
	return o
}

func (o ClusterLabelArrayOutput) ToClusterLabelArrayOutputWithContext(ctx context.Context) ClusterLabelArrayOutput {
	return o
}

func (o ClusterLabelArrayOutput) Index(i pulumi.IntInput) ClusterLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterLabel {
		return vs[0].([]ClusterLabel)[vs[1].(int)]
	}).(ClusterLabelOutput)
}

type ClusterReplicationSpec struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id *string `pulumi:"id"`
	// Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
	NumShards int `pulumi:"numShards"`
	// Physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs []ClusterReplicationSpecRegionsConfig `pulumi:"regionsConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName *string `pulumi:"zoneName"`
}

// ClusterReplicationSpecInput is an input type that accepts ClusterReplicationSpecArgs and ClusterReplicationSpecOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecInput` via:
//
//	ClusterReplicationSpecArgs{...}
type ClusterReplicationSpecInput interface {
	pulumi.Input

	ToClusterReplicationSpecOutput() ClusterReplicationSpecOutput
	ToClusterReplicationSpecOutputWithContext(context.Context) ClusterReplicationSpecOutput
}

type ClusterReplicationSpecArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs ClusterReplicationSpecRegionsConfigArrayInput `pulumi:"regionsConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName pulumi.StringPtrInput `pulumi:"zoneName"`
}

func (ClusterReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpec)(nil)).Elem()
}

func (i ClusterReplicationSpecArgs) ToClusterReplicationSpecOutput() ClusterReplicationSpecOutput {
	return i.ToClusterReplicationSpecOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecArgs) ToClusterReplicationSpecOutputWithContext(ctx context.Context) ClusterReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecOutput)
}

// ClusterReplicationSpecArrayInput is an input type that accepts ClusterReplicationSpecArray and ClusterReplicationSpecArrayOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecArrayInput` via:
//
//	ClusterReplicationSpecArray{ ClusterReplicationSpecArgs{...} }
type ClusterReplicationSpecArrayInput interface {
	pulumi.Input

	ToClusterReplicationSpecArrayOutput() ClusterReplicationSpecArrayOutput
	ToClusterReplicationSpecArrayOutputWithContext(context.Context) ClusterReplicationSpecArrayOutput
}

type ClusterReplicationSpecArray []ClusterReplicationSpecInput

func (ClusterReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpec)(nil)).Elem()
}

func (i ClusterReplicationSpecArray) ToClusterReplicationSpecArrayOutput() ClusterReplicationSpecArrayOutput {
	return i.ToClusterReplicationSpecArrayOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecArray) ToClusterReplicationSpecArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecArrayOutput)
}

type ClusterReplicationSpecOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpec)(nil)).Elem()
}

func (o ClusterReplicationSpecOutput) ToClusterReplicationSpecOutput() ClusterReplicationSpecOutput {
	return o
}

func (o ClusterReplicationSpecOutput) ToClusterReplicationSpecOutputWithContext(ctx context.Context) ClusterReplicationSpecOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o ClusterReplicationSpecOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
func (o ClusterReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
func (o ClusterReplicationSpecOutput) RegionsConfigs() ClusterReplicationSpecRegionsConfigArrayOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) []ClusterReplicationSpecRegionsConfig { return v.RegionsConfigs }).(ClusterReplicationSpecRegionsConfigArrayOutput)
}

// Name for the zone in a Global Cluster.
func (o ClusterReplicationSpecOutput) ZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) *string { return v.ZoneName }).(pulumi.StringPtrOutput)
}

type ClusterReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpec)(nil)).Elem()
}

func (o ClusterReplicationSpecArrayOutput) ToClusterReplicationSpecArrayOutput() ClusterReplicationSpecArrayOutput {
	return o
}

func (o ClusterReplicationSpecArrayOutput) ToClusterReplicationSpecArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecArrayOutput {
	return o
}

func (o ClusterReplicationSpecArrayOutput) Index(i pulumi.IntInput) ClusterReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterReplicationSpec {
		return vs[0].([]ClusterReplicationSpec)[vs[1].(int)]
	}).(ClusterReplicationSpecOutput)
}

type ClusterReplicationSpecRegionsConfig struct {
	// The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
	AnalyticsNodes *int `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
	// * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
	// * Specify 0 if you do not want any electable nodes in the region.
	// * You cannot create electable nodes in a region if `priority` is 0.
	ElectableNodes *int `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	// * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
	// * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
	// * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
	Priority *int `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes *int `pulumi:"readOnlyNodes"`
	// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	RegionName string `pulumi:"regionName"`
}

// ClusterReplicationSpecRegionsConfigInput is an input type that accepts ClusterReplicationSpecRegionsConfigArgs and ClusterReplicationSpecRegionsConfigOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecRegionsConfigInput` via:
//
//	ClusterReplicationSpecRegionsConfigArgs{...}
type ClusterReplicationSpecRegionsConfigInput interface {
	pulumi.Input

	ToClusterReplicationSpecRegionsConfigOutput() ClusterReplicationSpecRegionsConfigOutput
	ToClusterReplicationSpecRegionsConfigOutputWithContext(context.Context) ClusterReplicationSpecRegionsConfigOutput
}

type ClusterReplicationSpecRegionsConfigArgs struct {
	// The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
	AnalyticsNodes pulumi.IntPtrInput `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
	// * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
	// * Specify 0 if you do not want any electable nodes in the region.
	// * You cannot create electable nodes in a region if `priority` is 0.
	ElectableNodes pulumi.IntPtrInput `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	// * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
	// * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
	// * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes pulumi.IntPtrInput `pulumi:"readOnlyNodes"`
	// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (ClusterReplicationSpecRegionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i ClusterReplicationSpecRegionsConfigArgs) ToClusterReplicationSpecRegionsConfigOutput() ClusterReplicationSpecRegionsConfigOutput {
	return i.ToClusterReplicationSpecRegionsConfigOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecRegionsConfigArgs) ToClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecRegionsConfigOutput)
}

// ClusterReplicationSpecRegionsConfigArrayInput is an input type that accepts ClusterReplicationSpecRegionsConfigArray and ClusterReplicationSpecRegionsConfigArrayOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecRegionsConfigArrayInput` via:
//
//	ClusterReplicationSpecRegionsConfigArray{ ClusterReplicationSpecRegionsConfigArgs{...} }
type ClusterReplicationSpecRegionsConfigArrayInput interface {
	pulumi.Input

	ToClusterReplicationSpecRegionsConfigArrayOutput() ClusterReplicationSpecRegionsConfigArrayOutput
	ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Context) ClusterReplicationSpecRegionsConfigArrayOutput
}

type ClusterReplicationSpecRegionsConfigArray []ClusterReplicationSpecRegionsConfigInput

func (ClusterReplicationSpecRegionsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i ClusterReplicationSpecRegionsConfigArray) ToClusterReplicationSpecRegionsConfigArrayOutput() ClusterReplicationSpecRegionsConfigArrayOutput {
	return i.ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecRegionsConfigArray) ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecRegionsConfigArrayOutput)
}

type ClusterReplicationSpecRegionsConfigOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecRegionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o ClusterReplicationSpecRegionsConfigOutput) ToClusterReplicationSpecRegionsConfigOutput() ClusterReplicationSpecRegionsConfigOutput {
	return o
}

func (o ClusterReplicationSpecRegionsConfigOutput) ToClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigOutput {
	return o
}

// The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
func (o ClusterReplicationSpecRegionsConfigOutput) AnalyticsNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.AnalyticsNodes }).(pulumi.IntPtrOutput)
}

// Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
// * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
// * Specify 0 if you do not want any electable nodes in the region.
// * You cannot create electable nodes in a region if `priority` is 0.
func (o ClusterReplicationSpecRegionsConfigOutput) ElectableNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.ElectableNodes }).(pulumi.IntPtrOutput)
}

// Election priority of the region. For regions with only read-only nodes, set this value to 0.
// * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
// * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
// * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
func (o ClusterReplicationSpecRegionsConfigOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
func (o ClusterReplicationSpecRegionsConfigOutput) ReadOnlyNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.ReadOnlyNodes }).(pulumi.IntPtrOutput)
}

// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
func (o ClusterReplicationSpecRegionsConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type ClusterReplicationSpecRegionsConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecRegionsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o ClusterReplicationSpecRegionsConfigArrayOutput) ToClusterReplicationSpecRegionsConfigArrayOutput() ClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o ClusterReplicationSpecRegionsConfigArrayOutput) ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o ClusterReplicationSpecRegionsConfigArrayOutput) Index(i pulumi.IntInput) ClusterReplicationSpecRegionsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterReplicationSpecRegionsConfig {
		return vs[0].([]ClusterReplicationSpecRegionsConfig)[vs[1].(int)]
	}).(ClusterReplicationSpecRegionsConfigOutput)
}

type ClusterSnapshotBackupPolicy struct {
	// The cluster ID.
	ClusterId             *string                             `pulumi:"clusterId"`
	ClusterName           *string                             `pulumi:"clusterName"`
	NextSnapshot          *string                             `pulumi:"nextSnapshot"`
	Policies              []ClusterSnapshotBackupPolicyPolicy `pulumi:"policies"`
	ReferenceHourOfDay    *int                                `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour *int                                `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     *int                                `pulumi:"restoreWindowDays"`
	UpdateSnapshots       *bool                               `pulumi:"updateSnapshots"`
}

// ClusterSnapshotBackupPolicyInput is an input type that accepts ClusterSnapshotBackupPolicyArgs and ClusterSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyInput` via:
//
//	ClusterSnapshotBackupPolicyArgs{...}
type ClusterSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyOutput() ClusterSnapshotBackupPolicyOutput
	ToClusterSnapshotBackupPolicyOutputWithContext(context.Context) ClusterSnapshotBackupPolicyOutput
}

type ClusterSnapshotBackupPolicyArgs struct {
	// The cluster ID.
	ClusterId             pulumi.StringPtrInput                       `pulumi:"clusterId"`
	ClusterName           pulumi.StringPtrInput                       `pulumi:"clusterName"`
	NextSnapshot          pulumi.StringPtrInput                       `pulumi:"nextSnapshot"`
	Policies              ClusterSnapshotBackupPolicyPolicyArrayInput `pulumi:"policies"`
	ReferenceHourOfDay    pulumi.IntPtrInput                          `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour pulumi.IntPtrInput                          `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     pulumi.IntPtrInput                          `pulumi:"restoreWindowDays"`
	UpdateSnapshots       pulumi.BoolPtrInput                         `pulumi:"updateSnapshots"`
}

func (ClusterSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyArgs) ToClusterSnapshotBackupPolicyOutput() ClusterSnapshotBackupPolicyOutput {
	return i.ToClusterSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyArgs) ToClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyOutput)
}

// ClusterSnapshotBackupPolicyArrayInput is an input type that accepts ClusterSnapshotBackupPolicyArray and ClusterSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyArrayInput` via:
//
//	ClusterSnapshotBackupPolicyArray{ ClusterSnapshotBackupPolicyArgs{...} }
type ClusterSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyArrayOutput() ClusterSnapshotBackupPolicyArrayOutput
	ToClusterSnapshotBackupPolicyArrayOutputWithContext(context.Context) ClusterSnapshotBackupPolicyArrayOutput
}

type ClusterSnapshotBackupPolicyArray []ClusterSnapshotBackupPolicyInput

func (ClusterSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyArray) ToClusterSnapshotBackupPolicyArrayOutput() ClusterSnapshotBackupPolicyArrayOutput {
	return i.ToClusterSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyArray) ToClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyArrayOutput)
}

type ClusterSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyOutput) ToClusterSnapshotBackupPolicyOutput() ClusterSnapshotBackupPolicyOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyOutput) ToClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyOutput {
	return o
}

// The cluster ID.
func (o ClusterSnapshotBackupPolicyOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) NextSnapshot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *string { return v.NextSnapshot }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) Policies() ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) []ClusterSnapshotBackupPolicyPolicy { return v.Policies }).(ClusterSnapshotBackupPolicyPolicyArrayOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) ReferenceHourOfDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *int { return v.ReferenceHourOfDay }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) ReferenceMinuteOfHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *int { return v.ReferenceMinuteOfHour }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) RestoreWindowDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *int { return v.RestoreWindowDays }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) UpdateSnapshots() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *bool { return v.UpdateSnapshots }).(pulumi.BoolPtrOutput)
}

type ClusterSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyArrayOutput) ToClusterSnapshotBackupPolicyArrayOutput() ClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyArrayOutput) ToClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) ClusterSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSnapshotBackupPolicy {
		return vs[0].([]ClusterSnapshotBackupPolicy)[vs[1].(int)]
	}).(ClusterSnapshotBackupPolicyOutput)
}

type ClusterSnapshotBackupPolicyPolicy struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          *string                                       `pulumi:"id"`
	PolicyItems []ClusterSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// ClusterSnapshotBackupPolicyPolicyInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyArgs and ClusterSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyInput` via:
//
//	ClusterSnapshotBackupPolicyPolicyArgs{...}
type ClusterSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyOutput() ClusterSnapshotBackupPolicyPolicyOutput
	ToClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyOutput
}

type ClusterSnapshotBackupPolicyPolicyArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          pulumi.StringPtrInput                                 `pulumi:"id"`
	PolicyItems ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (ClusterSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyArgs) ToClusterSnapshotBackupPolicyPolicyOutput() ClusterSnapshotBackupPolicyPolicyOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyArgs) ToClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyOutput)
}

// ClusterSnapshotBackupPolicyPolicyArrayInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyArray and ClusterSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyArrayInput` via:
//
//	ClusterSnapshotBackupPolicyPolicyArray{ ClusterSnapshotBackupPolicyPolicyArgs{...} }
type ClusterSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyArrayOutput() ClusterSnapshotBackupPolicyPolicyArrayOutput
	ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyArrayOutput
}

type ClusterSnapshotBackupPolicyPolicyArray []ClusterSnapshotBackupPolicyPolicyInput

func (ClusterSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyArray) ToClusterSnapshotBackupPolicyPolicyArrayOutput() ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyArray) ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyArrayOutput)
}

type ClusterSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyOutput) ToClusterSnapshotBackupPolicyPolicyOutput() ClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyOutput) ToClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o ClusterSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicy) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyOutput) PolicyItems() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicy) []ClusterSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type ClusterSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyArrayOutput) ToClusterSnapshotBackupPolicyPolicyArrayOutput() ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyArrayOutput) ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) ClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSnapshotBackupPolicyPolicy {
		return vs[0].([]ClusterSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(ClusterSnapshotBackupPolicyPolicyOutput)
}

type ClusterSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval *int    `pulumi:"frequencyInterval"`
	FrequencyType     *string `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             *string `pulumi:"id"`
	RetentionUnit  *string `pulumi:"retentionUnit"`
	RetentionValue *int    `pulumi:"retentionValue"`
}

// ClusterSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyPolicyItemArgs and ClusterSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//	ClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type ClusterSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyPolicyItemOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemOutput
	ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntPtrInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             pulumi.StringPtrInput `pulumi:"id"`
	RetentionUnit  pulumi.StringPtrInput `pulumi:"retentionUnit"`
	RetentionValue pulumi.IntPtrInput    `pulumi:"retentionValue"`
}

func (ClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyPolicyItemArray and ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//	ClusterSnapshotBackupPolicyPolicyPolicyItemArray{ ClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemArray []ClusterSnapshotBackupPolicyPolicyPolicyItemInput

func (ClusterSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *int { return v.FrequencyInterval }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *string { return v.RetentionUnit }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *int { return v.RetentionValue }).(pulumi.IntPtrOutput)
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]ClusterSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(ClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type CustomDbRoleAction struct {
	// Name of the privilege action. For a complete list of actions available in the Atlas API, see [Custom Role Actions](https://docs.atlas.mongodb.com/reference/api/custom-role-actions)
	// > **Note**: The privilege actions available to the Custom Roles API resource represent a subset of the privilege actions available in the Atlas Custom Roles UI.
	Action string `pulumi:"action"`
	// Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources []CustomDbRoleActionResource `pulumi:"resources"`
}

// CustomDbRoleActionInput is an input type that accepts CustomDbRoleActionArgs and CustomDbRoleActionOutput values.
// You can construct a concrete instance of `CustomDbRoleActionInput` via:
//
//	CustomDbRoleActionArgs{...}
type CustomDbRoleActionInput interface {
	pulumi.Input

	ToCustomDbRoleActionOutput() CustomDbRoleActionOutput
	ToCustomDbRoleActionOutputWithContext(context.Context) CustomDbRoleActionOutput
}

type CustomDbRoleActionArgs struct {
	// Name of the privilege action. For a complete list of actions available in the Atlas API, see [Custom Role Actions](https://docs.atlas.mongodb.com/reference/api/custom-role-actions)
	// > **Note**: The privilege actions available to the Custom Roles API resource represent a subset of the privilege actions available in the Atlas Custom Roles UI.
	Action pulumi.StringInput `pulumi:"action"`
	// Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources CustomDbRoleActionResourceArrayInput `pulumi:"resources"`
}

func (CustomDbRoleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleAction)(nil)).Elem()
}

func (i CustomDbRoleActionArgs) ToCustomDbRoleActionOutput() CustomDbRoleActionOutput {
	return i.ToCustomDbRoleActionOutputWithContext(context.Background())
}

func (i CustomDbRoleActionArgs) ToCustomDbRoleActionOutputWithContext(ctx context.Context) CustomDbRoleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionOutput)
}

// CustomDbRoleActionArrayInput is an input type that accepts CustomDbRoleActionArray and CustomDbRoleActionArrayOutput values.
// You can construct a concrete instance of `CustomDbRoleActionArrayInput` via:
//
//	CustomDbRoleActionArray{ CustomDbRoleActionArgs{...} }
type CustomDbRoleActionArrayInput interface {
	pulumi.Input

	ToCustomDbRoleActionArrayOutput() CustomDbRoleActionArrayOutput
	ToCustomDbRoleActionArrayOutputWithContext(context.Context) CustomDbRoleActionArrayOutput
}

type CustomDbRoleActionArray []CustomDbRoleActionInput

func (CustomDbRoleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleAction)(nil)).Elem()
}

func (i CustomDbRoleActionArray) ToCustomDbRoleActionArrayOutput() CustomDbRoleActionArrayOutput {
	return i.ToCustomDbRoleActionArrayOutputWithContext(context.Background())
}

func (i CustomDbRoleActionArray) ToCustomDbRoleActionArrayOutputWithContext(ctx context.Context) CustomDbRoleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionArrayOutput)
}

type CustomDbRoleActionOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleAction)(nil)).Elem()
}

func (o CustomDbRoleActionOutput) ToCustomDbRoleActionOutput() CustomDbRoleActionOutput {
	return o
}

func (o CustomDbRoleActionOutput) ToCustomDbRoleActionOutputWithContext(ctx context.Context) CustomDbRoleActionOutput {
	return o
}

// Name of the privilege action. For a complete list of actions available in the Atlas API, see [Custom Role Actions](https://docs.atlas.mongodb.com/reference/api/custom-role-actions)
// > **Note**: The privilege actions available to the Custom Roles API resource represent a subset of the privilege actions available in the Atlas Custom Roles UI.
func (o CustomDbRoleActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDbRoleAction) string { return v.Action }).(pulumi.StringOutput)
}

// Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
func (o CustomDbRoleActionOutput) Resources() CustomDbRoleActionResourceArrayOutput {
	return o.ApplyT(func(v CustomDbRoleAction) []CustomDbRoleActionResource { return v.Resources }).(CustomDbRoleActionResourceArrayOutput)
}

type CustomDbRoleActionArrayOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleAction)(nil)).Elem()
}

func (o CustomDbRoleActionArrayOutput) ToCustomDbRoleActionArrayOutput() CustomDbRoleActionArrayOutput {
	return o
}

func (o CustomDbRoleActionArrayOutput) ToCustomDbRoleActionArrayOutputWithContext(ctx context.Context) CustomDbRoleActionArrayOutput {
	return o
}

func (o CustomDbRoleActionArrayOutput) Index(i pulumi.IntInput) CustomDbRoleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDbRoleAction {
		return vs[0].([]CustomDbRoleAction)[vs[1].(int)]
	}).(CustomDbRoleActionOutput)
}

type CustomDbRoleActionResource struct {
	Cluster        *bool   `pulumi:"cluster"`
	CollectionName *string `pulumi:"collectionName"`
	// Database on which the inherited role is granted.
	DatabaseName *string `pulumi:"databaseName"`
}

// CustomDbRoleActionResourceInput is an input type that accepts CustomDbRoleActionResourceArgs and CustomDbRoleActionResourceOutput values.
// You can construct a concrete instance of `CustomDbRoleActionResourceInput` via:
//
//	CustomDbRoleActionResourceArgs{...}
type CustomDbRoleActionResourceInput interface {
	pulumi.Input

	ToCustomDbRoleActionResourceOutput() CustomDbRoleActionResourceOutput
	ToCustomDbRoleActionResourceOutputWithContext(context.Context) CustomDbRoleActionResourceOutput
}

type CustomDbRoleActionResourceArgs struct {
	Cluster        pulumi.BoolPtrInput   `pulumi:"cluster"`
	CollectionName pulumi.StringPtrInput `pulumi:"collectionName"`
	// Database on which the inherited role is granted.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
}

func (CustomDbRoleActionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleActionResource)(nil)).Elem()
}

func (i CustomDbRoleActionResourceArgs) ToCustomDbRoleActionResourceOutput() CustomDbRoleActionResourceOutput {
	return i.ToCustomDbRoleActionResourceOutputWithContext(context.Background())
}

func (i CustomDbRoleActionResourceArgs) ToCustomDbRoleActionResourceOutputWithContext(ctx context.Context) CustomDbRoleActionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionResourceOutput)
}

// CustomDbRoleActionResourceArrayInput is an input type that accepts CustomDbRoleActionResourceArray and CustomDbRoleActionResourceArrayOutput values.
// You can construct a concrete instance of `CustomDbRoleActionResourceArrayInput` via:
//
//	CustomDbRoleActionResourceArray{ CustomDbRoleActionResourceArgs{...} }
type CustomDbRoleActionResourceArrayInput interface {
	pulumi.Input

	ToCustomDbRoleActionResourceArrayOutput() CustomDbRoleActionResourceArrayOutput
	ToCustomDbRoleActionResourceArrayOutputWithContext(context.Context) CustomDbRoleActionResourceArrayOutput
}

type CustomDbRoleActionResourceArray []CustomDbRoleActionResourceInput

func (CustomDbRoleActionResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleActionResource)(nil)).Elem()
}

func (i CustomDbRoleActionResourceArray) ToCustomDbRoleActionResourceArrayOutput() CustomDbRoleActionResourceArrayOutput {
	return i.ToCustomDbRoleActionResourceArrayOutputWithContext(context.Background())
}

func (i CustomDbRoleActionResourceArray) ToCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) CustomDbRoleActionResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionResourceArrayOutput)
}

type CustomDbRoleActionResourceOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleActionResource)(nil)).Elem()
}

func (o CustomDbRoleActionResourceOutput) ToCustomDbRoleActionResourceOutput() CustomDbRoleActionResourceOutput {
	return o
}

func (o CustomDbRoleActionResourceOutput) ToCustomDbRoleActionResourceOutputWithContext(ctx context.Context) CustomDbRoleActionResourceOutput {
	return o
}

func (o CustomDbRoleActionResourceOutput) Cluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDbRoleActionResource) *bool { return v.Cluster }).(pulumi.BoolPtrOutput)
}

func (o CustomDbRoleActionResourceOutput) CollectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDbRoleActionResource) *string { return v.CollectionName }).(pulumi.StringPtrOutput)
}

// Database on which the inherited role is granted.
func (o CustomDbRoleActionResourceOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDbRoleActionResource) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

type CustomDbRoleActionResourceArrayOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleActionResource)(nil)).Elem()
}

func (o CustomDbRoleActionResourceArrayOutput) ToCustomDbRoleActionResourceArrayOutput() CustomDbRoleActionResourceArrayOutput {
	return o
}

func (o CustomDbRoleActionResourceArrayOutput) ToCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) CustomDbRoleActionResourceArrayOutput {
	return o
}

func (o CustomDbRoleActionResourceArrayOutput) Index(i pulumi.IntInput) CustomDbRoleActionResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDbRoleActionResource {
		return vs[0].([]CustomDbRoleActionResource)[vs[1].(int)]
	}).(CustomDbRoleActionResourceOutput)
}

type CustomDbRoleInheritedRole struct {
	// Database on which the inherited role is granted.
	DatabaseName string `pulumi:"databaseName"`
	// Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName string `pulumi:"roleName"`
}

// CustomDbRoleInheritedRoleInput is an input type that accepts CustomDbRoleInheritedRoleArgs and CustomDbRoleInheritedRoleOutput values.
// You can construct a concrete instance of `CustomDbRoleInheritedRoleInput` via:
//
//	CustomDbRoleInheritedRoleArgs{...}
type CustomDbRoleInheritedRoleInput interface {
	pulumi.Input

	ToCustomDbRoleInheritedRoleOutput() CustomDbRoleInheritedRoleOutput
	ToCustomDbRoleInheritedRoleOutputWithContext(context.Context) CustomDbRoleInheritedRoleOutput
}

type CustomDbRoleInheritedRoleArgs struct {
	// Database on which the inherited role is granted.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (CustomDbRoleInheritedRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleInheritedRole)(nil)).Elem()
}

func (i CustomDbRoleInheritedRoleArgs) ToCustomDbRoleInheritedRoleOutput() CustomDbRoleInheritedRoleOutput {
	return i.ToCustomDbRoleInheritedRoleOutputWithContext(context.Background())
}

func (i CustomDbRoleInheritedRoleArgs) ToCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleInheritedRoleOutput)
}

// CustomDbRoleInheritedRoleArrayInput is an input type that accepts CustomDbRoleInheritedRoleArray and CustomDbRoleInheritedRoleArrayOutput values.
// You can construct a concrete instance of `CustomDbRoleInheritedRoleArrayInput` via:
//
//	CustomDbRoleInheritedRoleArray{ CustomDbRoleInheritedRoleArgs{...} }
type CustomDbRoleInheritedRoleArrayInput interface {
	pulumi.Input

	ToCustomDbRoleInheritedRoleArrayOutput() CustomDbRoleInheritedRoleArrayOutput
	ToCustomDbRoleInheritedRoleArrayOutputWithContext(context.Context) CustomDbRoleInheritedRoleArrayOutput
}

type CustomDbRoleInheritedRoleArray []CustomDbRoleInheritedRoleInput

func (CustomDbRoleInheritedRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleInheritedRole)(nil)).Elem()
}

func (i CustomDbRoleInheritedRoleArray) ToCustomDbRoleInheritedRoleArrayOutput() CustomDbRoleInheritedRoleArrayOutput {
	return i.ToCustomDbRoleInheritedRoleArrayOutputWithContext(context.Background())
}

func (i CustomDbRoleInheritedRoleArray) ToCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleInheritedRoleArrayOutput)
}

type CustomDbRoleInheritedRoleOutput struct{ *pulumi.OutputState }

func (CustomDbRoleInheritedRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleInheritedRole)(nil)).Elem()
}

func (o CustomDbRoleInheritedRoleOutput) ToCustomDbRoleInheritedRoleOutput() CustomDbRoleInheritedRoleOutput {
	return o
}

func (o CustomDbRoleInheritedRoleOutput) ToCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleOutput {
	return o
}

// Database on which the inherited role is granted.
func (o CustomDbRoleInheritedRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDbRoleInheritedRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Name of the inherited role. This can either be another custom role or a built-in role.
func (o CustomDbRoleInheritedRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDbRoleInheritedRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type CustomDbRoleInheritedRoleArrayOutput struct{ *pulumi.OutputState }

func (CustomDbRoleInheritedRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleInheritedRole)(nil)).Elem()
}

func (o CustomDbRoleInheritedRoleArrayOutput) ToCustomDbRoleInheritedRoleArrayOutput() CustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o CustomDbRoleInheritedRoleArrayOutput) ToCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o CustomDbRoleInheritedRoleArrayOutput) Index(i pulumi.IntInput) CustomDbRoleInheritedRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDbRoleInheritedRole {
		return vs[0].([]CustomDbRoleInheritedRole)[vs[1].(int)]
	}).(CustomDbRoleInheritedRoleOutput)
}

type DataLakeAws struct {
	ExternalId        *string `pulumi:"externalId"`
	IamAssumedRoleArn *string `pulumi:"iamAssumedRoleArn"`
	IamUserArn        *string `pulumi:"iamUserArn"`
	RoleId            string  `pulumi:"roleId"`
	TestS3Bucket      string  `pulumi:"testS3Bucket"`
}

// DataLakeAwsInput is an input type that accepts DataLakeAwsArgs and DataLakeAwsOutput values.
// You can construct a concrete instance of `DataLakeAwsInput` via:
//
//	DataLakeAwsArgs{...}
type DataLakeAwsInput interface {
	pulumi.Input

	ToDataLakeAwsOutput() DataLakeAwsOutput
	ToDataLakeAwsOutputWithContext(context.Context) DataLakeAwsOutput
}

type DataLakeAwsArgs struct {
	ExternalId        pulumi.StringPtrInput `pulumi:"externalId"`
	IamAssumedRoleArn pulumi.StringPtrInput `pulumi:"iamAssumedRoleArn"`
	IamUserArn        pulumi.StringPtrInput `pulumi:"iamUserArn"`
	RoleId            pulumi.StringInput    `pulumi:"roleId"`
	TestS3Bucket      pulumi.StringInput    `pulumi:"testS3Bucket"`
}

func (DataLakeAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAws)(nil)).Elem()
}

func (i DataLakeAwsArgs) ToDataLakeAwsOutput() DataLakeAwsOutput {
	return i.ToDataLakeAwsOutputWithContext(context.Background())
}

func (i DataLakeAwsArgs) ToDataLakeAwsOutputWithContext(ctx context.Context) DataLakeAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAwsOutput)
}

func (i DataLakeAwsArgs) ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput {
	return i.ToDataLakeAwsPtrOutputWithContext(context.Background())
}

func (i DataLakeAwsArgs) ToDataLakeAwsPtrOutputWithContext(ctx context.Context) DataLakeAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAwsOutput).ToDataLakeAwsPtrOutputWithContext(ctx)
}

// DataLakeAwsPtrInput is an input type that accepts DataLakeAwsArgs, DataLakeAwsPtr and DataLakeAwsPtrOutput values.
// You can construct a concrete instance of `DataLakeAwsPtrInput` via:
//
//	        DataLakeAwsArgs{...}
//
//	or:
//
//	        nil
type DataLakeAwsPtrInput interface {
	pulumi.Input

	ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput
	ToDataLakeAwsPtrOutputWithContext(context.Context) DataLakeAwsPtrOutput
}

type dataLakeAwsPtrType DataLakeAwsArgs

func DataLakeAwsPtr(v *DataLakeAwsArgs) DataLakeAwsPtrInput {
	return (*dataLakeAwsPtrType)(v)
}

func (*dataLakeAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAws)(nil)).Elem()
}

func (i *dataLakeAwsPtrType) ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput {
	return i.ToDataLakeAwsPtrOutputWithContext(context.Background())
}

func (i *dataLakeAwsPtrType) ToDataLakeAwsPtrOutputWithContext(ctx context.Context) DataLakeAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAwsPtrOutput)
}

type DataLakeAwsOutput struct{ *pulumi.OutputState }

func (DataLakeAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAws)(nil)).Elem()
}

func (o DataLakeAwsOutput) ToDataLakeAwsOutput() DataLakeAwsOutput {
	return o
}

func (o DataLakeAwsOutput) ToDataLakeAwsOutputWithContext(ctx context.Context) DataLakeAwsOutput {
	return o
}

func (o DataLakeAwsOutput) ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput {
	return o.ToDataLakeAwsPtrOutputWithContext(context.Background())
}

func (o DataLakeAwsOutput) ToDataLakeAwsPtrOutputWithContext(ctx context.Context) DataLakeAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeAws) *DataLakeAws {
		return &v
	}).(DataLakeAwsPtrOutput)
}

func (o DataLakeAwsOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAws) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsOutput) IamAssumedRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAws) *string { return v.IamAssumedRoleArn }).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsOutput) IamUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAws) *string { return v.IamUserArn }).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAws) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o DataLakeAwsOutput) TestS3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAws) string { return v.TestS3Bucket }).(pulumi.StringOutput)
}

type DataLakeAwsPtrOutput struct{ *pulumi.OutputState }

func (DataLakeAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAws)(nil)).Elem()
}

func (o DataLakeAwsPtrOutput) ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput {
	return o
}

func (o DataLakeAwsPtrOutput) ToDataLakeAwsPtrOutputWithContext(ctx context.Context) DataLakeAwsPtrOutput {
	return o
}

func (o DataLakeAwsPtrOutput) Elem() DataLakeAwsOutput {
	return o.ApplyT(func(v *DataLakeAws) DataLakeAws {
		if v != nil {
			return *v
		}
		var ret DataLakeAws
		return ret
	}).(DataLakeAwsOutput)
}

func (o DataLakeAwsPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsPtrOutput) IamAssumedRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return v.IamAssumedRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsPtrOutput) IamUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return v.IamUserArn
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsPtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return &v.RoleId
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsPtrOutput) TestS3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return &v.TestS3Bucket
	}).(pulumi.StringPtrOutput)
}

type DataLakeDataProcessRegion struct {
	CloudProvider string `pulumi:"cloudProvider"`
	Region        string `pulumi:"region"`
}

// DataLakeDataProcessRegionInput is an input type that accepts DataLakeDataProcessRegionArgs and DataLakeDataProcessRegionOutput values.
// You can construct a concrete instance of `DataLakeDataProcessRegionInput` via:
//
//	DataLakeDataProcessRegionArgs{...}
type DataLakeDataProcessRegionInput interface {
	pulumi.Input

	ToDataLakeDataProcessRegionOutput() DataLakeDataProcessRegionOutput
	ToDataLakeDataProcessRegionOutputWithContext(context.Context) DataLakeDataProcessRegionOutput
}

type DataLakeDataProcessRegionArgs struct {
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	Region        pulumi.StringInput `pulumi:"region"`
}

func (DataLakeDataProcessRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeDataProcessRegion)(nil)).Elem()
}

func (i DataLakeDataProcessRegionArgs) ToDataLakeDataProcessRegionOutput() DataLakeDataProcessRegionOutput {
	return i.ToDataLakeDataProcessRegionOutputWithContext(context.Background())
}

func (i DataLakeDataProcessRegionArgs) ToDataLakeDataProcessRegionOutputWithContext(ctx context.Context) DataLakeDataProcessRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeDataProcessRegionOutput)
}

func (i DataLakeDataProcessRegionArgs) ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput {
	return i.ToDataLakeDataProcessRegionPtrOutputWithContext(context.Background())
}

func (i DataLakeDataProcessRegionArgs) ToDataLakeDataProcessRegionPtrOutputWithContext(ctx context.Context) DataLakeDataProcessRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeDataProcessRegionOutput).ToDataLakeDataProcessRegionPtrOutputWithContext(ctx)
}

// DataLakeDataProcessRegionPtrInput is an input type that accepts DataLakeDataProcessRegionArgs, DataLakeDataProcessRegionPtr and DataLakeDataProcessRegionPtrOutput values.
// You can construct a concrete instance of `DataLakeDataProcessRegionPtrInput` via:
//
//	        DataLakeDataProcessRegionArgs{...}
//
//	or:
//
//	        nil
type DataLakeDataProcessRegionPtrInput interface {
	pulumi.Input

	ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput
	ToDataLakeDataProcessRegionPtrOutputWithContext(context.Context) DataLakeDataProcessRegionPtrOutput
}

type dataLakeDataProcessRegionPtrType DataLakeDataProcessRegionArgs

func DataLakeDataProcessRegionPtr(v *DataLakeDataProcessRegionArgs) DataLakeDataProcessRegionPtrInput {
	return (*dataLakeDataProcessRegionPtrType)(v)
}

func (*dataLakeDataProcessRegionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeDataProcessRegion)(nil)).Elem()
}

func (i *dataLakeDataProcessRegionPtrType) ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput {
	return i.ToDataLakeDataProcessRegionPtrOutputWithContext(context.Background())
}

func (i *dataLakeDataProcessRegionPtrType) ToDataLakeDataProcessRegionPtrOutputWithContext(ctx context.Context) DataLakeDataProcessRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeDataProcessRegionPtrOutput)
}

type DataLakeDataProcessRegionOutput struct{ *pulumi.OutputState }

func (DataLakeDataProcessRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeDataProcessRegion)(nil)).Elem()
}

func (o DataLakeDataProcessRegionOutput) ToDataLakeDataProcessRegionOutput() DataLakeDataProcessRegionOutput {
	return o
}

func (o DataLakeDataProcessRegionOutput) ToDataLakeDataProcessRegionOutputWithContext(ctx context.Context) DataLakeDataProcessRegionOutput {
	return o
}

func (o DataLakeDataProcessRegionOutput) ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput {
	return o.ToDataLakeDataProcessRegionPtrOutputWithContext(context.Background())
}

func (o DataLakeDataProcessRegionOutput) ToDataLakeDataProcessRegionPtrOutputWithContext(ctx context.Context) DataLakeDataProcessRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeDataProcessRegion) *DataLakeDataProcessRegion {
		return &v
	}).(DataLakeDataProcessRegionPtrOutput)
}

func (o DataLakeDataProcessRegionOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeDataProcessRegion) string { return v.CloudProvider }).(pulumi.StringOutput)
}

func (o DataLakeDataProcessRegionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeDataProcessRegion) string { return v.Region }).(pulumi.StringOutput)
}

type DataLakeDataProcessRegionPtrOutput struct{ *pulumi.OutputState }

func (DataLakeDataProcessRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeDataProcessRegion)(nil)).Elem()
}

func (o DataLakeDataProcessRegionPtrOutput) ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput {
	return o
}

func (o DataLakeDataProcessRegionPtrOutput) ToDataLakeDataProcessRegionPtrOutputWithContext(ctx context.Context) DataLakeDataProcessRegionPtrOutput {
	return o
}

func (o DataLakeDataProcessRegionPtrOutput) Elem() DataLakeDataProcessRegionOutput {
	return o.ApplyT(func(v *DataLakeDataProcessRegion) DataLakeDataProcessRegion {
		if v != nil {
			return *v
		}
		var ret DataLakeDataProcessRegion
		return ret
	}).(DataLakeDataProcessRegionOutput)
}

func (o DataLakeDataProcessRegionPtrOutput) CloudProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeDataProcessRegion) *string {
		if v == nil {
			return nil
		}
		return &v.CloudProvider
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeDataProcessRegionPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeDataProcessRegion) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

type DataLakeStorageDatabase struct {
	Collections            []DataLakeStorageDatabaseCollection `pulumi:"collections"`
	MaxWildcardCollections *int                                `pulumi:"maxWildcardCollections"`
	// Name of the Atlas Data Lake.
	Name  *string                       `pulumi:"name"`
	Views []DataLakeStorageDatabaseView `pulumi:"views"`
}

// DataLakeStorageDatabaseInput is an input type that accepts DataLakeStorageDatabaseArgs and DataLakeStorageDatabaseOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseInput` via:
//
//	DataLakeStorageDatabaseArgs{...}
type DataLakeStorageDatabaseInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseOutput() DataLakeStorageDatabaseOutput
	ToDataLakeStorageDatabaseOutputWithContext(context.Context) DataLakeStorageDatabaseOutput
}

type DataLakeStorageDatabaseArgs struct {
	Collections            DataLakeStorageDatabaseCollectionArrayInput `pulumi:"collections"`
	MaxWildcardCollections pulumi.IntPtrInput                          `pulumi:"maxWildcardCollections"`
	// Name of the Atlas Data Lake.
	Name  pulumi.StringPtrInput                 `pulumi:"name"`
	Views DataLakeStorageDatabaseViewArrayInput `pulumi:"views"`
}

func (DataLakeStorageDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabase)(nil)).Elem()
}

func (i DataLakeStorageDatabaseArgs) ToDataLakeStorageDatabaseOutput() DataLakeStorageDatabaseOutput {
	return i.ToDataLakeStorageDatabaseOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseArgs) ToDataLakeStorageDatabaseOutputWithContext(ctx context.Context) DataLakeStorageDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseOutput)
}

// DataLakeStorageDatabaseArrayInput is an input type that accepts DataLakeStorageDatabaseArray and DataLakeStorageDatabaseArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseArrayInput` via:
//
//	DataLakeStorageDatabaseArray{ DataLakeStorageDatabaseArgs{...} }
type DataLakeStorageDatabaseArrayInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseArrayOutput() DataLakeStorageDatabaseArrayOutput
	ToDataLakeStorageDatabaseArrayOutputWithContext(context.Context) DataLakeStorageDatabaseArrayOutput
}

type DataLakeStorageDatabaseArray []DataLakeStorageDatabaseInput

func (DataLakeStorageDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabase)(nil)).Elem()
}

func (i DataLakeStorageDatabaseArray) ToDataLakeStorageDatabaseArrayOutput() DataLakeStorageDatabaseArrayOutput {
	return i.ToDataLakeStorageDatabaseArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseArray) ToDataLakeStorageDatabaseArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseArrayOutput)
}

type DataLakeStorageDatabaseOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabase)(nil)).Elem()
}

func (o DataLakeStorageDatabaseOutput) ToDataLakeStorageDatabaseOutput() DataLakeStorageDatabaseOutput {
	return o
}

func (o DataLakeStorageDatabaseOutput) ToDataLakeStorageDatabaseOutputWithContext(ctx context.Context) DataLakeStorageDatabaseOutput {
	return o
}

func (o DataLakeStorageDatabaseOutput) Collections() DataLakeStorageDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v DataLakeStorageDatabase) []DataLakeStorageDatabaseCollection { return v.Collections }).(DataLakeStorageDatabaseCollectionArrayOutput)
}

func (o DataLakeStorageDatabaseOutput) MaxWildcardCollections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabase) *int { return v.MaxWildcardCollections }).(pulumi.IntPtrOutput)
}

// Name of the Atlas Data Lake.
func (o DataLakeStorageDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseOutput) Views() DataLakeStorageDatabaseViewArrayOutput {
	return o.ApplyT(func(v DataLakeStorageDatabase) []DataLakeStorageDatabaseView { return v.Views }).(DataLakeStorageDatabaseViewArrayOutput)
}

type DataLakeStorageDatabaseArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabase)(nil)).Elem()
}

func (o DataLakeStorageDatabaseArrayOutput) ToDataLakeStorageDatabaseArrayOutput() DataLakeStorageDatabaseArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseArrayOutput) ToDataLakeStorageDatabaseArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseArrayOutput) Index(i pulumi.IntInput) DataLakeStorageDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageDatabase {
		return vs[0].([]DataLakeStorageDatabase)[vs[1].(int)]
	}).(DataLakeStorageDatabaseOutput)
}

type DataLakeStorageDatabaseCollection struct {
	DataSources []DataLakeStorageDatabaseCollectionDataSource `pulumi:"dataSources"`
	// Name of the Atlas Data Lake.
	Name *string `pulumi:"name"`
}

// DataLakeStorageDatabaseCollectionInput is an input type that accepts DataLakeStorageDatabaseCollectionArgs and DataLakeStorageDatabaseCollectionOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseCollectionInput` via:
//
//	DataLakeStorageDatabaseCollectionArgs{...}
type DataLakeStorageDatabaseCollectionInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseCollectionOutput() DataLakeStorageDatabaseCollectionOutput
	ToDataLakeStorageDatabaseCollectionOutputWithContext(context.Context) DataLakeStorageDatabaseCollectionOutput
}

type DataLakeStorageDatabaseCollectionArgs struct {
	DataSources DataLakeStorageDatabaseCollectionDataSourceArrayInput `pulumi:"dataSources"`
	// Name of the Atlas Data Lake.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DataLakeStorageDatabaseCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (i DataLakeStorageDatabaseCollectionArgs) ToDataLakeStorageDatabaseCollectionOutput() DataLakeStorageDatabaseCollectionOutput {
	return i.ToDataLakeStorageDatabaseCollectionOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseCollectionArgs) ToDataLakeStorageDatabaseCollectionOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseCollectionOutput)
}

// DataLakeStorageDatabaseCollectionArrayInput is an input type that accepts DataLakeStorageDatabaseCollectionArray and DataLakeStorageDatabaseCollectionArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseCollectionArrayInput` via:
//
//	DataLakeStorageDatabaseCollectionArray{ DataLakeStorageDatabaseCollectionArgs{...} }
type DataLakeStorageDatabaseCollectionArrayInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseCollectionArrayOutput() DataLakeStorageDatabaseCollectionArrayOutput
	ToDataLakeStorageDatabaseCollectionArrayOutputWithContext(context.Context) DataLakeStorageDatabaseCollectionArrayOutput
}

type DataLakeStorageDatabaseCollectionArray []DataLakeStorageDatabaseCollectionInput

func (DataLakeStorageDatabaseCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (i DataLakeStorageDatabaseCollectionArray) ToDataLakeStorageDatabaseCollectionArrayOutput() DataLakeStorageDatabaseCollectionArrayOutput {
	return i.ToDataLakeStorageDatabaseCollectionArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseCollectionArray) ToDataLakeStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseCollectionArrayOutput)
}

type DataLakeStorageDatabaseCollectionOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (o DataLakeStorageDatabaseCollectionOutput) ToDataLakeStorageDatabaseCollectionOutput() DataLakeStorageDatabaseCollectionOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionOutput) ToDataLakeStorageDatabaseCollectionOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionOutput) DataSources() DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollection) []DataLakeStorageDatabaseCollectionDataSource {
		return v.DataSources
	}).(DataLakeStorageDatabaseCollectionDataSourceArrayOutput)
}

// Name of the Atlas Data Lake.
func (o DataLakeStorageDatabaseCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DataLakeStorageDatabaseCollectionArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (o DataLakeStorageDatabaseCollectionArrayOutput) ToDataLakeStorageDatabaseCollectionArrayOutput() DataLakeStorageDatabaseCollectionArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionArrayOutput) ToDataLakeStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionArrayOutput) Index(i pulumi.IntInput) DataLakeStorageDatabaseCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageDatabaseCollection {
		return vs[0].([]DataLakeStorageDatabaseCollection)[vs[1].(int)]
	}).(DataLakeStorageDatabaseCollectionOutput)
}

type DataLakeStorageDatabaseCollectionDataSource struct {
	DefaultFormat *string `pulumi:"defaultFormat"`
	Path          *string `pulumi:"path"`
	StoreName     *string `pulumi:"storeName"`
}

// DataLakeStorageDatabaseCollectionDataSourceInput is an input type that accepts DataLakeStorageDatabaseCollectionDataSourceArgs and DataLakeStorageDatabaseCollectionDataSourceOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseCollectionDataSourceInput` via:
//
//	DataLakeStorageDatabaseCollectionDataSourceArgs{...}
type DataLakeStorageDatabaseCollectionDataSourceInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseCollectionDataSourceOutput() DataLakeStorageDatabaseCollectionDataSourceOutput
	ToDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(context.Context) DataLakeStorageDatabaseCollectionDataSourceOutput
}

type DataLakeStorageDatabaseCollectionDataSourceArgs struct {
	DefaultFormat pulumi.StringPtrInput `pulumi:"defaultFormat"`
	Path          pulumi.StringPtrInput `pulumi:"path"`
	StoreName     pulumi.StringPtrInput `pulumi:"storeName"`
}

func (DataLakeStorageDatabaseCollectionDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i DataLakeStorageDatabaseCollectionDataSourceArgs) ToDataLakeStorageDatabaseCollectionDataSourceOutput() DataLakeStorageDatabaseCollectionDataSourceOutput {
	return i.ToDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseCollectionDataSourceArgs) ToDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseCollectionDataSourceOutput)
}

// DataLakeStorageDatabaseCollectionDataSourceArrayInput is an input type that accepts DataLakeStorageDatabaseCollectionDataSourceArray and DataLakeStorageDatabaseCollectionDataSourceArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseCollectionDataSourceArrayInput` via:
//
//	DataLakeStorageDatabaseCollectionDataSourceArray{ DataLakeStorageDatabaseCollectionDataSourceArgs{...} }
type DataLakeStorageDatabaseCollectionDataSourceArrayInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseCollectionDataSourceArrayOutput() DataLakeStorageDatabaseCollectionDataSourceArrayOutput
	ToDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Context) DataLakeStorageDatabaseCollectionDataSourceArrayOutput
}

type DataLakeStorageDatabaseCollectionDataSourceArray []DataLakeStorageDatabaseCollectionDataSourceInput

func (DataLakeStorageDatabaseCollectionDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i DataLakeStorageDatabaseCollectionDataSourceArray) ToDataLakeStorageDatabaseCollectionDataSourceArrayOutput() DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return i.ToDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseCollectionDataSourceArray) ToDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseCollectionDataSourceArrayOutput)
}

type DataLakeStorageDatabaseCollectionDataSourceOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseCollectionDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) ToDataLakeStorageDatabaseCollectionDataSourceOutput() DataLakeStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) ToDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) DefaultFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollectionDataSource) *string { return v.DefaultFormat }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollectionDataSource) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) StoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollectionDataSource) *string { return v.StoreName }).(pulumi.StringPtrOutput)
}

type DataLakeStorageDatabaseCollectionDataSourceArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseCollectionDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o DataLakeStorageDatabaseCollectionDataSourceArrayOutput) ToDataLakeStorageDatabaseCollectionDataSourceArrayOutput() DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionDataSourceArrayOutput) ToDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionDataSourceArrayOutput) Index(i pulumi.IntInput) DataLakeStorageDatabaseCollectionDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageDatabaseCollectionDataSource {
		return vs[0].([]DataLakeStorageDatabaseCollectionDataSource)[vs[1].(int)]
	}).(DataLakeStorageDatabaseCollectionDataSourceOutput)
}

type DataLakeStorageDatabaseView struct {
	// Name of the Atlas Data Lake.
	Name     *string `pulumi:"name"`
	Pipeline *string `pulumi:"pipeline"`
	Source   *string `pulumi:"source"`
}

// DataLakeStorageDatabaseViewInput is an input type that accepts DataLakeStorageDatabaseViewArgs and DataLakeStorageDatabaseViewOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseViewInput` via:
//
//	DataLakeStorageDatabaseViewArgs{...}
type DataLakeStorageDatabaseViewInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseViewOutput() DataLakeStorageDatabaseViewOutput
	ToDataLakeStorageDatabaseViewOutputWithContext(context.Context) DataLakeStorageDatabaseViewOutput
}

type DataLakeStorageDatabaseViewArgs struct {
	// Name of the Atlas Data Lake.
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Pipeline pulumi.StringPtrInput `pulumi:"pipeline"`
	Source   pulumi.StringPtrInput `pulumi:"source"`
}

func (DataLakeStorageDatabaseViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseView)(nil)).Elem()
}

func (i DataLakeStorageDatabaseViewArgs) ToDataLakeStorageDatabaseViewOutput() DataLakeStorageDatabaseViewOutput {
	return i.ToDataLakeStorageDatabaseViewOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseViewArgs) ToDataLakeStorageDatabaseViewOutputWithContext(ctx context.Context) DataLakeStorageDatabaseViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseViewOutput)
}

// DataLakeStorageDatabaseViewArrayInput is an input type that accepts DataLakeStorageDatabaseViewArray and DataLakeStorageDatabaseViewArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseViewArrayInput` via:
//
//	DataLakeStorageDatabaseViewArray{ DataLakeStorageDatabaseViewArgs{...} }
type DataLakeStorageDatabaseViewArrayInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseViewArrayOutput() DataLakeStorageDatabaseViewArrayOutput
	ToDataLakeStorageDatabaseViewArrayOutputWithContext(context.Context) DataLakeStorageDatabaseViewArrayOutput
}

type DataLakeStorageDatabaseViewArray []DataLakeStorageDatabaseViewInput

func (DataLakeStorageDatabaseViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseView)(nil)).Elem()
}

func (i DataLakeStorageDatabaseViewArray) ToDataLakeStorageDatabaseViewArrayOutput() DataLakeStorageDatabaseViewArrayOutput {
	return i.ToDataLakeStorageDatabaseViewArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseViewArray) ToDataLakeStorageDatabaseViewArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseViewArrayOutput)
}

type DataLakeStorageDatabaseViewOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseView)(nil)).Elem()
}

func (o DataLakeStorageDatabaseViewOutput) ToDataLakeStorageDatabaseViewOutput() DataLakeStorageDatabaseViewOutput {
	return o
}

func (o DataLakeStorageDatabaseViewOutput) ToDataLakeStorageDatabaseViewOutputWithContext(ctx context.Context) DataLakeStorageDatabaseViewOutput {
	return o
}

// Name of the Atlas Data Lake.
func (o DataLakeStorageDatabaseViewOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseView) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseViewOutput) Pipeline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseView) *string { return v.Pipeline }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseViewOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseView) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type DataLakeStorageDatabaseViewArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseView)(nil)).Elem()
}

func (o DataLakeStorageDatabaseViewArrayOutput) ToDataLakeStorageDatabaseViewArrayOutput() DataLakeStorageDatabaseViewArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseViewArrayOutput) ToDataLakeStorageDatabaseViewArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseViewArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseViewArrayOutput) Index(i pulumi.IntInput) DataLakeStorageDatabaseViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageDatabaseView {
		return vs[0].([]DataLakeStorageDatabaseView)[vs[1].(int)]
	}).(DataLakeStorageDatabaseViewOutput)
}

type DataLakeStorageStore struct {
	AdditionalStorageClasses []string `pulumi:"additionalStorageClasses"`
	Bucket                   *string  `pulumi:"bucket"`
	Delimiter                *string  `pulumi:"delimiter"`
	IncludeTags              *bool    `pulumi:"includeTags"`
	// Name of the Atlas Data Lake.
	Name     *string `pulumi:"name"`
	Prefix   *string `pulumi:"prefix"`
	Provider *string `pulumi:"provider"`
	Region   *string `pulumi:"region"`
}

// DataLakeStorageStoreInput is an input type that accepts DataLakeStorageStoreArgs and DataLakeStorageStoreOutput values.
// You can construct a concrete instance of `DataLakeStorageStoreInput` via:
//
//	DataLakeStorageStoreArgs{...}
type DataLakeStorageStoreInput interface {
	pulumi.Input

	ToDataLakeStorageStoreOutput() DataLakeStorageStoreOutput
	ToDataLakeStorageStoreOutputWithContext(context.Context) DataLakeStorageStoreOutput
}

type DataLakeStorageStoreArgs struct {
	AdditionalStorageClasses pulumi.StringArrayInput `pulumi:"additionalStorageClasses"`
	Bucket                   pulumi.StringPtrInput   `pulumi:"bucket"`
	Delimiter                pulumi.StringPtrInput   `pulumi:"delimiter"`
	IncludeTags              pulumi.BoolPtrInput     `pulumi:"includeTags"`
	// Name of the Atlas Data Lake.
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Prefix   pulumi.StringPtrInput `pulumi:"prefix"`
	Provider pulumi.StringPtrInput `pulumi:"provider"`
	Region   pulumi.StringPtrInput `pulumi:"region"`
}

func (DataLakeStorageStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageStore)(nil)).Elem()
}

func (i DataLakeStorageStoreArgs) ToDataLakeStorageStoreOutput() DataLakeStorageStoreOutput {
	return i.ToDataLakeStorageStoreOutputWithContext(context.Background())
}

func (i DataLakeStorageStoreArgs) ToDataLakeStorageStoreOutputWithContext(ctx context.Context) DataLakeStorageStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageStoreOutput)
}

// DataLakeStorageStoreArrayInput is an input type that accepts DataLakeStorageStoreArray and DataLakeStorageStoreArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageStoreArrayInput` via:
//
//	DataLakeStorageStoreArray{ DataLakeStorageStoreArgs{...} }
type DataLakeStorageStoreArrayInput interface {
	pulumi.Input

	ToDataLakeStorageStoreArrayOutput() DataLakeStorageStoreArrayOutput
	ToDataLakeStorageStoreArrayOutputWithContext(context.Context) DataLakeStorageStoreArrayOutput
}

type DataLakeStorageStoreArray []DataLakeStorageStoreInput

func (DataLakeStorageStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageStore)(nil)).Elem()
}

func (i DataLakeStorageStoreArray) ToDataLakeStorageStoreArrayOutput() DataLakeStorageStoreArrayOutput {
	return i.ToDataLakeStorageStoreArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageStoreArray) ToDataLakeStorageStoreArrayOutputWithContext(ctx context.Context) DataLakeStorageStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageStoreArrayOutput)
}

type DataLakeStorageStoreOutput struct{ *pulumi.OutputState }

func (DataLakeStorageStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageStore)(nil)).Elem()
}

func (o DataLakeStorageStoreOutput) ToDataLakeStorageStoreOutput() DataLakeStorageStoreOutput {
	return o
}

func (o DataLakeStorageStoreOutput) ToDataLakeStorageStoreOutputWithContext(ctx context.Context) DataLakeStorageStoreOutput {
	return o
}

func (o DataLakeStorageStoreOutput) AdditionalStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataLakeStorageStore) []string { return v.AdditionalStorageClasses }).(pulumi.StringArrayOutput)
}

func (o DataLakeStorageStoreOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) IncludeTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *bool { return v.IncludeTags }).(pulumi.BoolPtrOutput)
}

// Name of the Atlas Data Lake.
func (o DataLakeStorageStoreOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type DataLakeStorageStoreArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageStore)(nil)).Elem()
}

func (o DataLakeStorageStoreArrayOutput) ToDataLakeStorageStoreArrayOutput() DataLakeStorageStoreArrayOutput {
	return o
}

func (o DataLakeStorageStoreArrayOutput) ToDataLakeStorageStoreArrayOutputWithContext(ctx context.Context) DataLakeStorageStoreArrayOutput {
	return o
}

func (o DataLakeStorageStoreArrayOutput) Index(i pulumi.IntInput) DataLakeStorageStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageStore {
		return vs[0].([]DataLakeStorageStore)[vs[1].(int)]
	}).(DataLakeStorageStoreOutput)
}

type DatabaseUserLabel struct {
	// The key that you want to write.
	Key *string `pulumi:"key"`
	// The value that you want to write.
	Value *string `pulumi:"value"`
}

// DatabaseUserLabelInput is an input type that accepts DatabaseUserLabelArgs and DatabaseUserLabelOutput values.
// You can construct a concrete instance of `DatabaseUserLabelInput` via:
//
//	DatabaseUserLabelArgs{...}
type DatabaseUserLabelInput interface {
	pulumi.Input

	ToDatabaseUserLabelOutput() DatabaseUserLabelOutput
	ToDatabaseUserLabelOutputWithContext(context.Context) DatabaseUserLabelOutput
}

type DatabaseUserLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DatabaseUserLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserLabel)(nil)).Elem()
}

func (i DatabaseUserLabelArgs) ToDatabaseUserLabelOutput() DatabaseUserLabelOutput {
	return i.ToDatabaseUserLabelOutputWithContext(context.Background())
}

func (i DatabaseUserLabelArgs) ToDatabaseUserLabelOutputWithContext(ctx context.Context) DatabaseUserLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserLabelOutput)
}

// DatabaseUserLabelArrayInput is an input type that accepts DatabaseUserLabelArray and DatabaseUserLabelArrayOutput values.
// You can construct a concrete instance of `DatabaseUserLabelArrayInput` via:
//
//	DatabaseUserLabelArray{ DatabaseUserLabelArgs{...} }
type DatabaseUserLabelArrayInput interface {
	pulumi.Input

	ToDatabaseUserLabelArrayOutput() DatabaseUserLabelArrayOutput
	ToDatabaseUserLabelArrayOutputWithContext(context.Context) DatabaseUserLabelArrayOutput
}

type DatabaseUserLabelArray []DatabaseUserLabelInput

func (DatabaseUserLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserLabel)(nil)).Elem()
}

func (i DatabaseUserLabelArray) ToDatabaseUserLabelArrayOutput() DatabaseUserLabelArrayOutput {
	return i.ToDatabaseUserLabelArrayOutputWithContext(context.Background())
}

func (i DatabaseUserLabelArray) ToDatabaseUserLabelArrayOutputWithContext(ctx context.Context) DatabaseUserLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserLabelArrayOutput)
}

type DatabaseUserLabelOutput struct{ *pulumi.OutputState }

func (DatabaseUserLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserLabel)(nil)).Elem()
}

func (o DatabaseUserLabelOutput) ToDatabaseUserLabelOutput() DatabaseUserLabelOutput {
	return o
}

func (o DatabaseUserLabelOutput) ToDatabaseUserLabelOutputWithContext(ctx context.Context) DatabaseUserLabelOutput {
	return o
}

// The key that you want to write.
func (o DatabaseUserLabelOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserLabel) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value that you want to write.
func (o DatabaseUserLabelOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserLabel) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DatabaseUserLabelArrayOutput struct{ *pulumi.OutputState }

func (DatabaseUserLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserLabel)(nil)).Elem()
}

func (o DatabaseUserLabelArrayOutput) ToDatabaseUserLabelArrayOutput() DatabaseUserLabelArrayOutput {
	return o
}

func (o DatabaseUserLabelArrayOutput) ToDatabaseUserLabelArrayOutputWithContext(ctx context.Context) DatabaseUserLabelArrayOutput {
	return o
}

func (o DatabaseUserLabelArrayOutput) Index(i pulumi.IntInput) DatabaseUserLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseUserLabel {
		return vs[0].([]DatabaseUserLabel)[vs[1].(int)]
	}).(DatabaseUserLabelOutput)
}

type DatabaseUserRole struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName *string `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName *string `pulumi:"databaseName"`
	// Name of the role to grant. See [Create a Database User](https://docs.atlas.mongodb.com/reference/api/database-users-create-a-user/) `roles.roleName` for valid values and restrictions.
	RoleName *string `pulumi:"roleName"`
}

// DatabaseUserRoleInput is an input type that accepts DatabaseUserRoleArgs and DatabaseUserRoleOutput values.
// You can construct a concrete instance of `DatabaseUserRoleInput` via:
//
//	DatabaseUserRoleArgs{...}
type DatabaseUserRoleInput interface {
	pulumi.Input

	ToDatabaseUserRoleOutput() DatabaseUserRoleOutput
	ToDatabaseUserRoleOutputWithContext(context.Context) DatabaseUserRoleOutput
}

type DatabaseUserRoleArgs struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName pulumi.StringPtrInput `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Name of the role to grant. See [Create a Database User](https://docs.atlas.mongodb.com/reference/api/database-users-create-a-user/) `roles.roleName` for valid values and restrictions.
	RoleName pulumi.StringPtrInput `pulumi:"roleName"`
}

func (DatabaseUserRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserRole)(nil)).Elem()
}

func (i DatabaseUserRoleArgs) ToDatabaseUserRoleOutput() DatabaseUserRoleOutput {
	return i.ToDatabaseUserRoleOutputWithContext(context.Background())
}

func (i DatabaseUserRoleArgs) ToDatabaseUserRoleOutputWithContext(ctx context.Context) DatabaseUserRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserRoleOutput)
}

// DatabaseUserRoleArrayInput is an input type that accepts DatabaseUserRoleArray and DatabaseUserRoleArrayOutput values.
// You can construct a concrete instance of `DatabaseUserRoleArrayInput` via:
//
//	DatabaseUserRoleArray{ DatabaseUserRoleArgs{...} }
type DatabaseUserRoleArrayInput interface {
	pulumi.Input

	ToDatabaseUserRoleArrayOutput() DatabaseUserRoleArrayOutput
	ToDatabaseUserRoleArrayOutputWithContext(context.Context) DatabaseUserRoleArrayOutput
}

type DatabaseUserRoleArray []DatabaseUserRoleInput

func (DatabaseUserRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserRole)(nil)).Elem()
}

func (i DatabaseUserRoleArray) ToDatabaseUserRoleArrayOutput() DatabaseUserRoleArrayOutput {
	return i.ToDatabaseUserRoleArrayOutputWithContext(context.Background())
}

func (i DatabaseUserRoleArray) ToDatabaseUserRoleArrayOutputWithContext(ctx context.Context) DatabaseUserRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserRoleArrayOutput)
}

type DatabaseUserRoleOutput struct{ *pulumi.OutputState }

func (DatabaseUserRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserRole)(nil)).Elem()
}

func (o DatabaseUserRoleOutput) ToDatabaseUserRoleOutput() DatabaseUserRoleOutput {
	return o
}

func (o DatabaseUserRoleOutput) ToDatabaseUserRoleOutputWithContext(ctx context.Context) DatabaseUserRoleOutput {
	return o
}

// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
func (o DatabaseUserRoleOutput) CollectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserRole) *string { return v.CollectionName }).(pulumi.StringPtrOutput)
}

// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
func (o DatabaseUserRoleOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserRole) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Name of the role to grant. See [Create a Database User](https://docs.atlas.mongodb.com/reference/api/database-users-create-a-user/) `roles.roleName` for valid values and restrictions.
func (o DatabaseUserRoleOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserRole) *string { return v.RoleName }).(pulumi.StringPtrOutput)
}

type DatabaseUserRoleArrayOutput struct{ *pulumi.OutputState }

func (DatabaseUserRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserRole)(nil)).Elem()
}

func (o DatabaseUserRoleArrayOutput) ToDatabaseUserRoleArrayOutput() DatabaseUserRoleArrayOutput {
	return o
}

func (o DatabaseUserRoleArrayOutput) ToDatabaseUserRoleArrayOutputWithContext(ctx context.Context) DatabaseUserRoleArrayOutput {
	return o
}

func (o DatabaseUserRoleArrayOutput) Index(i pulumi.IntInput) DatabaseUserRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseUserRole {
		return vs[0].([]DatabaseUserRole)[vs[1].(int)]
	}).(DatabaseUserRoleOutput)
}

type DatabaseUserScope struct {
	// Name of the cluster or Atlas Data Lake that the user has access to.
	Name *string `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type *string `pulumi:"type"`
}

// DatabaseUserScopeInput is an input type that accepts DatabaseUserScopeArgs and DatabaseUserScopeOutput values.
// You can construct a concrete instance of `DatabaseUserScopeInput` via:
//
//	DatabaseUserScopeArgs{...}
type DatabaseUserScopeInput interface {
	pulumi.Input

	ToDatabaseUserScopeOutput() DatabaseUserScopeOutput
	ToDatabaseUserScopeOutputWithContext(context.Context) DatabaseUserScopeOutput
}

type DatabaseUserScopeArgs struct {
	// Name of the cluster or Atlas Data Lake that the user has access to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatabaseUserScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserScope)(nil)).Elem()
}

func (i DatabaseUserScopeArgs) ToDatabaseUserScopeOutput() DatabaseUserScopeOutput {
	return i.ToDatabaseUserScopeOutputWithContext(context.Background())
}

func (i DatabaseUserScopeArgs) ToDatabaseUserScopeOutputWithContext(ctx context.Context) DatabaseUserScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserScopeOutput)
}

// DatabaseUserScopeArrayInput is an input type that accepts DatabaseUserScopeArray and DatabaseUserScopeArrayOutput values.
// You can construct a concrete instance of `DatabaseUserScopeArrayInput` via:
//
//	DatabaseUserScopeArray{ DatabaseUserScopeArgs{...} }
type DatabaseUserScopeArrayInput interface {
	pulumi.Input

	ToDatabaseUserScopeArrayOutput() DatabaseUserScopeArrayOutput
	ToDatabaseUserScopeArrayOutputWithContext(context.Context) DatabaseUserScopeArrayOutput
}

type DatabaseUserScopeArray []DatabaseUserScopeInput

func (DatabaseUserScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserScope)(nil)).Elem()
}

func (i DatabaseUserScopeArray) ToDatabaseUserScopeArrayOutput() DatabaseUserScopeArrayOutput {
	return i.ToDatabaseUserScopeArrayOutputWithContext(context.Background())
}

func (i DatabaseUserScopeArray) ToDatabaseUserScopeArrayOutputWithContext(ctx context.Context) DatabaseUserScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserScopeArrayOutput)
}

type DatabaseUserScopeOutput struct{ *pulumi.OutputState }

func (DatabaseUserScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserScope)(nil)).Elem()
}

func (o DatabaseUserScopeOutput) ToDatabaseUserScopeOutput() DatabaseUserScopeOutput {
	return o
}

func (o DatabaseUserScopeOutput) ToDatabaseUserScopeOutputWithContext(ctx context.Context) DatabaseUserScopeOutput {
	return o
}

// Name of the cluster or Atlas Data Lake that the user has access to.
func (o DatabaseUserScopeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserScope) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
func (o DatabaseUserScopeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserScope) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatabaseUserScopeArrayOutput struct{ *pulumi.OutputState }

func (DatabaseUserScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserScope)(nil)).Elem()
}

func (o DatabaseUserScopeArrayOutput) ToDatabaseUserScopeArrayOutput() DatabaseUserScopeArrayOutput {
	return o
}

func (o DatabaseUserScopeArrayOutput) ToDatabaseUserScopeArrayOutputWithContext(ctx context.Context) DatabaseUserScopeArrayOutput {
	return o
}

func (o DatabaseUserScopeArrayOutput) Index(i pulumi.IntInput) DatabaseUserScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseUserScope {
		return vs[0].([]DatabaseUserScope)[vs[1].(int)]
	}).(DatabaseUserScopeOutput)
}

type EncryptionAtRestAwsKmsConfig struct {
	AccessKeyId *string `pulumi:"accessKeyId"`
	// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
	CustomerMasterKeyId *string `pulumi:"customerMasterKeyId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project, To disable Encryption at Rest, pass only this parameter with a value of false, When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled *bool `pulumi:"enabled"`
	// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
	Region *string `pulumi:"region"`
	// ID of an AWS IAM role authorized to manage an AWS customer master key. To find the ID for an existing IAM role check the `roleId` attribute of the `CloudProviderAccess` resource.
	RoleId          *string `pulumi:"roleId"`
	SecretAccessKey *string `pulumi:"secretAccessKey"`
}

// EncryptionAtRestAwsKmsConfigInput is an input type that accepts EncryptionAtRestAwsKmsConfigArgs and EncryptionAtRestAwsKmsConfigOutput values.
// You can construct a concrete instance of `EncryptionAtRestAwsKmsConfigInput` via:
//
//	EncryptionAtRestAwsKmsConfigArgs{...}
type EncryptionAtRestAwsKmsConfigInput interface {
	pulumi.Input

	ToEncryptionAtRestAwsKmsConfigOutput() EncryptionAtRestAwsKmsConfigOutput
	ToEncryptionAtRestAwsKmsConfigOutputWithContext(context.Context) EncryptionAtRestAwsKmsConfigOutput
}

type EncryptionAtRestAwsKmsConfigArgs struct {
	AccessKeyId pulumi.StringPtrInput `pulumi:"accessKeyId"`
	// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
	CustomerMasterKeyId pulumi.StringPtrInput `pulumi:"customerMasterKeyId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project, To disable Encryption at Rest, pass only this parameter with a value of false, When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
	Region pulumi.StringPtrInput `pulumi:"region"`
	// ID of an AWS IAM role authorized to manage an AWS customer master key. To find the ID for an existing IAM role check the `roleId` attribute of the `CloudProviderAccess` resource.
	RoleId          pulumi.StringPtrInput `pulumi:"roleId"`
	SecretAccessKey pulumi.StringPtrInput `pulumi:"secretAccessKey"`
}

func (EncryptionAtRestAwsKmsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAwsKmsConfig)(nil)).Elem()
}

func (i EncryptionAtRestAwsKmsConfigArgs) ToEncryptionAtRestAwsKmsConfigOutput() EncryptionAtRestAwsKmsConfigOutput {
	return i.ToEncryptionAtRestAwsKmsConfigOutputWithContext(context.Background())
}

func (i EncryptionAtRestAwsKmsConfigArgs) ToEncryptionAtRestAwsKmsConfigOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAwsKmsConfigOutput)
}

func (i EncryptionAtRestAwsKmsConfigArgs) ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput {
	return i.ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(context.Background())
}

func (i EncryptionAtRestAwsKmsConfigArgs) ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAwsKmsConfigOutput).ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx)
}

// EncryptionAtRestAwsKmsConfigPtrInput is an input type that accepts EncryptionAtRestAwsKmsConfigArgs, EncryptionAtRestAwsKmsConfigPtr and EncryptionAtRestAwsKmsConfigPtrOutput values.
// You can construct a concrete instance of `EncryptionAtRestAwsKmsConfigPtrInput` via:
//
//	        EncryptionAtRestAwsKmsConfigArgs{...}
//
//	or:
//
//	        nil
type EncryptionAtRestAwsKmsConfigPtrInput interface {
	pulumi.Input

	ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput
	ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(context.Context) EncryptionAtRestAwsKmsConfigPtrOutput
}

type encryptionAtRestAwsKmsConfigPtrType EncryptionAtRestAwsKmsConfigArgs

func EncryptionAtRestAwsKmsConfigPtr(v *EncryptionAtRestAwsKmsConfigArgs) EncryptionAtRestAwsKmsConfigPtrInput {
	return (*encryptionAtRestAwsKmsConfigPtrType)(v)
}

func (*encryptionAtRestAwsKmsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAwsKmsConfig)(nil)).Elem()
}

func (i *encryptionAtRestAwsKmsConfigPtrType) ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput {
	return i.ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(context.Background())
}

func (i *encryptionAtRestAwsKmsConfigPtrType) ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAwsKmsConfigPtrOutput)
}

type EncryptionAtRestAwsKmsConfigOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAwsKmsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAwsKmsConfig)(nil)).Elem()
}

func (o EncryptionAtRestAwsKmsConfigOutput) ToEncryptionAtRestAwsKmsConfigOutput() EncryptionAtRestAwsKmsConfigOutput {
	return o
}

func (o EncryptionAtRestAwsKmsConfigOutput) ToEncryptionAtRestAwsKmsConfigOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigOutput {
	return o
}

func (o EncryptionAtRestAwsKmsConfigOutput) ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput {
	return o.ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(context.Background())
}

func (o EncryptionAtRestAwsKmsConfigOutput) ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionAtRestAwsKmsConfig) *EncryptionAtRestAwsKmsConfig {
		return &v
	}).(EncryptionAtRestAwsKmsConfigPtrOutput)
}

func (o EncryptionAtRestAwsKmsConfigOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.AccessKeyId }).(pulumi.StringPtrOutput)
}

// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
func (o EncryptionAtRestAwsKmsConfigOutput) CustomerMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.CustomerMasterKeyId }).(pulumi.StringPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project, To disable Encryption at Rest, pass only this parameter with a value of false, When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAwsKmsConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
func (o EncryptionAtRestAwsKmsConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// ID of an AWS IAM role authorized to manage an AWS customer master key. To find the ID for an existing IAM role check the `roleId` attribute of the `CloudProviderAccess` resource.
func (o EncryptionAtRestAwsKmsConfigOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.RoleId }).(pulumi.StringPtrOutput)
}

func (o EncryptionAtRestAwsKmsConfigOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

type EncryptionAtRestAwsKmsConfigPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAwsKmsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAwsKmsConfig)(nil)).Elem()
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput {
	return o
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigPtrOutput {
	return o
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) Elem() EncryptionAtRestAwsKmsConfigOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) EncryptionAtRestAwsKmsConfig {
		if v != nil {
			return *v
		}
		var ret EncryptionAtRestAwsKmsConfig
		return ret
	}).(EncryptionAtRestAwsKmsConfigOutput)
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
func (o EncryptionAtRestAwsKmsConfigPtrOutput) CustomerMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomerMasterKeyId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project, To disable Encryption at Rest, pass only this parameter with a value of false, When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAwsKmsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
func (o EncryptionAtRestAwsKmsConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// ID of an AWS IAM role authorized to manage an AWS customer master key. To find the ID for an existing IAM role check the `roleId` attribute of the `CloudProviderAccess` resource.
func (o EncryptionAtRestAwsKmsConfigPtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoleId
	}).(pulumi.StringPtrOutput)
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

type EncryptionAtRestAzureKeyVaultConfig struct {
	// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
	AzureEnvironment *string `pulumi:"azureEnvironment"`
	// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
	ClientId *string `pulumi:"clientId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled bool `pulumi:"enabled"`
	// The unique identifier of a key in an Azure Key Vault.
	KeyIdentifier *string `pulumi:"keyIdentifier"`
	// The name of an Azure Key Vault containing your key.
	KeyVaultName *string `pulumi:"keyVaultName"`
	// The name of the Azure Resource group that contains an Azure Key Vault.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
	Secret *string `pulumi:"secret"`
	// The unique identifier associated with an Azure subscription.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// The unique identifier for an Azure AD tenant within an Azure subscription.
	TenantId *string `pulumi:"tenantId"`
}

// EncryptionAtRestAzureKeyVaultConfigInput is an input type that accepts EncryptionAtRestAzureKeyVaultConfigArgs and EncryptionAtRestAzureKeyVaultConfigOutput values.
// You can construct a concrete instance of `EncryptionAtRestAzureKeyVaultConfigInput` via:
//
//	EncryptionAtRestAzureKeyVaultConfigArgs{...}
type EncryptionAtRestAzureKeyVaultConfigInput interface {
	pulumi.Input

	ToEncryptionAtRestAzureKeyVaultConfigOutput() EncryptionAtRestAzureKeyVaultConfigOutput
	ToEncryptionAtRestAzureKeyVaultConfigOutputWithContext(context.Context) EncryptionAtRestAzureKeyVaultConfigOutput
}

type EncryptionAtRestAzureKeyVaultConfigArgs struct {
	// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
	AzureEnvironment pulumi.StringPtrInput `pulumi:"azureEnvironment"`
	// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The unique identifier of a key in an Azure Key Vault.
	KeyIdentifier pulumi.StringPtrInput `pulumi:"keyIdentifier"`
	// The name of an Azure Key Vault containing your key.
	KeyVaultName pulumi.StringPtrInput `pulumi:"keyVaultName"`
	// The name of the Azure Resource group that contains an Azure Key Vault.
	ResourceGroupName pulumi.StringPtrInput `pulumi:"resourceGroupName"`
	// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
	// The unique identifier associated with an Azure subscription.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// The unique identifier for an Azure AD tenant within an Azure subscription.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (EncryptionAtRestAzureKeyVaultConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAzureKeyVaultConfig)(nil)).Elem()
}

func (i EncryptionAtRestAzureKeyVaultConfigArgs) ToEncryptionAtRestAzureKeyVaultConfigOutput() EncryptionAtRestAzureKeyVaultConfigOutput {
	return i.ToEncryptionAtRestAzureKeyVaultConfigOutputWithContext(context.Background())
}

func (i EncryptionAtRestAzureKeyVaultConfigArgs) ToEncryptionAtRestAzureKeyVaultConfigOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAzureKeyVaultConfigOutput)
}

func (i EncryptionAtRestAzureKeyVaultConfigArgs) ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return i.ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(context.Background())
}

func (i EncryptionAtRestAzureKeyVaultConfigArgs) ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAzureKeyVaultConfigOutput).ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx)
}

// EncryptionAtRestAzureKeyVaultConfigPtrInput is an input type that accepts EncryptionAtRestAzureKeyVaultConfigArgs, EncryptionAtRestAzureKeyVaultConfigPtr and EncryptionAtRestAzureKeyVaultConfigPtrOutput values.
// You can construct a concrete instance of `EncryptionAtRestAzureKeyVaultConfigPtrInput` via:
//
//	        EncryptionAtRestAzureKeyVaultConfigArgs{...}
//
//	or:
//
//	        nil
type EncryptionAtRestAzureKeyVaultConfigPtrInput interface {
	pulumi.Input

	ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput
	ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput
}

type encryptionAtRestAzureKeyVaultConfigPtrType EncryptionAtRestAzureKeyVaultConfigArgs

func EncryptionAtRestAzureKeyVaultConfigPtr(v *EncryptionAtRestAzureKeyVaultConfigArgs) EncryptionAtRestAzureKeyVaultConfigPtrInput {
	return (*encryptionAtRestAzureKeyVaultConfigPtrType)(v)
}

func (*encryptionAtRestAzureKeyVaultConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAzureKeyVaultConfig)(nil)).Elem()
}

func (i *encryptionAtRestAzureKeyVaultConfigPtrType) ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return i.ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(context.Background())
}

func (i *encryptionAtRestAzureKeyVaultConfigPtrType) ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAzureKeyVaultConfigPtrOutput)
}

type EncryptionAtRestAzureKeyVaultConfigOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAzureKeyVaultConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAzureKeyVaultConfig)(nil)).Elem()
}

func (o EncryptionAtRestAzureKeyVaultConfigOutput) ToEncryptionAtRestAzureKeyVaultConfigOutput() EncryptionAtRestAzureKeyVaultConfigOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultConfigOutput) ToEncryptionAtRestAzureKeyVaultConfigOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultConfigOutput) ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return o.ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(context.Background())
}

func (o EncryptionAtRestAzureKeyVaultConfigOutput) ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionAtRestAzureKeyVaultConfig) *EncryptionAtRestAzureKeyVaultConfig {
		return &v
	}).(EncryptionAtRestAzureKeyVaultConfigPtrOutput)
}

// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
func (o EncryptionAtRestAzureKeyVaultConfigOutput) AzureEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.AzureEnvironment }).(pulumi.StringPtrOutput)
}

// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The unique identifier of a key in an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

// The name of an Azure Key Vault containing your key.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) KeyVaultName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.KeyVaultName }).(pulumi.StringPtrOutput)
}

// The name of the Azure Resource group that contains an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.ResourceGroupName }).(pulumi.StringPtrOutput)
}

// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// The unique identifier associated with an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// The unique identifier for an Azure AD tenant within an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type EncryptionAtRestAzureKeyVaultConfigPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAzureKeyVaultConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAzureKeyVaultConfig)(nil)).Elem()
}

func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) Elem() EncryptionAtRestAzureKeyVaultConfigOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) EncryptionAtRestAzureKeyVaultConfig {
		if v != nil {
			return *v
		}
		var ret EncryptionAtRestAzureKeyVaultConfig
		return ret
	}).(EncryptionAtRestAzureKeyVaultConfigOutput)
}

// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) AzureEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.AzureEnvironment
	}).(pulumi.StringPtrOutput)
}

// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The unique identifier of a key in an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The name of an Azure Key Vault containing your key.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) KeyVaultName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultName
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure Resource group that contains an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// The unique identifier associated with an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The unique identifier for an Azure AD tenant within an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type EncryptionAtRestGoogleCloudKmsConfig struct {
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled *bool `pulumi:"enabled"`
	// The Key Version Resource ID from your GCP account.
	KeyVersionResourceId *string `pulumi:"keyVersionResourceId"`
	// String-formatted JSON object containing GCP KMS credentials from your GCP account.
	ServiceAccountKey *string `pulumi:"serviceAccountKey"`
}

// EncryptionAtRestGoogleCloudKmsConfigInput is an input type that accepts EncryptionAtRestGoogleCloudKmsConfigArgs and EncryptionAtRestGoogleCloudKmsConfigOutput values.
// You can construct a concrete instance of `EncryptionAtRestGoogleCloudKmsConfigInput` via:
//
//	EncryptionAtRestGoogleCloudKmsConfigArgs{...}
type EncryptionAtRestGoogleCloudKmsConfigInput interface {
	pulumi.Input

	ToEncryptionAtRestGoogleCloudKmsConfigOutput() EncryptionAtRestGoogleCloudKmsConfigOutput
	ToEncryptionAtRestGoogleCloudKmsConfigOutputWithContext(context.Context) EncryptionAtRestGoogleCloudKmsConfigOutput
}

type EncryptionAtRestGoogleCloudKmsConfigArgs struct {
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The Key Version Resource ID from your GCP account.
	KeyVersionResourceId pulumi.StringPtrInput `pulumi:"keyVersionResourceId"`
	// String-formatted JSON object containing GCP KMS credentials from your GCP account.
	ServiceAccountKey pulumi.StringPtrInput `pulumi:"serviceAccountKey"`
}

func (EncryptionAtRestGoogleCloudKmsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestGoogleCloudKmsConfig)(nil)).Elem()
}

func (i EncryptionAtRestGoogleCloudKmsConfigArgs) ToEncryptionAtRestGoogleCloudKmsConfigOutput() EncryptionAtRestGoogleCloudKmsConfigOutput {
	return i.ToEncryptionAtRestGoogleCloudKmsConfigOutputWithContext(context.Background())
}

func (i EncryptionAtRestGoogleCloudKmsConfigArgs) ToEncryptionAtRestGoogleCloudKmsConfigOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestGoogleCloudKmsConfigOutput)
}

func (i EncryptionAtRestGoogleCloudKmsConfigArgs) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return i.ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(context.Background())
}

func (i EncryptionAtRestGoogleCloudKmsConfigArgs) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestGoogleCloudKmsConfigOutput).ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx)
}

// EncryptionAtRestGoogleCloudKmsConfigPtrInput is an input type that accepts EncryptionAtRestGoogleCloudKmsConfigArgs, EncryptionAtRestGoogleCloudKmsConfigPtr and EncryptionAtRestGoogleCloudKmsConfigPtrOutput values.
// You can construct a concrete instance of `EncryptionAtRestGoogleCloudKmsConfigPtrInput` via:
//
//	        EncryptionAtRestGoogleCloudKmsConfigArgs{...}
//
//	or:
//
//	        nil
type EncryptionAtRestGoogleCloudKmsConfigPtrInput interface {
	pulumi.Input

	ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput
	ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput
}

type encryptionAtRestGoogleCloudKmsConfigPtrType EncryptionAtRestGoogleCloudKmsConfigArgs

func EncryptionAtRestGoogleCloudKmsConfigPtr(v *EncryptionAtRestGoogleCloudKmsConfigArgs) EncryptionAtRestGoogleCloudKmsConfigPtrInput {
	return (*encryptionAtRestGoogleCloudKmsConfigPtrType)(v)
}

func (*encryptionAtRestGoogleCloudKmsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestGoogleCloudKmsConfig)(nil)).Elem()
}

func (i *encryptionAtRestGoogleCloudKmsConfigPtrType) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return i.ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(context.Background())
}

func (i *encryptionAtRestGoogleCloudKmsConfigPtrType) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestGoogleCloudKmsConfigPtrOutput)
}

type EncryptionAtRestGoogleCloudKmsConfigOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestGoogleCloudKmsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestGoogleCloudKmsConfig)(nil)).Elem()
}

func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ToEncryptionAtRestGoogleCloudKmsConfigOutput() EncryptionAtRestGoogleCloudKmsConfigOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ToEncryptionAtRestGoogleCloudKmsConfigOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return o.ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(context.Background())
}

func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionAtRestGoogleCloudKmsConfig) *EncryptionAtRestGoogleCloudKmsConfig {
		return &v
	}).(EncryptionAtRestGoogleCloudKmsConfigPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestGoogleCloudKmsConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestGoogleCloudKmsConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The Key Version Resource ID from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsConfigOutput) KeyVersionResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestGoogleCloudKmsConfig) *string { return v.KeyVersionResourceId }).(pulumi.StringPtrOutput)
}

// String-formatted JSON object containing GCP KMS credentials from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ServiceAccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestGoogleCloudKmsConfig) *string { return v.ServiceAccountKey }).(pulumi.StringPtrOutput)
}

type EncryptionAtRestGoogleCloudKmsConfigPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestGoogleCloudKmsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestGoogleCloudKmsConfig)(nil)).Elem()
}

func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) Elem() EncryptionAtRestGoogleCloudKmsConfigOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKmsConfig) EncryptionAtRestGoogleCloudKmsConfig {
		if v != nil {
			return *v
		}
		var ret EncryptionAtRestGoogleCloudKmsConfig
		return ret
	}).(EncryptionAtRestGoogleCloudKmsConfigOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKmsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Key Version Resource ID from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) KeyVersionResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersionResourceId
	}).(pulumi.StringPtrOutput)
}

// String-formatted JSON object containing GCP KMS credentials from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) ServiceAccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountKey
	}).(pulumi.StringPtrOutput)
}

type EventTriggerEventProcessors struct {
	AwsEventbridge *EventTriggerEventProcessorsAwsEventbridge `pulumi:"awsEventbridge"`
}

// EventTriggerEventProcessorsInput is an input type that accepts EventTriggerEventProcessorsArgs and EventTriggerEventProcessorsOutput values.
// You can construct a concrete instance of `EventTriggerEventProcessorsInput` via:
//
//	EventTriggerEventProcessorsArgs{...}
type EventTriggerEventProcessorsInput interface {
	pulumi.Input

	ToEventTriggerEventProcessorsOutput() EventTriggerEventProcessorsOutput
	ToEventTriggerEventProcessorsOutputWithContext(context.Context) EventTriggerEventProcessorsOutput
}

type EventTriggerEventProcessorsArgs struct {
	AwsEventbridge EventTriggerEventProcessorsAwsEventbridgePtrInput `pulumi:"awsEventbridge"`
}

func (EventTriggerEventProcessorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTriggerEventProcessors)(nil)).Elem()
}

func (i EventTriggerEventProcessorsArgs) ToEventTriggerEventProcessorsOutput() EventTriggerEventProcessorsOutput {
	return i.ToEventTriggerEventProcessorsOutputWithContext(context.Background())
}

func (i EventTriggerEventProcessorsArgs) ToEventTriggerEventProcessorsOutputWithContext(ctx context.Context) EventTriggerEventProcessorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsOutput)
}

func (i EventTriggerEventProcessorsArgs) ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput {
	return i.ToEventTriggerEventProcessorsPtrOutputWithContext(context.Background())
}

func (i EventTriggerEventProcessorsArgs) ToEventTriggerEventProcessorsPtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsOutput).ToEventTriggerEventProcessorsPtrOutputWithContext(ctx)
}

// EventTriggerEventProcessorsPtrInput is an input type that accepts EventTriggerEventProcessorsArgs, EventTriggerEventProcessorsPtr and EventTriggerEventProcessorsPtrOutput values.
// You can construct a concrete instance of `EventTriggerEventProcessorsPtrInput` via:
//
//	        EventTriggerEventProcessorsArgs{...}
//
//	or:
//
//	        nil
type EventTriggerEventProcessorsPtrInput interface {
	pulumi.Input

	ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput
	ToEventTriggerEventProcessorsPtrOutputWithContext(context.Context) EventTriggerEventProcessorsPtrOutput
}

type eventTriggerEventProcessorsPtrType EventTriggerEventProcessorsArgs

func EventTriggerEventProcessorsPtr(v *EventTriggerEventProcessorsArgs) EventTriggerEventProcessorsPtrInput {
	return (*eventTriggerEventProcessorsPtrType)(v)
}

func (*eventTriggerEventProcessorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTriggerEventProcessors)(nil)).Elem()
}

func (i *eventTriggerEventProcessorsPtrType) ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput {
	return i.ToEventTriggerEventProcessorsPtrOutputWithContext(context.Background())
}

func (i *eventTriggerEventProcessorsPtrType) ToEventTriggerEventProcessorsPtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsPtrOutput)
}

type EventTriggerEventProcessorsOutput struct{ *pulumi.OutputState }

func (EventTriggerEventProcessorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTriggerEventProcessors)(nil)).Elem()
}

func (o EventTriggerEventProcessorsOutput) ToEventTriggerEventProcessorsOutput() EventTriggerEventProcessorsOutput {
	return o
}

func (o EventTriggerEventProcessorsOutput) ToEventTriggerEventProcessorsOutputWithContext(ctx context.Context) EventTriggerEventProcessorsOutput {
	return o
}

func (o EventTriggerEventProcessorsOutput) ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput {
	return o.ToEventTriggerEventProcessorsPtrOutputWithContext(context.Background())
}

func (o EventTriggerEventProcessorsOutput) ToEventTriggerEventProcessorsPtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTriggerEventProcessors) *EventTriggerEventProcessors {
		return &v
	}).(EventTriggerEventProcessorsPtrOutput)
}

func (o EventTriggerEventProcessorsOutput) AwsEventbridge() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o.ApplyT(func(v EventTriggerEventProcessors) *EventTriggerEventProcessorsAwsEventbridge {
		return v.AwsEventbridge
	}).(EventTriggerEventProcessorsAwsEventbridgePtrOutput)
}

type EventTriggerEventProcessorsPtrOutput struct{ *pulumi.OutputState }

func (EventTriggerEventProcessorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTriggerEventProcessors)(nil)).Elem()
}

func (o EventTriggerEventProcessorsPtrOutput) ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput {
	return o
}

func (o EventTriggerEventProcessorsPtrOutput) ToEventTriggerEventProcessorsPtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsPtrOutput {
	return o
}

func (o EventTriggerEventProcessorsPtrOutput) Elem() EventTriggerEventProcessorsOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessors) EventTriggerEventProcessors {
		if v != nil {
			return *v
		}
		var ret EventTriggerEventProcessors
		return ret
	}).(EventTriggerEventProcessorsOutput)
}

func (o EventTriggerEventProcessorsPtrOutput) AwsEventbridge() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessors) *EventTriggerEventProcessorsAwsEventbridge {
		if v == nil {
			return nil
		}
		return v.AwsEventbridge
	}).(EventTriggerEventProcessorsAwsEventbridgePtrOutput)
}

type EventTriggerEventProcessorsAwsEventbridge struct {
	ConfigAccountId *string `pulumi:"configAccountId"`
	ConfigRegion    *string `pulumi:"configRegion"`
}

// EventTriggerEventProcessorsAwsEventbridgeInput is an input type that accepts EventTriggerEventProcessorsAwsEventbridgeArgs and EventTriggerEventProcessorsAwsEventbridgeOutput values.
// You can construct a concrete instance of `EventTriggerEventProcessorsAwsEventbridgeInput` via:
//
//	EventTriggerEventProcessorsAwsEventbridgeArgs{...}
type EventTriggerEventProcessorsAwsEventbridgeInput interface {
	pulumi.Input

	ToEventTriggerEventProcessorsAwsEventbridgeOutput() EventTriggerEventProcessorsAwsEventbridgeOutput
	ToEventTriggerEventProcessorsAwsEventbridgeOutputWithContext(context.Context) EventTriggerEventProcessorsAwsEventbridgeOutput
}

type EventTriggerEventProcessorsAwsEventbridgeArgs struct {
	ConfigAccountId pulumi.StringPtrInput `pulumi:"configAccountId"`
	ConfigRegion    pulumi.StringPtrInput `pulumi:"configRegion"`
}

func (EventTriggerEventProcessorsAwsEventbridgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTriggerEventProcessorsAwsEventbridge)(nil)).Elem()
}

func (i EventTriggerEventProcessorsAwsEventbridgeArgs) ToEventTriggerEventProcessorsAwsEventbridgeOutput() EventTriggerEventProcessorsAwsEventbridgeOutput {
	return i.ToEventTriggerEventProcessorsAwsEventbridgeOutputWithContext(context.Background())
}

func (i EventTriggerEventProcessorsAwsEventbridgeArgs) ToEventTriggerEventProcessorsAwsEventbridgeOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsAwsEventbridgeOutput)
}

func (i EventTriggerEventProcessorsAwsEventbridgeArgs) ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return i.ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(context.Background())
}

func (i EventTriggerEventProcessorsAwsEventbridgeArgs) ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsAwsEventbridgeOutput).ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx)
}

// EventTriggerEventProcessorsAwsEventbridgePtrInput is an input type that accepts EventTriggerEventProcessorsAwsEventbridgeArgs, EventTriggerEventProcessorsAwsEventbridgePtr and EventTriggerEventProcessorsAwsEventbridgePtrOutput values.
// You can construct a concrete instance of `EventTriggerEventProcessorsAwsEventbridgePtrInput` via:
//
//	        EventTriggerEventProcessorsAwsEventbridgeArgs{...}
//
//	or:
//
//	        nil
type EventTriggerEventProcessorsAwsEventbridgePtrInput interface {
	pulumi.Input

	ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput
	ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput
}

type eventTriggerEventProcessorsAwsEventbridgePtrType EventTriggerEventProcessorsAwsEventbridgeArgs

func EventTriggerEventProcessorsAwsEventbridgePtr(v *EventTriggerEventProcessorsAwsEventbridgeArgs) EventTriggerEventProcessorsAwsEventbridgePtrInput {
	return (*eventTriggerEventProcessorsAwsEventbridgePtrType)(v)
}

func (*eventTriggerEventProcessorsAwsEventbridgePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTriggerEventProcessorsAwsEventbridge)(nil)).Elem()
}

func (i *eventTriggerEventProcessorsAwsEventbridgePtrType) ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return i.ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(context.Background())
}

func (i *eventTriggerEventProcessorsAwsEventbridgePtrType) ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsAwsEventbridgePtrOutput)
}

type EventTriggerEventProcessorsAwsEventbridgeOutput struct{ *pulumi.OutputState }

func (EventTriggerEventProcessorsAwsEventbridgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTriggerEventProcessorsAwsEventbridge)(nil)).Elem()
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ToEventTriggerEventProcessorsAwsEventbridgeOutput() EventTriggerEventProcessorsAwsEventbridgeOutput {
	return o
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ToEventTriggerEventProcessorsAwsEventbridgeOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgeOutput {
	return o
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o.ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(context.Background())
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTriggerEventProcessorsAwsEventbridge) *EventTriggerEventProcessorsAwsEventbridge {
		return &v
	}).(EventTriggerEventProcessorsAwsEventbridgePtrOutput)
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ConfigAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTriggerEventProcessorsAwsEventbridge) *string { return v.ConfigAccountId }).(pulumi.StringPtrOutput)
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ConfigRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTriggerEventProcessorsAwsEventbridge) *string { return v.ConfigRegion }).(pulumi.StringPtrOutput)
}

type EventTriggerEventProcessorsAwsEventbridgePtrOutput struct{ *pulumi.OutputState }

func (EventTriggerEventProcessorsAwsEventbridgePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTriggerEventProcessorsAwsEventbridge)(nil)).Elem()
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) Elem() EventTriggerEventProcessorsAwsEventbridgeOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessorsAwsEventbridge) EventTriggerEventProcessorsAwsEventbridge {
		if v != nil {
			return *v
		}
		var ret EventTriggerEventProcessorsAwsEventbridge
		return ret
	}).(EventTriggerEventProcessorsAwsEventbridgeOutput)
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) ConfigAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessorsAwsEventbridge) *string {
		if v == nil {
			return nil
		}
		return v.ConfigAccountId
	}).(pulumi.StringPtrOutput)
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) ConfigRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessorsAwsEventbridge) *string {
		if v == nil {
			return nil
		}
		return v.ConfigRegion
	}).(pulumi.StringPtrOutput)
}

type FederatedSettingsOrgRoleMappingRoleAssignment struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId *string `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId *string `pulumi:"orgId"`
	// Specifies the Roles that are attached to the Role Mapping. Available role IDs can be found on [the User Roles
	// Reference](https://www.mongodb.com/docs/atlas/reference/user-roles/).
	Roles []string `pulumi:"roles"`
}

// FederatedSettingsOrgRoleMappingRoleAssignmentInput is an input type that accepts FederatedSettingsOrgRoleMappingRoleAssignmentArgs and FederatedSettingsOrgRoleMappingRoleAssignmentOutput values.
// You can construct a concrete instance of `FederatedSettingsOrgRoleMappingRoleAssignmentInput` via:
//
//	FederatedSettingsOrgRoleMappingRoleAssignmentArgs{...}
type FederatedSettingsOrgRoleMappingRoleAssignmentInput interface {
	pulumi.Input

	ToFederatedSettingsOrgRoleMappingRoleAssignmentOutput() FederatedSettingsOrgRoleMappingRoleAssignmentOutput
	ToFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(context.Context) FederatedSettingsOrgRoleMappingRoleAssignmentOutput
}

type FederatedSettingsOrgRoleMappingRoleAssignmentArgs struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Specifies the Roles that are attached to the Role Mapping. Available role IDs can be found on [the User Roles
	// Reference](https://www.mongodb.com/docs/atlas/reference/user-roles/).
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (FederatedSettingsOrgRoleMappingRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i FederatedSettingsOrgRoleMappingRoleAssignmentArgs) ToFederatedSettingsOrgRoleMappingRoleAssignmentOutput() FederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return i.ToFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(context.Background())
}

func (i FederatedSettingsOrgRoleMappingRoleAssignmentArgs) ToFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) FederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedSettingsOrgRoleMappingRoleAssignmentOutput)
}

// FederatedSettingsOrgRoleMappingRoleAssignmentArrayInput is an input type that accepts FederatedSettingsOrgRoleMappingRoleAssignmentArray and FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `FederatedSettingsOrgRoleMappingRoleAssignmentArrayInput` via:
//
//	FederatedSettingsOrgRoleMappingRoleAssignmentArray{ FederatedSettingsOrgRoleMappingRoleAssignmentArgs{...} }
type FederatedSettingsOrgRoleMappingRoleAssignmentArrayInput interface {
	pulumi.Input

	ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput() FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput
	ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Context) FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput
}

type FederatedSettingsOrgRoleMappingRoleAssignmentArray []FederatedSettingsOrgRoleMappingRoleAssignmentInput

func (FederatedSettingsOrgRoleMappingRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i FederatedSettingsOrgRoleMappingRoleAssignmentArray) ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput() FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return i.ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i FederatedSettingsOrgRoleMappingRoleAssignmentArray) ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput)
}

type FederatedSettingsOrgRoleMappingRoleAssignmentOutput struct{ *pulumi.OutputState }

func (FederatedSettingsOrgRoleMappingRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o FederatedSettingsOrgRoleMappingRoleAssignmentOutput) ToFederatedSettingsOrgRoleMappingRoleAssignmentOutput() FederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return o
}

func (o FederatedSettingsOrgRoleMappingRoleAssignmentOutput) ToFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) FederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return o
}

// Unique identifier of the project to which you want the role mapping to apply.
func (o FederatedSettingsOrgRoleMappingRoleAssignmentOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedSettingsOrgRoleMappingRoleAssignment) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o FederatedSettingsOrgRoleMappingRoleAssignmentOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedSettingsOrgRoleMappingRoleAssignment) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Specifies the Roles that are attached to the Role Mapping. Available role IDs can be found on [the User Roles
// Reference](https://www.mongodb.com/docs/atlas/reference/user-roles/).
func (o FederatedSettingsOrgRoleMappingRoleAssignmentOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FederatedSettingsOrgRoleMappingRoleAssignment) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput() FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) Index(i pulumi.IntInput) FederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FederatedSettingsOrgRoleMappingRoleAssignment {
		return vs[0].([]FederatedSettingsOrgRoleMappingRoleAssignment)[vs[1].(int)]
	}).(FederatedSettingsOrgRoleMappingRoleAssignmentOutput)
}

type GlobalClusterConfigCustomZoneMapping struct {
	// The ISO location code to which you want to map a zone in your Global Cluster. You can find a list of all supported location codes [here](https://cloud.mongodb.com/static/atlas/country_iso_codes.txt).
	Location *string `pulumi:"location"`
	// The name of the zone in your Global Cluster that you want to map to location.
	Zone *string `pulumi:"zone"`
}

// GlobalClusterConfigCustomZoneMappingInput is an input type that accepts GlobalClusterConfigCustomZoneMappingArgs and GlobalClusterConfigCustomZoneMappingOutput values.
// You can construct a concrete instance of `GlobalClusterConfigCustomZoneMappingInput` via:
//
//	GlobalClusterConfigCustomZoneMappingArgs{...}
type GlobalClusterConfigCustomZoneMappingInput interface {
	pulumi.Input

	ToGlobalClusterConfigCustomZoneMappingOutput() GlobalClusterConfigCustomZoneMappingOutput
	ToGlobalClusterConfigCustomZoneMappingOutputWithContext(context.Context) GlobalClusterConfigCustomZoneMappingOutput
}

type GlobalClusterConfigCustomZoneMappingArgs struct {
	// The ISO location code to which you want to map a zone in your Global Cluster. You can find a list of all supported location codes [here](https://cloud.mongodb.com/static/atlas/country_iso_codes.txt).
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the zone in your Global Cluster that you want to map to location.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (GlobalClusterConfigCustomZoneMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (i GlobalClusterConfigCustomZoneMappingArgs) ToGlobalClusterConfigCustomZoneMappingOutput() GlobalClusterConfigCustomZoneMappingOutput {
	return i.ToGlobalClusterConfigCustomZoneMappingOutputWithContext(context.Background())
}

func (i GlobalClusterConfigCustomZoneMappingArgs) ToGlobalClusterConfigCustomZoneMappingOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigCustomZoneMappingOutput)
}

// GlobalClusterConfigCustomZoneMappingArrayInput is an input type that accepts GlobalClusterConfigCustomZoneMappingArray and GlobalClusterConfigCustomZoneMappingArrayOutput values.
// You can construct a concrete instance of `GlobalClusterConfigCustomZoneMappingArrayInput` via:
//
//	GlobalClusterConfigCustomZoneMappingArray{ GlobalClusterConfigCustomZoneMappingArgs{...} }
type GlobalClusterConfigCustomZoneMappingArrayInput interface {
	pulumi.Input

	ToGlobalClusterConfigCustomZoneMappingArrayOutput() GlobalClusterConfigCustomZoneMappingArrayOutput
	ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(context.Context) GlobalClusterConfigCustomZoneMappingArrayOutput
}

type GlobalClusterConfigCustomZoneMappingArray []GlobalClusterConfigCustomZoneMappingInput

func (GlobalClusterConfigCustomZoneMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (i GlobalClusterConfigCustomZoneMappingArray) ToGlobalClusterConfigCustomZoneMappingArrayOutput() GlobalClusterConfigCustomZoneMappingArrayOutput {
	return i.ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(context.Background())
}

func (i GlobalClusterConfigCustomZoneMappingArray) ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigCustomZoneMappingArrayOutput)
}

type GlobalClusterConfigCustomZoneMappingOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigCustomZoneMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (o GlobalClusterConfigCustomZoneMappingOutput) ToGlobalClusterConfigCustomZoneMappingOutput() GlobalClusterConfigCustomZoneMappingOutput {
	return o
}

func (o GlobalClusterConfigCustomZoneMappingOutput) ToGlobalClusterConfigCustomZoneMappingOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingOutput {
	return o
}

// The ISO location code to which you want to map a zone in your Global Cluster. You can find a list of all supported location codes [here](https://cloud.mongodb.com/static/atlas/country_iso_codes.txt).
func (o GlobalClusterConfigCustomZoneMappingOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClusterConfigCustomZoneMapping) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the zone in your Global Cluster that you want to map to location.
func (o GlobalClusterConfigCustomZoneMappingOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClusterConfigCustomZoneMapping) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type GlobalClusterConfigCustomZoneMappingArrayOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigCustomZoneMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (o GlobalClusterConfigCustomZoneMappingArrayOutput) ToGlobalClusterConfigCustomZoneMappingArrayOutput() GlobalClusterConfigCustomZoneMappingArrayOutput {
	return o
}

func (o GlobalClusterConfigCustomZoneMappingArrayOutput) ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingArrayOutput {
	return o
}

func (o GlobalClusterConfigCustomZoneMappingArrayOutput) Index(i pulumi.IntInput) GlobalClusterConfigCustomZoneMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalClusterConfigCustomZoneMapping {
		return vs[0].([]GlobalClusterConfigCustomZoneMapping)[vs[1].(int)]
	}).(GlobalClusterConfigCustomZoneMappingOutput)
}

type GlobalClusterConfigManagedNamespace struct {
	// The name of the collection associated with the managed namespace.
	Collection string `pulumi:"collection"`
	// The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey string `pulumi:"customShardKey"`
	// The name of the database containing the collection.
	Db string `pulumi:"db"`
	// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
	IsCustomShardKeyHashed *bool `pulumi:"isCustomShardKeyHashed"`
	// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
	IsShardKeyUnique *bool `pulumi:"isShardKeyUnique"`
}

// GlobalClusterConfigManagedNamespaceInput is an input type that accepts GlobalClusterConfigManagedNamespaceArgs and GlobalClusterConfigManagedNamespaceOutput values.
// You can construct a concrete instance of `GlobalClusterConfigManagedNamespaceInput` via:
//
//	GlobalClusterConfigManagedNamespaceArgs{...}
type GlobalClusterConfigManagedNamespaceInput interface {
	pulumi.Input

	ToGlobalClusterConfigManagedNamespaceOutput() GlobalClusterConfigManagedNamespaceOutput
	ToGlobalClusterConfigManagedNamespaceOutputWithContext(context.Context) GlobalClusterConfigManagedNamespaceOutput
}

type GlobalClusterConfigManagedNamespaceArgs struct {
	// The name of the collection associated with the managed namespace.
	Collection pulumi.StringInput `pulumi:"collection"`
	// The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey pulumi.StringInput `pulumi:"customShardKey"`
	// The name of the database containing the collection.
	Db pulumi.StringInput `pulumi:"db"`
	// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
	IsCustomShardKeyHashed pulumi.BoolPtrInput `pulumi:"isCustomShardKeyHashed"`
	// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
	IsShardKeyUnique pulumi.BoolPtrInput `pulumi:"isShardKeyUnique"`
}

func (GlobalClusterConfigManagedNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GlobalClusterConfigManagedNamespaceArgs) ToGlobalClusterConfigManagedNamespaceOutput() GlobalClusterConfigManagedNamespaceOutput {
	return i.ToGlobalClusterConfigManagedNamespaceOutputWithContext(context.Background())
}

func (i GlobalClusterConfigManagedNamespaceArgs) ToGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigManagedNamespaceOutput)
}

// GlobalClusterConfigManagedNamespaceArrayInput is an input type that accepts GlobalClusterConfigManagedNamespaceArray and GlobalClusterConfigManagedNamespaceArrayOutput values.
// You can construct a concrete instance of `GlobalClusterConfigManagedNamespaceArrayInput` via:
//
//	GlobalClusterConfigManagedNamespaceArray{ GlobalClusterConfigManagedNamespaceArgs{...} }
type GlobalClusterConfigManagedNamespaceArrayInput interface {
	pulumi.Input

	ToGlobalClusterConfigManagedNamespaceArrayOutput() GlobalClusterConfigManagedNamespaceArrayOutput
	ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Context) GlobalClusterConfigManagedNamespaceArrayOutput
}

type GlobalClusterConfigManagedNamespaceArray []GlobalClusterConfigManagedNamespaceInput

func (GlobalClusterConfigManagedNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GlobalClusterConfigManagedNamespaceArray) ToGlobalClusterConfigManagedNamespaceArrayOutput() GlobalClusterConfigManagedNamespaceArrayOutput {
	return i.ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Background())
}

func (i GlobalClusterConfigManagedNamespaceArray) ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigManagedNamespaceArrayOutput)
}

type GlobalClusterConfigManagedNamespaceOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigManagedNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GlobalClusterConfigManagedNamespaceOutput) ToGlobalClusterConfigManagedNamespaceOutput() GlobalClusterConfigManagedNamespaceOutput {
	return o
}

func (o GlobalClusterConfigManagedNamespaceOutput) ToGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceOutput {
	return o
}

// The name of the collection associated with the managed namespace.
func (o GlobalClusterConfigManagedNamespaceOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) string { return v.Collection }).(pulumi.StringOutput)
}

// The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
func (o GlobalClusterConfigManagedNamespaceOutput) CustomShardKey() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) string { return v.CustomShardKey }).(pulumi.StringOutput)
}

// The name of the database containing the collection.
func (o GlobalClusterConfigManagedNamespaceOutput) Db() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) string { return v.Db }).(pulumi.StringOutput)
}

// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
func (o GlobalClusterConfigManagedNamespaceOutput) IsCustomShardKeyHashed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) *bool { return v.IsCustomShardKeyHashed }).(pulumi.BoolPtrOutput)
}

// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
func (o GlobalClusterConfigManagedNamespaceOutput) IsShardKeyUnique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) *bool { return v.IsShardKeyUnique }).(pulumi.BoolPtrOutput)
}

type GlobalClusterConfigManagedNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigManagedNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GlobalClusterConfigManagedNamespaceArrayOutput) ToGlobalClusterConfigManagedNamespaceArrayOutput() GlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GlobalClusterConfigManagedNamespaceArrayOutput) ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GlobalClusterConfigManagedNamespaceArrayOutput) Index(i pulumi.IntInput) GlobalClusterConfigManagedNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalClusterConfigManagedNamespace {
		return vs[0].([]GlobalClusterConfigManagedNamespace)[vs[1].(int)]
	}).(GlobalClusterConfigManagedNamespaceOutput)
}

type LdapConfigurationUserToDnMapping struct {
	LdapQuery    *string `pulumi:"ldapQuery"`
	Match        *string `pulumi:"match"`
	Substitution *string `pulumi:"substitution"`
}

// LdapConfigurationUserToDnMappingInput is an input type that accepts LdapConfigurationUserToDnMappingArgs and LdapConfigurationUserToDnMappingOutput values.
// You can construct a concrete instance of `LdapConfigurationUserToDnMappingInput` via:
//
//	LdapConfigurationUserToDnMappingArgs{...}
type LdapConfigurationUserToDnMappingInput interface {
	pulumi.Input

	ToLdapConfigurationUserToDnMappingOutput() LdapConfigurationUserToDnMappingOutput
	ToLdapConfigurationUserToDnMappingOutputWithContext(context.Context) LdapConfigurationUserToDnMappingOutput
}

type LdapConfigurationUserToDnMappingArgs struct {
	LdapQuery    pulumi.StringPtrInput `pulumi:"ldapQuery"`
	Match        pulumi.StringPtrInput `pulumi:"match"`
	Substitution pulumi.StringPtrInput `pulumi:"substitution"`
}

func (LdapConfigurationUserToDnMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (i LdapConfigurationUserToDnMappingArgs) ToLdapConfigurationUserToDnMappingOutput() LdapConfigurationUserToDnMappingOutput {
	return i.ToLdapConfigurationUserToDnMappingOutputWithContext(context.Background())
}

func (i LdapConfigurationUserToDnMappingArgs) ToLdapConfigurationUserToDnMappingOutputWithContext(ctx context.Context) LdapConfigurationUserToDnMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapConfigurationUserToDnMappingOutput)
}

// LdapConfigurationUserToDnMappingArrayInput is an input type that accepts LdapConfigurationUserToDnMappingArray and LdapConfigurationUserToDnMappingArrayOutput values.
// You can construct a concrete instance of `LdapConfigurationUserToDnMappingArrayInput` via:
//
//	LdapConfigurationUserToDnMappingArray{ LdapConfigurationUserToDnMappingArgs{...} }
type LdapConfigurationUserToDnMappingArrayInput interface {
	pulumi.Input

	ToLdapConfigurationUserToDnMappingArrayOutput() LdapConfigurationUserToDnMappingArrayOutput
	ToLdapConfigurationUserToDnMappingArrayOutputWithContext(context.Context) LdapConfigurationUserToDnMappingArrayOutput
}

type LdapConfigurationUserToDnMappingArray []LdapConfigurationUserToDnMappingInput

func (LdapConfigurationUserToDnMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (i LdapConfigurationUserToDnMappingArray) ToLdapConfigurationUserToDnMappingArrayOutput() LdapConfigurationUserToDnMappingArrayOutput {
	return i.ToLdapConfigurationUserToDnMappingArrayOutputWithContext(context.Background())
}

func (i LdapConfigurationUserToDnMappingArray) ToLdapConfigurationUserToDnMappingArrayOutputWithContext(ctx context.Context) LdapConfigurationUserToDnMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapConfigurationUserToDnMappingArrayOutput)
}

type LdapConfigurationUserToDnMappingOutput struct{ *pulumi.OutputState }

func (LdapConfigurationUserToDnMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (o LdapConfigurationUserToDnMappingOutput) ToLdapConfigurationUserToDnMappingOutput() LdapConfigurationUserToDnMappingOutput {
	return o
}

func (o LdapConfigurationUserToDnMappingOutput) ToLdapConfigurationUserToDnMappingOutputWithContext(ctx context.Context) LdapConfigurationUserToDnMappingOutput {
	return o
}

func (o LdapConfigurationUserToDnMappingOutput) LdapQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapConfigurationUserToDnMapping) *string { return v.LdapQuery }).(pulumi.StringPtrOutput)
}

func (o LdapConfigurationUserToDnMappingOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapConfigurationUserToDnMapping) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o LdapConfigurationUserToDnMappingOutput) Substitution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapConfigurationUserToDnMapping) *string { return v.Substitution }).(pulumi.StringPtrOutput)
}

type LdapConfigurationUserToDnMappingArrayOutput struct{ *pulumi.OutputState }

func (LdapConfigurationUserToDnMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (o LdapConfigurationUserToDnMappingArrayOutput) ToLdapConfigurationUserToDnMappingArrayOutput() LdapConfigurationUserToDnMappingArrayOutput {
	return o
}

func (o LdapConfigurationUserToDnMappingArrayOutput) ToLdapConfigurationUserToDnMappingArrayOutputWithContext(ctx context.Context) LdapConfigurationUserToDnMappingArrayOutput {
	return o
}

func (o LdapConfigurationUserToDnMappingArrayOutput) Index(i pulumi.IntInput) LdapConfigurationUserToDnMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LdapConfigurationUserToDnMapping {
		return vs[0].([]LdapConfigurationUserToDnMapping)[vs[1].(int)]
	}).(LdapConfigurationUserToDnMappingOutput)
}

type LdapVerifyLink struct {
	Href *string `pulumi:"href"`
	Rel  *string `pulumi:"rel"`
}

// LdapVerifyLinkInput is an input type that accepts LdapVerifyLinkArgs and LdapVerifyLinkOutput values.
// You can construct a concrete instance of `LdapVerifyLinkInput` via:
//
//	LdapVerifyLinkArgs{...}
type LdapVerifyLinkInput interface {
	pulumi.Input

	ToLdapVerifyLinkOutput() LdapVerifyLinkOutput
	ToLdapVerifyLinkOutputWithContext(context.Context) LdapVerifyLinkOutput
}

type LdapVerifyLinkArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
	Rel  pulumi.StringPtrInput `pulumi:"rel"`
}

func (LdapVerifyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapVerifyLink)(nil)).Elem()
}

func (i LdapVerifyLinkArgs) ToLdapVerifyLinkOutput() LdapVerifyLinkOutput {
	return i.ToLdapVerifyLinkOutputWithContext(context.Background())
}

func (i LdapVerifyLinkArgs) ToLdapVerifyLinkOutputWithContext(ctx context.Context) LdapVerifyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapVerifyLinkOutput)
}

// LdapVerifyLinkArrayInput is an input type that accepts LdapVerifyLinkArray and LdapVerifyLinkArrayOutput values.
// You can construct a concrete instance of `LdapVerifyLinkArrayInput` via:
//
//	LdapVerifyLinkArray{ LdapVerifyLinkArgs{...} }
type LdapVerifyLinkArrayInput interface {
	pulumi.Input

	ToLdapVerifyLinkArrayOutput() LdapVerifyLinkArrayOutput
	ToLdapVerifyLinkArrayOutputWithContext(context.Context) LdapVerifyLinkArrayOutput
}

type LdapVerifyLinkArray []LdapVerifyLinkInput

func (LdapVerifyLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapVerifyLink)(nil)).Elem()
}

func (i LdapVerifyLinkArray) ToLdapVerifyLinkArrayOutput() LdapVerifyLinkArrayOutput {
	return i.ToLdapVerifyLinkArrayOutputWithContext(context.Background())
}

func (i LdapVerifyLinkArray) ToLdapVerifyLinkArrayOutputWithContext(ctx context.Context) LdapVerifyLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapVerifyLinkArrayOutput)
}

type LdapVerifyLinkOutput struct{ *pulumi.OutputState }

func (LdapVerifyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapVerifyLink)(nil)).Elem()
}

func (o LdapVerifyLinkOutput) ToLdapVerifyLinkOutput() LdapVerifyLinkOutput {
	return o
}

func (o LdapVerifyLinkOutput) ToLdapVerifyLinkOutputWithContext(ctx context.Context) LdapVerifyLinkOutput {
	return o
}

func (o LdapVerifyLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapVerifyLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o LdapVerifyLinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapVerifyLink) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type LdapVerifyLinkArrayOutput struct{ *pulumi.OutputState }

func (LdapVerifyLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapVerifyLink)(nil)).Elem()
}

func (o LdapVerifyLinkArrayOutput) ToLdapVerifyLinkArrayOutput() LdapVerifyLinkArrayOutput {
	return o
}

func (o LdapVerifyLinkArrayOutput) ToLdapVerifyLinkArrayOutputWithContext(ctx context.Context) LdapVerifyLinkArrayOutput {
	return o
}

func (o LdapVerifyLinkArrayOutput) Index(i pulumi.IntInput) LdapVerifyLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LdapVerifyLink {
		return vs[0].([]LdapVerifyLink)[vs[1].(int)]
	}).(LdapVerifyLinkOutput)
}

type LdapVerifyValidation struct {
	// The current status of the LDAP over TLS/SSL configuration. One of the following values: `PENDING`, `SUCCESS`, and `FAILED`.
	Status         *string `pulumi:"status"`
	ValidationType *string `pulumi:"validationType"`
}

// LdapVerifyValidationInput is an input type that accepts LdapVerifyValidationArgs and LdapVerifyValidationOutput values.
// You can construct a concrete instance of `LdapVerifyValidationInput` via:
//
//	LdapVerifyValidationArgs{...}
type LdapVerifyValidationInput interface {
	pulumi.Input

	ToLdapVerifyValidationOutput() LdapVerifyValidationOutput
	ToLdapVerifyValidationOutputWithContext(context.Context) LdapVerifyValidationOutput
}

type LdapVerifyValidationArgs struct {
	// The current status of the LDAP over TLS/SSL configuration. One of the following values: `PENDING`, `SUCCESS`, and `FAILED`.
	Status         pulumi.StringPtrInput `pulumi:"status"`
	ValidationType pulumi.StringPtrInput `pulumi:"validationType"`
}

func (LdapVerifyValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapVerifyValidation)(nil)).Elem()
}

func (i LdapVerifyValidationArgs) ToLdapVerifyValidationOutput() LdapVerifyValidationOutput {
	return i.ToLdapVerifyValidationOutputWithContext(context.Background())
}

func (i LdapVerifyValidationArgs) ToLdapVerifyValidationOutputWithContext(ctx context.Context) LdapVerifyValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapVerifyValidationOutput)
}

// LdapVerifyValidationArrayInput is an input type that accepts LdapVerifyValidationArray and LdapVerifyValidationArrayOutput values.
// You can construct a concrete instance of `LdapVerifyValidationArrayInput` via:
//
//	LdapVerifyValidationArray{ LdapVerifyValidationArgs{...} }
type LdapVerifyValidationArrayInput interface {
	pulumi.Input

	ToLdapVerifyValidationArrayOutput() LdapVerifyValidationArrayOutput
	ToLdapVerifyValidationArrayOutputWithContext(context.Context) LdapVerifyValidationArrayOutput
}

type LdapVerifyValidationArray []LdapVerifyValidationInput

func (LdapVerifyValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapVerifyValidation)(nil)).Elem()
}

func (i LdapVerifyValidationArray) ToLdapVerifyValidationArrayOutput() LdapVerifyValidationArrayOutput {
	return i.ToLdapVerifyValidationArrayOutputWithContext(context.Background())
}

func (i LdapVerifyValidationArray) ToLdapVerifyValidationArrayOutputWithContext(ctx context.Context) LdapVerifyValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapVerifyValidationArrayOutput)
}

type LdapVerifyValidationOutput struct{ *pulumi.OutputState }

func (LdapVerifyValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapVerifyValidation)(nil)).Elem()
}

func (o LdapVerifyValidationOutput) ToLdapVerifyValidationOutput() LdapVerifyValidationOutput {
	return o
}

func (o LdapVerifyValidationOutput) ToLdapVerifyValidationOutputWithContext(ctx context.Context) LdapVerifyValidationOutput {
	return o
}

// The current status of the LDAP over TLS/SSL configuration. One of the following values: `PENDING`, `SUCCESS`, and `FAILED`.
func (o LdapVerifyValidationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapVerifyValidation) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o LdapVerifyValidationOutput) ValidationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapVerifyValidation) *string { return v.ValidationType }).(pulumi.StringPtrOutput)
}

type LdapVerifyValidationArrayOutput struct{ *pulumi.OutputState }

func (LdapVerifyValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapVerifyValidation)(nil)).Elem()
}

func (o LdapVerifyValidationArrayOutput) ToLdapVerifyValidationArrayOutput() LdapVerifyValidationArrayOutput {
	return o
}

func (o LdapVerifyValidationArrayOutput) ToLdapVerifyValidationArrayOutputWithContext(ctx context.Context) LdapVerifyValidationArrayOutput {
	return o
}

func (o LdapVerifyValidationArrayOutput) Index(i pulumi.IntInput) LdapVerifyValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LdapVerifyValidation {
		return vs[0].([]LdapVerifyValidation)[vs[1].(int)]
	}).(LdapVerifyValidationOutput)
}

type OnlineArchiveCriteria struct {
	DateField       *string `pulumi:"dateField"`
	DateFormat      *string `pulumi:"dateFormat"`
	ExpireAfterDays *int    `pulumi:"expireAfterDays"`
	Query           *string `pulumi:"query"`
	Type            string  `pulumi:"type"`
}

// OnlineArchiveCriteriaInput is an input type that accepts OnlineArchiveCriteriaArgs and OnlineArchiveCriteriaOutput values.
// You can construct a concrete instance of `OnlineArchiveCriteriaInput` via:
//
//	OnlineArchiveCriteriaArgs{...}
type OnlineArchiveCriteriaInput interface {
	pulumi.Input

	ToOnlineArchiveCriteriaOutput() OnlineArchiveCriteriaOutput
	ToOnlineArchiveCriteriaOutputWithContext(context.Context) OnlineArchiveCriteriaOutput
}

type OnlineArchiveCriteriaArgs struct {
	DateField       pulumi.StringPtrInput `pulumi:"dateField"`
	DateFormat      pulumi.StringPtrInput `pulumi:"dateFormat"`
	ExpireAfterDays pulumi.IntPtrInput    `pulumi:"expireAfterDays"`
	Query           pulumi.StringPtrInput `pulumi:"query"`
	Type            pulumi.StringInput    `pulumi:"type"`
}

func (OnlineArchiveCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineArchiveCriteria)(nil)).Elem()
}

func (i OnlineArchiveCriteriaArgs) ToOnlineArchiveCriteriaOutput() OnlineArchiveCriteriaOutput {
	return i.ToOnlineArchiveCriteriaOutputWithContext(context.Background())
}

func (i OnlineArchiveCriteriaArgs) ToOnlineArchiveCriteriaOutputWithContext(ctx context.Context) OnlineArchiveCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchiveCriteriaOutput)
}

func (i OnlineArchiveCriteriaArgs) ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput {
	return i.ToOnlineArchiveCriteriaPtrOutputWithContext(context.Background())
}

func (i OnlineArchiveCriteriaArgs) ToOnlineArchiveCriteriaPtrOutputWithContext(ctx context.Context) OnlineArchiveCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchiveCriteriaOutput).ToOnlineArchiveCriteriaPtrOutputWithContext(ctx)
}

// OnlineArchiveCriteriaPtrInput is an input type that accepts OnlineArchiveCriteriaArgs, OnlineArchiveCriteriaPtr and OnlineArchiveCriteriaPtrOutput values.
// You can construct a concrete instance of `OnlineArchiveCriteriaPtrInput` via:
//
//	        OnlineArchiveCriteriaArgs{...}
//
//	or:
//
//	        nil
type OnlineArchiveCriteriaPtrInput interface {
	pulumi.Input

	ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput
	ToOnlineArchiveCriteriaPtrOutputWithContext(context.Context) OnlineArchiveCriteriaPtrOutput
}

type onlineArchiveCriteriaPtrType OnlineArchiveCriteriaArgs

func OnlineArchiveCriteriaPtr(v *OnlineArchiveCriteriaArgs) OnlineArchiveCriteriaPtrInput {
	return (*onlineArchiveCriteriaPtrType)(v)
}

func (*onlineArchiveCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineArchiveCriteria)(nil)).Elem()
}

func (i *onlineArchiveCriteriaPtrType) ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput {
	return i.ToOnlineArchiveCriteriaPtrOutputWithContext(context.Background())
}

func (i *onlineArchiveCriteriaPtrType) ToOnlineArchiveCriteriaPtrOutputWithContext(ctx context.Context) OnlineArchiveCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchiveCriteriaPtrOutput)
}

type OnlineArchiveCriteriaOutput struct{ *pulumi.OutputState }

func (OnlineArchiveCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineArchiveCriteria)(nil)).Elem()
}

func (o OnlineArchiveCriteriaOutput) ToOnlineArchiveCriteriaOutput() OnlineArchiveCriteriaOutput {
	return o
}

func (o OnlineArchiveCriteriaOutput) ToOnlineArchiveCriteriaOutputWithContext(ctx context.Context) OnlineArchiveCriteriaOutput {
	return o
}

func (o OnlineArchiveCriteriaOutput) ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput {
	return o.ToOnlineArchiveCriteriaPtrOutputWithContext(context.Background())
}

func (o OnlineArchiveCriteriaOutput) ToOnlineArchiveCriteriaPtrOutputWithContext(ctx context.Context) OnlineArchiveCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnlineArchiveCriteria) *OnlineArchiveCriteria {
		return &v
	}).(OnlineArchiveCriteriaPtrOutput)
}

func (o OnlineArchiveCriteriaOutput) DateField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) *string { return v.DateField }).(pulumi.StringPtrOutput)
}

func (o OnlineArchiveCriteriaOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) *string { return v.DateFormat }).(pulumi.StringPtrOutput)
}

func (o OnlineArchiveCriteriaOutput) ExpireAfterDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) *int { return v.ExpireAfterDays }).(pulumi.IntPtrOutput)
}

func (o OnlineArchiveCriteriaOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) *string { return v.Query }).(pulumi.StringPtrOutput)
}

func (o OnlineArchiveCriteriaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) string { return v.Type }).(pulumi.StringOutput)
}

type OnlineArchiveCriteriaPtrOutput struct{ *pulumi.OutputState }

func (OnlineArchiveCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineArchiveCriteria)(nil)).Elem()
}

func (o OnlineArchiveCriteriaPtrOutput) ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput {
	return o
}

func (o OnlineArchiveCriteriaPtrOutput) ToOnlineArchiveCriteriaPtrOutputWithContext(ctx context.Context) OnlineArchiveCriteriaPtrOutput {
	return o
}

func (o OnlineArchiveCriteriaPtrOutput) Elem() OnlineArchiveCriteriaOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) OnlineArchiveCriteria {
		if v != nil {
			return *v
		}
		var ret OnlineArchiveCriteria
		return ret
	}).(OnlineArchiveCriteriaOutput)
}

func (o OnlineArchiveCriteriaPtrOutput) DateField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *string {
		if v == nil {
			return nil
		}
		return v.DateField
	}).(pulumi.StringPtrOutput)
}

func (o OnlineArchiveCriteriaPtrOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *string {
		if v == nil {
			return nil
		}
		return v.DateFormat
	}).(pulumi.StringPtrOutput)
}

func (o OnlineArchiveCriteriaPtrOutput) ExpireAfterDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *int {
		if v == nil {
			return nil
		}
		return v.ExpireAfterDays
	}).(pulumi.IntPtrOutput)
}

func (o OnlineArchiveCriteriaPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

func (o OnlineArchiveCriteriaPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type OnlineArchivePartitionField struct {
	FieldName string  `pulumi:"fieldName"`
	FieldType *string `pulumi:"fieldType"`
	Order     int     `pulumi:"order"`
}

// OnlineArchivePartitionFieldInput is an input type that accepts OnlineArchivePartitionFieldArgs and OnlineArchivePartitionFieldOutput values.
// You can construct a concrete instance of `OnlineArchivePartitionFieldInput` via:
//
//	OnlineArchivePartitionFieldArgs{...}
type OnlineArchivePartitionFieldInput interface {
	pulumi.Input

	ToOnlineArchivePartitionFieldOutput() OnlineArchivePartitionFieldOutput
	ToOnlineArchivePartitionFieldOutputWithContext(context.Context) OnlineArchivePartitionFieldOutput
}

type OnlineArchivePartitionFieldArgs struct {
	FieldName pulumi.StringInput    `pulumi:"fieldName"`
	FieldType pulumi.StringPtrInput `pulumi:"fieldType"`
	Order     pulumi.IntInput       `pulumi:"order"`
}

func (OnlineArchivePartitionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineArchivePartitionField)(nil)).Elem()
}

func (i OnlineArchivePartitionFieldArgs) ToOnlineArchivePartitionFieldOutput() OnlineArchivePartitionFieldOutput {
	return i.ToOnlineArchivePartitionFieldOutputWithContext(context.Background())
}

func (i OnlineArchivePartitionFieldArgs) ToOnlineArchivePartitionFieldOutputWithContext(ctx context.Context) OnlineArchivePartitionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchivePartitionFieldOutput)
}

// OnlineArchivePartitionFieldArrayInput is an input type that accepts OnlineArchivePartitionFieldArray and OnlineArchivePartitionFieldArrayOutput values.
// You can construct a concrete instance of `OnlineArchivePartitionFieldArrayInput` via:
//
//	OnlineArchivePartitionFieldArray{ OnlineArchivePartitionFieldArgs{...} }
type OnlineArchivePartitionFieldArrayInput interface {
	pulumi.Input

	ToOnlineArchivePartitionFieldArrayOutput() OnlineArchivePartitionFieldArrayOutput
	ToOnlineArchivePartitionFieldArrayOutputWithContext(context.Context) OnlineArchivePartitionFieldArrayOutput
}

type OnlineArchivePartitionFieldArray []OnlineArchivePartitionFieldInput

func (OnlineArchivePartitionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OnlineArchivePartitionField)(nil)).Elem()
}

func (i OnlineArchivePartitionFieldArray) ToOnlineArchivePartitionFieldArrayOutput() OnlineArchivePartitionFieldArrayOutput {
	return i.ToOnlineArchivePartitionFieldArrayOutputWithContext(context.Background())
}

func (i OnlineArchivePartitionFieldArray) ToOnlineArchivePartitionFieldArrayOutputWithContext(ctx context.Context) OnlineArchivePartitionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchivePartitionFieldArrayOutput)
}

type OnlineArchivePartitionFieldOutput struct{ *pulumi.OutputState }

func (OnlineArchivePartitionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineArchivePartitionField)(nil)).Elem()
}

func (o OnlineArchivePartitionFieldOutput) ToOnlineArchivePartitionFieldOutput() OnlineArchivePartitionFieldOutput {
	return o
}

func (o OnlineArchivePartitionFieldOutput) ToOnlineArchivePartitionFieldOutputWithContext(ctx context.Context) OnlineArchivePartitionFieldOutput {
	return o
}

func (o OnlineArchivePartitionFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineArchivePartitionField) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o OnlineArchivePartitionFieldOutput) FieldType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineArchivePartitionField) *string { return v.FieldType }).(pulumi.StringPtrOutput)
}

func (o OnlineArchivePartitionFieldOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v OnlineArchivePartitionField) int { return v.Order }).(pulumi.IntOutput)
}

type OnlineArchivePartitionFieldArrayOutput struct{ *pulumi.OutputState }

func (OnlineArchivePartitionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OnlineArchivePartitionField)(nil)).Elem()
}

func (o OnlineArchivePartitionFieldArrayOutput) ToOnlineArchivePartitionFieldArrayOutput() OnlineArchivePartitionFieldArrayOutput {
	return o
}

func (o OnlineArchivePartitionFieldArrayOutput) ToOnlineArchivePartitionFieldArrayOutputWithContext(ctx context.Context) OnlineArchivePartitionFieldArrayOutput {
	return o
}

func (o OnlineArchivePartitionFieldArrayOutput) Index(i pulumi.IntInput) OnlineArchivePartitionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OnlineArchivePartitionField {
		return vs[0].([]OnlineArchivePartitionField)[vs[1].(int)]
	}).(OnlineArchivePartitionFieldOutput)
}

type PrivateLinkEndpointServiceEndpoint struct {
	// Forwarding rule that corresponds to the endpoint you created in GCP.
	EndpointName *string `pulumi:"endpointName"`
	// Private IP address of the endpoint you created in GCP.
	IpAddress *string `pulumi:"ipAddress"`
	// Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
	ServiceAttachmentName *string `pulumi:"serviceAttachmentName"`
	// Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
	Status *string `pulumi:"status"`
}

// PrivateLinkEndpointServiceEndpointInput is an input type that accepts PrivateLinkEndpointServiceEndpointArgs and PrivateLinkEndpointServiceEndpointOutput values.
// You can construct a concrete instance of `PrivateLinkEndpointServiceEndpointInput` via:
//
//	PrivateLinkEndpointServiceEndpointArgs{...}
type PrivateLinkEndpointServiceEndpointInput interface {
	pulumi.Input

	ToPrivateLinkEndpointServiceEndpointOutput() PrivateLinkEndpointServiceEndpointOutput
	ToPrivateLinkEndpointServiceEndpointOutputWithContext(context.Context) PrivateLinkEndpointServiceEndpointOutput
}

type PrivateLinkEndpointServiceEndpointArgs struct {
	// Forwarding rule that corresponds to the endpoint you created in GCP.
	EndpointName pulumi.StringPtrInput `pulumi:"endpointName"`
	// Private IP address of the endpoint you created in GCP.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
	ServiceAttachmentName pulumi.StringPtrInput `pulumi:"serviceAttachmentName"`
	// Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkEndpointServiceEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (i PrivateLinkEndpointServiceEndpointArgs) ToPrivateLinkEndpointServiceEndpointOutput() PrivateLinkEndpointServiceEndpointOutput {
	return i.ToPrivateLinkEndpointServiceEndpointOutputWithContext(context.Background())
}

func (i PrivateLinkEndpointServiceEndpointArgs) ToPrivateLinkEndpointServiceEndpointOutputWithContext(ctx context.Context) PrivateLinkEndpointServiceEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkEndpointServiceEndpointOutput)
}

// PrivateLinkEndpointServiceEndpointArrayInput is an input type that accepts PrivateLinkEndpointServiceEndpointArray and PrivateLinkEndpointServiceEndpointArrayOutput values.
// You can construct a concrete instance of `PrivateLinkEndpointServiceEndpointArrayInput` via:
//
//	PrivateLinkEndpointServiceEndpointArray{ PrivateLinkEndpointServiceEndpointArgs{...} }
type PrivateLinkEndpointServiceEndpointArrayInput interface {
	pulumi.Input

	ToPrivateLinkEndpointServiceEndpointArrayOutput() PrivateLinkEndpointServiceEndpointArrayOutput
	ToPrivateLinkEndpointServiceEndpointArrayOutputWithContext(context.Context) PrivateLinkEndpointServiceEndpointArrayOutput
}

type PrivateLinkEndpointServiceEndpointArray []PrivateLinkEndpointServiceEndpointInput

func (PrivateLinkEndpointServiceEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (i PrivateLinkEndpointServiceEndpointArray) ToPrivateLinkEndpointServiceEndpointArrayOutput() PrivateLinkEndpointServiceEndpointArrayOutput {
	return i.ToPrivateLinkEndpointServiceEndpointArrayOutputWithContext(context.Background())
}

func (i PrivateLinkEndpointServiceEndpointArray) ToPrivateLinkEndpointServiceEndpointArrayOutputWithContext(ctx context.Context) PrivateLinkEndpointServiceEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkEndpointServiceEndpointArrayOutput)
}

type PrivateLinkEndpointServiceEndpointOutput struct{ *pulumi.OutputState }

func (PrivateLinkEndpointServiceEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (o PrivateLinkEndpointServiceEndpointOutput) ToPrivateLinkEndpointServiceEndpointOutput() PrivateLinkEndpointServiceEndpointOutput {
	return o
}

func (o PrivateLinkEndpointServiceEndpointOutput) ToPrivateLinkEndpointServiceEndpointOutputWithContext(ctx context.Context) PrivateLinkEndpointServiceEndpointOutput {
	return o
}

// Forwarding rule that corresponds to the endpoint you created in GCP.
func (o PrivateLinkEndpointServiceEndpointOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkEndpointServiceEndpoint) *string { return v.EndpointName }).(pulumi.StringPtrOutput)
}

// Private IP address of the endpoint you created in GCP.
func (o PrivateLinkEndpointServiceEndpointOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkEndpointServiceEndpoint) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
func (o PrivateLinkEndpointServiceEndpointOutput) ServiceAttachmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkEndpointServiceEndpoint) *string { return v.ServiceAttachmentName }).(pulumi.StringPtrOutput)
}

// Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
func (o PrivateLinkEndpointServiceEndpointOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkEndpointServiceEndpoint) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkEndpointServiceEndpointArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkEndpointServiceEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (o PrivateLinkEndpointServiceEndpointArrayOutput) ToPrivateLinkEndpointServiceEndpointArrayOutput() PrivateLinkEndpointServiceEndpointArrayOutput {
	return o
}

func (o PrivateLinkEndpointServiceEndpointArrayOutput) ToPrivateLinkEndpointServiceEndpointArrayOutputWithContext(ctx context.Context) PrivateLinkEndpointServiceEndpointArrayOutput {
	return o
}

func (o PrivateLinkEndpointServiceEndpointArrayOutput) Index(i pulumi.IntInput) PrivateLinkEndpointServiceEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkEndpointServiceEndpoint {
		return vs[0].([]PrivateLinkEndpointServiceEndpoint)[vs[1].(int)]
	}).(PrivateLinkEndpointServiceEndpointOutput)
}

type ProjectApiKeyType struct {
	// The unique identifier of the Programmatic API key you want to associate with the Project.  The Programmatic API key and Project must share the same parent organization.  Note: this is not the `publicKey` of the Programmatic API key but the `id` of the key. See [Programmatic API Keys](https://docs.atlas.mongodb.com/reference/api/apiKeys/) for more.
	ApiKeyId string `pulumi:"apiKeyId"`
	// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team.
	// The following are valid roles:
	// The following are valid roles:
	RoleNames []string `pulumi:"roleNames"`
}

// ProjectApiKeyTypeInput is an input type that accepts ProjectApiKeyTypeArgs and ProjectApiKeyTypeOutput values.
// You can construct a concrete instance of `ProjectApiKeyTypeInput` via:
//
//	ProjectApiKeyTypeArgs{...}
type ProjectApiKeyTypeInput interface {
	pulumi.Input

	ToProjectApiKeyTypeOutput() ProjectApiKeyTypeOutput
	ToProjectApiKeyTypeOutputWithContext(context.Context) ProjectApiKeyTypeOutput
}

type ProjectApiKeyTypeArgs struct {
	// The unique identifier of the Programmatic API key you want to associate with the Project.  The Programmatic API key and Project must share the same parent organization.  Note: this is not the `publicKey` of the Programmatic API key but the `id` of the key. See [Programmatic API Keys](https://docs.atlas.mongodb.com/reference/api/apiKeys/) for more.
	ApiKeyId pulumi.StringInput `pulumi:"apiKeyId"`
	// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team.
	// The following are valid roles:
	// The following are valid roles:
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
}

func (ProjectApiKeyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectApiKeyType)(nil)).Elem()
}

func (i ProjectApiKeyTypeArgs) ToProjectApiKeyTypeOutput() ProjectApiKeyTypeOutput {
	return i.ToProjectApiKeyTypeOutputWithContext(context.Background())
}

func (i ProjectApiKeyTypeArgs) ToProjectApiKeyTypeOutputWithContext(ctx context.Context) ProjectApiKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectApiKeyTypeOutput)
}

// ProjectApiKeyTypeArrayInput is an input type that accepts ProjectApiKeyTypeArray and ProjectApiKeyTypeArrayOutput values.
// You can construct a concrete instance of `ProjectApiKeyTypeArrayInput` via:
//
//	ProjectApiKeyTypeArray{ ProjectApiKeyTypeArgs{...} }
type ProjectApiKeyTypeArrayInput interface {
	pulumi.Input

	ToProjectApiKeyTypeArrayOutput() ProjectApiKeyTypeArrayOutput
	ToProjectApiKeyTypeArrayOutputWithContext(context.Context) ProjectApiKeyTypeArrayOutput
}

type ProjectApiKeyTypeArray []ProjectApiKeyTypeInput

func (ProjectApiKeyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectApiKeyType)(nil)).Elem()
}

func (i ProjectApiKeyTypeArray) ToProjectApiKeyTypeArrayOutput() ProjectApiKeyTypeArrayOutput {
	return i.ToProjectApiKeyTypeArrayOutputWithContext(context.Background())
}

func (i ProjectApiKeyTypeArray) ToProjectApiKeyTypeArrayOutputWithContext(ctx context.Context) ProjectApiKeyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectApiKeyTypeArrayOutput)
}

type ProjectApiKeyTypeOutput struct{ *pulumi.OutputState }

func (ProjectApiKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectApiKeyType)(nil)).Elem()
}

func (o ProjectApiKeyTypeOutput) ToProjectApiKeyTypeOutput() ProjectApiKeyTypeOutput {
	return o
}

func (o ProjectApiKeyTypeOutput) ToProjectApiKeyTypeOutputWithContext(ctx context.Context) ProjectApiKeyTypeOutput {
	return o
}

// The unique identifier of the Programmatic API key you want to associate with the Project.  The Programmatic API key and Project must share the same parent organization.  Note: this is not the `publicKey` of the Programmatic API key but the `id` of the key. See [Programmatic API Keys](https://docs.atlas.mongodb.com/reference/api/apiKeys/) for more.
func (o ProjectApiKeyTypeOutput) ApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectApiKeyType) string { return v.ApiKeyId }).(pulumi.StringOutput)
}

// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team.
// The following are valid roles:
// The following are valid roles:
func (o ProjectApiKeyTypeOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectApiKeyType) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

type ProjectApiKeyTypeArrayOutput struct{ *pulumi.OutputState }

func (ProjectApiKeyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectApiKeyType)(nil)).Elem()
}

func (o ProjectApiKeyTypeArrayOutput) ToProjectApiKeyTypeArrayOutput() ProjectApiKeyTypeArrayOutput {
	return o
}

func (o ProjectApiKeyTypeArrayOutput) ToProjectApiKeyTypeArrayOutputWithContext(ctx context.Context) ProjectApiKeyTypeArrayOutput {
	return o
}

func (o ProjectApiKeyTypeArrayOutput) Index(i pulumi.IntInput) ProjectApiKeyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectApiKeyType {
		return vs[0].([]ProjectApiKeyType)[vs[1].(int)]
	}).(ProjectApiKeyTypeOutput)
}

type ProjectTeam struct {
	// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team.
	// The following are valid roles:
	RoleNames []string `pulumi:"roleNames"`
	// The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	TeamId string `pulumi:"teamId"`
}

// ProjectTeamInput is an input type that accepts ProjectTeamArgs and ProjectTeamOutput values.
// You can construct a concrete instance of `ProjectTeamInput` via:
//
//	ProjectTeamArgs{...}
type ProjectTeamInput interface {
	pulumi.Input

	ToProjectTeamOutput() ProjectTeamOutput
	ToProjectTeamOutputWithContext(context.Context) ProjectTeamOutput
}

type ProjectTeamArgs struct {
	// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team.
	// The following are valid roles:
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	// The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	TeamId pulumi.StringInput `pulumi:"teamId"`
}

func (ProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTeam)(nil)).Elem()
}

func (i ProjectTeamArgs) ToProjectTeamOutput() ProjectTeamOutput {
	return i.ToProjectTeamOutputWithContext(context.Background())
}

func (i ProjectTeamArgs) ToProjectTeamOutputWithContext(ctx context.Context) ProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTeamOutput)
}

// ProjectTeamArrayInput is an input type that accepts ProjectTeamArray and ProjectTeamArrayOutput values.
// You can construct a concrete instance of `ProjectTeamArrayInput` via:
//
//	ProjectTeamArray{ ProjectTeamArgs{...} }
type ProjectTeamArrayInput interface {
	pulumi.Input

	ToProjectTeamArrayOutput() ProjectTeamArrayOutput
	ToProjectTeamArrayOutputWithContext(context.Context) ProjectTeamArrayOutput
}

type ProjectTeamArray []ProjectTeamInput

func (ProjectTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTeam)(nil)).Elem()
}

func (i ProjectTeamArray) ToProjectTeamArrayOutput() ProjectTeamArrayOutput {
	return i.ToProjectTeamArrayOutputWithContext(context.Background())
}

func (i ProjectTeamArray) ToProjectTeamArrayOutputWithContext(ctx context.Context) ProjectTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTeamArrayOutput)
}

type ProjectTeamOutput struct{ *pulumi.OutputState }

func (ProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTeam)(nil)).Elem()
}

func (o ProjectTeamOutput) ToProjectTeamOutput() ProjectTeamOutput {
	return o
}

func (o ProjectTeamOutput) ToProjectTeamOutputWithContext(ctx context.Context) ProjectTeamOutput {
	return o
}

// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team.
// The following are valid roles:
func (o ProjectTeamOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectTeam) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

// The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
func (o ProjectTeamOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTeam) string { return v.TeamId }).(pulumi.StringOutput)
}

type ProjectTeamArrayOutput struct{ *pulumi.OutputState }

func (ProjectTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTeam)(nil)).Elem()
}

func (o ProjectTeamArrayOutput) ToProjectTeamArrayOutput() ProjectTeamArrayOutput {
	return o
}

func (o ProjectTeamArrayOutput) ToProjectTeamArrayOutputWithContext(ctx context.Context) ProjectTeamArrayOutput {
	return o
}

func (o ProjectTeamArrayOutput) Index(i pulumi.IntInput) ProjectTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTeam {
		return vs[0].([]ProjectTeam)[vs[1].(int)]
	}).(ProjectTeamOutput)
}

type ProviderAssumeRole struct {
	Duration *string `pulumi:"duration"`
	// Deprecated: Use assume_role.duration instead
	DurationSeconds   *int              `pulumi:"durationSeconds"`
	ExternalId        *string           `pulumi:"externalId"`
	Policy            *string           `pulumi:"policy"`
	PolicyArns        []string          `pulumi:"policyArns"`
	RoleArn           *string           `pulumi:"roleArn"`
	SessionName       *string           `pulumi:"sessionName"`
	SourceIdentity    *string           `pulumi:"sourceIdentity"`
	Tags              map[string]string `pulumi:"tags"`
	TransitiveTagKeys []string          `pulumi:"transitiveTagKeys"`
}

// ProviderAssumeRoleInput is an input type that accepts ProviderAssumeRoleArgs and ProviderAssumeRoleOutput values.
// You can construct a concrete instance of `ProviderAssumeRoleInput` via:
//
//	ProviderAssumeRoleArgs{...}
type ProviderAssumeRoleInput interface {
	pulumi.Input

	ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput
	ToProviderAssumeRoleOutputWithContext(context.Context) ProviderAssumeRoleOutput
}

type ProviderAssumeRoleArgs struct {
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Deprecated: Use assume_role.duration instead
	DurationSeconds   pulumi.IntPtrInput      `pulumi:"durationSeconds"`
	ExternalId        pulumi.StringPtrInput   `pulumi:"externalId"`
	Policy            pulumi.StringPtrInput   `pulumi:"policy"`
	PolicyArns        pulumi.StringArrayInput `pulumi:"policyArns"`
	RoleArn           pulumi.StringPtrInput   `pulumi:"roleArn"`
	SessionName       pulumi.StringPtrInput   `pulumi:"sessionName"`
	SourceIdentity    pulumi.StringPtrInput   `pulumi:"sourceIdentity"`
	Tags              pulumi.StringMapInput   `pulumi:"tags"`
	TransitiveTagKeys pulumi.StringArrayInput `pulumi:"transitiveTagKeys"`
}

func (ProviderAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return i.ToProviderAssumeRoleOutputWithContext(context.Background())
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRoleOutput)
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return i.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRoleOutput).ToProviderAssumeRolePtrOutputWithContext(ctx)
}

// ProviderAssumeRolePtrInput is an input type that accepts ProviderAssumeRoleArgs, ProviderAssumeRolePtr and ProviderAssumeRolePtrOutput values.
// You can construct a concrete instance of `ProviderAssumeRolePtrInput` via:
//
//	        ProviderAssumeRoleArgs{...}
//
//	or:
//
//	        nil
type ProviderAssumeRolePtrInput interface {
	pulumi.Input

	ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput
	ToProviderAssumeRolePtrOutputWithContext(context.Context) ProviderAssumeRolePtrOutput
}

type providerAssumeRolePtrType ProviderAssumeRoleArgs

func ProviderAssumeRolePtr(v *ProviderAssumeRoleArgs) ProviderAssumeRolePtrInput {
	return (*providerAssumeRolePtrType)(v)
}

func (*providerAssumeRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAssumeRole)(nil)).Elem()
}

func (i *providerAssumeRolePtrType) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return i.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (i *providerAssumeRolePtrType) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRolePtrOutput)
}

type ProviderAssumeRoleOutput struct{ *pulumi.OutputState }

func (ProviderAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return o.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderAssumeRole) *ProviderAssumeRole {
		return &v
	}).(ProviderAssumeRolePtrOutput)
}

func (o ProviderAssumeRoleOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Deprecated: Use assume_role.duration instead
func (o ProviderAssumeRoleOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

func (o ProviderAssumeRoleOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRoleOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRoleOutput) PolicyArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderAssumeRole) []string { return v.PolicyArns }).(pulumi.StringArrayOutput)
}

func (o ProviderAssumeRoleOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRoleOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.SessionName }).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRoleOutput) SourceIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.SourceIdentity }).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRoleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProviderAssumeRole) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ProviderAssumeRoleOutput) TransitiveTagKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderAssumeRole) []string { return v.TransitiveTagKeys }).(pulumi.StringArrayOutput)
}

type ProviderAssumeRolePtrOutput struct{ *pulumi.OutputState }

func (ProviderAssumeRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAssumeRole)(nil)).Elem()
}

func (o ProviderAssumeRolePtrOutput) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return o
}

func (o ProviderAssumeRolePtrOutput) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return o
}

func (o ProviderAssumeRolePtrOutput) Elem() ProviderAssumeRoleOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) ProviderAssumeRole {
		if v != nil {
			return *v
		}
		var ret ProviderAssumeRole
		return ret
	}).(ProviderAssumeRoleOutput)
}

func (o ProviderAssumeRolePtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// Deprecated: Use assume_role.duration instead
func (o ProviderAssumeRolePtrOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *int {
		if v == nil {
			return nil
		}
		return v.DurationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) PolicyArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) []string {
		if v == nil {
			return nil
		}
		return v.PolicyArns
	}).(pulumi.StringArrayOutput)
}

func (o ProviderAssumeRolePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.SessionName
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) SourceIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.SourceIdentity
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

func (o ProviderAssumeRolePtrOutput) TransitiveTagKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) []string {
		if v == nil {
			return nil
		}
		return v.TransitiveTagKeys
	}).(pulumi.StringArrayOutput)
}

type SearchIndexSynonym struct {
	// Name of the [analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use with this synonym mapping. Atlas Search doesn't support these [custom analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) tokenizers and token filters in [analyzers used in synonym mappings](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#options):
	// * [nGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-ngram-tokenizer-ref) Tokenizer
	// * [edgeGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-edgegram-tokenizer-ref) Tokenizers
	// * [daitchMokotoffSoundex](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-daitchmokotoffsoundex-tf-ref) token filter
	// * [nGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-ngram-tf-ref) token filter
	// * [edgeGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-edgegram-tf-ref) token filter
	// * [shingle](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-shingle-tf-ref) token filter
	Analyzer string `pulumi:"analyzer"`
	// Name of the [synonym mapping definition](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-ref). Name must be unique in this index definition and it can't be an empty string.
	Name string `pulumi:"name"`
	// Name of the source MongoDB collection for the synonyms. Documents in this collection must be in the format described in the [Synonyms Source Collection Documents](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-coll-spec).
	SourceCollection string `pulumi:"sourceCollection"`
}

// SearchIndexSynonymInput is an input type that accepts SearchIndexSynonymArgs and SearchIndexSynonymOutput values.
// You can construct a concrete instance of `SearchIndexSynonymInput` via:
//
//	SearchIndexSynonymArgs{...}
type SearchIndexSynonymInput interface {
	pulumi.Input

	ToSearchIndexSynonymOutput() SearchIndexSynonymOutput
	ToSearchIndexSynonymOutputWithContext(context.Context) SearchIndexSynonymOutput
}

type SearchIndexSynonymArgs struct {
	// Name of the [analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use with this synonym mapping. Atlas Search doesn't support these [custom analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) tokenizers and token filters in [analyzers used in synonym mappings](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#options):
	// * [nGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-ngram-tokenizer-ref) Tokenizer
	// * [edgeGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-edgegram-tokenizer-ref) Tokenizers
	// * [daitchMokotoffSoundex](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-daitchmokotoffsoundex-tf-ref) token filter
	// * [nGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-ngram-tf-ref) token filter
	// * [edgeGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-edgegram-tf-ref) token filter
	// * [shingle](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-shingle-tf-ref) token filter
	Analyzer pulumi.StringInput `pulumi:"analyzer"`
	// Name of the [synonym mapping definition](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-ref). Name must be unique in this index definition and it can't be an empty string.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the source MongoDB collection for the synonyms. Documents in this collection must be in the format described in the [Synonyms Source Collection Documents](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-coll-spec).
	SourceCollection pulumi.StringInput `pulumi:"sourceCollection"`
}

func (SearchIndexSynonymArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SearchIndexSynonym)(nil)).Elem()
}

func (i SearchIndexSynonymArgs) ToSearchIndexSynonymOutput() SearchIndexSynonymOutput {
	return i.ToSearchIndexSynonymOutputWithContext(context.Background())
}

func (i SearchIndexSynonymArgs) ToSearchIndexSynonymOutputWithContext(ctx context.Context) SearchIndexSynonymOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SearchIndexSynonymOutput)
}

// SearchIndexSynonymArrayInput is an input type that accepts SearchIndexSynonymArray and SearchIndexSynonymArrayOutput values.
// You can construct a concrete instance of `SearchIndexSynonymArrayInput` via:
//
//	SearchIndexSynonymArray{ SearchIndexSynonymArgs{...} }
type SearchIndexSynonymArrayInput interface {
	pulumi.Input

	ToSearchIndexSynonymArrayOutput() SearchIndexSynonymArrayOutput
	ToSearchIndexSynonymArrayOutputWithContext(context.Context) SearchIndexSynonymArrayOutput
}

type SearchIndexSynonymArray []SearchIndexSynonymInput

func (SearchIndexSynonymArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SearchIndexSynonym)(nil)).Elem()
}

func (i SearchIndexSynonymArray) ToSearchIndexSynonymArrayOutput() SearchIndexSynonymArrayOutput {
	return i.ToSearchIndexSynonymArrayOutputWithContext(context.Background())
}

func (i SearchIndexSynonymArray) ToSearchIndexSynonymArrayOutputWithContext(ctx context.Context) SearchIndexSynonymArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SearchIndexSynonymArrayOutput)
}

type SearchIndexSynonymOutput struct{ *pulumi.OutputState }

func (SearchIndexSynonymOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SearchIndexSynonym)(nil)).Elem()
}

func (o SearchIndexSynonymOutput) ToSearchIndexSynonymOutput() SearchIndexSynonymOutput {
	return o
}

func (o SearchIndexSynonymOutput) ToSearchIndexSynonymOutputWithContext(ctx context.Context) SearchIndexSynonymOutput {
	return o
}

// Name of the [analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use with this synonym mapping. Atlas Search doesn't support these [custom analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) tokenizers and token filters in [analyzers used in synonym mappings](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#options):
// * [nGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-ngram-tokenizer-ref) Tokenizer
// * [edgeGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-edgegram-tokenizer-ref) Tokenizers
// * [daitchMokotoffSoundex](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-daitchmokotoffsoundex-tf-ref) token filter
// * [nGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-ngram-tf-ref) token filter
// * [edgeGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-edgegram-tf-ref) token filter
// * [shingle](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-shingle-tf-ref) token filter
func (o SearchIndexSynonymOutput) Analyzer() pulumi.StringOutput {
	return o.ApplyT(func(v SearchIndexSynonym) string { return v.Analyzer }).(pulumi.StringOutput)
}

// Name of the [synonym mapping definition](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-ref). Name must be unique in this index definition and it can't be an empty string.
func (o SearchIndexSynonymOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SearchIndexSynonym) string { return v.Name }).(pulumi.StringOutput)
}

// Name of the source MongoDB collection for the synonyms. Documents in this collection must be in the format described in the [Synonyms Source Collection Documents](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-coll-spec).
func (o SearchIndexSynonymOutput) SourceCollection() pulumi.StringOutput {
	return o.ApplyT(func(v SearchIndexSynonym) string { return v.SourceCollection }).(pulumi.StringOutput)
}

type SearchIndexSynonymArrayOutput struct{ *pulumi.OutputState }

func (SearchIndexSynonymArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SearchIndexSynonym)(nil)).Elem()
}

func (o SearchIndexSynonymArrayOutput) ToSearchIndexSynonymArrayOutput() SearchIndexSynonymArrayOutput {
	return o
}

func (o SearchIndexSynonymArrayOutput) ToSearchIndexSynonymArrayOutputWithContext(ctx context.Context) SearchIndexSynonymArrayOutput {
	return o
}

func (o SearchIndexSynonymArrayOutput) Index(i pulumi.IntInput) SearchIndexSynonymOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SearchIndexSynonym {
		return vs[0].([]SearchIndexSynonym)[vs[1].(int)]
	}).(SearchIndexSynonymOutput)
}

type ServerlessInstanceLink struct {
	Href *string `pulumi:"href"`
	Rel  *string `pulumi:"rel"`
}

// ServerlessInstanceLinkInput is an input type that accepts ServerlessInstanceLinkArgs and ServerlessInstanceLinkOutput values.
// You can construct a concrete instance of `ServerlessInstanceLinkInput` via:
//
//	ServerlessInstanceLinkArgs{...}
type ServerlessInstanceLinkInput interface {
	pulumi.Input

	ToServerlessInstanceLinkOutput() ServerlessInstanceLinkOutput
	ToServerlessInstanceLinkOutputWithContext(context.Context) ServerlessInstanceLinkOutput
}

type ServerlessInstanceLinkArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
	Rel  pulumi.StringPtrInput `pulumi:"rel"`
}

func (ServerlessInstanceLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessInstanceLink)(nil)).Elem()
}

func (i ServerlessInstanceLinkArgs) ToServerlessInstanceLinkOutput() ServerlessInstanceLinkOutput {
	return i.ToServerlessInstanceLinkOutputWithContext(context.Background())
}

func (i ServerlessInstanceLinkArgs) ToServerlessInstanceLinkOutputWithContext(ctx context.Context) ServerlessInstanceLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessInstanceLinkOutput)
}

// ServerlessInstanceLinkArrayInput is an input type that accepts ServerlessInstanceLinkArray and ServerlessInstanceLinkArrayOutput values.
// You can construct a concrete instance of `ServerlessInstanceLinkArrayInput` via:
//
//	ServerlessInstanceLinkArray{ ServerlessInstanceLinkArgs{...} }
type ServerlessInstanceLinkArrayInput interface {
	pulumi.Input

	ToServerlessInstanceLinkArrayOutput() ServerlessInstanceLinkArrayOutput
	ToServerlessInstanceLinkArrayOutputWithContext(context.Context) ServerlessInstanceLinkArrayOutput
}

type ServerlessInstanceLinkArray []ServerlessInstanceLinkInput

func (ServerlessInstanceLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerlessInstanceLink)(nil)).Elem()
}

func (i ServerlessInstanceLinkArray) ToServerlessInstanceLinkArrayOutput() ServerlessInstanceLinkArrayOutput {
	return i.ToServerlessInstanceLinkArrayOutputWithContext(context.Background())
}

func (i ServerlessInstanceLinkArray) ToServerlessInstanceLinkArrayOutputWithContext(ctx context.Context) ServerlessInstanceLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessInstanceLinkArrayOutput)
}

type ServerlessInstanceLinkOutput struct{ *pulumi.OutputState }

func (ServerlessInstanceLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessInstanceLink)(nil)).Elem()
}

func (o ServerlessInstanceLinkOutput) ToServerlessInstanceLinkOutput() ServerlessInstanceLinkOutput {
	return o
}

func (o ServerlessInstanceLinkOutput) ToServerlessInstanceLinkOutputWithContext(ctx context.Context) ServerlessInstanceLinkOutput {
	return o
}

func (o ServerlessInstanceLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerlessInstanceLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o ServerlessInstanceLinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerlessInstanceLink) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type ServerlessInstanceLinkArrayOutput struct{ *pulumi.OutputState }

func (ServerlessInstanceLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerlessInstanceLink)(nil)).Elem()
}

func (o ServerlessInstanceLinkArrayOutput) ToServerlessInstanceLinkArrayOutput() ServerlessInstanceLinkArrayOutput {
	return o
}

func (o ServerlessInstanceLinkArrayOutput) ToServerlessInstanceLinkArrayOutputWithContext(ctx context.Context) ServerlessInstanceLinkArrayOutput {
	return o
}

func (o ServerlessInstanceLinkArrayOutput) Index(i pulumi.IntInput) ServerlessInstanceLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerlessInstanceLink {
		return vs[0].([]ServerlessInstanceLink)[vs[1].(int)]
	}).(ServerlessInstanceLinkOutput)
}

type X509AuthenticationDatabaseUserCertificate struct {
	CreatedAt *string `pulumi:"createdAt"`
	GroupId   *string `pulumi:"groupId"`
	Id        *int    `pulumi:"id"`
	NotAfter  *string `pulumi:"notAfter"`
	Subject   *string `pulumi:"subject"`
}

// X509AuthenticationDatabaseUserCertificateInput is an input type that accepts X509AuthenticationDatabaseUserCertificateArgs and X509AuthenticationDatabaseUserCertificateOutput values.
// You can construct a concrete instance of `X509AuthenticationDatabaseUserCertificateInput` via:
//
//	X509AuthenticationDatabaseUserCertificateArgs{...}
type X509AuthenticationDatabaseUserCertificateInput interface {
	pulumi.Input

	ToX509AuthenticationDatabaseUserCertificateOutput() X509AuthenticationDatabaseUserCertificateOutput
	ToX509AuthenticationDatabaseUserCertificateOutputWithContext(context.Context) X509AuthenticationDatabaseUserCertificateOutput
}

type X509AuthenticationDatabaseUserCertificateArgs struct {
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	GroupId   pulumi.StringPtrInput `pulumi:"groupId"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	NotAfter  pulumi.StringPtrInput `pulumi:"notAfter"`
	Subject   pulumi.StringPtrInput `pulumi:"subject"`
}

func (X509AuthenticationDatabaseUserCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i X509AuthenticationDatabaseUserCertificateArgs) ToX509AuthenticationDatabaseUserCertificateOutput() X509AuthenticationDatabaseUserCertificateOutput {
	return i.ToX509AuthenticationDatabaseUserCertificateOutputWithContext(context.Background())
}

func (i X509AuthenticationDatabaseUserCertificateArgs) ToX509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509AuthenticationDatabaseUserCertificateOutput)
}

// X509AuthenticationDatabaseUserCertificateArrayInput is an input type that accepts X509AuthenticationDatabaseUserCertificateArray and X509AuthenticationDatabaseUserCertificateArrayOutput values.
// You can construct a concrete instance of `X509AuthenticationDatabaseUserCertificateArrayInput` via:
//
//	X509AuthenticationDatabaseUserCertificateArray{ X509AuthenticationDatabaseUserCertificateArgs{...} }
type X509AuthenticationDatabaseUserCertificateArrayInput interface {
	pulumi.Input

	ToX509AuthenticationDatabaseUserCertificateArrayOutput() X509AuthenticationDatabaseUserCertificateArrayOutput
	ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Context) X509AuthenticationDatabaseUserCertificateArrayOutput
}

type X509AuthenticationDatabaseUserCertificateArray []X509AuthenticationDatabaseUserCertificateInput

func (X509AuthenticationDatabaseUserCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i X509AuthenticationDatabaseUserCertificateArray) ToX509AuthenticationDatabaseUserCertificateArrayOutput() X509AuthenticationDatabaseUserCertificateArrayOutput {
	return i.ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Background())
}

func (i X509AuthenticationDatabaseUserCertificateArray) ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509AuthenticationDatabaseUserCertificateArrayOutput)
}

type X509AuthenticationDatabaseUserCertificateOutput struct{ *pulumi.OutputState }

func (X509AuthenticationDatabaseUserCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o X509AuthenticationDatabaseUserCertificateOutput) ToX509AuthenticationDatabaseUserCertificateOutput() X509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateOutput) ToX509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) NotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.NotAfter }).(pulumi.StringPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

type X509AuthenticationDatabaseUserCertificateArrayOutput struct{ *pulumi.OutputState }

func (X509AuthenticationDatabaseUserCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o X509AuthenticationDatabaseUserCertificateArrayOutput) ToX509AuthenticationDatabaseUserCertificateArrayOutput() X509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateArrayOutput) ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateArrayOutput) Index(i pulumi.IntInput) X509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) X509AuthenticationDatabaseUserCertificate {
		return vs[0].([]X509AuthenticationDatabaseUserCertificate)[vs[1].(int)]
	}).(X509AuthenticationDatabaseUserCertificateOutput)
}

type Get509AuthenticationDatabaseUserCertificate struct {
	CreatedAt string `pulumi:"createdAt"`
	GroupId   string `pulumi:"groupId"`
	Id        int    `pulumi:"id"`
	NotAfter  string `pulumi:"notAfter"`
	Subject   string `pulumi:"subject"`
}

// Get509AuthenticationDatabaseUserCertificateInput is an input type that accepts Get509AuthenticationDatabaseUserCertificateArgs and Get509AuthenticationDatabaseUserCertificateOutput values.
// You can construct a concrete instance of `Get509AuthenticationDatabaseUserCertificateInput` via:
//
//	Get509AuthenticationDatabaseUserCertificateArgs{...}
type Get509AuthenticationDatabaseUserCertificateInput interface {
	pulumi.Input

	ToGet509AuthenticationDatabaseUserCertificateOutput() Get509AuthenticationDatabaseUserCertificateOutput
	ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(context.Context) Get509AuthenticationDatabaseUserCertificateOutput
}

type Get509AuthenticationDatabaseUserCertificateArgs struct {
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	GroupId   pulumi.StringInput `pulumi:"groupId"`
	Id        pulumi.IntInput    `pulumi:"id"`
	NotAfter  pulumi.StringInput `pulumi:"notAfter"`
	Subject   pulumi.StringInput `pulumi:"subject"`
}

func (Get509AuthenticationDatabaseUserCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i Get509AuthenticationDatabaseUserCertificateArgs) ToGet509AuthenticationDatabaseUserCertificateOutput() Get509AuthenticationDatabaseUserCertificateOutput {
	return i.ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(context.Background())
}

func (i Get509AuthenticationDatabaseUserCertificateArgs) ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Get509AuthenticationDatabaseUserCertificateOutput)
}

// Get509AuthenticationDatabaseUserCertificateArrayInput is an input type that accepts Get509AuthenticationDatabaseUserCertificateArray and Get509AuthenticationDatabaseUserCertificateArrayOutput values.
// You can construct a concrete instance of `Get509AuthenticationDatabaseUserCertificateArrayInput` via:
//
//	Get509AuthenticationDatabaseUserCertificateArray{ Get509AuthenticationDatabaseUserCertificateArgs{...} }
type Get509AuthenticationDatabaseUserCertificateArrayInput interface {
	pulumi.Input

	ToGet509AuthenticationDatabaseUserCertificateArrayOutput() Get509AuthenticationDatabaseUserCertificateArrayOutput
	ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Context) Get509AuthenticationDatabaseUserCertificateArrayOutput
}

type Get509AuthenticationDatabaseUserCertificateArray []Get509AuthenticationDatabaseUserCertificateInput

func (Get509AuthenticationDatabaseUserCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i Get509AuthenticationDatabaseUserCertificateArray) ToGet509AuthenticationDatabaseUserCertificateArrayOutput() Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return i.ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Background())
}

func (i Get509AuthenticationDatabaseUserCertificateArray) ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Get509AuthenticationDatabaseUserCertificateArrayOutput)
}

type Get509AuthenticationDatabaseUserCertificateOutput struct{ *pulumi.OutputState }

func (Get509AuthenticationDatabaseUserCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) ToGet509AuthenticationDatabaseUserCertificateOutput() Get509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.GroupId }).(pulumi.StringOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) int { return v.Id }).(pulumi.IntOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) NotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.NotAfter }).(pulumi.StringOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.Subject }).(pulumi.StringOutput)
}

type Get509AuthenticationDatabaseUserCertificateArrayOutput struct{ *pulumi.OutputState }

func (Get509AuthenticationDatabaseUserCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o Get509AuthenticationDatabaseUserCertificateArrayOutput) ToGet509AuthenticationDatabaseUserCertificateArrayOutput() Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateArrayOutput) ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateArrayOutput) Index(i pulumi.IntInput) Get509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Get509AuthenticationDatabaseUserCertificate {
		return vs[0].([]Get509AuthenticationDatabaseUserCertificate)[vs[1].(int)]
	}).(Get509AuthenticationDatabaseUserCertificateOutput)
}

type GetAccessListApiKeysResult struct {
	AccessCount int `pulumi:"accessCount"`
	// Range of IP addresses in CIDR notation to be added to the access list.
	CidrBlock string `pulumi:"cidrBlock"`
	Created   string `pulumi:"created"`
	// Single IP address to be added to the access list.
	IpAddress       string `pulumi:"ipAddress"`
	LastUsed        string `pulumi:"lastUsed"`
	LastUsedAddress string `pulumi:"lastUsedAddress"`
}

// GetAccessListApiKeysResultInput is an input type that accepts GetAccessListApiKeysResultArgs and GetAccessListApiKeysResultOutput values.
// You can construct a concrete instance of `GetAccessListApiKeysResultInput` via:
//
//	GetAccessListApiKeysResultArgs{...}
type GetAccessListApiKeysResultInput interface {
	pulumi.Input

	ToGetAccessListApiKeysResultOutput() GetAccessListApiKeysResultOutput
	ToGetAccessListApiKeysResultOutputWithContext(context.Context) GetAccessListApiKeysResultOutput
}

type GetAccessListApiKeysResultArgs struct {
	AccessCount pulumi.IntInput `pulumi:"accessCount"`
	// Range of IP addresses in CIDR notation to be added to the access list.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	Created   pulumi.StringInput `pulumi:"created"`
	// Single IP address to be added to the access list.
	IpAddress       pulumi.StringInput `pulumi:"ipAddress"`
	LastUsed        pulumi.StringInput `pulumi:"lastUsed"`
	LastUsedAddress pulumi.StringInput `pulumi:"lastUsedAddress"`
}

func (GetAccessListApiKeysResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessListApiKeysResult)(nil)).Elem()
}

func (i GetAccessListApiKeysResultArgs) ToGetAccessListApiKeysResultOutput() GetAccessListApiKeysResultOutput {
	return i.ToGetAccessListApiKeysResultOutputWithContext(context.Background())
}

func (i GetAccessListApiKeysResultArgs) ToGetAccessListApiKeysResultOutputWithContext(ctx context.Context) GetAccessListApiKeysResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessListApiKeysResultOutput)
}

// GetAccessListApiKeysResultArrayInput is an input type that accepts GetAccessListApiKeysResultArray and GetAccessListApiKeysResultArrayOutput values.
// You can construct a concrete instance of `GetAccessListApiKeysResultArrayInput` via:
//
//	GetAccessListApiKeysResultArray{ GetAccessListApiKeysResultArgs{...} }
type GetAccessListApiKeysResultArrayInput interface {
	pulumi.Input

	ToGetAccessListApiKeysResultArrayOutput() GetAccessListApiKeysResultArrayOutput
	ToGetAccessListApiKeysResultArrayOutputWithContext(context.Context) GetAccessListApiKeysResultArrayOutput
}

type GetAccessListApiKeysResultArray []GetAccessListApiKeysResultInput

func (GetAccessListApiKeysResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessListApiKeysResult)(nil)).Elem()
}

func (i GetAccessListApiKeysResultArray) ToGetAccessListApiKeysResultArrayOutput() GetAccessListApiKeysResultArrayOutput {
	return i.ToGetAccessListApiKeysResultArrayOutputWithContext(context.Background())
}

func (i GetAccessListApiKeysResultArray) ToGetAccessListApiKeysResultArrayOutputWithContext(ctx context.Context) GetAccessListApiKeysResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessListApiKeysResultArrayOutput)
}

type GetAccessListApiKeysResultOutput struct{ *pulumi.OutputState }

func (GetAccessListApiKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessListApiKeysResult)(nil)).Elem()
}

func (o GetAccessListApiKeysResultOutput) ToGetAccessListApiKeysResultOutput() GetAccessListApiKeysResultOutput {
	return o
}

func (o GetAccessListApiKeysResultOutput) ToGetAccessListApiKeysResultOutputWithContext(ctx context.Context) GetAccessListApiKeysResultOutput {
	return o
}

func (o GetAccessListApiKeysResultOutput) AccessCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessListApiKeysResult) int { return v.AccessCount }).(pulumi.IntOutput)
}

// Range of IP addresses in CIDR notation to be added to the access list.
func (o GetAccessListApiKeysResultOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessListApiKeysResult) string { return v.CidrBlock }).(pulumi.StringOutput)
}

func (o GetAccessListApiKeysResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessListApiKeysResult) string { return v.Created }).(pulumi.StringOutput)
}

// Single IP address to be added to the access list.
func (o GetAccessListApiKeysResultOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessListApiKeysResult) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetAccessListApiKeysResultOutput) LastUsed() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessListApiKeysResult) string { return v.LastUsed }).(pulumi.StringOutput)
}

func (o GetAccessListApiKeysResultOutput) LastUsedAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessListApiKeysResult) string { return v.LastUsedAddress }).(pulumi.StringOutput)
}

type GetAccessListApiKeysResultArrayOutput struct{ *pulumi.OutputState }

func (GetAccessListApiKeysResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessListApiKeysResult)(nil)).Elem()
}

func (o GetAccessListApiKeysResultArrayOutput) ToGetAccessListApiKeysResultArrayOutput() GetAccessListApiKeysResultArrayOutput {
	return o
}

func (o GetAccessListApiKeysResultArrayOutput) ToGetAccessListApiKeysResultArrayOutputWithContext(ctx context.Context) GetAccessListApiKeysResultArrayOutput {
	return o
}

func (o GetAccessListApiKeysResultArrayOutput) Index(i pulumi.IntInput) GetAccessListApiKeysResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessListApiKeysResult {
		return vs[0].([]GetAccessListApiKeysResult)[vs[1].(int)]
	}).(GetAccessListApiKeysResultOutput)
}

type GetAdvancedClusterAdvancedConfiguration struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern string `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern string `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong bool `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled bool `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol string `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan bool `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours int `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb int `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector int `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector int `pulumi:"sampleSizeBiConnector"`
}

// GetAdvancedClusterAdvancedConfigurationInput is an input type that accepts GetAdvancedClusterAdvancedConfigurationArgs and GetAdvancedClusterAdvancedConfigurationOutput values.
// You can construct a concrete instance of `GetAdvancedClusterAdvancedConfigurationInput` via:
//
//	GetAdvancedClusterAdvancedConfigurationArgs{...}
type GetAdvancedClusterAdvancedConfigurationInput interface {
	pulumi.Input

	ToGetAdvancedClusterAdvancedConfigurationOutput() GetAdvancedClusterAdvancedConfigurationOutput
	ToGetAdvancedClusterAdvancedConfigurationOutputWithContext(context.Context) GetAdvancedClusterAdvancedConfigurationOutput
}

type GetAdvancedClusterAdvancedConfigurationArgs struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern pulumi.StringInput `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern pulumi.StringInput `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong pulumi.BoolInput `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled pulumi.BoolInput `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol pulumi.StringInput `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan pulumi.BoolInput `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours pulumi.IntInput `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb pulumi.IntInput `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector pulumi.IntInput `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector pulumi.IntInput `pulumi:"sampleSizeBiConnector"`
}

func (GetAdvancedClusterAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (i GetAdvancedClusterAdvancedConfigurationArgs) ToGetAdvancedClusterAdvancedConfigurationOutput() GetAdvancedClusterAdvancedConfigurationOutput {
	return i.ToGetAdvancedClusterAdvancedConfigurationOutputWithContext(context.Background())
}

func (i GetAdvancedClusterAdvancedConfigurationArgs) ToGetAdvancedClusterAdvancedConfigurationOutputWithContext(ctx context.Context) GetAdvancedClusterAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterAdvancedConfigurationOutput)
}

// GetAdvancedClusterAdvancedConfigurationArrayInput is an input type that accepts GetAdvancedClusterAdvancedConfigurationArray and GetAdvancedClusterAdvancedConfigurationArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterAdvancedConfigurationArrayInput` via:
//
//	GetAdvancedClusterAdvancedConfigurationArray{ GetAdvancedClusterAdvancedConfigurationArgs{...} }
type GetAdvancedClusterAdvancedConfigurationArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterAdvancedConfigurationArrayOutput() GetAdvancedClusterAdvancedConfigurationArrayOutput
	ToGetAdvancedClusterAdvancedConfigurationArrayOutputWithContext(context.Context) GetAdvancedClusterAdvancedConfigurationArrayOutput
}

type GetAdvancedClusterAdvancedConfigurationArray []GetAdvancedClusterAdvancedConfigurationInput

func (GetAdvancedClusterAdvancedConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (i GetAdvancedClusterAdvancedConfigurationArray) ToGetAdvancedClusterAdvancedConfigurationArrayOutput() GetAdvancedClusterAdvancedConfigurationArrayOutput {
	return i.ToGetAdvancedClusterAdvancedConfigurationArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterAdvancedConfigurationArray) ToGetAdvancedClusterAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetAdvancedClusterAdvancedConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterAdvancedConfigurationArrayOutput)
}

type GetAdvancedClusterAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (o GetAdvancedClusterAdvancedConfigurationOutput) ToGetAdvancedClusterAdvancedConfigurationOutput() GetAdvancedClusterAdvancedConfigurationOutput {
	return o
}

func (o GetAdvancedClusterAdvancedConfigurationOutput) ToGetAdvancedClusterAdvancedConfigurationOutputWithContext(ctx context.Context) GetAdvancedClusterAdvancedConfigurationOutput {
	return o
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o GetAdvancedClusterAdvancedConfigurationOutput) DefaultReadConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) string { return v.DefaultReadConcern }).(pulumi.StringOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o GetAdvancedClusterAdvancedConfigurationOutput) DefaultWriteConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) string { return v.DefaultWriteConcern }).(pulumi.StringOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o GetAdvancedClusterAdvancedConfigurationOutput) FailIndexKeyTooLong() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) bool { return v.FailIndexKeyTooLong }).(pulumi.BoolOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o GetAdvancedClusterAdvancedConfigurationOutput) JavascriptEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) bool { return v.JavascriptEnabled }).(pulumi.BoolOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o GetAdvancedClusterAdvancedConfigurationOutput) MinimumEnabledTlsProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) string { return v.MinimumEnabledTlsProtocol }).(pulumi.StringOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o GetAdvancedClusterAdvancedConfigurationOutput) NoTableScan() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) bool { return v.NoTableScan }).(pulumi.BoolOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
func (o GetAdvancedClusterAdvancedConfigurationOutput) OplogMinRetentionHours() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) int { return v.OplogMinRetentionHours }).(pulumi.IntOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o GetAdvancedClusterAdvancedConfigurationOutput) OplogSizeMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) int { return v.OplogSizeMb }).(pulumi.IntOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetAdvancedClusterAdvancedConfigurationOutput) SampleRefreshIntervalBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) int { return v.SampleRefreshIntervalBiConnector }).(pulumi.IntOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetAdvancedClusterAdvancedConfigurationOutput) SampleSizeBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) int { return v.SampleSizeBiConnector }).(pulumi.IntOutput)
}

type GetAdvancedClusterAdvancedConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterAdvancedConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (o GetAdvancedClusterAdvancedConfigurationArrayOutput) ToGetAdvancedClusterAdvancedConfigurationArrayOutput() GetAdvancedClusterAdvancedConfigurationArrayOutput {
	return o
}

func (o GetAdvancedClusterAdvancedConfigurationArrayOutput) ToGetAdvancedClusterAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetAdvancedClusterAdvancedConfigurationArrayOutput {
	return o
}

func (o GetAdvancedClusterAdvancedConfigurationArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterAdvancedConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterAdvancedConfiguration {
		return vs[0].([]GetAdvancedClusterAdvancedConfiguration)[vs[1].(int)]
	}).(GetAdvancedClusterAdvancedConfigurationOutput)
}

type GetAdvancedClusterBiConnectorConfig struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	Enabled bool `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference string `pulumi:"readPreference"`
}

// GetAdvancedClusterBiConnectorConfigInput is an input type that accepts GetAdvancedClusterBiConnectorConfigArgs and GetAdvancedClusterBiConnectorConfigOutput values.
// You can construct a concrete instance of `GetAdvancedClusterBiConnectorConfigInput` via:
//
//	GetAdvancedClusterBiConnectorConfigArgs{...}
type GetAdvancedClusterBiConnectorConfigInput interface {
	pulumi.Input

	ToGetAdvancedClusterBiConnectorConfigOutput() GetAdvancedClusterBiConnectorConfigOutput
	ToGetAdvancedClusterBiConnectorConfigOutputWithContext(context.Context) GetAdvancedClusterBiConnectorConfigOutput
}

type GetAdvancedClusterBiConnectorConfigArgs struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringInput `pulumi:"readPreference"`
}

func (GetAdvancedClusterBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (i GetAdvancedClusterBiConnectorConfigArgs) ToGetAdvancedClusterBiConnectorConfigOutput() GetAdvancedClusterBiConnectorConfigOutput {
	return i.ToGetAdvancedClusterBiConnectorConfigOutputWithContext(context.Background())
}

func (i GetAdvancedClusterBiConnectorConfigArgs) ToGetAdvancedClusterBiConnectorConfigOutputWithContext(ctx context.Context) GetAdvancedClusterBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterBiConnectorConfigOutput)
}

// GetAdvancedClusterBiConnectorConfigArrayInput is an input type that accepts GetAdvancedClusterBiConnectorConfigArray and GetAdvancedClusterBiConnectorConfigArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterBiConnectorConfigArrayInput` via:
//
//	GetAdvancedClusterBiConnectorConfigArray{ GetAdvancedClusterBiConnectorConfigArgs{...} }
type GetAdvancedClusterBiConnectorConfigArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterBiConnectorConfigArrayOutput() GetAdvancedClusterBiConnectorConfigArrayOutput
	ToGetAdvancedClusterBiConnectorConfigArrayOutputWithContext(context.Context) GetAdvancedClusterBiConnectorConfigArrayOutput
}

type GetAdvancedClusterBiConnectorConfigArray []GetAdvancedClusterBiConnectorConfigInput

func (GetAdvancedClusterBiConnectorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (i GetAdvancedClusterBiConnectorConfigArray) ToGetAdvancedClusterBiConnectorConfigArrayOutput() GetAdvancedClusterBiConnectorConfigArrayOutput {
	return i.ToGetAdvancedClusterBiConnectorConfigArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterBiConnectorConfigArray) ToGetAdvancedClusterBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClusterBiConnectorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterBiConnectorConfigArrayOutput)
}

type GetAdvancedClusterBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (o GetAdvancedClusterBiConnectorConfigOutput) ToGetAdvancedClusterBiConnectorConfigOutput() GetAdvancedClusterBiConnectorConfigOutput {
	return o
}

func (o GetAdvancedClusterBiConnectorConfigOutput) ToGetAdvancedClusterBiConnectorConfigOutputWithContext(ctx context.Context) GetAdvancedClusterBiConnectorConfigOutput {
	return o
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
func (o GetAdvancedClusterBiConnectorConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterBiConnectorConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o GetAdvancedClusterBiConnectorConfigOutput) ReadPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterBiConnectorConfig) string { return v.ReadPreference }).(pulumi.StringOutput)
}

type GetAdvancedClusterBiConnectorConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterBiConnectorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (o GetAdvancedClusterBiConnectorConfigArrayOutput) ToGetAdvancedClusterBiConnectorConfigArrayOutput() GetAdvancedClusterBiConnectorConfigArrayOutput {
	return o
}

func (o GetAdvancedClusterBiConnectorConfigArrayOutput) ToGetAdvancedClusterBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClusterBiConnectorConfigArrayOutput {
	return o
}

func (o GetAdvancedClusterBiConnectorConfigArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterBiConnectorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterBiConnectorConfig {
		return vs[0].([]GetAdvancedClusterBiConnectorConfig)[vs[1].(int)]
	}).(GetAdvancedClusterBiConnectorConfigOutput)
}

type GetAdvancedClusterConnectionString struct {
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
	AwsPrivateLink map[string]interface{} `pulumi:"awsPrivateLink"`
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
	AwsPrivateLinkSrv map[string]interface{}                              `pulumi:"awsPrivateLinkSrv"`
	Private           string                                              `pulumi:"private"`
	PrivateEndpoints  []GetAdvancedClusterConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        string                                              `pulumi:"privateSrv"`
	Standard          string                                              `pulumi:"standard"`
	StandardSrv       string                                              `pulumi:"standardSrv"`
}

// GetAdvancedClusterConnectionStringInput is an input type that accepts GetAdvancedClusterConnectionStringArgs and GetAdvancedClusterConnectionStringOutput values.
// You can construct a concrete instance of `GetAdvancedClusterConnectionStringInput` via:
//
//	GetAdvancedClusterConnectionStringArgs{...}
type GetAdvancedClusterConnectionStringInput interface {
	pulumi.Input

	ToGetAdvancedClusterConnectionStringOutput() GetAdvancedClusterConnectionStringOutput
	ToGetAdvancedClusterConnectionStringOutputWithContext(context.Context) GetAdvancedClusterConnectionStringOutput
}

type GetAdvancedClusterConnectionStringArgs struct {
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
	AwsPrivateLink pulumi.MapInput `pulumi:"awsPrivateLink"`
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
	AwsPrivateLinkSrv pulumi.MapInput                                             `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringInput                                          `pulumi:"private"`
	PrivateEndpoints  GetAdvancedClusterConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringInput                                          `pulumi:"privateSrv"`
	Standard          pulumi.StringInput                                          `pulumi:"standard"`
	StandardSrv       pulumi.StringInput                                          `pulumi:"standardSrv"`
}

func (GetAdvancedClusterConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterConnectionString)(nil)).Elem()
}

func (i GetAdvancedClusterConnectionStringArgs) ToGetAdvancedClusterConnectionStringOutput() GetAdvancedClusterConnectionStringOutput {
	return i.ToGetAdvancedClusterConnectionStringOutputWithContext(context.Background())
}

func (i GetAdvancedClusterConnectionStringArgs) ToGetAdvancedClusterConnectionStringOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterConnectionStringOutput)
}

// GetAdvancedClusterConnectionStringArrayInput is an input type that accepts GetAdvancedClusterConnectionStringArray and GetAdvancedClusterConnectionStringArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterConnectionStringArrayInput` via:
//
//	GetAdvancedClusterConnectionStringArray{ GetAdvancedClusterConnectionStringArgs{...} }
type GetAdvancedClusterConnectionStringArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterConnectionStringArrayOutput() GetAdvancedClusterConnectionStringArrayOutput
	ToGetAdvancedClusterConnectionStringArrayOutputWithContext(context.Context) GetAdvancedClusterConnectionStringArrayOutput
}

type GetAdvancedClusterConnectionStringArray []GetAdvancedClusterConnectionStringInput

func (GetAdvancedClusterConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterConnectionString)(nil)).Elem()
}

func (i GetAdvancedClusterConnectionStringArray) ToGetAdvancedClusterConnectionStringArrayOutput() GetAdvancedClusterConnectionStringArrayOutput {
	return i.ToGetAdvancedClusterConnectionStringArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterConnectionStringArray) ToGetAdvancedClusterConnectionStringArrayOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterConnectionStringArrayOutput)
}

type GetAdvancedClusterConnectionStringOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterConnectionString)(nil)).Elem()
}

func (o GetAdvancedClusterConnectionStringOutput) ToGetAdvancedClusterConnectionStringOutput() GetAdvancedClusterConnectionStringOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringOutput) ToGetAdvancedClusterConnectionStringOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringOutput {
	return o
}

// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
func (o GetAdvancedClusterConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
func (o GetAdvancedClusterConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o GetAdvancedClusterConnectionStringOutput) Private() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionString) string { return v.Private }).(pulumi.StringOutput)
}

func (o GetAdvancedClusterConnectionStringOutput) PrivateEndpoints() GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionString) []GetAdvancedClusterConnectionStringPrivateEndpoint {
		return v.PrivateEndpoints
	}).(GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput)
}

func (o GetAdvancedClusterConnectionStringOutput) PrivateSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionString) string { return v.PrivateSrv }).(pulumi.StringOutput)
}

func (o GetAdvancedClusterConnectionStringOutput) Standard() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionString) string { return v.Standard }).(pulumi.StringOutput)
}

func (o GetAdvancedClusterConnectionStringOutput) StandardSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionString) string { return v.StandardSrv }).(pulumi.StringOutput)
}

type GetAdvancedClusterConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterConnectionString)(nil)).Elem()
}

func (o GetAdvancedClusterConnectionStringArrayOutput) ToGetAdvancedClusterConnectionStringArrayOutput() GetAdvancedClusterConnectionStringArrayOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringArrayOutput) ToGetAdvancedClusterConnectionStringArrayOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringArrayOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterConnectionString {
		return vs[0].([]GetAdvancedClusterConnectionString)[vs[1].(int)]
	}).(GetAdvancedClusterConnectionStringOutput)
}

type GetAdvancedClusterConnectionStringPrivateEndpoint struct {
	ConnectionString    string                                                      `pulumi:"connectionString"`
	Endpoints           []GetAdvancedClusterConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString string                                                      `pulumi:"srvConnectionString"`
	Type                string                                                      `pulumi:"type"`
}

// GetAdvancedClusterConnectionStringPrivateEndpointInput is an input type that accepts GetAdvancedClusterConnectionStringPrivateEndpointArgs and GetAdvancedClusterConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `GetAdvancedClusterConnectionStringPrivateEndpointInput` via:
//
//	GetAdvancedClusterConnectionStringPrivateEndpointArgs{...}
type GetAdvancedClusterConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToGetAdvancedClusterConnectionStringPrivateEndpointOutput() GetAdvancedClusterConnectionStringPrivateEndpointOutput
	ToGetAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(context.Context) GetAdvancedClusterConnectionStringPrivateEndpointOutput
}

type GetAdvancedClusterConnectionStringPrivateEndpointArgs struct {
	ConnectionString    pulumi.StringInput                                                  `pulumi:"connectionString"`
	Endpoints           GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString pulumi.StringInput                                                  `pulumi:"srvConnectionString"`
	Type                pulumi.StringInput                                                  `pulumi:"type"`
}

func (GetAdvancedClusterConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointArgs) ToGetAdvancedClusterConnectionStringPrivateEndpointOutput() GetAdvancedClusterConnectionStringPrivateEndpointOutput {
	return i.ToGetAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointArgs) ToGetAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterConnectionStringPrivateEndpointOutput)
}

// GetAdvancedClusterConnectionStringPrivateEndpointArrayInput is an input type that accepts GetAdvancedClusterConnectionStringPrivateEndpointArray and GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterConnectionStringPrivateEndpointArrayInput` via:
//
//	GetAdvancedClusterConnectionStringPrivateEndpointArray{ GetAdvancedClusterConnectionStringPrivateEndpointArgs{...} }
type GetAdvancedClusterConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutput() GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput
	ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput
}

type GetAdvancedClusterConnectionStringPrivateEndpointArray []GetAdvancedClusterConnectionStringPrivateEndpointInput

func (GetAdvancedClusterConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointArray) ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutput() GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return i.ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointArray) ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput)
}

type GetAdvancedClusterConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointOutput() GetAdvancedClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpoint) string { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointOutput) Endpoints() GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpoint) []GetAdvancedClusterConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpoint) string { return v.SrvConnectionString }).(pulumi.StringOutput)
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

type GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutput() GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterConnectionStringPrivateEndpoint {
		return vs[0].([]GetAdvancedClusterConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(GetAdvancedClusterConnectionStringPrivateEndpointOutput)
}

type GetAdvancedClusterConnectionStringPrivateEndpointEndpoint struct {
	EndpointId string `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	Region       string `pulumi:"region"`
}

// GetAdvancedClusterConnectionStringPrivateEndpointEndpointInput is an input type that accepts GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs and GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `GetAdvancedClusterConnectionStringPrivateEndpointEndpointInput` via:
//
//	GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs{...}
type GetAdvancedClusterConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput() GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput
	ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput
}

type GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	Region       pulumi.StringInput `pulumi:"region"`
}

func (GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput() GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return i.ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput)
}

// GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray and GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//	GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray{ GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs{...} }
type GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput
	ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput
}

type GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray []GetAdvancedClusterConnectionStringPrivateEndpointEndpointInput

func (GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

type GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput() GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpointEndpoint) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Cloud service provider on which the servers are provisioned.
func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpointEndpoint) string { return v.ProviderName }).(pulumi.StringOutput)
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpointEndpoint) string { return v.Region }).(pulumi.StringOutput)
}

type GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]GetAdvancedClusterConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput)
}

type GetAdvancedClusterLabel struct {
	// The key that you want to write.
	Key string `pulumi:"key"`
	// The value that you want to write.
	Value string `pulumi:"value"`
}

// GetAdvancedClusterLabelInput is an input type that accepts GetAdvancedClusterLabelArgs and GetAdvancedClusterLabelOutput values.
// You can construct a concrete instance of `GetAdvancedClusterLabelInput` via:
//
//	GetAdvancedClusterLabelArgs{...}
type GetAdvancedClusterLabelInput interface {
	pulumi.Input

	ToGetAdvancedClusterLabelOutput() GetAdvancedClusterLabelOutput
	ToGetAdvancedClusterLabelOutputWithContext(context.Context) GetAdvancedClusterLabelOutput
}

type GetAdvancedClusterLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAdvancedClusterLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterLabel)(nil)).Elem()
}

func (i GetAdvancedClusterLabelArgs) ToGetAdvancedClusterLabelOutput() GetAdvancedClusterLabelOutput {
	return i.ToGetAdvancedClusterLabelOutputWithContext(context.Background())
}

func (i GetAdvancedClusterLabelArgs) ToGetAdvancedClusterLabelOutputWithContext(ctx context.Context) GetAdvancedClusterLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterLabelOutput)
}

// GetAdvancedClusterLabelArrayInput is an input type that accepts GetAdvancedClusterLabelArray and GetAdvancedClusterLabelArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterLabelArrayInput` via:
//
//	GetAdvancedClusterLabelArray{ GetAdvancedClusterLabelArgs{...} }
type GetAdvancedClusterLabelArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterLabelArrayOutput() GetAdvancedClusterLabelArrayOutput
	ToGetAdvancedClusterLabelArrayOutputWithContext(context.Context) GetAdvancedClusterLabelArrayOutput
}

type GetAdvancedClusterLabelArray []GetAdvancedClusterLabelInput

func (GetAdvancedClusterLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterLabel)(nil)).Elem()
}

func (i GetAdvancedClusterLabelArray) ToGetAdvancedClusterLabelArrayOutput() GetAdvancedClusterLabelArrayOutput {
	return i.ToGetAdvancedClusterLabelArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterLabelArray) ToGetAdvancedClusterLabelArrayOutputWithContext(ctx context.Context) GetAdvancedClusterLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterLabelArrayOutput)
}

type GetAdvancedClusterLabelOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterLabel)(nil)).Elem()
}

func (o GetAdvancedClusterLabelOutput) ToGetAdvancedClusterLabelOutput() GetAdvancedClusterLabelOutput {
	return o
}

func (o GetAdvancedClusterLabelOutput) ToGetAdvancedClusterLabelOutputWithContext(ctx context.Context) GetAdvancedClusterLabelOutput {
	return o
}

// The key that you want to write.
func (o GetAdvancedClusterLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that you want to write.
func (o GetAdvancedClusterLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetAdvancedClusterLabelArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterLabel)(nil)).Elem()
}

func (o GetAdvancedClusterLabelArrayOutput) ToGetAdvancedClusterLabelArrayOutput() GetAdvancedClusterLabelArrayOutput {
	return o
}

func (o GetAdvancedClusterLabelArrayOutput) ToGetAdvancedClusterLabelArrayOutputWithContext(ctx context.Context) GetAdvancedClusterLabelArrayOutput {
	return o
}

func (o GetAdvancedClusterLabelArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterLabel {
		return vs[0].([]GetAdvancedClusterLabel)[vs[1].(int)]
	}).(GetAdvancedClusterLabelOutput)
}

type GetAdvancedClusterReplicationSpec struct {
	// A key-value map of the Network Peering Container ID(s) for the configuration specified in `regionConfigs`. The Container ID is the id of the container either created programmatically by the user before any clusters existed in a project or when the first cluster in the region (AWS/Azure) or project (GCP) was created.  The syntax is `"providerName:regionName" = "containerId"`. Example `AWS:US_EAST_1" = "61e0797dde08fb498ca11a71`.
	ContainerId map[string]string `pulumi:"containerId"`
	Id          string            `pulumi:"id"`
	// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED.
	NumShards int `pulumi:"numShards"`
	// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
	RegionConfigs []GetAdvancedClusterReplicationSpecRegionConfig `pulumi:"regionConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName string `pulumi:"zoneName"`
}

// GetAdvancedClusterReplicationSpecInput is an input type that accepts GetAdvancedClusterReplicationSpecArgs and GetAdvancedClusterReplicationSpecOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecInput` via:
//
//	GetAdvancedClusterReplicationSpecArgs{...}
type GetAdvancedClusterReplicationSpecInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecOutput() GetAdvancedClusterReplicationSpecOutput
	ToGetAdvancedClusterReplicationSpecOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecOutput
}

type GetAdvancedClusterReplicationSpecArgs struct {
	// A key-value map of the Network Peering Container ID(s) for the configuration specified in `regionConfigs`. The Container ID is the id of the container either created programmatically by the user before any clusters existed in a project or when the first cluster in the region (AWS/Azure) or project (GCP) was created.  The syntax is `"providerName:regionName" = "containerId"`. Example `AWS:US_EAST_1" = "61e0797dde08fb498ca11a71`.
	ContainerId pulumi.StringMapInput `pulumi:"containerId"`
	Id          pulumi.StringInput    `pulumi:"id"`
	// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
	RegionConfigs GetAdvancedClusterReplicationSpecRegionConfigArrayInput `pulumi:"regionConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetAdvancedClusterReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpec)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecArgs) ToGetAdvancedClusterReplicationSpecOutput() GetAdvancedClusterReplicationSpecOutput {
	return i.ToGetAdvancedClusterReplicationSpecOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecArgs) ToGetAdvancedClusterReplicationSpecOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecOutput)
}

// GetAdvancedClusterReplicationSpecArrayInput is an input type that accepts GetAdvancedClusterReplicationSpecArray and GetAdvancedClusterReplicationSpecArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecArrayInput` via:
//
//	GetAdvancedClusterReplicationSpecArray{ GetAdvancedClusterReplicationSpecArgs{...} }
type GetAdvancedClusterReplicationSpecArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecArrayOutput() GetAdvancedClusterReplicationSpecArrayOutput
	ToGetAdvancedClusterReplicationSpecArrayOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecArrayOutput
}

type GetAdvancedClusterReplicationSpecArray []GetAdvancedClusterReplicationSpecInput

func (GetAdvancedClusterReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpec)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecArray) ToGetAdvancedClusterReplicationSpecArrayOutput() GetAdvancedClusterReplicationSpecArrayOutput {
	return i.ToGetAdvancedClusterReplicationSpecArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecArray) ToGetAdvancedClusterReplicationSpecArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecArrayOutput)
}

type GetAdvancedClusterReplicationSpecOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpec)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecOutput) ToGetAdvancedClusterReplicationSpecOutput() GetAdvancedClusterReplicationSpecOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecOutput) ToGetAdvancedClusterReplicationSpecOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecOutput {
	return o
}

// A key-value map of the Network Peering Container ID(s) for the configuration specified in `regionConfigs`. The Container ID is the id of the container either created programmatically by the user before any clusters existed in a project or when the first cluster in the region (AWS/Azure) or project (GCP) was created.  The syntax is `"providerName:regionName" = "containerId"`. Example `AWS:US_EAST_1" = "61e0797dde08fb498ca11a71`.
func (o GetAdvancedClusterReplicationSpecOutput) ContainerId() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpec) map[string]string { return v.ContainerId }).(pulumi.StringMapOutput)
}

func (o GetAdvancedClusterReplicationSpecOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpec) string { return v.Id }).(pulumi.StringOutput)
}

// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED.
func (o GetAdvancedClusterReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
func (o GetAdvancedClusterReplicationSpecOutput) RegionConfigs() GetAdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpec) []GetAdvancedClusterReplicationSpecRegionConfig {
		return v.RegionConfigs
	}).(GetAdvancedClusterReplicationSpecRegionConfigArrayOutput)
}

// Name for the zone in a Global Cluster.
func (o GetAdvancedClusterReplicationSpecOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpec) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetAdvancedClusterReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpec)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecArrayOutput) ToGetAdvancedClusterReplicationSpecArrayOutput() GetAdvancedClusterReplicationSpecArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecArrayOutput) ToGetAdvancedClusterReplicationSpecArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterReplicationSpec {
		return vs[0].([]GetAdvancedClusterReplicationSpec)[vs[1].(int)]
	}).(GetAdvancedClusterReplicationSpecOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfig struct {
	// Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. See below
	AnalyticsAutoScalings []GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling `pulumi:"analyticsAutoScalings"`
	// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. See below
	AnalyticsSpecs *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs `pulumi:"analyticsSpecs"`
	// Configuration for the Collection of settings that configures auto-scaling information for the cluster. See below
	AutoScalings []GetAdvancedClusterReplicationSpecRegionConfigAutoScaling `pulumi:"autoScalings"`
	// Cloud service provider on which you provision the host for a multi-tenant cluster.
	BackingProviderName string `pulumi:"backingProviderName"`
	// Hardware specifications for electable nodes in the region.
	ElectableSpecs *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs `pulumi:"electableSpecs"`
	// Election priority of the region.
	Priority int `pulumi:"priority"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	// Hardware specifications for read-only nodes in the region. See below
	ReadOnlySpecs *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs `pulumi:"readOnlySpecs"`
	// Physical location of your MongoDB cluster.
	RegionName string `pulumi:"regionName"`
}

// GetAdvancedClusterReplicationSpecRegionConfigInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigArgs and GetAdvancedClusterReplicationSpecRegionConfigOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigArgs{...}
type GetAdvancedClusterReplicationSpecRegionConfigInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigOutput() GetAdvancedClusterReplicationSpecRegionConfigOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigArgs struct {
	// Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. See below
	AnalyticsAutoScalings GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput `pulumi:"analyticsAutoScalings"`
	// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. See below
	AnalyticsSpecs GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput `pulumi:"analyticsSpecs"`
	// Configuration for the Collection of settings that configures auto-scaling information for the cluster. See below
	AutoScalings GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayInput `pulumi:"autoScalings"`
	// Cloud service provider on which you provision the host for a multi-tenant cluster.
	BackingProviderName pulumi.StringInput `pulumi:"backingProviderName"`
	// Hardware specifications for electable nodes in the region.
	ElectableSpecs GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput `pulumi:"electableSpecs"`
	// Election priority of the region.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Hardware specifications for read-only nodes in the region. See below
	ReadOnlySpecs GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput `pulumi:"readOnlySpecs"`
	// Physical location of your MongoDB cluster.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetAdvancedClusterReplicationSpecRegionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigArgs) ToGetAdvancedClusterReplicationSpecRegionConfigOutput() GetAdvancedClusterReplicationSpecRegionConfigOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigArgs) ToGetAdvancedClusterReplicationSpecRegionConfigOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigOutput)
}

// GetAdvancedClusterReplicationSpecRegionConfigArrayInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigArray and GetAdvancedClusterReplicationSpecRegionConfigArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigArrayInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigArray{ GetAdvancedClusterReplicationSpecRegionConfigArgs{...} }
type GetAdvancedClusterReplicationSpecRegionConfigArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigArrayOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigArrayOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigArray []GetAdvancedClusterReplicationSpecRegionConfigInput

func (GetAdvancedClusterReplicationSpecRegionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigArray) ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigArray) ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigArrayOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) ToGetAdvancedClusterReplicationSpecRegionConfigOutput() GetAdvancedClusterReplicationSpecRegionConfigOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) ToGetAdvancedClusterReplicationSpecRegionConfigOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigOutput {
	return o
}

// Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. See below
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) AnalyticsAutoScalings() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) []GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling {
		return v.AnalyticsAutoScalings
	}).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput)
}

// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. See below
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) AnalyticsSpecs() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
		return v.AnalyticsSpecs
	}).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

// Configuration for the Collection of settings that configures auto-scaling information for the cluster. See below
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) AutoScalings() GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) []GetAdvancedClusterReplicationSpecRegionConfigAutoScaling {
		return v.AutoScalings
	}).(GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput)
}

// Cloud service provider on which you provision the host for a multi-tenant cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) BackingProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) string { return v.BackingProviderName }).(pulumi.StringOutput)
}

// Hardware specifications for electable nodes in the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) ElectableSpecs() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs {
		return v.ElectableSpecs
	}).(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

// Election priority of the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Cloud service provider on which the servers are provisioned.
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Hardware specifications for read-only nodes in the region. See below
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) ReadOnlySpecs() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
		return v.ReadOnlySpecs
	}).(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

// Physical location of your MongoDB cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigArrayOutput) ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigArrayOutput) ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterReplicationSpecRegionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterReplicationSpecRegionConfig {
		return vs[0].([]GetAdvancedClusterReplicationSpecRegionConfig)[vs[1].(int)]
	}).(GetAdvancedClusterReplicationSpecRegionConfigOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled bool `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	// #### Advanced Configuration
	ComputeMaxInstanceSize string `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize string `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled bool `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled bool `pulumi:"diskGbEnabled"`
}

// GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs and GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs{...}
type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled pulumi.BoolInput `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	// #### Advanced Configuration
	ComputeMaxInstanceSize pulumi.StringInput `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize pulumi.StringInput `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled pulumi.BoolInput `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled pulumi.BoolInput `pulumi:"diskGbEnabled"`
}

func (GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput)
}

// GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray and GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray{ GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs{...} }
type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray []GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput

func (GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return o
}

// Flag that indicates whether instance size auto-scaling is enabled.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) bool {
		return v.ComputeEnabled
	}).(pulumi.BoolOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40).
// #### Advanced Configuration
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeMaxInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) string {
		return v.ComputeMaxInstanceSize
	}).(pulumi.StringOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10).
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeMinInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) string {
		return v.ComputeMinInstanceSize
	}).(pulumi.StringOutput)
}

// Flag that indicates whether the instance size may scale down.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeScaleDownEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) bool {
		return v.ComputeScaleDownEnabled
	}).(pulumi.BoolOutput)
}

// Flag that indicates whether this cluster enables disk auto-scaling.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) DiskGbEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) bool { return v.DiskGbEnabled }).(pulumi.BoolOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling {
		return vs[0].([]GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)[vs[1].(int)]
	}).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs and GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{...}
type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput)
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput).ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx)
}

// GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs, GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtr and GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput` via:
//
//	        GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{...}
//
//	or:
//
//	        nil
type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput
}

type getAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs

func GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtr(v *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput {
	return (*getAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType)(v)
}

func (*getAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (i *getAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (i *getAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
		return &v
	}).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *string { return v.EbsVolumeType }).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) string { return v.InstanceSize }).(pulumi.StringOutput)
}

// Number of read-only nodes for Atlas to deploy to the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) Elem() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
		if v != nil {
			return *v
		}
		var ret GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs
		return ret
	}).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of read-only nodes for Atlas to deploy to the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAutoScaling struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled bool `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	// #### Advanced Configuration
	ComputeMaxInstanceSize string `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize string `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled bool `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled bool `pulumi:"diskGbEnabled"`
}

// GetAdvancedClusterReplicationSpecRegionConfigAutoScalingInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs and GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigAutoScalingInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs{...}
type GetAdvancedClusterReplicationSpecRegionConfigAutoScalingInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput() GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled pulumi.BoolInput `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	// #### Advanced Configuration
	ComputeMaxInstanceSize pulumi.StringInput `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize pulumi.StringInput `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled pulumi.BoolInput `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled pulumi.BoolInput `pulumi:"diskGbEnabled"`
}

func (GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput() GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput)
}

// GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray and GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray{ GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs{...} }
type GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray []GetAdvancedClusterReplicationSpecRegionConfigAutoScalingInput

func (GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput() GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return o
}

// Flag that indicates whether instance size auto-scaling is enabled.
func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAutoScaling) bool { return v.ComputeEnabled }).(pulumi.BoolOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40).
// #### Advanced Configuration
func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeMaxInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAutoScaling) string {
		return v.ComputeMaxInstanceSize
	}).(pulumi.StringOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10).
func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeMinInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAutoScaling) string {
		return v.ComputeMinInstanceSize
	}).(pulumi.StringOutput)
}

// Flag that indicates whether the instance size may scale down.
func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeScaleDownEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAutoScaling) bool {
		return v.ComputeScaleDownEnabled
	}).(pulumi.BoolOutput)
}

// Flag that indicates whether this cluster enables disk auto-scaling.
func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) DiskGbEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAutoScaling) bool { return v.DiskGbEnabled }).(pulumi.BoolOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterReplicationSpecRegionConfigAutoScaling {
		return vs[0].([]GetAdvancedClusterReplicationSpecRegionConfigAutoScaling)[vs[1].(int)]
	}).(GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs and GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{...}
type GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput)
}

func (i GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput).ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx)
}

// GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs, GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtr and GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput` via:
//
//	        GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{...}
//
//	or:
//
//	        nil
type GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput
}

type getAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrType GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs

func GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtr(v *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput {
	return (*getAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrType)(v)
}

func (*getAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (i *getAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrType) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (i *getAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrType) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs {
		return &v
	}).(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *string { return v.EbsVolumeType }).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) string { return v.InstanceSize }).(pulumi.StringOutput)
}

// Number of read-only nodes for Atlas to deploy to the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) Elem() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs {
		if v != nil {
			return *v
		}
		var ret GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs
		return ret
	}).(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of read-only nodes for Atlas to deploy to the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs and GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{...}
type GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput)
}

func (i GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput).ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx)
}

// GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs, GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtr and GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput` via:
//
//	        GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{...}
//
//	or:
//
//	        nil
type GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput
}

type getAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs

func GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtr(v *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput {
	return (*getAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType)(v)
}

func (*getAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (i *getAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (i *getAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
		return &v
	}).(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *string { return v.EbsVolumeType }).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) string { return v.InstanceSize }).(pulumi.StringOutput)
}

// Number of read-only nodes for Atlas to deploy to the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) Elem() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
		if v != nil {
			return *v
		}
		var ret GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs
		return ret
	}).(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of read-only nodes for Atlas to deploy to the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type GetAdvancedClustersResult struct {
	// Get the advanced configuration options. See Advanced Configuration below for more details.
	AdvancedConfigurations []GetAdvancedClustersResultAdvancedConfiguration `pulumi:"advancedConfigurations"`
	BackupEnabled          bool                                             `pulumi:"backupEnabled"`
	// Configuration settings applied to BI Connector for Atlas on this cluster. See below. **NOTE** Prior version of provider had parameter as `biConnector`
	BiConnectorConfigs []GetAdvancedClustersResultBiConnectorConfig `pulumi:"biConnectorConfigs"`
	// Type of the cluster that you want to create.
	ClusterType string `pulumi:"clusterType"`
	// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
	ConnectionStrings []GetAdvancedClustersResultConnectionString `pulumi:"connectionStrings"`
	CreateDate        string                                      `pulumi:"createDate"`
	// Capacity, in gigabytes, of the host's root volume.
	DiskSizeGb float64 `pulumi:"diskSizeGb"`
	// Possible values are AWS, GCP, AZURE or NONE.
	EncryptionAtRestProvider string `pulumi:"encryptionAtRestProvider"`
	// Configuration for the collection of key-value pairs that tag and categorize the cluster. See below.
	Labels []GetAdvancedClustersResultLabel `pulumi:"labels"`
	// Version of the cluster to deploy.
	MongoDbMajorVersion string `pulumi:"mongoDbMajorVersion"`
	// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
	MongoDbVersion string `pulumi:"mongoDbVersion"`
	Name           string `pulumi:"name"`
	// Flag that indicates whether the cluster is paused or not.
	Paused bool `pulumi:"paused"`
	// Flag that indicates if the cluster uses Continuous Cloud Backup.
	PitEnabled bool `pulumi:"pitEnabled"`
	// Configuration for cluster regions and the hardware provisioned in them. See below
	ReplicationSpecs []GetAdvancedClustersResultReplicationSpec `pulumi:"replicationSpecs"`
	// Certificate Authority that MongoDB Atlas clusters use.
	RootCertType string `pulumi:"rootCertType"`
	// Current state of the cluster. The possible states are:
	StateName string `pulumi:"stateName"`
	// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled bool `pulumi:"terminationProtectionEnabled"`
	// Release cadence that Atlas uses for this cluster.
	VersionReleaseSystem string `pulumi:"versionReleaseSystem"`
}

// GetAdvancedClustersResultInput is an input type that accepts GetAdvancedClustersResultArgs and GetAdvancedClustersResultOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultInput` via:
//
//	GetAdvancedClustersResultArgs{...}
type GetAdvancedClustersResultInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultOutput() GetAdvancedClustersResultOutput
	ToGetAdvancedClustersResultOutputWithContext(context.Context) GetAdvancedClustersResultOutput
}

type GetAdvancedClustersResultArgs struct {
	// Get the advanced configuration options. See Advanced Configuration below for more details.
	AdvancedConfigurations GetAdvancedClustersResultAdvancedConfigurationArrayInput `pulumi:"advancedConfigurations"`
	BackupEnabled          pulumi.BoolInput                                         `pulumi:"backupEnabled"`
	// Configuration settings applied to BI Connector for Atlas on this cluster. See below. **NOTE** Prior version of provider had parameter as `biConnector`
	BiConnectorConfigs GetAdvancedClustersResultBiConnectorConfigArrayInput `pulumi:"biConnectorConfigs"`
	// Type of the cluster that you want to create.
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
	// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
	ConnectionStrings GetAdvancedClustersResultConnectionStringArrayInput `pulumi:"connectionStrings"`
	CreateDate        pulumi.StringInput                                  `pulumi:"createDate"`
	// Capacity, in gigabytes, of the host's root volume.
	DiskSizeGb pulumi.Float64Input `pulumi:"diskSizeGb"`
	// Possible values are AWS, GCP, AZURE or NONE.
	EncryptionAtRestProvider pulumi.StringInput `pulumi:"encryptionAtRestProvider"`
	// Configuration for the collection of key-value pairs that tag and categorize the cluster. See below.
	Labels GetAdvancedClustersResultLabelArrayInput `pulumi:"labels"`
	// Version of the cluster to deploy.
	MongoDbMajorVersion pulumi.StringInput `pulumi:"mongoDbMajorVersion"`
	// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
	MongoDbVersion pulumi.StringInput `pulumi:"mongoDbVersion"`
	Name           pulumi.StringInput `pulumi:"name"`
	// Flag that indicates whether the cluster is paused or not.
	Paused pulumi.BoolInput `pulumi:"paused"`
	// Flag that indicates if the cluster uses Continuous Cloud Backup.
	PitEnabled pulumi.BoolInput `pulumi:"pitEnabled"`
	// Configuration for cluster regions and the hardware provisioned in them. See below
	ReplicationSpecs GetAdvancedClustersResultReplicationSpecArrayInput `pulumi:"replicationSpecs"`
	// Certificate Authority that MongoDB Atlas clusters use.
	RootCertType pulumi.StringInput `pulumi:"rootCertType"`
	// Current state of the cluster. The possible states are:
	StateName pulumi.StringInput `pulumi:"stateName"`
	// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled pulumi.BoolInput `pulumi:"terminationProtectionEnabled"`
	// Release cadence that Atlas uses for this cluster.
	VersionReleaseSystem pulumi.StringInput `pulumi:"versionReleaseSystem"`
}

func (GetAdvancedClustersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResult)(nil)).Elem()
}

func (i GetAdvancedClustersResultArgs) ToGetAdvancedClustersResultOutput() GetAdvancedClustersResultOutput {
	return i.ToGetAdvancedClustersResultOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultArgs) ToGetAdvancedClustersResultOutputWithContext(ctx context.Context) GetAdvancedClustersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultOutput)
}

// GetAdvancedClustersResultArrayInput is an input type that accepts GetAdvancedClustersResultArray and GetAdvancedClustersResultArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultArrayInput` via:
//
//	GetAdvancedClustersResultArray{ GetAdvancedClustersResultArgs{...} }
type GetAdvancedClustersResultArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultArrayOutput() GetAdvancedClustersResultArrayOutput
	ToGetAdvancedClustersResultArrayOutputWithContext(context.Context) GetAdvancedClustersResultArrayOutput
}

type GetAdvancedClustersResultArray []GetAdvancedClustersResultInput

func (GetAdvancedClustersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResult)(nil)).Elem()
}

func (i GetAdvancedClustersResultArray) ToGetAdvancedClustersResultArrayOutput() GetAdvancedClustersResultArrayOutput {
	return i.ToGetAdvancedClustersResultArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultArray) ToGetAdvancedClustersResultArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultArrayOutput)
}

type GetAdvancedClustersResultOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResult)(nil)).Elem()
}

func (o GetAdvancedClustersResultOutput) ToGetAdvancedClustersResultOutput() GetAdvancedClustersResultOutput {
	return o
}

func (o GetAdvancedClustersResultOutput) ToGetAdvancedClustersResultOutputWithContext(ctx context.Context) GetAdvancedClustersResultOutput {
	return o
}

// Get the advanced configuration options. See Advanced Configuration below for more details.
func (o GetAdvancedClustersResultOutput) AdvancedConfigurations() GetAdvancedClustersResultAdvancedConfigurationArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) []GetAdvancedClustersResultAdvancedConfiguration {
		return v.AdvancedConfigurations
	}).(GetAdvancedClustersResultAdvancedConfigurationArrayOutput)
}

func (o GetAdvancedClustersResultOutput) BackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) bool { return v.BackupEnabled }).(pulumi.BoolOutput)
}

// Configuration settings applied to BI Connector for Atlas on this cluster. See below. **NOTE** Prior version of provider had parameter as `biConnector`
func (o GetAdvancedClustersResultOutput) BiConnectorConfigs() GetAdvancedClustersResultBiConnectorConfigArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) []GetAdvancedClustersResultBiConnectorConfig {
		return v.BiConnectorConfigs
	}).(GetAdvancedClustersResultBiConnectorConfigArrayOutput)
}

// Type of the cluster that you want to create.
func (o GetAdvancedClustersResultOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
func (o GetAdvancedClustersResultOutput) ConnectionStrings() GetAdvancedClustersResultConnectionStringArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) []GetAdvancedClustersResultConnectionString {
		return v.ConnectionStrings
	}).(GetAdvancedClustersResultConnectionStringArrayOutput)
}

func (o GetAdvancedClustersResultOutput) CreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.CreateDate }).(pulumi.StringOutput)
}

// Capacity, in gigabytes, of the host's root volume.
func (o GetAdvancedClustersResultOutput) DiskSizeGb() pulumi.Float64Output {
	return o.ApplyT(func(v GetAdvancedClustersResult) float64 { return v.DiskSizeGb }).(pulumi.Float64Output)
}

// Possible values are AWS, GCP, AZURE or NONE.
func (o GetAdvancedClustersResultOutput) EncryptionAtRestProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.EncryptionAtRestProvider }).(pulumi.StringOutput)
}

// Configuration for the collection of key-value pairs that tag and categorize the cluster. See below.
func (o GetAdvancedClustersResultOutput) Labels() GetAdvancedClustersResultLabelArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) []GetAdvancedClustersResultLabel { return v.Labels }).(GetAdvancedClustersResultLabelArrayOutput)
}

// Version of the cluster to deploy.
func (o GetAdvancedClustersResultOutput) MongoDbMajorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.MongoDbMajorVersion }).(pulumi.StringOutput)
}

// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
func (o GetAdvancedClustersResultOutput) MongoDbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.MongoDbVersion }).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.Name }).(pulumi.StringOutput)
}

// Flag that indicates whether the cluster is paused or not.
func (o GetAdvancedClustersResultOutput) Paused() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) bool { return v.Paused }).(pulumi.BoolOutput)
}

// Flag that indicates if the cluster uses Continuous Cloud Backup.
func (o GetAdvancedClustersResultOutput) PitEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) bool { return v.PitEnabled }).(pulumi.BoolOutput)
}

// Configuration for cluster regions and the hardware provisioned in them. See below
func (o GetAdvancedClustersResultOutput) ReplicationSpecs() GetAdvancedClustersResultReplicationSpecArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) []GetAdvancedClustersResultReplicationSpec {
		return v.ReplicationSpecs
	}).(GetAdvancedClustersResultReplicationSpecArrayOutput)
}

// Certificate Authority that MongoDB Atlas clusters use.
func (o GetAdvancedClustersResultOutput) RootCertType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.RootCertType }).(pulumi.StringOutput)
}

// Current state of the cluster. The possible states are:
func (o GetAdvancedClustersResultOutput) StateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.StateName }).(pulumi.StringOutput)
}

// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
func (o GetAdvancedClustersResultOutput) TerminationProtectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) bool { return v.TerminationProtectionEnabled }).(pulumi.BoolOutput)
}

// Release cadence that Atlas uses for this cluster.
func (o GetAdvancedClustersResultOutput) VersionReleaseSystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.VersionReleaseSystem }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResult)(nil)).Elem()
}

func (o GetAdvancedClustersResultArrayOutput) ToGetAdvancedClustersResultArrayOutput() GetAdvancedClustersResultArrayOutput {
	return o
}

func (o GetAdvancedClustersResultArrayOutput) ToGetAdvancedClustersResultArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultArrayOutput {
	return o
}

func (o GetAdvancedClustersResultArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResult {
		return vs[0].([]GetAdvancedClustersResult)[vs[1].(int)]
	}).(GetAdvancedClustersResultOutput)
}

type GetAdvancedClustersResultAdvancedConfiguration struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern string `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern string `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong bool `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled bool `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol string `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan bool `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours int `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb int `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector int `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector int `pulumi:"sampleSizeBiConnector"`
}

// GetAdvancedClustersResultAdvancedConfigurationInput is an input type that accepts GetAdvancedClustersResultAdvancedConfigurationArgs and GetAdvancedClustersResultAdvancedConfigurationOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultAdvancedConfigurationInput` via:
//
//	GetAdvancedClustersResultAdvancedConfigurationArgs{...}
type GetAdvancedClustersResultAdvancedConfigurationInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultAdvancedConfigurationOutput() GetAdvancedClustersResultAdvancedConfigurationOutput
	ToGetAdvancedClustersResultAdvancedConfigurationOutputWithContext(context.Context) GetAdvancedClustersResultAdvancedConfigurationOutput
}

type GetAdvancedClustersResultAdvancedConfigurationArgs struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern pulumi.StringInput `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern pulumi.StringInput `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong pulumi.BoolInput `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled pulumi.BoolInput `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol pulumi.StringInput `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan pulumi.BoolInput `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours pulumi.IntInput `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb pulumi.IntInput `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector pulumi.IntInput `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector pulumi.IntInput `pulumi:"sampleSizeBiConnector"`
}

func (GetAdvancedClustersResultAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (i GetAdvancedClustersResultAdvancedConfigurationArgs) ToGetAdvancedClustersResultAdvancedConfigurationOutput() GetAdvancedClustersResultAdvancedConfigurationOutput {
	return i.ToGetAdvancedClustersResultAdvancedConfigurationOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultAdvancedConfigurationArgs) ToGetAdvancedClustersResultAdvancedConfigurationOutputWithContext(ctx context.Context) GetAdvancedClustersResultAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultAdvancedConfigurationOutput)
}

// GetAdvancedClustersResultAdvancedConfigurationArrayInput is an input type that accepts GetAdvancedClustersResultAdvancedConfigurationArray and GetAdvancedClustersResultAdvancedConfigurationArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultAdvancedConfigurationArrayInput` via:
//
//	GetAdvancedClustersResultAdvancedConfigurationArray{ GetAdvancedClustersResultAdvancedConfigurationArgs{...} }
type GetAdvancedClustersResultAdvancedConfigurationArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultAdvancedConfigurationArrayOutput() GetAdvancedClustersResultAdvancedConfigurationArrayOutput
	ToGetAdvancedClustersResultAdvancedConfigurationArrayOutputWithContext(context.Context) GetAdvancedClustersResultAdvancedConfigurationArrayOutput
}

type GetAdvancedClustersResultAdvancedConfigurationArray []GetAdvancedClustersResultAdvancedConfigurationInput

func (GetAdvancedClustersResultAdvancedConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (i GetAdvancedClustersResultAdvancedConfigurationArray) ToGetAdvancedClustersResultAdvancedConfigurationArrayOutput() GetAdvancedClustersResultAdvancedConfigurationArrayOutput {
	return i.ToGetAdvancedClustersResultAdvancedConfigurationArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultAdvancedConfigurationArray) ToGetAdvancedClustersResultAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultAdvancedConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultAdvancedConfigurationArrayOutput)
}

type GetAdvancedClustersResultAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (o GetAdvancedClustersResultAdvancedConfigurationOutput) ToGetAdvancedClustersResultAdvancedConfigurationOutput() GetAdvancedClustersResultAdvancedConfigurationOutput {
	return o
}

func (o GetAdvancedClustersResultAdvancedConfigurationOutput) ToGetAdvancedClustersResultAdvancedConfigurationOutputWithContext(ctx context.Context) GetAdvancedClustersResultAdvancedConfigurationOutput {
	return o
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) DefaultReadConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) string { return v.DefaultReadConcern }).(pulumi.StringOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) DefaultWriteConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) string { return v.DefaultWriteConcern }).(pulumi.StringOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) FailIndexKeyTooLong() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) bool { return v.FailIndexKeyTooLong }).(pulumi.BoolOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) JavascriptEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) bool { return v.JavascriptEnabled }).(pulumi.BoolOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) MinimumEnabledTlsProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) string { return v.MinimumEnabledTlsProtocol }).(pulumi.StringOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) NoTableScan() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) bool { return v.NoTableScan }).(pulumi.BoolOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) OplogMinRetentionHours() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) int { return v.OplogMinRetentionHours }).(pulumi.IntOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) OplogSizeMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) int { return v.OplogSizeMb }).(pulumi.IntOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) SampleRefreshIntervalBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) int { return v.SampleRefreshIntervalBiConnector }).(pulumi.IntOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) SampleSizeBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) int { return v.SampleSizeBiConnector }).(pulumi.IntOutput)
}

type GetAdvancedClustersResultAdvancedConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultAdvancedConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (o GetAdvancedClustersResultAdvancedConfigurationArrayOutput) ToGetAdvancedClustersResultAdvancedConfigurationArrayOutput() GetAdvancedClustersResultAdvancedConfigurationArrayOutput {
	return o
}

func (o GetAdvancedClustersResultAdvancedConfigurationArrayOutput) ToGetAdvancedClustersResultAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultAdvancedConfigurationArrayOutput {
	return o
}

func (o GetAdvancedClustersResultAdvancedConfigurationArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultAdvancedConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultAdvancedConfiguration {
		return vs[0].([]GetAdvancedClustersResultAdvancedConfiguration)[vs[1].(int)]
	}).(GetAdvancedClustersResultAdvancedConfigurationOutput)
}

type GetAdvancedClustersResultBiConnectorConfig struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	Enabled bool `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference string `pulumi:"readPreference"`
}

// GetAdvancedClustersResultBiConnectorConfigInput is an input type that accepts GetAdvancedClustersResultBiConnectorConfigArgs and GetAdvancedClustersResultBiConnectorConfigOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultBiConnectorConfigInput` via:
//
//	GetAdvancedClustersResultBiConnectorConfigArgs{...}
type GetAdvancedClustersResultBiConnectorConfigInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultBiConnectorConfigOutput() GetAdvancedClustersResultBiConnectorConfigOutput
	ToGetAdvancedClustersResultBiConnectorConfigOutputWithContext(context.Context) GetAdvancedClustersResultBiConnectorConfigOutput
}

type GetAdvancedClustersResultBiConnectorConfigArgs struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringInput `pulumi:"readPreference"`
}

func (GetAdvancedClustersResultBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultBiConnectorConfig)(nil)).Elem()
}

func (i GetAdvancedClustersResultBiConnectorConfigArgs) ToGetAdvancedClustersResultBiConnectorConfigOutput() GetAdvancedClustersResultBiConnectorConfigOutput {
	return i.ToGetAdvancedClustersResultBiConnectorConfigOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultBiConnectorConfigArgs) ToGetAdvancedClustersResultBiConnectorConfigOutputWithContext(ctx context.Context) GetAdvancedClustersResultBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultBiConnectorConfigOutput)
}

// GetAdvancedClustersResultBiConnectorConfigArrayInput is an input type that accepts GetAdvancedClustersResultBiConnectorConfigArray and GetAdvancedClustersResultBiConnectorConfigArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultBiConnectorConfigArrayInput` via:
//
//	GetAdvancedClustersResultBiConnectorConfigArray{ GetAdvancedClustersResultBiConnectorConfigArgs{...} }
type GetAdvancedClustersResultBiConnectorConfigArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultBiConnectorConfigArrayOutput() GetAdvancedClustersResultBiConnectorConfigArrayOutput
	ToGetAdvancedClustersResultBiConnectorConfigArrayOutputWithContext(context.Context) GetAdvancedClustersResultBiConnectorConfigArrayOutput
}

type GetAdvancedClustersResultBiConnectorConfigArray []GetAdvancedClustersResultBiConnectorConfigInput

func (GetAdvancedClustersResultBiConnectorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultBiConnectorConfig)(nil)).Elem()
}

func (i GetAdvancedClustersResultBiConnectorConfigArray) ToGetAdvancedClustersResultBiConnectorConfigArrayOutput() GetAdvancedClustersResultBiConnectorConfigArrayOutput {
	return i.ToGetAdvancedClustersResultBiConnectorConfigArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultBiConnectorConfigArray) ToGetAdvancedClustersResultBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultBiConnectorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultBiConnectorConfigArrayOutput)
}

type GetAdvancedClustersResultBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultBiConnectorConfig)(nil)).Elem()
}

func (o GetAdvancedClustersResultBiConnectorConfigOutput) ToGetAdvancedClustersResultBiConnectorConfigOutput() GetAdvancedClustersResultBiConnectorConfigOutput {
	return o
}

func (o GetAdvancedClustersResultBiConnectorConfigOutput) ToGetAdvancedClustersResultBiConnectorConfigOutputWithContext(ctx context.Context) GetAdvancedClustersResultBiConnectorConfigOutput {
	return o
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
func (o GetAdvancedClustersResultBiConnectorConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultBiConnectorConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o GetAdvancedClustersResultBiConnectorConfigOutput) ReadPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultBiConnectorConfig) string { return v.ReadPreference }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultBiConnectorConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultBiConnectorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultBiConnectorConfig)(nil)).Elem()
}

func (o GetAdvancedClustersResultBiConnectorConfigArrayOutput) ToGetAdvancedClustersResultBiConnectorConfigArrayOutput() GetAdvancedClustersResultBiConnectorConfigArrayOutput {
	return o
}

func (o GetAdvancedClustersResultBiConnectorConfigArrayOutput) ToGetAdvancedClustersResultBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultBiConnectorConfigArrayOutput {
	return o
}

func (o GetAdvancedClustersResultBiConnectorConfigArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultBiConnectorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultBiConnectorConfig {
		return vs[0].([]GetAdvancedClustersResultBiConnectorConfig)[vs[1].(int)]
	}).(GetAdvancedClustersResultBiConnectorConfigOutput)
}

type GetAdvancedClustersResultConnectionString struct {
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
	AwsPrivateLink map[string]interface{} `pulumi:"awsPrivateLink"`
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
	AwsPrivateLinkSrv map[string]interface{}                                     `pulumi:"awsPrivateLinkSrv"`
	Private           string                                                     `pulumi:"private"`
	PrivateEndpoints  []GetAdvancedClustersResultConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        string                                                     `pulumi:"privateSrv"`
	Standard          string                                                     `pulumi:"standard"`
	StandardSrv       string                                                     `pulumi:"standardSrv"`
}

// GetAdvancedClustersResultConnectionStringInput is an input type that accepts GetAdvancedClustersResultConnectionStringArgs and GetAdvancedClustersResultConnectionStringOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultConnectionStringInput` via:
//
//	GetAdvancedClustersResultConnectionStringArgs{...}
type GetAdvancedClustersResultConnectionStringInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultConnectionStringOutput() GetAdvancedClustersResultConnectionStringOutput
	ToGetAdvancedClustersResultConnectionStringOutputWithContext(context.Context) GetAdvancedClustersResultConnectionStringOutput
}

type GetAdvancedClustersResultConnectionStringArgs struct {
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
	AwsPrivateLink pulumi.MapInput `pulumi:"awsPrivateLink"`
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
	AwsPrivateLinkSrv pulumi.MapInput                                                    `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringInput                                                 `pulumi:"private"`
	PrivateEndpoints  GetAdvancedClustersResultConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringInput                                                 `pulumi:"privateSrv"`
	Standard          pulumi.StringInput                                                 `pulumi:"standard"`
	StandardSrv       pulumi.StringInput                                                 `pulumi:"standardSrv"`
}

func (GetAdvancedClustersResultConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultConnectionString)(nil)).Elem()
}

func (i GetAdvancedClustersResultConnectionStringArgs) ToGetAdvancedClustersResultConnectionStringOutput() GetAdvancedClustersResultConnectionStringOutput {
	return i.ToGetAdvancedClustersResultConnectionStringOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultConnectionStringArgs) ToGetAdvancedClustersResultConnectionStringOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultConnectionStringOutput)
}

// GetAdvancedClustersResultConnectionStringArrayInput is an input type that accepts GetAdvancedClustersResultConnectionStringArray and GetAdvancedClustersResultConnectionStringArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultConnectionStringArrayInput` via:
//
//	GetAdvancedClustersResultConnectionStringArray{ GetAdvancedClustersResultConnectionStringArgs{...} }
type GetAdvancedClustersResultConnectionStringArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultConnectionStringArrayOutput() GetAdvancedClustersResultConnectionStringArrayOutput
	ToGetAdvancedClustersResultConnectionStringArrayOutputWithContext(context.Context) GetAdvancedClustersResultConnectionStringArrayOutput
}

type GetAdvancedClustersResultConnectionStringArray []GetAdvancedClustersResultConnectionStringInput

func (GetAdvancedClustersResultConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultConnectionString)(nil)).Elem()
}

func (i GetAdvancedClustersResultConnectionStringArray) ToGetAdvancedClustersResultConnectionStringArrayOutput() GetAdvancedClustersResultConnectionStringArrayOutput {
	return i.ToGetAdvancedClustersResultConnectionStringArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultConnectionStringArray) ToGetAdvancedClustersResultConnectionStringArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultConnectionStringArrayOutput)
}

type GetAdvancedClustersResultConnectionStringOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultConnectionString)(nil)).Elem()
}

func (o GetAdvancedClustersResultConnectionStringOutput) ToGetAdvancedClustersResultConnectionStringOutput() GetAdvancedClustersResultConnectionStringOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringOutput) ToGetAdvancedClustersResultConnectionStringOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringOutput {
	return o
}

// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
func (o GetAdvancedClustersResultConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
func (o GetAdvancedClustersResultConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o GetAdvancedClustersResultConnectionStringOutput) Private() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionString) string { return v.Private }).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultConnectionStringOutput) PrivateEndpoints() GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionString) []GetAdvancedClustersResultConnectionStringPrivateEndpoint {
		return v.PrivateEndpoints
	}).(GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput)
}

func (o GetAdvancedClustersResultConnectionStringOutput) PrivateSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionString) string { return v.PrivateSrv }).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultConnectionStringOutput) Standard() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionString) string { return v.Standard }).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultConnectionStringOutput) StandardSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionString) string { return v.StandardSrv }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultConnectionString)(nil)).Elem()
}

func (o GetAdvancedClustersResultConnectionStringArrayOutput) ToGetAdvancedClustersResultConnectionStringArrayOutput() GetAdvancedClustersResultConnectionStringArrayOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringArrayOutput) ToGetAdvancedClustersResultConnectionStringArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringArrayOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultConnectionString {
		return vs[0].([]GetAdvancedClustersResultConnectionString)[vs[1].(int)]
	}).(GetAdvancedClustersResultConnectionStringOutput)
}

type GetAdvancedClustersResultConnectionStringPrivateEndpoint struct {
	ConnectionString    string                                                             `pulumi:"connectionString"`
	Endpoints           []GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString string                                                             `pulumi:"srvConnectionString"`
	Type                string                                                             `pulumi:"type"`
}

// GetAdvancedClustersResultConnectionStringPrivateEndpointInput is an input type that accepts GetAdvancedClustersResultConnectionStringPrivateEndpointArgs and GetAdvancedClustersResultConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultConnectionStringPrivateEndpointInput` via:
//
//	GetAdvancedClustersResultConnectionStringPrivateEndpointArgs{...}
type GetAdvancedClustersResultConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointOutput
	ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutputWithContext(context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointOutput
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointArgs struct {
	ConnectionString    pulumi.StringInput                                                         `pulumi:"connectionString"`
	Endpoints           GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString pulumi.StringInput                                                         `pulumi:"srvConnectionString"`
	Type                pulumi.StringInput                                                         `pulumi:"type"`
}

func (GetAdvancedClustersResultConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointArgs) ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointOutput {
	return i.ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointArgs) ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultConnectionStringPrivateEndpointOutput)
}

// GetAdvancedClustersResultConnectionStringPrivateEndpointArrayInput is an input type that accepts GetAdvancedClustersResultConnectionStringPrivateEndpointArray and GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultConnectionStringPrivateEndpointArrayInput` via:
//
//	GetAdvancedClustersResultConnectionStringPrivateEndpointArray{ GetAdvancedClustersResultConnectionStringPrivateEndpointArgs{...} }
type GetAdvancedClustersResultConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput
	ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointArray []GetAdvancedClustersResultConnectionStringPrivateEndpointInput

func (GetAdvancedClustersResultConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointArray) ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput {
	return i.ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointArray) ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput)
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpoint) string { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) Endpoints() GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpoint) []GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpoint) string { return v.SrvConnectionString }).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultConnectionStringPrivateEndpoint {
		return vs[0].([]GetAdvancedClustersResultConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(GetAdvancedClustersResultConnectionStringPrivateEndpointOutput)
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint struct {
	EndpointId string `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	Region       string `pulumi:"region"`
}

// GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointInput is an input type that accepts GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs and GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointInput` via:
//
//	GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs{...}
type GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput
	ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	Region       pulumi.StringInput `pulumi:"region"`
}

func (GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return i.ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput)
}

// GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray and GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//	GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray{ GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs{...} }
type GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput
	ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray []GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointInput

func (GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput)
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Cloud service provider on which the servers are provisioned.
func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.ProviderName }).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.Region }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput)
}

type GetAdvancedClustersResultLabel struct {
	// The key that you want to write.
	Key string `pulumi:"key"`
	// The value that you want to write.
	Value string `pulumi:"value"`
}

// GetAdvancedClustersResultLabelInput is an input type that accepts GetAdvancedClustersResultLabelArgs and GetAdvancedClustersResultLabelOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultLabelInput` via:
//
//	GetAdvancedClustersResultLabelArgs{...}
type GetAdvancedClustersResultLabelInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultLabelOutput() GetAdvancedClustersResultLabelOutput
	ToGetAdvancedClustersResultLabelOutputWithContext(context.Context) GetAdvancedClustersResultLabelOutput
}

type GetAdvancedClustersResultLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAdvancedClustersResultLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultLabel)(nil)).Elem()
}

func (i GetAdvancedClustersResultLabelArgs) ToGetAdvancedClustersResultLabelOutput() GetAdvancedClustersResultLabelOutput {
	return i.ToGetAdvancedClustersResultLabelOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultLabelArgs) ToGetAdvancedClustersResultLabelOutputWithContext(ctx context.Context) GetAdvancedClustersResultLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultLabelOutput)
}

// GetAdvancedClustersResultLabelArrayInput is an input type that accepts GetAdvancedClustersResultLabelArray and GetAdvancedClustersResultLabelArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultLabelArrayInput` via:
//
//	GetAdvancedClustersResultLabelArray{ GetAdvancedClustersResultLabelArgs{...} }
type GetAdvancedClustersResultLabelArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultLabelArrayOutput() GetAdvancedClustersResultLabelArrayOutput
	ToGetAdvancedClustersResultLabelArrayOutputWithContext(context.Context) GetAdvancedClustersResultLabelArrayOutput
}

type GetAdvancedClustersResultLabelArray []GetAdvancedClustersResultLabelInput

func (GetAdvancedClustersResultLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultLabel)(nil)).Elem()
}

func (i GetAdvancedClustersResultLabelArray) ToGetAdvancedClustersResultLabelArrayOutput() GetAdvancedClustersResultLabelArrayOutput {
	return i.ToGetAdvancedClustersResultLabelArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultLabelArray) ToGetAdvancedClustersResultLabelArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultLabelArrayOutput)
}

type GetAdvancedClustersResultLabelOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultLabel)(nil)).Elem()
}

func (o GetAdvancedClustersResultLabelOutput) ToGetAdvancedClustersResultLabelOutput() GetAdvancedClustersResultLabelOutput {
	return o
}

func (o GetAdvancedClustersResultLabelOutput) ToGetAdvancedClustersResultLabelOutputWithContext(ctx context.Context) GetAdvancedClustersResultLabelOutput {
	return o
}

// The key that you want to write.
func (o GetAdvancedClustersResultLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that you want to write.
func (o GetAdvancedClustersResultLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultLabelArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultLabel)(nil)).Elem()
}

func (o GetAdvancedClustersResultLabelArrayOutput) ToGetAdvancedClustersResultLabelArrayOutput() GetAdvancedClustersResultLabelArrayOutput {
	return o
}

func (o GetAdvancedClustersResultLabelArrayOutput) ToGetAdvancedClustersResultLabelArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultLabelArrayOutput {
	return o
}

func (o GetAdvancedClustersResultLabelArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultLabel {
		return vs[0].([]GetAdvancedClustersResultLabel)[vs[1].(int)]
	}).(GetAdvancedClustersResultLabelOutput)
}

type GetAdvancedClustersResultReplicationSpec struct {
	// A key-value map of the Network Peering Container ID(s) for the configuration specified in `regionConfigs`. The Container ID is the id of the container either created programmatically by the user before any clusters existed in a project or when the first cluster in the region (AWS/Azure) or project (GCP) was created.  The syntax is `"providerName:regionName" = "containerId"`. Example `AWS:US_EAST_1" = "61e0797dde08fb498ca11a71`.
	ContainerId map[string]string `pulumi:"containerId"`
	Id          string            `pulumi:"id"`
	// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED.
	NumShards int `pulumi:"numShards"`
	// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
	RegionConfigs []GetAdvancedClustersResultReplicationSpecRegionConfig `pulumi:"regionConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName string `pulumi:"zoneName"`
}

// GetAdvancedClustersResultReplicationSpecInput is an input type that accepts GetAdvancedClustersResultReplicationSpecArgs and GetAdvancedClustersResultReplicationSpecOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecInput` via:
//
//	GetAdvancedClustersResultReplicationSpecArgs{...}
type GetAdvancedClustersResultReplicationSpecInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecOutput() GetAdvancedClustersResultReplicationSpecOutput
	ToGetAdvancedClustersResultReplicationSpecOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecOutput
}

type GetAdvancedClustersResultReplicationSpecArgs struct {
	// A key-value map of the Network Peering Container ID(s) for the configuration specified in `regionConfigs`. The Container ID is the id of the container either created programmatically by the user before any clusters existed in a project or when the first cluster in the region (AWS/Azure) or project (GCP) was created.  The syntax is `"providerName:regionName" = "containerId"`. Example `AWS:US_EAST_1" = "61e0797dde08fb498ca11a71`.
	ContainerId pulumi.StringMapInput `pulumi:"containerId"`
	Id          pulumi.StringInput    `pulumi:"id"`
	// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
	RegionConfigs GetAdvancedClustersResultReplicationSpecRegionConfigArrayInput `pulumi:"regionConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetAdvancedClustersResultReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpec)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecArgs) ToGetAdvancedClustersResultReplicationSpecOutput() GetAdvancedClustersResultReplicationSpecOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecArgs) ToGetAdvancedClustersResultReplicationSpecOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecOutput)
}

// GetAdvancedClustersResultReplicationSpecArrayInput is an input type that accepts GetAdvancedClustersResultReplicationSpecArray and GetAdvancedClustersResultReplicationSpecArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecArrayInput` via:
//
//	GetAdvancedClustersResultReplicationSpecArray{ GetAdvancedClustersResultReplicationSpecArgs{...} }
type GetAdvancedClustersResultReplicationSpecArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecArrayOutput() GetAdvancedClustersResultReplicationSpecArrayOutput
	ToGetAdvancedClustersResultReplicationSpecArrayOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecArrayOutput
}

type GetAdvancedClustersResultReplicationSpecArray []GetAdvancedClustersResultReplicationSpecInput

func (GetAdvancedClustersResultReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpec)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecArray) ToGetAdvancedClustersResultReplicationSpecArrayOutput() GetAdvancedClustersResultReplicationSpecArrayOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecArray) ToGetAdvancedClustersResultReplicationSpecArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecArrayOutput)
}

type GetAdvancedClustersResultReplicationSpecOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpec)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecOutput) ToGetAdvancedClustersResultReplicationSpecOutput() GetAdvancedClustersResultReplicationSpecOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecOutput) ToGetAdvancedClustersResultReplicationSpecOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecOutput {
	return o
}

// A key-value map of the Network Peering Container ID(s) for the configuration specified in `regionConfigs`. The Container ID is the id of the container either created programmatically by the user before any clusters existed in a project or when the first cluster in the region (AWS/Azure) or project (GCP) was created.  The syntax is `"providerName:regionName" = "containerId"`. Example `AWS:US_EAST_1" = "61e0797dde08fb498ca11a71`.
func (o GetAdvancedClustersResultReplicationSpecOutput) ContainerId() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpec) map[string]string { return v.ContainerId }).(pulumi.StringMapOutput)
}

func (o GetAdvancedClustersResultReplicationSpecOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpec) string { return v.Id }).(pulumi.StringOutput)
}

// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED.
func (o GetAdvancedClustersResultReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
func (o GetAdvancedClustersResultReplicationSpecOutput) RegionConfigs() GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpec) []GetAdvancedClustersResultReplicationSpecRegionConfig {
		return v.RegionConfigs
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput)
}

// Name for the zone in a Global Cluster.
func (o GetAdvancedClustersResultReplicationSpecOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpec) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpec)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecArrayOutput) ToGetAdvancedClustersResultReplicationSpecArrayOutput() GetAdvancedClustersResultReplicationSpecArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecArrayOutput) ToGetAdvancedClustersResultReplicationSpecArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultReplicationSpec {
		return vs[0].([]GetAdvancedClustersResultReplicationSpec)[vs[1].(int)]
	}).(GetAdvancedClustersResultReplicationSpecOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfig struct {
	// Configuration for the Collection of settings that configures analytis-auto-scaling information for the cluster. See below
	AnalyticsAutoScalings []GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling `pulumi:"analyticsAutoScalings"`
	// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. See below
	AnalyticsSpecs *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs `pulumi:"analyticsSpecs"`
	// Configuration for the Collection of settings that configures auto-scaling information for the cluster. See below
	AutoScalings []GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling `pulumi:"autoScalings"`
	// Cloud service provider on which you provision the host for a multi-tenant cluster.
	BackingProviderName string `pulumi:"backingProviderName"`
	// Hardware specifications for electable nodes in the region.
	ElectableSpecs *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs `pulumi:"electableSpecs"`
	// Election priority of the region.
	Priority int `pulumi:"priority"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	// Hardware specifications for read-only nodes in the region. See below
	ReadOnlySpecs *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs `pulumi:"readOnlySpecs"`
	// Physical location of your MongoDB cluster.
	RegionName string `pulumi:"regionName"`
}

// GetAdvancedClustersResultReplicationSpecRegionConfigInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigArgs and GetAdvancedClustersResultReplicationSpecRegionConfigOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigArgs{...}
type GetAdvancedClustersResultReplicationSpecRegionConfigInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigOutput() GetAdvancedClustersResultReplicationSpecRegionConfigOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigArgs struct {
	// Configuration for the Collection of settings that configures analytis-auto-scaling information for the cluster. See below
	AnalyticsAutoScalings GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput `pulumi:"analyticsAutoScalings"`
	// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. See below
	AnalyticsSpecs GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrInput `pulumi:"analyticsSpecs"`
	// Configuration for the Collection of settings that configures auto-scaling information for the cluster. See below
	AutoScalings GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayInput `pulumi:"autoScalings"`
	// Cloud service provider on which you provision the host for a multi-tenant cluster.
	BackingProviderName pulumi.StringInput `pulumi:"backingProviderName"`
	// Hardware specifications for electable nodes in the region.
	ElectableSpecs GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrInput `pulumi:"electableSpecs"`
	// Election priority of the region.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Hardware specifications for read-only nodes in the region. See below
	ReadOnlySpecs GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrInput `pulumi:"readOnlySpecs"`
	// Physical location of your MongoDB cluster.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetAdvancedClustersResultReplicationSpecRegionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfig)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigOutput() GetAdvancedClustersResultReplicationSpecRegionConfigOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigOutput)
}

// GetAdvancedClustersResultReplicationSpecRegionConfigArrayInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigArray and GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigArrayInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigArray{ GetAdvancedClustersResultReplicationSpecRegionConfigArgs{...} }
type GetAdvancedClustersResultReplicationSpecRegionConfigArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigArray []GetAdvancedClustersResultReplicationSpecRegionConfigInput

func (GetAdvancedClustersResultReplicationSpecRegionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpecRegionConfig)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigArray) ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigArray) ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfig)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigOutput() GetAdvancedClustersResultReplicationSpecRegionConfigOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigOutput {
	return o
}

// Configuration for the Collection of settings that configures analytis-auto-scaling information for the cluster. See below
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) AnalyticsAutoScalings() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) []GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling {
		return v.AnalyticsAutoScalings
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput)
}

// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. See below
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) AnalyticsSpecs() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs {
		return v.AnalyticsSpecs
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

// Configuration for the Collection of settings that configures auto-scaling information for the cluster. See below
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) AutoScalings() GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) []GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling {
		return v.AutoScalings
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput)
}

// Cloud service provider on which you provision the host for a multi-tenant cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) BackingProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) string { return v.BackingProviderName }).(pulumi.StringOutput)
}

// Hardware specifications for electable nodes in the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) ElectableSpecs() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs {
		return v.ElectableSpecs
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

// Election priority of the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Cloud service provider on which the servers are provisioned.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Hardware specifications for read-only nodes in the region. See below
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) ReadOnlySpecs() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs {
		return v.ReadOnlySpecs
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

// Physical location of your MongoDB cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpecRegionConfig)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultReplicationSpecRegionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultReplicationSpecRegionConfig {
		return vs[0].([]GetAdvancedClustersResultReplicationSpecRegionConfig)[vs[1].(int)]
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled bool `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	ComputeMaxInstanceSize string `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize string `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled bool `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled bool `pulumi:"diskGbEnabled"`
}

// GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs and GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs{...}
type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled pulumi.BoolInput `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	ComputeMaxInstanceSize pulumi.StringInput `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize pulumi.StringInput `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled pulumi.BoolInput `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled pulumi.BoolInput `pulumi:"diskGbEnabled"`
}

func (GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput)
}

// GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray and GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray{ GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs{...} }
type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray []GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingInput

func (GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return o
}

// Flag that indicates whether instance size auto-scaling is enabled.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling) bool {
		return v.ComputeEnabled
	}).(pulumi.BoolOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40).
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeMaxInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling) string {
		return v.ComputeMaxInstanceSize
	}).(pulumi.StringOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10).
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeMinInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling) string {
		return v.ComputeMinInstanceSize
	}).(pulumi.StringOutput)
}

// Flag that indicates whether the instance size may scale down.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeScaleDownEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling) bool {
		return v.ComputeScaleDownEnabled
	}).(pulumi.BoolOutput)
}

// Flag that indicates whether this cluster enables disk auto-scaling.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) DiskGbEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling) bool {
		return v.DiskGbEnabled
	}).(pulumi.BoolOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling {
		return vs[0].([]GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling)[vs[1].(int)]
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs and GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs{...}
type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput)
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput).ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx)
}

// GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs, GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtr and GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrInput` via:
//
//	        GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs{...}
//
//	or:
//
//	        nil
type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput
}

type getAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrType GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs

func GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtr(v *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrInput {
	return (*getAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrType)(v)
}

func (*getAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs {
		return &v
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *string {
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) string {
		return v.InstanceSize
	}).(pulumi.StringOutput)
}

// Number of read-only nodes for Atlas to deploy to the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) Elem() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs {
		if v != nil {
			return *v
		}
		var ret GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs
		return ret
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of read-only nodes for Atlas to deploy to the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled bool `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	ComputeMaxInstanceSize string `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize string `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled bool `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled bool `pulumi:"diskGbEnabled"`
}

// GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs and GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs{...}
type GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled pulumi.BoolInput `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	ComputeMaxInstanceSize pulumi.StringInput `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize pulumi.StringInput `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled pulumi.BoolInput `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled pulumi.BoolInput `pulumi:"diskGbEnabled"`
}

func (GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput)
}

// GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray and GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray{ GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs{...} }
type GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray []GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingInput

func (GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput {
	return o
}

// Flag that indicates whether instance size auto-scaling is enabled.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ComputeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling) bool { return v.ComputeEnabled }).(pulumi.BoolOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40).
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ComputeMaxInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling) string {
		return v.ComputeMaxInstanceSize
	}).(pulumi.StringOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10).
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ComputeMinInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling) string {
		return v.ComputeMinInstanceSize
	}).(pulumi.StringOutput)
}

// Flag that indicates whether the instance size may scale down.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ComputeScaleDownEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling) bool {
		return v.ComputeScaleDownEnabled
	}).(pulumi.BoolOutput)
}

// Flag that indicates whether this cluster enables disk auto-scaling.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) DiskGbEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling) bool { return v.DiskGbEnabled }).(pulumi.BoolOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling {
		return vs[0].([]GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling)[vs[1].(int)]
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs and GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs{...}
type GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput)
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput).ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx)
}

// GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs, GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtr and GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrInput` via:
//
//	        GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs{...}
//
//	or:
//
//	        nil
type GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput
}

type getAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrType GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs

func GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtr(v *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrInput {
	return (*getAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrType)(v)
}

func (*getAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrType) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrType) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs {
		return &v
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *string {
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) string {
		return v.InstanceSize
	}).(pulumi.StringOutput)
}

// Number of read-only nodes for Atlas to deploy to the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) Elem() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs {
		if v != nil {
			return *v
		}
		var ret GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs
		return ret
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of read-only nodes for Atlas to deploy to the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs and GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs{...}
type GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of read-only nodes for Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput)
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput).ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx)
}

// GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs, GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtr and GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrInput` via:
//
//	        GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs{...}
//
//	or:
//
//	        nil
type GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput
}

type getAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrType GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs

func GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtr(v *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrInput {
	return (*getAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrType)(v)
}

func (*getAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrType) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrType) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs {
		return &v
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *string {
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) string {
		return v.InstanceSize
	}).(pulumi.StringOutput)
}

// Number of read-only nodes for Atlas to deploy to the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) Elem() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs {
		if v != nil {
			return *v
		}
		var ret GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs
		return ret
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of read-only nodes for Atlas to deploy to the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type GetAlertConfigurationMatcher struct {
	// Name of the field in the target object to match on.
	FieldName string `pulumi:"fieldName"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	Operator string `pulumi:"operator"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	Value string `pulumi:"value"`
}

// GetAlertConfigurationMatcherInput is an input type that accepts GetAlertConfigurationMatcherArgs and GetAlertConfigurationMatcherOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMatcherInput` via:
//
//	GetAlertConfigurationMatcherArgs{...}
type GetAlertConfigurationMatcherInput interface {
	pulumi.Input

	ToGetAlertConfigurationMatcherOutput() GetAlertConfigurationMatcherOutput
	ToGetAlertConfigurationMatcherOutputWithContext(context.Context) GetAlertConfigurationMatcherOutput
}

type GetAlertConfigurationMatcherArgs struct {
	// Name of the field in the target object to match on.
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	Operator pulumi.StringInput `pulumi:"operator"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAlertConfigurationMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMatcher)(nil)).Elem()
}

func (i GetAlertConfigurationMatcherArgs) ToGetAlertConfigurationMatcherOutput() GetAlertConfigurationMatcherOutput {
	return i.ToGetAlertConfigurationMatcherOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMatcherArgs) ToGetAlertConfigurationMatcherOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMatcherOutput)
}

// GetAlertConfigurationMatcherArrayInput is an input type that accepts GetAlertConfigurationMatcherArray and GetAlertConfigurationMatcherArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMatcherArrayInput` via:
//
//	GetAlertConfigurationMatcherArray{ GetAlertConfigurationMatcherArgs{...} }
type GetAlertConfigurationMatcherArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationMatcherArrayOutput() GetAlertConfigurationMatcherArrayOutput
	ToGetAlertConfigurationMatcherArrayOutputWithContext(context.Context) GetAlertConfigurationMatcherArrayOutput
}

type GetAlertConfigurationMatcherArray []GetAlertConfigurationMatcherInput

func (GetAlertConfigurationMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationMatcher)(nil)).Elem()
}

func (i GetAlertConfigurationMatcherArray) ToGetAlertConfigurationMatcherArrayOutput() GetAlertConfigurationMatcherArrayOutput {
	return i.ToGetAlertConfigurationMatcherArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMatcherArray) ToGetAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMatcherArrayOutput)
}

type GetAlertConfigurationMatcherOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMatcher)(nil)).Elem()
}

func (o GetAlertConfigurationMatcherOutput) ToGetAlertConfigurationMatcherOutput() GetAlertConfigurationMatcherOutput {
	return o
}

func (o GetAlertConfigurationMatcherOutput) ToGetAlertConfigurationMatcherOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherOutput {
	return o
}

// Name of the field in the target object to match on.
func (o GetAlertConfigurationMatcherOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMatcher) string { return v.FieldName }).(pulumi.StringOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
func (o GetAlertConfigurationMatcherOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMatcher) string { return v.Operator }).(pulumi.StringOutput)
}

// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
func (o GetAlertConfigurationMatcherOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMatcher) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertConfigurationMatcherArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationMatcher)(nil)).Elem()
}

func (o GetAlertConfigurationMatcherArrayOutput) ToGetAlertConfigurationMatcherArrayOutput() GetAlertConfigurationMatcherArrayOutput {
	return o
}

func (o GetAlertConfigurationMatcherArrayOutput) ToGetAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherArrayOutput {
	return o
}

func (o GetAlertConfigurationMatcherArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationMatcherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationMatcher {
		return vs[0].([]GetAlertConfigurationMatcher)[vs[1].(int)]
	}).(GetAlertConfigurationMatcherOutput)
}

type GetAlertConfigurationMetricThresholdConfig struct {
	// Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
	MetricName string `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode string `pulumi:"mode"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	Operator string `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold float64 `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units string `pulumi:"units"`
}

// GetAlertConfigurationMetricThresholdConfigInput is an input type that accepts GetAlertConfigurationMetricThresholdConfigArgs and GetAlertConfigurationMetricThresholdConfigOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMetricThresholdConfigInput` via:
//
//	GetAlertConfigurationMetricThresholdConfigArgs{...}
type GetAlertConfigurationMetricThresholdConfigInput interface {
	pulumi.Input

	ToGetAlertConfigurationMetricThresholdConfigOutput() GetAlertConfigurationMetricThresholdConfigOutput
	ToGetAlertConfigurationMetricThresholdConfigOutputWithContext(context.Context) GetAlertConfigurationMetricThresholdConfigOutput
}

type GetAlertConfigurationMetricThresholdConfigArgs struct {
	// Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	Operator pulumi.StringInput `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units pulumi.StringInput `pulumi:"units"`
}

func (GetAlertConfigurationMetricThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationMetricThresholdConfigArgs) ToGetAlertConfigurationMetricThresholdConfigOutput() GetAlertConfigurationMetricThresholdConfigOutput {
	return i.ToGetAlertConfigurationMetricThresholdConfigOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMetricThresholdConfigArgs) ToGetAlertConfigurationMetricThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationMetricThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMetricThresholdConfigOutput)
}

// GetAlertConfigurationMetricThresholdConfigArrayInput is an input type that accepts GetAlertConfigurationMetricThresholdConfigArray and GetAlertConfigurationMetricThresholdConfigArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMetricThresholdConfigArrayInput` via:
//
//	GetAlertConfigurationMetricThresholdConfigArray{ GetAlertConfigurationMetricThresholdConfigArgs{...} }
type GetAlertConfigurationMetricThresholdConfigArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationMetricThresholdConfigArrayOutput() GetAlertConfigurationMetricThresholdConfigArrayOutput
	ToGetAlertConfigurationMetricThresholdConfigArrayOutputWithContext(context.Context) GetAlertConfigurationMetricThresholdConfigArrayOutput
}

type GetAlertConfigurationMetricThresholdConfigArray []GetAlertConfigurationMetricThresholdConfigInput

func (GetAlertConfigurationMetricThresholdConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationMetricThresholdConfigArray) ToGetAlertConfigurationMetricThresholdConfigArrayOutput() GetAlertConfigurationMetricThresholdConfigArrayOutput {
	return i.ToGetAlertConfigurationMetricThresholdConfigArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMetricThresholdConfigArray) ToGetAlertConfigurationMetricThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationMetricThresholdConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMetricThresholdConfigArrayOutput)
}

type GetAlertConfigurationMetricThresholdConfigOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMetricThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationMetricThresholdConfigOutput) ToGetAlertConfigurationMetricThresholdConfigOutput() GetAlertConfigurationMetricThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationMetricThresholdConfigOutput) ToGetAlertConfigurationMetricThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationMetricThresholdConfigOutput {
	return o
}

// Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
func (o GetAlertConfigurationMetricThresholdConfigOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) string { return v.MetricName }).(pulumi.StringOutput)
}

// This must be set to AVERAGE. Atlas computes the current metric value as an average.
func (o GetAlertConfigurationMetricThresholdConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) string { return v.Mode }).(pulumi.StringOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
func (o GetAlertConfigurationMetricThresholdConfigOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o GetAlertConfigurationMetricThresholdConfigOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) float64 { return v.Threshold }).(pulumi.Float64Output)
}

// The units for the threshold value. Depends on the type of metric.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
func (o GetAlertConfigurationMetricThresholdConfigOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) string { return v.Units }).(pulumi.StringOutput)
}

type GetAlertConfigurationMetricThresholdConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMetricThresholdConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationMetricThresholdConfigArrayOutput) ToGetAlertConfigurationMetricThresholdConfigArrayOutput() GetAlertConfigurationMetricThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationMetricThresholdConfigArrayOutput) ToGetAlertConfigurationMetricThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationMetricThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationMetricThresholdConfigArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationMetricThresholdConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationMetricThresholdConfig {
		return vs[0].([]GetAlertConfigurationMetricThresholdConfig)[vs[1].(int)]
	}).(GetAlertConfigurationMetricThresholdConfigOutput)
}

type GetAlertConfigurationNotification struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken string `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName string `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey string `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion string `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin int `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress string `pulumi:"emailAddress"`
	// Flag indicating email notifications should be sent. Atlas returns this value if `typeName` is set  to `ORG`, `GROUP`, or `USER`.
	EmailEnabled bool `pulumi:"emailEnabled"`
	// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
	FlowName string `pulumi:"flowName"`
	// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	FlowdockApiToken string `pulumi:"flowdockApiToken"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
	IntervalMin int `pulumi:"intervalMin"`
	// Microsoft Teams channel incoming webhook URL. Required for the `MICROSOFT_TEAMS` notifications type.
	MicrosoftTeamsWebhookUrl *string `pulumi:"microsoftTeamsWebhookUrl"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber string `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey string `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion string `pulumi:"opsGenieRegion"`
	// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
	OrgName string `pulumi:"orgName"`
	// Atlas role in current Project or Organization. Atlas returns this value if you set `typeName` to `ORG` or `GROUP`.
	Roles []string `pulumi:"roles"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey string `pulumi:"serviceKey"`
	// Flag indicating text notifications should be sent. Atlas returns this value if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	SmsEnabled bool `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId string `pulumi:"teamId"`
	// Label for the team that receives this notification.
	TeamName string `pulumi:"teamName"`
	// Type of alert notification.
	// Accepted values are:
	TypeName string `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username string `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey string `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey string `pulumi:"victorOpsRoutingKey"`
	// Authentication secret for the `WEBHOOK` notifications type.
	WebhookSecret *string `pulumi:"webhookSecret"`
	// Target URL  for the `WEBHOOK` notifications type.
	WebhookUrl *string `pulumi:"webhookUrl"`
}

// GetAlertConfigurationNotificationInput is an input type that accepts GetAlertConfigurationNotificationArgs and GetAlertConfigurationNotificationOutput values.
// You can construct a concrete instance of `GetAlertConfigurationNotificationInput` via:
//
//	GetAlertConfigurationNotificationArgs{...}
type GetAlertConfigurationNotificationInput interface {
	pulumi.Input

	ToGetAlertConfigurationNotificationOutput() GetAlertConfigurationNotificationOutput
	ToGetAlertConfigurationNotificationOutputWithContext(context.Context) GetAlertConfigurationNotificationOutput
}

type GetAlertConfigurationNotificationArgs struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken pulumi.StringInput `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey pulumi.StringInput `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion pulumi.StringInput `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin pulumi.IntInput `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// Flag indicating email notifications should be sent. Atlas returns this value if `typeName` is set  to `ORG`, `GROUP`, or `USER`.
	EmailEnabled pulumi.BoolInput `pulumi:"emailEnabled"`
	// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
	FlowName pulumi.StringInput `pulumi:"flowName"`
	// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	FlowdockApiToken pulumi.StringInput `pulumi:"flowdockApiToken"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
	IntervalMin pulumi.IntInput `pulumi:"intervalMin"`
	// Microsoft Teams channel incoming webhook URL. Required for the `MICROSOFT_TEAMS` notifications type.
	MicrosoftTeamsWebhookUrl pulumi.StringPtrInput `pulumi:"microsoftTeamsWebhookUrl"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber pulumi.StringInput `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey pulumi.StringInput `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion pulumi.StringInput `pulumi:"opsGenieRegion"`
	// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
	OrgName pulumi.StringInput `pulumi:"orgName"`
	// Atlas role in current Project or Organization. Atlas returns this value if you set `typeName` to `ORG` or `GROUP`.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey pulumi.StringInput `pulumi:"serviceKey"`
	// Flag indicating text notifications should be sent. Atlas returns this value if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	SmsEnabled pulumi.BoolInput `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId pulumi.StringInput `pulumi:"teamId"`
	// Label for the team that receives this notification.
	TeamName pulumi.StringInput `pulumi:"teamName"`
	// Type of alert notification.
	// Accepted values are:
	TypeName pulumi.StringInput `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username pulumi.StringInput `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey pulumi.StringInput `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey pulumi.StringInput `pulumi:"victorOpsRoutingKey"`
	// Authentication secret for the `WEBHOOK` notifications type.
	WebhookSecret pulumi.StringPtrInput `pulumi:"webhookSecret"`
	// Target URL  for the `WEBHOOK` notifications type.
	WebhookUrl pulumi.StringPtrInput `pulumi:"webhookUrl"`
}

func (GetAlertConfigurationNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationNotification)(nil)).Elem()
}

func (i GetAlertConfigurationNotificationArgs) ToGetAlertConfigurationNotificationOutput() GetAlertConfigurationNotificationOutput {
	return i.ToGetAlertConfigurationNotificationOutputWithContext(context.Background())
}

func (i GetAlertConfigurationNotificationArgs) ToGetAlertConfigurationNotificationOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationNotificationOutput)
}

// GetAlertConfigurationNotificationArrayInput is an input type that accepts GetAlertConfigurationNotificationArray and GetAlertConfigurationNotificationArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationNotificationArrayInput` via:
//
//	GetAlertConfigurationNotificationArray{ GetAlertConfigurationNotificationArgs{...} }
type GetAlertConfigurationNotificationArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationNotificationArrayOutput() GetAlertConfigurationNotificationArrayOutput
	ToGetAlertConfigurationNotificationArrayOutputWithContext(context.Context) GetAlertConfigurationNotificationArrayOutput
}

type GetAlertConfigurationNotificationArray []GetAlertConfigurationNotificationInput

func (GetAlertConfigurationNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationNotification)(nil)).Elem()
}

func (i GetAlertConfigurationNotificationArray) ToGetAlertConfigurationNotificationArrayOutput() GetAlertConfigurationNotificationArrayOutput {
	return i.ToGetAlertConfigurationNotificationArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationNotificationArray) ToGetAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationNotificationArrayOutput)
}

type GetAlertConfigurationNotificationOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationNotification)(nil)).Elem()
}

func (o GetAlertConfigurationNotificationOutput) ToGetAlertConfigurationNotificationOutput() GetAlertConfigurationNotificationOutput {
	return o
}

func (o GetAlertConfigurationNotificationOutput) ToGetAlertConfigurationNotificationOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationOutput {
	return o
}

// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o GetAlertConfigurationNotificationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.ApiToken }).(pulumi.StringOutput)
}

// Slack channel name. Required for the SLACK notifications type.
func (o GetAlertConfigurationNotificationOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
func (o GetAlertConfigurationNotificationOutput) DatadogApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.DatadogApiKey }).(pulumi.StringOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
func (o GetAlertConfigurationNotificationOutput) DatadogRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.DatadogRegion }).(pulumi.StringOutput)
}

// Number of minutes to wait after an alert condition is detected before sending out the first notification.
func (o GetAlertConfigurationNotificationOutput) DelayMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) int { return v.DelayMin }).(pulumi.IntOutput)
}

// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
func (o GetAlertConfigurationNotificationOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// Flag indicating email notifications should be sent. Atlas returns this value if `typeName` is set  to `ORG`, `GROUP`, or `USER`.
func (o GetAlertConfigurationNotificationOutput) EmailEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) bool { return v.EmailEnabled }).(pulumi.BoolOutput)
}

// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
func (o GetAlertConfigurationNotificationOutput) FlowName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.FlowName }).(pulumi.StringOutput)
}

// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o GetAlertConfigurationNotificationOutput) FlowdockApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.FlowdockApiToken }).(pulumi.StringOutput)
}

// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
func (o GetAlertConfigurationNotificationOutput) IntervalMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) int { return v.IntervalMin }).(pulumi.IntOutput)
}

// Microsoft Teams channel incoming webhook URL. Required for the `MICROSOFT_TEAMS` notifications type.
func (o GetAlertConfigurationNotificationOutput) MicrosoftTeamsWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) *string { return v.MicrosoftTeamsWebhookUrl }).(pulumi.StringPtrOutput)
}

// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
func (o GetAlertConfigurationNotificationOutput) MobileNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.MobileNumber }).(pulumi.StringOutput)
}

// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o GetAlertConfigurationNotificationOutput) OpsGenieApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.OpsGenieApiKey }).(pulumi.StringOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
func (o GetAlertConfigurationNotificationOutput) OpsGenieRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.OpsGenieRegion }).(pulumi.StringOutput)
}

// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
func (o GetAlertConfigurationNotificationOutput) OrgName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.OrgName }).(pulumi.StringOutput)
}

// Atlas role in current Project or Organization. Atlas returns this value if you set `typeName` to `ORG` or `GROUP`.
func (o GetAlertConfigurationNotificationOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o GetAlertConfigurationNotificationOutput) ServiceKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.ServiceKey }).(pulumi.StringOutput)
}

// Flag indicating text notifications should be sent. Atlas returns this value if `typeName` is set to `ORG`, `GROUP`, or `USER`.
func (o GetAlertConfigurationNotificationOutput) SmsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) bool { return v.SmsEnabled }).(pulumi.BoolOutput)
}

// Unique identifier of a team.
func (o GetAlertConfigurationNotificationOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.TeamId }).(pulumi.StringOutput)
}

// Label for the team that receives this notification.
func (o GetAlertConfigurationNotificationOutput) TeamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.TeamName }).(pulumi.StringOutput)
}

// Type of alert notification.
// Accepted values are:
func (o GetAlertConfigurationNotificationOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.TypeName }).(pulumi.StringOutput)
}

// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
func (o GetAlertConfigurationNotificationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.Username }).(pulumi.StringOutput)
}

// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o GetAlertConfigurationNotificationOutput) VictorOpsApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.VictorOpsApiKey }).(pulumi.StringOutput)
}

// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o GetAlertConfigurationNotificationOutput) VictorOpsRoutingKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.VictorOpsRoutingKey }).(pulumi.StringOutput)
}

// Authentication secret for the `WEBHOOK` notifications type.
func (o GetAlertConfigurationNotificationOutput) WebhookSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) *string { return v.WebhookSecret }).(pulumi.StringPtrOutput)
}

// Target URL  for the `WEBHOOK` notifications type.
func (o GetAlertConfigurationNotificationOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) *string { return v.WebhookUrl }).(pulumi.StringPtrOutput)
}

type GetAlertConfigurationNotificationArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationNotification)(nil)).Elem()
}

func (o GetAlertConfigurationNotificationArrayOutput) ToGetAlertConfigurationNotificationArrayOutput() GetAlertConfigurationNotificationArrayOutput {
	return o
}

func (o GetAlertConfigurationNotificationArrayOutput) ToGetAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationArrayOutput {
	return o
}

func (o GetAlertConfigurationNotificationArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationNotification {
		return vs[0].([]GetAlertConfigurationNotification)[vs[1].(int)]
	}).(GetAlertConfigurationNotificationOutput)
}

type GetAlertConfigurationOutput struct {
	Label *string `pulumi:"label"`
	Type  string  `pulumi:"type"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	Value string `pulumi:"value"`
}

// GetAlertConfigurationOutputInput is an input type that accepts GetAlertConfigurationOutputArgs and GetAlertConfigurationOutputOutput values.
// You can construct a concrete instance of `GetAlertConfigurationOutputInput` via:
//
//	GetAlertConfigurationOutputArgs{...}
type GetAlertConfigurationOutputInput interface {
	pulumi.Input

	ToGetAlertConfigurationOutputOutput() GetAlertConfigurationOutputOutput
	ToGetAlertConfigurationOutputOutputWithContext(context.Context) GetAlertConfigurationOutputOutput
}

type GetAlertConfigurationOutputArgs struct {
	Label pulumi.StringPtrInput `pulumi:"label"`
	Type  pulumi.StringInput    `pulumi:"type"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAlertConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationOutput)(nil)).Elem()
}

func (i GetAlertConfigurationOutputArgs) ToGetAlertConfigurationOutputOutput() GetAlertConfigurationOutputOutput {
	return i.ToGetAlertConfigurationOutputOutputWithContext(context.Background())
}

func (i GetAlertConfigurationOutputArgs) ToGetAlertConfigurationOutputOutputWithContext(ctx context.Context) GetAlertConfigurationOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationOutputOutput)
}

// GetAlertConfigurationOutputArrayInput is an input type that accepts GetAlertConfigurationOutputArray and GetAlertConfigurationOutputArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationOutputArrayInput` via:
//
//	GetAlertConfigurationOutputArray{ GetAlertConfigurationOutputArgs{...} }
type GetAlertConfigurationOutputArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationOutputArrayOutput() GetAlertConfigurationOutputArrayOutput
	ToGetAlertConfigurationOutputArrayOutputWithContext(context.Context) GetAlertConfigurationOutputArrayOutput
}

type GetAlertConfigurationOutputArray []GetAlertConfigurationOutputInput

func (GetAlertConfigurationOutputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationOutput)(nil)).Elem()
}

func (i GetAlertConfigurationOutputArray) ToGetAlertConfigurationOutputArrayOutput() GetAlertConfigurationOutputArrayOutput {
	return i.ToGetAlertConfigurationOutputArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationOutputArray) ToGetAlertConfigurationOutputArrayOutputWithContext(ctx context.Context) GetAlertConfigurationOutputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationOutputArrayOutput)
}

type GetAlertConfigurationOutputOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationOutput)(nil)).Elem()
}

func (o GetAlertConfigurationOutputOutput) ToGetAlertConfigurationOutputOutput() GetAlertConfigurationOutputOutput {
	return o
}

func (o GetAlertConfigurationOutputOutput) ToGetAlertConfigurationOutputOutputWithContext(ctx context.Context) GetAlertConfigurationOutputOutput {
	return o
}

func (o GetAlertConfigurationOutputOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationOutput) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o GetAlertConfigurationOutputOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationOutput) string { return v.Type }).(pulumi.StringOutput)
}

// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
func (o GetAlertConfigurationOutputOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationOutput) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertConfigurationOutputArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationOutputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationOutput)(nil)).Elem()
}

func (o GetAlertConfigurationOutputArrayOutput) ToGetAlertConfigurationOutputArrayOutput() GetAlertConfigurationOutputArrayOutput {
	return o
}

func (o GetAlertConfigurationOutputArrayOutput) ToGetAlertConfigurationOutputArrayOutputWithContext(ctx context.Context) GetAlertConfigurationOutputArrayOutput {
	return o
}

func (o GetAlertConfigurationOutputArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationOutputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationOutput {
		return vs[0].([]GetAlertConfigurationOutput)[vs[1].(int)]
	}).(GetAlertConfigurationOutputOutput)
}

type GetAlertConfigurationThresholdConfig struct {
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	Operator string `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold float64 `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units string `pulumi:"units"`
}

// GetAlertConfigurationThresholdConfigInput is an input type that accepts GetAlertConfigurationThresholdConfigArgs and GetAlertConfigurationThresholdConfigOutput values.
// You can construct a concrete instance of `GetAlertConfigurationThresholdConfigInput` via:
//
//	GetAlertConfigurationThresholdConfigArgs{...}
type GetAlertConfigurationThresholdConfigInput interface {
	pulumi.Input

	ToGetAlertConfigurationThresholdConfigOutput() GetAlertConfigurationThresholdConfigOutput
	ToGetAlertConfigurationThresholdConfigOutputWithContext(context.Context) GetAlertConfigurationThresholdConfigOutput
}

type GetAlertConfigurationThresholdConfigArgs struct {
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	Operator pulumi.StringInput `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units pulumi.StringInput `pulumi:"units"`
}

func (GetAlertConfigurationThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationThresholdConfigArgs) ToGetAlertConfigurationThresholdConfigOutput() GetAlertConfigurationThresholdConfigOutput {
	return i.ToGetAlertConfigurationThresholdConfigOutputWithContext(context.Background())
}

func (i GetAlertConfigurationThresholdConfigArgs) ToGetAlertConfigurationThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationThresholdConfigOutput)
}

// GetAlertConfigurationThresholdConfigArrayInput is an input type that accepts GetAlertConfigurationThresholdConfigArray and GetAlertConfigurationThresholdConfigArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationThresholdConfigArrayInput` via:
//
//	GetAlertConfigurationThresholdConfigArray{ GetAlertConfigurationThresholdConfigArgs{...} }
type GetAlertConfigurationThresholdConfigArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationThresholdConfigArrayOutput() GetAlertConfigurationThresholdConfigArrayOutput
	ToGetAlertConfigurationThresholdConfigArrayOutputWithContext(context.Context) GetAlertConfigurationThresholdConfigArrayOutput
}

type GetAlertConfigurationThresholdConfigArray []GetAlertConfigurationThresholdConfigInput

func (GetAlertConfigurationThresholdConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationThresholdConfigArray) ToGetAlertConfigurationThresholdConfigArrayOutput() GetAlertConfigurationThresholdConfigArrayOutput {
	return i.ToGetAlertConfigurationThresholdConfigArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationThresholdConfigArray) ToGetAlertConfigurationThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationThresholdConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationThresholdConfigArrayOutput)
}

type GetAlertConfigurationThresholdConfigOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationThresholdConfigOutput) ToGetAlertConfigurationThresholdConfigOutput() GetAlertConfigurationThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationThresholdConfigOutput) ToGetAlertConfigurationThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationThresholdConfigOutput {
	return o
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
func (o GetAlertConfigurationThresholdConfigOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationThresholdConfig) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o GetAlertConfigurationThresholdConfigOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetAlertConfigurationThresholdConfig) float64 { return v.Threshold }).(pulumi.Float64Output)
}

// The units for the threshold value. Depends on the type of metric.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
func (o GetAlertConfigurationThresholdConfigOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationThresholdConfig) string { return v.Units }).(pulumi.StringOutput)
}

type GetAlertConfigurationThresholdConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationThresholdConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationThresholdConfigArrayOutput) ToGetAlertConfigurationThresholdConfigArrayOutput() GetAlertConfigurationThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationThresholdConfigArrayOutput) ToGetAlertConfigurationThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationThresholdConfigArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationThresholdConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationThresholdConfig {
		return vs[0].([]GetAlertConfigurationThresholdConfig)[vs[1].(int)]
	}).(GetAlertConfigurationThresholdConfigOutput)
}

type GetAlertConfigurationsListOption struct {
	IncludeCount *bool `pulumi:"includeCount"`
	ItemsPerPage *int  `pulumi:"itemsPerPage"`
	PageNum      *int  `pulumi:"pageNum"`
}

// GetAlertConfigurationsListOptionInput is an input type that accepts GetAlertConfigurationsListOptionArgs and GetAlertConfigurationsListOptionOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsListOptionInput` via:
//
//	GetAlertConfigurationsListOptionArgs{...}
type GetAlertConfigurationsListOptionInput interface {
	pulumi.Input

	ToGetAlertConfigurationsListOptionOutput() GetAlertConfigurationsListOptionOutput
	ToGetAlertConfigurationsListOptionOutputWithContext(context.Context) GetAlertConfigurationsListOptionOutput
}

type GetAlertConfigurationsListOptionArgs struct {
	IncludeCount pulumi.BoolPtrInput `pulumi:"includeCount"`
	ItemsPerPage pulumi.IntPtrInput  `pulumi:"itemsPerPage"`
	PageNum      pulumi.IntPtrInput  `pulumi:"pageNum"`
}

func (GetAlertConfigurationsListOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsListOption)(nil)).Elem()
}

func (i GetAlertConfigurationsListOptionArgs) ToGetAlertConfigurationsListOptionOutput() GetAlertConfigurationsListOptionOutput {
	return i.ToGetAlertConfigurationsListOptionOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsListOptionArgs) ToGetAlertConfigurationsListOptionOutputWithContext(ctx context.Context) GetAlertConfigurationsListOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsListOptionOutput)
}

// GetAlertConfigurationsListOptionArrayInput is an input type that accepts GetAlertConfigurationsListOptionArray and GetAlertConfigurationsListOptionArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsListOptionArrayInput` via:
//
//	GetAlertConfigurationsListOptionArray{ GetAlertConfigurationsListOptionArgs{...} }
type GetAlertConfigurationsListOptionArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationsListOptionArrayOutput() GetAlertConfigurationsListOptionArrayOutput
	ToGetAlertConfigurationsListOptionArrayOutputWithContext(context.Context) GetAlertConfigurationsListOptionArrayOutput
}

type GetAlertConfigurationsListOptionArray []GetAlertConfigurationsListOptionInput

func (GetAlertConfigurationsListOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsListOption)(nil)).Elem()
}

func (i GetAlertConfigurationsListOptionArray) ToGetAlertConfigurationsListOptionArrayOutput() GetAlertConfigurationsListOptionArrayOutput {
	return i.ToGetAlertConfigurationsListOptionArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsListOptionArray) ToGetAlertConfigurationsListOptionArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsListOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsListOptionArrayOutput)
}

type GetAlertConfigurationsListOptionOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsListOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsListOption)(nil)).Elem()
}

func (o GetAlertConfigurationsListOptionOutput) ToGetAlertConfigurationsListOptionOutput() GetAlertConfigurationsListOptionOutput {
	return o
}

func (o GetAlertConfigurationsListOptionOutput) ToGetAlertConfigurationsListOptionOutputWithContext(ctx context.Context) GetAlertConfigurationsListOptionOutput {
	return o
}

func (o GetAlertConfigurationsListOptionOutput) IncludeCount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationsListOption) *bool { return v.IncludeCount }).(pulumi.BoolPtrOutput)
}

func (o GetAlertConfigurationsListOptionOutput) ItemsPerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationsListOption) *int { return v.ItemsPerPage }).(pulumi.IntPtrOutput)
}

func (o GetAlertConfigurationsListOptionOutput) PageNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationsListOption) *int { return v.PageNum }).(pulumi.IntPtrOutput)
}

type GetAlertConfigurationsListOptionArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsListOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsListOption)(nil)).Elem()
}

func (o GetAlertConfigurationsListOptionArrayOutput) ToGetAlertConfigurationsListOptionArrayOutput() GetAlertConfigurationsListOptionArrayOutput {
	return o
}

func (o GetAlertConfigurationsListOptionArrayOutput) ToGetAlertConfigurationsListOptionArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsListOptionArrayOutput {
	return o
}

func (o GetAlertConfigurationsListOptionArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationsListOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationsListOption {
		return vs[0].([]GetAlertConfigurationsListOption)[vs[1].(int)]
	}).(GetAlertConfigurationsListOptionOutput)
}

type GetAlertConfigurationsResult struct {
	// The ID of the alert configuration
	AlertConfigurationId string `pulumi:"alertConfigurationId"`
	// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was created.
	Created string `pulumi:"created"`
	// If set to true, the alert configuration is enabled. If enabled is not exported it is set to false.
	Enabled bool `pulumi:"enabled"`
	// The type of event that will trigger an alert.
	EventType string `pulumi:"eventType"`
	// Rules to apply when matching an object against this alert configuration
	Matchers        []GetAlertConfigurationsResultMatcher `pulumi:"matchers"`
	MetricThreshold map[string]string                     `pulumi:"metricThreshold"`
	// The threshold that causes an alert to be triggered. Required if `eventTypeName` : `OUTSIDE_METRIC_THRESHOLD` or `OUTSIDE_SERVERLESS_METRIC_THRESHOLD`
	MetricThresholdConfigs []GetAlertConfigurationsResultMetricThresholdConfig `pulumi:"metricThresholdConfigs"`
	Notifications          []GetAlertConfigurationsResultNotification          `pulumi:"notifications"`
	// Requested output string format for the alert configuration
	Outputs []GetAlertConfigurationsResultOutputType `pulumi:"outputs"`
	// The unique ID for the project to get the alert configurations.
	ProjectId string            `pulumi:"projectId"`
	Threshold map[string]string `pulumi:"threshold"`
	// Threshold that triggers an alert. Required if `eventTypeName` is any value other than `OUTSIDE_METRIC_THRESHOLD` or `OUTSIDE_SERVERLESS_METRIC_THRESHOLD`.
	ThresholdConfigs []GetAlertConfigurationsResultThresholdConfig `pulumi:"thresholdConfigs"`
	// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was last updated.
	Updated string `pulumi:"updated"`
}

// GetAlertConfigurationsResultInput is an input type that accepts GetAlertConfigurationsResultArgs and GetAlertConfigurationsResultOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultInput` via:
//
//	GetAlertConfigurationsResultArgs{...}
type GetAlertConfigurationsResultInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultOutput() GetAlertConfigurationsResultOutput
	ToGetAlertConfigurationsResultOutputWithContext(context.Context) GetAlertConfigurationsResultOutput
}

type GetAlertConfigurationsResultArgs struct {
	// The ID of the alert configuration
	AlertConfigurationId pulumi.StringInput `pulumi:"alertConfigurationId"`
	// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was created.
	Created pulumi.StringInput `pulumi:"created"`
	// If set to true, the alert configuration is enabled. If enabled is not exported it is set to false.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The type of event that will trigger an alert.
	EventType pulumi.StringInput `pulumi:"eventType"`
	// Rules to apply when matching an object against this alert configuration
	Matchers        GetAlertConfigurationsResultMatcherArrayInput `pulumi:"matchers"`
	MetricThreshold pulumi.StringMapInput                         `pulumi:"metricThreshold"`
	// The threshold that causes an alert to be triggered. Required if `eventTypeName` : `OUTSIDE_METRIC_THRESHOLD` or `OUTSIDE_SERVERLESS_METRIC_THRESHOLD`
	MetricThresholdConfigs GetAlertConfigurationsResultMetricThresholdConfigArrayInput `pulumi:"metricThresholdConfigs"`
	Notifications          GetAlertConfigurationsResultNotificationArrayInput          `pulumi:"notifications"`
	// Requested output string format for the alert configuration
	Outputs GetAlertConfigurationsResultOutputTypeArrayInput `pulumi:"outputs"`
	// The unique ID for the project to get the alert configurations.
	ProjectId pulumi.StringInput    `pulumi:"projectId"`
	Threshold pulumi.StringMapInput `pulumi:"threshold"`
	// Threshold that triggers an alert. Required if `eventTypeName` is any value other than `OUTSIDE_METRIC_THRESHOLD` or `OUTSIDE_SERVERLESS_METRIC_THRESHOLD`.
	ThresholdConfigs GetAlertConfigurationsResultThresholdConfigArrayInput `pulumi:"thresholdConfigs"`
	// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was last updated.
	Updated pulumi.StringInput `pulumi:"updated"`
}

func (GetAlertConfigurationsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResult)(nil)).Elem()
}

func (i GetAlertConfigurationsResultArgs) ToGetAlertConfigurationsResultOutput() GetAlertConfigurationsResultOutput {
	return i.ToGetAlertConfigurationsResultOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultArgs) ToGetAlertConfigurationsResultOutputWithContext(ctx context.Context) GetAlertConfigurationsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultOutput)
}

// GetAlertConfigurationsResultArrayInput is an input type that accepts GetAlertConfigurationsResultArray and GetAlertConfigurationsResultArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultArrayInput` via:
//
//	GetAlertConfigurationsResultArray{ GetAlertConfigurationsResultArgs{...} }
type GetAlertConfigurationsResultArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultArrayOutput() GetAlertConfigurationsResultArrayOutput
	ToGetAlertConfigurationsResultArrayOutputWithContext(context.Context) GetAlertConfigurationsResultArrayOutput
}

type GetAlertConfigurationsResultArray []GetAlertConfigurationsResultInput

func (GetAlertConfigurationsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResult)(nil)).Elem()
}

func (i GetAlertConfigurationsResultArray) ToGetAlertConfigurationsResultArrayOutput() GetAlertConfigurationsResultArrayOutput {
	return i.ToGetAlertConfigurationsResultArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultArray) ToGetAlertConfigurationsResultArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultArrayOutput)
}

type GetAlertConfigurationsResultOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResult)(nil)).Elem()
}

func (o GetAlertConfigurationsResultOutput) ToGetAlertConfigurationsResultOutput() GetAlertConfigurationsResultOutput {
	return o
}

func (o GetAlertConfigurationsResultOutput) ToGetAlertConfigurationsResultOutputWithContext(ctx context.Context) GetAlertConfigurationsResultOutput {
	return o
}

// The ID of the alert configuration
func (o GetAlertConfigurationsResultOutput) AlertConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) string { return v.AlertConfigurationId }).(pulumi.StringOutput)
}

// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was created.
func (o GetAlertConfigurationsResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) string { return v.Created }).(pulumi.StringOutput)
}

// If set to true, the alert configuration is enabled. If enabled is not exported it is set to false.
func (o GetAlertConfigurationsResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The type of event that will trigger an alert.
func (o GetAlertConfigurationsResultOutput) EventType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) string { return v.EventType }).(pulumi.StringOutput)
}

// Rules to apply when matching an object against this alert configuration
func (o GetAlertConfigurationsResultOutput) Matchers() GetAlertConfigurationsResultMatcherArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) []GetAlertConfigurationsResultMatcher { return v.Matchers }).(GetAlertConfigurationsResultMatcherArrayOutput)
}

func (o GetAlertConfigurationsResultOutput) MetricThreshold() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) map[string]string { return v.MetricThreshold }).(pulumi.StringMapOutput)
}

// The threshold that causes an alert to be triggered. Required if `eventTypeName` : `OUTSIDE_METRIC_THRESHOLD` or `OUTSIDE_SERVERLESS_METRIC_THRESHOLD`
func (o GetAlertConfigurationsResultOutput) MetricThresholdConfigs() GetAlertConfigurationsResultMetricThresholdConfigArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) []GetAlertConfigurationsResultMetricThresholdConfig {
		return v.MetricThresholdConfigs
	}).(GetAlertConfigurationsResultMetricThresholdConfigArrayOutput)
}

func (o GetAlertConfigurationsResultOutput) Notifications() GetAlertConfigurationsResultNotificationArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) []GetAlertConfigurationsResultNotification {
		return v.Notifications
	}).(GetAlertConfigurationsResultNotificationArrayOutput)
}

// Requested output string format for the alert configuration
func (o GetAlertConfigurationsResultOutput) Outputs() GetAlertConfigurationsResultOutputTypeArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) []GetAlertConfigurationsResultOutputType { return v.Outputs }).(GetAlertConfigurationsResultOutputTypeArrayOutput)
}

// The unique ID for the project to get the alert configurations.
func (o GetAlertConfigurationsResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultOutput) Threshold() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) map[string]string { return v.Threshold }).(pulumi.StringMapOutput)
}

// Threshold that triggers an alert. Required if `eventTypeName` is any value other than `OUTSIDE_METRIC_THRESHOLD` or `OUTSIDE_SERVERLESS_METRIC_THRESHOLD`.
func (o GetAlertConfigurationsResultOutput) ThresholdConfigs() GetAlertConfigurationsResultThresholdConfigArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) []GetAlertConfigurationsResultThresholdConfig {
		return v.ThresholdConfigs
	}).(GetAlertConfigurationsResultThresholdConfigArrayOutput)
}

// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was last updated.
func (o GetAlertConfigurationsResultOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) string { return v.Updated }).(pulumi.StringOutput)
}

type GetAlertConfigurationsResultArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResult)(nil)).Elem()
}

func (o GetAlertConfigurationsResultArrayOutput) ToGetAlertConfigurationsResultArrayOutput() GetAlertConfigurationsResultArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultArrayOutput) ToGetAlertConfigurationsResultArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationsResult {
		return vs[0].([]GetAlertConfigurationsResult)[vs[1].(int)]
	}).(GetAlertConfigurationsResultOutput)
}

type GetAlertConfigurationsResultMatcher struct {
	FieldName string `pulumi:"fieldName"`
	Operator  string `pulumi:"operator"`
	Value     string `pulumi:"value"`
}

// GetAlertConfigurationsResultMatcherInput is an input type that accepts GetAlertConfigurationsResultMatcherArgs and GetAlertConfigurationsResultMatcherOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultMatcherInput` via:
//
//	GetAlertConfigurationsResultMatcherArgs{...}
type GetAlertConfigurationsResultMatcherInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultMatcherOutput() GetAlertConfigurationsResultMatcherOutput
	ToGetAlertConfigurationsResultMatcherOutputWithContext(context.Context) GetAlertConfigurationsResultMatcherOutput
}

type GetAlertConfigurationsResultMatcherArgs struct {
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	Operator  pulumi.StringInput `pulumi:"operator"`
	Value     pulumi.StringInput `pulumi:"value"`
}

func (GetAlertConfigurationsResultMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultMatcher)(nil)).Elem()
}

func (i GetAlertConfigurationsResultMatcherArgs) ToGetAlertConfigurationsResultMatcherOutput() GetAlertConfigurationsResultMatcherOutput {
	return i.ToGetAlertConfigurationsResultMatcherOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultMatcherArgs) ToGetAlertConfigurationsResultMatcherOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultMatcherOutput)
}

// GetAlertConfigurationsResultMatcherArrayInput is an input type that accepts GetAlertConfigurationsResultMatcherArray and GetAlertConfigurationsResultMatcherArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultMatcherArrayInput` via:
//
//	GetAlertConfigurationsResultMatcherArray{ GetAlertConfigurationsResultMatcherArgs{...} }
type GetAlertConfigurationsResultMatcherArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultMatcherArrayOutput() GetAlertConfigurationsResultMatcherArrayOutput
	ToGetAlertConfigurationsResultMatcherArrayOutputWithContext(context.Context) GetAlertConfigurationsResultMatcherArrayOutput
}

type GetAlertConfigurationsResultMatcherArray []GetAlertConfigurationsResultMatcherInput

func (GetAlertConfigurationsResultMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultMatcher)(nil)).Elem()
}

func (i GetAlertConfigurationsResultMatcherArray) ToGetAlertConfigurationsResultMatcherArrayOutput() GetAlertConfigurationsResultMatcherArrayOutput {
	return i.ToGetAlertConfigurationsResultMatcherArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultMatcherArray) ToGetAlertConfigurationsResultMatcherArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultMatcherArrayOutput)
}

type GetAlertConfigurationsResultMatcherOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultMatcher)(nil)).Elem()
}

func (o GetAlertConfigurationsResultMatcherOutput) ToGetAlertConfigurationsResultMatcherOutput() GetAlertConfigurationsResultMatcherOutput {
	return o
}

func (o GetAlertConfigurationsResultMatcherOutput) ToGetAlertConfigurationsResultMatcherOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMatcherOutput {
	return o
}

func (o GetAlertConfigurationsResultMatcherOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultMatcher) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultMatcherOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultMatcher) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultMatcherOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultMatcher) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertConfigurationsResultMatcherArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultMatcher)(nil)).Elem()
}

func (o GetAlertConfigurationsResultMatcherArrayOutput) ToGetAlertConfigurationsResultMatcherArrayOutput() GetAlertConfigurationsResultMatcherArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultMatcherArrayOutput) ToGetAlertConfigurationsResultMatcherArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMatcherArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultMatcherArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationsResultMatcherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationsResultMatcher {
		return vs[0].([]GetAlertConfigurationsResultMatcher)[vs[1].(int)]
	}).(GetAlertConfigurationsResultMatcherOutput)
}

type GetAlertConfigurationsResultMetricThresholdConfig struct {
	MetricName string  `pulumi:"metricName"`
	Mode       string  `pulumi:"mode"`
	Operator   string  `pulumi:"operator"`
	Threshold  float64 `pulumi:"threshold"`
	Units      string  `pulumi:"units"`
}

// GetAlertConfigurationsResultMetricThresholdConfigInput is an input type that accepts GetAlertConfigurationsResultMetricThresholdConfigArgs and GetAlertConfigurationsResultMetricThresholdConfigOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultMetricThresholdConfigInput` via:
//
//	GetAlertConfigurationsResultMetricThresholdConfigArgs{...}
type GetAlertConfigurationsResultMetricThresholdConfigInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultMetricThresholdConfigOutput() GetAlertConfigurationsResultMetricThresholdConfigOutput
	ToGetAlertConfigurationsResultMetricThresholdConfigOutputWithContext(context.Context) GetAlertConfigurationsResultMetricThresholdConfigOutput
}

type GetAlertConfigurationsResultMetricThresholdConfigArgs struct {
	MetricName pulumi.StringInput  `pulumi:"metricName"`
	Mode       pulumi.StringInput  `pulumi:"mode"`
	Operator   pulumi.StringInput  `pulumi:"operator"`
	Threshold  pulumi.Float64Input `pulumi:"threshold"`
	Units      pulumi.StringInput  `pulumi:"units"`
}

func (GetAlertConfigurationsResultMetricThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultMetricThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationsResultMetricThresholdConfigArgs) ToGetAlertConfigurationsResultMetricThresholdConfigOutput() GetAlertConfigurationsResultMetricThresholdConfigOutput {
	return i.ToGetAlertConfigurationsResultMetricThresholdConfigOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultMetricThresholdConfigArgs) ToGetAlertConfigurationsResultMetricThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMetricThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultMetricThresholdConfigOutput)
}

// GetAlertConfigurationsResultMetricThresholdConfigArrayInput is an input type that accepts GetAlertConfigurationsResultMetricThresholdConfigArray and GetAlertConfigurationsResultMetricThresholdConfigArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultMetricThresholdConfigArrayInput` via:
//
//	GetAlertConfigurationsResultMetricThresholdConfigArray{ GetAlertConfigurationsResultMetricThresholdConfigArgs{...} }
type GetAlertConfigurationsResultMetricThresholdConfigArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutput() GetAlertConfigurationsResultMetricThresholdConfigArrayOutput
	ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutputWithContext(context.Context) GetAlertConfigurationsResultMetricThresholdConfigArrayOutput
}

type GetAlertConfigurationsResultMetricThresholdConfigArray []GetAlertConfigurationsResultMetricThresholdConfigInput

func (GetAlertConfigurationsResultMetricThresholdConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultMetricThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationsResultMetricThresholdConfigArray) ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutput() GetAlertConfigurationsResultMetricThresholdConfigArrayOutput {
	return i.ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultMetricThresholdConfigArray) ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMetricThresholdConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultMetricThresholdConfigArrayOutput)
}

type GetAlertConfigurationsResultMetricThresholdConfigOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultMetricThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultMetricThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) ToGetAlertConfigurationsResultMetricThresholdConfigOutput() GetAlertConfigurationsResultMetricThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) ToGetAlertConfigurationsResultMetricThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMetricThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultMetricThresholdConfig) string { return v.MetricName }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultMetricThresholdConfig) string { return v.Mode }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultMetricThresholdConfig) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetAlertConfigurationsResultMetricThresholdConfig) float64 { return v.Threshold }).(pulumi.Float64Output)
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultMetricThresholdConfig) string { return v.Units }).(pulumi.StringOutput)
}

type GetAlertConfigurationsResultMetricThresholdConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultMetricThresholdConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultMetricThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationsResultMetricThresholdConfigArrayOutput) ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutput() GetAlertConfigurationsResultMetricThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultMetricThresholdConfigArrayOutput) ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMetricThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultMetricThresholdConfigArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationsResultMetricThresholdConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationsResultMetricThresholdConfig {
		return vs[0].([]GetAlertConfigurationsResultMetricThresholdConfig)[vs[1].(int)]
	}).(GetAlertConfigurationsResultMetricThresholdConfigOutput)
}

type GetAlertConfigurationsResultNotification struct {
	ApiToken                 string   `pulumi:"apiToken"`
	ChannelName              string   `pulumi:"channelName"`
	DatadogApiKey            string   `pulumi:"datadogApiKey"`
	DatadogRegion            string   `pulumi:"datadogRegion"`
	DelayMin                 int      `pulumi:"delayMin"`
	EmailAddress             string   `pulumi:"emailAddress"`
	EmailEnabled             bool     `pulumi:"emailEnabled"`
	FlowName                 string   `pulumi:"flowName"`
	FlowdockApiToken         string   `pulumi:"flowdockApiToken"`
	IntervalMin              int      `pulumi:"intervalMin"`
	MicrosoftTeamsWebhookUrl *string  `pulumi:"microsoftTeamsWebhookUrl"`
	MobileNumber             string   `pulumi:"mobileNumber"`
	OpsGenieApiKey           string   `pulumi:"opsGenieApiKey"`
	OpsGenieRegion           string   `pulumi:"opsGenieRegion"`
	OrgName                  string   `pulumi:"orgName"`
	Roles                    []string `pulumi:"roles"`
	ServiceKey               string   `pulumi:"serviceKey"`
	SmsEnabled               bool     `pulumi:"smsEnabled"`
	TeamId                   string   `pulumi:"teamId"`
	TeamName                 string   `pulumi:"teamName"`
	TypeName                 string   `pulumi:"typeName"`
	Username                 string   `pulumi:"username"`
	VictorOpsApiKey          string   `pulumi:"victorOpsApiKey"`
	VictorOpsRoutingKey      string   `pulumi:"victorOpsRoutingKey"`
	WebhookSecret            *string  `pulumi:"webhookSecret"`
	WebhookUrl               *string  `pulumi:"webhookUrl"`
}

// GetAlertConfigurationsResultNotificationInput is an input type that accepts GetAlertConfigurationsResultNotificationArgs and GetAlertConfigurationsResultNotificationOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultNotificationInput` via:
//
//	GetAlertConfigurationsResultNotificationArgs{...}
type GetAlertConfigurationsResultNotificationInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultNotificationOutput() GetAlertConfigurationsResultNotificationOutput
	ToGetAlertConfigurationsResultNotificationOutputWithContext(context.Context) GetAlertConfigurationsResultNotificationOutput
}

type GetAlertConfigurationsResultNotificationArgs struct {
	ApiToken                 pulumi.StringInput      `pulumi:"apiToken"`
	ChannelName              pulumi.StringInput      `pulumi:"channelName"`
	DatadogApiKey            pulumi.StringInput      `pulumi:"datadogApiKey"`
	DatadogRegion            pulumi.StringInput      `pulumi:"datadogRegion"`
	DelayMin                 pulumi.IntInput         `pulumi:"delayMin"`
	EmailAddress             pulumi.StringInput      `pulumi:"emailAddress"`
	EmailEnabled             pulumi.BoolInput        `pulumi:"emailEnabled"`
	FlowName                 pulumi.StringInput      `pulumi:"flowName"`
	FlowdockApiToken         pulumi.StringInput      `pulumi:"flowdockApiToken"`
	IntervalMin              pulumi.IntInput         `pulumi:"intervalMin"`
	MicrosoftTeamsWebhookUrl pulumi.StringPtrInput   `pulumi:"microsoftTeamsWebhookUrl"`
	MobileNumber             pulumi.StringInput      `pulumi:"mobileNumber"`
	OpsGenieApiKey           pulumi.StringInput      `pulumi:"opsGenieApiKey"`
	OpsGenieRegion           pulumi.StringInput      `pulumi:"opsGenieRegion"`
	OrgName                  pulumi.StringInput      `pulumi:"orgName"`
	Roles                    pulumi.StringArrayInput `pulumi:"roles"`
	ServiceKey               pulumi.StringInput      `pulumi:"serviceKey"`
	SmsEnabled               pulumi.BoolInput        `pulumi:"smsEnabled"`
	TeamId                   pulumi.StringInput      `pulumi:"teamId"`
	TeamName                 pulumi.StringInput      `pulumi:"teamName"`
	TypeName                 pulumi.StringInput      `pulumi:"typeName"`
	Username                 pulumi.StringInput      `pulumi:"username"`
	VictorOpsApiKey          pulumi.StringInput      `pulumi:"victorOpsApiKey"`
	VictorOpsRoutingKey      pulumi.StringInput      `pulumi:"victorOpsRoutingKey"`
	WebhookSecret            pulumi.StringPtrInput   `pulumi:"webhookSecret"`
	WebhookUrl               pulumi.StringPtrInput   `pulumi:"webhookUrl"`
}

func (GetAlertConfigurationsResultNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultNotification)(nil)).Elem()
}

func (i GetAlertConfigurationsResultNotificationArgs) ToGetAlertConfigurationsResultNotificationOutput() GetAlertConfigurationsResultNotificationOutput {
	return i.ToGetAlertConfigurationsResultNotificationOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultNotificationArgs) ToGetAlertConfigurationsResultNotificationOutputWithContext(ctx context.Context) GetAlertConfigurationsResultNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultNotificationOutput)
}

// GetAlertConfigurationsResultNotificationArrayInput is an input type that accepts GetAlertConfigurationsResultNotificationArray and GetAlertConfigurationsResultNotificationArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultNotificationArrayInput` via:
//
//	GetAlertConfigurationsResultNotificationArray{ GetAlertConfigurationsResultNotificationArgs{...} }
type GetAlertConfigurationsResultNotificationArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultNotificationArrayOutput() GetAlertConfigurationsResultNotificationArrayOutput
	ToGetAlertConfigurationsResultNotificationArrayOutputWithContext(context.Context) GetAlertConfigurationsResultNotificationArrayOutput
}

type GetAlertConfigurationsResultNotificationArray []GetAlertConfigurationsResultNotificationInput

func (GetAlertConfigurationsResultNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultNotification)(nil)).Elem()
}

func (i GetAlertConfigurationsResultNotificationArray) ToGetAlertConfigurationsResultNotificationArrayOutput() GetAlertConfigurationsResultNotificationArrayOutput {
	return i.ToGetAlertConfigurationsResultNotificationArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultNotificationArray) ToGetAlertConfigurationsResultNotificationArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultNotificationArrayOutput)
}

type GetAlertConfigurationsResultNotificationOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultNotification)(nil)).Elem()
}

func (o GetAlertConfigurationsResultNotificationOutput) ToGetAlertConfigurationsResultNotificationOutput() GetAlertConfigurationsResultNotificationOutput {
	return o
}

func (o GetAlertConfigurationsResultNotificationOutput) ToGetAlertConfigurationsResultNotificationOutputWithContext(ctx context.Context) GetAlertConfigurationsResultNotificationOutput {
	return o
}

func (o GetAlertConfigurationsResultNotificationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.ApiToken }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.ChannelName }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) DatadogApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.DatadogApiKey }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) DatadogRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.DatadogRegion }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) DelayMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) int { return v.DelayMin }).(pulumi.IntOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.EmailAddress }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) EmailEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) bool { return v.EmailEnabled }).(pulumi.BoolOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) FlowName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.FlowName }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) FlowdockApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.FlowdockApiToken }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) IntervalMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) int { return v.IntervalMin }).(pulumi.IntOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) MicrosoftTeamsWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) *string { return v.MicrosoftTeamsWebhookUrl }).(pulumi.StringPtrOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) MobileNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.MobileNumber }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) OpsGenieApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.OpsGenieApiKey }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) OpsGenieRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.OpsGenieRegion }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) OrgName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.OrgName }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) ServiceKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.ServiceKey }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) SmsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) bool { return v.SmsEnabled }).(pulumi.BoolOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.TeamId }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) TeamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.TeamName }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.TypeName }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) VictorOpsApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.VictorOpsApiKey }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) VictorOpsRoutingKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.VictorOpsRoutingKey }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) WebhookSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) *string { return v.WebhookSecret }).(pulumi.StringPtrOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) *string { return v.WebhookUrl }).(pulumi.StringPtrOutput)
}

type GetAlertConfigurationsResultNotificationArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultNotification)(nil)).Elem()
}

func (o GetAlertConfigurationsResultNotificationArrayOutput) ToGetAlertConfigurationsResultNotificationArrayOutput() GetAlertConfigurationsResultNotificationArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultNotificationArrayOutput) ToGetAlertConfigurationsResultNotificationArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultNotificationArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultNotificationArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationsResultNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationsResultNotification {
		return vs[0].([]GetAlertConfigurationsResultNotification)[vs[1].(int)]
	}).(GetAlertConfigurationsResultNotificationOutput)
}

type GetAlertConfigurationsResultOutputType struct {
	Label *string `pulumi:"label"`
	Type  string  `pulumi:"type"`
	Value string  `pulumi:"value"`
}

// GetAlertConfigurationsResultOutputTypeInput is an input type that accepts GetAlertConfigurationsResultOutputTypeArgs and GetAlertConfigurationsResultOutputTypeOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultOutputTypeInput` via:
//
//	GetAlertConfigurationsResultOutputTypeArgs{...}
type GetAlertConfigurationsResultOutputTypeInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultOutputTypeOutput() GetAlertConfigurationsResultOutputTypeOutput
	ToGetAlertConfigurationsResultOutputTypeOutputWithContext(context.Context) GetAlertConfigurationsResultOutputTypeOutput
}

type GetAlertConfigurationsResultOutputTypeArgs struct {
	Label pulumi.StringPtrInput `pulumi:"label"`
	Type  pulumi.StringInput    `pulumi:"type"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (GetAlertConfigurationsResultOutputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultOutputType)(nil)).Elem()
}

func (i GetAlertConfigurationsResultOutputTypeArgs) ToGetAlertConfigurationsResultOutputTypeOutput() GetAlertConfigurationsResultOutputTypeOutput {
	return i.ToGetAlertConfigurationsResultOutputTypeOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultOutputTypeArgs) ToGetAlertConfigurationsResultOutputTypeOutputWithContext(ctx context.Context) GetAlertConfigurationsResultOutputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultOutputTypeOutput)
}

// GetAlertConfigurationsResultOutputTypeArrayInput is an input type that accepts GetAlertConfigurationsResultOutputTypeArray and GetAlertConfigurationsResultOutputTypeArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultOutputTypeArrayInput` via:
//
//	GetAlertConfigurationsResultOutputTypeArray{ GetAlertConfigurationsResultOutputTypeArgs{...} }
type GetAlertConfigurationsResultOutputTypeArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultOutputTypeArrayOutput() GetAlertConfigurationsResultOutputTypeArrayOutput
	ToGetAlertConfigurationsResultOutputTypeArrayOutputWithContext(context.Context) GetAlertConfigurationsResultOutputTypeArrayOutput
}

type GetAlertConfigurationsResultOutputTypeArray []GetAlertConfigurationsResultOutputTypeInput

func (GetAlertConfigurationsResultOutputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultOutputType)(nil)).Elem()
}

func (i GetAlertConfigurationsResultOutputTypeArray) ToGetAlertConfigurationsResultOutputTypeArrayOutput() GetAlertConfigurationsResultOutputTypeArrayOutput {
	return i.ToGetAlertConfigurationsResultOutputTypeArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultOutputTypeArray) ToGetAlertConfigurationsResultOutputTypeArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultOutputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultOutputTypeArrayOutput)
}

type GetAlertConfigurationsResultOutputTypeOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultOutputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultOutputType)(nil)).Elem()
}

func (o GetAlertConfigurationsResultOutputTypeOutput) ToGetAlertConfigurationsResultOutputTypeOutput() GetAlertConfigurationsResultOutputTypeOutput {
	return o
}

func (o GetAlertConfigurationsResultOutputTypeOutput) ToGetAlertConfigurationsResultOutputTypeOutputWithContext(ctx context.Context) GetAlertConfigurationsResultOutputTypeOutput {
	return o
}

func (o GetAlertConfigurationsResultOutputTypeOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultOutputType) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o GetAlertConfigurationsResultOutputTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultOutputType) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultOutputTypeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultOutputType) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertConfigurationsResultOutputTypeArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultOutputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultOutputType)(nil)).Elem()
}

func (o GetAlertConfigurationsResultOutputTypeArrayOutput) ToGetAlertConfigurationsResultOutputTypeArrayOutput() GetAlertConfigurationsResultOutputTypeArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultOutputTypeArrayOutput) ToGetAlertConfigurationsResultOutputTypeArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultOutputTypeArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultOutputTypeArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationsResultOutputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationsResultOutputType {
		return vs[0].([]GetAlertConfigurationsResultOutputType)[vs[1].(int)]
	}).(GetAlertConfigurationsResultOutputTypeOutput)
}

type GetAlertConfigurationsResultThresholdConfig struct {
	Operator  string  `pulumi:"operator"`
	Threshold float64 `pulumi:"threshold"`
	Units     string  `pulumi:"units"`
}

// GetAlertConfigurationsResultThresholdConfigInput is an input type that accepts GetAlertConfigurationsResultThresholdConfigArgs and GetAlertConfigurationsResultThresholdConfigOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultThresholdConfigInput` via:
//
//	GetAlertConfigurationsResultThresholdConfigArgs{...}
type GetAlertConfigurationsResultThresholdConfigInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultThresholdConfigOutput() GetAlertConfigurationsResultThresholdConfigOutput
	ToGetAlertConfigurationsResultThresholdConfigOutputWithContext(context.Context) GetAlertConfigurationsResultThresholdConfigOutput
}

type GetAlertConfigurationsResultThresholdConfigArgs struct {
	Operator  pulumi.StringInput  `pulumi:"operator"`
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	Units     pulumi.StringInput  `pulumi:"units"`
}

func (GetAlertConfigurationsResultThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationsResultThresholdConfigArgs) ToGetAlertConfigurationsResultThresholdConfigOutput() GetAlertConfigurationsResultThresholdConfigOutput {
	return i.ToGetAlertConfigurationsResultThresholdConfigOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultThresholdConfigArgs) ToGetAlertConfigurationsResultThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationsResultThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultThresholdConfigOutput)
}

// GetAlertConfigurationsResultThresholdConfigArrayInput is an input type that accepts GetAlertConfigurationsResultThresholdConfigArray and GetAlertConfigurationsResultThresholdConfigArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultThresholdConfigArrayInput` via:
//
//	GetAlertConfigurationsResultThresholdConfigArray{ GetAlertConfigurationsResultThresholdConfigArgs{...} }
type GetAlertConfigurationsResultThresholdConfigArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultThresholdConfigArrayOutput() GetAlertConfigurationsResultThresholdConfigArrayOutput
	ToGetAlertConfigurationsResultThresholdConfigArrayOutputWithContext(context.Context) GetAlertConfigurationsResultThresholdConfigArrayOutput
}

type GetAlertConfigurationsResultThresholdConfigArray []GetAlertConfigurationsResultThresholdConfigInput

func (GetAlertConfigurationsResultThresholdConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationsResultThresholdConfigArray) ToGetAlertConfigurationsResultThresholdConfigArrayOutput() GetAlertConfigurationsResultThresholdConfigArrayOutput {
	return i.ToGetAlertConfigurationsResultThresholdConfigArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultThresholdConfigArray) ToGetAlertConfigurationsResultThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultThresholdConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultThresholdConfigArrayOutput)
}

type GetAlertConfigurationsResultThresholdConfigOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationsResultThresholdConfigOutput) ToGetAlertConfigurationsResultThresholdConfigOutput() GetAlertConfigurationsResultThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationsResultThresholdConfigOutput) ToGetAlertConfigurationsResultThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationsResultThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationsResultThresholdConfigOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultThresholdConfig) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultThresholdConfigOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetAlertConfigurationsResultThresholdConfig) float64 { return v.Threshold }).(pulumi.Float64Output)
}

func (o GetAlertConfigurationsResultThresholdConfigOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultThresholdConfig) string { return v.Units }).(pulumi.StringOutput)
}

type GetAlertConfigurationsResultThresholdConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultThresholdConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationsResultThresholdConfigArrayOutput) ToGetAlertConfigurationsResultThresholdConfigArrayOutput() GetAlertConfigurationsResultThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultThresholdConfigArrayOutput) ToGetAlertConfigurationsResultThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultThresholdConfigArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationsResultThresholdConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationsResultThresholdConfig {
		return vs[0].([]GetAlertConfigurationsResultThresholdConfig)[vs[1].(int)]
	}).(GetAlertConfigurationsResultThresholdConfigOutput)
}

type GetApiKeysResult struct {
	// Unique identifier for the API key you want to update. Use the /orgs/{ORG-ID}/apiKeys endpoint to retrieve all API keys to which the authenticated user has access for the specified organization.
	ApiKeyId string `pulumi:"apiKeyId"`
	// Description of this Organization API key.
	Description string `pulumi:"description"`
	PublicKey   string `pulumi:"publicKey"`
	// Name of the role. This resource returns all the roles the user has in Atlas.
	RoleNames []string `pulumi:"roleNames"`
}

// GetApiKeysResultInput is an input type that accepts GetApiKeysResultArgs and GetApiKeysResultOutput values.
// You can construct a concrete instance of `GetApiKeysResultInput` via:
//
//	GetApiKeysResultArgs{...}
type GetApiKeysResultInput interface {
	pulumi.Input

	ToGetApiKeysResultOutput() GetApiKeysResultOutput
	ToGetApiKeysResultOutputWithContext(context.Context) GetApiKeysResultOutput
}

type GetApiKeysResultArgs struct {
	// Unique identifier for the API key you want to update. Use the /orgs/{ORG-ID}/apiKeys endpoint to retrieve all API keys to which the authenticated user has access for the specified organization.
	ApiKeyId pulumi.StringInput `pulumi:"apiKeyId"`
	// Description of this Organization API key.
	Description pulumi.StringInput `pulumi:"description"`
	PublicKey   pulumi.StringInput `pulumi:"publicKey"`
	// Name of the role. This resource returns all the roles the user has in Atlas.
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
}

func (GetApiKeysResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiKeysResult)(nil)).Elem()
}

func (i GetApiKeysResultArgs) ToGetApiKeysResultOutput() GetApiKeysResultOutput {
	return i.ToGetApiKeysResultOutputWithContext(context.Background())
}

func (i GetApiKeysResultArgs) ToGetApiKeysResultOutputWithContext(ctx context.Context) GetApiKeysResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiKeysResultOutput)
}

// GetApiKeysResultArrayInput is an input type that accepts GetApiKeysResultArray and GetApiKeysResultArrayOutput values.
// You can construct a concrete instance of `GetApiKeysResultArrayInput` via:
//
//	GetApiKeysResultArray{ GetApiKeysResultArgs{...} }
type GetApiKeysResultArrayInput interface {
	pulumi.Input

	ToGetApiKeysResultArrayOutput() GetApiKeysResultArrayOutput
	ToGetApiKeysResultArrayOutputWithContext(context.Context) GetApiKeysResultArrayOutput
}

type GetApiKeysResultArray []GetApiKeysResultInput

func (GetApiKeysResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiKeysResult)(nil)).Elem()
}

func (i GetApiKeysResultArray) ToGetApiKeysResultArrayOutput() GetApiKeysResultArrayOutput {
	return i.ToGetApiKeysResultArrayOutputWithContext(context.Background())
}

func (i GetApiKeysResultArray) ToGetApiKeysResultArrayOutputWithContext(ctx context.Context) GetApiKeysResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiKeysResultArrayOutput)
}

type GetApiKeysResultOutput struct{ *pulumi.OutputState }

func (GetApiKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiKeysResult)(nil)).Elem()
}

func (o GetApiKeysResultOutput) ToGetApiKeysResultOutput() GetApiKeysResultOutput {
	return o
}

func (o GetApiKeysResultOutput) ToGetApiKeysResultOutputWithContext(ctx context.Context) GetApiKeysResultOutput {
	return o
}

// Unique identifier for the API key you want to update. Use the /orgs/{ORG-ID}/apiKeys endpoint to retrieve all API keys to which the authenticated user has access for the specified organization.
func (o GetApiKeysResultOutput) ApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiKeysResult) string { return v.ApiKeyId }).(pulumi.StringOutput)
}

// Description of this Organization API key.
func (o GetApiKeysResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiKeysResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetApiKeysResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiKeysResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

// Name of the role. This resource returns all the roles the user has in Atlas.
func (o GetApiKeysResultOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApiKeysResult) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

type GetApiKeysResultArrayOutput struct{ *pulumi.OutputState }

func (GetApiKeysResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiKeysResult)(nil)).Elem()
}

func (o GetApiKeysResultArrayOutput) ToGetApiKeysResultArrayOutput() GetApiKeysResultArrayOutput {
	return o
}

func (o GetApiKeysResultArrayOutput) ToGetApiKeysResultArrayOutputWithContext(ctx context.Context) GetApiKeysResultArrayOutput {
	return o
}

func (o GetApiKeysResultArrayOutput) Index(i pulumi.IntInput) GetApiKeysResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApiKeysResult {
		return vs[0].([]GetApiKeysResult)[vs[1].(int)]
	}).(GetApiKeysResultOutput)
}

type GetBackupCompliancePolicyOnDemandPolicyItem struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetBackupCompliancePolicyOnDemandPolicyItemInput is an input type that accepts GetBackupCompliancePolicyOnDemandPolicyItemArgs and GetBackupCompliancePolicyOnDemandPolicyItemOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyOnDemandPolicyItemInput` via:
//
//	GetBackupCompliancePolicyOnDemandPolicyItemArgs{...}
type GetBackupCompliancePolicyOnDemandPolicyItemInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyOnDemandPolicyItemOutput() GetBackupCompliancePolicyOnDemandPolicyItemOutput
	ToGetBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(context.Context) GetBackupCompliancePolicyOnDemandPolicyItemOutput
}

type GetBackupCompliancePolicyOnDemandPolicyItemArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetBackupCompliancePolicyOnDemandPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (i GetBackupCompliancePolicyOnDemandPolicyItemArgs) ToGetBackupCompliancePolicyOnDemandPolicyItemOutput() GetBackupCompliancePolicyOnDemandPolicyItemOutput {
	return i.ToGetBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyOnDemandPolicyItemArgs) ToGetBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(ctx context.Context) GetBackupCompliancePolicyOnDemandPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyOnDemandPolicyItemOutput)
}

func (i GetBackupCompliancePolicyOnDemandPolicyItemArgs) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutput() GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return i.ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyOnDemandPolicyItemArgs) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyOnDemandPolicyItemOutput).ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx)
}

// GetBackupCompliancePolicyOnDemandPolicyItemPtrInput is an input type that accepts GetBackupCompliancePolicyOnDemandPolicyItemArgs, GetBackupCompliancePolicyOnDemandPolicyItemPtr and GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyOnDemandPolicyItemPtrInput` via:
//
//	        GetBackupCompliancePolicyOnDemandPolicyItemArgs{...}
//
//	or:
//
//	        nil
type GetBackupCompliancePolicyOnDemandPolicyItemPtrInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutput() GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput
	ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Context) GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput
}

type getBackupCompliancePolicyOnDemandPolicyItemPtrType GetBackupCompliancePolicyOnDemandPolicyItemArgs

func GetBackupCompliancePolicyOnDemandPolicyItemPtr(v *GetBackupCompliancePolicyOnDemandPolicyItemArgs) GetBackupCompliancePolicyOnDemandPolicyItemPtrInput {
	return (*getBackupCompliancePolicyOnDemandPolicyItemPtrType)(v)
}

func (*getBackupCompliancePolicyOnDemandPolicyItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (i *getBackupCompliancePolicyOnDemandPolicyItemPtrType) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutput() GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return i.ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Background())
}

func (i *getBackupCompliancePolicyOnDemandPolicyItemPtrType) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput)
}

type GetBackupCompliancePolicyOnDemandPolicyItemOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyOnDemandPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) ToGetBackupCompliancePolicyOnDemandPolicyItemOutput() GetBackupCompliancePolicyOnDemandPolicyItemOutput {
	return o
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) ToGetBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(ctx context.Context) GetBackupCompliancePolicyOnDemandPolicyItemOutput {
	return o
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutput() GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o.ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Background())
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetBackupCompliancePolicyOnDemandPolicyItem) *GetBackupCompliancePolicyOnDemandPolicyItem {
		return &v
	}).(GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyOnDemandPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyOnDemandPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyOnDemandPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyOnDemandPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyOnDemandPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutput() GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) Elem() GetBackupCompliancePolicyOnDemandPolicyItemOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyOnDemandPolicyItem) GetBackupCompliancePolicyOnDemandPolicyItem {
		if v != nil {
			return *v
		}
		var ret GetBackupCompliancePolicyOnDemandPolicyItem
		return ret
	}).(GetBackupCompliancePolicyOnDemandPolicyItemOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyOnDemandPolicyItem) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyOnDemandPolicyItem) *string {
		if v == nil {
			return nil
		}
		return &v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyOnDemandPolicyItem) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyOnDemandPolicyItem) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyOnDemandPolicyItem) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type GetBackupCompliancePolicyPolicyItemDaily struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetBackupCompliancePolicyPolicyItemDailyInput is an input type that accepts GetBackupCompliancePolicyPolicyItemDailyArgs and GetBackupCompliancePolicyPolicyItemDailyOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemDailyInput` via:
//
//	GetBackupCompliancePolicyPolicyItemDailyArgs{...}
type GetBackupCompliancePolicyPolicyItemDailyInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemDailyOutput() GetBackupCompliancePolicyPolicyItemDailyOutput
	ToGetBackupCompliancePolicyPolicyItemDailyOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemDailyOutput
}

type GetBackupCompliancePolicyPolicyItemDailyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetBackupCompliancePolicyPolicyItemDailyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (i GetBackupCompliancePolicyPolicyItemDailyArgs) ToGetBackupCompliancePolicyPolicyItemDailyOutput() GetBackupCompliancePolicyPolicyItemDailyOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemDailyOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemDailyArgs) ToGetBackupCompliancePolicyPolicyItemDailyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemDailyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemDailyOutput)
}

func (i GetBackupCompliancePolicyPolicyItemDailyArgs) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutput() GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemDailyArgs) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemDailyOutput).ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx)
}

// GetBackupCompliancePolicyPolicyItemDailyPtrInput is an input type that accepts GetBackupCompliancePolicyPolicyItemDailyArgs, GetBackupCompliancePolicyPolicyItemDailyPtr and GetBackupCompliancePolicyPolicyItemDailyPtrOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemDailyPtrInput` via:
//
//	        GetBackupCompliancePolicyPolicyItemDailyArgs{...}
//
//	or:
//
//	        nil
type GetBackupCompliancePolicyPolicyItemDailyPtrInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemDailyPtrOutput() GetBackupCompliancePolicyPolicyItemDailyPtrOutput
	ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemDailyPtrOutput
}

type getBackupCompliancePolicyPolicyItemDailyPtrType GetBackupCompliancePolicyPolicyItemDailyArgs

func GetBackupCompliancePolicyPolicyItemDailyPtr(v *GetBackupCompliancePolicyPolicyItemDailyArgs) GetBackupCompliancePolicyPolicyItemDailyPtrInput {
	return (*getBackupCompliancePolicyPolicyItemDailyPtrType)(v)
}

func (*getBackupCompliancePolicyPolicyItemDailyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (i *getBackupCompliancePolicyPolicyItemDailyPtrType) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutput() GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Background())
}

func (i *getBackupCompliancePolicyPolicyItemDailyPtrType) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemDailyPtrOutput)
}

type GetBackupCompliancePolicyPolicyItemDailyOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemDailyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemDailyOutput) ToGetBackupCompliancePolicyPolicyItemDailyOutput() GetBackupCompliancePolicyPolicyItemDailyOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemDailyOutput) ToGetBackupCompliancePolicyPolicyItemDailyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemDailyOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemDailyOutput) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutput() GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o.ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Background())
}

func (o GetBackupCompliancePolicyPolicyItemDailyOutput) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetBackupCompliancePolicyPolicyItemDaily) *GetBackupCompliancePolicyPolicyItemDaily {
		return &v
	}).(GetBackupCompliancePolicyPolicyItemDailyPtrOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyPolicyItemDailyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemDaily) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyPolicyItemDailyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemDaily) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyPolicyItemDailyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemDaily) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyPolicyItemDailyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemDaily) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyPolicyItemDailyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemDaily) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetBackupCompliancePolicyPolicyItemDailyPtrOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemDailyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutput() GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) Elem() GetBackupCompliancePolicyPolicyItemDailyOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemDaily) GetBackupCompliancePolicyPolicyItemDaily {
		if v != nil {
			return *v
		}
		var ret GetBackupCompliancePolicyPolicyItemDaily
		return ret
	}).(GetBackupCompliancePolicyPolicyItemDailyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemDaily) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return &v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemDaily) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type GetBackupCompliancePolicyPolicyItemHourly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetBackupCompliancePolicyPolicyItemHourlyInput is an input type that accepts GetBackupCompliancePolicyPolicyItemHourlyArgs and GetBackupCompliancePolicyPolicyItemHourlyOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemHourlyInput` via:
//
//	GetBackupCompliancePolicyPolicyItemHourlyArgs{...}
type GetBackupCompliancePolicyPolicyItemHourlyInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemHourlyOutput() GetBackupCompliancePolicyPolicyItemHourlyOutput
	ToGetBackupCompliancePolicyPolicyItemHourlyOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemHourlyOutput
}

type GetBackupCompliancePolicyPolicyItemHourlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetBackupCompliancePolicyPolicyItemHourlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (i GetBackupCompliancePolicyPolicyItemHourlyArgs) ToGetBackupCompliancePolicyPolicyItemHourlyOutput() GetBackupCompliancePolicyPolicyItemHourlyOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemHourlyOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemHourlyArgs) ToGetBackupCompliancePolicyPolicyItemHourlyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemHourlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemHourlyOutput)
}

func (i GetBackupCompliancePolicyPolicyItemHourlyArgs) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutput() GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemHourlyArgs) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemHourlyOutput).ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx)
}

// GetBackupCompliancePolicyPolicyItemHourlyPtrInput is an input type that accepts GetBackupCompliancePolicyPolicyItemHourlyArgs, GetBackupCompliancePolicyPolicyItemHourlyPtr and GetBackupCompliancePolicyPolicyItemHourlyPtrOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemHourlyPtrInput` via:
//
//	        GetBackupCompliancePolicyPolicyItemHourlyArgs{...}
//
//	or:
//
//	        nil
type GetBackupCompliancePolicyPolicyItemHourlyPtrInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutput() GetBackupCompliancePolicyPolicyItemHourlyPtrOutput
	ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemHourlyPtrOutput
}

type getBackupCompliancePolicyPolicyItemHourlyPtrType GetBackupCompliancePolicyPolicyItemHourlyArgs

func GetBackupCompliancePolicyPolicyItemHourlyPtr(v *GetBackupCompliancePolicyPolicyItemHourlyArgs) GetBackupCompliancePolicyPolicyItemHourlyPtrInput {
	return (*getBackupCompliancePolicyPolicyItemHourlyPtrType)(v)
}

func (*getBackupCompliancePolicyPolicyItemHourlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (i *getBackupCompliancePolicyPolicyItemHourlyPtrType) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutput() GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (i *getBackupCompliancePolicyPolicyItemHourlyPtrType) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemHourlyPtrOutput)
}

type GetBackupCompliancePolicyPolicyItemHourlyOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemHourlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) ToGetBackupCompliancePolicyPolicyItemHourlyOutput() GetBackupCompliancePolicyPolicyItemHourlyOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) ToGetBackupCompliancePolicyPolicyItemHourlyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemHourlyOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutput() GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o.ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetBackupCompliancePolicyPolicyItemHourly) *GetBackupCompliancePolicyPolicyItemHourly {
		return &v
	}).(GetBackupCompliancePolicyPolicyItemHourlyPtrOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemHourly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemHourly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemHourly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemHourly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemHourly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetBackupCompliancePolicyPolicyItemHourlyPtrOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutput() GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) Elem() GetBackupCompliancePolicyPolicyItemHourlyOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemHourly) GetBackupCompliancePolicyPolicyItemHourly {
		if v != nil {
			return *v
		}
		var ret GetBackupCompliancePolicyPolicyItemHourly
		return ret
	}).(GetBackupCompliancePolicyPolicyItemHourlyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemHourly) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return &v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemHourly) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type GetBackupCompliancePolicyPolicyItemMonthly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetBackupCompliancePolicyPolicyItemMonthlyInput is an input type that accepts GetBackupCompliancePolicyPolicyItemMonthlyArgs and GetBackupCompliancePolicyPolicyItemMonthlyOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemMonthlyInput` via:
//
//	GetBackupCompliancePolicyPolicyItemMonthlyArgs{...}
type GetBackupCompliancePolicyPolicyItemMonthlyInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemMonthlyOutput() GetBackupCompliancePolicyPolicyItemMonthlyOutput
	ToGetBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemMonthlyOutput
}

type GetBackupCompliancePolicyPolicyItemMonthlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetBackupCompliancePolicyPolicyItemMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (i GetBackupCompliancePolicyPolicyItemMonthlyArgs) ToGetBackupCompliancePolicyPolicyItemMonthlyOutput() GetBackupCompliancePolicyPolicyItemMonthlyOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemMonthlyArgs) ToGetBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemMonthlyOutput)
}

// GetBackupCompliancePolicyPolicyItemMonthlyArrayInput is an input type that accepts GetBackupCompliancePolicyPolicyItemMonthlyArray and GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemMonthlyArrayInput` via:
//
//	GetBackupCompliancePolicyPolicyItemMonthlyArray{ GetBackupCompliancePolicyPolicyItemMonthlyArgs{...} }
type GetBackupCompliancePolicyPolicyItemMonthlyArrayInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutput() GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput
	ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput
}

type GetBackupCompliancePolicyPolicyItemMonthlyArray []GetBackupCompliancePolicyPolicyItemMonthlyInput

func (GetBackupCompliancePolicyPolicyItemMonthlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (i GetBackupCompliancePolicyPolicyItemMonthlyArray) ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutput() GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemMonthlyArray) ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput)
}

type GetBackupCompliancePolicyPolicyItemMonthlyOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) ToGetBackupCompliancePolicyPolicyItemMonthlyOutput() GetBackupCompliancePolicyPolicyItemMonthlyOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) ToGetBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemMonthlyOutput {
	return o
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemMonthly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemMonthly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemMonthly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemMonthly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemMonthly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput) ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutput() GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput) ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput) Index(i pulumi.IntInput) GetBackupCompliancePolicyPolicyItemMonthlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupCompliancePolicyPolicyItemMonthly {
		return vs[0].([]GetBackupCompliancePolicyPolicyItemMonthly)[vs[1].(int)]
	}).(GetBackupCompliancePolicyPolicyItemMonthlyOutput)
}

type GetBackupCompliancePolicyPolicyItemWeekly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetBackupCompliancePolicyPolicyItemWeeklyInput is an input type that accepts GetBackupCompliancePolicyPolicyItemWeeklyArgs and GetBackupCompliancePolicyPolicyItemWeeklyOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemWeeklyInput` via:
//
//	GetBackupCompliancePolicyPolicyItemWeeklyArgs{...}
type GetBackupCompliancePolicyPolicyItemWeeklyInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemWeeklyOutput() GetBackupCompliancePolicyPolicyItemWeeklyOutput
	ToGetBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemWeeklyOutput
}

type GetBackupCompliancePolicyPolicyItemWeeklyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetBackupCompliancePolicyPolicyItemWeeklyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (i GetBackupCompliancePolicyPolicyItemWeeklyArgs) ToGetBackupCompliancePolicyPolicyItemWeeklyOutput() GetBackupCompliancePolicyPolicyItemWeeklyOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemWeeklyArgs) ToGetBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemWeeklyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemWeeklyOutput)
}

// GetBackupCompliancePolicyPolicyItemWeeklyArrayInput is an input type that accepts GetBackupCompliancePolicyPolicyItemWeeklyArray and GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemWeeklyArrayInput` via:
//
//	GetBackupCompliancePolicyPolicyItemWeeklyArray{ GetBackupCompliancePolicyPolicyItemWeeklyArgs{...} }
type GetBackupCompliancePolicyPolicyItemWeeklyArrayInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutput() GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput
	ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput
}

type GetBackupCompliancePolicyPolicyItemWeeklyArray []GetBackupCompliancePolicyPolicyItemWeeklyInput

func (GetBackupCompliancePolicyPolicyItemWeeklyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (i GetBackupCompliancePolicyPolicyItemWeeklyArray) ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutput() GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemWeeklyArray) ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput)
}

type GetBackupCompliancePolicyPolicyItemWeeklyOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemWeeklyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) ToGetBackupCompliancePolicyPolicyItemWeeklyOutput() GetBackupCompliancePolicyPolicyItemWeeklyOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) ToGetBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemWeeklyOutput {
	return o
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemWeekly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemWeekly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemWeekly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemWeekly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemWeekly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput) ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutput() GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput) ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput) Index(i pulumi.IntInput) GetBackupCompliancePolicyPolicyItemWeeklyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupCompliancePolicyPolicyItemWeekly {
		return vs[0].([]GetBackupCompliancePolicyPolicyItemWeekly)[vs[1].(int)]
	}).(GetBackupCompliancePolicyPolicyItemWeeklyOutput)
}

type GetCloudBackupScheduleCopySetting struct {
	// Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. "AWS" "AZURE" "GCP"
	CloudProvider string `pulumi:"cloudProvider"`
	// List that describes which types of snapshots to copy. i.e. "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "ON_DEMAND"
	Frequencies []string `pulumi:"frequencies"`
	// Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under https://www.mongodb.com/docs/atlas/reference/cloud-providers/ 'regions' link
	RegionName string `pulumi:"regionName"`
	// Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, do a GET request to Return One Cluster in One Project and consult the replicationSpecs array https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#operation/returnOneCluster
	ReplicationSpecId string `pulumi:"replicationSpecId"`
	// Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
	ShouldCopyOplogs bool `pulumi:"shouldCopyOplogs"`
}

// GetCloudBackupScheduleCopySettingInput is an input type that accepts GetCloudBackupScheduleCopySettingArgs and GetCloudBackupScheduleCopySettingOutput values.
// You can construct a concrete instance of `GetCloudBackupScheduleCopySettingInput` via:
//
//	GetCloudBackupScheduleCopySettingArgs{...}
type GetCloudBackupScheduleCopySettingInput interface {
	pulumi.Input

	ToGetCloudBackupScheduleCopySettingOutput() GetCloudBackupScheduleCopySettingOutput
	ToGetCloudBackupScheduleCopySettingOutputWithContext(context.Context) GetCloudBackupScheduleCopySettingOutput
}

type GetCloudBackupScheduleCopySettingArgs struct {
	// Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. "AWS" "AZURE" "GCP"
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// List that describes which types of snapshots to copy. i.e. "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "ON_DEMAND"
	Frequencies pulumi.StringArrayInput `pulumi:"frequencies"`
	// Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under https://www.mongodb.com/docs/atlas/reference/cloud-providers/ 'regions' link
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, do a GET request to Return One Cluster in One Project and consult the replicationSpecs array https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#operation/returnOneCluster
	ReplicationSpecId pulumi.StringInput `pulumi:"replicationSpecId"`
	// Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
	ShouldCopyOplogs pulumi.BoolInput `pulumi:"shouldCopyOplogs"`
}

func (GetCloudBackupScheduleCopySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupScheduleCopySetting)(nil)).Elem()
}

func (i GetCloudBackupScheduleCopySettingArgs) ToGetCloudBackupScheduleCopySettingOutput() GetCloudBackupScheduleCopySettingOutput {
	return i.ToGetCloudBackupScheduleCopySettingOutputWithContext(context.Background())
}

func (i GetCloudBackupScheduleCopySettingArgs) ToGetCloudBackupScheduleCopySettingOutputWithContext(ctx context.Context) GetCloudBackupScheduleCopySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupScheduleCopySettingOutput)
}

// GetCloudBackupScheduleCopySettingArrayInput is an input type that accepts GetCloudBackupScheduleCopySettingArray and GetCloudBackupScheduleCopySettingArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupScheduleCopySettingArrayInput` via:
//
//	GetCloudBackupScheduleCopySettingArray{ GetCloudBackupScheduleCopySettingArgs{...} }
type GetCloudBackupScheduleCopySettingArrayInput interface {
	pulumi.Input

	ToGetCloudBackupScheduleCopySettingArrayOutput() GetCloudBackupScheduleCopySettingArrayOutput
	ToGetCloudBackupScheduleCopySettingArrayOutputWithContext(context.Context) GetCloudBackupScheduleCopySettingArrayOutput
}

type GetCloudBackupScheduleCopySettingArray []GetCloudBackupScheduleCopySettingInput

func (GetCloudBackupScheduleCopySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupScheduleCopySetting)(nil)).Elem()
}

func (i GetCloudBackupScheduleCopySettingArray) ToGetCloudBackupScheduleCopySettingArrayOutput() GetCloudBackupScheduleCopySettingArrayOutput {
	return i.ToGetCloudBackupScheduleCopySettingArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupScheduleCopySettingArray) ToGetCloudBackupScheduleCopySettingArrayOutputWithContext(ctx context.Context) GetCloudBackupScheduleCopySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupScheduleCopySettingArrayOutput)
}

type GetCloudBackupScheduleCopySettingOutput struct{ *pulumi.OutputState }

func (GetCloudBackupScheduleCopySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupScheduleCopySetting)(nil)).Elem()
}

func (o GetCloudBackupScheduleCopySettingOutput) ToGetCloudBackupScheduleCopySettingOutput() GetCloudBackupScheduleCopySettingOutput {
	return o
}

func (o GetCloudBackupScheduleCopySettingOutput) ToGetCloudBackupScheduleCopySettingOutputWithContext(ctx context.Context) GetCloudBackupScheduleCopySettingOutput {
	return o
}

// Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. "AWS" "AZURE" "GCP"
func (o GetCloudBackupScheduleCopySettingOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupScheduleCopySetting) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// List that describes which types of snapshots to copy. i.e. "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "ON_DEMAND"
func (o GetCloudBackupScheduleCopySettingOutput) Frequencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudBackupScheduleCopySetting) []string { return v.Frequencies }).(pulumi.StringArrayOutput)
}

// Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under https://www.mongodb.com/docs/atlas/reference/cloud-providers/ 'regions' link
func (o GetCloudBackupScheduleCopySettingOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupScheduleCopySetting) string { return v.RegionName }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, do a GET request to Return One Cluster in One Project and consult the replicationSpecs array https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#operation/returnOneCluster
func (o GetCloudBackupScheduleCopySettingOutput) ReplicationSpecId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupScheduleCopySetting) string { return v.ReplicationSpecId }).(pulumi.StringOutput)
}

// Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
func (o GetCloudBackupScheduleCopySettingOutput) ShouldCopyOplogs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudBackupScheduleCopySetting) bool { return v.ShouldCopyOplogs }).(pulumi.BoolOutput)
}

type GetCloudBackupScheduleCopySettingArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupScheduleCopySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupScheduleCopySetting)(nil)).Elem()
}

func (o GetCloudBackupScheduleCopySettingArrayOutput) ToGetCloudBackupScheduleCopySettingArrayOutput() GetCloudBackupScheduleCopySettingArrayOutput {
	return o
}

func (o GetCloudBackupScheduleCopySettingArrayOutput) ToGetCloudBackupScheduleCopySettingArrayOutputWithContext(ctx context.Context) GetCloudBackupScheduleCopySettingArrayOutput {
	return o
}

func (o GetCloudBackupScheduleCopySettingArrayOutput) Index(i pulumi.IntInput) GetCloudBackupScheduleCopySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupScheduleCopySetting {
		return vs[0].([]GetCloudBackupScheduleCopySetting)[vs[1].(int)]
	}).(GetCloudBackupScheduleCopySettingOutput)
}

type GetCloudBackupScheduleExport struct {
	// Unique identifier of the CloudBackupSnapshotExportBucket export_bucket_id value.
	ExportBucketId string `pulumi:"exportBucketId"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
}

// GetCloudBackupScheduleExportInput is an input type that accepts GetCloudBackupScheduleExportArgs and GetCloudBackupScheduleExportOutput values.
// You can construct a concrete instance of `GetCloudBackupScheduleExportInput` via:
//
//	GetCloudBackupScheduleExportArgs{...}
type GetCloudBackupScheduleExportInput interface {
	pulumi.Input

	ToGetCloudBackupScheduleExportOutput() GetCloudBackupScheduleExportOutput
	ToGetCloudBackupScheduleExportOutputWithContext(context.Context) GetCloudBackupScheduleExportOutput
}

type GetCloudBackupScheduleExportArgs struct {
	// Unique identifier of the CloudBackupSnapshotExportBucket export_bucket_id value.
	ExportBucketId pulumi.StringInput `pulumi:"exportBucketId"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
}

func (GetCloudBackupScheduleExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupScheduleExport)(nil)).Elem()
}

func (i GetCloudBackupScheduleExportArgs) ToGetCloudBackupScheduleExportOutput() GetCloudBackupScheduleExportOutput {
	return i.ToGetCloudBackupScheduleExportOutputWithContext(context.Background())
}

func (i GetCloudBackupScheduleExportArgs) ToGetCloudBackupScheduleExportOutputWithContext(ctx context.Context) GetCloudBackupScheduleExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupScheduleExportOutput)
}

// GetCloudBackupScheduleExportArrayInput is an input type that accepts GetCloudBackupScheduleExportArray and GetCloudBackupScheduleExportArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupScheduleExportArrayInput` via:
//
//	GetCloudBackupScheduleExportArray{ GetCloudBackupScheduleExportArgs{...} }
type GetCloudBackupScheduleExportArrayInput interface {
	pulumi.Input

	ToGetCloudBackupScheduleExportArrayOutput() GetCloudBackupScheduleExportArrayOutput
	ToGetCloudBackupScheduleExportArrayOutputWithContext(context.Context) GetCloudBackupScheduleExportArrayOutput
}

type GetCloudBackupScheduleExportArray []GetCloudBackupScheduleExportInput

func (GetCloudBackupScheduleExportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupScheduleExport)(nil)).Elem()
}

func (i GetCloudBackupScheduleExportArray) ToGetCloudBackupScheduleExportArrayOutput() GetCloudBackupScheduleExportArrayOutput {
	return i.ToGetCloudBackupScheduleExportArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupScheduleExportArray) ToGetCloudBackupScheduleExportArrayOutputWithContext(ctx context.Context) GetCloudBackupScheduleExportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupScheduleExportArrayOutput)
}

type GetCloudBackupScheduleExportOutput struct{ *pulumi.OutputState }

func (GetCloudBackupScheduleExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupScheduleExport)(nil)).Elem()
}

func (o GetCloudBackupScheduleExportOutput) ToGetCloudBackupScheduleExportOutput() GetCloudBackupScheduleExportOutput {
	return o
}

func (o GetCloudBackupScheduleExportOutput) ToGetCloudBackupScheduleExportOutputWithContext(ctx context.Context) GetCloudBackupScheduleExportOutput {
	return o
}

// Unique identifier of the CloudBackupSnapshotExportBucket export_bucket_id value.
func (o GetCloudBackupScheduleExportOutput) ExportBucketId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupScheduleExport) string { return v.ExportBucketId }).(pulumi.StringOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetCloudBackupScheduleExportOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupScheduleExport) string { return v.FrequencyType }).(pulumi.StringOutput)
}

type GetCloudBackupScheduleExportArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupScheduleExportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupScheduleExport)(nil)).Elem()
}

func (o GetCloudBackupScheduleExportArrayOutput) ToGetCloudBackupScheduleExportArrayOutput() GetCloudBackupScheduleExportArrayOutput {
	return o
}

func (o GetCloudBackupScheduleExportArrayOutput) ToGetCloudBackupScheduleExportArrayOutputWithContext(ctx context.Context) GetCloudBackupScheduleExportArrayOutput {
	return o
}

func (o GetCloudBackupScheduleExportArrayOutput) Index(i pulumi.IntInput) GetCloudBackupScheduleExportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupScheduleExport {
		return vs[0].([]GetCloudBackupScheduleExport)[vs[1].(int)]
	}).(GetCloudBackupScheduleExportOutput)
}

type GetCloudBackupSchedulePolicyItemDaily struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetCloudBackupSchedulePolicyItemDailyInput is an input type that accepts GetCloudBackupSchedulePolicyItemDailyArgs and GetCloudBackupSchedulePolicyItemDailyOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemDailyInput` via:
//
//	GetCloudBackupSchedulePolicyItemDailyArgs{...}
type GetCloudBackupSchedulePolicyItemDailyInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemDailyOutput() GetCloudBackupSchedulePolicyItemDailyOutput
	ToGetCloudBackupSchedulePolicyItemDailyOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemDailyOutput
}

type GetCloudBackupSchedulePolicyItemDailyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetCloudBackupSchedulePolicyItemDailyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemDailyArgs) ToGetCloudBackupSchedulePolicyItemDailyOutput() GetCloudBackupSchedulePolicyItemDailyOutput {
	return i.ToGetCloudBackupSchedulePolicyItemDailyOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemDailyArgs) ToGetCloudBackupSchedulePolicyItemDailyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemDailyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemDailyOutput)
}

// GetCloudBackupSchedulePolicyItemDailyArrayInput is an input type that accepts GetCloudBackupSchedulePolicyItemDailyArray and GetCloudBackupSchedulePolicyItemDailyArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemDailyArrayInput` via:
//
//	GetCloudBackupSchedulePolicyItemDailyArray{ GetCloudBackupSchedulePolicyItemDailyArgs{...} }
type GetCloudBackupSchedulePolicyItemDailyArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemDailyArrayOutput() GetCloudBackupSchedulePolicyItemDailyArrayOutput
	ToGetCloudBackupSchedulePolicyItemDailyArrayOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemDailyArrayOutput
}

type GetCloudBackupSchedulePolicyItemDailyArray []GetCloudBackupSchedulePolicyItemDailyInput

func (GetCloudBackupSchedulePolicyItemDailyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemDailyArray) ToGetCloudBackupSchedulePolicyItemDailyArrayOutput() GetCloudBackupSchedulePolicyItemDailyArrayOutput {
	return i.ToGetCloudBackupSchedulePolicyItemDailyArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemDailyArray) ToGetCloudBackupSchedulePolicyItemDailyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemDailyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemDailyArrayOutput)
}

type GetCloudBackupSchedulePolicyItemDailyOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemDailyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemDailyOutput) ToGetCloudBackupSchedulePolicyItemDailyOutput() GetCloudBackupSchedulePolicyItemDailyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemDailyOutput) ToGetCloudBackupSchedulePolicyItemDailyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemDailyOutput {
	return o
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetCloudBackupSchedulePolicyItemDailyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetCloudBackupSchedulePolicyItemDailyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetCloudBackupSchedulePolicyItemDailyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetCloudBackupSchedulePolicyItemDailyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetCloudBackupSchedulePolicyItemDailyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudBackupSchedulePolicyItemDailyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemDailyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemDailyArrayOutput) ToGetCloudBackupSchedulePolicyItemDailyArrayOutput() GetCloudBackupSchedulePolicyItemDailyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemDailyArrayOutput) ToGetCloudBackupSchedulePolicyItemDailyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemDailyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemDailyArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSchedulePolicyItemDailyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSchedulePolicyItemDaily {
		return vs[0].([]GetCloudBackupSchedulePolicyItemDaily)[vs[1].(int)]
	}).(GetCloudBackupSchedulePolicyItemDailyOutput)
}

type GetCloudBackupSchedulePolicyItemHourly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetCloudBackupSchedulePolicyItemHourlyInput is an input type that accepts GetCloudBackupSchedulePolicyItemHourlyArgs and GetCloudBackupSchedulePolicyItemHourlyOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemHourlyInput` via:
//
//	GetCloudBackupSchedulePolicyItemHourlyArgs{...}
type GetCloudBackupSchedulePolicyItemHourlyInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemHourlyOutput() GetCloudBackupSchedulePolicyItemHourlyOutput
	ToGetCloudBackupSchedulePolicyItemHourlyOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemHourlyOutput
}

type GetCloudBackupSchedulePolicyItemHourlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetCloudBackupSchedulePolicyItemHourlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemHourlyArgs) ToGetCloudBackupSchedulePolicyItemHourlyOutput() GetCloudBackupSchedulePolicyItemHourlyOutput {
	return i.ToGetCloudBackupSchedulePolicyItemHourlyOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemHourlyArgs) ToGetCloudBackupSchedulePolicyItemHourlyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemHourlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemHourlyOutput)
}

// GetCloudBackupSchedulePolicyItemHourlyArrayInput is an input type that accepts GetCloudBackupSchedulePolicyItemHourlyArray and GetCloudBackupSchedulePolicyItemHourlyArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemHourlyArrayInput` via:
//
//	GetCloudBackupSchedulePolicyItemHourlyArray{ GetCloudBackupSchedulePolicyItemHourlyArgs{...} }
type GetCloudBackupSchedulePolicyItemHourlyArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemHourlyArrayOutput() GetCloudBackupSchedulePolicyItemHourlyArrayOutput
	ToGetCloudBackupSchedulePolicyItemHourlyArrayOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemHourlyArrayOutput
}

type GetCloudBackupSchedulePolicyItemHourlyArray []GetCloudBackupSchedulePolicyItemHourlyInput

func (GetCloudBackupSchedulePolicyItemHourlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemHourlyArray) ToGetCloudBackupSchedulePolicyItemHourlyArrayOutput() GetCloudBackupSchedulePolicyItemHourlyArrayOutput {
	return i.ToGetCloudBackupSchedulePolicyItemHourlyArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemHourlyArray) ToGetCloudBackupSchedulePolicyItemHourlyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemHourlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemHourlyArrayOutput)
}

type GetCloudBackupSchedulePolicyItemHourlyOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemHourlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemHourlyOutput) ToGetCloudBackupSchedulePolicyItemHourlyOutput() GetCloudBackupSchedulePolicyItemHourlyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemHourlyOutput) ToGetCloudBackupSchedulePolicyItemHourlyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemHourlyOutput {
	return o
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudBackupSchedulePolicyItemHourlyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemHourlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemHourlyArrayOutput) ToGetCloudBackupSchedulePolicyItemHourlyArrayOutput() GetCloudBackupSchedulePolicyItemHourlyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemHourlyArrayOutput) ToGetCloudBackupSchedulePolicyItemHourlyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemHourlyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemHourlyArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSchedulePolicyItemHourlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSchedulePolicyItemHourly {
		return vs[0].([]GetCloudBackupSchedulePolicyItemHourly)[vs[1].(int)]
	}).(GetCloudBackupSchedulePolicyItemHourlyOutput)
}

type GetCloudBackupSchedulePolicyItemMonthly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetCloudBackupSchedulePolicyItemMonthlyInput is an input type that accepts GetCloudBackupSchedulePolicyItemMonthlyArgs and GetCloudBackupSchedulePolicyItemMonthlyOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemMonthlyInput` via:
//
//	GetCloudBackupSchedulePolicyItemMonthlyArgs{...}
type GetCloudBackupSchedulePolicyItemMonthlyInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemMonthlyOutput() GetCloudBackupSchedulePolicyItemMonthlyOutput
	ToGetCloudBackupSchedulePolicyItemMonthlyOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemMonthlyOutput
}

type GetCloudBackupSchedulePolicyItemMonthlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetCloudBackupSchedulePolicyItemMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemMonthlyArgs) ToGetCloudBackupSchedulePolicyItemMonthlyOutput() GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return i.ToGetCloudBackupSchedulePolicyItemMonthlyOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemMonthlyArgs) ToGetCloudBackupSchedulePolicyItemMonthlyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemMonthlyOutput)
}

// GetCloudBackupSchedulePolicyItemMonthlyArrayInput is an input type that accepts GetCloudBackupSchedulePolicyItemMonthlyArray and GetCloudBackupSchedulePolicyItemMonthlyArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemMonthlyArrayInput` via:
//
//	GetCloudBackupSchedulePolicyItemMonthlyArray{ GetCloudBackupSchedulePolicyItemMonthlyArgs{...} }
type GetCloudBackupSchedulePolicyItemMonthlyArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutput() GetCloudBackupSchedulePolicyItemMonthlyArrayOutput
	ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemMonthlyArrayOutput
}

type GetCloudBackupSchedulePolicyItemMonthlyArray []GetCloudBackupSchedulePolicyItemMonthlyInput

func (GetCloudBackupSchedulePolicyItemMonthlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemMonthlyArray) ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutput() GetCloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return i.ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemMonthlyArray) ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemMonthlyArrayOutput)
}

type GetCloudBackupSchedulePolicyItemMonthlyOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) ToGetCloudBackupSchedulePolicyItemMonthlyOutput() GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) ToGetCloudBackupSchedulePolicyItemMonthlyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return o
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudBackupSchedulePolicyItemMonthlyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemMonthlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemMonthlyArrayOutput) ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutput() GetCloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemMonthlyArrayOutput) ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemMonthlyArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSchedulePolicyItemMonthly {
		return vs[0].([]GetCloudBackupSchedulePolicyItemMonthly)[vs[1].(int)]
	}).(GetCloudBackupSchedulePolicyItemMonthlyOutput)
}

type GetCloudBackupSchedulePolicyItemWeekly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetCloudBackupSchedulePolicyItemWeeklyInput is an input type that accepts GetCloudBackupSchedulePolicyItemWeeklyArgs and GetCloudBackupSchedulePolicyItemWeeklyOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemWeeklyInput` via:
//
//	GetCloudBackupSchedulePolicyItemWeeklyArgs{...}
type GetCloudBackupSchedulePolicyItemWeeklyInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemWeeklyOutput() GetCloudBackupSchedulePolicyItemWeeklyOutput
	ToGetCloudBackupSchedulePolicyItemWeeklyOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemWeeklyOutput
}

type GetCloudBackupSchedulePolicyItemWeeklyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetCloudBackupSchedulePolicyItemWeeklyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemWeeklyArgs) ToGetCloudBackupSchedulePolicyItemWeeklyOutput() GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return i.ToGetCloudBackupSchedulePolicyItemWeeklyOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemWeeklyArgs) ToGetCloudBackupSchedulePolicyItemWeeklyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemWeeklyOutput)
}

// GetCloudBackupSchedulePolicyItemWeeklyArrayInput is an input type that accepts GetCloudBackupSchedulePolicyItemWeeklyArray and GetCloudBackupSchedulePolicyItemWeeklyArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemWeeklyArrayInput` via:
//
//	GetCloudBackupSchedulePolicyItemWeeklyArray{ GetCloudBackupSchedulePolicyItemWeeklyArgs{...} }
type GetCloudBackupSchedulePolicyItemWeeklyArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutput() GetCloudBackupSchedulePolicyItemWeeklyArrayOutput
	ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemWeeklyArrayOutput
}

type GetCloudBackupSchedulePolicyItemWeeklyArray []GetCloudBackupSchedulePolicyItemWeeklyInput

func (GetCloudBackupSchedulePolicyItemWeeklyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemWeeklyArray) ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutput() GetCloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return i.ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemWeeklyArray) ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemWeeklyArrayOutput)
}

type GetCloudBackupSchedulePolicyItemWeeklyOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemWeeklyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) ToGetCloudBackupSchedulePolicyItemWeeklyOutput() GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) ToGetCloudBackupSchedulePolicyItemWeeklyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return o
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudBackupSchedulePolicyItemWeeklyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemWeeklyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemWeeklyArrayOutput) ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutput() GetCloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemWeeklyArrayOutput) ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemWeeklyArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSchedulePolicyItemWeekly {
		return vs[0].([]GetCloudBackupSchedulePolicyItemWeekly)[vs[1].(int)]
	}).(GetCloudBackupSchedulePolicyItemWeeklyOutput)
}

type GetCloudBackupSnapshotExportBucketsResult struct {
	// Name of the bucket that the provided role ID is authorized to access. You must also specify the `iamRoleId`.
	BucketName string `pulumi:"bucketName"`
	// Name of the provider of the cloud service where Atlas can access the S3 bucket. Atlas only supports `AWS`.
	CloudProvider string `pulumi:"cloudProvider"`
	// Unique identifier of the snapshot bucket id.
	ExportBucketId string `pulumi:"exportBucketId"`
	// Unique identifier of the role that Atlas can use to access the bucket. You must also specify the `bucketName`.
	IamRoleId string `pulumi:"iamRoleId"`
}

// GetCloudBackupSnapshotExportBucketsResultInput is an input type that accepts GetCloudBackupSnapshotExportBucketsResultArgs and GetCloudBackupSnapshotExportBucketsResultOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportBucketsResultInput` via:
//
//	GetCloudBackupSnapshotExportBucketsResultArgs{...}
type GetCloudBackupSnapshotExportBucketsResultInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportBucketsResultOutput() GetCloudBackupSnapshotExportBucketsResultOutput
	ToGetCloudBackupSnapshotExportBucketsResultOutputWithContext(context.Context) GetCloudBackupSnapshotExportBucketsResultOutput
}

type GetCloudBackupSnapshotExportBucketsResultArgs struct {
	// Name of the bucket that the provided role ID is authorized to access. You must also specify the `iamRoleId`.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Name of the provider of the cloud service where Atlas can access the S3 bucket. Atlas only supports `AWS`.
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// Unique identifier of the snapshot bucket id.
	ExportBucketId pulumi.StringInput `pulumi:"exportBucketId"`
	// Unique identifier of the role that Atlas can use to access the bucket. You must also specify the `bucketName`.
	IamRoleId pulumi.StringInput `pulumi:"iamRoleId"`
}

func (GetCloudBackupSnapshotExportBucketsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportBucketsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportBucketsResultArgs) ToGetCloudBackupSnapshotExportBucketsResultOutput() GetCloudBackupSnapshotExportBucketsResultOutput {
	return i.ToGetCloudBackupSnapshotExportBucketsResultOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportBucketsResultArgs) ToGetCloudBackupSnapshotExportBucketsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportBucketsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportBucketsResultOutput)
}

// GetCloudBackupSnapshotExportBucketsResultArrayInput is an input type that accepts GetCloudBackupSnapshotExportBucketsResultArray and GetCloudBackupSnapshotExportBucketsResultArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportBucketsResultArrayInput` via:
//
//	GetCloudBackupSnapshotExportBucketsResultArray{ GetCloudBackupSnapshotExportBucketsResultArgs{...} }
type GetCloudBackupSnapshotExportBucketsResultArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportBucketsResultArrayOutput() GetCloudBackupSnapshotExportBucketsResultArrayOutput
	ToGetCloudBackupSnapshotExportBucketsResultArrayOutputWithContext(context.Context) GetCloudBackupSnapshotExportBucketsResultArrayOutput
}

type GetCloudBackupSnapshotExportBucketsResultArray []GetCloudBackupSnapshotExportBucketsResultInput

func (GetCloudBackupSnapshotExportBucketsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportBucketsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportBucketsResultArray) ToGetCloudBackupSnapshotExportBucketsResultArrayOutput() GetCloudBackupSnapshotExportBucketsResultArrayOutput {
	return i.ToGetCloudBackupSnapshotExportBucketsResultArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportBucketsResultArray) ToGetCloudBackupSnapshotExportBucketsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportBucketsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportBucketsResultArrayOutput)
}

type GetCloudBackupSnapshotExportBucketsResultOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportBucketsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportBucketsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportBucketsResultOutput) ToGetCloudBackupSnapshotExportBucketsResultOutput() GetCloudBackupSnapshotExportBucketsResultOutput {
	return o
}

func (o GetCloudBackupSnapshotExportBucketsResultOutput) ToGetCloudBackupSnapshotExportBucketsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportBucketsResultOutput {
	return o
}

// Name of the bucket that the provided role ID is authorized to access. You must also specify the `iamRoleId`.
func (o GetCloudBackupSnapshotExportBucketsResultOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportBucketsResult) string { return v.BucketName }).(pulumi.StringOutput)
}

// Name of the provider of the cloud service where Atlas can access the S3 bucket. Atlas only supports `AWS`.
func (o GetCloudBackupSnapshotExportBucketsResultOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportBucketsResult) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// Unique identifier of the snapshot bucket id.
func (o GetCloudBackupSnapshotExportBucketsResultOutput) ExportBucketId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportBucketsResult) string { return v.ExportBucketId }).(pulumi.StringOutput)
}

// Unique identifier of the role that Atlas can use to access the bucket. You must also specify the `bucketName`.
func (o GetCloudBackupSnapshotExportBucketsResultOutput) IamRoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportBucketsResult) string { return v.IamRoleId }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotExportBucketsResultArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportBucketsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportBucketsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportBucketsResultArrayOutput) ToGetCloudBackupSnapshotExportBucketsResultArrayOutput() GetCloudBackupSnapshotExportBucketsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportBucketsResultArrayOutput) ToGetCloudBackupSnapshotExportBucketsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportBucketsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportBucketsResultArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotExportBucketsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotExportBucketsResult {
		return vs[0].([]GetCloudBackupSnapshotExportBucketsResult)[vs[1].(int)]
	}).(GetCloudBackupSnapshotExportBucketsResultOutput)
}

type GetCloudBackupSnapshotExportJobComponent struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	ExportId string `pulumi:"exportId"`
	// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
	ReplicaSetName string `pulumi:"replicaSetName"`
}

// GetCloudBackupSnapshotExportJobComponentInput is an input type that accepts GetCloudBackupSnapshotExportJobComponentArgs and GetCloudBackupSnapshotExportJobComponentOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobComponentInput` via:
//
//	GetCloudBackupSnapshotExportJobComponentArgs{...}
type GetCloudBackupSnapshotExportJobComponentInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobComponentOutput() GetCloudBackupSnapshotExportJobComponentOutput
	ToGetCloudBackupSnapshotExportJobComponentOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobComponentOutput
}

type GetCloudBackupSnapshotExportJobComponentArgs struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	ExportId pulumi.StringInput `pulumi:"exportId"`
	// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
	ReplicaSetName pulumi.StringInput `pulumi:"replicaSetName"`
}

func (GetCloudBackupSnapshotExportJobComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobComponentArgs) ToGetCloudBackupSnapshotExportJobComponentOutput() GetCloudBackupSnapshotExportJobComponentOutput {
	return i.ToGetCloudBackupSnapshotExportJobComponentOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobComponentArgs) ToGetCloudBackupSnapshotExportJobComponentOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobComponentOutput)
}

// GetCloudBackupSnapshotExportJobComponentArrayInput is an input type that accepts GetCloudBackupSnapshotExportJobComponentArray and GetCloudBackupSnapshotExportJobComponentArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobComponentArrayInput` via:
//
//	GetCloudBackupSnapshotExportJobComponentArray{ GetCloudBackupSnapshotExportJobComponentArgs{...} }
type GetCloudBackupSnapshotExportJobComponentArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobComponentArrayOutput() GetCloudBackupSnapshotExportJobComponentArrayOutput
	ToGetCloudBackupSnapshotExportJobComponentArrayOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobComponentArrayOutput
}

type GetCloudBackupSnapshotExportJobComponentArray []GetCloudBackupSnapshotExportJobComponentInput

func (GetCloudBackupSnapshotExportJobComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobComponentArray) ToGetCloudBackupSnapshotExportJobComponentArrayOutput() GetCloudBackupSnapshotExportJobComponentArrayOutput {
	return i.ToGetCloudBackupSnapshotExportJobComponentArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobComponentArray) ToGetCloudBackupSnapshotExportJobComponentArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobComponentArrayOutput)
}

type GetCloudBackupSnapshotExportJobComponentOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobComponentOutput) ToGetCloudBackupSnapshotExportJobComponentOutput() GetCloudBackupSnapshotExportJobComponentOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobComponentOutput) ToGetCloudBackupSnapshotExportJobComponentOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobComponentOutput {
	return o
}

// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
func (o GetCloudBackupSnapshotExportJobComponentOutput) ExportId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobComponent) string { return v.ExportId }).(pulumi.StringOutput)
}

// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
func (o GetCloudBackupSnapshotExportJobComponentOutput) ReplicaSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobComponent) string { return v.ReplicaSetName }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotExportJobComponentArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobComponentArrayOutput) ToGetCloudBackupSnapshotExportJobComponentArrayOutput() GetCloudBackupSnapshotExportJobComponentArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobComponentArrayOutput) ToGetCloudBackupSnapshotExportJobComponentArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobComponentArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobComponentArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotExportJobComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotExportJobComponent {
		return vs[0].([]GetCloudBackupSnapshotExportJobComponent)[vs[1].(int)]
	}).(GetCloudBackupSnapshotExportJobComponentOutput)
}

type GetCloudBackupSnapshotExportJobCustomData struct {
	// Custom data specified as key in the key and value pair.
	Key string `pulumi:"key"`
	// Value for the key specified using `key`.
	Value string `pulumi:"value"`
}

// GetCloudBackupSnapshotExportJobCustomDataInput is an input type that accepts GetCloudBackupSnapshotExportJobCustomDataArgs and GetCloudBackupSnapshotExportJobCustomDataOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobCustomDataInput` via:
//
//	GetCloudBackupSnapshotExportJobCustomDataArgs{...}
type GetCloudBackupSnapshotExportJobCustomDataInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobCustomDataOutput() GetCloudBackupSnapshotExportJobCustomDataOutput
	ToGetCloudBackupSnapshotExportJobCustomDataOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobCustomDataOutput
}

type GetCloudBackupSnapshotExportJobCustomDataArgs struct {
	// Custom data specified as key in the key and value pair.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for the key specified using `key`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCloudBackupSnapshotExportJobCustomDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobCustomDataArgs) ToGetCloudBackupSnapshotExportJobCustomDataOutput() GetCloudBackupSnapshotExportJobCustomDataOutput {
	return i.ToGetCloudBackupSnapshotExportJobCustomDataOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobCustomDataArgs) ToGetCloudBackupSnapshotExportJobCustomDataOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobCustomDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobCustomDataOutput)
}

// GetCloudBackupSnapshotExportJobCustomDataArrayInput is an input type that accepts GetCloudBackupSnapshotExportJobCustomDataArray and GetCloudBackupSnapshotExportJobCustomDataArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobCustomDataArrayInput` via:
//
//	GetCloudBackupSnapshotExportJobCustomDataArray{ GetCloudBackupSnapshotExportJobCustomDataArgs{...} }
type GetCloudBackupSnapshotExportJobCustomDataArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobCustomDataArrayOutput() GetCloudBackupSnapshotExportJobCustomDataArrayOutput
	ToGetCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobCustomDataArrayOutput
}

type GetCloudBackupSnapshotExportJobCustomDataArray []GetCloudBackupSnapshotExportJobCustomDataInput

func (GetCloudBackupSnapshotExportJobCustomDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobCustomDataArray) ToGetCloudBackupSnapshotExportJobCustomDataArrayOutput() GetCloudBackupSnapshotExportJobCustomDataArrayOutput {
	return i.ToGetCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobCustomDataArray) ToGetCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobCustomDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobCustomDataArrayOutput)
}

type GetCloudBackupSnapshotExportJobCustomDataOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobCustomDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobCustomDataOutput) ToGetCloudBackupSnapshotExportJobCustomDataOutput() GetCloudBackupSnapshotExportJobCustomDataOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobCustomDataOutput) ToGetCloudBackupSnapshotExportJobCustomDataOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobCustomDataOutput {
	return o
}

// Custom data specified as key in the key and value pair.
func (o GetCloudBackupSnapshotExportJobCustomDataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobCustomData) string { return v.Key }).(pulumi.StringOutput)
}

// Value for the key specified using `key`.
func (o GetCloudBackupSnapshotExportJobCustomDataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobCustomData) string { return v.Value }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotExportJobCustomDataArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobCustomDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobCustomDataArrayOutput) ToGetCloudBackupSnapshotExportJobCustomDataArrayOutput() GetCloudBackupSnapshotExportJobCustomDataArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobCustomDataArrayOutput) ToGetCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobCustomDataArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobCustomDataArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotExportJobCustomDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotExportJobCustomData {
		return vs[0].([]GetCloudBackupSnapshotExportJobCustomData)[vs[1].(int)]
	}).(GetCloudBackupSnapshotExportJobCustomDataOutput)
}

type GetCloudBackupSnapshotExportJobsResult struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	Components []GetCloudBackupSnapshotExportJobsResultComponent `pulumi:"components"`
	// Timestamp in ISO 8601 date and time format in UTC when the export job was created.
	CreatedAt string `pulumi:"createdAt"`
	// Custom data to include in the metadata file named `.complete` that Atlas uploads to the bucket when the export job finishes. Custom data can be specified as key and value pairs.
	CustomDatas []GetCloudBackupSnapshotExportJobsResultCustomData `pulumi:"customDatas"`
	// Error message, only if the export job failed.
	ErrMsg string `pulumi:"errMsg"`
	// Unique identifier of the AWS bucket to export the Cloud Backup snapshot to.
	ExportBucketId string `pulumi:"exportBucketId"`
	// Unique identifier of the export job.
	// * ` prefix  ` - Full path on the cloud provider bucket to the folder where the snapshot is exported. The path is in the following format:`/exported_snapshots/{ORG-NAME}/{PROJECT-NAME}/{CLUSTER-NAME}/{SNAPSHOT-INITIATION-DATE}/{TIMESTAMP}`
	ExportJobId                     string `pulumi:"exportJobId"`
	ExportStatusExportedCollections int    `pulumi:"exportStatusExportedCollections"`
	ExportStatusTotalCollections    int    `pulumi:"exportStatusTotalCollections"`
	// Timestamp in ISO 8601 date and time format in UTC when the export job completes.
	FinishedAt string `pulumi:"finishedAt"`
	Prefix     string `pulumi:"prefix"`
	// Unique identifier of the Cloud Backup snapshot to export.
	SnapshotId string `pulumi:"snapshotId"`
	// Status of the export job. Value can be one of the following:
	State string `pulumi:"state"`
}

// GetCloudBackupSnapshotExportJobsResultInput is an input type that accepts GetCloudBackupSnapshotExportJobsResultArgs and GetCloudBackupSnapshotExportJobsResultOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobsResultInput` via:
//
//	GetCloudBackupSnapshotExportJobsResultArgs{...}
type GetCloudBackupSnapshotExportJobsResultInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobsResultOutput() GetCloudBackupSnapshotExportJobsResultOutput
	ToGetCloudBackupSnapshotExportJobsResultOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobsResultOutput
}

type GetCloudBackupSnapshotExportJobsResultArgs struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	Components GetCloudBackupSnapshotExportJobsResultComponentArrayInput `pulumi:"components"`
	// Timestamp in ISO 8601 date and time format in UTC when the export job was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Custom data to include in the metadata file named `.complete` that Atlas uploads to the bucket when the export job finishes. Custom data can be specified as key and value pairs.
	CustomDatas GetCloudBackupSnapshotExportJobsResultCustomDataArrayInput `pulumi:"customDatas"`
	// Error message, only if the export job failed.
	ErrMsg pulumi.StringInput `pulumi:"errMsg"`
	// Unique identifier of the AWS bucket to export the Cloud Backup snapshot to.
	ExportBucketId pulumi.StringInput `pulumi:"exportBucketId"`
	// Unique identifier of the export job.
	// * ` prefix  ` - Full path on the cloud provider bucket to the folder where the snapshot is exported. The path is in the following format:`/exported_snapshots/{ORG-NAME}/{PROJECT-NAME}/{CLUSTER-NAME}/{SNAPSHOT-INITIATION-DATE}/{TIMESTAMP}`
	ExportJobId                     pulumi.StringInput `pulumi:"exportJobId"`
	ExportStatusExportedCollections pulumi.IntInput    `pulumi:"exportStatusExportedCollections"`
	ExportStatusTotalCollections    pulumi.IntInput    `pulumi:"exportStatusTotalCollections"`
	// Timestamp in ISO 8601 date and time format in UTC when the export job completes.
	FinishedAt pulumi.StringInput `pulumi:"finishedAt"`
	Prefix     pulumi.StringInput `pulumi:"prefix"`
	// Unique identifier of the Cloud Backup snapshot to export.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Status of the export job. Value can be one of the following:
	State pulumi.StringInput `pulumi:"state"`
}

func (GetCloudBackupSnapshotExportJobsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobsResultArgs) ToGetCloudBackupSnapshotExportJobsResultOutput() GetCloudBackupSnapshotExportJobsResultOutput {
	return i.ToGetCloudBackupSnapshotExportJobsResultOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobsResultArgs) ToGetCloudBackupSnapshotExportJobsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobsResultOutput)
}

// GetCloudBackupSnapshotExportJobsResultArrayInput is an input type that accepts GetCloudBackupSnapshotExportJobsResultArray and GetCloudBackupSnapshotExportJobsResultArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobsResultArrayInput` via:
//
//	GetCloudBackupSnapshotExportJobsResultArray{ GetCloudBackupSnapshotExportJobsResultArgs{...} }
type GetCloudBackupSnapshotExportJobsResultArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobsResultArrayOutput() GetCloudBackupSnapshotExportJobsResultArrayOutput
	ToGetCloudBackupSnapshotExportJobsResultArrayOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobsResultArrayOutput
}

type GetCloudBackupSnapshotExportJobsResultArray []GetCloudBackupSnapshotExportJobsResultInput

func (GetCloudBackupSnapshotExportJobsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobsResultArray) ToGetCloudBackupSnapshotExportJobsResultArrayOutput() GetCloudBackupSnapshotExportJobsResultArrayOutput {
	return i.ToGetCloudBackupSnapshotExportJobsResultArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobsResultArray) ToGetCloudBackupSnapshotExportJobsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobsResultArrayOutput)
}

type GetCloudBackupSnapshotExportJobsResultOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobsResultOutput) ToGetCloudBackupSnapshotExportJobsResultOutput() GetCloudBackupSnapshotExportJobsResultOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultOutput) ToGetCloudBackupSnapshotExportJobsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultOutput {
	return o
}

// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
func (o GetCloudBackupSnapshotExportJobsResultOutput) Components() GetCloudBackupSnapshotExportJobsResultComponentArrayOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) []GetCloudBackupSnapshotExportJobsResultComponent {
		return v.Components
	}).(GetCloudBackupSnapshotExportJobsResultComponentArrayOutput)
}

// Timestamp in ISO 8601 date and time format in UTC when the export job was created.
func (o GetCloudBackupSnapshotExportJobsResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Custom data to include in the metadata file named `.complete` that Atlas uploads to the bucket when the export job finishes. Custom data can be specified as key and value pairs.
func (o GetCloudBackupSnapshotExportJobsResultOutput) CustomDatas() GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) []GetCloudBackupSnapshotExportJobsResultCustomData {
		return v.CustomDatas
	}).(GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput)
}

// Error message, only if the export job failed.
func (o GetCloudBackupSnapshotExportJobsResultOutput) ErrMsg() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.ErrMsg }).(pulumi.StringOutput)
}

// Unique identifier of the AWS bucket to export the Cloud Backup snapshot to.
func (o GetCloudBackupSnapshotExportJobsResultOutput) ExportBucketId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.ExportBucketId }).(pulumi.StringOutput)
}

// Unique identifier of the export job.
// * ` prefix  ` - Full path on the cloud provider bucket to the folder where the snapshot is exported. The path is in the following format:`/exported_snapshots/{ORG-NAME}/{PROJECT-NAME}/{CLUSTER-NAME}/{SNAPSHOT-INITIATION-DATE}/{TIMESTAMP}`
func (o GetCloudBackupSnapshotExportJobsResultOutput) ExportJobId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.ExportJobId }).(pulumi.StringOutput)
}

func (o GetCloudBackupSnapshotExportJobsResultOutput) ExportStatusExportedCollections() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) int { return v.ExportStatusExportedCollections }).(pulumi.IntOutput)
}

func (o GetCloudBackupSnapshotExportJobsResultOutput) ExportStatusTotalCollections() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) int { return v.ExportStatusTotalCollections }).(pulumi.IntOutput)
}

// Timestamp in ISO 8601 date and time format in UTC when the export job completes.
func (o GetCloudBackupSnapshotExportJobsResultOutput) FinishedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.FinishedAt }).(pulumi.StringOutput)
}

func (o GetCloudBackupSnapshotExportJobsResultOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.Prefix }).(pulumi.StringOutput)
}

// Unique identifier of the Cloud Backup snapshot to export.
func (o GetCloudBackupSnapshotExportJobsResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Status of the export job. Value can be one of the following:
func (o GetCloudBackupSnapshotExportJobsResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.State }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotExportJobsResultArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobsResultArrayOutput) ToGetCloudBackupSnapshotExportJobsResultArrayOutput() GetCloudBackupSnapshotExportJobsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultArrayOutput) ToGetCloudBackupSnapshotExportJobsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotExportJobsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotExportJobsResult {
		return vs[0].([]GetCloudBackupSnapshotExportJobsResult)[vs[1].(int)]
	}).(GetCloudBackupSnapshotExportJobsResultOutput)
}

type GetCloudBackupSnapshotExportJobsResultComponent struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	ExportId string `pulumi:"exportId"`
	// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
	ReplicaSetName string `pulumi:"replicaSetName"`
}

// GetCloudBackupSnapshotExportJobsResultComponentInput is an input type that accepts GetCloudBackupSnapshotExportJobsResultComponentArgs and GetCloudBackupSnapshotExportJobsResultComponentOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobsResultComponentInput` via:
//
//	GetCloudBackupSnapshotExportJobsResultComponentArgs{...}
type GetCloudBackupSnapshotExportJobsResultComponentInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobsResultComponentOutput() GetCloudBackupSnapshotExportJobsResultComponentOutput
	ToGetCloudBackupSnapshotExportJobsResultComponentOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobsResultComponentOutput
}

type GetCloudBackupSnapshotExportJobsResultComponentArgs struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	ExportId pulumi.StringInput `pulumi:"exportId"`
	// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
	ReplicaSetName pulumi.StringInput `pulumi:"replicaSetName"`
}

func (GetCloudBackupSnapshotExportJobsResultComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultComponent)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobsResultComponentArgs) ToGetCloudBackupSnapshotExportJobsResultComponentOutput() GetCloudBackupSnapshotExportJobsResultComponentOutput {
	return i.ToGetCloudBackupSnapshotExportJobsResultComponentOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobsResultComponentArgs) ToGetCloudBackupSnapshotExportJobsResultComponentOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobsResultComponentOutput)
}

// GetCloudBackupSnapshotExportJobsResultComponentArrayInput is an input type that accepts GetCloudBackupSnapshotExportJobsResultComponentArray and GetCloudBackupSnapshotExportJobsResultComponentArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobsResultComponentArrayInput` via:
//
//	GetCloudBackupSnapshotExportJobsResultComponentArray{ GetCloudBackupSnapshotExportJobsResultComponentArgs{...} }
type GetCloudBackupSnapshotExportJobsResultComponentArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutput() GetCloudBackupSnapshotExportJobsResultComponentArrayOutput
	ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobsResultComponentArrayOutput
}

type GetCloudBackupSnapshotExportJobsResultComponentArray []GetCloudBackupSnapshotExportJobsResultComponentInput

func (GetCloudBackupSnapshotExportJobsResultComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobsResultComponent)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobsResultComponentArray) ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutput() GetCloudBackupSnapshotExportJobsResultComponentArrayOutput {
	return i.ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobsResultComponentArray) ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobsResultComponentArrayOutput)
}

type GetCloudBackupSnapshotExportJobsResultComponentOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobsResultComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultComponent)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobsResultComponentOutput) ToGetCloudBackupSnapshotExportJobsResultComponentOutput() GetCloudBackupSnapshotExportJobsResultComponentOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultComponentOutput) ToGetCloudBackupSnapshotExportJobsResultComponentOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultComponentOutput {
	return o
}

// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
func (o GetCloudBackupSnapshotExportJobsResultComponentOutput) ExportId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResultComponent) string { return v.ExportId }).(pulumi.StringOutput)
}

// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
func (o GetCloudBackupSnapshotExportJobsResultComponentOutput) ReplicaSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResultComponent) string { return v.ReplicaSetName }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotExportJobsResultComponentArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobsResultComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobsResultComponent)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobsResultComponentArrayOutput) ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutput() GetCloudBackupSnapshotExportJobsResultComponentArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultComponentArrayOutput) ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultComponentArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultComponentArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotExportJobsResultComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotExportJobsResultComponent {
		return vs[0].([]GetCloudBackupSnapshotExportJobsResultComponent)[vs[1].(int)]
	}).(GetCloudBackupSnapshotExportJobsResultComponentOutput)
}

type GetCloudBackupSnapshotExportJobsResultCustomData struct {
	// Custom data specified as key in the key and value pair.
	Key string `pulumi:"key"`
	// Value for the key specified using `key`.
	Value string `pulumi:"value"`
}

// GetCloudBackupSnapshotExportJobsResultCustomDataInput is an input type that accepts GetCloudBackupSnapshotExportJobsResultCustomDataArgs and GetCloudBackupSnapshotExportJobsResultCustomDataOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobsResultCustomDataInput` via:
//
//	GetCloudBackupSnapshotExportJobsResultCustomDataArgs{...}
type GetCloudBackupSnapshotExportJobsResultCustomDataInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobsResultCustomDataOutput() GetCloudBackupSnapshotExportJobsResultCustomDataOutput
	ToGetCloudBackupSnapshotExportJobsResultCustomDataOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobsResultCustomDataOutput
}

type GetCloudBackupSnapshotExportJobsResultCustomDataArgs struct {
	// Custom data specified as key in the key and value pair.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for the key specified using `key`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCloudBackupSnapshotExportJobsResultCustomDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultCustomData)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobsResultCustomDataArgs) ToGetCloudBackupSnapshotExportJobsResultCustomDataOutput() GetCloudBackupSnapshotExportJobsResultCustomDataOutput {
	return i.ToGetCloudBackupSnapshotExportJobsResultCustomDataOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobsResultCustomDataArgs) ToGetCloudBackupSnapshotExportJobsResultCustomDataOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultCustomDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobsResultCustomDataOutput)
}

// GetCloudBackupSnapshotExportJobsResultCustomDataArrayInput is an input type that accepts GetCloudBackupSnapshotExportJobsResultCustomDataArray and GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobsResultCustomDataArrayInput` via:
//
//	GetCloudBackupSnapshotExportJobsResultCustomDataArray{ GetCloudBackupSnapshotExportJobsResultCustomDataArgs{...} }
type GetCloudBackupSnapshotExportJobsResultCustomDataArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput() GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput
	ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput
}

type GetCloudBackupSnapshotExportJobsResultCustomDataArray []GetCloudBackupSnapshotExportJobsResultCustomDataInput

func (GetCloudBackupSnapshotExportJobsResultCustomDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobsResultCustomData)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobsResultCustomDataArray) ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput() GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput {
	return i.ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobsResultCustomDataArray) ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput)
}

type GetCloudBackupSnapshotExportJobsResultCustomDataOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobsResultCustomDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultCustomData)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobsResultCustomDataOutput) ToGetCloudBackupSnapshotExportJobsResultCustomDataOutput() GetCloudBackupSnapshotExportJobsResultCustomDataOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultCustomDataOutput) ToGetCloudBackupSnapshotExportJobsResultCustomDataOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultCustomDataOutput {
	return o
}

// Custom data specified as key in the key and value pair.
func (o GetCloudBackupSnapshotExportJobsResultCustomDataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResultCustomData) string { return v.Key }).(pulumi.StringOutput)
}

// Value for the key specified using `key`.
func (o GetCloudBackupSnapshotExportJobsResultCustomDataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResultCustomData) string { return v.Value }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobsResultCustomData)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput) ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput() GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput) ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotExportJobsResultCustomDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotExportJobsResultCustomData {
		return vs[0].([]GetCloudBackupSnapshotExportJobsResultCustomData)[vs[1].(int)]
	}).(GetCloudBackupSnapshotExportJobsResultCustomDataOutput)
}

type GetCloudBackupSnapshotMember struct {
	// Cloud provider that stores this snapshot.
	CloudProvider string `pulumi:"cloudProvider"`
	// Unique identifier for the sharded cluster snapshot.
	Id string `pulumi:"id"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName string `pulumi:"replicaSetName"`
}

// GetCloudBackupSnapshotMemberInput is an input type that accepts GetCloudBackupSnapshotMemberArgs and GetCloudBackupSnapshotMemberOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotMemberInput` via:
//
//	GetCloudBackupSnapshotMemberArgs{...}
type GetCloudBackupSnapshotMemberInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotMemberOutput() GetCloudBackupSnapshotMemberOutput
	ToGetCloudBackupSnapshotMemberOutputWithContext(context.Context) GetCloudBackupSnapshotMemberOutput
}

type GetCloudBackupSnapshotMemberArgs struct {
	// Cloud provider that stores this snapshot.
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// Unique identifier for the sharded cluster snapshot.
	Id pulumi.StringInput `pulumi:"id"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName pulumi.StringInput `pulumi:"replicaSetName"`
}

func (GetCloudBackupSnapshotMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotMember)(nil)).Elem()
}

func (i GetCloudBackupSnapshotMemberArgs) ToGetCloudBackupSnapshotMemberOutput() GetCloudBackupSnapshotMemberOutput {
	return i.ToGetCloudBackupSnapshotMemberOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotMemberArgs) ToGetCloudBackupSnapshotMemberOutputWithContext(ctx context.Context) GetCloudBackupSnapshotMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotMemberOutput)
}

// GetCloudBackupSnapshotMemberArrayInput is an input type that accepts GetCloudBackupSnapshotMemberArray and GetCloudBackupSnapshotMemberArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotMemberArrayInput` via:
//
//	GetCloudBackupSnapshotMemberArray{ GetCloudBackupSnapshotMemberArgs{...} }
type GetCloudBackupSnapshotMemberArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotMemberArrayOutput() GetCloudBackupSnapshotMemberArrayOutput
	ToGetCloudBackupSnapshotMemberArrayOutputWithContext(context.Context) GetCloudBackupSnapshotMemberArrayOutput
}

type GetCloudBackupSnapshotMemberArray []GetCloudBackupSnapshotMemberInput

func (GetCloudBackupSnapshotMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotMember)(nil)).Elem()
}

func (i GetCloudBackupSnapshotMemberArray) ToGetCloudBackupSnapshotMemberArrayOutput() GetCloudBackupSnapshotMemberArrayOutput {
	return i.ToGetCloudBackupSnapshotMemberArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotMemberArray) ToGetCloudBackupSnapshotMemberArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotMemberArrayOutput)
}

type GetCloudBackupSnapshotMemberOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotMember)(nil)).Elem()
}

func (o GetCloudBackupSnapshotMemberOutput) ToGetCloudBackupSnapshotMemberOutput() GetCloudBackupSnapshotMemberOutput {
	return o
}

func (o GetCloudBackupSnapshotMemberOutput) ToGetCloudBackupSnapshotMemberOutputWithContext(ctx context.Context) GetCloudBackupSnapshotMemberOutput {
	return o
}

// Cloud provider that stores this snapshot.
func (o GetCloudBackupSnapshotMemberOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotMember) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// Unique identifier for the sharded cluster snapshot.
func (o GetCloudBackupSnapshotMemberOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotMember) string { return v.Id }).(pulumi.StringOutput)
}

// Label given to a shard or config server from which Atlas took this snapshot.
func (o GetCloudBackupSnapshotMemberOutput) ReplicaSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotMember) string { return v.ReplicaSetName }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotMemberArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotMember)(nil)).Elem()
}

func (o GetCloudBackupSnapshotMemberArrayOutput) ToGetCloudBackupSnapshotMemberArrayOutput() GetCloudBackupSnapshotMemberArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotMemberArrayOutput) ToGetCloudBackupSnapshotMemberArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotMemberArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotMemberArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotMember {
		return vs[0].([]GetCloudBackupSnapshotMember)[vs[1].(int)]
	}).(GetCloudBackupSnapshotMemberOutput)
}

type GetCloudBackupSnapshotRestoreJobsResult struct {
	// Indicates whether the restore job was canceled.
	Cancelled bool `pulumi:"cancelled"`
	// UTC ISO 8601 formatted point in time when Atlas created the restore job.
	CreatedAt string `pulumi:"createdAt"`
	// Type of restore job to create. Possible values are: automated and download.
	DeliveryType string `pulumi:"deliveryType"`
	// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
	DeliveryUrls []string `pulumi:"deliveryUrls"`
	// Indicates whether the restore job expired.
	Expired bool `pulumi:"expired"`
	// UTC ISO 8601 formatted point in time when the restore job expires.
	ExpiresAt string `pulumi:"expiresAt"`
	// UTC ISO 8601 formatted point in time when the restore job completed.
	FinishedAt string `pulumi:"finishedAt"`
	// The unique identifier of the restore job.
	Id                    string `pulumi:"id"`
	OplogInc              int    `pulumi:"oplogInc"`
	OplogTs               int    `pulumi:"oplogTs"`
	PointInTimeUtcSeconds int    `pulumi:"pointInTimeUtcSeconds"`
	// Unique identifier of the source snapshot ID of the restore job.
	SnapshotId string `pulumi:"snapshotId"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
	TargetClusterName string `pulumi:"targetClusterName"`
	// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
	TargetProjectId string `pulumi:"targetProjectId"`
	// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
	Timestamp string `pulumi:"timestamp"`
}

// GetCloudBackupSnapshotRestoreJobsResultInput is an input type that accepts GetCloudBackupSnapshotRestoreJobsResultArgs and GetCloudBackupSnapshotRestoreJobsResultOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotRestoreJobsResultInput` via:
//
//	GetCloudBackupSnapshotRestoreJobsResultArgs{...}
type GetCloudBackupSnapshotRestoreJobsResultInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotRestoreJobsResultOutput() GetCloudBackupSnapshotRestoreJobsResultOutput
	ToGetCloudBackupSnapshotRestoreJobsResultOutputWithContext(context.Context) GetCloudBackupSnapshotRestoreJobsResultOutput
}

type GetCloudBackupSnapshotRestoreJobsResultArgs struct {
	// Indicates whether the restore job was canceled.
	Cancelled pulumi.BoolInput `pulumi:"cancelled"`
	// UTC ISO 8601 formatted point in time when Atlas created the restore job.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Type of restore job to create. Possible values are: automated and download.
	DeliveryType pulumi.StringInput `pulumi:"deliveryType"`
	// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
	DeliveryUrls pulumi.StringArrayInput `pulumi:"deliveryUrls"`
	// Indicates whether the restore job expired.
	Expired pulumi.BoolInput `pulumi:"expired"`
	// UTC ISO 8601 formatted point in time when the restore job expires.
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// UTC ISO 8601 formatted point in time when the restore job completed.
	FinishedAt pulumi.StringInput `pulumi:"finishedAt"`
	// The unique identifier of the restore job.
	Id                    pulumi.StringInput `pulumi:"id"`
	OplogInc              pulumi.IntInput    `pulumi:"oplogInc"`
	OplogTs               pulumi.IntInput    `pulumi:"oplogTs"`
	PointInTimeUtcSeconds pulumi.IntInput    `pulumi:"pointInTimeUtcSeconds"`
	// Unique identifier of the source snapshot ID of the restore job.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
	TargetClusterName pulumi.StringInput `pulumi:"targetClusterName"`
	// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
	TargetProjectId pulumi.StringInput `pulumi:"targetProjectId"`
	// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
}

func (GetCloudBackupSnapshotRestoreJobsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotRestoreJobsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotRestoreJobsResultArgs) ToGetCloudBackupSnapshotRestoreJobsResultOutput() GetCloudBackupSnapshotRestoreJobsResultOutput {
	return i.ToGetCloudBackupSnapshotRestoreJobsResultOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotRestoreJobsResultArgs) ToGetCloudBackupSnapshotRestoreJobsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotRestoreJobsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotRestoreJobsResultOutput)
}

// GetCloudBackupSnapshotRestoreJobsResultArrayInput is an input type that accepts GetCloudBackupSnapshotRestoreJobsResultArray and GetCloudBackupSnapshotRestoreJobsResultArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotRestoreJobsResultArrayInput` via:
//
//	GetCloudBackupSnapshotRestoreJobsResultArray{ GetCloudBackupSnapshotRestoreJobsResultArgs{...} }
type GetCloudBackupSnapshotRestoreJobsResultArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotRestoreJobsResultArrayOutput() GetCloudBackupSnapshotRestoreJobsResultArrayOutput
	ToGetCloudBackupSnapshotRestoreJobsResultArrayOutputWithContext(context.Context) GetCloudBackupSnapshotRestoreJobsResultArrayOutput
}

type GetCloudBackupSnapshotRestoreJobsResultArray []GetCloudBackupSnapshotRestoreJobsResultInput

func (GetCloudBackupSnapshotRestoreJobsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotRestoreJobsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotRestoreJobsResultArray) ToGetCloudBackupSnapshotRestoreJobsResultArrayOutput() GetCloudBackupSnapshotRestoreJobsResultArrayOutput {
	return i.ToGetCloudBackupSnapshotRestoreJobsResultArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotRestoreJobsResultArray) ToGetCloudBackupSnapshotRestoreJobsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotRestoreJobsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotRestoreJobsResultArrayOutput)
}

type GetCloudBackupSnapshotRestoreJobsResultOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotRestoreJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotRestoreJobsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotRestoreJobsResultOutput) ToGetCloudBackupSnapshotRestoreJobsResultOutput() GetCloudBackupSnapshotRestoreJobsResultOutput {
	return o
}

func (o GetCloudBackupSnapshotRestoreJobsResultOutput) ToGetCloudBackupSnapshotRestoreJobsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotRestoreJobsResultOutput {
	return o
}

// Indicates whether the restore job was canceled.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) Cancelled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) bool { return v.Cancelled }).(pulumi.BoolOutput)
}

// UTC ISO 8601 formatted point in time when Atlas created the restore job.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Type of restore job to create. Possible values are: automated and download.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) DeliveryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.DeliveryType }).(pulumi.StringOutput)
}

// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) DeliveryUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) []string { return v.DeliveryUrls }).(pulumi.StringArrayOutput)
}

// Indicates whether the restore job expired.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) Expired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) bool { return v.Expired }).(pulumi.BoolOutput)
}

// UTC ISO 8601 formatted point in time when the restore job expires.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// UTC ISO 8601 formatted point in time when the restore job completed.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) FinishedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.FinishedAt }).(pulumi.StringOutput)
}

// The unique identifier of the restore job.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudBackupSnapshotRestoreJobsResultOutput) OplogInc() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) int { return v.OplogInc }).(pulumi.IntOutput)
}

func (o GetCloudBackupSnapshotRestoreJobsResultOutput) OplogTs() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) int { return v.OplogTs }).(pulumi.IntOutput)
}

func (o GetCloudBackupSnapshotRestoreJobsResultOutput) PointInTimeUtcSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) int { return v.PointInTimeUtcSeconds }).(pulumi.IntOutput)
}

// Unique identifier of the source snapshot ID of the restore job.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) TargetClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.TargetClusterName }).(pulumi.StringOutput)
}

// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) TargetProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.TargetProjectId }).(pulumi.StringOutput)
}

// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.Timestamp }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotRestoreJobsResultArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotRestoreJobsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotRestoreJobsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotRestoreJobsResultArrayOutput) ToGetCloudBackupSnapshotRestoreJobsResultArrayOutput() GetCloudBackupSnapshotRestoreJobsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotRestoreJobsResultArrayOutput) ToGetCloudBackupSnapshotRestoreJobsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotRestoreJobsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotRestoreJobsResultArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotRestoreJobsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotRestoreJobsResult {
		return vs[0].([]GetCloudBackupSnapshotRestoreJobsResult)[vs[1].(int)]
	}).(GetCloudBackupSnapshotRestoreJobsResultOutput)
}

type GetCloudBackupSnapshotsResult struct {
	// Cloud provider that stores this snapshot.
	CloudProvider string `pulumi:"cloudProvider"`
	// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
	CreatedAt string `pulumi:"createdAt"`
	// UDescription of the snapshot. Only present for on-demand snapshots.
	Description string `pulumi:"description"`
	// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
	ExpiresAt string `pulumi:"expiresAt"`
	// Unique identifier for the sharded cluster snapshot.
	Id string `pulumi:"id"`
	// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
	MasterKeyUuid string `pulumi:"masterKeyUuid"`
	// Block of List of snapshots and the cloud provider where the snapshots are stored. See below
	Members []GetCloudBackupSnapshotsResultMember `pulumi:"members"`
	// Version of the MongoDB server.
	MongodVersion string `pulumi:"mongodVersion"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName string `pulumi:"replicaSetName"`
	// Unique identifiers of the snapshots created for the shards and config server for a sharded cluster.
	SnapshotIds []string `pulumi:"snapshotIds"`
	// Specified the type of snapshot. Valid values are onDemand and scheduled.
	SnapshotType string `pulumi:"snapshotType"`
	// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
	Status string `pulumi:"status"`
	// Specifies the size of the snapshot in bytes.
	StorageSizeBytes int `pulumi:"storageSizeBytes"`
	// Specifies the type of cluster: replicaSet or shardedCluster.
	Type string `pulumi:"type"`
}

// GetCloudBackupSnapshotsResultInput is an input type that accepts GetCloudBackupSnapshotsResultArgs and GetCloudBackupSnapshotsResultOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotsResultInput` via:
//
//	GetCloudBackupSnapshotsResultArgs{...}
type GetCloudBackupSnapshotsResultInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotsResultOutput() GetCloudBackupSnapshotsResultOutput
	ToGetCloudBackupSnapshotsResultOutputWithContext(context.Context) GetCloudBackupSnapshotsResultOutput
}

type GetCloudBackupSnapshotsResultArgs struct {
	// Cloud provider that stores this snapshot.
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// UDescription of the snapshot. Only present for on-demand snapshots.
	Description pulumi.StringInput `pulumi:"description"`
	// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// Unique identifier for the sharded cluster snapshot.
	Id pulumi.StringInput `pulumi:"id"`
	// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
	MasterKeyUuid pulumi.StringInput `pulumi:"masterKeyUuid"`
	// Block of List of snapshots and the cloud provider where the snapshots are stored. See below
	Members GetCloudBackupSnapshotsResultMemberArrayInput `pulumi:"members"`
	// Version of the MongoDB server.
	MongodVersion pulumi.StringInput `pulumi:"mongodVersion"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName pulumi.StringInput `pulumi:"replicaSetName"`
	// Unique identifiers of the snapshots created for the shards and config server for a sharded cluster.
	SnapshotIds pulumi.StringArrayInput `pulumi:"snapshotIds"`
	// Specified the type of snapshot. Valid values are onDemand and scheduled.
	SnapshotType pulumi.StringInput `pulumi:"snapshotType"`
	// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
	Status pulumi.StringInput `pulumi:"status"`
	// Specifies the size of the snapshot in bytes.
	StorageSizeBytes pulumi.IntInput `pulumi:"storageSizeBytes"`
	// Specifies the type of cluster: replicaSet or shardedCluster.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCloudBackupSnapshotsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotsResultArgs) ToGetCloudBackupSnapshotsResultOutput() GetCloudBackupSnapshotsResultOutput {
	return i.ToGetCloudBackupSnapshotsResultOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotsResultArgs) ToGetCloudBackupSnapshotsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotsResultOutput)
}

// GetCloudBackupSnapshotsResultArrayInput is an input type that accepts GetCloudBackupSnapshotsResultArray and GetCloudBackupSnapshotsResultArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotsResultArrayInput` via:
//
//	GetCloudBackupSnapshotsResultArray{ GetCloudBackupSnapshotsResultArgs{...} }
type GetCloudBackupSnapshotsResultArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotsResultArrayOutput() GetCloudBackupSnapshotsResultArrayOutput
	ToGetCloudBackupSnapshotsResultArrayOutputWithContext(context.Context) GetCloudBackupSnapshotsResultArrayOutput
}

type GetCloudBackupSnapshotsResultArray []GetCloudBackupSnapshotsResultInput

func (GetCloudBackupSnapshotsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotsResultArray) ToGetCloudBackupSnapshotsResultArrayOutput() GetCloudBackupSnapshotsResultArrayOutput {
	return i.ToGetCloudBackupSnapshotsResultArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotsResultArray) ToGetCloudBackupSnapshotsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotsResultArrayOutput)
}

type GetCloudBackupSnapshotsResultOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotsResultOutput) ToGetCloudBackupSnapshotsResultOutput() GetCloudBackupSnapshotsResultOutput {
	return o
}

func (o GetCloudBackupSnapshotsResultOutput) ToGetCloudBackupSnapshotsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultOutput {
	return o
}

// Cloud provider that stores this snapshot.
func (o GetCloudBackupSnapshotsResultOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
func (o GetCloudBackupSnapshotsResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// UDescription of the snapshot. Only present for on-demand snapshots.
func (o GetCloudBackupSnapshotsResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.Description }).(pulumi.StringOutput)
}

// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
func (o GetCloudBackupSnapshotsResultOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// Unique identifier for the sharded cluster snapshot.
func (o GetCloudBackupSnapshotsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
func (o GetCloudBackupSnapshotsResultOutput) MasterKeyUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.MasterKeyUuid }).(pulumi.StringOutput)
}

// Block of List of snapshots and the cloud provider where the snapshots are stored. See below
func (o GetCloudBackupSnapshotsResultOutput) Members() GetCloudBackupSnapshotsResultMemberArrayOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) []GetCloudBackupSnapshotsResultMember { return v.Members }).(GetCloudBackupSnapshotsResultMemberArrayOutput)
}

// Version of the MongoDB server.
func (o GetCloudBackupSnapshotsResultOutput) MongodVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.MongodVersion }).(pulumi.StringOutput)
}

// Label given to a shard or config server from which Atlas took this snapshot.
func (o GetCloudBackupSnapshotsResultOutput) ReplicaSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.ReplicaSetName }).(pulumi.StringOutput)
}

// Unique identifiers of the snapshots created for the shards and config server for a sharded cluster.
func (o GetCloudBackupSnapshotsResultOutput) SnapshotIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) []string { return v.SnapshotIds }).(pulumi.StringArrayOutput)
}

// Specified the type of snapshot. Valid values are onDemand and scheduled.
func (o GetCloudBackupSnapshotsResultOutput) SnapshotType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.SnapshotType }).(pulumi.StringOutput)
}

// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
func (o GetCloudBackupSnapshotsResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.Status }).(pulumi.StringOutput)
}

// Specifies the size of the snapshot in bytes.
func (o GetCloudBackupSnapshotsResultOutput) StorageSizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) int { return v.StorageSizeBytes }).(pulumi.IntOutput)
}

// Specifies the type of cluster: replicaSet or shardedCluster.
func (o GetCloudBackupSnapshotsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.Type }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotsResultArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotsResultArrayOutput) ToGetCloudBackupSnapshotsResultArrayOutput() GetCloudBackupSnapshotsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotsResultArrayOutput) ToGetCloudBackupSnapshotsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotsResultArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotsResult {
		return vs[0].([]GetCloudBackupSnapshotsResult)[vs[1].(int)]
	}).(GetCloudBackupSnapshotsResultOutput)
}

type GetCloudBackupSnapshotsResultMember struct {
	// Cloud provider that stores this snapshot.
	CloudProvider string `pulumi:"cloudProvider"`
	// Unique identifier for the sharded cluster snapshot.
	Id string `pulumi:"id"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName string `pulumi:"replicaSetName"`
}

// GetCloudBackupSnapshotsResultMemberInput is an input type that accepts GetCloudBackupSnapshotsResultMemberArgs and GetCloudBackupSnapshotsResultMemberOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotsResultMemberInput` via:
//
//	GetCloudBackupSnapshotsResultMemberArgs{...}
type GetCloudBackupSnapshotsResultMemberInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotsResultMemberOutput() GetCloudBackupSnapshotsResultMemberOutput
	ToGetCloudBackupSnapshotsResultMemberOutputWithContext(context.Context) GetCloudBackupSnapshotsResultMemberOutput
}

type GetCloudBackupSnapshotsResultMemberArgs struct {
	// Cloud provider that stores this snapshot.
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// Unique identifier for the sharded cluster snapshot.
	Id pulumi.StringInput `pulumi:"id"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName pulumi.StringInput `pulumi:"replicaSetName"`
}

func (GetCloudBackupSnapshotsResultMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotsResultMember)(nil)).Elem()
}

func (i GetCloudBackupSnapshotsResultMemberArgs) ToGetCloudBackupSnapshotsResultMemberOutput() GetCloudBackupSnapshotsResultMemberOutput {
	return i.ToGetCloudBackupSnapshotsResultMemberOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotsResultMemberArgs) ToGetCloudBackupSnapshotsResultMemberOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotsResultMemberOutput)
}

// GetCloudBackupSnapshotsResultMemberArrayInput is an input type that accepts GetCloudBackupSnapshotsResultMemberArray and GetCloudBackupSnapshotsResultMemberArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotsResultMemberArrayInput` via:
//
//	GetCloudBackupSnapshotsResultMemberArray{ GetCloudBackupSnapshotsResultMemberArgs{...} }
type GetCloudBackupSnapshotsResultMemberArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotsResultMemberArrayOutput() GetCloudBackupSnapshotsResultMemberArrayOutput
	ToGetCloudBackupSnapshotsResultMemberArrayOutputWithContext(context.Context) GetCloudBackupSnapshotsResultMemberArrayOutput
}

type GetCloudBackupSnapshotsResultMemberArray []GetCloudBackupSnapshotsResultMemberInput

func (GetCloudBackupSnapshotsResultMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotsResultMember)(nil)).Elem()
}

func (i GetCloudBackupSnapshotsResultMemberArray) ToGetCloudBackupSnapshotsResultMemberArrayOutput() GetCloudBackupSnapshotsResultMemberArrayOutput {
	return i.ToGetCloudBackupSnapshotsResultMemberArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotsResultMemberArray) ToGetCloudBackupSnapshotsResultMemberArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotsResultMemberArrayOutput)
}

type GetCloudBackupSnapshotsResultMemberOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotsResultMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotsResultMember)(nil)).Elem()
}

func (o GetCloudBackupSnapshotsResultMemberOutput) ToGetCloudBackupSnapshotsResultMemberOutput() GetCloudBackupSnapshotsResultMemberOutput {
	return o
}

func (o GetCloudBackupSnapshotsResultMemberOutput) ToGetCloudBackupSnapshotsResultMemberOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultMemberOutput {
	return o
}

// Cloud provider that stores this snapshot.
func (o GetCloudBackupSnapshotsResultMemberOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResultMember) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// Unique identifier for the sharded cluster snapshot.
func (o GetCloudBackupSnapshotsResultMemberOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResultMember) string { return v.Id }).(pulumi.StringOutput)
}

// Label given to a shard or config server from which Atlas took this snapshot.
func (o GetCloudBackupSnapshotsResultMemberOutput) ReplicaSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResultMember) string { return v.ReplicaSetName }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotsResultMemberArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotsResultMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotsResultMember)(nil)).Elem()
}

func (o GetCloudBackupSnapshotsResultMemberArrayOutput) ToGetCloudBackupSnapshotsResultMemberArrayOutput() GetCloudBackupSnapshotsResultMemberArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotsResultMemberArrayOutput) ToGetCloudBackupSnapshotsResultMemberArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultMemberArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotsResultMemberArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotsResultMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotsResultMember {
		return vs[0].([]GetCloudBackupSnapshotsResultMember)[vs[1].(int)]
	}).(GetCloudBackupSnapshotsResultMemberOutput)
}

type GetCloudProviderAccessAwsIamRole struct {
	// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
	AtlasAssumedRoleExternalId string `pulumi:"atlasAssumedRoleExternalId"`
	// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
	AtlasAwsAccountArn string `pulumi:"atlasAwsAccountArn"`
	// Date on which this role was authorized.
	AuthorizedDate string `pulumi:"authorizedDate"`
	// Date on which this role was created.
	CreatedDate string `pulumi:"createdDate"`
	// Atlas features this AWS IAM role is linked to.
	FeatureUsages []GetCloudProviderAccessAwsIamRoleFeatureUsage `pulumi:"featureUsages"`
	// ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account.
	IamAssumedRoleArn string `pulumi:"iamAssumedRoleArn"`
	// Name of the cloud provider. Currently limited to AWS.
	ProviderName string `pulumi:"providerName"`
	// Unique ID of this role.
	RoleId string `pulumi:"roleId"`
}

// GetCloudProviderAccessAwsIamRoleInput is an input type that accepts GetCloudProviderAccessAwsIamRoleArgs and GetCloudProviderAccessAwsIamRoleOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessAwsIamRoleInput` via:
//
//	GetCloudProviderAccessAwsIamRoleArgs{...}
type GetCloudProviderAccessAwsIamRoleInput interface {
	pulumi.Input

	ToGetCloudProviderAccessAwsIamRoleOutput() GetCloudProviderAccessAwsIamRoleOutput
	ToGetCloudProviderAccessAwsIamRoleOutputWithContext(context.Context) GetCloudProviderAccessAwsIamRoleOutput
}

type GetCloudProviderAccessAwsIamRoleArgs struct {
	// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
	AtlasAssumedRoleExternalId pulumi.StringInput `pulumi:"atlasAssumedRoleExternalId"`
	// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
	AtlasAwsAccountArn pulumi.StringInput `pulumi:"atlasAwsAccountArn"`
	// Date on which this role was authorized.
	AuthorizedDate pulumi.StringInput `pulumi:"authorizedDate"`
	// Date on which this role was created.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// Atlas features this AWS IAM role is linked to.
	FeatureUsages GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput `pulumi:"featureUsages"`
	// ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account.
	IamAssumedRoleArn pulumi.StringInput `pulumi:"iamAssumedRoleArn"`
	// Name of the cloud provider. Currently limited to AWS.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Unique ID of this role.
	RoleId pulumi.StringInput `pulumi:"roleId"`
}

func (GetCloudProviderAccessAwsIamRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessAwsIamRole)(nil)).Elem()
}

func (i GetCloudProviderAccessAwsIamRoleArgs) ToGetCloudProviderAccessAwsIamRoleOutput() GetCloudProviderAccessAwsIamRoleOutput {
	return i.ToGetCloudProviderAccessAwsIamRoleOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessAwsIamRoleArgs) ToGetCloudProviderAccessAwsIamRoleOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessAwsIamRoleOutput)
}

// GetCloudProviderAccessAwsIamRoleArrayInput is an input type that accepts GetCloudProviderAccessAwsIamRoleArray and GetCloudProviderAccessAwsIamRoleArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessAwsIamRoleArrayInput` via:
//
//	GetCloudProviderAccessAwsIamRoleArray{ GetCloudProviderAccessAwsIamRoleArgs{...} }
type GetCloudProviderAccessAwsIamRoleArrayInput interface {
	pulumi.Input

	ToGetCloudProviderAccessAwsIamRoleArrayOutput() GetCloudProviderAccessAwsIamRoleArrayOutput
	ToGetCloudProviderAccessAwsIamRoleArrayOutputWithContext(context.Context) GetCloudProviderAccessAwsIamRoleArrayOutput
}

type GetCloudProviderAccessAwsIamRoleArray []GetCloudProviderAccessAwsIamRoleInput

func (GetCloudProviderAccessAwsIamRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessAwsIamRole)(nil)).Elem()
}

func (i GetCloudProviderAccessAwsIamRoleArray) ToGetCloudProviderAccessAwsIamRoleArrayOutput() GetCloudProviderAccessAwsIamRoleArrayOutput {
	return i.ToGetCloudProviderAccessAwsIamRoleArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessAwsIamRoleArray) ToGetCloudProviderAccessAwsIamRoleArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessAwsIamRoleArrayOutput)
}

type GetCloudProviderAccessAwsIamRoleOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessAwsIamRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessAwsIamRole)(nil)).Elem()
}

func (o GetCloudProviderAccessAwsIamRoleOutput) ToGetCloudProviderAccessAwsIamRoleOutput() GetCloudProviderAccessAwsIamRoleOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleOutput) ToGetCloudProviderAccessAwsIamRoleOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleOutput {
	return o
}

// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
func (o GetCloudProviderAccessAwsIamRoleOutput) AtlasAssumedRoleExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.AtlasAssumedRoleExternalId }).(pulumi.StringOutput)
}

// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
func (o GetCloudProviderAccessAwsIamRoleOutput) AtlasAwsAccountArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.AtlasAwsAccountArn }).(pulumi.StringOutput)
}

// Date on which this role was authorized.
func (o GetCloudProviderAccessAwsIamRoleOutput) AuthorizedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.AuthorizedDate }).(pulumi.StringOutput)
}

// Date on which this role was created.
func (o GetCloudProviderAccessAwsIamRoleOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// Atlas features this AWS IAM role is linked to.
func (o GetCloudProviderAccessAwsIamRoleOutput) FeatureUsages() GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) []GetCloudProviderAccessAwsIamRoleFeatureUsage {
		return v.FeatureUsages
	}).(GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput)
}

// ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account.
func (o GetCloudProviderAccessAwsIamRoleOutput) IamAssumedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.IamAssumedRoleArn }).(pulumi.StringOutput)
}

// Name of the cloud provider. Currently limited to AWS.
func (o GetCloudProviderAccessAwsIamRoleOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Unique ID of this role.
func (o GetCloudProviderAccessAwsIamRoleOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.RoleId }).(pulumi.StringOutput)
}

type GetCloudProviderAccessAwsIamRoleArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessAwsIamRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessAwsIamRole)(nil)).Elem()
}

func (o GetCloudProviderAccessAwsIamRoleArrayOutput) ToGetCloudProviderAccessAwsIamRoleArrayOutput() GetCloudProviderAccessAwsIamRoleArrayOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleArrayOutput) ToGetCloudProviderAccessAwsIamRoleArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleArrayOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleArrayOutput) Index(i pulumi.IntInput) GetCloudProviderAccessAwsIamRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderAccessAwsIamRole {
		return vs[0].([]GetCloudProviderAccessAwsIamRole)[vs[1].(int)]
	}).(GetCloudProviderAccessAwsIamRoleOutput)
}

type GetCloudProviderAccessAwsIamRoleFeatureUsage struct {
	FeatureId   map[string]interface{} `pulumi:"featureId"`
	FeatureType string                 `pulumi:"featureType"`
}

// GetCloudProviderAccessAwsIamRoleFeatureUsageInput is an input type that accepts GetCloudProviderAccessAwsIamRoleFeatureUsageArgs and GetCloudProviderAccessAwsIamRoleFeatureUsageOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessAwsIamRoleFeatureUsageInput` via:
//
//	GetCloudProviderAccessAwsIamRoleFeatureUsageArgs{...}
type GetCloudProviderAccessAwsIamRoleFeatureUsageInput interface {
	pulumi.Input

	ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageOutput
	ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutputWithContext(context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageOutput
}

type GetCloudProviderAccessAwsIamRoleFeatureUsageArgs struct {
	FeatureId   pulumi.MapInput    `pulumi:"featureId"`
	FeatureType pulumi.StringInput `pulumi:"featureType"`
}

func (GetCloudProviderAccessAwsIamRoleFeatureUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleFeatureUsage)(nil)).Elem()
}

func (i GetCloudProviderAccessAwsIamRoleFeatureUsageArgs) ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return i.ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessAwsIamRoleFeatureUsageArgs) ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessAwsIamRoleFeatureUsageOutput)
}

// GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput is an input type that accepts GetCloudProviderAccessAwsIamRoleFeatureUsageArray and GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput` via:
//
//	GetCloudProviderAccessAwsIamRoleFeatureUsageArray{ GetCloudProviderAccessAwsIamRoleFeatureUsageArgs{...} }
type GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput interface {
	pulumi.Input

	ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput
	ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutputWithContext(context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput
}

type GetCloudProviderAccessAwsIamRoleFeatureUsageArray []GetCloudProviderAccessAwsIamRoleFeatureUsageInput

func (GetCloudProviderAccessAwsIamRoleFeatureUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessAwsIamRoleFeatureUsage)(nil)).Elem()
}

func (i GetCloudProviderAccessAwsIamRoleFeatureUsageArray) ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return i.ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessAwsIamRoleFeatureUsageArray) ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput)
}

type GetCloudProviderAccessAwsIamRoleFeatureUsageOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleFeatureUsage)(nil)).Elem()
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) FeatureId() pulumi.MapOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRoleFeatureUsage) map[string]interface{} { return v.FeatureId }).(pulumi.MapOutput)
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) FeatureType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRoleFeatureUsage) string { return v.FeatureType }).(pulumi.StringOutput)
}

type GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessAwsIamRoleFeatureUsage)(nil)).Elem()
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput) ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput) ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput) Index(i pulumi.IntInput) GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderAccessAwsIamRoleFeatureUsage {
		return vs[0].([]GetCloudProviderAccessAwsIamRoleFeatureUsage)[vs[1].(int)]
	}).(GetCloudProviderAccessAwsIamRoleFeatureUsageOutput)
}

type GetCloudProviderAccessSetupAwsConfig struct {
	// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
	AtlasAssumedRoleExternalId string `pulumi:"atlasAssumedRoleExternalId"`
	// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
	AtlasAwsAccountArn string `pulumi:"atlasAwsAccountArn"`
}

// GetCloudProviderAccessSetupAwsConfigInput is an input type that accepts GetCloudProviderAccessSetupAwsConfigArgs and GetCloudProviderAccessSetupAwsConfigOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessSetupAwsConfigInput` via:
//
//	GetCloudProviderAccessSetupAwsConfigArgs{...}
type GetCloudProviderAccessSetupAwsConfigInput interface {
	pulumi.Input

	ToGetCloudProviderAccessSetupAwsConfigOutput() GetCloudProviderAccessSetupAwsConfigOutput
	ToGetCloudProviderAccessSetupAwsConfigOutputWithContext(context.Context) GetCloudProviderAccessSetupAwsConfigOutput
}

type GetCloudProviderAccessSetupAwsConfigArgs struct {
	// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
	AtlasAssumedRoleExternalId pulumi.StringInput `pulumi:"atlasAssumedRoleExternalId"`
	// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
	AtlasAwsAccountArn pulumi.StringInput `pulumi:"atlasAwsAccountArn"`
}

func (GetCloudProviderAccessSetupAwsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (i GetCloudProviderAccessSetupAwsConfigArgs) ToGetCloudProviderAccessSetupAwsConfigOutput() GetCloudProviderAccessSetupAwsConfigOutput {
	return i.ToGetCloudProviderAccessSetupAwsConfigOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessSetupAwsConfigArgs) ToGetCloudProviderAccessSetupAwsConfigOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAwsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessSetupAwsConfigOutput)
}

// GetCloudProviderAccessSetupAwsConfigArrayInput is an input type that accepts GetCloudProviderAccessSetupAwsConfigArray and GetCloudProviderAccessSetupAwsConfigArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessSetupAwsConfigArrayInput` via:
//
//	GetCloudProviderAccessSetupAwsConfigArray{ GetCloudProviderAccessSetupAwsConfigArgs{...} }
type GetCloudProviderAccessSetupAwsConfigArrayInput interface {
	pulumi.Input

	ToGetCloudProviderAccessSetupAwsConfigArrayOutput() GetCloudProviderAccessSetupAwsConfigArrayOutput
	ToGetCloudProviderAccessSetupAwsConfigArrayOutputWithContext(context.Context) GetCloudProviderAccessSetupAwsConfigArrayOutput
}

type GetCloudProviderAccessSetupAwsConfigArray []GetCloudProviderAccessSetupAwsConfigInput

func (GetCloudProviderAccessSetupAwsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (i GetCloudProviderAccessSetupAwsConfigArray) ToGetCloudProviderAccessSetupAwsConfigArrayOutput() GetCloudProviderAccessSetupAwsConfigArrayOutput {
	return i.ToGetCloudProviderAccessSetupAwsConfigArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessSetupAwsConfigArray) ToGetCloudProviderAccessSetupAwsConfigArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAwsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessSetupAwsConfigArrayOutput)
}

type GetCloudProviderAccessSetupAwsConfigOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessSetupAwsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (o GetCloudProviderAccessSetupAwsConfigOutput) ToGetCloudProviderAccessSetupAwsConfigOutput() GetCloudProviderAccessSetupAwsConfigOutput {
	return o
}

func (o GetCloudProviderAccessSetupAwsConfigOutput) ToGetCloudProviderAccessSetupAwsConfigOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAwsConfigOutput {
	return o
}

// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
func (o GetCloudProviderAccessSetupAwsConfigOutput) AtlasAssumedRoleExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessSetupAwsConfig) string { return v.AtlasAssumedRoleExternalId }).(pulumi.StringOutput)
}

// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
func (o GetCloudProviderAccessSetupAwsConfigOutput) AtlasAwsAccountArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessSetupAwsConfig) string { return v.AtlasAwsAccountArn }).(pulumi.StringOutput)
}

type GetCloudProviderAccessSetupAwsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessSetupAwsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (o GetCloudProviderAccessSetupAwsConfigArrayOutput) ToGetCloudProviderAccessSetupAwsConfigArrayOutput() GetCloudProviderAccessSetupAwsConfigArrayOutput {
	return o
}

func (o GetCloudProviderAccessSetupAwsConfigArrayOutput) ToGetCloudProviderAccessSetupAwsConfigArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAwsConfigArrayOutput {
	return o
}

func (o GetCloudProviderAccessSetupAwsConfigArrayOutput) Index(i pulumi.IntInput) GetCloudProviderAccessSetupAwsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderAccessSetupAwsConfig {
		return vs[0].([]GetCloudProviderAccessSetupAwsConfig)[vs[1].(int)]
	}).(GetCloudProviderAccessSetupAwsConfigOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicy struct {
	Id          string                                                 `pulumi:"id"`
	PolicyItems []GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// GetCloudProviderSnapshotBackupPolicyPolicyInput is an input type that accepts GetCloudProviderSnapshotBackupPolicyPolicyArgs and GetCloudProviderSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotBackupPolicyPolicyInput` via:
//
//	GetCloudProviderSnapshotBackupPolicyPolicyArgs{...}
type GetCloudProviderSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotBackupPolicyPolicyOutput() GetCloudProviderSnapshotBackupPolicyPolicyOutput
	ToGetCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(context.Context) GetCloudProviderSnapshotBackupPolicyPolicyOutput
}

type GetCloudProviderSnapshotBackupPolicyPolicyArgs struct {
	Id          pulumi.StringInput                                             `pulumi:"id"`
	PolicyItems GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (GetCloudProviderSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyArgs) ToGetCloudProviderSnapshotBackupPolicyPolicyOutput() GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return i.ToGetCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyArgs) ToGetCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotBackupPolicyPolicyOutput)
}

// GetCloudProviderSnapshotBackupPolicyPolicyArrayInput is an input type that accepts GetCloudProviderSnapshotBackupPolicyPolicyArray and GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotBackupPolicyPolicyArrayInput` via:
//
//	GetCloudProviderSnapshotBackupPolicyPolicyArray{ GetCloudProviderSnapshotBackupPolicyPolicyArgs{...} }
type GetCloudProviderSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput
	ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput
}

type GetCloudProviderSnapshotBackupPolicyPolicyArray []GetCloudProviderSnapshotBackupPolicyPolicyInput

func (GetCloudProviderSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyArray) ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyArray) ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyOutput() GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyOutput) PolicyItems() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicy) []GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderSnapshotBackupPolicyPolicy {
		return vs[0].([]GetCloudProviderSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(GetCloudProviderSnapshotBackupPolicyPolicyOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	Id                string `pulumi:"id"`
	RetentionUnit     string `pulumi:"retentionUnit"`
	RetentionValue    int    `pulumi:"retentionValue"`
}

// GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs and GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//	GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput
	ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	Id                pulumi.StringInput `pulumi:"id"`
	RetentionUnit     pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue    pulumi.IntInput    `pulumi:"retentionValue"`
}

func (GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray and GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//	GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray{ GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray []GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemInput

func (GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type GetCloudProviderSnapshotRestoreJobsResult struct {
	// Indicates whether the restore job was canceled.
	Cancelled bool `pulumi:"cancelled"`
	// UTC ISO 8601 formatted point in time when Atlas created the restore job.
	CreatedAt string `pulumi:"createdAt"`
	// Type of restore job to create. Possible values are: automated and download.
	DeliveryType string `pulumi:"deliveryType"`
	// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
	DeliveryUrls []string `pulumi:"deliveryUrls"`
	// Indicates whether the restore job expired.
	Expired bool `pulumi:"expired"`
	// UTC ISO 8601 formatted point in time when the restore job expires.
	ExpiresAt string `pulumi:"expiresAt"`
	// UTC ISO 8601 formatted point in time when the restore job completed.
	FinishedAt string `pulumi:"finishedAt"`
	// The unique identifier of the restore job.
	Id                    string `pulumi:"id"`
	OplogInc              int    `pulumi:"oplogInc"`
	OplogTs               int    `pulumi:"oplogTs"`
	PointInTimeUtcSeconds int    `pulumi:"pointInTimeUtcSeconds"`
	// Unique identifier of the source snapshot ID of the restore job.
	SnapshotId string `pulumi:"snapshotId"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
	TargetClusterName string `pulumi:"targetClusterName"`
	// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
	TargetProjectId string `pulumi:"targetProjectId"`
	// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
	Timestamp string `pulumi:"timestamp"`
}

// GetCloudProviderSnapshotRestoreJobsResultInput is an input type that accepts GetCloudProviderSnapshotRestoreJobsResultArgs and GetCloudProviderSnapshotRestoreJobsResultOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotRestoreJobsResultInput` via:
//
//	GetCloudProviderSnapshotRestoreJobsResultArgs{...}
type GetCloudProviderSnapshotRestoreJobsResultInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotRestoreJobsResultOutput() GetCloudProviderSnapshotRestoreJobsResultOutput
	ToGetCloudProviderSnapshotRestoreJobsResultOutputWithContext(context.Context) GetCloudProviderSnapshotRestoreJobsResultOutput
}

type GetCloudProviderSnapshotRestoreJobsResultArgs struct {
	// Indicates whether the restore job was canceled.
	Cancelled pulumi.BoolInput `pulumi:"cancelled"`
	// UTC ISO 8601 formatted point in time when Atlas created the restore job.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Type of restore job to create. Possible values are: automated and download.
	DeliveryType pulumi.StringInput `pulumi:"deliveryType"`
	// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
	DeliveryUrls pulumi.StringArrayInput `pulumi:"deliveryUrls"`
	// Indicates whether the restore job expired.
	Expired pulumi.BoolInput `pulumi:"expired"`
	// UTC ISO 8601 formatted point in time when the restore job expires.
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// UTC ISO 8601 formatted point in time when the restore job completed.
	FinishedAt pulumi.StringInput `pulumi:"finishedAt"`
	// The unique identifier of the restore job.
	Id                    pulumi.StringInput `pulumi:"id"`
	OplogInc              pulumi.IntInput    `pulumi:"oplogInc"`
	OplogTs               pulumi.IntInput    `pulumi:"oplogTs"`
	PointInTimeUtcSeconds pulumi.IntInput    `pulumi:"pointInTimeUtcSeconds"`
	// Unique identifier of the source snapshot ID of the restore job.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
	TargetClusterName pulumi.StringInput `pulumi:"targetClusterName"`
	// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
	TargetProjectId pulumi.StringInput `pulumi:"targetProjectId"`
	// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
}

func (GetCloudProviderSnapshotRestoreJobsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotRestoreJobsResult)(nil)).Elem()
}

func (i GetCloudProviderSnapshotRestoreJobsResultArgs) ToGetCloudProviderSnapshotRestoreJobsResultOutput() GetCloudProviderSnapshotRestoreJobsResultOutput {
	return i.ToGetCloudProviderSnapshotRestoreJobsResultOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotRestoreJobsResultArgs) ToGetCloudProviderSnapshotRestoreJobsResultOutputWithContext(ctx context.Context) GetCloudProviderSnapshotRestoreJobsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotRestoreJobsResultOutput)
}

// GetCloudProviderSnapshotRestoreJobsResultArrayInput is an input type that accepts GetCloudProviderSnapshotRestoreJobsResultArray and GetCloudProviderSnapshotRestoreJobsResultArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotRestoreJobsResultArrayInput` via:
//
//	GetCloudProviderSnapshotRestoreJobsResultArray{ GetCloudProviderSnapshotRestoreJobsResultArgs{...} }
type GetCloudProviderSnapshotRestoreJobsResultArrayInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotRestoreJobsResultArrayOutput() GetCloudProviderSnapshotRestoreJobsResultArrayOutput
	ToGetCloudProviderSnapshotRestoreJobsResultArrayOutputWithContext(context.Context) GetCloudProviderSnapshotRestoreJobsResultArrayOutput
}

type GetCloudProviderSnapshotRestoreJobsResultArray []GetCloudProviderSnapshotRestoreJobsResultInput

func (GetCloudProviderSnapshotRestoreJobsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotRestoreJobsResult)(nil)).Elem()
}

func (i GetCloudProviderSnapshotRestoreJobsResultArray) ToGetCloudProviderSnapshotRestoreJobsResultArrayOutput() GetCloudProviderSnapshotRestoreJobsResultArrayOutput {
	return i.ToGetCloudProviderSnapshotRestoreJobsResultArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotRestoreJobsResultArray) ToGetCloudProviderSnapshotRestoreJobsResultArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotRestoreJobsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotRestoreJobsResultArrayOutput)
}

type GetCloudProviderSnapshotRestoreJobsResultOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotRestoreJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotRestoreJobsResult)(nil)).Elem()
}

func (o GetCloudProviderSnapshotRestoreJobsResultOutput) ToGetCloudProviderSnapshotRestoreJobsResultOutput() GetCloudProviderSnapshotRestoreJobsResultOutput {
	return o
}

func (o GetCloudProviderSnapshotRestoreJobsResultOutput) ToGetCloudProviderSnapshotRestoreJobsResultOutputWithContext(ctx context.Context) GetCloudProviderSnapshotRestoreJobsResultOutput {
	return o
}

// Indicates whether the restore job was canceled.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) Cancelled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) bool { return v.Cancelled }).(pulumi.BoolOutput)
}

// UTC ISO 8601 formatted point in time when Atlas created the restore job.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Type of restore job to create. Possible values are: automated and download.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) DeliveryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.DeliveryType }).(pulumi.StringOutput)
}

// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) DeliveryUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) []string { return v.DeliveryUrls }).(pulumi.StringArrayOutput)
}

// Indicates whether the restore job expired.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) Expired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) bool { return v.Expired }).(pulumi.BoolOutput)
}

// UTC ISO 8601 formatted point in time when the restore job expires.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// UTC ISO 8601 formatted point in time when the restore job completed.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) FinishedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.FinishedAt }).(pulumi.StringOutput)
}

// The unique identifier of the restore job.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotRestoreJobsResultOutput) OplogInc() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) int { return v.OplogInc }).(pulumi.IntOutput)
}

func (o GetCloudProviderSnapshotRestoreJobsResultOutput) OplogTs() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) int { return v.OplogTs }).(pulumi.IntOutput)
}

func (o GetCloudProviderSnapshotRestoreJobsResultOutput) PointInTimeUtcSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) int { return v.PointInTimeUtcSeconds }).(pulumi.IntOutput)
}

// Unique identifier of the source snapshot ID of the restore job.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) TargetClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.TargetClusterName }).(pulumi.StringOutput)
}

// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) TargetProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.TargetProjectId }).(pulumi.StringOutput)
}

// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.Timestamp }).(pulumi.StringOutput)
}

type GetCloudProviderSnapshotRestoreJobsResultArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotRestoreJobsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotRestoreJobsResult)(nil)).Elem()
}

func (o GetCloudProviderSnapshotRestoreJobsResultArrayOutput) ToGetCloudProviderSnapshotRestoreJobsResultArrayOutput() GetCloudProviderSnapshotRestoreJobsResultArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotRestoreJobsResultArrayOutput) ToGetCloudProviderSnapshotRestoreJobsResultArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotRestoreJobsResultArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotRestoreJobsResultArrayOutput) Index(i pulumi.IntInput) GetCloudProviderSnapshotRestoreJobsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderSnapshotRestoreJobsResult {
		return vs[0].([]GetCloudProviderSnapshotRestoreJobsResult)[vs[1].(int)]
	}).(GetCloudProviderSnapshotRestoreJobsResultOutput)
}

type GetCloudProviderSnapshotsResult struct {
	// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
	CreatedAt string `pulumi:"createdAt"`
	// UDescription of the snapshot. Only present for on-demand snapshots.
	Description string `pulumi:"description"`
	// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
	ExpiresAt string `pulumi:"expiresAt"`
	// Unique identifier of the snapshot.
	Id string `pulumi:"id"`
	// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
	MasterKeyUuid string `pulumi:"masterKeyUuid"`
	// Version of the MongoDB server.
	MongodVersion string `pulumi:"mongodVersion"`
	// Specified the type of snapshot. Valid values are onDemand and scheduled.
	SnapshotType string `pulumi:"snapshotType"`
	// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
	Status string `pulumi:"status"`
	// Specifies the size of the snapshot in bytes.
	StorageSizeBytes int `pulumi:"storageSizeBytes"`
	// Specifies the type of cluster: replicaSet or shardedCluster.
	Type string `pulumi:"type"`
}

// GetCloudProviderSnapshotsResultInput is an input type that accepts GetCloudProviderSnapshotsResultArgs and GetCloudProviderSnapshotsResultOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotsResultInput` via:
//
//	GetCloudProviderSnapshotsResultArgs{...}
type GetCloudProviderSnapshotsResultInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotsResultOutput() GetCloudProviderSnapshotsResultOutput
	ToGetCloudProviderSnapshotsResultOutputWithContext(context.Context) GetCloudProviderSnapshotsResultOutput
}

type GetCloudProviderSnapshotsResultArgs struct {
	// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// UDescription of the snapshot. Only present for on-demand snapshots.
	Description pulumi.StringInput `pulumi:"description"`
	// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// Unique identifier of the snapshot.
	Id pulumi.StringInput `pulumi:"id"`
	// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
	MasterKeyUuid pulumi.StringInput `pulumi:"masterKeyUuid"`
	// Version of the MongoDB server.
	MongodVersion pulumi.StringInput `pulumi:"mongodVersion"`
	// Specified the type of snapshot. Valid values are onDemand and scheduled.
	SnapshotType pulumi.StringInput `pulumi:"snapshotType"`
	// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
	Status pulumi.StringInput `pulumi:"status"`
	// Specifies the size of the snapshot in bytes.
	StorageSizeBytes pulumi.IntInput `pulumi:"storageSizeBytes"`
	// Specifies the type of cluster: replicaSet or shardedCluster.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCloudProviderSnapshotsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotsResult)(nil)).Elem()
}

func (i GetCloudProviderSnapshotsResultArgs) ToGetCloudProviderSnapshotsResultOutput() GetCloudProviderSnapshotsResultOutput {
	return i.ToGetCloudProviderSnapshotsResultOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotsResultArgs) ToGetCloudProviderSnapshotsResultOutputWithContext(ctx context.Context) GetCloudProviderSnapshotsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotsResultOutput)
}

// GetCloudProviderSnapshotsResultArrayInput is an input type that accepts GetCloudProviderSnapshotsResultArray and GetCloudProviderSnapshotsResultArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotsResultArrayInput` via:
//
//	GetCloudProviderSnapshotsResultArray{ GetCloudProviderSnapshotsResultArgs{...} }
type GetCloudProviderSnapshotsResultArrayInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotsResultArrayOutput() GetCloudProviderSnapshotsResultArrayOutput
	ToGetCloudProviderSnapshotsResultArrayOutputWithContext(context.Context) GetCloudProviderSnapshotsResultArrayOutput
}

type GetCloudProviderSnapshotsResultArray []GetCloudProviderSnapshotsResultInput

func (GetCloudProviderSnapshotsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotsResult)(nil)).Elem()
}

func (i GetCloudProviderSnapshotsResultArray) ToGetCloudProviderSnapshotsResultArrayOutput() GetCloudProviderSnapshotsResultArrayOutput {
	return i.ToGetCloudProviderSnapshotsResultArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotsResultArray) ToGetCloudProviderSnapshotsResultArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotsResultArrayOutput)
}

type GetCloudProviderSnapshotsResultOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotsResult)(nil)).Elem()
}

func (o GetCloudProviderSnapshotsResultOutput) ToGetCloudProviderSnapshotsResultOutput() GetCloudProviderSnapshotsResultOutput {
	return o
}

func (o GetCloudProviderSnapshotsResultOutput) ToGetCloudProviderSnapshotsResultOutputWithContext(ctx context.Context) GetCloudProviderSnapshotsResultOutput {
	return o
}

// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
func (o GetCloudProviderSnapshotsResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// UDescription of the snapshot. Only present for on-demand snapshots.
func (o GetCloudProviderSnapshotsResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.Description }).(pulumi.StringOutput)
}

// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
func (o GetCloudProviderSnapshotsResultOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// Unique identifier of the snapshot.
func (o GetCloudProviderSnapshotsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
func (o GetCloudProviderSnapshotsResultOutput) MasterKeyUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.MasterKeyUuid }).(pulumi.StringOutput)
}

// Version of the MongoDB server.
func (o GetCloudProviderSnapshotsResultOutput) MongodVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.MongodVersion }).(pulumi.StringOutput)
}

// Specified the type of snapshot. Valid values are onDemand and scheduled.
func (o GetCloudProviderSnapshotsResultOutput) SnapshotType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.SnapshotType }).(pulumi.StringOutput)
}

// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
func (o GetCloudProviderSnapshotsResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.Status }).(pulumi.StringOutput)
}

// Specifies the size of the snapshot in bytes.
func (o GetCloudProviderSnapshotsResultOutput) StorageSizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) int { return v.StorageSizeBytes }).(pulumi.IntOutput)
}

// Specifies the type of cluster: replicaSet or shardedCluster.
func (o GetCloudProviderSnapshotsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.Type }).(pulumi.StringOutput)
}

type GetCloudProviderSnapshotsResultArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotsResult)(nil)).Elem()
}

func (o GetCloudProviderSnapshotsResultArrayOutput) ToGetCloudProviderSnapshotsResultArrayOutput() GetCloudProviderSnapshotsResultArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotsResultArrayOutput) ToGetCloudProviderSnapshotsResultArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotsResultArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotsResultArrayOutput) Index(i pulumi.IntInput) GetCloudProviderSnapshotsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderSnapshotsResult {
		return vs[0].([]GetCloudProviderSnapshotsResult)[vs[1].(int)]
	}).(GetCloudProviderSnapshotsResultOutput)
}

type GetClusterAdvancedConfiguration struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern string `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern string `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong bool `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled bool `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol string `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan bool `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours int `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb int `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector int `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector int `pulumi:"sampleSizeBiConnector"`
}

// GetClusterAdvancedConfigurationInput is an input type that accepts GetClusterAdvancedConfigurationArgs and GetClusterAdvancedConfigurationOutput values.
// You can construct a concrete instance of `GetClusterAdvancedConfigurationInput` via:
//
//	GetClusterAdvancedConfigurationArgs{...}
type GetClusterAdvancedConfigurationInput interface {
	pulumi.Input

	ToGetClusterAdvancedConfigurationOutput() GetClusterAdvancedConfigurationOutput
	ToGetClusterAdvancedConfigurationOutputWithContext(context.Context) GetClusterAdvancedConfigurationOutput
}

type GetClusterAdvancedConfigurationArgs struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern pulumi.StringInput `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern pulumi.StringInput `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong pulumi.BoolInput `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled pulumi.BoolInput `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol pulumi.StringInput `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan pulumi.BoolInput `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours pulumi.IntInput `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb pulumi.IntInput `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector pulumi.IntInput `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector pulumi.IntInput `pulumi:"sampleSizeBiConnector"`
}

func (GetClusterAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAdvancedConfiguration)(nil)).Elem()
}

func (i GetClusterAdvancedConfigurationArgs) ToGetClusterAdvancedConfigurationOutput() GetClusterAdvancedConfigurationOutput {
	return i.ToGetClusterAdvancedConfigurationOutputWithContext(context.Background())
}

func (i GetClusterAdvancedConfigurationArgs) ToGetClusterAdvancedConfigurationOutputWithContext(ctx context.Context) GetClusterAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAdvancedConfigurationOutput)
}

// GetClusterAdvancedConfigurationArrayInput is an input type that accepts GetClusterAdvancedConfigurationArray and GetClusterAdvancedConfigurationArrayOutput values.
// You can construct a concrete instance of `GetClusterAdvancedConfigurationArrayInput` via:
//
//	GetClusterAdvancedConfigurationArray{ GetClusterAdvancedConfigurationArgs{...} }
type GetClusterAdvancedConfigurationArrayInput interface {
	pulumi.Input

	ToGetClusterAdvancedConfigurationArrayOutput() GetClusterAdvancedConfigurationArrayOutput
	ToGetClusterAdvancedConfigurationArrayOutputWithContext(context.Context) GetClusterAdvancedConfigurationArrayOutput
}

type GetClusterAdvancedConfigurationArray []GetClusterAdvancedConfigurationInput

func (GetClusterAdvancedConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAdvancedConfiguration)(nil)).Elem()
}

func (i GetClusterAdvancedConfigurationArray) ToGetClusterAdvancedConfigurationArrayOutput() GetClusterAdvancedConfigurationArrayOutput {
	return i.ToGetClusterAdvancedConfigurationArrayOutputWithContext(context.Background())
}

func (i GetClusterAdvancedConfigurationArray) ToGetClusterAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetClusterAdvancedConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAdvancedConfigurationArrayOutput)
}

type GetClusterAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (GetClusterAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAdvancedConfiguration)(nil)).Elem()
}

func (o GetClusterAdvancedConfigurationOutput) ToGetClusterAdvancedConfigurationOutput() GetClusterAdvancedConfigurationOutput {
	return o
}

func (o GetClusterAdvancedConfigurationOutput) ToGetClusterAdvancedConfigurationOutputWithContext(ctx context.Context) GetClusterAdvancedConfigurationOutput {
	return o
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o GetClusterAdvancedConfigurationOutput) DefaultReadConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) string { return v.DefaultReadConcern }).(pulumi.StringOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o GetClusterAdvancedConfigurationOutput) DefaultWriteConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) string { return v.DefaultWriteConcern }).(pulumi.StringOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o GetClusterAdvancedConfigurationOutput) FailIndexKeyTooLong() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) bool { return v.FailIndexKeyTooLong }).(pulumi.BoolOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o GetClusterAdvancedConfigurationOutput) JavascriptEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) bool { return v.JavascriptEnabled }).(pulumi.BoolOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o GetClusterAdvancedConfigurationOutput) MinimumEnabledTlsProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) string { return v.MinimumEnabledTlsProtocol }).(pulumi.StringOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o GetClusterAdvancedConfigurationOutput) NoTableScan() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) bool { return v.NoTableScan }).(pulumi.BoolOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
func (o GetClusterAdvancedConfigurationOutput) OplogMinRetentionHours() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) int { return v.OplogMinRetentionHours }).(pulumi.IntOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o GetClusterAdvancedConfigurationOutput) OplogSizeMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) int { return v.OplogSizeMb }).(pulumi.IntOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetClusterAdvancedConfigurationOutput) SampleRefreshIntervalBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) int { return v.SampleRefreshIntervalBiConnector }).(pulumi.IntOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetClusterAdvancedConfigurationOutput) SampleSizeBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) int { return v.SampleSizeBiConnector }).(pulumi.IntOutput)
}

type GetClusterAdvancedConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAdvancedConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAdvancedConfiguration)(nil)).Elem()
}

func (o GetClusterAdvancedConfigurationArrayOutput) ToGetClusterAdvancedConfigurationArrayOutput() GetClusterAdvancedConfigurationArrayOutput {
	return o
}

func (o GetClusterAdvancedConfigurationArrayOutput) ToGetClusterAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetClusterAdvancedConfigurationArrayOutput {
	return o
}

func (o GetClusterAdvancedConfigurationArrayOutput) Index(i pulumi.IntInput) GetClusterAdvancedConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAdvancedConfiguration {
		return vs[0].([]GetClusterAdvancedConfiguration)[vs[1].(int)]
	}).(GetClusterAdvancedConfigurationOutput)
}

type GetClusterBiConnectorConfig struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled bool `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference string `pulumi:"readPreference"`
}

// GetClusterBiConnectorConfigInput is an input type that accepts GetClusterBiConnectorConfigArgs and GetClusterBiConnectorConfigOutput values.
// You can construct a concrete instance of `GetClusterBiConnectorConfigInput` via:
//
//	GetClusterBiConnectorConfigArgs{...}
type GetClusterBiConnectorConfigInput interface {
	pulumi.Input

	ToGetClusterBiConnectorConfigOutput() GetClusterBiConnectorConfigOutput
	ToGetClusterBiConnectorConfigOutputWithContext(context.Context) GetClusterBiConnectorConfigOutput
}

type GetClusterBiConnectorConfigArgs struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringInput `pulumi:"readPreference"`
}

func (GetClusterBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBiConnectorConfig)(nil)).Elem()
}

func (i GetClusterBiConnectorConfigArgs) ToGetClusterBiConnectorConfigOutput() GetClusterBiConnectorConfigOutput {
	return i.ToGetClusterBiConnectorConfigOutputWithContext(context.Background())
}

func (i GetClusterBiConnectorConfigArgs) ToGetClusterBiConnectorConfigOutputWithContext(ctx context.Context) GetClusterBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBiConnectorConfigOutput)
}

// GetClusterBiConnectorConfigArrayInput is an input type that accepts GetClusterBiConnectorConfigArray and GetClusterBiConnectorConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterBiConnectorConfigArrayInput` via:
//
//	GetClusterBiConnectorConfigArray{ GetClusterBiConnectorConfigArgs{...} }
type GetClusterBiConnectorConfigArrayInput interface {
	pulumi.Input

	ToGetClusterBiConnectorConfigArrayOutput() GetClusterBiConnectorConfigArrayOutput
	ToGetClusterBiConnectorConfigArrayOutputWithContext(context.Context) GetClusterBiConnectorConfigArrayOutput
}

type GetClusterBiConnectorConfigArray []GetClusterBiConnectorConfigInput

func (GetClusterBiConnectorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBiConnectorConfig)(nil)).Elem()
}

func (i GetClusterBiConnectorConfigArray) ToGetClusterBiConnectorConfigArrayOutput() GetClusterBiConnectorConfigArrayOutput {
	return i.ToGetClusterBiConnectorConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterBiConnectorConfigArray) ToGetClusterBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetClusterBiConnectorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBiConnectorConfigArrayOutput)
}

type GetClusterBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (GetClusterBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBiConnectorConfig)(nil)).Elem()
}

func (o GetClusterBiConnectorConfigOutput) ToGetClusterBiConnectorConfigOutput() GetClusterBiConnectorConfigOutput {
	return o
}

func (o GetClusterBiConnectorConfigOutput) ToGetClusterBiConnectorConfigOutputWithContext(ctx context.Context) GetClusterBiConnectorConfigOutput {
	return o
}

// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
func (o GetClusterBiConnectorConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterBiConnectorConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o GetClusterBiConnectorConfigOutput) ReadPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterBiConnectorConfig) string { return v.ReadPreference }).(pulumi.StringOutput)
}

type GetClusterBiConnectorConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterBiConnectorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBiConnectorConfig)(nil)).Elem()
}

func (o GetClusterBiConnectorConfigArrayOutput) ToGetClusterBiConnectorConfigArrayOutput() GetClusterBiConnectorConfigArrayOutput {
	return o
}

func (o GetClusterBiConnectorConfigArrayOutput) ToGetClusterBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetClusterBiConnectorConfigArrayOutput {
	return o
}

func (o GetClusterBiConnectorConfigArrayOutput) Index(i pulumi.IntInput) GetClusterBiConnectorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterBiConnectorConfig {
		return vs[0].([]GetClusterBiConnectorConfig)[vs[1].(int)]
	}).(GetClusterBiConnectorConfigOutput)
}

type GetClusterConnectionString struct {
	AwsPrivateLink    map[string]interface{}                      `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv map[string]interface{}                      `pulumi:"awsPrivateLinkSrv"`
	Private           string                                      `pulumi:"private"`
	PrivateEndpoints  []GetClusterConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        string                                      `pulumi:"privateSrv"`
	Standard          string                                      `pulumi:"standard"`
	StandardSrv       string                                      `pulumi:"standardSrv"`
}

// GetClusterConnectionStringInput is an input type that accepts GetClusterConnectionStringArgs and GetClusterConnectionStringOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringInput` via:
//
//	GetClusterConnectionStringArgs{...}
type GetClusterConnectionStringInput interface {
	pulumi.Input

	ToGetClusterConnectionStringOutput() GetClusterConnectionStringOutput
	ToGetClusterConnectionStringOutputWithContext(context.Context) GetClusterConnectionStringOutput
}

type GetClusterConnectionStringArgs struct {
	AwsPrivateLink    pulumi.MapInput                                     `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv pulumi.MapInput                                     `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringInput                                  `pulumi:"private"`
	PrivateEndpoints  GetClusterConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringInput                                  `pulumi:"privateSrv"`
	Standard          pulumi.StringInput                                  `pulumi:"standard"`
	StandardSrv       pulumi.StringInput                                  `pulumi:"standardSrv"`
}

func (GetClusterConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionString)(nil)).Elem()
}

func (i GetClusterConnectionStringArgs) ToGetClusterConnectionStringOutput() GetClusterConnectionStringOutput {
	return i.ToGetClusterConnectionStringOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringArgs) ToGetClusterConnectionStringOutputWithContext(ctx context.Context) GetClusterConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringOutput)
}

// GetClusterConnectionStringArrayInput is an input type that accepts GetClusterConnectionStringArray and GetClusterConnectionStringArrayOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringArrayInput` via:
//
//	GetClusterConnectionStringArray{ GetClusterConnectionStringArgs{...} }
type GetClusterConnectionStringArrayInput interface {
	pulumi.Input

	ToGetClusterConnectionStringArrayOutput() GetClusterConnectionStringArrayOutput
	ToGetClusterConnectionStringArrayOutputWithContext(context.Context) GetClusterConnectionStringArrayOutput
}

type GetClusterConnectionStringArray []GetClusterConnectionStringInput

func (GetClusterConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionString)(nil)).Elem()
}

func (i GetClusterConnectionStringArray) ToGetClusterConnectionStringArrayOutput() GetClusterConnectionStringArrayOutput {
	return i.ToGetClusterConnectionStringArrayOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringArray) ToGetClusterConnectionStringArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringArrayOutput)
}

type GetClusterConnectionStringOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionString)(nil)).Elem()
}

func (o GetClusterConnectionStringOutput) ToGetClusterConnectionStringOutput() GetClusterConnectionStringOutput {
	return o
}

func (o GetClusterConnectionStringOutput) ToGetClusterConnectionStringOutputWithContext(ctx context.Context) GetClusterConnectionStringOutput {
	return o
}

func (o GetClusterConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v GetClusterConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

func (o GetClusterConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v GetClusterConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o GetClusterConnectionStringOutput) Private() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionString) string { return v.Private }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringOutput) PrivateEndpoints() GetClusterConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v GetClusterConnectionString) []GetClusterConnectionStringPrivateEndpoint {
		return v.PrivateEndpoints
	}).(GetClusterConnectionStringPrivateEndpointArrayOutput)
}

func (o GetClusterConnectionStringOutput) PrivateSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionString) string { return v.PrivateSrv }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringOutput) Standard() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionString) string { return v.Standard }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringOutput) StandardSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionString) string { return v.StandardSrv }).(pulumi.StringOutput)
}

type GetClusterConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionString)(nil)).Elem()
}

func (o GetClusterConnectionStringArrayOutput) ToGetClusterConnectionStringArrayOutput() GetClusterConnectionStringArrayOutput {
	return o
}

func (o GetClusterConnectionStringArrayOutput) ToGetClusterConnectionStringArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringArrayOutput {
	return o
}

func (o GetClusterConnectionStringArrayOutput) Index(i pulumi.IntInput) GetClusterConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterConnectionString {
		return vs[0].([]GetClusterConnectionString)[vs[1].(int)]
	}).(GetClusterConnectionStringOutput)
}

type GetClusterConnectionStringPrivateEndpoint struct {
	ConnectionString    string                                              `pulumi:"connectionString"`
	Endpoints           []GetClusterConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString string                                              `pulumi:"srvConnectionString"`
	Type                string                                              `pulumi:"type"`
}

// GetClusterConnectionStringPrivateEndpointInput is an input type that accepts GetClusterConnectionStringPrivateEndpointArgs and GetClusterConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringPrivateEndpointInput` via:
//
//	GetClusterConnectionStringPrivateEndpointArgs{...}
type GetClusterConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToGetClusterConnectionStringPrivateEndpointOutput() GetClusterConnectionStringPrivateEndpointOutput
	ToGetClusterConnectionStringPrivateEndpointOutputWithContext(context.Context) GetClusterConnectionStringPrivateEndpointOutput
}

type GetClusterConnectionStringPrivateEndpointArgs struct {
	ConnectionString    pulumi.StringInput                                          `pulumi:"connectionString"`
	Endpoints           GetClusterConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString pulumi.StringInput                                          `pulumi:"srvConnectionString"`
	Type                pulumi.StringInput                                          `pulumi:"type"`
}

func (GetClusterConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetClusterConnectionStringPrivateEndpointArgs) ToGetClusterConnectionStringPrivateEndpointOutput() GetClusterConnectionStringPrivateEndpointOutput {
	return i.ToGetClusterConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringPrivateEndpointArgs) ToGetClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringPrivateEndpointOutput)
}

// GetClusterConnectionStringPrivateEndpointArrayInput is an input type that accepts GetClusterConnectionStringPrivateEndpointArray and GetClusterConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringPrivateEndpointArrayInput` via:
//
//	GetClusterConnectionStringPrivateEndpointArray{ GetClusterConnectionStringPrivateEndpointArgs{...} }
type GetClusterConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToGetClusterConnectionStringPrivateEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointArrayOutput
	ToGetClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) GetClusterConnectionStringPrivateEndpointArrayOutput
}

type GetClusterConnectionStringPrivateEndpointArray []GetClusterConnectionStringPrivateEndpointInput

func (GetClusterConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetClusterConnectionStringPrivateEndpointArray) ToGetClusterConnectionStringPrivateEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointArrayOutput {
	return i.ToGetClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringPrivateEndpointArray) ToGetClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringPrivateEndpointArrayOutput)
}

type GetClusterConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetClusterConnectionStringPrivateEndpointOutput) ToGetClusterConnectionStringPrivateEndpointOutput() GetClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointOutput) ToGetClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpoint) string { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringPrivateEndpointOutput) Endpoints() GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpoint) []GetClusterConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(GetClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o GetClusterConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpoint) string { return v.SrvConnectionString }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringPrivateEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

type GetClusterConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetClusterConnectionStringPrivateEndpointArrayOutput) ToGetClusterConnectionStringPrivateEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointArrayOutput) ToGetClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) GetClusterConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterConnectionStringPrivateEndpoint {
		return vs[0].([]GetClusterConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(GetClusterConnectionStringPrivateEndpointOutput)
}

type GetClusterConnectionStringPrivateEndpointEndpoint struct {
	EndpointId string `pulumi:"endpointId"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	Region       string `pulumi:"region"`
}

// GetClusterConnectionStringPrivateEndpointEndpointInput is an input type that accepts GetClusterConnectionStringPrivateEndpointEndpointArgs and GetClusterConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringPrivateEndpointEndpointInput` via:
//
//	GetClusterConnectionStringPrivateEndpointEndpointArgs{...}
type GetClusterConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToGetClusterConnectionStringPrivateEndpointEndpointOutput() GetClusterConnectionStringPrivateEndpointEndpointOutput
	ToGetClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) GetClusterConnectionStringPrivateEndpointEndpointOutput
}

type GetClusterConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	Region       pulumi.StringInput `pulumi:"region"`
}

func (GetClusterConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetClusterConnectionStringPrivateEndpointEndpointArgs) ToGetClusterConnectionStringPrivateEndpointEndpointOutput() GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return i.ToGetClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringPrivateEndpointEndpointArgs) ToGetClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringPrivateEndpointEndpointOutput)
}

// GetClusterConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts GetClusterConnectionStringPrivateEndpointEndpointArray and GetClusterConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//	GetClusterConnectionStringPrivateEndpointEndpointArray{ GetClusterConnectionStringPrivateEndpointEndpointArgs{...} }
type GetClusterConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointEndpointArrayOutput
	ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) GetClusterConnectionStringPrivateEndpointEndpointArrayOutput
}

type GetClusterConnectionStringPrivateEndpointEndpointArray []GetClusterConnectionStringPrivateEndpointEndpointInput

func (GetClusterConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetClusterConnectionStringPrivateEndpointEndpointArray) ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringPrivateEndpointEndpointArray) ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

type GetClusterConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) ToGetClusterConnectionStringPrivateEndpointEndpointOutput() GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) ToGetClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpointEndpoint) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Indicates the cloud service provider on which the servers are provisioned.
func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpointEndpoint) string { return v.ProviderName }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpointEndpoint) string { return v.Region }).(pulumi.StringOutput)
}

type GetClusterConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]GetClusterConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(GetClusterConnectionStringPrivateEndpointEndpointOutput)
}

type GetClusterLabel struct {
	// The key that was set.
	Key string `pulumi:"key"`
	// The value that represents the key.
	Value string `pulumi:"value"`
}

// GetClusterLabelInput is an input type that accepts GetClusterLabelArgs and GetClusterLabelOutput values.
// You can construct a concrete instance of `GetClusterLabelInput` via:
//
//	GetClusterLabelArgs{...}
type GetClusterLabelInput interface {
	pulumi.Input

	ToGetClusterLabelOutput() GetClusterLabelOutput
	ToGetClusterLabelOutputWithContext(context.Context) GetClusterLabelOutput
}

type GetClusterLabelArgs struct {
	// The key that was set.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that represents the key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClusterLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLabel)(nil)).Elem()
}

func (i GetClusterLabelArgs) ToGetClusterLabelOutput() GetClusterLabelOutput {
	return i.ToGetClusterLabelOutputWithContext(context.Background())
}

func (i GetClusterLabelArgs) ToGetClusterLabelOutputWithContext(ctx context.Context) GetClusterLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLabelOutput)
}

// GetClusterLabelArrayInput is an input type that accepts GetClusterLabelArray and GetClusterLabelArrayOutput values.
// You can construct a concrete instance of `GetClusterLabelArrayInput` via:
//
//	GetClusterLabelArray{ GetClusterLabelArgs{...} }
type GetClusterLabelArrayInput interface {
	pulumi.Input

	ToGetClusterLabelArrayOutput() GetClusterLabelArrayOutput
	ToGetClusterLabelArrayOutputWithContext(context.Context) GetClusterLabelArrayOutput
}

type GetClusterLabelArray []GetClusterLabelInput

func (GetClusterLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterLabel)(nil)).Elem()
}

func (i GetClusterLabelArray) ToGetClusterLabelArrayOutput() GetClusterLabelArrayOutput {
	return i.ToGetClusterLabelArrayOutputWithContext(context.Background())
}

func (i GetClusterLabelArray) ToGetClusterLabelArrayOutputWithContext(ctx context.Context) GetClusterLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLabelArrayOutput)
}

type GetClusterLabelOutput struct{ *pulumi.OutputState }

func (GetClusterLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLabel)(nil)).Elem()
}

func (o GetClusterLabelOutput) ToGetClusterLabelOutput() GetClusterLabelOutput {
	return o
}

func (o GetClusterLabelOutput) ToGetClusterLabelOutputWithContext(ctx context.Context) GetClusterLabelOutput {
	return o
}

// The key that was set.
func (o GetClusterLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that represents the key.
func (o GetClusterLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetClusterLabelArrayOutput struct{ *pulumi.OutputState }

func (GetClusterLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterLabel)(nil)).Elem()
}

func (o GetClusterLabelArrayOutput) ToGetClusterLabelArrayOutput() GetClusterLabelArrayOutput {
	return o
}

func (o GetClusterLabelArrayOutput) ToGetClusterLabelArrayOutputWithContext(ctx context.Context) GetClusterLabelArrayOutput {
	return o
}

func (o GetClusterLabelArrayOutput) Index(i pulumi.IntInput) GetClusterLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterLabel {
		return vs[0].([]GetClusterLabel)[vs[1].(int)]
	}).(GetClusterLabelOutput)
}

type GetClusterReplicationSpec struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id string `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards int `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs []GetClusterReplicationSpecRegionsConfig `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName string `pulumi:"zoneName"`
}

// GetClusterReplicationSpecInput is an input type that accepts GetClusterReplicationSpecArgs and GetClusterReplicationSpecOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecInput` via:
//
//	GetClusterReplicationSpecArgs{...}
type GetClusterReplicationSpecInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecOutput() GetClusterReplicationSpecOutput
	ToGetClusterReplicationSpecOutputWithContext(context.Context) GetClusterReplicationSpecOutput
}

type GetClusterReplicationSpecArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs GetClusterReplicationSpecRegionsConfigArrayInput `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetClusterReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpec)(nil)).Elem()
}

func (i GetClusterReplicationSpecArgs) ToGetClusterReplicationSpecOutput() GetClusterReplicationSpecOutput {
	return i.ToGetClusterReplicationSpecOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecArgs) ToGetClusterReplicationSpecOutputWithContext(ctx context.Context) GetClusterReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecOutput)
}

// GetClusterReplicationSpecArrayInput is an input type that accepts GetClusterReplicationSpecArray and GetClusterReplicationSpecArrayOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecArrayInput` via:
//
//	GetClusterReplicationSpecArray{ GetClusterReplicationSpecArgs{...} }
type GetClusterReplicationSpecArrayInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecArrayOutput() GetClusterReplicationSpecArrayOutput
	ToGetClusterReplicationSpecArrayOutputWithContext(context.Context) GetClusterReplicationSpecArrayOutput
}

type GetClusterReplicationSpecArray []GetClusterReplicationSpecInput

func (GetClusterReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpec)(nil)).Elem()
}

func (i GetClusterReplicationSpecArray) ToGetClusterReplicationSpecArrayOutput() GetClusterReplicationSpecArrayOutput {
	return i.ToGetClusterReplicationSpecArrayOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecArray) ToGetClusterReplicationSpecArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecArrayOutput)
}

type GetClusterReplicationSpecOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpec)(nil)).Elem()
}

func (o GetClusterReplicationSpecOutput) ToGetClusterReplicationSpecOutput() GetClusterReplicationSpecOutput {
	return o
}

func (o GetClusterReplicationSpecOutput) ToGetClusterReplicationSpecOutputWithContext(ctx context.Context) GetClusterReplicationSpecOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClusterReplicationSpecOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) string { return v.Id }).(pulumi.StringOutput)
}

// Number of shards to deploy in the specified zone.
func (o GetClusterReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
func (o GetClusterReplicationSpecOutput) RegionsConfigs() GetClusterReplicationSpecRegionsConfigArrayOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) []GetClusterReplicationSpecRegionsConfig { return v.RegionsConfigs }).(GetClusterReplicationSpecRegionsConfigArrayOutput)
}

// Indicates the n ame for the zone in a Global Cluster.
func (o GetClusterReplicationSpecOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetClusterReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpec)(nil)).Elem()
}

func (o GetClusterReplicationSpecArrayOutput) ToGetClusterReplicationSpecArrayOutput() GetClusterReplicationSpecArrayOutput {
	return o
}

func (o GetClusterReplicationSpecArrayOutput) ToGetClusterReplicationSpecArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecArrayOutput {
	return o
}

func (o GetClusterReplicationSpecArrayOutput) Index(i pulumi.IntInput) GetClusterReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterReplicationSpec {
		return vs[0].([]GetClusterReplicationSpec)[vs[1].(int)]
	}).(GetClusterReplicationSpecOutput)
}

type GetClusterReplicationSpecRegionsConfig struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes int `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes int `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority int `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes int `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName string `pulumi:"regionName"`
}

// GetClusterReplicationSpecRegionsConfigInput is an input type that accepts GetClusterReplicationSpecRegionsConfigArgs and GetClusterReplicationSpecRegionsConfigOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecRegionsConfigInput` via:
//
//	GetClusterReplicationSpecRegionsConfigArgs{...}
type GetClusterReplicationSpecRegionsConfigInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecRegionsConfigOutput() GetClusterReplicationSpecRegionsConfigOutput
	ToGetClusterReplicationSpecRegionsConfigOutputWithContext(context.Context) GetClusterReplicationSpecRegionsConfigOutput
}

type GetClusterReplicationSpecRegionsConfigArgs struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes pulumi.IntInput `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes pulumi.IntInput `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes pulumi.IntInput `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetClusterReplicationSpecRegionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClusterReplicationSpecRegionsConfigArgs) ToGetClusterReplicationSpecRegionsConfigOutput() GetClusterReplicationSpecRegionsConfigOutput {
	return i.ToGetClusterReplicationSpecRegionsConfigOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecRegionsConfigArgs) ToGetClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecRegionsConfigOutput)
}

// GetClusterReplicationSpecRegionsConfigArrayInput is an input type that accepts GetClusterReplicationSpecRegionsConfigArray and GetClusterReplicationSpecRegionsConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecRegionsConfigArrayInput` via:
//
//	GetClusterReplicationSpecRegionsConfigArray{ GetClusterReplicationSpecRegionsConfigArgs{...} }
type GetClusterReplicationSpecRegionsConfigArrayInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecRegionsConfigArrayOutput() GetClusterReplicationSpecRegionsConfigArrayOutput
	ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Context) GetClusterReplicationSpecRegionsConfigArrayOutput
}

type GetClusterReplicationSpecRegionsConfigArray []GetClusterReplicationSpecRegionsConfigInput

func (GetClusterReplicationSpecRegionsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClusterReplicationSpecRegionsConfigArray) ToGetClusterReplicationSpecRegionsConfigArrayOutput() GetClusterReplicationSpecRegionsConfigArrayOutput {
	return i.ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecRegionsConfigArray) ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecRegionsConfigArrayOutput)
}

type GetClusterReplicationSpecRegionsConfigOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecRegionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClusterReplicationSpecRegionsConfigOutput) ToGetClusterReplicationSpecRegionsConfigOutput() GetClusterReplicationSpecRegionsConfigOutput {
	return o
}

func (o GetClusterReplicationSpecRegionsConfigOutput) ToGetClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigOutput {
	return o
}

// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
func (o GetClusterReplicationSpecRegionsConfigOutput) AnalyticsNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.AnalyticsNodes }).(pulumi.IntOutput)
}

// Number of electable nodes for Atlas to deploy to the region.
func (o GetClusterReplicationSpecRegionsConfigOutput) ElectableNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.ElectableNodes }).(pulumi.IntOutput)
}

// Election priority of the region. For regions with only read-only nodes, set this value to 0.
func (o GetClusterReplicationSpecRegionsConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
func (o GetClusterReplicationSpecRegionsConfigOutput) ReadOnlyNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.ReadOnlyNodes }).(pulumi.IntOutput)
}

// Name for the region specified.
func (o GetClusterReplicationSpecRegionsConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetClusterReplicationSpecRegionsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecRegionsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClusterReplicationSpecRegionsConfigArrayOutput) ToGetClusterReplicationSpecRegionsConfigArrayOutput() GetClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClusterReplicationSpecRegionsConfigArrayOutput) ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClusterReplicationSpecRegionsConfigArrayOutput) Index(i pulumi.IntInput) GetClusterReplicationSpecRegionsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterReplicationSpecRegionsConfig {
		return vs[0].([]GetClusterReplicationSpecRegionsConfig)[vs[1].(int)]
	}).(GetClusterReplicationSpecRegionsConfigOutput)
}

type GetClusterSnapshotBackupPolicy struct {
	ClusterId             string                                 `pulumi:"clusterId"`
	ClusterName           string                                 `pulumi:"clusterName"`
	NextSnapshot          string                                 `pulumi:"nextSnapshot"`
	Policies              []GetClusterSnapshotBackupPolicyPolicy `pulumi:"policies"`
	ReferenceHourOfDay    int                                    `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour int                                    `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     int                                    `pulumi:"restoreWindowDays"`
	UpdateSnapshots       bool                                   `pulumi:"updateSnapshots"`
}

// GetClusterSnapshotBackupPolicyInput is an input type that accepts GetClusterSnapshotBackupPolicyArgs and GetClusterSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyInput` via:
//
//	GetClusterSnapshotBackupPolicyArgs{...}
type GetClusterSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyOutput() GetClusterSnapshotBackupPolicyOutput
	ToGetClusterSnapshotBackupPolicyOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyOutput
}

type GetClusterSnapshotBackupPolicyArgs struct {
	ClusterId             pulumi.StringInput                             `pulumi:"clusterId"`
	ClusterName           pulumi.StringInput                             `pulumi:"clusterName"`
	NextSnapshot          pulumi.StringInput                             `pulumi:"nextSnapshot"`
	Policies              GetClusterSnapshotBackupPolicyPolicyArrayInput `pulumi:"policies"`
	ReferenceHourOfDay    pulumi.IntInput                                `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour pulumi.IntInput                                `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     pulumi.IntInput                                `pulumi:"restoreWindowDays"`
	UpdateSnapshots       pulumi.BoolInput                               `pulumi:"updateSnapshots"`
}

func (GetClusterSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyArgs) ToGetClusterSnapshotBackupPolicyOutput() GetClusterSnapshotBackupPolicyOutput {
	return i.ToGetClusterSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyArgs) ToGetClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyOutput)
}

// GetClusterSnapshotBackupPolicyArrayInput is an input type that accepts GetClusterSnapshotBackupPolicyArray and GetClusterSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyArrayInput` via:
//
//	GetClusterSnapshotBackupPolicyArray{ GetClusterSnapshotBackupPolicyArgs{...} }
type GetClusterSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyArrayOutput() GetClusterSnapshotBackupPolicyArrayOutput
	ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyArrayOutput
}

type GetClusterSnapshotBackupPolicyArray []GetClusterSnapshotBackupPolicyInput

func (GetClusterSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyArray) ToGetClusterSnapshotBackupPolicyArrayOutput() GetClusterSnapshotBackupPolicyArrayOutput {
	return i.ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyArray) ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyArrayOutput)
}

type GetClusterSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyOutput) ToGetClusterSnapshotBackupPolicyOutput() GetClusterSnapshotBackupPolicyOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyOutput) ToGetClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) NextSnapshot() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) string { return v.NextSnapshot }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) Policies() GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) []GetClusterSnapshotBackupPolicyPolicy { return v.Policies }).(GetClusterSnapshotBackupPolicyPolicyArrayOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) ReferenceHourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) int { return v.ReferenceHourOfDay }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) ReferenceMinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) int { return v.ReferenceMinuteOfHour }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) RestoreWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) int { return v.RestoreWindowDays }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) UpdateSnapshots() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) bool { return v.UpdateSnapshots }).(pulumi.BoolOutput)
}

type GetClusterSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyArrayOutput() GetClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterSnapshotBackupPolicy {
		return vs[0].([]GetClusterSnapshotBackupPolicy)[vs[1].(int)]
	}).(GetClusterSnapshotBackupPolicyOutput)
}

type GetClusterSnapshotBackupPolicyPolicy struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          string                                           `pulumi:"id"`
	PolicyItems []GetClusterSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// GetClusterSnapshotBackupPolicyPolicyInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyArgs and GetClusterSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyInput` via:
//
//	GetClusterSnapshotBackupPolicyPolicyArgs{...}
type GetClusterSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyOutput() GetClusterSnapshotBackupPolicyPolicyOutput
	ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyOutput
}

type GetClusterSnapshotBackupPolicyPolicyArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          pulumi.StringInput                                       `pulumi:"id"`
	PolicyItems GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (GetClusterSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyArgs) ToGetClusterSnapshotBackupPolicyPolicyOutput() GetClusterSnapshotBackupPolicyPolicyOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyArgs) ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyOutput)
}

// GetClusterSnapshotBackupPolicyPolicyArrayInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyArray and GetClusterSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyArrayInput` via:
//
//	GetClusterSnapshotBackupPolicyPolicyArray{ GetClusterSnapshotBackupPolicyPolicyArgs{...} }
type GetClusterSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyArrayOutput() GetClusterSnapshotBackupPolicyPolicyArrayOutput
	ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyArrayOutput
}

type GetClusterSnapshotBackupPolicyPolicyArray []GetClusterSnapshotBackupPolicyPolicyInput

func (GetClusterSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyArray) ToGetClusterSnapshotBackupPolicyPolicyArrayOutput() GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyArray) ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyArrayOutput)
}

type GetClusterSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyOutput) ToGetClusterSnapshotBackupPolicyPolicyOutput() GetClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyOutput) ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClusterSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyOutput) PolicyItems() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicy) []GetClusterSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetClusterSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyArrayOutput() GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterSnapshotBackupPolicyPolicy {
		return vs[0].([]GetClusterSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(GetClusterSnapshotBackupPolicyPolicyOutput)
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             string `pulumi:"id"`
	RetentionUnit  string `pulumi:"retentionUnit"`
	RetentionValue int    `pulumi:"retentionValue"`
}

// GetClusterSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs and GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//	GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type GetClusterSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput
	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             pulumi.StringInput `pulumi:"id"`
	RetentionUnit  pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue pulumi.IntInput    `pulumi:"retentionValue"`
}

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyPolicyItemArray and GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//	GetClusterSnapshotBackupPolicyPolicyPolicyItemArray{ GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemArray []GetClusterSnapshotBackupPolicyPolicyPolicyItemInput

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]GetClusterSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type GetClustersResult struct {
	// Get the advanced configuration options. See Advanced Configuration below for more details.
	AdvancedConfigurations []GetClustersResultAdvancedConfiguration `pulumi:"advancedConfigurations"`
	// Specifies whether cluster tier auto-scaling is enabled. The default is false.
	AutoScalingComputeEnabled bool `pulumi:"autoScalingComputeEnabled"`
	// * `autoScalingComputeScaleDownEnabled` - Specifies whether cluster tier auto-down-scaling is enabled.
	AutoScalingComputeScaleDownEnabled bool `pulumi:"autoScalingComputeScaleDownEnabled"`
	// Indicates whether disk auto-scaling is enabled.
	AutoScalingDiskGbEnabled bool `pulumi:"autoScalingDiskGbEnabled"`
	// Indicates Cloud service provider on which the server for a multi-tenant cluster is provisioned.
	BackingProviderName string `pulumi:"backingProviderName"`
	// Legacy Option, Indicates whether Atlas continuous backups are enabled for the cluster.
	BackupEnabled bool `pulumi:"backupEnabled"`
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details. **DEPRECATED** Use `biConnectorConfig` instead.
	//
	// Deprecated: use bi_connector_config instead
	BiConnector map[string]string `pulumi:"biConnector"`
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
	BiConnectorConfigs []GetClustersResultBiConnectorConfig `pulumi:"biConnectorConfigs"`
	// Indicates the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
	ClusterType string `pulumi:"clusterType"`
	// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
	// - `connection_strings.standard` -   Public mongodb:// connection string for this cluster.
	// - `connection_strings.standard_srv` - Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.standard.
	// - `connection_strings.aws_private_link` -  [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. **DEPRECATED** Use `connection_strings.private_endpoint[n].connection_string` instead.
	// - `connection_strings.aws_private_link_srv` - [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.awsPrivateLink. **DEPRECATED** `connection_strings.private_endpoint[n].srv_connection_string` instead.
	// - `connection_strings.private` -   [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	// - `connection_strings.private_srv` -  [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	// - `connection_strings.private_endpoint.#.connection_string` - Private-endpoint-aware `mongodb://`connection string for this private endpoint.
	// - `connection_strings.private_endpoint.#.srv_connection_string` - Private-endpoint-aware `mongodb+srv://` connection string for this private endpoint.
	// - `connection_strings.private_endpoint.#.type` - Type of MongoDB process that you connect to with the connection strings. Atlas returns `MONGOD` for replica sets, or `MONGOS` for sharded clusters.
	// - `connection_strings.private_endpoint.#.endpoints` - Private endpoint through which you connect to Atlas when you use `connection_strings.private_endpoint[n].connection_string` or `connection_strings.private_endpoint[n].srv_connection_string`
	// - `connection_strings.private_endpoint.#.endpoints.#.endpoint_id` - Unique identifier of the private endpoint.
	// - `connection_strings.private_endpoint.#.endpoints.#.provider_name` - Cloud provider to which you deployed the private endpoint. Atlas returns `AWS` or `AZURE`.
	// - `connection_strings.private_endpoint.#.endpoints.#.region` - Region to which you deployed the private endpoint.
	ConnectionStrings []GetClustersResultConnectionString `pulumi:"connectionStrings"`
	// The Network Peering Container ID.
	ContainerId string `pulumi:"containerId"`
	// Indicates the size in gigabytes of the server’s root volume (AWS/GCP Only).
	DiskSizeGb float64 `pulumi:"diskSizeGb"`
	// Indicates whether Encryption at Rest is enabled or disabled.
	EncryptionAtRestProvider string                   `pulumi:"encryptionAtRestProvider"`
	Labels                   []GetClustersResultLabel `pulumi:"labels"`
	// Indicates the version of the cluster to deploy.
	MongoDbMajorVersion string `pulumi:"mongoDbMajorVersion"`
	// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
	MongoDbVersion string `pulumi:"mongoDbVersion"`
	// Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
	MongoUri string `pulumi:"mongoUri"`
	// Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
	MongoUriUpdated string `pulumi:"mongoUriUpdated"`
	// Describes connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
	MongoUriWithOptions string `pulumi:"mongoUriWithOptions"`
	// The name of the current plugin
	Name string `pulumi:"name"`
	// Number of shards to deploy in the specified zone.
	NumShards int `pulumi:"numShards"`
	// Flag that indicates whether the cluster is paused or not.
	Paused bool `pulumi:"paused"`
	// Flag that indicates if the cluster uses Continuous Cloud Backup.
	PitEnabled bool `pulumi:"pitEnabled"`
	// Maximum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMaxInstanceSize string `pulumi:"providerAutoScalingComputeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMinInstanceSize string `pulumi:"providerAutoScalingComputeMinInstanceSize"`
	// Flag indicating if the cluster uses Cloud Backup Snapshots for backups. **DEPRECATED** Use `cloudBackup` instead.
	ProviderBackupEnabled bool `pulumi:"providerBackupEnabled"`
	// Indicates the maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected providerSettings.instanceSizeName and diskSizeGB.
	ProviderDiskIops int `pulumi:"providerDiskIops"`
	// Describes Azure disk type of the server’s root volume (Azure Only).
	ProviderDiskTypeName string `pulumi:"providerDiskTypeName"`
	// **(DEPRECATED)** Indicates whether the Amazon EBS encryption is enabled. This feature encrypts the server’s root volume for both data at rest within the volume and data moving between the volume and the instance. By default this attribute is always enabled, per deprecation process showing the real value at `providerEncryptEbsVolumeFlag` computed attribute.
	ProviderEncryptEbsVolume bool `pulumi:"providerEncryptEbsVolume"`
	// Atlas provides different instance sizes, each with a default storage capacity and RAM size.
	ProviderInstanceSizeName string `pulumi:"providerInstanceSizeName"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	// Indicates Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. Requires the Atlas Region name, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	ProviderRegionName string `pulumi:"providerRegionName"`
	// Indicates the type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.
	ProviderVolumeType string `pulumi:"providerVolumeType"`
	// (Deprecated) Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
	ReplicationFactor int `pulumi:"replicationFactor"`
	// Configuration for cluster regions.  See Replication Spec below for more details.
	ReplicationSpecs []GetClustersResultReplicationSpec `pulumi:"replicationSpecs"`
	// current snapshot schedule and retention settings for the cluster.
	SnapshotBackupPolicies []GetClustersResultSnapshotBackupPolicy `pulumi:"snapshotBackupPolicies"`
	// Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
	SrvAddress string `pulumi:"srvAddress"`
	// Indicates the current state of the cluster. The possible states are:
	// - IDLE
	// - CREATING
	// - UPDATING
	// - DELETING
	// - DELETED
	// - REPAIRING
	StateName string `pulumi:"stateName"`
	// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled bool `pulumi:"terminationProtectionEnabled"`
	// Release cadence that Atlas uses for this cluster.
	VersionReleaseSystem string `pulumi:"versionReleaseSystem"`
}

// GetClustersResultInput is an input type that accepts GetClustersResultArgs and GetClustersResultOutput values.
// You can construct a concrete instance of `GetClustersResultInput` via:
//
//	GetClustersResultArgs{...}
type GetClustersResultInput interface {
	pulumi.Input

	ToGetClustersResultOutput() GetClustersResultOutput
	ToGetClustersResultOutputWithContext(context.Context) GetClustersResultOutput
}

type GetClustersResultArgs struct {
	// Get the advanced configuration options. See Advanced Configuration below for more details.
	AdvancedConfigurations GetClustersResultAdvancedConfigurationArrayInput `pulumi:"advancedConfigurations"`
	// Specifies whether cluster tier auto-scaling is enabled. The default is false.
	AutoScalingComputeEnabled pulumi.BoolInput `pulumi:"autoScalingComputeEnabled"`
	// * `autoScalingComputeScaleDownEnabled` - Specifies whether cluster tier auto-down-scaling is enabled.
	AutoScalingComputeScaleDownEnabled pulumi.BoolInput `pulumi:"autoScalingComputeScaleDownEnabled"`
	// Indicates whether disk auto-scaling is enabled.
	AutoScalingDiskGbEnabled pulumi.BoolInput `pulumi:"autoScalingDiskGbEnabled"`
	// Indicates Cloud service provider on which the server for a multi-tenant cluster is provisioned.
	BackingProviderName pulumi.StringInput `pulumi:"backingProviderName"`
	// Legacy Option, Indicates whether Atlas continuous backups are enabled for the cluster.
	BackupEnabled pulumi.BoolInput `pulumi:"backupEnabled"`
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details. **DEPRECATED** Use `biConnectorConfig` instead.
	//
	// Deprecated: use bi_connector_config instead
	BiConnector pulumi.StringMapInput `pulumi:"biConnector"`
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
	BiConnectorConfigs GetClustersResultBiConnectorConfigArrayInput `pulumi:"biConnectorConfigs"`
	// Indicates the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
	// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
	// - `connection_strings.standard` -   Public mongodb:// connection string for this cluster.
	// - `connection_strings.standard_srv` - Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.standard.
	// - `connection_strings.aws_private_link` -  [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. **DEPRECATED** Use `connection_strings.private_endpoint[n].connection_string` instead.
	// - `connection_strings.aws_private_link_srv` - [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.awsPrivateLink. **DEPRECATED** `connection_strings.private_endpoint[n].srv_connection_string` instead.
	// - `connection_strings.private` -   [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	// - `connection_strings.private_srv` -  [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	// - `connection_strings.private_endpoint.#.connection_string` - Private-endpoint-aware `mongodb://`connection string for this private endpoint.
	// - `connection_strings.private_endpoint.#.srv_connection_string` - Private-endpoint-aware `mongodb+srv://` connection string for this private endpoint.
	// - `connection_strings.private_endpoint.#.type` - Type of MongoDB process that you connect to with the connection strings. Atlas returns `MONGOD` for replica sets, or `MONGOS` for sharded clusters.
	// - `connection_strings.private_endpoint.#.endpoints` - Private endpoint through which you connect to Atlas when you use `connection_strings.private_endpoint[n].connection_string` or `connection_strings.private_endpoint[n].srv_connection_string`
	// - `connection_strings.private_endpoint.#.endpoints.#.endpoint_id` - Unique identifier of the private endpoint.
	// - `connection_strings.private_endpoint.#.endpoints.#.provider_name` - Cloud provider to which you deployed the private endpoint. Atlas returns `AWS` or `AZURE`.
	// - `connection_strings.private_endpoint.#.endpoints.#.region` - Region to which you deployed the private endpoint.
	ConnectionStrings GetClustersResultConnectionStringArrayInput `pulumi:"connectionStrings"`
	// The Network Peering Container ID.
	ContainerId pulumi.StringInput `pulumi:"containerId"`
	// Indicates the size in gigabytes of the server’s root volume (AWS/GCP Only).
	DiskSizeGb pulumi.Float64Input `pulumi:"diskSizeGb"`
	// Indicates whether Encryption at Rest is enabled or disabled.
	EncryptionAtRestProvider pulumi.StringInput               `pulumi:"encryptionAtRestProvider"`
	Labels                   GetClustersResultLabelArrayInput `pulumi:"labels"`
	// Indicates the version of the cluster to deploy.
	MongoDbMajorVersion pulumi.StringInput `pulumi:"mongoDbMajorVersion"`
	// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
	MongoDbVersion pulumi.StringInput `pulumi:"mongoDbVersion"`
	// Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
	MongoUri pulumi.StringInput `pulumi:"mongoUri"`
	// Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
	MongoUriUpdated pulumi.StringInput `pulumi:"mongoUriUpdated"`
	// Describes connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
	MongoUriWithOptions pulumi.StringInput `pulumi:"mongoUriWithOptions"`
	// The name of the current plugin
	Name pulumi.StringInput `pulumi:"name"`
	// Number of shards to deploy in the specified zone.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Flag that indicates whether the cluster is paused or not.
	Paused pulumi.BoolInput `pulumi:"paused"`
	// Flag that indicates if the cluster uses Continuous Cloud Backup.
	PitEnabled pulumi.BoolInput `pulumi:"pitEnabled"`
	// Maximum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMaxInstanceSize pulumi.StringInput `pulumi:"providerAutoScalingComputeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMinInstanceSize pulumi.StringInput `pulumi:"providerAutoScalingComputeMinInstanceSize"`
	// Flag indicating if the cluster uses Cloud Backup Snapshots for backups. **DEPRECATED** Use `cloudBackup` instead.
	ProviderBackupEnabled pulumi.BoolInput `pulumi:"providerBackupEnabled"`
	// Indicates the maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected providerSettings.instanceSizeName and diskSizeGB.
	ProviderDiskIops pulumi.IntInput `pulumi:"providerDiskIops"`
	// Describes Azure disk type of the server’s root volume (Azure Only).
	ProviderDiskTypeName pulumi.StringInput `pulumi:"providerDiskTypeName"`
	// **(DEPRECATED)** Indicates whether the Amazon EBS encryption is enabled. This feature encrypts the server’s root volume for both data at rest within the volume and data moving between the volume and the instance. By default this attribute is always enabled, per deprecation process showing the real value at `providerEncryptEbsVolumeFlag` computed attribute.
	ProviderEncryptEbsVolume pulumi.BoolInput `pulumi:"providerEncryptEbsVolume"`
	// Atlas provides different instance sizes, each with a default storage capacity and RAM size.
	ProviderInstanceSizeName pulumi.StringInput `pulumi:"providerInstanceSizeName"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Indicates Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. Requires the Atlas Region name, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	ProviderRegionName pulumi.StringInput `pulumi:"providerRegionName"`
	// Indicates the type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.
	ProviderVolumeType pulumi.StringInput `pulumi:"providerVolumeType"`
	// (Deprecated) Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
	ReplicationFactor pulumi.IntInput `pulumi:"replicationFactor"`
	// Configuration for cluster regions.  See Replication Spec below for more details.
	ReplicationSpecs GetClustersResultReplicationSpecArrayInput `pulumi:"replicationSpecs"`
	// current snapshot schedule and retention settings for the cluster.
	SnapshotBackupPolicies GetClustersResultSnapshotBackupPolicyArrayInput `pulumi:"snapshotBackupPolicies"`
	// Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
	SrvAddress pulumi.StringInput `pulumi:"srvAddress"`
	// Indicates the current state of the cluster. The possible states are:
	// - IDLE
	// - CREATING
	// - UPDATING
	// - DELETING
	// - DELETED
	// - REPAIRING
	StateName pulumi.StringInput `pulumi:"stateName"`
	// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled pulumi.BoolInput `pulumi:"terminationProtectionEnabled"`
	// Release cadence that Atlas uses for this cluster.
	VersionReleaseSystem pulumi.StringInput `pulumi:"versionReleaseSystem"`
}

func (GetClustersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResult)(nil)).Elem()
}

func (i GetClustersResultArgs) ToGetClustersResultOutput() GetClustersResultOutput {
	return i.ToGetClustersResultOutputWithContext(context.Background())
}

func (i GetClustersResultArgs) ToGetClustersResultOutputWithContext(ctx context.Context) GetClustersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultOutput)
}

// GetClustersResultArrayInput is an input type that accepts GetClustersResultArray and GetClustersResultArrayOutput values.
// You can construct a concrete instance of `GetClustersResultArrayInput` via:
//
//	GetClustersResultArray{ GetClustersResultArgs{...} }
type GetClustersResultArrayInput interface {
	pulumi.Input

	ToGetClustersResultArrayOutput() GetClustersResultArrayOutput
	ToGetClustersResultArrayOutputWithContext(context.Context) GetClustersResultArrayOutput
}

type GetClustersResultArray []GetClustersResultInput

func (GetClustersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResult)(nil)).Elem()
}

func (i GetClustersResultArray) ToGetClustersResultArrayOutput() GetClustersResultArrayOutput {
	return i.ToGetClustersResultArrayOutputWithContext(context.Background())
}

func (i GetClustersResultArray) ToGetClustersResultArrayOutputWithContext(ctx context.Context) GetClustersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultArrayOutput)
}

type GetClustersResultOutput struct{ *pulumi.OutputState }

func (GetClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResult)(nil)).Elem()
}

func (o GetClustersResultOutput) ToGetClustersResultOutput() GetClustersResultOutput {
	return o
}

func (o GetClustersResultOutput) ToGetClustersResultOutputWithContext(ctx context.Context) GetClustersResultOutput {
	return o
}

// Get the advanced configuration options. See Advanced Configuration below for more details.
func (o GetClustersResultOutput) AdvancedConfigurations() GetClustersResultAdvancedConfigurationArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultAdvancedConfiguration { return v.AdvancedConfigurations }).(GetClustersResultAdvancedConfigurationArrayOutput)
}

// Specifies whether cluster tier auto-scaling is enabled. The default is false.
func (o GetClustersResultOutput) AutoScalingComputeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.AutoScalingComputeEnabled }).(pulumi.BoolOutput)
}

// * `autoScalingComputeScaleDownEnabled` - Specifies whether cluster tier auto-down-scaling is enabled.
func (o GetClustersResultOutput) AutoScalingComputeScaleDownEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.AutoScalingComputeScaleDownEnabled }).(pulumi.BoolOutput)
}

// Indicates whether disk auto-scaling is enabled.
func (o GetClustersResultOutput) AutoScalingDiskGbEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.AutoScalingDiskGbEnabled }).(pulumi.BoolOutput)
}

// Indicates Cloud service provider on which the server for a multi-tenant cluster is provisioned.
func (o GetClustersResultOutput) BackingProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.BackingProviderName }).(pulumi.StringOutput)
}

// Legacy Option, Indicates whether Atlas continuous backups are enabled for the cluster.
func (o GetClustersResultOutput) BackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.BackupEnabled }).(pulumi.BoolOutput)
}

// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details. **DEPRECATED** Use `biConnectorConfig` instead.
//
// Deprecated: use bi_connector_config instead
func (o GetClustersResultOutput) BiConnector() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClustersResult) map[string]string { return v.BiConnector }).(pulumi.StringMapOutput)
}

// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
func (o GetClustersResultOutput) BiConnectorConfigs() GetClustersResultBiConnectorConfigArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultBiConnectorConfig { return v.BiConnectorConfigs }).(GetClustersResultBiConnectorConfigArrayOutput)
}

// Indicates the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
func (o GetClustersResultOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
// - `connection_strings.standard` -   Public mongodb:// connection string for this cluster.
// - `connection_strings.standard_srv` - Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.standard.
// - `connection_strings.aws_private_link` -  [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. **DEPRECATED** Use `connection_strings.private_endpoint[n].connection_string` instead.
// - `connection_strings.aws_private_link_srv` - [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.awsPrivateLink. **DEPRECATED** `connection_strings.private_endpoint[n].srv_connection_string` instead.
// - `connection_strings.private` -   [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
// - `connection_strings.private_srv` -  [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
// - `connection_strings.private_endpoint.#.connection_string` - Private-endpoint-aware `mongodb://`connection string for this private endpoint.
// - `connection_strings.private_endpoint.#.srv_connection_string` - Private-endpoint-aware `mongodb+srv://` connection string for this private endpoint.
// - `connection_strings.private_endpoint.#.type` - Type of MongoDB process that you connect to with the connection strings. Atlas returns `MONGOD` for replica sets, or `MONGOS` for sharded clusters.
// - `connection_strings.private_endpoint.#.endpoints` - Private endpoint through which you connect to Atlas when you use `connection_strings.private_endpoint[n].connection_string` or `connection_strings.private_endpoint[n].srv_connection_string`
// - `connection_strings.private_endpoint.#.endpoints.#.endpoint_id` - Unique identifier of the private endpoint.
// - `connection_strings.private_endpoint.#.endpoints.#.provider_name` - Cloud provider to which you deployed the private endpoint. Atlas returns `AWS` or `AZURE`.
// - `connection_strings.private_endpoint.#.endpoints.#.region` - Region to which you deployed the private endpoint.
func (o GetClustersResultOutput) ConnectionStrings() GetClustersResultConnectionStringArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultConnectionString { return v.ConnectionStrings }).(GetClustersResultConnectionStringArrayOutput)
}

// The Network Peering Container ID.
func (o GetClustersResultOutput) ContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ContainerId }).(pulumi.StringOutput)
}

// Indicates the size in gigabytes of the server’s root volume (AWS/GCP Only).
func (o GetClustersResultOutput) DiskSizeGb() pulumi.Float64Output {
	return o.ApplyT(func(v GetClustersResult) float64 { return v.DiskSizeGb }).(pulumi.Float64Output)
}

// Indicates whether Encryption at Rest is enabled or disabled.
func (o GetClustersResultOutput) EncryptionAtRestProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.EncryptionAtRestProvider }).(pulumi.StringOutput)
}

func (o GetClustersResultOutput) Labels() GetClustersResultLabelArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultLabel { return v.Labels }).(GetClustersResultLabelArrayOutput)
}

// Indicates the version of the cluster to deploy.
func (o GetClustersResultOutput) MongoDbMajorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoDbMajorVersion }).(pulumi.StringOutput)
}

// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
func (o GetClustersResultOutput) MongoDbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoDbVersion }).(pulumi.StringOutput)
}

// Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
func (o GetClustersResultOutput) MongoUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoUri }).(pulumi.StringOutput)
}

// Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
func (o GetClustersResultOutput) MongoUriUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoUriUpdated }).(pulumi.StringOutput)
}

// Describes connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
func (o GetClustersResultOutput) MongoUriWithOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoUriWithOptions }).(pulumi.StringOutput)
}

// The name of the current plugin
func (o GetClustersResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.Name }).(pulumi.StringOutput)
}

// Number of shards to deploy in the specified zone.
func (o GetClustersResultOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResult) int { return v.NumShards }).(pulumi.IntOutput)
}

// Flag that indicates whether the cluster is paused or not.
func (o GetClustersResultOutput) Paused() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.Paused }).(pulumi.BoolOutput)
}

// Flag that indicates if the cluster uses Continuous Cloud Backup.
func (o GetClustersResultOutput) PitEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.PitEnabled }).(pulumi.BoolOutput)
}

// Maximum instance size to which your cluster can automatically scale.
func (o GetClustersResultOutput) ProviderAutoScalingComputeMaxInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderAutoScalingComputeMaxInstanceSize }).(pulumi.StringOutput)
}

// Minimum instance size to which your cluster can automatically scale.
func (o GetClustersResultOutput) ProviderAutoScalingComputeMinInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderAutoScalingComputeMinInstanceSize }).(pulumi.StringOutput)
}

// Flag indicating if the cluster uses Cloud Backup Snapshots for backups. **DEPRECATED** Use `cloudBackup` instead.
func (o GetClustersResultOutput) ProviderBackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.ProviderBackupEnabled }).(pulumi.BoolOutput)
}

// Indicates the maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected providerSettings.instanceSizeName and diskSizeGB.
func (o GetClustersResultOutput) ProviderDiskIops() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResult) int { return v.ProviderDiskIops }).(pulumi.IntOutput)
}

// Describes Azure disk type of the server’s root volume (Azure Only).
func (o GetClustersResultOutput) ProviderDiskTypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderDiskTypeName }).(pulumi.StringOutput)
}

// **(DEPRECATED)** Indicates whether the Amazon EBS encryption is enabled. This feature encrypts the server’s root volume for both data at rest within the volume and data moving between the volume and the instance. By default this attribute is always enabled, per deprecation process showing the real value at `providerEncryptEbsVolumeFlag` computed attribute.
func (o GetClustersResultOutput) ProviderEncryptEbsVolume() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.ProviderEncryptEbsVolume }).(pulumi.BoolOutput)
}

// Atlas provides different instance sizes, each with a default storage capacity and RAM size.
func (o GetClustersResultOutput) ProviderInstanceSizeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderInstanceSizeName }).(pulumi.StringOutput)
}

// Indicates the cloud service provider on which the servers are provisioned.
func (o GetClustersResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Indicates Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. Requires the Atlas Region name, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
func (o GetClustersResultOutput) ProviderRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderRegionName }).(pulumi.StringOutput)
}

// Indicates the type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.
func (o GetClustersResultOutput) ProviderVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderVolumeType }).(pulumi.StringOutput)
}

// (Deprecated) Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
func (o GetClustersResultOutput) ReplicationFactor() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResult) int { return v.ReplicationFactor }).(pulumi.IntOutput)
}

// Configuration for cluster regions.  See Replication Spec below for more details.
func (o GetClustersResultOutput) ReplicationSpecs() GetClustersResultReplicationSpecArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultReplicationSpec { return v.ReplicationSpecs }).(GetClustersResultReplicationSpecArrayOutput)
}

// current snapshot schedule and retention settings for the cluster.
func (o GetClustersResultOutput) SnapshotBackupPolicies() GetClustersResultSnapshotBackupPolicyArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultSnapshotBackupPolicy { return v.SnapshotBackupPolicies }).(GetClustersResultSnapshotBackupPolicyArrayOutput)
}

// Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
func (o GetClustersResultOutput) SrvAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.SrvAddress }).(pulumi.StringOutput)
}

// Indicates the current state of the cluster. The possible states are:
// - IDLE
// - CREATING
// - UPDATING
// - DELETING
// - DELETED
// - REPAIRING
func (o GetClustersResultOutput) StateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.StateName }).(pulumi.StringOutput)
}

// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
func (o GetClustersResultOutput) TerminationProtectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.TerminationProtectionEnabled }).(pulumi.BoolOutput)
}

// Release cadence that Atlas uses for this cluster.
func (o GetClustersResultOutput) VersionReleaseSystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.VersionReleaseSystem }).(pulumi.StringOutput)
}

type GetClustersResultArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResult)(nil)).Elem()
}

func (o GetClustersResultArrayOutput) ToGetClustersResultArrayOutput() GetClustersResultArrayOutput {
	return o
}

func (o GetClustersResultArrayOutput) ToGetClustersResultArrayOutputWithContext(ctx context.Context) GetClustersResultArrayOutput {
	return o
}

func (o GetClustersResultArrayOutput) Index(i pulumi.IntInput) GetClustersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResult {
		return vs[0].([]GetClustersResult)[vs[1].(int)]
	}).(GetClustersResultOutput)
}

type GetClustersResultAdvancedConfiguration struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern string `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern string `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong bool `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled bool `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol string `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan bool `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours int `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb int `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector int `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector int `pulumi:"sampleSizeBiConnector"`
}

// GetClustersResultAdvancedConfigurationInput is an input type that accepts GetClustersResultAdvancedConfigurationArgs and GetClustersResultAdvancedConfigurationOutput values.
// You can construct a concrete instance of `GetClustersResultAdvancedConfigurationInput` via:
//
//	GetClustersResultAdvancedConfigurationArgs{...}
type GetClustersResultAdvancedConfigurationInput interface {
	pulumi.Input

	ToGetClustersResultAdvancedConfigurationOutput() GetClustersResultAdvancedConfigurationOutput
	ToGetClustersResultAdvancedConfigurationOutputWithContext(context.Context) GetClustersResultAdvancedConfigurationOutput
}

type GetClustersResultAdvancedConfigurationArgs struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern pulumi.StringInput `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern pulumi.StringInput `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong pulumi.BoolInput `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled pulumi.BoolInput `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol pulumi.StringInput `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan pulumi.BoolInput `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours pulumi.IntInput `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb pulumi.IntInput `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector pulumi.IntInput `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector pulumi.IntInput `pulumi:"sampleSizeBiConnector"`
}

func (GetClustersResultAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (i GetClustersResultAdvancedConfigurationArgs) ToGetClustersResultAdvancedConfigurationOutput() GetClustersResultAdvancedConfigurationOutput {
	return i.ToGetClustersResultAdvancedConfigurationOutputWithContext(context.Background())
}

func (i GetClustersResultAdvancedConfigurationArgs) ToGetClustersResultAdvancedConfigurationOutputWithContext(ctx context.Context) GetClustersResultAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultAdvancedConfigurationOutput)
}

// GetClustersResultAdvancedConfigurationArrayInput is an input type that accepts GetClustersResultAdvancedConfigurationArray and GetClustersResultAdvancedConfigurationArrayOutput values.
// You can construct a concrete instance of `GetClustersResultAdvancedConfigurationArrayInput` via:
//
//	GetClustersResultAdvancedConfigurationArray{ GetClustersResultAdvancedConfigurationArgs{...} }
type GetClustersResultAdvancedConfigurationArrayInput interface {
	pulumi.Input

	ToGetClustersResultAdvancedConfigurationArrayOutput() GetClustersResultAdvancedConfigurationArrayOutput
	ToGetClustersResultAdvancedConfigurationArrayOutputWithContext(context.Context) GetClustersResultAdvancedConfigurationArrayOutput
}

type GetClustersResultAdvancedConfigurationArray []GetClustersResultAdvancedConfigurationInput

func (GetClustersResultAdvancedConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (i GetClustersResultAdvancedConfigurationArray) ToGetClustersResultAdvancedConfigurationArrayOutput() GetClustersResultAdvancedConfigurationArrayOutput {
	return i.ToGetClustersResultAdvancedConfigurationArrayOutputWithContext(context.Background())
}

func (i GetClustersResultAdvancedConfigurationArray) ToGetClustersResultAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetClustersResultAdvancedConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultAdvancedConfigurationArrayOutput)
}

type GetClustersResultAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (GetClustersResultAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (o GetClustersResultAdvancedConfigurationOutput) ToGetClustersResultAdvancedConfigurationOutput() GetClustersResultAdvancedConfigurationOutput {
	return o
}

func (o GetClustersResultAdvancedConfigurationOutput) ToGetClustersResultAdvancedConfigurationOutputWithContext(ctx context.Context) GetClustersResultAdvancedConfigurationOutput {
	return o
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o GetClustersResultAdvancedConfigurationOutput) DefaultReadConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) string { return v.DefaultReadConcern }).(pulumi.StringOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o GetClustersResultAdvancedConfigurationOutput) DefaultWriteConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) string { return v.DefaultWriteConcern }).(pulumi.StringOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o GetClustersResultAdvancedConfigurationOutput) FailIndexKeyTooLong() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) bool { return v.FailIndexKeyTooLong }).(pulumi.BoolOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o GetClustersResultAdvancedConfigurationOutput) JavascriptEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) bool { return v.JavascriptEnabled }).(pulumi.BoolOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o GetClustersResultAdvancedConfigurationOutput) MinimumEnabledTlsProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) string { return v.MinimumEnabledTlsProtocol }).(pulumi.StringOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o GetClustersResultAdvancedConfigurationOutput) NoTableScan() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) bool { return v.NoTableScan }).(pulumi.BoolOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
func (o GetClustersResultAdvancedConfigurationOutput) OplogMinRetentionHours() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) int { return v.OplogMinRetentionHours }).(pulumi.IntOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o GetClustersResultAdvancedConfigurationOutput) OplogSizeMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) int { return v.OplogSizeMb }).(pulumi.IntOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetClustersResultAdvancedConfigurationOutput) SampleRefreshIntervalBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) int { return v.SampleRefreshIntervalBiConnector }).(pulumi.IntOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetClustersResultAdvancedConfigurationOutput) SampleSizeBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) int { return v.SampleSizeBiConnector }).(pulumi.IntOutput)
}

type GetClustersResultAdvancedConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultAdvancedConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (o GetClustersResultAdvancedConfigurationArrayOutput) ToGetClustersResultAdvancedConfigurationArrayOutput() GetClustersResultAdvancedConfigurationArrayOutput {
	return o
}

func (o GetClustersResultAdvancedConfigurationArrayOutput) ToGetClustersResultAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetClustersResultAdvancedConfigurationArrayOutput {
	return o
}

func (o GetClustersResultAdvancedConfigurationArrayOutput) Index(i pulumi.IntInput) GetClustersResultAdvancedConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultAdvancedConfiguration {
		return vs[0].([]GetClustersResultAdvancedConfiguration)[vs[1].(int)]
	}).(GetClustersResultAdvancedConfigurationOutput)
}

type GetClustersResultBiConnectorConfig struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled bool `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference string `pulumi:"readPreference"`
}

// GetClustersResultBiConnectorConfigInput is an input type that accepts GetClustersResultBiConnectorConfigArgs and GetClustersResultBiConnectorConfigOutput values.
// You can construct a concrete instance of `GetClustersResultBiConnectorConfigInput` via:
//
//	GetClustersResultBiConnectorConfigArgs{...}
type GetClustersResultBiConnectorConfigInput interface {
	pulumi.Input

	ToGetClustersResultBiConnectorConfigOutput() GetClustersResultBiConnectorConfigOutput
	ToGetClustersResultBiConnectorConfigOutputWithContext(context.Context) GetClustersResultBiConnectorConfigOutput
}

type GetClustersResultBiConnectorConfigArgs struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringInput `pulumi:"readPreference"`
}

func (GetClustersResultBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultBiConnectorConfig)(nil)).Elem()
}

func (i GetClustersResultBiConnectorConfigArgs) ToGetClustersResultBiConnectorConfigOutput() GetClustersResultBiConnectorConfigOutput {
	return i.ToGetClustersResultBiConnectorConfigOutputWithContext(context.Background())
}

func (i GetClustersResultBiConnectorConfigArgs) ToGetClustersResultBiConnectorConfigOutputWithContext(ctx context.Context) GetClustersResultBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultBiConnectorConfigOutput)
}

// GetClustersResultBiConnectorConfigArrayInput is an input type that accepts GetClustersResultBiConnectorConfigArray and GetClustersResultBiConnectorConfigArrayOutput values.
// You can construct a concrete instance of `GetClustersResultBiConnectorConfigArrayInput` via:
//
//	GetClustersResultBiConnectorConfigArray{ GetClustersResultBiConnectorConfigArgs{...} }
type GetClustersResultBiConnectorConfigArrayInput interface {
	pulumi.Input

	ToGetClustersResultBiConnectorConfigArrayOutput() GetClustersResultBiConnectorConfigArrayOutput
	ToGetClustersResultBiConnectorConfigArrayOutputWithContext(context.Context) GetClustersResultBiConnectorConfigArrayOutput
}

type GetClustersResultBiConnectorConfigArray []GetClustersResultBiConnectorConfigInput

func (GetClustersResultBiConnectorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultBiConnectorConfig)(nil)).Elem()
}

func (i GetClustersResultBiConnectorConfigArray) ToGetClustersResultBiConnectorConfigArrayOutput() GetClustersResultBiConnectorConfigArrayOutput {
	return i.ToGetClustersResultBiConnectorConfigArrayOutputWithContext(context.Background())
}

func (i GetClustersResultBiConnectorConfigArray) ToGetClustersResultBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetClustersResultBiConnectorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultBiConnectorConfigArrayOutput)
}

type GetClustersResultBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (GetClustersResultBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultBiConnectorConfig)(nil)).Elem()
}

func (o GetClustersResultBiConnectorConfigOutput) ToGetClustersResultBiConnectorConfigOutput() GetClustersResultBiConnectorConfigOutput {
	return o
}

func (o GetClustersResultBiConnectorConfigOutput) ToGetClustersResultBiConnectorConfigOutputWithContext(ctx context.Context) GetClustersResultBiConnectorConfigOutput {
	return o
}

// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
func (o GetClustersResultBiConnectorConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultBiConnectorConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o GetClustersResultBiConnectorConfigOutput) ReadPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultBiConnectorConfig) string { return v.ReadPreference }).(pulumi.StringOutput)
}

type GetClustersResultBiConnectorConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultBiConnectorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultBiConnectorConfig)(nil)).Elem()
}

func (o GetClustersResultBiConnectorConfigArrayOutput) ToGetClustersResultBiConnectorConfigArrayOutput() GetClustersResultBiConnectorConfigArrayOutput {
	return o
}

func (o GetClustersResultBiConnectorConfigArrayOutput) ToGetClustersResultBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetClustersResultBiConnectorConfigArrayOutput {
	return o
}

func (o GetClustersResultBiConnectorConfigArrayOutput) Index(i pulumi.IntInput) GetClustersResultBiConnectorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultBiConnectorConfig {
		return vs[0].([]GetClustersResultBiConnectorConfig)[vs[1].(int)]
	}).(GetClustersResultBiConnectorConfigOutput)
}

type GetClustersResultConnectionString struct {
	AwsPrivateLink    map[string]interface{}                             `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv map[string]interface{}                             `pulumi:"awsPrivateLinkSrv"`
	Private           string                                             `pulumi:"private"`
	PrivateEndpoints  []GetClustersResultConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        string                                             `pulumi:"privateSrv"`
	Standard          string                                             `pulumi:"standard"`
	StandardSrv       string                                             `pulumi:"standardSrv"`
}

// GetClustersResultConnectionStringInput is an input type that accepts GetClustersResultConnectionStringArgs and GetClustersResultConnectionStringOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringInput` via:
//
//	GetClustersResultConnectionStringArgs{...}
type GetClustersResultConnectionStringInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringOutput() GetClustersResultConnectionStringOutput
	ToGetClustersResultConnectionStringOutputWithContext(context.Context) GetClustersResultConnectionStringOutput
}

type GetClustersResultConnectionStringArgs struct {
	AwsPrivateLink    pulumi.MapInput                                            `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv pulumi.MapInput                                            `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringInput                                         `pulumi:"private"`
	PrivateEndpoints  GetClustersResultConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringInput                                         `pulumi:"privateSrv"`
	Standard          pulumi.StringInput                                         `pulumi:"standard"`
	StandardSrv       pulumi.StringInput                                         `pulumi:"standardSrv"`
}

func (GetClustersResultConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionString)(nil)).Elem()
}

func (i GetClustersResultConnectionStringArgs) ToGetClustersResultConnectionStringOutput() GetClustersResultConnectionStringOutput {
	return i.ToGetClustersResultConnectionStringOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringArgs) ToGetClustersResultConnectionStringOutputWithContext(ctx context.Context) GetClustersResultConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringOutput)
}

// GetClustersResultConnectionStringArrayInput is an input type that accepts GetClustersResultConnectionStringArray and GetClustersResultConnectionStringArrayOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringArrayInput` via:
//
//	GetClustersResultConnectionStringArray{ GetClustersResultConnectionStringArgs{...} }
type GetClustersResultConnectionStringArrayInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringArrayOutput() GetClustersResultConnectionStringArrayOutput
	ToGetClustersResultConnectionStringArrayOutputWithContext(context.Context) GetClustersResultConnectionStringArrayOutput
}

type GetClustersResultConnectionStringArray []GetClustersResultConnectionStringInput

func (GetClustersResultConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionString)(nil)).Elem()
}

func (i GetClustersResultConnectionStringArray) ToGetClustersResultConnectionStringArrayOutput() GetClustersResultConnectionStringArrayOutput {
	return i.ToGetClustersResultConnectionStringArrayOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringArray) ToGetClustersResultConnectionStringArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringArrayOutput)
}

type GetClustersResultConnectionStringOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionString)(nil)).Elem()
}

func (o GetClustersResultConnectionStringOutput) ToGetClustersResultConnectionStringOutput() GetClustersResultConnectionStringOutput {
	return o
}

func (o GetClustersResultConnectionStringOutput) ToGetClustersResultConnectionStringOutputWithContext(ctx context.Context) GetClustersResultConnectionStringOutput {
	return o
}

func (o GetClustersResultConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

func (o GetClustersResultConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o GetClustersResultConnectionStringOutput) Private() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) string { return v.Private }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringOutput) PrivateEndpoints() GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) []GetClustersResultConnectionStringPrivateEndpoint {
		return v.PrivateEndpoints
	}).(GetClustersResultConnectionStringPrivateEndpointArrayOutput)
}

func (o GetClustersResultConnectionStringOutput) PrivateSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) string { return v.PrivateSrv }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringOutput) Standard() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) string { return v.Standard }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringOutput) StandardSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) string { return v.StandardSrv }).(pulumi.StringOutput)
}

type GetClustersResultConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionString)(nil)).Elem()
}

func (o GetClustersResultConnectionStringArrayOutput) ToGetClustersResultConnectionStringArrayOutput() GetClustersResultConnectionStringArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringArrayOutput) ToGetClustersResultConnectionStringArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringArrayOutput) Index(i pulumi.IntInput) GetClustersResultConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultConnectionString {
		return vs[0].([]GetClustersResultConnectionString)[vs[1].(int)]
	}).(GetClustersResultConnectionStringOutput)
}

type GetClustersResultConnectionStringPrivateEndpoint struct {
	ConnectionString    string                                                     `pulumi:"connectionString"`
	Endpoints           []GetClustersResultConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString string                                                     `pulumi:"srvConnectionString"`
	Type                string                                                     `pulumi:"type"`
}

// GetClustersResultConnectionStringPrivateEndpointInput is an input type that accepts GetClustersResultConnectionStringPrivateEndpointArgs and GetClustersResultConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringPrivateEndpointInput` via:
//
//	GetClustersResultConnectionStringPrivateEndpointArgs{...}
type GetClustersResultConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringPrivateEndpointOutput() GetClustersResultConnectionStringPrivateEndpointOutput
	ToGetClustersResultConnectionStringPrivateEndpointOutputWithContext(context.Context) GetClustersResultConnectionStringPrivateEndpointOutput
}

type GetClustersResultConnectionStringPrivateEndpointArgs struct {
	ConnectionString    pulumi.StringInput                                                 `pulumi:"connectionString"`
	Endpoints           GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString pulumi.StringInput                                                 `pulumi:"srvConnectionString"`
	Type                pulumi.StringInput                                                 `pulumi:"type"`
}

func (GetClustersResultConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetClustersResultConnectionStringPrivateEndpointArgs) ToGetClustersResultConnectionStringPrivateEndpointOutput() GetClustersResultConnectionStringPrivateEndpointOutput {
	return i.ToGetClustersResultConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringPrivateEndpointArgs) ToGetClustersResultConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringPrivateEndpointOutput)
}

// GetClustersResultConnectionStringPrivateEndpointArrayInput is an input type that accepts GetClustersResultConnectionStringPrivateEndpointArray and GetClustersResultConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringPrivateEndpointArrayInput` via:
//
//	GetClustersResultConnectionStringPrivateEndpointArray{ GetClustersResultConnectionStringPrivateEndpointArgs{...} }
type GetClustersResultConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringPrivateEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointArrayOutput
	ToGetClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) GetClustersResultConnectionStringPrivateEndpointArrayOutput
}

type GetClustersResultConnectionStringPrivateEndpointArray []GetClustersResultConnectionStringPrivateEndpointInput

func (GetClustersResultConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetClustersResultConnectionStringPrivateEndpointArray) ToGetClustersResultConnectionStringPrivateEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return i.ToGetClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringPrivateEndpointArray) ToGetClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringPrivateEndpointArrayOutput)
}

type GetClustersResultConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) ToGetClustersResultConnectionStringPrivateEndpointOutput() GetClustersResultConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) ToGetClustersResultConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpoint) string { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) Endpoints() GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpoint) []GetClustersResultConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpoint) string { return v.SrvConnectionString }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

type GetClustersResultConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetClustersResultConnectionStringPrivateEndpointArrayOutput) ToGetClustersResultConnectionStringPrivateEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointArrayOutput) ToGetClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) GetClustersResultConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultConnectionStringPrivateEndpoint {
		return vs[0].([]GetClustersResultConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(GetClustersResultConnectionStringPrivateEndpointOutput)
}

type GetClustersResultConnectionStringPrivateEndpointEndpoint struct {
	EndpointId string `pulumi:"endpointId"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	Region       string `pulumi:"region"`
}

// GetClustersResultConnectionStringPrivateEndpointEndpointInput is an input type that accepts GetClustersResultConnectionStringPrivateEndpointEndpointArgs and GetClustersResultConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringPrivateEndpointEndpointInput` via:
//
//	GetClustersResultConnectionStringPrivateEndpointEndpointArgs{...}
type GetClustersResultConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringPrivateEndpointEndpointOutput() GetClustersResultConnectionStringPrivateEndpointEndpointOutput
	ToGetClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointOutput
}

type GetClustersResultConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	Region       pulumi.StringInput `pulumi:"region"`
}

func (GetClustersResultConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetClustersResultConnectionStringPrivateEndpointEndpointArgs) ToGetClustersResultConnectionStringPrivateEndpointEndpointOutput() GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return i.ToGetClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringPrivateEndpointEndpointArgs) ToGetClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringPrivateEndpointEndpointOutput)
}

// GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts GetClustersResultConnectionStringPrivateEndpointEndpointArray and GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//	GetClustersResultConnectionStringPrivateEndpointEndpointArray{ GetClustersResultConnectionStringPrivateEndpointEndpointArgs{...} }
type GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput
	ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput
}

type GetClustersResultConnectionStringPrivateEndpointEndpointArray []GetClustersResultConnectionStringPrivateEndpointEndpointInput

func (GetClustersResultConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetClustersResultConnectionStringPrivateEndpointEndpointArray) ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringPrivateEndpointEndpointArray) ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput)
}

type GetClustersResultConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) ToGetClustersResultConnectionStringPrivateEndpointEndpointOutput() GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) ToGetClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Indicates the cloud service provider on which the servers are provisioned.
func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.ProviderName }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.Region }).(pulumi.StringOutput)
}

type GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]GetClustersResultConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(GetClustersResultConnectionStringPrivateEndpointEndpointOutput)
}

type GetClustersResultLabel struct {
	// The key that was set.
	Key string `pulumi:"key"`
	// The value that represents the key.
	Value string `pulumi:"value"`
}

// GetClustersResultLabelInput is an input type that accepts GetClustersResultLabelArgs and GetClustersResultLabelOutput values.
// You can construct a concrete instance of `GetClustersResultLabelInput` via:
//
//	GetClustersResultLabelArgs{...}
type GetClustersResultLabelInput interface {
	pulumi.Input

	ToGetClustersResultLabelOutput() GetClustersResultLabelOutput
	ToGetClustersResultLabelOutputWithContext(context.Context) GetClustersResultLabelOutput
}

type GetClustersResultLabelArgs struct {
	// The key that was set.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that represents the key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClustersResultLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultLabel)(nil)).Elem()
}

func (i GetClustersResultLabelArgs) ToGetClustersResultLabelOutput() GetClustersResultLabelOutput {
	return i.ToGetClustersResultLabelOutputWithContext(context.Background())
}

func (i GetClustersResultLabelArgs) ToGetClustersResultLabelOutputWithContext(ctx context.Context) GetClustersResultLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultLabelOutput)
}

// GetClustersResultLabelArrayInput is an input type that accepts GetClustersResultLabelArray and GetClustersResultLabelArrayOutput values.
// You can construct a concrete instance of `GetClustersResultLabelArrayInput` via:
//
//	GetClustersResultLabelArray{ GetClustersResultLabelArgs{...} }
type GetClustersResultLabelArrayInput interface {
	pulumi.Input

	ToGetClustersResultLabelArrayOutput() GetClustersResultLabelArrayOutput
	ToGetClustersResultLabelArrayOutputWithContext(context.Context) GetClustersResultLabelArrayOutput
}

type GetClustersResultLabelArray []GetClustersResultLabelInput

func (GetClustersResultLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultLabel)(nil)).Elem()
}

func (i GetClustersResultLabelArray) ToGetClustersResultLabelArrayOutput() GetClustersResultLabelArrayOutput {
	return i.ToGetClustersResultLabelArrayOutputWithContext(context.Background())
}

func (i GetClustersResultLabelArray) ToGetClustersResultLabelArrayOutputWithContext(ctx context.Context) GetClustersResultLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultLabelArrayOutput)
}

type GetClustersResultLabelOutput struct{ *pulumi.OutputState }

func (GetClustersResultLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultLabel)(nil)).Elem()
}

func (o GetClustersResultLabelOutput) ToGetClustersResultLabelOutput() GetClustersResultLabelOutput {
	return o
}

func (o GetClustersResultLabelOutput) ToGetClustersResultLabelOutputWithContext(ctx context.Context) GetClustersResultLabelOutput {
	return o
}

// The key that was set.
func (o GetClustersResultLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that represents the key.
func (o GetClustersResultLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetClustersResultLabelArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultLabel)(nil)).Elem()
}

func (o GetClustersResultLabelArrayOutput) ToGetClustersResultLabelArrayOutput() GetClustersResultLabelArrayOutput {
	return o
}

func (o GetClustersResultLabelArrayOutput) ToGetClustersResultLabelArrayOutputWithContext(ctx context.Context) GetClustersResultLabelArrayOutput {
	return o
}

func (o GetClustersResultLabelArrayOutput) Index(i pulumi.IntInput) GetClustersResultLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultLabel {
		return vs[0].([]GetClustersResultLabel)[vs[1].(int)]
	}).(GetClustersResultLabelOutput)
}

type GetClustersResultReplicationSpec struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id string `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards int `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs []GetClustersResultReplicationSpecRegionsConfig `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName string `pulumi:"zoneName"`
}

// GetClustersResultReplicationSpecInput is an input type that accepts GetClustersResultReplicationSpecArgs and GetClustersResultReplicationSpecOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecInput` via:
//
//	GetClustersResultReplicationSpecArgs{...}
type GetClustersResultReplicationSpecInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecOutput() GetClustersResultReplicationSpecOutput
	ToGetClustersResultReplicationSpecOutputWithContext(context.Context) GetClustersResultReplicationSpecOutput
}

type GetClustersResultReplicationSpecArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs GetClustersResultReplicationSpecRegionsConfigArrayInput `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetClustersResultReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpec)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecArgs) ToGetClustersResultReplicationSpecOutput() GetClustersResultReplicationSpecOutput {
	return i.ToGetClustersResultReplicationSpecOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecArgs) ToGetClustersResultReplicationSpecOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecOutput)
}

// GetClustersResultReplicationSpecArrayInput is an input type that accepts GetClustersResultReplicationSpecArray and GetClustersResultReplicationSpecArrayOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecArrayInput` via:
//
//	GetClustersResultReplicationSpecArray{ GetClustersResultReplicationSpecArgs{...} }
type GetClustersResultReplicationSpecArrayInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecArrayOutput() GetClustersResultReplicationSpecArrayOutput
	ToGetClustersResultReplicationSpecArrayOutputWithContext(context.Context) GetClustersResultReplicationSpecArrayOutput
}

type GetClustersResultReplicationSpecArray []GetClustersResultReplicationSpecInput

func (GetClustersResultReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpec)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecArray) ToGetClustersResultReplicationSpecArrayOutput() GetClustersResultReplicationSpecArrayOutput {
	return i.ToGetClustersResultReplicationSpecArrayOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecArray) ToGetClustersResultReplicationSpecArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecArrayOutput)
}

type GetClustersResultReplicationSpecOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpec)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecOutput) ToGetClustersResultReplicationSpecOutput() GetClustersResultReplicationSpecOutput {
	return o
}

func (o GetClustersResultReplicationSpecOutput) ToGetClustersResultReplicationSpecOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClustersResultReplicationSpecOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) string { return v.Id }).(pulumi.StringOutput)
}

// Number of shards to deploy in the specified zone.
func (o GetClustersResultReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
func (o GetClustersResultReplicationSpecOutput) RegionsConfigs() GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) []GetClustersResultReplicationSpecRegionsConfig {
		return v.RegionsConfigs
	}).(GetClustersResultReplicationSpecRegionsConfigArrayOutput)
}

// Indicates the n ame for the zone in a Global Cluster.
func (o GetClustersResultReplicationSpecOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetClustersResultReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpec)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecArrayOutput) ToGetClustersResultReplicationSpecArrayOutput() GetClustersResultReplicationSpecArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecArrayOutput) ToGetClustersResultReplicationSpecArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecArrayOutput) Index(i pulumi.IntInput) GetClustersResultReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultReplicationSpec {
		return vs[0].([]GetClustersResultReplicationSpec)[vs[1].(int)]
	}).(GetClustersResultReplicationSpecOutput)
}

type GetClustersResultReplicationSpecRegionsConfig struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes int `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes int `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority int `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes int `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName string `pulumi:"regionName"`
}

// GetClustersResultReplicationSpecRegionsConfigInput is an input type that accepts GetClustersResultReplicationSpecRegionsConfigArgs and GetClustersResultReplicationSpecRegionsConfigOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecRegionsConfigInput` via:
//
//	GetClustersResultReplicationSpecRegionsConfigArgs{...}
type GetClustersResultReplicationSpecRegionsConfigInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecRegionsConfigOutput() GetClustersResultReplicationSpecRegionsConfigOutput
	ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(context.Context) GetClustersResultReplicationSpecRegionsConfigOutput
}

type GetClustersResultReplicationSpecRegionsConfigArgs struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes pulumi.IntInput `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes pulumi.IntInput `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes pulumi.IntInput `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetClustersResultReplicationSpecRegionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecRegionsConfigArgs) ToGetClustersResultReplicationSpecRegionsConfigOutput() GetClustersResultReplicationSpecRegionsConfigOutput {
	return i.ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecRegionsConfigArgs) ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecRegionsConfigOutput)
}

// GetClustersResultReplicationSpecRegionsConfigArrayInput is an input type that accepts GetClustersResultReplicationSpecRegionsConfigArray and GetClustersResultReplicationSpecRegionsConfigArrayOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecRegionsConfigArrayInput` via:
//
//	GetClustersResultReplicationSpecRegionsConfigArray{ GetClustersResultReplicationSpecRegionsConfigArgs{...} }
type GetClustersResultReplicationSpecRegionsConfigArrayInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecRegionsConfigArrayOutput() GetClustersResultReplicationSpecRegionsConfigArrayOutput
	ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(context.Context) GetClustersResultReplicationSpecRegionsConfigArrayOutput
}

type GetClustersResultReplicationSpecRegionsConfigArray []GetClustersResultReplicationSpecRegionsConfigInput

func (GetClustersResultReplicationSpecRegionsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecRegionsConfigArray) ToGetClustersResultReplicationSpecRegionsConfigArrayOutput() GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return i.ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecRegionsConfigArray) ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecRegionsConfigArrayOutput)
}

type GetClustersResultReplicationSpecRegionsConfigOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecRegionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecRegionsConfigOutput) ToGetClustersResultReplicationSpecRegionsConfigOutput() GetClustersResultReplicationSpecRegionsConfigOutput {
	return o
}

func (o GetClustersResultReplicationSpecRegionsConfigOutput) ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigOutput {
	return o
}

// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) AnalyticsNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.AnalyticsNodes }).(pulumi.IntOutput)
}

// Number of electable nodes for Atlas to deploy to the region.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) ElectableNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.ElectableNodes }).(pulumi.IntOutput)
}

// Election priority of the region. For regions with only read-only nodes, set this value to 0.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) ReadOnlyNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.ReadOnlyNodes }).(pulumi.IntOutput)
}

// Name for the region specified.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetClustersResultReplicationSpecRegionsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecRegionsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecRegionsConfigArrayOutput) ToGetClustersResultReplicationSpecRegionsConfigArrayOutput() GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecRegionsConfigArrayOutput) ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecRegionsConfigArrayOutput) Index(i pulumi.IntInput) GetClustersResultReplicationSpecRegionsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultReplicationSpecRegionsConfig {
		return vs[0].([]GetClustersResultReplicationSpecRegionsConfig)[vs[1].(int)]
	}).(GetClustersResultReplicationSpecRegionsConfigOutput)
}

type GetClustersResultSnapshotBackupPolicy struct {
	ClusterId             string                                        `pulumi:"clusterId"`
	ClusterName           string                                        `pulumi:"clusterName"`
	NextSnapshot          string                                        `pulumi:"nextSnapshot"`
	Policies              []GetClustersResultSnapshotBackupPolicyPolicy `pulumi:"policies"`
	ReferenceHourOfDay    int                                           `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour int                                           `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     int                                           `pulumi:"restoreWindowDays"`
	UpdateSnapshots       bool                                          `pulumi:"updateSnapshots"`
}

// GetClustersResultSnapshotBackupPolicyInput is an input type that accepts GetClustersResultSnapshotBackupPolicyArgs and GetClustersResultSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyInput` via:
//
//	GetClustersResultSnapshotBackupPolicyArgs{...}
type GetClustersResultSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyOutput() GetClustersResultSnapshotBackupPolicyOutput
	ToGetClustersResultSnapshotBackupPolicyOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyOutput
}

type GetClustersResultSnapshotBackupPolicyArgs struct {
	ClusterId             pulumi.StringInput                                    `pulumi:"clusterId"`
	ClusterName           pulumi.StringInput                                    `pulumi:"clusterName"`
	NextSnapshot          pulumi.StringInput                                    `pulumi:"nextSnapshot"`
	Policies              GetClustersResultSnapshotBackupPolicyPolicyArrayInput `pulumi:"policies"`
	ReferenceHourOfDay    pulumi.IntInput                                       `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour pulumi.IntInput                                       `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     pulumi.IntInput                                       `pulumi:"restoreWindowDays"`
	UpdateSnapshots       pulumi.BoolInput                                      `pulumi:"updateSnapshots"`
}

func (GetClustersResultSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyArgs) ToGetClustersResultSnapshotBackupPolicyOutput() GetClustersResultSnapshotBackupPolicyOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyArgs) ToGetClustersResultSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyOutput)
}

// GetClustersResultSnapshotBackupPolicyArrayInput is an input type that accepts GetClustersResultSnapshotBackupPolicyArray and GetClustersResultSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyArrayInput` via:
//
//	GetClustersResultSnapshotBackupPolicyArray{ GetClustersResultSnapshotBackupPolicyArgs{...} }
type GetClustersResultSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyArrayOutput
	ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyArrayOutput
}

type GetClustersResultSnapshotBackupPolicyArray []GetClustersResultSnapshotBackupPolicyInput

func (GetClustersResultSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyArray) ToGetClustersResultSnapshotBackupPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyArrayOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyArray) ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyArrayOutput)
}

type GetClustersResultSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ToGetClustersResultSnapshotBackupPolicyOutput() GetClustersResultSnapshotBackupPolicyOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ToGetClustersResultSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) NextSnapshot() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) string { return v.NextSnapshot }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) Policies() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) []GetClustersResultSnapshotBackupPolicyPolicy {
		return v.Policies
	}).(GetClustersResultSnapshotBackupPolicyPolicyArrayOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ReferenceHourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) int { return v.ReferenceHourOfDay }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ReferenceMinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) int { return v.ReferenceMinuteOfHour }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) RestoreWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) int { return v.RestoreWindowDays }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) UpdateSnapshots() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) bool { return v.UpdateSnapshots }).(pulumi.BoolOutput)
}

type GetClustersResultSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetClustersResultSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultSnapshotBackupPolicy {
		return vs[0].([]GetClustersResultSnapshotBackupPolicy)[vs[1].(int)]
	}).(GetClustersResultSnapshotBackupPolicyOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicy struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          string                                                  `pulumi:"id"`
	PolicyItems []GetClustersResultSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// GetClustersResultSnapshotBackupPolicyPolicyInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyArgs and GetClustersResultSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyInput` via:
//
//	GetClustersResultSnapshotBackupPolicyPolicyArgs{...}
type GetClustersResultSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyOutput() GetClustersResultSnapshotBackupPolicyPolicyOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          pulumi.StringInput                                              `pulumi:"id"`
	PolicyItems GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (GetClustersResultSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArgs) ToGetClustersResultSnapshotBackupPolicyPolicyOutput() GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArgs) ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyOutput)
}

// GetClustersResultSnapshotBackupPolicyPolicyArrayInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyArray and GetClustersResultSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyArrayInput` via:
//
//	GetClustersResultSnapshotBackupPolicyPolicyArray{ GetClustersResultSnapshotBackupPolicyPolicyArgs{...} }
type GetClustersResultSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyArrayOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyArray []GetClustersResultSnapshotBackupPolicyPolicyInput

func (GetClustersResultSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArray) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArray) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyArrayOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) ToGetClustersResultSnapshotBackupPolicyPolicyOutput() GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) PolicyItems() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicy) []GetClustersResultSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultSnapshotBackupPolicyPolicy {
		return vs[0].([]GetClustersResultSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(GetClustersResultSnapshotBackupPolicyPolicyOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             string `pulumi:"id"`
	RetentionUnit  string `pulumi:"retentionUnit"`
	RetentionValue int    `pulumi:"retentionValue"`
}

// GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs and GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//	GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             pulumi.StringInput `pulumi:"id"`
	RetentionUnit  pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue pulumi.IntInput    `pulumi:"retentionValue"`
}

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray and GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//	GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray{ GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray []GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type GetCustomDbRoleAction struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action string `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources []GetCustomDbRoleActionResource `pulumi:"resources"`
}

// GetCustomDbRoleActionInput is an input type that accepts GetCustomDbRoleActionArgs and GetCustomDbRoleActionOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionInput` via:
//
//	GetCustomDbRoleActionArgs{...}
type GetCustomDbRoleActionInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionOutput() GetCustomDbRoleActionOutput
	ToGetCustomDbRoleActionOutputWithContext(context.Context) GetCustomDbRoleActionOutput
}

type GetCustomDbRoleActionArgs struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action pulumi.StringInput `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources GetCustomDbRoleActionResourceArrayInput `pulumi:"resources"`
}

func (GetCustomDbRoleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleAction)(nil)).Elem()
}

func (i GetCustomDbRoleActionArgs) ToGetCustomDbRoleActionOutput() GetCustomDbRoleActionOutput {
	return i.ToGetCustomDbRoleActionOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionArgs) ToGetCustomDbRoleActionOutputWithContext(ctx context.Context) GetCustomDbRoleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionOutput)
}

// GetCustomDbRoleActionArrayInput is an input type that accepts GetCustomDbRoleActionArray and GetCustomDbRoleActionArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionArrayInput` via:
//
//	GetCustomDbRoleActionArray{ GetCustomDbRoleActionArgs{...} }
type GetCustomDbRoleActionArrayInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionArrayOutput() GetCustomDbRoleActionArrayOutput
	ToGetCustomDbRoleActionArrayOutputWithContext(context.Context) GetCustomDbRoleActionArrayOutput
}

type GetCustomDbRoleActionArray []GetCustomDbRoleActionInput

func (GetCustomDbRoleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleAction)(nil)).Elem()
}

func (i GetCustomDbRoleActionArray) ToGetCustomDbRoleActionArrayOutput() GetCustomDbRoleActionArrayOutput {
	return i.ToGetCustomDbRoleActionArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionArray) ToGetCustomDbRoleActionArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionArrayOutput)
}

type GetCustomDbRoleActionOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleAction)(nil)).Elem()
}

func (o GetCustomDbRoleActionOutput) ToGetCustomDbRoleActionOutput() GetCustomDbRoleActionOutput {
	return o
}

func (o GetCustomDbRoleActionOutput) ToGetCustomDbRoleActionOutputWithContext(ctx context.Context) GetCustomDbRoleActionOutput {
	return o
}

// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
func (o GetCustomDbRoleActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleAction) string { return v.Action }).(pulumi.StringOutput)
}

// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
func (o GetCustomDbRoleActionOutput) Resources() GetCustomDbRoleActionResourceArrayOutput {
	return o.ApplyT(func(v GetCustomDbRoleAction) []GetCustomDbRoleActionResource { return v.Resources }).(GetCustomDbRoleActionResourceArrayOutput)
}

type GetCustomDbRoleActionArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleAction)(nil)).Elem()
}

func (o GetCustomDbRoleActionArrayOutput) ToGetCustomDbRoleActionArrayOutput() GetCustomDbRoleActionArrayOutput {
	return o
}

func (o GetCustomDbRoleActionArrayOutput) ToGetCustomDbRoleActionArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionArrayOutput {
	return o
}

func (o GetCustomDbRoleActionArrayOutput) Index(i pulumi.IntInput) GetCustomDbRoleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRoleAction {
		return vs[0].([]GetCustomDbRoleAction)[vs[1].(int)]
	}).(GetCustomDbRoleActionOutput)
}

type GetCustomDbRoleActionResource struct {
	Cluster        bool   `pulumi:"cluster"`
	CollectionName string `pulumi:"collectionName"`
	// (Required) Database on which the inherited role is granted.
	DatabaseName string `pulumi:"databaseName"`
}

// GetCustomDbRoleActionResourceInput is an input type that accepts GetCustomDbRoleActionResourceArgs and GetCustomDbRoleActionResourceOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionResourceInput` via:
//
//	GetCustomDbRoleActionResourceArgs{...}
type GetCustomDbRoleActionResourceInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionResourceOutput() GetCustomDbRoleActionResourceOutput
	ToGetCustomDbRoleActionResourceOutputWithContext(context.Context) GetCustomDbRoleActionResourceOutput
}

type GetCustomDbRoleActionResourceArgs struct {
	Cluster        pulumi.BoolInput   `pulumi:"cluster"`
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// (Required) Database on which the inherited role is granted.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (GetCustomDbRoleActionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleActionResource)(nil)).Elem()
}

func (i GetCustomDbRoleActionResourceArgs) ToGetCustomDbRoleActionResourceOutput() GetCustomDbRoleActionResourceOutput {
	return i.ToGetCustomDbRoleActionResourceOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionResourceArgs) ToGetCustomDbRoleActionResourceOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionResourceOutput)
}

// GetCustomDbRoleActionResourceArrayInput is an input type that accepts GetCustomDbRoleActionResourceArray and GetCustomDbRoleActionResourceArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionResourceArrayInput` via:
//
//	GetCustomDbRoleActionResourceArray{ GetCustomDbRoleActionResourceArgs{...} }
type GetCustomDbRoleActionResourceArrayInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionResourceArrayOutput() GetCustomDbRoleActionResourceArrayOutput
	ToGetCustomDbRoleActionResourceArrayOutputWithContext(context.Context) GetCustomDbRoleActionResourceArrayOutput
}

type GetCustomDbRoleActionResourceArray []GetCustomDbRoleActionResourceInput

func (GetCustomDbRoleActionResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleActionResource)(nil)).Elem()
}

func (i GetCustomDbRoleActionResourceArray) ToGetCustomDbRoleActionResourceArrayOutput() GetCustomDbRoleActionResourceArrayOutput {
	return i.ToGetCustomDbRoleActionResourceArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionResourceArray) ToGetCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionResourceArrayOutput)
}

type GetCustomDbRoleActionResourceOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleActionResource)(nil)).Elem()
}

func (o GetCustomDbRoleActionResourceOutput) ToGetCustomDbRoleActionResourceOutput() GetCustomDbRoleActionResourceOutput {
	return o
}

func (o GetCustomDbRoleActionResourceOutput) ToGetCustomDbRoleActionResourceOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceOutput {
	return o
}

func (o GetCustomDbRoleActionResourceOutput) Cluster() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCustomDbRoleActionResource) bool { return v.Cluster }).(pulumi.BoolOutput)
}

func (o GetCustomDbRoleActionResourceOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleActionResource) string { return v.CollectionName }).(pulumi.StringOutput)
}

// (Required) Database on which the inherited role is granted.
func (o GetCustomDbRoleActionResourceOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleActionResource) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type GetCustomDbRoleActionResourceArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleActionResource)(nil)).Elem()
}

func (o GetCustomDbRoleActionResourceArrayOutput) ToGetCustomDbRoleActionResourceArrayOutput() GetCustomDbRoleActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRoleActionResourceArrayOutput) ToGetCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRoleActionResourceArrayOutput) Index(i pulumi.IntInput) GetCustomDbRoleActionResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRoleActionResource {
		return vs[0].([]GetCustomDbRoleActionResource)[vs[1].(int)]
	}).(GetCustomDbRoleActionResourceOutput)
}

type GetCustomDbRoleInheritedRole struct {
	// (Required) Database on which the inherited role is granted.
	DatabaseName string `pulumi:"databaseName"`
	// Name of the custom role.
	RoleName string `pulumi:"roleName"`
}

// GetCustomDbRoleInheritedRoleInput is an input type that accepts GetCustomDbRoleInheritedRoleArgs and GetCustomDbRoleInheritedRoleOutput values.
// You can construct a concrete instance of `GetCustomDbRoleInheritedRoleInput` via:
//
//	GetCustomDbRoleInheritedRoleArgs{...}
type GetCustomDbRoleInheritedRoleInput interface {
	pulumi.Input

	ToGetCustomDbRoleInheritedRoleOutput() GetCustomDbRoleInheritedRoleOutput
	ToGetCustomDbRoleInheritedRoleOutputWithContext(context.Context) GetCustomDbRoleInheritedRoleOutput
}

type GetCustomDbRoleInheritedRoleArgs struct {
	// (Required) Database on which the inherited role is granted.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Name of the custom role.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (GetCustomDbRoleInheritedRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRoleInheritedRoleArgs) ToGetCustomDbRoleInheritedRoleOutput() GetCustomDbRoleInheritedRoleOutput {
	return i.ToGetCustomDbRoleInheritedRoleOutputWithContext(context.Background())
}

func (i GetCustomDbRoleInheritedRoleArgs) ToGetCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleInheritedRoleOutput)
}

// GetCustomDbRoleInheritedRoleArrayInput is an input type that accepts GetCustomDbRoleInheritedRoleArray and GetCustomDbRoleInheritedRoleArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRoleInheritedRoleArrayInput` via:
//
//	GetCustomDbRoleInheritedRoleArray{ GetCustomDbRoleInheritedRoleArgs{...} }
type GetCustomDbRoleInheritedRoleArrayInput interface {
	pulumi.Input

	ToGetCustomDbRoleInheritedRoleArrayOutput() GetCustomDbRoleInheritedRoleArrayOutput
	ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(context.Context) GetCustomDbRoleInheritedRoleArrayOutput
}

type GetCustomDbRoleInheritedRoleArray []GetCustomDbRoleInheritedRoleInput

func (GetCustomDbRoleInheritedRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRoleInheritedRoleArray) ToGetCustomDbRoleInheritedRoleArrayOutput() GetCustomDbRoleInheritedRoleArrayOutput {
	return i.ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRoleInheritedRoleArray) ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleInheritedRoleArrayOutput)
}

type GetCustomDbRoleInheritedRoleOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleInheritedRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRoleInheritedRoleOutput) ToGetCustomDbRoleInheritedRoleOutput() GetCustomDbRoleInheritedRoleOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleOutput) ToGetCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleOutput {
	return o
}

// (Required) Database on which the inherited role is granted.
func (o GetCustomDbRoleInheritedRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleInheritedRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Name of the custom role.
func (o GetCustomDbRoleInheritedRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleInheritedRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetCustomDbRoleInheritedRoleArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleInheritedRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRoleInheritedRoleArrayOutput) ToGetCustomDbRoleInheritedRoleArrayOutput() GetCustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleArrayOutput) ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleArrayOutput) Index(i pulumi.IntInput) GetCustomDbRoleInheritedRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRoleInheritedRole {
		return vs[0].([]GetCustomDbRoleInheritedRole)[vs[1].(int)]
	}).(GetCustomDbRoleInheritedRoleOutput)
}

type GetCustomDbRolesResult struct {
	Actions        []GetCustomDbRolesResultAction        `pulumi:"actions"`
	InheritedRoles []GetCustomDbRolesResultInheritedRole `pulumi:"inheritedRoles"`
	// (Required) Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName string `pulumi:"roleName"`
}

// GetCustomDbRolesResultInput is an input type that accepts GetCustomDbRolesResultArgs and GetCustomDbRolesResultOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultInput` via:
//
//	GetCustomDbRolesResultArgs{...}
type GetCustomDbRolesResultInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultOutput() GetCustomDbRolesResultOutput
	ToGetCustomDbRolesResultOutputWithContext(context.Context) GetCustomDbRolesResultOutput
}

type GetCustomDbRolesResultArgs struct {
	Actions        GetCustomDbRolesResultActionArrayInput        `pulumi:"actions"`
	InheritedRoles GetCustomDbRolesResultInheritedRoleArrayInput `pulumi:"inheritedRoles"`
	// (Required) Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (GetCustomDbRolesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResult)(nil)).Elem()
}

func (i GetCustomDbRolesResultArgs) ToGetCustomDbRolesResultOutput() GetCustomDbRolesResultOutput {
	return i.ToGetCustomDbRolesResultOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultArgs) ToGetCustomDbRolesResultOutputWithContext(ctx context.Context) GetCustomDbRolesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultOutput)
}

// GetCustomDbRolesResultArrayInput is an input type that accepts GetCustomDbRolesResultArray and GetCustomDbRolesResultArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultArrayInput` via:
//
//	GetCustomDbRolesResultArray{ GetCustomDbRolesResultArgs{...} }
type GetCustomDbRolesResultArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultArrayOutput() GetCustomDbRolesResultArrayOutput
	ToGetCustomDbRolesResultArrayOutputWithContext(context.Context) GetCustomDbRolesResultArrayOutput
}

type GetCustomDbRolesResultArray []GetCustomDbRolesResultInput

func (GetCustomDbRolesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResult)(nil)).Elem()
}

func (i GetCustomDbRolesResultArray) ToGetCustomDbRolesResultArrayOutput() GetCustomDbRolesResultArrayOutput {
	return i.ToGetCustomDbRolesResultArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultArray) ToGetCustomDbRolesResultArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultArrayOutput)
}

type GetCustomDbRolesResultOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResult)(nil)).Elem()
}

func (o GetCustomDbRolesResultOutput) ToGetCustomDbRolesResultOutput() GetCustomDbRolesResultOutput {
	return o
}

func (o GetCustomDbRolesResultOutput) ToGetCustomDbRolesResultOutputWithContext(ctx context.Context) GetCustomDbRolesResultOutput {
	return o
}

func (o GetCustomDbRolesResultOutput) Actions() GetCustomDbRolesResultActionArrayOutput {
	return o.ApplyT(func(v GetCustomDbRolesResult) []GetCustomDbRolesResultAction { return v.Actions }).(GetCustomDbRolesResultActionArrayOutput)
}

func (o GetCustomDbRolesResultOutput) InheritedRoles() GetCustomDbRolesResultInheritedRoleArrayOutput {
	return o.ApplyT(func(v GetCustomDbRolesResult) []GetCustomDbRolesResultInheritedRole { return v.InheritedRoles }).(GetCustomDbRolesResultInheritedRoleArrayOutput)
}

// (Required) Name of the inherited role. This can either be another custom role or a built-in role.
func (o GetCustomDbRolesResultOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResult) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetCustomDbRolesResultArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResult)(nil)).Elem()
}

func (o GetCustomDbRolesResultArrayOutput) ToGetCustomDbRolesResultArrayOutput() GetCustomDbRolesResultArrayOutput {
	return o
}

func (o GetCustomDbRolesResultArrayOutput) ToGetCustomDbRolesResultArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultArrayOutput {
	return o
}

func (o GetCustomDbRolesResultArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResult {
		return vs[0].([]GetCustomDbRolesResult)[vs[1].(int)]
	}).(GetCustomDbRolesResultOutput)
}

type GetCustomDbRolesResultAction struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action string `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources []GetCustomDbRolesResultActionResource `pulumi:"resources"`
}

// GetCustomDbRolesResultActionInput is an input type that accepts GetCustomDbRolesResultActionArgs and GetCustomDbRolesResultActionOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionInput` via:
//
//	GetCustomDbRolesResultActionArgs{...}
type GetCustomDbRolesResultActionInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionOutput() GetCustomDbRolesResultActionOutput
	ToGetCustomDbRolesResultActionOutputWithContext(context.Context) GetCustomDbRolesResultActionOutput
}

type GetCustomDbRolesResultActionArgs struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action pulumi.StringInput `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources GetCustomDbRolesResultActionResourceArrayInput `pulumi:"resources"`
}

func (GetCustomDbRolesResultActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultAction)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionArgs) ToGetCustomDbRolesResultActionOutput() GetCustomDbRolesResultActionOutput {
	return i.ToGetCustomDbRolesResultActionOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionArgs) ToGetCustomDbRolesResultActionOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionOutput)
}

// GetCustomDbRolesResultActionArrayInput is an input type that accepts GetCustomDbRolesResultActionArray and GetCustomDbRolesResultActionArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionArrayInput` via:
//
//	GetCustomDbRolesResultActionArray{ GetCustomDbRolesResultActionArgs{...} }
type GetCustomDbRolesResultActionArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionArrayOutput() GetCustomDbRolesResultActionArrayOutput
	ToGetCustomDbRolesResultActionArrayOutputWithContext(context.Context) GetCustomDbRolesResultActionArrayOutput
}

type GetCustomDbRolesResultActionArray []GetCustomDbRolesResultActionInput

func (GetCustomDbRolesResultActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultAction)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionArray) ToGetCustomDbRolesResultActionArrayOutput() GetCustomDbRolesResultActionArrayOutput {
	return i.ToGetCustomDbRolesResultActionArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionArray) ToGetCustomDbRolesResultActionArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionArrayOutput)
}

type GetCustomDbRolesResultActionOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultAction)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionOutput) ToGetCustomDbRolesResultActionOutput() GetCustomDbRolesResultActionOutput {
	return o
}

func (o GetCustomDbRolesResultActionOutput) ToGetCustomDbRolesResultActionOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionOutput {
	return o
}

// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
func (o GetCustomDbRolesResultActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultAction) string { return v.Action }).(pulumi.StringOutput)
}

// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
func (o GetCustomDbRolesResultActionOutput) Resources() GetCustomDbRolesResultActionResourceArrayOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultAction) []GetCustomDbRolesResultActionResource { return v.Resources }).(GetCustomDbRolesResultActionResourceArrayOutput)
}

type GetCustomDbRolesResultActionArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultAction)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionArrayOutput) ToGetCustomDbRolesResultActionArrayOutput() GetCustomDbRolesResultActionArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionArrayOutput) ToGetCustomDbRolesResultActionArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResultAction {
		return vs[0].([]GetCustomDbRolesResultAction)[vs[1].(int)]
	}).(GetCustomDbRolesResultActionOutput)
}

type GetCustomDbRolesResultActionResource struct {
	Cluster        bool   `pulumi:"cluster"`
	CollectionName string `pulumi:"collectionName"`
	// (Required) Database on which the inherited role is granted.
	DatabaseName string `pulumi:"databaseName"`
}

// GetCustomDbRolesResultActionResourceInput is an input type that accepts GetCustomDbRolesResultActionResourceArgs and GetCustomDbRolesResultActionResourceOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionResourceInput` via:
//
//	GetCustomDbRolesResultActionResourceArgs{...}
type GetCustomDbRolesResultActionResourceInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionResourceOutput() GetCustomDbRolesResultActionResourceOutput
	ToGetCustomDbRolesResultActionResourceOutputWithContext(context.Context) GetCustomDbRolesResultActionResourceOutput
}

type GetCustomDbRolesResultActionResourceArgs struct {
	Cluster        pulumi.BoolInput   `pulumi:"cluster"`
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// (Required) Database on which the inherited role is granted.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (GetCustomDbRolesResultActionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionResourceArgs) ToGetCustomDbRolesResultActionResourceOutput() GetCustomDbRolesResultActionResourceOutput {
	return i.ToGetCustomDbRolesResultActionResourceOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionResourceArgs) ToGetCustomDbRolesResultActionResourceOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionResourceOutput)
}

// GetCustomDbRolesResultActionResourceArrayInput is an input type that accepts GetCustomDbRolesResultActionResourceArray and GetCustomDbRolesResultActionResourceArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionResourceArrayInput` via:
//
//	GetCustomDbRolesResultActionResourceArray{ GetCustomDbRolesResultActionResourceArgs{...} }
type GetCustomDbRolesResultActionResourceArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionResourceArrayOutput() GetCustomDbRolesResultActionResourceArrayOutput
	ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(context.Context) GetCustomDbRolesResultActionResourceArrayOutput
}

type GetCustomDbRolesResultActionResourceArray []GetCustomDbRolesResultActionResourceInput

func (GetCustomDbRolesResultActionResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionResourceArray) ToGetCustomDbRolesResultActionResourceArrayOutput() GetCustomDbRolesResultActionResourceArrayOutput {
	return i.ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionResourceArray) ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionResourceArrayOutput)
}

type GetCustomDbRolesResultActionResourceOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionResourceOutput) ToGetCustomDbRolesResultActionResourceOutput() GetCustomDbRolesResultActionResourceOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceOutput) ToGetCustomDbRolesResultActionResourceOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceOutput) Cluster() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultActionResource) bool { return v.Cluster }).(pulumi.BoolOutput)
}

func (o GetCustomDbRolesResultActionResourceOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultActionResource) string { return v.CollectionName }).(pulumi.StringOutput)
}

// (Required) Database on which the inherited role is granted.
func (o GetCustomDbRolesResultActionResourceOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultActionResource) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type GetCustomDbRolesResultActionResourceArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionResourceArrayOutput) ToGetCustomDbRolesResultActionResourceArrayOutput() GetCustomDbRolesResultActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceArrayOutput) ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultActionResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResultActionResource {
		return vs[0].([]GetCustomDbRolesResultActionResource)[vs[1].(int)]
	}).(GetCustomDbRolesResultActionResourceOutput)
}

type GetCustomDbRolesResultInheritedRole struct {
	// (Required) Database on which the inherited role is granted.
	DatabaseName string `pulumi:"databaseName"`
	// (Required) Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName string `pulumi:"roleName"`
}

// GetCustomDbRolesResultInheritedRoleInput is an input type that accepts GetCustomDbRolesResultInheritedRoleArgs and GetCustomDbRolesResultInheritedRoleOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultInheritedRoleInput` via:
//
//	GetCustomDbRolesResultInheritedRoleArgs{...}
type GetCustomDbRolesResultInheritedRoleInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultInheritedRoleOutput() GetCustomDbRolesResultInheritedRoleOutput
	ToGetCustomDbRolesResultInheritedRoleOutputWithContext(context.Context) GetCustomDbRolesResultInheritedRoleOutput
}

type GetCustomDbRolesResultInheritedRoleArgs struct {
	// (Required) Database on which the inherited role is granted.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// (Required) Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (GetCustomDbRolesResultInheritedRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRolesResultInheritedRoleArgs) ToGetCustomDbRolesResultInheritedRoleOutput() GetCustomDbRolesResultInheritedRoleOutput {
	return i.ToGetCustomDbRolesResultInheritedRoleOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultInheritedRoleArgs) ToGetCustomDbRolesResultInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultInheritedRoleOutput)
}

// GetCustomDbRolesResultInheritedRoleArrayInput is an input type that accepts GetCustomDbRolesResultInheritedRoleArray and GetCustomDbRolesResultInheritedRoleArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultInheritedRoleArrayInput` via:
//
//	GetCustomDbRolesResultInheritedRoleArray{ GetCustomDbRolesResultInheritedRoleArgs{...} }
type GetCustomDbRolesResultInheritedRoleArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultInheritedRoleArrayOutput() GetCustomDbRolesResultInheritedRoleArrayOutput
	ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(context.Context) GetCustomDbRolesResultInheritedRoleArrayOutput
}

type GetCustomDbRolesResultInheritedRoleArray []GetCustomDbRolesResultInheritedRoleInput

func (GetCustomDbRolesResultInheritedRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRolesResultInheritedRoleArray) ToGetCustomDbRolesResultInheritedRoleArrayOutput() GetCustomDbRolesResultInheritedRoleArrayOutput {
	return i.ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultInheritedRoleArray) ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultInheritedRoleArrayOutput)
}

type GetCustomDbRolesResultInheritedRoleOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultInheritedRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRolesResultInheritedRoleOutput) ToGetCustomDbRolesResultInheritedRoleOutput() GetCustomDbRolesResultInheritedRoleOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleOutput) ToGetCustomDbRolesResultInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleOutput {
	return o
}

// (Required) Database on which the inherited role is granted.
func (o GetCustomDbRolesResultInheritedRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultInheritedRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// (Required) Name of the inherited role. This can either be another custom role or a built-in role.
func (o GetCustomDbRolesResultInheritedRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultInheritedRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetCustomDbRolesResultInheritedRoleArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultInheritedRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRolesResultInheritedRoleArrayOutput) ToGetCustomDbRolesResultInheritedRoleArrayOutput() GetCustomDbRolesResultInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleArrayOutput) ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultInheritedRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResultInheritedRole {
		return vs[0].([]GetCustomDbRolesResultInheritedRole)[vs[1].(int)]
	}).(GetCustomDbRolesResultInheritedRoleOutput)
}

type GetDataLakeAw struct {
	ExternalId        string `pulumi:"externalId"`
	IamAssumedRoleArn string `pulumi:"iamAssumedRoleArn"`
	IamUserArn        string `pulumi:"iamUserArn"`
	RoleId            string `pulumi:"roleId"`
	TestS3Bucket      string `pulumi:"testS3Bucket"`
}

// GetDataLakeAwInput is an input type that accepts GetDataLakeAwArgs and GetDataLakeAwOutput values.
// You can construct a concrete instance of `GetDataLakeAwInput` via:
//
//	GetDataLakeAwArgs{...}
type GetDataLakeAwInput interface {
	pulumi.Input

	ToGetDataLakeAwOutput() GetDataLakeAwOutput
	ToGetDataLakeAwOutputWithContext(context.Context) GetDataLakeAwOutput
}

type GetDataLakeAwArgs struct {
	ExternalId        pulumi.StringInput `pulumi:"externalId"`
	IamAssumedRoleArn pulumi.StringInput `pulumi:"iamAssumedRoleArn"`
	IamUserArn        pulumi.StringInput `pulumi:"iamUserArn"`
	RoleId            pulumi.StringInput `pulumi:"roleId"`
	TestS3Bucket      pulumi.StringInput `pulumi:"testS3Bucket"`
}

func (GetDataLakeAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeAw)(nil)).Elem()
}

func (i GetDataLakeAwArgs) ToGetDataLakeAwOutput() GetDataLakeAwOutput {
	return i.ToGetDataLakeAwOutputWithContext(context.Background())
}

func (i GetDataLakeAwArgs) ToGetDataLakeAwOutputWithContext(ctx context.Context) GetDataLakeAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeAwOutput)
}

// GetDataLakeAwArrayInput is an input type that accepts GetDataLakeAwArray and GetDataLakeAwArrayOutput values.
// You can construct a concrete instance of `GetDataLakeAwArrayInput` via:
//
//	GetDataLakeAwArray{ GetDataLakeAwArgs{...} }
type GetDataLakeAwArrayInput interface {
	pulumi.Input

	ToGetDataLakeAwArrayOutput() GetDataLakeAwArrayOutput
	ToGetDataLakeAwArrayOutputWithContext(context.Context) GetDataLakeAwArrayOutput
}

type GetDataLakeAwArray []GetDataLakeAwInput

func (GetDataLakeAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeAw)(nil)).Elem()
}

func (i GetDataLakeAwArray) ToGetDataLakeAwArrayOutput() GetDataLakeAwArrayOutput {
	return i.ToGetDataLakeAwArrayOutputWithContext(context.Background())
}

func (i GetDataLakeAwArray) ToGetDataLakeAwArrayOutputWithContext(ctx context.Context) GetDataLakeAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeAwArrayOutput)
}

type GetDataLakeAwOutput struct{ *pulumi.OutputState }

func (GetDataLakeAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeAw)(nil)).Elem()
}

func (o GetDataLakeAwOutput) ToGetDataLakeAwOutput() GetDataLakeAwOutput {
	return o
}

func (o GetDataLakeAwOutput) ToGetDataLakeAwOutputWithContext(ctx context.Context) GetDataLakeAwOutput {
	return o
}

func (o GetDataLakeAwOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetDataLakeAwOutput) IamAssumedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.IamAssumedRoleArn }).(pulumi.StringOutput)
}

func (o GetDataLakeAwOutput) IamUserArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.IamUserArn }).(pulumi.StringOutput)
}

func (o GetDataLakeAwOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o GetDataLakeAwOutput) TestS3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.TestS3Bucket }).(pulumi.StringOutput)
}

type GetDataLakeAwArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeAw)(nil)).Elem()
}

func (o GetDataLakeAwArrayOutput) ToGetDataLakeAwArrayOutput() GetDataLakeAwArrayOutput {
	return o
}

func (o GetDataLakeAwArrayOutput) ToGetDataLakeAwArrayOutputWithContext(ctx context.Context) GetDataLakeAwArrayOutput {
	return o
}

func (o GetDataLakeAwArrayOutput) Index(i pulumi.IntInput) GetDataLakeAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeAw {
		return vs[0].([]GetDataLakeAw)[vs[1].(int)]
	}).(GetDataLakeAwOutput)
}

type GetDataLakeDataProcessRegion struct {
	CloudProvider string `pulumi:"cloudProvider"`
	Region        string `pulumi:"region"`
}

// GetDataLakeDataProcessRegionInput is an input type that accepts GetDataLakeDataProcessRegionArgs and GetDataLakeDataProcessRegionOutput values.
// You can construct a concrete instance of `GetDataLakeDataProcessRegionInput` via:
//
//	GetDataLakeDataProcessRegionArgs{...}
type GetDataLakeDataProcessRegionInput interface {
	pulumi.Input

	ToGetDataLakeDataProcessRegionOutput() GetDataLakeDataProcessRegionOutput
	ToGetDataLakeDataProcessRegionOutputWithContext(context.Context) GetDataLakeDataProcessRegionOutput
}

type GetDataLakeDataProcessRegionArgs struct {
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	Region        pulumi.StringInput `pulumi:"region"`
}

func (GetDataLakeDataProcessRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeDataProcessRegion)(nil)).Elem()
}

func (i GetDataLakeDataProcessRegionArgs) ToGetDataLakeDataProcessRegionOutput() GetDataLakeDataProcessRegionOutput {
	return i.ToGetDataLakeDataProcessRegionOutputWithContext(context.Background())
}

func (i GetDataLakeDataProcessRegionArgs) ToGetDataLakeDataProcessRegionOutputWithContext(ctx context.Context) GetDataLakeDataProcessRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeDataProcessRegionOutput)
}

// GetDataLakeDataProcessRegionArrayInput is an input type that accepts GetDataLakeDataProcessRegionArray and GetDataLakeDataProcessRegionArrayOutput values.
// You can construct a concrete instance of `GetDataLakeDataProcessRegionArrayInput` via:
//
//	GetDataLakeDataProcessRegionArray{ GetDataLakeDataProcessRegionArgs{...} }
type GetDataLakeDataProcessRegionArrayInput interface {
	pulumi.Input

	ToGetDataLakeDataProcessRegionArrayOutput() GetDataLakeDataProcessRegionArrayOutput
	ToGetDataLakeDataProcessRegionArrayOutputWithContext(context.Context) GetDataLakeDataProcessRegionArrayOutput
}

type GetDataLakeDataProcessRegionArray []GetDataLakeDataProcessRegionInput

func (GetDataLakeDataProcessRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeDataProcessRegion)(nil)).Elem()
}

func (i GetDataLakeDataProcessRegionArray) ToGetDataLakeDataProcessRegionArrayOutput() GetDataLakeDataProcessRegionArrayOutput {
	return i.ToGetDataLakeDataProcessRegionArrayOutputWithContext(context.Background())
}

func (i GetDataLakeDataProcessRegionArray) ToGetDataLakeDataProcessRegionArrayOutputWithContext(ctx context.Context) GetDataLakeDataProcessRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeDataProcessRegionArrayOutput)
}

type GetDataLakeDataProcessRegionOutput struct{ *pulumi.OutputState }

func (GetDataLakeDataProcessRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeDataProcessRegion)(nil)).Elem()
}

func (o GetDataLakeDataProcessRegionOutput) ToGetDataLakeDataProcessRegionOutput() GetDataLakeDataProcessRegionOutput {
	return o
}

func (o GetDataLakeDataProcessRegionOutput) ToGetDataLakeDataProcessRegionOutputWithContext(ctx context.Context) GetDataLakeDataProcessRegionOutput {
	return o
}

func (o GetDataLakeDataProcessRegionOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeDataProcessRegion) string { return v.CloudProvider }).(pulumi.StringOutput)
}

func (o GetDataLakeDataProcessRegionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeDataProcessRegion) string { return v.Region }).(pulumi.StringOutput)
}

type GetDataLakeDataProcessRegionArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeDataProcessRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeDataProcessRegion)(nil)).Elem()
}

func (o GetDataLakeDataProcessRegionArrayOutput) ToGetDataLakeDataProcessRegionArrayOutput() GetDataLakeDataProcessRegionArrayOutput {
	return o
}

func (o GetDataLakeDataProcessRegionArrayOutput) ToGetDataLakeDataProcessRegionArrayOutputWithContext(ctx context.Context) GetDataLakeDataProcessRegionArrayOutput {
	return o
}

func (o GetDataLakeDataProcessRegionArrayOutput) Index(i pulumi.IntInput) GetDataLakeDataProcessRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeDataProcessRegion {
		return vs[0].([]GetDataLakeDataProcessRegion)[vs[1].(int)]
	}).(GetDataLakeDataProcessRegionOutput)
}

type GetDataLakeStorageDatabase struct {
	Collections            []GetDataLakeStorageDatabaseCollection `pulumi:"collections"`
	MaxWildcardCollections int                                    `pulumi:"maxWildcardCollections"`
	// Name of the data lake.
	Name  string                           `pulumi:"name"`
	Views []GetDataLakeStorageDatabaseView `pulumi:"views"`
}

// GetDataLakeStorageDatabaseInput is an input type that accepts GetDataLakeStorageDatabaseArgs and GetDataLakeStorageDatabaseOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseInput` via:
//
//	GetDataLakeStorageDatabaseArgs{...}
type GetDataLakeStorageDatabaseInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseOutput() GetDataLakeStorageDatabaseOutput
	ToGetDataLakeStorageDatabaseOutputWithContext(context.Context) GetDataLakeStorageDatabaseOutput
}

type GetDataLakeStorageDatabaseArgs struct {
	Collections            GetDataLakeStorageDatabaseCollectionArrayInput `pulumi:"collections"`
	MaxWildcardCollections pulumi.IntInput                                `pulumi:"maxWildcardCollections"`
	// Name of the data lake.
	Name  pulumi.StringInput                       `pulumi:"name"`
	Views GetDataLakeStorageDatabaseViewArrayInput `pulumi:"views"`
}

func (GetDataLakeStorageDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabase)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseArgs) ToGetDataLakeStorageDatabaseOutput() GetDataLakeStorageDatabaseOutput {
	return i.ToGetDataLakeStorageDatabaseOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseArgs) ToGetDataLakeStorageDatabaseOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseOutput)
}

// GetDataLakeStorageDatabaseArrayInput is an input type that accepts GetDataLakeStorageDatabaseArray and GetDataLakeStorageDatabaseArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseArrayInput` via:
//
//	GetDataLakeStorageDatabaseArray{ GetDataLakeStorageDatabaseArgs{...} }
type GetDataLakeStorageDatabaseArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseArrayOutput() GetDataLakeStorageDatabaseArrayOutput
	ToGetDataLakeStorageDatabaseArrayOutputWithContext(context.Context) GetDataLakeStorageDatabaseArrayOutput
}

type GetDataLakeStorageDatabaseArray []GetDataLakeStorageDatabaseInput

func (GetDataLakeStorageDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabase)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseArray) ToGetDataLakeStorageDatabaseArrayOutput() GetDataLakeStorageDatabaseArrayOutput {
	return i.ToGetDataLakeStorageDatabaseArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseArray) ToGetDataLakeStorageDatabaseArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseArrayOutput)
}

type GetDataLakeStorageDatabaseOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabase)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseOutput) ToGetDataLakeStorageDatabaseOutput() GetDataLakeStorageDatabaseOutput {
	return o
}

func (o GetDataLakeStorageDatabaseOutput) ToGetDataLakeStorageDatabaseOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseOutput {
	return o
}

func (o GetDataLakeStorageDatabaseOutput) Collections() GetDataLakeStorageDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabase) []GetDataLakeStorageDatabaseCollection { return v.Collections }).(GetDataLakeStorageDatabaseCollectionArrayOutput)
}

func (o GetDataLakeStorageDatabaseOutput) MaxWildcardCollections() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabase) int { return v.MaxWildcardCollections }).(pulumi.IntOutput)
}

// Name of the data lake.
func (o GetDataLakeStorageDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabase) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseOutput) Views() GetDataLakeStorageDatabaseViewArrayOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabase) []GetDataLakeStorageDatabaseView { return v.Views }).(GetDataLakeStorageDatabaseViewArrayOutput)
}

type GetDataLakeStorageDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabase)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseArrayOutput) ToGetDataLakeStorageDatabaseArrayOutput() GetDataLakeStorageDatabaseArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseArrayOutput) ToGetDataLakeStorageDatabaseArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageDatabase {
		return vs[0].([]GetDataLakeStorageDatabase)[vs[1].(int)]
	}).(GetDataLakeStorageDatabaseOutput)
}

type GetDataLakeStorageDatabaseCollection struct {
	DataSources []GetDataLakeStorageDatabaseCollectionDataSource `pulumi:"dataSources"`
	// Name of the data lake.
	Name string `pulumi:"name"`
}

// GetDataLakeStorageDatabaseCollectionInput is an input type that accepts GetDataLakeStorageDatabaseCollectionArgs and GetDataLakeStorageDatabaseCollectionOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseCollectionInput` via:
//
//	GetDataLakeStorageDatabaseCollectionArgs{...}
type GetDataLakeStorageDatabaseCollectionInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseCollectionOutput() GetDataLakeStorageDatabaseCollectionOutput
	ToGetDataLakeStorageDatabaseCollectionOutputWithContext(context.Context) GetDataLakeStorageDatabaseCollectionOutput
}

type GetDataLakeStorageDatabaseCollectionArgs struct {
	DataSources GetDataLakeStorageDatabaseCollectionDataSourceArrayInput `pulumi:"dataSources"`
	// Name of the data lake.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDataLakeStorageDatabaseCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseCollectionArgs) ToGetDataLakeStorageDatabaseCollectionOutput() GetDataLakeStorageDatabaseCollectionOutput {
	return i.ToGetDataLakeStorageDatabaseCollectionOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseCollectionArgs) ToGetDataLakeStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseCollectionOutput)
}

// GetDataLakeStorageDatabaseCollectionArrayInput is an input type that accepts GetDataLakeStorageDatabaseCollectionArray and GetDataLakeStorageDatabaseCollectionArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseCollectionArrayInput` via:
//
//	GetDataLakeStorageDatabaseCollectionArray{ GetDataLakeStorageDatabaseCollectionArgs{...} }
type GetDataLakeStorageDatabaseCollectionArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseCollectionArrayOutput() GetDataLakeStorageDatabaseCollectionArrayOutput
	ToGetDataLakeStorageDatabaseCollectionArrayOutputWithContext(context.Context) GetDataLakeStorageDatabaseCollectionArrayOutput
}

type GetDataLakeStorageDatabaseCollectionArray []GetDataLakeStorageDatabaseCollectionInput

func (GetDataLakeStorageDatabaseCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseCollectionArray) ToGetDataLakeStorageDatabaseCollectionArrayOutput() GetDataLakeStorageDatabaseCollectionArrayOutput {
	return i.ToGetDataLakeStorageDatabaseCollectionArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseCollectionArray) ToGetDataLakeStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseCollectionArrayOutput)
}

type GetDataLakeStorageDatabaseCollectionOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseCollectionOutput) ToGetDataLakeStorageDatabaseCollectionOutput() GetDataLakeStorageDatabaseCollectionOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionOutput) ToGetDataLakeStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionOutput) DataSources() GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollection) []GetDataLakeStorageDatabaseCollectionDataSource {
		return v.DataSources
	}).(GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput)
}

// Name of the data lake.
func (o GetDataLakeStorageDatabaseCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollection) string { return v.Name }).(pulumi.StringOutput)
}

type GetDataLakeStorageDatabaseCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseCollectionArrayOutput) ToGetDataLakeStorageDatabaseCollectionArrayOutput() GetDataLakeStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionArrayOutput) ToGetDataLakeStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageDatabaseCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageDatabaseCollection {
		return vs[0].([]GetDataLakeStorageDatabaseCollection)[vs[1].(int)]
	}).(GetDataLakeStorageDatabaseCollectionOutput)
}

type GetDataLakeStorageDatabaseCollectionDataSource struct {
	DefaultFormat string `pulumi:"defaultFormat"`
	Path          string `pulumi:"path"`
	StoreName     string `pulumi:"storeName"`
}

// GetDataLakeStorageDatabaseCollectionDataSourceInput is an input type that accepts GetDataLakeStorageDatabaseCollectionDataSourceArgs and GetDataLakeStorageDatabaseCollectionDataSourceOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseCollectionDataSourceInput` via:
//
//	GetDataLakeStorageDatabaseCollectionDataSourceArgs{...}
type GetDataLakeStorageDatabaseCollectionDataSourceInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseCollectionDataSourceOutput() GetDataLakeStorageDatabaseCollectionDataSourceOutput
	ToGetDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(context.Context) GetDataLakeStorageDatabaseCollectionDataSourceOutput
}

type GetDataLakeStorageDatabaseCollectionDataSourceArgs struct {
	DefaultFormat pulumi.StringInput `pulumi:"defaultFormat"`
	Path          pulumi.StringInput `pulumi:"path"`
	StoreName     pulumi.StringInput `pulumi:"storeName"`
}

func (GetDataLakeStorageDatabaseCollectionDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseCollectionDataSourceArgs) ToGetDataLakeStorageDatabaseCollectionDataSourceOutput() GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return i.ToGetDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseCollectionDataSourceArgs) ToGetDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseCollectionDataSourceOutput)
}

// GetDataLakeStorageDatabaseCollectionDataSourceArrayInput is an input type that accepts GetDataLakeStorageDatabaseCollectionDataSourceArray and GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseCollectionDataSourceArrayInput` via:
//
//	GetDataLakeStorageDatabaseCollectionDataSourceArray{ GetDataLakeStorageDatabaseCollectionDataSourceArgs{...} }
type GetDataLakeStorageDatabaseCollectionDataSourceArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput
	ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Context) GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput
}

type GetDataLakeStorageDatabaseCollectionDataSourceArray []GetDataLakeStorageDatabaseCollectionDataSourceInput

func (GetDataLakeStorageDatabaseCollectionDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseCollectionDataSourceArray) ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return i.ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseCollectionDataSourceArray) ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput)
}

type GetDataLakeStorageDatabaseCollectionDataSourceOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseCollectionDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) ToGetDataLakeStorageDatabaseCollectionDataSourceOutput() GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) ToGetDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) DefaultFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollectionDataSource) string { return v.DefaultFormat }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollectionDataSource) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollectionDataSource) string { return v.StoreName }).(pulumi.StringOutput)
}

type GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput) ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput) ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageDatabaseCollectionDataSource {
		return vs[0].([]GetDataLakeStorageDatabaseCollectionDataSource)[vs[1].(int)]
	}).(GetDataLakeStorageDatabaseCollectionDataSourceOutput)
}

type GetDataLakeStorageDatabaseView struct {
	// Name of the data lake.
	Name     string `pulumi:"name"`
	Pipeline string `pulumi:"pipeline"`
	Source   string `pulumi:"source"`
}

// GetDataLakeStorageDatabaseViewInput is an input type that accepts GetDataLakeStorageDatabaseViewArgs and GetDataLakeStorageDatabaseViewOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseViewInput` via:
//
//	GetDataLakeStorageDatabaseViewArgs{...}
type GetDataLakeStorageDatabaseViewInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseViewOutput() GetDataLakeStorageDatabaseViewOutput
	ToGetDataLakeStorageDatabaseViewOutputWithContext(context.Context) GetDataLakeStorageDatabaseViewOutput
}

type GetDataLakeStorageDatabaseViewArgs struct {
	// Name of the data lake.
	Name     pulumi.StringInput `pulumi:"name"`
	Pipeline pulumi.StringInput `pulumi:"pipeline"`
	Source   pulumi.StringInput `pulumi:"source"`
}

func (GetDataLakeStorageDatabaseViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseView)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseViewArgs) ToGetDataLakeStorageDatabaseViewOutput() GetDataLakeStorageDatabaseViewOutput {
	return i.ToGetDataLakeStorageDatabaseViewOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseViewArgs) ToGetDataLakeStorageDatabaseViewOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseViewOutput)
}

// GetDataLakeStorageDatabaseViewArrayInput is an input type that accepts GetDataLakeStorageDatabaseViewArray and GetDataLakeStorageDatabaseViewArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseViewArrayInput` via:
//
//	GetDataLakeStorageDatabaseViewArray{ GetDataLakeStorageDatabaseViewArgs{...} }
type GetDataLakeStorageDatabaseViewArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseViewArrayOutput() GetDataLakeStorageDatabaseViewArrayOutput
	ToGetDataLakeStorageDatabaseViewArrayOutputWithContext(context.Context) GetDataLakeStorageDatabaseViewArrayOutput
}

type GetDataLakeStorageDatabaseViewArray []GetDataLakeStorageDatabaseViewInput

func (GetDataLakeStorageDatabaseViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseView)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseViewArray) ToGetDataLakeStorageDatabaseViewArrayOutput() GetDataLakeStorageDatabaseViewArrayOutput {
	return i.ToGetDataLakeStorageDatabaseViewArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseViewArray) ToGetDataLakeStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseViewArrayOutput)
}

type GetDataLakeStorageDatabaseViewOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseView)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseViewOutput) ToGetDataLakeStorageDatabaseViewOutput() GetDataLakeStorageDatabaseViewOutput {
	return o
}

func (o GetDataLakeStorageDatabaseViewOutput) ToGetDataLakeStorageDatabaseViewOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseViewOutput {
	return o
}

// Name of the data lake.
func (o GetDataLakeStorageDatabaseViewOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseView) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseViewOutput) Pipeline() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseView) string { return v.Pipeline }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseViewOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseView) string { return v.Source }).(pulumi.StringOutput)
}

type GetDataLakeStorageDatabaseViewArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseView)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseViewArrayOutput) ToGetDataLakeStorageDatabaseViewArrayOutput() GetDataLakeStorageDatabaseViewArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseViewArrayOutput) ToGetDataLakeStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseViewArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseViewArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageDatabaseViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageDatabaseView {
		return vs[0].([]GetDataLakeStorageDatabaseView)[vs[1].(int)]
	}).(GetDataLakeStorageDatabaseViewOutput)
}

type GetDataLakeStorageStore struct {
	AdditionalStorageClasses []string `pulumi:"additionalStorageClasses"`
	Bucket                   string   `pulumi:"bucket"`
	Delimiter                string   `pulumi:"delimiter"`
	IncludeTags              bool     `pulumi:"includeTags"`
	// Name of the data lake.
	Name     string `pulumi:"name"`
	Prefix   string `pulumi:"prefix"`
	Provider string `pulumi:"provider"`
	Region   string `pulumi:"region"`
}

// GetDataLakeStorageStoreInput is an input type that accepts GetDataLakeStorageStoreArgs and GetDataLakeStorageStoreOutput values.
// You can construct a concrete instance of `GetDataLakeStorageStoreInput` via:
//
//	GetDataLakeStorageStoreArgs{...}
type GetDataLakeStorageStoreInput interface {
	pulumi.Input

	ToGetDataLakeStorageStoreOutput() GetDataLakeStorageStoreOutput
	ToGetDataLakeStorageStoreOutputWithContext(context.Context) GetDataLakeStorageStoreOutput
}

type GetDataLakeStorageStoreArgs struct {
	AdditionalStorageClasses pulumi.StringArrayInput `pulumi:"additionalStorageClasses"`
	Bucket                   pulumi.StringInput      `pulumi:"bucket"`
	Delimiter                pulumi.StringInput      `pulumi:"delimiter"`
	IncludeTags              pulumi.BoolInput        `pulumi:"includeTags"`
	// Name of the data lake.
	Name     pulumi.StringInput `pulumi:"name"`
	Prefix   pulumi.StringInput `pulumi:"prefix"`
	Provider pulumi.StringInput `pulumi:"provider"`
	Region   pulumi.StringInput `pulumi:"region"`
}

func (GetDataLakeStorageStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageStore)(nil)).Elem()
}

func (i GetDataLakeStorageStoreArgs) ToGetDataLakeStorageStoreOutput() GetDataLakeStorageStoreOutput {
	return i.ToGetDataLakeStorageStoreOutputWithContext(context.Background())
}

func (i GetDataLakeStorageStoreArgs) ToGetDataLakeStorageStoreOutputWithContext(ctx context.Context) GetDataLakeStorageStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageStoreOutput)
}

// GetDataLakeStorageStoreArrayInput is an input type that accepts GetDataLakeStorageStoreArray and GetDataLakeStorageStoreArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageStoreArrayInput` via:
//
//	GetDataLakeStorageStoreArray{ GetDataLakeStorageStoreArgs{...} }
type GetDataLakeStorageStoreArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageStoreArrayOutput() GetDataLakeStorageStoreArrayOutput
	ToGetDataLakeStorageStoreArrayOutputWithContext(context.Context) GetDataLakeStorageStoreArrayOutput
}

type GetDataLakeStorageStoreArray []GetDataLakeStorageStoreInput

func (GetDataLakeStorageStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageStore)(nil)).Elem()
}

func (i GetDataLakeStorageStoreArray) ToGetDataLakeStorageStoreArrayOutput() GetDataLakeStorageStoreArrayOutput {
	return i.ToGetDataLakeStorageStoreArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageStoreArray) ToGetDataLakeStorageStoreArrayOutputWithContext(ctx context.Context) GetDataLakeStorageStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageStoreArrayOutput)
}

type GetDataLakeStorageStoreOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageStore)(nil)).Elem()
}

func (o GetDataLakeStorageStoreOutput) ToGetDataLakeStorageStoreOutput() GetDataLakeStorageStoreOutput {
	return o
}

func (o GetDataLakeStorageStoreOutput) ToGetDataLakeStorageStoreOutputWithContext(ctx context.Context) GetDataLakeStorageStoreOutput {
	return o
}

func (o GetDataLakeStorageStoreOutput) AdditionalStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) []string { return v.AdditionalStorageClasses }).(pulumi.StringArrayOutput)
}

func (o GetDataLakeStorageStoreOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Delimiter }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) IncludeTags() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) bool { return v.IncludeTags }).(pulumi.BoolOutput)
}

// Name of the data lake.
func (o GetDataLakeStorageStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Provider }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Region }).(pulumi.StringOutput)
}

type GetDataLakeStorageStoreArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageStore)(nil)).Elem()
}

func (o GetDataLakeStorageStoreArrayOutput) ToGetDataLakeStorageStoreArrayOutput() GetDataLakeStorageStoreArrayOutput {
	return o
}

func (o GetDataLakeStorageStoreArrayOutput) ToGetDataLakeStorageStoreArrayOutputWithContext(ctx context.Context) GetDataLakeStorageStoreArrayOutput {
	return o
}

func (o GetDataLakeStorageStoreArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageStore {
		return vs[0].([]GetDataLakeStorageStore)[vs[1].(int)]
	}).(GetDataLakeStorageStoreOutput)
}

type GetDataLakesResult struct {
	Aws []GetDataLakesResultAw `pulumi:"aws"`
	// The cloud provider region to which Atlas Data Lake routes client connections for data processing.
	// * `data_process_region.0.cloud_provider` - Name of the cloud service provider.
	// * `data_process_region.0.region` -Name of the region to which Data Lake routes client connections for data processing.
	DataProcessRegions []GetDataLakesResultDataProcessRegion `pulumi:"dataProcessRegions"`
	// The list of hostnames assigned to the Atlas Data Lake. Each string in the array is a hostname assigned to the Atlas Data Lake.
	Hostnames []string `pulumi:"hostnames"`
	Name      string   `pulumi:"name"`
	// The unique ID for the project to get all data lakes.
	ProjectId string `pulumi:"projectId"`
	// Current state of the Atlas Data Lake:
	State string `pulumi:"state"`
	// Configuration details for mapping each data store to queryable databases and collections.
	// * `storage_databases.#.name` - Name of the database to which Data Lake maps the data contained in the data store.
	// * `storage_databases.#.collections` -     Array of objects where each object represents a collection and data sources that map to a [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#mongodb-datalakeconf-datalakeconf.stores) data store.
	// * `storage_databases.#.collections.#.name` - Name of the collection.
	// * `storage_databases.#.collections.#.data_sources` -     Array of objects where each object represents a stores data store to map with the collection.
	// * `storage_databases.#.collections.#.data_sources.#.store_name` -     Name of a data store to map to the `<collection>`.
	// * `storage_databases.#.collections.#.data_sources.#.default_format` - Default format that Data Lake assumes if it encounters a file without an extension while searching the storeName.
	// * `storage_databases.#.collections.#.data_sources.#.path` - Controls how Atlas Data Lake searches for and parses files in the storeName before mapping them to the `<collection>`.
	// * `storage_databases.#.views` -     Array of objects where each object represents an [aggregation pipeline](https://docs.mongodb.com/manual/core/aggregation-pipeline/#id1) on a collection.
	// * `storage_databases.#.views.#.name` - Name of the view.
	// * `storage_databases.#.views.#.source` -  Name of the source collection for the view.
	// * `storage_databases.#.views.#.pipeline`- Aggregation pipeline stage(s) to apply to the source collection.
	StorageDatabases []GetDataLakesResultStorageDatabase `pulumi:"storageDatabases"`
	// Each object in the array represents a data store. Data Lake uses the storage.databases configuration details to map data in each data store to queryable databases and collections.
	// * `storage_stores.#.name` - Name of the data store.
	// * `storage_stores.#.provider` - Defines where the data is stored.
	// * `storage_stores.#.region` - Name of the AWS region in which the S3 bucket is hosted.
	// * `storage_stores.#.bucket` - Name of the AWS S3 bucket.
	// * `storage_stores.#.prefix` - Prefix Data Lake applies when searching for files in the S3 bucket .
	// * `storage_stores.#.delimiter` - The delimiter that separates `storage_databases.#.collections.#.data_sources.#.path` segments in the data store.
	// * `storage_stores.#.include_tags` - Determines whether or not to use S3 tags on the files in the given path as additional partition attributes.
	StorageStores []GetDataLakesResultStorageStore `pulumi:"storageStores"`
}

// GetDataLakesResultInput is an input type that accepts GetDataLakesResultArgs and GetDataLakesResultOutput values.
// You can construct a concrete instance of `GetDataLakesResultInput` via:
//
//	GetDataLakesResultArgs{...}
type GetDataLakesResultInput interface {
	pulumi.Input

	ToGetDataLakesResultOutput() GetDataLakesResultOutput
	ToGetDataLakesResultOutputWithContext(context.Context) GetDataLakesResultOutput
}

type GetDataLakesResultArgs struct {
	Aws GetDataLakesResultAwArrayInput `pulumi:"aws"`
	// The cloud provider region to which Atlas Data Lake routes client connections for data processing.
	// * `data_process_region.0.cloud_provider` - Name of the cloud service provider.
	// * `data_process_region.0.region` -Name of the region to which Data Lake routes client connections for data processing.
	DataProcessRegions GetDataLakesResultDataProcessRegionArrayInput `pulumi:"dataProcessRegions"`
	// The list of hostnames assigned to the Atlas Data Lake. Each string in the array is a hostname assigned to the Atlas Data Lake.
	Hostnames pulumi.StringArrayInput `pulumi:"hostnames"`
	Name      pulumi.StringInput      `pulumi:"name"`
	// The unique ID for the project to get all data lakes.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Current state of the Atlas Data Lake:
	State pulumi.StringInput `pulumi:"state"`
	// Configuration details for mapping each data store to queryable databases and collections.
	// * `storage_databases.#.name` - Name of the database to which Data Lake maps the data contained in the data store.
	// * `storage_databases.#.collections` -     Array of objects where each object represents a collection and data sources that map to a [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#mongodb-datalakeconf-datalakeconf.stores) data store.
	// * `storage_databases.#.collections.#.name` - Name of the collection.
	// * `storage_databases.#.collections.#.data_sources` -     Array of objects where each object represents a stores data store to map with the collection.
	// * `storage_databases.#.collections.#.data_sources.#.store_name` -     Name of a data store to map to the `<collection>`.
	// * `storage_databases.#.collections.#.data_sources.#.default_format` - Default format that Data Lake assumes if it encounters a file without an extension while searching the storeName.
	// * `storage_databases.#.collections.#.data_sources.#.path` - Controls how Atlas Data Lake searches for and parses files in the storeName before mapping them to the `<collection>`.
	// * `storage_databases.#.views` -     Array of objects where each object represents an [aggregation pipeline](https://docs.mongodb.com/manual/core/aggregation-pipeline/#id1) on a collection.
	// * `storage_databases.#.views.#.name` - Name of the view.
	// * `storage_databases.#.views.#.source` -  Name of the source collection for the view.
	// * `storage_databases.#.views.#.pipeline`- Aggregation pipeline stage(s) to apply to the source collection.
	StorageDatabases GetDataLakesResultStorageDatabaseArrayInput `pulumi:"storageDatabases"`
	// Each object in the array represents a data store. Data Lake uses the storage.databases configuration details to map data in each data store to queryable databases and collections.
	// * `storage_stores.#.name` - Name of the data store.
	// * `storage_stores.#.provider` - Defines where the data is stored.
	// * `storage_stores.#.region` - Name of the AWS region in which the S3 bucket is hosted.
	// * `storage_stores.#.bucket` - Name of the AWS S3 bucket.
	// * `storage_stores.#.prefix` - Prefix Data Lake applies when searching for files in the S3 bucket .
	// * `storage_stores.#.delimiter` - The delimiter that separates `storage_databases.#.collections.#.data_sources.#.path` segments in the data store.
	// * `storage_stores.#.include_tags` - Determines whether or not to use S3 tags on the files in the given path as additional partition attributes.
	StorageStores GetDataLakesResultStorageStoreArrayInput `pulumi:"storageStores"`
}

func (GetDataLakesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResult)(nil)).Elem()
}

func (i GetDataLakesResultArgs) ToGetDataLakesResultOutput() GetDataLakesResultOutput {
	return i.ToGetDataLakesResultOutputWithContext(context.Background())
}

func (i GetDataLakesResultArgs) ToGetDataLakesResultOutputWithContext(ctx context.Context) GetDataLakesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultOutput)
}

// GetDataLakesResultArrayInput is an input type that accepts GetDataLakesResultArray and GetDataLakesResultArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultArrayInput` via:
//
//	GetDataLakesResultArray{ GetDataLakesResultArgs{...} }
type GetDataLakesResultArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultArrayOutput() GetDataLakesResultArrayOutput
	ToGetDataLakesResultArrayOutputWithContext(context.Context) GetDataLakesResultArrayOutput
}

type GetDataLakesResultArray []GetDataLakesResultInput

func (GetDataLakesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResult)(nil)).Elem()
}

func (i GetDataLakesResultArray) ToGetDataLakesResultArrayOutput() GetDataLakesResultArrayOutput {
	return i.ToGetDataLakesResultArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultArray) ToGetDataLakesResultArrayOutputWithContext(ctx context.Context) GetDataLakesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultArrayOutput)
}

type GetDataLakesResultOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResult)(nil)).Elem()
}

func (o GetDataLakesResultOutput) ToGetDataLakesResultOutput() GetDataLakesResultOutput {
	return o
}

func (o GetDataLakesResultOutput) ToGetDataLakesResultOutputWithContext(ctx context.Context) GetDataLakesResultOutput {
	return o
}

func (o GetDataLakesResultOutput) Aws() GetDataLakesResultAwArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []GetDataLakesResultAw { return v.Aws }).(GetDataLakesResultAwArrayOutput)
}

// The cloud provider region to which Atlas Data Lake routes client connections for data processing.
// * `data_process_region.0.cloud_provider` - Name of the cloud service provider.
// * `data_process_region.0.region` -Name of the region to which Data Lake routes client connections for data processing.
func (o GetDataLakesResultOutput) DataProcessRegions() GetDataLakesResultDataProcessRegionArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []GetDataLakesResultDataProcessRegion { return v.DataProcessRegions }).(GetDataLakesResultDataProcessRegionArrayOutput)
}

// The list of hostnames assigned to the Atlas Data Lake. Each string in the array is a hostname assigned to the Atlas Data Lake.
func (o GetDataLakesResultOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []string { return v.Hostnames }).(pulumi.StringArrayOutput)
}

func (o GetDataLakesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResult) string { return v.Name }).(pulumi.StringOutput)
}

// The unique ID for the project to get all data lakes.
func (o GetDataLakesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Current state of the Atlas Data Lake:
func (o GetDataLakesResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResult) string { return v.State }).(pulumi.StringOutput)
}

// Configuration details for mapping each data store to queryable databases and collections.
// * `storage_databases.#.name` - Name of the database to which Data Lake maps the data contained in the data store.
// * `storage_databases.#.collections` -     Array of objects where each object represents a collection and data sources that map to a [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#mongodb-datalakeconf-datalakeconf.stores) data store.
// * `storage_databases.#.collections.#.name` - Name of the collection.
// * `storage_databases.#.collections.#.data_sources` -     Array of objects where each object represents a stores data store to map with the collection.
// * `storage_databases.#.collections.#.data_sources.#.store_name` -     Name of a data store to map to the `<collection>`.
// * `storage_databases.#.collections.#.data_sources.#.default_format` - Default format that Data Lake assumes if it encounters a file without an extension while searching the storeName.
// * `storage_databases.#.collections.#.data_sources.#.path` - Controls how Atlas Data Lake searches for and parses files in the storeName before mapping them to the `<collection>`.
// * `storage_databases.#.views` -     Array of objects where each object represents an [aggregation pipeline](https://docs.mongodb.com/manual/core/aggregation-pipeline/#id1) on a collection.
// * `storage_databases.#.views.#.name` - Name of the view.
// * `storage_databases.#.views.#.source` -  Name of the source collection for the view.
// * `storage_databases.#.views.#.pipeline`- Aggregation pipeline stage(s) to apply to the source collection.
func (o GetDataLakesResultOutput) StorageDatabases() GetDataLakesResultStorageDatabaseArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []GetDataLakesResultStorageDatabase { return v.StorageDatabases }).(GetDataLakesResultStorageDatabaseArrayOutput)
}

// Each object in the array represents a data store. Data Lake uses the storage.databases configuration details to map data in each data store to queryable databases and collections.
// * `storage_stores.#.name` - Name of the data store.
// * `storage_stores.#.provider` - Defines where the data is stored.
// * `storage_stores.#.region` - Name of the AWS region in which the S3 bucket is hosted.
// * `storage_stores.#.bucket` - Name of the AWS S3 bucket.
// * `storage_stores.#.prefix` - Prefix Data Lake applies when searching for files in the S3 bucket .
// * `storage_stores.#.delimiter` - The delimiter that separates `storage_databases.#.collections.#.data_sources.#.path` segments in the data store.
// * `storage_stores.#.include_tags` - Determines whether or not to use S3 tags on the files in the given path as additional partition attributes.
func (o GetDataLakesResultOutput) StorageStores() GetDataLakesResultStorageStoreArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []GetDataLakesResultStorageStore { return v.StorageStores }).(GetDataLakesResultStorageStoreArrayOutput)
}

type GetDataLakesResultArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResult)(nil)).Elem()
}

func (o GetDataLakesResultArrayOutput) ToGetDataLakesResultArrayOutput() GetDataLakesResultArrayOutput {
	return o
}

func (o GetDataLakesResultArrayOutput) ToGetDataLakesResultArrayOutputWithContext(ctx context.Context) GetDataLakesResultArrayOutput {
	return o
}

func (o GetDataLakesResultArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResult {
		return vs[0].([]GetDataLakesResult)[vs[1].(int)]
	}).(GetDataLakesResultOutput)
}

type GetDataLakesResultAw struct {
	ExternalId        string `pulumi:"externalId"`
	IamAssumedRoleArn string `pulumi:"iamAssumedRoleArn"`
	IamUserArn        string `pulumi:"iamUserArn"`
	RoleId            string `pulumi:"roleId"`
	TestS3Bucket      string `pulumi:"testS3Bucket"`
}

// GetDataLakesResultAwInput is an input type that accepts GetDataLakesResultAwArgs and GetDataLakesResultAwOutput values.
// You can construct a concrete instance of `GetDataLakesResultAwInput` via:
//
//	GetDataLakesResultAwArgs{...}
type GetDataLakesResultAwInput interface {
	pulumi.Input

	ToGetDataLakesResultAwOutput() GetDataLakesResultAwOutput
	ToGetDataLakesResultAwOutputWithContext(context.Context) GetDataLakesResultAwOutput
}

type GetDataLakesResultAwArgs struct {
	ExternalId        pulumi.StringInput `pulumi:"externalId"`
	IamAssumedRoleArn pulumi.StringInput `pulumi:"iamAssumedRoleArn"`
	IamUserArn        pulumi.StringInput `pulumi:"iamUserArn"`
	RoleId            pulumi.StringInput `pulumi:"roleId"`
	TestS3Bucket      pulumi.StringInput `pulumi:"testS3Bucket"`
}

func (GetDataLakesResultAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultAw)(nil)).Elem()
}

func (i GetDataLakesResultAwArgs) ToGetDataLakesResultAwOutput() GetDataLakesResultAwOutput {
	return i.ToGetDataLakesResultAwOutputWithContext(context.Background())
}

func (i GetDataLakesResultAwArgs) ToGetDataLakesResultAwOutputWithContext(ctx context.Context) GetDataLakesResultAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultAwOutput)
}

// GetDataLakesResultAwArrayInput is an input type that accepts GetDataLakesResultAwArray and GetDataLakesResultAwArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultAwArrayInput` via:
//
//	GetDataLakesResultAwArray{ GetDataLakesResultAwArgs{...} }
type GetDataLakesResultAwArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultAwArrayOutput() GetDataLakesResultAwArrayOutput
	ToGetDataLakesResultAwArrayOutputWithContext(context.Context) GetDataLakesResultAwArrayOutput
}

type GetDataLakesResultAwArray []GetDataLakesResultAwInput

func (GetDataLakesResultAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultAw)(nil)).Elem()
}

func (i GetDataLakesResultAwArray) ToGetDataLakesResultAwArrayOutput() GetDataLakesResultAwArrayOutput {
	return i.ToGetDataLakesResultAwArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultAwArray) ToGetDataLakesResultAwArrayOutputWithContext(ctx context.Context) GetDataLakesResultAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultAwArrayOutput)
}

type GetDataLakesResultAwOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultAw)(nil)).Elem()
}

func (o GetDataLakesResultAwOutput) ToGetDataLakesResultAwOutput() GetDataLakesResultAwOutput {
	return o
}

func (o GetDataLakesResultAwOutput) ToGetDataLakesResultAwOutputWithContext(ctx context.Context) GetDataLakesResultAwOutput {
	return o
}

func (o GetDataLakesResultAwOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetDataLakesResultAwOutput) IamAssumedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.IamAssumedRoleArn }).(pulumi.StringOutput)
}

func (o GetDataLakesResultAwOutput) IamUserArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.IamUserArn }).(pulumi.StringOutput)
}

func (o GetDataLakesResultAwOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o GetDataLakesResultAwOutput) TestS3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.TestS3Bucket }).(pulumi.StringOutput)
}

type GetDataLakesResultAwArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultAw)(nil)).Elem()
}

func (o GetDataLakesResultAwArrayOutput) ToGetDataLakesResultAwArrayOutput() GetDataLakesResultAwArrayOutput {
	return o
}

func (o GetDataLakesResultAwArrayOutput) ToGetDataLakesResultAwArrayOutputWithContext(ctx context.Context) GetDataLakesResultAwArrayOutput {
	return o
}

func (o GetDataLakesResultAwArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultAw {
		return vs[0].([]GetDataLakesResultAw)[vs[1].(int)]
	}).(GetDataLakesResultAwOutput)
}

type GetDataLakesResultDataProcessRegion struct {
	CloudProvider string `pulumi:"cloudProvider"`
	Region        string `pulumi:"region"`
}

// GetDataLakesResultDataProcessRegionInput is an input type that accepts GetDataLakesResultDataProcessRegionArgs and GetDataLakesResultDataProcessRegionOutput values.
// You can construct a concrete instance of `GetDataLakesResultDataProcessRegionInput` via:
//
//	GetDataLakesResultDataProcessRegionArgs{...}
type GetDataLakesResultDataProcessRegionInput interface {
	pulumi.Input

	ToGetDataLakesResultDataProcessRegionOutput() GetDataLakesResultDataProcessRegionOutput
	ToGetDataLakesResultDataProcessRegionOutputWithContext(context.Context) GetDataLakesResultDataProcessRegionOutput
}

type GetDataLakesResultDataProcessRegionArgs struct {
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	Region        pulumi.StringInput `pulumi:"region"`
}

func (GetDataLakesResultDataProcessRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultDataProcessRegion)(nil)).Elem()
}

func (i GetDataLakesResultDataProcessRegionArgs) ToGetDataLakesResultDataProcessRegionOutput() GetDataLakesResultDataProcessRegionOutput {
	return i.ToGetDataLakesResultDataProcessRegionOutputWithContext(context.Background())
}

func (i GetDataLakesResultDataProcessRegionArgs) ToGetDataLakesResultDataProcessRegionOutputWithContext(ctx context.Context) GetDataLakesResultDataProcessRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultDataProcessRegionOutput)
}

// GetDataLakesResultDataProcessRegionArrayInput is an input type that accepts GetDataLakesResultDataProcessRegionArray and GetDataLakesResultDataProcessRegionArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultDataProcessRegionArrayInput` via:
//
//	GetDataLakesResultDataProcessRegionArray{ GetDataLakesResultDataProcessRegionArgs{...} }
type GetDataLakesResultDataProcessRegionArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultDataProcessRegionArrayOutput() GetDataLakesResultDataProcessRegionArrayOutput
	ToGetDataLakesResultDataProcessRegionArrayOutputWithContext(context.Context) GetDataLakesResultDataProcessRegionArrayOutput
}

type GetDataLakesResultDataProcessRegionArray []GetDataLakesResultDataProcessRegionInput

func (GetDataLakesResultDataProcessRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultDataProcessRegion)(nil)).Elem()
}

func (i GetDataLakesResultDataProcessRegionArray) ToGetDataLakesResultDataProcessRegionArrayOutput() GetDataLakesResultDataProcessRegionArrayOutput {
	return i.ToGetDataLakesResultDataProcessRegionArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultDataProcessRegionArray) ToGetDataLakesResultDataProcessRegionArrayOutputWithContext(ctx context.Context) GetDataLakesResultDataProcessRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultDataProcessRegionArrayOutput)
}

type GetDataLakesResultDataProcessRegionOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultDataProcessRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultDataProcessRegion)(nil)).Elem()
}

func (o GetDataLakesResultDataProcessRegionOutput) ToGetDataLakesResultDataProcessRegionOutput() GetDataLakesResultDataProcessRegionOutput {
	return o
}

func (o GetDataLakesResultDataProcessRegionOutput) ToGetDataLakesResultDataProcessRegionOutputWithContext(ctx context.Context) GetDataLakesResultDataProcessRegionOutput {
	return o
}

func (o GetDataLakesResultDataProcessRegionOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultDataProcessRegion) string { return v.CloudProvider }).(pulumi.StringOutput)
}

func (o GetDataLakesResultDataProcessRegionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultDataProcessRegion) string { return v.Region }).(pulumi.StringOutput)
}

type GetDataLakesResultDataProcessRegionArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultDataProcessRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultDataProcessRegion)(nil)).Elem()
}

func (o GetDataLakesResultDataProcessRegionArrayOutput) ToGetDataLakesResultDataProcessRegionArrayOutput() GetDataLakesResultDataProcessRegionArrayOutput {
	return o
}

func (o GetDataLakesResultDataProcessRegionArrayOutput) ToGetDataLakesResultDataProcessRegionArrayOutputWithContext(ctx context.Context) GetDataLakesResultDataProcessRegionArrayOutput {
	return o
}

func (o GetDataLakesResultDataProcessRegionArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultDataProcessRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultDataProcessRegion {
		return vs[0].([]GetDataLakesResultDataProcessRegion)[vs[1].(int)]
	}).(GetDataLakesResultDataProcessRegionOutput)
}

type GetDataLakesResultStorageDatabase struct {
	Collections            []GetDataLakesResultStorageDatabaseCollection `pulumi:"collections"`
	MaxWildcardCollections int                                           `pulumi:"maxWildcardCollections"`
	Name                   string                                        `pulumi:"name"`
	Views                  []GetDataLakesResultStorageDatabaseView       `pulumi:"views"`
}

// GetDataLakesResultStorageDatabaseInput is an input type that accepts GetDataLakesResultStorageDatabaseArgs and GetDataLakesResultStorageDatabaseOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseInput` via:
//
//	GetDataLakesResultStorageDatabaseArgs{...}
type GetDataLakesResultStorageDatabaseInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseOutput() GetDataLakesResultStorageDatabaseOutput
	ToGetDataLakesResultStorageDatabaseOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseOutput
}

type GetDataLakesResultStorageDatabaseArgs struct {
	Collections            GetDataLakesResultStorageDatabaseCollectionArrayInput `pulumi:"collections"`
	MaxWildcardCollections pulumi.IntInput                                       `pulumi:"maxWildcardCollections"`
	Name                   pulumi.StringInput                                    `pulumi:"name"`
	Views                  GetDataLakesResultStorageDatabaseViewArrayInput       `pulumi:"views"`
}

func (GetDataLakesResultStorageDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabase)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseArgs) ToGetDataLakesResultStorageDatabaseOutput() GetDataLakesResultStorageDatabaseOutput {
	return i.ToGetDataLakesResultStorageDatabaseOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseArgs) ToGetDataLakesResultStorageDatabaseOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseOutput)
}

// GetDataLakesResultStorageDatabaseArrayInput is an input type that accepts GetDataLakesResultStorageDatabaseArray and GetDataLakesResultStorageDatabaseArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseArrayInput` via:
//
//	GetDataLakesResultStorageDatabaseArray{ GetDataLakesResultStorageDatabaseArgs{...} }
type GetDataLakesResultStorageDatabaseArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseArrayOutput() GetDataLakesResultStorageDatabaseArrayOutput
	ToGetDataLakesResultStorageDatabaseArrayOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseArrayOutput
}

type GetDataLakesResultStorageDatabaseArray []GetDataLakesResultStorageDatabaseInput

func (GetDataLakesResultStorageDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabase)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseArray) ToGetDataLakesResultStorageDatabaseArrayOutput() GetDataLakesResultStorageDatabaseArrayOutput {
	return i.ToGetDataLakesResultStorageDatabaseArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseArray) ToGetDataLakesResultStorageDatabaseArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseArrayOutput)
}

type GetDataLakesResultStorageDatabaseOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabase)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseOutput) ToGetDataLakesResultStorageDatabaseOutput() GetDataLakesResultStorageDatabaseOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseOutput) ToGetDataLakesResultStorageDatabaseOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseOutput) Collections() GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabase) []GetDataLakesResultStorageDatabaseCollection {
		return v.Collections
	}).(GetDataLakesResultStorageDatabaseCollectionArrayOutput)
}

func (o GetDataLakesResultStorageDatabaseOutput) MaxWildcardCollections() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabase) int { return v.MaxWildcardCollections }).(pulumi.IntOutput)
}

func (o GetDataLakesResultStorageDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabase) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseOutput) Views() GetDataLakesResultStorageDatabaseViewArrayOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabase) []GetDataLakesResultStorageDatabaseView { return v.Views }).(GetDataLakesResultStorageDatabaseViewArrayOutput)
}

type GetDataLakesResultStorageDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabase)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseArrayOutput) ToGetDataLakesResultStorageDatabaseArrayOutput() GetDataLakesResultStorageDatabaseArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseArrayOutput) ToGetDataLakesResultStorageDatabaseArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageDatabase {
		return vs[0].([]GetDataLakesResultStorageDatabase)[vs[1].(int)]
	}).(GetDataLakesResultStorageDatabaseOutput)
}

type GetDataLakesResultStorageDatabaseCollection struct {
	DataSources []GetDataLakesResultStorageDatabaseCollectionDataSource `pulumi:"dataSources"`
	Name        string                                                  `pulumi:"name"`
}

// GetDataLakesResultStorageDatabaseCollectionInput is an input type that accepts GetDataLakesResultStorageDatabaseCollectionArgs and GetDataLakesResultStorageDatabaseCollectionOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseCollectionInput` via:
//
//	GetDataLakesResultStorageDatabaseCollectionArgs{...}
type GetDataLakesResultStorageDatabaseCollectionInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseCollectionOutput() GetDataLakesResultStorageDatabaseCollectionOutput
	ToGetDataLakesResultStorageDatabaseCollectionOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseCollectionOutput
}

type GetDataLakesResultStorageDatabaseCollectionArgs struct {
	DataSources GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput `pulumi:"dataSources"`
	Name        pulumi.StringInput                                              `pulumi:"name"`
}

func (GetDataLakesResultStorageDatabaseCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollection)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseCollectionArgs) ToGetDataLakesResultStorageDatabaseCollectionOutput() GetDataLakesResultStorageDatabaseCollectionOutput {
	return i.ToGetDataLakesResultStorageDatabaseCollectionOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseCollectionArgs) ToGetDataLakesResultStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseCollectionOutput)
}

// GetDataLakesResultStorageDatabaseCollectionArrayInput is an input type that accepts GetDataLakesResultStorageDatabaseCollectionArray and GetDataLakesResultStorageDatabaseCollectionArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseCollectionArrayInput` via:
//
//	GetDataLakesResultStorageDatabaseCollectionArray{ GetDataLakesResultStorageDatabaseCollectionArgs{...} }
type GetDataLakesResultStorageDatabaseCollectionArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseCollectionArrayOutput() GetDataLakesResultStorageDatabaseCollectionArrayOutput
	ToGetDataLakesResultStorageDatabaseCollectionArrayOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseCollectionArrayOutput
}

type GetDataLakesResultStorageDatabaseCollectionArray []GetDataLakesResultStorageDatabaseCollectionInput

func (GetDataLakesResultStorageDatabaseCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseCollection)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseCollectionArray) ToGetDataLakesResultStorageDatabaseCollectionArrayOutput() GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return i.ToGetDataLakesResultStorageDatabaseCollectionArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseCollectionArray) ToGetDataLakesResultStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseCollectionArrayOutput)
}

type GetDataLakesResultStorageDatabaseCollectionOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollection)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseCollectionOutput) ToGetDataLakesResultStorageDatabaseCollectionOutput() GetDataLakesResultStorageDatabaseCollectionOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionOutput) ToGetDataLakesResultStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionOutput) DataSources() GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollection) []GetDataLakesResultStorageDatabaseCollectionDataSource {
		return v.DataSources
	}).(GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput)
}

func (o GetDataLakesResultStorageDatabaseCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollection) string { return v.Name }).(pulumi.StringOutput)
}

type GetDataLakesResultStorageDatabaseCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseCollection)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseCollectionArrayOutput) ToGetDataLakesResultStorageDatabaseCollectionArrayOutput() GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionArrayOutput) ToGetDataLakesResultStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageDatabaseCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageDatabaseCollection {
		return vs[0].([]GetDataLakesResultStorageDatabaseCollection)[vs[1].(int)]
	}).(GetDataLakesResultStorageDatabaseCollectionOutput)
}

type GetDataLakesResultStorageDatabaseCollectionDataSource struct {
	DefaultFormat string `pulumi:"defaultFormat"`
	Path          string `pulumi:"path"`
	StoreName     string `pulumi:"storeName"`
}

// GetDataLakesResultStorageDatabaseCollectionDataSourceInput is an input type that accepts GetDataLakesResultStorageDatabaseCollectionDataSourceArgs and GetDataLakesResultStorageDatabaseCollectionDataSourceOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseCollectionDataSourceInput` via:
//
//	GetDataLakesResultStorageDatabaseCollectionDataSourceArgs{...}
type GetDataLakesResultStorageDatabaseCollectionDataSourceInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceOutput
	ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceOutput
}

type GetDataLakesResultStorageDatabaseCollectionDataSourceArgs struct {
	DefaultFormat pulumi.StringInput `pulumi:"defaultFormat"`
	Path          pulumi.StringInput `pulumi:"path"`
	StoreName     pulumi.StringInput `pulumi:"storeName"`
}

func (GetDataLakesResultStorageDatabaseCollectionDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseCollectionDataSourceArgs) ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return i.ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseCollectionDataSourceArgs) ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseCollectionDataSourceOutput)
}

// GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput is an input type that accepts GetDataLakesResultStorageDatabaseCollectionDataSourceArray and GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput` via:
//
//	GetDataLakesResultStorageDatabaseCollectionDataSourceArray{ GetDataLakesResultStorageDatabaseCollectionDataSourceArgs{...} }
type GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput
	ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput
}

type GetDataLakesResultStorageDatabaseCollectionDataSourceArray []GetDataLakesResultStorageDatabaseCollectionDataSourceInput

func (GetDataLakesResultStorageDatabaseCollectionDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseCollectionDataSourceArray) ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return i.ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseCollectionDataSourceArray) ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput)
}

type GetDataLakesResultStorageDatabaseCollectionDataSourceOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) DefaultFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollectionDataSource) string { return v.DefaultFormat }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollectionDataSource) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollectionDataSource) string { return v.StoreName }).(pulumi.StringOutput)
}

type GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput) ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput) ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageDatabaseCollectionDataSource {
		return vs[0].([]GetDataLakesResultStorageDatabaseCollectionDataSource)[vs[1].(int)]
	}).(GetDataLakesResultStorageDatabaseCollectionDataSourceOutput)
}

type GetDataLakesResultStorageDatabaseView struct {
	Name     string `pulumi:"name"`
	Pipeline string `pulumi:"pipeline"`
	Source   string `pulumi:"source"`
}

// GetDataLakesResultStorageDatabaseViewInput is an input type that accepts GetDataLakesResultStorageDatabaseViewArgs and GetDataLakesResultStorageDatabaseViewOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseViewInput` via:
//
//	GetDataLakesResultStorageDatabaseViewArgs{...}
type GetDataLakesResultStorageDatabaseViewInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseViewOutput() GetDataLakesResultStorageDatabaseViewOutput
	ToGetDataLakesResultStorageDatabaseViewOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseViewOutput
}

type GetDataLakesResultStorageDatabaseViewArgs struct {
	Name     pulumi.StringInput `pulumi:"name"`
	Pipeline pulumi.StringInput `pulumi:"pipeline"`
	Source   pulumi.StringInput `pulumi:"source"`
}

func (GetDataLakesResultStorageDatabaseViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseView)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseViewArgs) ToGetDataLakesResultStorageDatabaseViewOutput() GetDataLakesResultStorageDatabaseViewOutput {
	return i.ToGetDataLakesResultStorageDatabaseViewOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseViewArgs) ToGetDataLakesResultStorageDatabaseViewOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseViewOutput)
}

// GetDataLakesResultStorageDatabaseViewArrayInput is an input type that accepts GetDataLakesResultStorageDatabaseViewArray and GetDataLakesResultStorageDatabaseViewArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseViewArrayInput` via:
//
//	GetDataLakesResultStorageDatabaseViewArray{ GetDataLakesResultStorageDatabaseViewArgs{...} }
type GetDataLakesResultStorageDatabaseViewArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseViewArrayOutput() GetDataLakesResultStorageDatabaseViewArrayOutput
	ToGetDataLakesResultStorageDatabaseViewArrayOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseViewArrayOutput
}

type GetDataLakesResultStorageDatabaseViewArray []GetDataLakesResultStorageDatabaseViewInput

func (GetDataLakesResultStorageDatabaseViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseView)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseViewArray) ToGetDataLakesResultStorageDatabaseViewArrayOutput() GetDataLakesResultStorageDatabaseViewArrayOutput {
	return i.ToGetDataLakesResultStorageDatabaseViewArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseViewArray) ToGetDataLakesResultStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseViewArrayOutput)
}

type GetDataLakesResultStorageDatabaseViewOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseView)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseViewOutput) ToGetDataLakesResultStorageDatabaseViewOutput() GetDataLakesResultStorageDatabaseViewOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseViewOutput) ToGetDataLakesResultStorageDatabaseViewOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseViewOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseViewOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseView) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseViewOutput) Pipeline() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseView) string { return v.Pipeline }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseViewOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseView) string { return v.Source }).(pulumi.StringOutput)
}

type GetDataLakesResultStorageDatabaseViewArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseView)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseViewArrayOutput) ToGetDataLakesResultStorageDatabaseViewArrayOutput() GetDataLakesResultStorageDatabaseViewArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseViewArrayOutput) ToGetDataLakesResultStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseViewArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseViewArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageDatabaseViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageDatabaseView {
		return vs[0].([]GetDataLakesResultStorageDatabaseView)[vs[1].(int)]
	}).(GetDataLakesResultStorageDatabaseViewOutput)
}

type GetDataLakesResultStorageStore struct {
	AdditionalStorageClasses []string `pulumi:"additionalStorageClasses"`
	Bucket                   string   `pulumi:"bucket"`
	Delimiter                string   `pulumi:"delimiter"`
	IncludeTags              bool     `pulumi:"includeTags"`
	Name                     string   `pulumi:"name"`
	Prefix                   string   `pulumi:"prefix"`
	Provider                 string   `pulumi:"provider"`
	Region                   string   `pulumi:"region"`
}

// GetDataLakesResultStorageStoreInput is an input type that accepts GetDataLakesResultStorageStoreArgs and GetDataLakesResultStorageStoreOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageStoreInput` via:
//
//	GetDataLakesResultStorageStoreArgs{...}
type GetDataLakesResultStorageStoreInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageStoreOutput() GetDataLakesResultStorageStoreOutput
	ToGetDataLakesResultStorageStoreOutputWithContext(context.Context) GetDataLakesResultStorageStoreOutput
}

type GetDataLakesResultStorageStoreArgs struct {
	AdditionalStorageClasses pulumi.StringArrayInput `pulumi:"additionalStorageClasses"`
	Bucket                   pulumi.StringInput      `pulumi:"bucket"`
	Delimiter                pulumi.StringInput      `pulumi:"delimiter"`
	IncludeTags              pulumi.BoolInput        `pulumi:"includeTags"`
	Name                     pulumi.StringInput      `pulumi:"name"`
	Prefix                   pulumi.StringInput      `pulumi:"prefix"`
	Provider                 pulumi.StringInput      `pulumi:"provider"`
	Region                   pulumi.StringInput      `pulumi:"region"`
}

func (GetDataLakesResultStorageStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageStore)(nil)).Elem()
}

func (i GetDataLakesResultStorageStoreArgs) ToGetDataLakesResultStorageStoreOutput() GetDataLakesResultStorageStoreOutput {
	return i.ToGetDataLakesResultStorageStoreOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageStoreArgs) ToGetDataLakesResultStorageStoreOutputWithContext(ctx context.Context) GetDataLakesResultStorageStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageStoreOutput)
}

// GetDataLakesResultStorageStoreArrayInput is an input type that accepts GetDataLakesResultStorageStoreArray and GetDataLakesResultStorageStoreArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageStoreArrayInput` via:
//
//	GetDataLakesResultStorageStoreArray{ GetDataLakesResultStorageStoreArgs{...} }
type GetDataLakesResultStorageStoreArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageStoreArrayOutput() GetDataLakesResultStorageStoreArrayOutput
	ToGetDataLakesResultStorageStoreArrayOutputWithContext(context.Context) GetDataLakesResultStorageStoreArrayOutput
}

type GetDataLakesResultStorageStoreArray []GetDataLakesResultStorageStoreInput

func (GetDataLakesResultStorageStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageStore)(nil)).Elem()
}

func (i GetDataLakesResultStorageStoreArray) ToGetDataLakesResultStorageStoreArrayOutput() GetDataLakesResultStorageStoreArrayOutput {
	return i.ToGetDataLakesResultStorageStoreArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageStoreArray) ToGetDataLakesResultStorageStoreArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageStoreArrayOutput)
}

type GetDataLakesResultStorageStoreOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageStore)(nil)).Elem()
}

func (o GetDataLakesResultStorageStoreOutput) ToGetDataLakesResultStorageStoreOutput() GetDataLakesResultStorageStoreOutput {
	return o
}

func (o GetDataLakesResultStorageStoreOutput) ToGetDataLakesResultStorageStoreOutputWithContext(ctx context.Context) GetDataLakesResultStorageStoreOutput {
	return o
}

func (o GetDataLakesResultStorageStoreOutput) AdditionalStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) []string { return v.AdditionalStorageClasses }).(pulumi.StringArrayOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Delimiter }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) IncludeTags() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) bool { return v.IncludeTags }).(pulumi.BoolOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Provider }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Region }).(pulumi.StringOutput)
}

type GetDataLakesResultStorageStoreArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageStore)(nil)).Elem()
}

func (o GetDataLakesResultStorageStoreArrayOutput) ToGetDataLakesResultStorageStoreArrayOutput() GetDataLakesResultStorageStoreArrayOutput {
	return o
}

func (o GetDataLakesResultStorageStoreArrayOutput) ToGetDataLakesResultStorageStoreArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageStoreArrayOutput {
	return o
}

func (o GetDataLakesResultStorageStoreArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageStore {
		return vs[0].([]GetDataLakesResultStorageStore)[vs[1].(int)]
	}).(GetDataLakesResultStorageStoreOutput)
}

type GetDatabaseUserLabel struct {
	// The key that you want to write.
	Key string `pulumi:"key"`
	// The value that you want to write.
	Value string `pulumi:"value"`
}

// GetDatabaseUserLabelInput is an input type that accepts GetDatabaseUserLabelArgs and GetDatabaseUserLabelOutput values.
// You can construct a concrete instance of `GetDatabaseUserLabelInput` via:
//
//	GetDatabaseUserLabelArgs{...}
type GetDatabaseUserLabelInput interface {
	pulumi.Input

	ToGetDatabaseUserLabelOutput() GetDatabaseUserLabelOutput
	ToGetDatabaseUserLabelOutputWithContext(context.Context) GetDatabaseUserLabelOutput
}

type GetDatabaseUserLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDatabaseUserLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserLabel)(nil)).Elem()
}

func (i GetDatabaseUserLabelArgs) ToGetDatabaseUserLabelOutput() GetDatabaseUserLabelOutput {
	return i.ToGetDatabaseUserLabelOutputWithContext(context.Background())
}

func (i GetDatabaseUserLabelArgs) ToGetDatabaseUserLabelOutputWithContext(ctx context.Context) GetDatabaseUserLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserLabelOutput)
}

// GetDatabaseUserLabelArrayInput is an input type that accepts GetDatabaseUserLabelArray and GetDatabaseUserLabelArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUserLabelArrayInput` via:
//
//	GetDatabaseUserLabelArray{ GetDatabaseUserLabelArgs{...} }
type GetDatabaseUserLabelArrayInput interface {
	pulumi.Input

	ToGetDatabaseUserLabelArrayOutput() GetDatabaseUserLabelArrayOutput
	ToGetDatabaseUserLabelArrayOutputWithContext(context.Context) GetDatabaseUserLabelArrayOutput
}

type GetDatabaseUserLabelArray []GetDatabaseUserLabelInput

func (GetDatabaseUserLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserLabel)(nil)).Elem()
}

func (i GetDatabaseUserLabelArray) ToGetDatabaseUserLabelArrayOutput() GetDatabaseUserLabelArrayOutput {
	return i.ToGetDatabaseUserLabelArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUserLabelArray) ToGetDatabaseUserLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUserLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserLabelArrayOutput)
}

type GetDatabaseUserLabelOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserLabel)(nil)).Elem()
}

func (o GetDatabaseUserLabelOutput) ToGetDatabaseUserLabelOutput() GetDatabaseUserLabelOutput {
	return o
}

func (o GetDatabaseUserLabelOutput) ToGetDatabaseUserLabelOutputWithContext(ctx context.Context) GetDatabaseUserLabelOutput {
	return o
}

// The key that you want to write.
func (o GetDatabaseUserLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that you want to write.
func (o GetDatabaseUserLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetDatabaseUserLabelArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserLabel)(nil)).Elem()
}

func (o GetDatabaseUserLabelArrayOutput) ToGetDatabaseUserLabelArrayOutput() GetDatabaseUserLabelArrayOutput {
	return o
}

func (o GetDatabaseUserLabelArrayOutput) ToGetDatabaseUserLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUserLabelArrayOutput {
	return o
}

func (o GetDatabaseUserLabelArrayOutput) Index(i pulumi.IntInput) GetDatabaseUserLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUserLabel {
		return vs[0].([]GetDatabaseUserLabel)[vs[1].(int)]
	}).(GetDatabaseUserLabelOutput)
}

type GetDatabaseUserRole struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName string `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName string `pulumi:"databaseName"`
	RoleName     string `pulumi:"roleName"`
}

// GetDatabaseUserRoleInput is an input type that accepts GetDatabaseUserRoleArgs and GetDatabaseUserRoleOutput values.
// You can construct a concrete instance of `GetDatabaseUserRoleInput` via:
//
//	GetDatabaseUserRoleArgs{...}
type GetDatabaseUserRoleInput interface {
	pulumi.Input

	ToGetDatabaseUserRoleOutput() GetDatabaseUserRoleOutput
	ToGetDatabaseUserRoleOutputWithContext(context.Context) GetDatabaseUserRoleOutput
}

type GetDatabaseUserRoleArgs struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	RoleName     pulumi.StringInput `pulumi:"roleName"`
}

func (GetDatabaseUserRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserRole)(nil)).Elem()
}

func (i GetDatabaseUserRoleArgs) ToGetDatabaseUserRoleOutput() GetDatabaseUserRoleOutput {
	return i.ToGetDatabaseUserRoleOutputWithContext(context.Background())
}

func (i GetDatabaseUserRoleArgs) ToGetDatabaseUserRoleOutputWithContext(ctx context.Context) GetDatabaseUserRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserRoleOutput)
}

// GetDatabaseUserRoleArrayInput is an input type that accepts GetDatabaseUserRoleArray and GetDatabaseUserRoleArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUserRoleArrayInput` via:
//
//	GetDatabaseUserRoleArray{ GetDatabaseUserRoleArgs{...} }
type GetDatabaseUserRoleArrayInput interface {
	pulumi.Input

	ToGetDatabaseUserRoleArrayOutput() GetDatabaseUserRoleArrayOutput
	ToGetDatabaseUserRoleArrayOutputWithContext(context.Context) GetDatabaseUserRoleArrayOutput
}

type GetDatabaseUserRoleArray []GetDatabaseUserRoleInput

func (GetDatabaseUserRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserRole)(nil)).Elem()
}

func (i GetDatabaseUserRoleArray) ToGetDatabaseUserRoleArrayOutput() GetDatabaseUserRoleArrayOutput {
	return i.ToGetDatabaseUserRoleArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUserRoleArray) ToGetDatabaseUserRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUserRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserRoleArrayOutput)
}

type GetDatabaseUserRoleOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserRole)(nil)).Elem()
}

func (o GetDatabaseUserRoleOutput) ToGetDatabaseUserRoleOutput() GetDatabaseUserRoleOutput {
	return o
}

func (o GetDatabaseUserRoleOutput) ToGetDatabaseUserRoleOutputWithContext(ctx context.Context) GetDatabaseUserRoleOutput {
	return o
}

// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
func (o GetDatabaseUserRoleOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserRole) string { return v.CollectionName }).(pulumi.StringOutput)
}

// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
func (o GetDatabaseUserRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o GetDatabaseUserRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetDatabaseUserRoleArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserRole)(nil)).Elem()
}

func (o GetDatabaseUserRoleArrayOutput) ToGetDatabaseUserRoleArrayOutput() GetDatabaseUserRoleArrayOutput {
	return o
}

func (o GetDatabaseUserRoleArrayOutput) ToGetDatabaseUserRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUserRoleArrayOutput {
	return o
}

func (o GetDatabaseUserRoleArrayOutput) Index(i pulumi.IntInput) GetDatabaseUserRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUserRole {
		return vs[0].([]GetDatabaseUserRole)[vs[1].(int)]
	}).(GetDatabaseUserRoleOutput)
}

type GetDatabaseUserScope struct {
	// Name of the role to grant.
	Name string `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type string `pulumi:"type"`
}

// GetDatabaseUserScopeInput is an input type that accepts GetDatabaseUserScopeArgs and GetDatabaseUserScopeOutput values.
// You can construct a concrete instance of `GetDatabaseUserScopeInput` via:
//
//	GetDatabaseUserScopeArgs{...}
type GetDatabaseUserScopeInput interface {
	pulumi.Input

	ToGetDatabaseUserScopeOutput() GetDatabaseUserScopeOutput
	ToGetDatabaseUserScopeOutputWithContext(context.Context) GetDatabaseUserScopeOutput
}

type GetDatabaseUserScopeArgs struct {
	// Name of the role to grant.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatabaseUserScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserScope)(nil)).Elem()
}

func (i GetDatabaseUserScopeArgs) ToGetDatabaseUserScopeOutput() GetDatabaseUserScopeOutput {
	return i.ToGetDatabaseUserScopeOutputWithContext(context.Background())
}

func (i GetDatabaseUserScopeArgs) ToGetDatabaseUserScopeOutputWithContext(ctx context.Context) GetDatabaseUserScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserScopeOutput)
}

// GetDatabaseUserScopeArrayInput is an input type that accepts GetDatabaseUserScopeArray and GetDatabaseUserScopeArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUserScopeArrayInput` via:
//
//	GetDatabaseUserScopeArray{ GetDatabaseUserScopeArgs{...} }
type GetDatabaseUserScopeArrayInput interface {
	pulumi.Input

	ToGetDatabaseUserScopeArrayOutput() GetDatabaseUserScopeArrayOutput
	ToGetDatabaseUserScopeArrayOutputWithContext(context.Context) GetDatabaseUserScopeArrayOutput
}

type GetDatabaseUserScopeArray []GetDatabaseUserScopeInput

func (GetDatabaseUserScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserScope)(nil)).Elem()
}

func (i GetDatabaseUserScopeArray) ToGetDatabaseUserScopeArrayOutput() GetDatabaseUserScopeArrayOutput {
	return i.ToGetDatabaseUserScopeArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUserScopeArray) ToGetDatabaseUserScopeArrayOutputWithContext(ctx context.Context) GetDatabaseUserScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserScopeArrayOutput)
}

type GetDatabaseUserScopeOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserScope)(nil)).Elem()
}

func (o GetDatabaseUserScopeOutput) ToGetDatabaseUserScopeOutput() GetDatabaseUserScopeOutput {
	return o
}

func (o GetDatabaseUserScopeOutput) ToGetDatabaseUserScopeOutputWithContext(ctx context.Context) GetDatabaseUserScopeOutput {
	return o
}

// Name of the role to grant.
func (o GetDatabaseUserScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserScope) string { return v.Name }).(pulumi.StringOutput)
}

// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
func (o GetDatabaseUserScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserScope) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatabaseUserScopeArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserScope)(nil)).Elem()
}

func (o GetDatabaseUserScopeArrayOutput) ToGetDatabaseUserScopeArrayOutput() GetDatabaseUserScopeArrayOutput {
	return o
}

func (o GetDatabaseUserScopeArrayOutput) ToGetDatabaseUserScopeArrayOutputWithContext(ctx context.Context) GetDatabaseUserScopeArrayOutput {
	return o
}

func (o GetDatabaseUserScopeArrayOutput) Index(i pulumi.IntInput) GetDatabaseUserScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUserScope {
		return vs[0].([]GetDatabaseUserScope)[vs[1].(int)]
	}).(GetDatabaseUserScopeOutput)
}

type GetDatabaseUsersResult struct {
	// (Required) Database against which Atlas authenticates the user. A user must provide both a username and authentication database to log into MongoDB.
	// Possible values include:
	AuthDatabaseName string `pulumi:"authDatabaseName"`
	// The new database user authenticates with AWS IAM credentials. Default is `NONE`, `USER` means user has AWS IAM user credentials, `ROLE` - means user has credentials associated with an AWS IAM role.
	AwsIamType string                        `pulumi:"awsIamType"`
	Labels     []GetDatabaseUsersResultLabel `pulumi:"labels"`
	// Method by which the provided username is authenticated. Default is `NONE`. Other valid values are: `USER`, `GROUP`.
	LdapAuthType string `pulumi:"ldapAuthType"`
	// The unique ID for the project to get all database users.
	ProjectId string `pulumi:"projectId"`
	// List of user’s roles and the databases / collections on which the roles apply. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. See Roles below for more details.
	Roles []GetDatabaseUsersResultRole `pulumi:"roles"`
	// Array of clusters and Atlas Data Lakes that this user has access to.
	Scopes []GetDatabaseUsersResultScope `pulumi:"scopes"`
	// Username for authenticating to MongoDB.
	Username string `pulumi:"username"`
	// X.509 method by which the provided username is authenticated.
	X509Type string `pulumi:"x509Type"`
}

// GetDatabaseUsersResultInput is an input type that accepts GetDatabaseUsersResultArgs and GetDatabaseUsersResultOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultInput` via:
//
//	GetDatabaseUsersResultArgs{...}
type GetDatabaseUsersResultInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultOutput() GetDatabaseUsersResultOutput
	ToGetDatabaseUsersResultOutputWithContext(context.Context) GetDatabaseUsersResultOutput
}

type GetDatabaseUsersResultArgs struct {
	// (Required) Database against which Atlas authenticates the user. A user must provide both a username and authentication database to log into MongoDB.
	// Possible values include:
	AuthDatabaseName pulumi.StringInput `pulumi:"authDatabaseName"`
	// The new database user authenticates with AWS IAM credentials. Default is `NONE`, `USER` means user has AWS IAM user credentials, `ROLE` - means user has credentials associated with an AWS IAM role.
	AwsIamType pulumi.StringInput                    `pulumi:"awsIamType"`
	Labels     GetDatabaseUsersResultLabelArrayInput `pulumi:"labels"`
	// Method by which the provided username is authenticated. Default is `NONE`. Other valid values are: `USER`, `GROUP`.
	LdapAuthType pulumi.StringInput `pulumi:"ldapAuthType"`
	// The unique ID for the project to get all database users.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// List of user’s roles and the databases / collections on which the roles apply. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. See Roles below for more details.
	Roles GetDatabaseUsersResultRoleArrayInput `pulumi:"roles"`
	// Array of clusters and Atlas Data Lakes that this user has access to.
	Scopes GetDatabaseUsersResultScopeArrayInput `pulumi:"scopes"`
	// Username for authenticating to MongoDB.
	Username pulumi.StringInput `pulumi:"username"`
	// X.509 method by which the provided username is authenticated.
	X509Type pulumi.StringInput `pulumi:"x509Type"`
}

func (GetDatabaseUsersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResult)(nil)).Elem()
}

func (i GetDatabaseUsersResultArgs) ToGetDatabaseUsersResultOutput() GetDatabaseUsersResultOutput {
	return i.ToGetDatabaseUsersResultOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultArgs) ToGetDatabaseUsersResultOutputWithContext(ctx context.Context) GetDatabaseUsersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultOutput)
}

// GetDatabaseUsersResultArrayInput is an input type that accepts GetDatabaseUsersResultArray and GetDatabaseUsersResultArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultArrayInput` via:
//
//	GetDatabaseUsersResultArray{ GetDatabaseUsersResultArgs{...} }
type GetDatabaseUsersResultArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultArrayOutput() GetDatabaseUsersResultArrayOutput
	ToGetDatabaseUsersResultArrayOutputWithContext(context.Context) GetDatabaseUsersResultArrayOutput
}

type GetDatabaseUsersResultArray []GetDatabaseUsersResultInput

func (GetDatabaseUsersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResult)(nil)).Elem()
}

func (i GetDatabaseUsersResultArray) ToGetDatabaseUsersResultArrayOutput() GetDatabaseUsersResultArrayOutput {
	return i.ToGetDatabaseUsersResultArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultArray) ToGetDatabaseUsersResultArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultArrayOutput)
}

type GetDatabaseUsersResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResult)(nil)).Elem()
}

func (o GetDatabaseUsersResultOutput) ToGetDatabaseUsersResultOutput() GetDatabaseUsersResultOutput {
	return o
}

func (o GetDatabaseUsersResultOutput) ToGetDatabaseUsersResultOutputWithContext(ctx context.Context) GetDatabaseUsersResultOutput {
	return o
}

// (Required) Database against which Atlas authenticates the user. A user must provide both a username and authentication database to log into MongoDB.
// Possible values include:
func (o GetDatabaseUsersResultOutput) AuthDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.AuthDatabaseName }).(pulumi.StringOutput)
}

// The new database user authenticates with AWS IAM credentials. Default is `NONE`, `USER` means user has AWS IAM user credentials, `ROLE` - means user has credentials associated with an AWS IAM role.
func (o GetDatabaseUsersResultOutput) AwsIamType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.AwsIamType }).(pulumi.StringOutput)
}

func (o GetDatabaseUsersResultOutput) Labels() GetDatabaseUsersResultLabelArrayOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) []GetDatabaseUsersResultLabel { return v.Labels }).(GetDatabaseUsersResultLabelArrayOutput)
}

// Method by which the provided username is authenticated. Default is `NONE`. Other valid values are: `USER`, `GROUP`.
func (o GetDatabaseUsersResultOutput) LdapAuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.LdapAuthType }).(pulumi.StringOutput)
}

// The unique ID for the project to get all database users.
func (o GetDatabaseUsersResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// List of user’s roles and the databases / collections on which the roles apply. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. See Roles below for more details.
func (o GetDatabaseUsersResultOutput) Roles() GetDatabaseUsersResultRoleArrayOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) []GetDatabaseUsersResultRole { return v.Roles }).(GetDatabaseUsersResultRoleArrayOutput)
}

// Array of clusters and Atlas Data Lakes that this user has access to.
func (o GetDatabaseUsersResultOutput) Scopes() GetDatabaseUsersResultScopeArrayOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) []GetDatabaseUsersResultScope { return v.Scopes }).(GetDatabaseUsersResultScopeArrayOutput)
}

// Username for authenticating to MongoDB.
func (o GetDatabaseUsersResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.Username }).(pulumi.StringOutput)
}

// X.509 method by which the provided username is authenticated.
func (o GetDatabaseUsersResultOutput) X509Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.X509Type }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResult)(nil)).Elem()
}

func (o GetDatabaseUsersResultArrayOutput) ToGetDatabaseUsersResultArrayOutput() GetDatabaseUsersResultArrayOutput {
	return o
}

func (o GetDatabaseUsersResultArrayOutput) ToGetDatabaseUsersResultArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultArrayOutput {
	return o
}

func (o GetDatabaseUsersResultArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResult {
		return vs[0].([]GetDatabaseUsersResult)[vs[1].(int)]
	}).(GetDatabaseUsersResultOutput)
}

type GetDatabaseUsersResultLabel struct {
	// The key that you want to write.
	Key string `pulumi:"key"`
	// The value that you want to write.
	Value string `pulumi:"value"`
}

// GetDatabaseUsersResultLabelInput is an input type that accepts GetDatabaseUsersResultLabelArgs and GetDatabaseUsersResultLabelOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultLabelInput` via:
//
//	GetDatabaseUsersResultLabelArgs{...}
type GetDatabaseUsersResultLabelInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultLabelOutput() GetDatabaseUsersResultLabelOutput
	ToGetDatabaseUsersResultLabelOutputWithContext(context.Context) GetDatabaseUsersResultLabelOutput
}

type GetDatabaseUsersResultLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDatabaseUsersResultLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (i GetDatabaseUsersResultLabelArgs) ToGetDatabaseUsersResultLabelOutput() GetDatabaseUsersResultLabelOutput {
	return i.ToGetDatabaseUsersResultLabelOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultLabelArgs) ToGetDatabaseUsersResultLabelOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultLabelOutput)
}

// GetDatabaseUsersResultLabelArrayInput is an input type that accepts GetDatabaseUsersResultLabelArray and GetDatabaseUsersResultLabelArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultLabelArrayInput` via:
//
//	GetDatabaseUsersResultLabelArray{ GetDatabaseUsersResultLabelArgs{...} }
type GetDatabaseUsersResultLabelArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultLabelArrayOutput() GetDatabaseUsersResultLabelArrayOutput
	ToGetDatabaseUsersResultLabelArrayOutputWithContext(context.Context) GetDatabaseUsersResultLabelArrayOutput
}

type GetDatabaseUsersResultLabelArray []GetDatabaseUsersResultLabelInput

func (GetDatabaseUsersResultLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (i GetDatabaseUsersResultLabelArray) ToGetDatabaseUsersResultLabelArrayOutput() GetDatabaseUsersResultLabelArrayOutput {
	return i.ToGetDatabaseUsersResultLabelArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultLabelArray) ToGetDatabaseUsersResultLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultLabelArrayOutput)
}

type GetDatabaseUsersResultLabelOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (o GetDatabaseUsersResultLabelOutput) ToGetDatabaseUsersResultLabelOutput() GetDatabaseUsersResultLabelOutput {
	return o
}

func (o GetDatabaseUsersResultLabelOutput) ToGetDatabaseUsersResultLabelOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelOutput {
	return o
}

// The key that you want to write.
func (o GetDatabaseUsersResultLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that you want to write.
func (o GetDatabaseUsersResultLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultLabelArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (o GetDatabaseUsersResultLabelArrayOutput) ToGetDatabaseUsersResultLabelArrayOutput() GetDatabaseUsersResultLabelArrayOutput {
	return o
}

func (o GetDatabaseUsersResultLabelArrayOutput) ToGetDatabaseUsersResultLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelArrayOutput {
	return o
}

func (o GetDatabaseUsersResultLabelArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResultLabel {
		return vs[0].([]GetDatabaseUsersResultLabel)[vs[1].(int)]
	}).(GetDatabaseUsersResultLabelOutput)
}

type GetDatabaseUsersResultRole struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName string `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName string `pulumi:"databaseName"`
	RoleName     string `pulumi:"roleName"`
}

// GetDatabaseUsersResultRoleInput is an input type that accepts GetDatabaseUsersResultRoleArgs and GetDatabaseUsersResultRoleOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultRoleInput` via:
//
//	GetDatabaseUsersResultRoleArgs{...}
type GetDatabaseUsersResultRoleInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultRoleOutput() GetDatabaseUsersResultRoleOutput
	ToGetDatabaseUsersResultRoleOutputWithContext(context.Context) GetDatabaseUsersResultRoleOutput
}

type GetDatabaseUsersResultRoleArgs struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	RoleName     pulumi.StringInput `pulumi:"roleName"`
}

func (GetDatabaseUsersResultRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultRole)(nil)).Elem()
}

func (i GetDatabaseUsersResultRoleArgs) ToGetDatabaseUsersResultRoleOutput() GetDatabaseUsersResultRoleOutput {
	return i.ToGetDatabaseUsersResultRoleOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultRoleArgs) ToGetDatabaseUsersResultRoleOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultRoleOutput)
}

// GetDatabaseUsersResultRoleArrayInput is an input type that accepts GetDatabaseUsersResultRoleArray and GetDatabaseUsersResultRoleArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultRoleArrayInput` via:
//
//	GetDatabaseUsersResultRoleArray{ GetDatabaseUsersResultRoleArgs{...} }
type GetDatabaseUsersResultRoleArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultRoleArrayOutput() GetDatabaseUsersResultRoleArrayOutput
	ToGetDatabaseUsersResultRoleArrayOutputWithContext(context.Context) GetDatabaseUsersResultRoleArrayOutput
}

type GetDatabaseUsersResultRoleArray []GetDatabaseUsersResultRoleInput

func (GetDatabaseUsersResultRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultRole)(nil)).Elem()
}

func (i GetDatabaseUsersResultRoleArray) ToGetDatabaseUsersResultRoleArrayOutput() GetDatabaseUsersResultRoleArrayOutput {
	return i.ToGetDatabaseUsersResultRoleArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultRoleArray) ToGetDatabaseUsersResultRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultRoleArrayOutput)
}

type GetDatabaseUsersResultRoleOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultRole)(nil)).Elem()
}

func (o GetDatabaseUsersResultRoleOutput) ToGetDatabaseUsersResultRoleOutput() GetDatabaseUsersResultRoleOutput {
	return o
}

func (o GetDatabaseUsersResultRoleOutput) ToGetDatabaseUsersResultRoleOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleOutput {
	return o
}

// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
func (o GetDatabaseUsersResultRoleOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultRole) string { return v.CollectionName }).(pulumi.StringOutput)
}

// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
func (o GetDatabaseUsersResultRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o GetDatabaseUsersResultRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultRoleArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultRole)(nil)).Elem()
}

func (o GetDatabaseUsersResultRoleArrayOutput) ToGetDatabaseUsersResultRoleArrayOutput() GetDatabaseUsersResultRoleArrayOutput {
	return o
}

func (o GetDatabaseUsersResultRoleArrayOutput) ToGetDatabaseUsersResultRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleArrayOutput {
	return o
}

func (o GetDatabaseUsersResultRoleArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResultRole {
		return vs[0].([]GetDatabaseUsersResultRole)[vs[1].(int)]
	}).(GetDatabaseUsersResultRoleOutput)
}

type GetDatabaseUsersResultScope struct {
	// Name of the role to grant.
	Name string `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type string `pulumi:"type"`
}

// GetDatabaseUsersResultScopeInput is an input type that accepts GetDatabaseUsersResultScopeArgs and GetDatabaseUsersResultScopeOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultScopeInput` via:
//
//	GetDatabaseUsersResultScopeArgs{...}
type GetDatabaseUsersResultScopeInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultScopeOutput() GetDatabaseUsersResultScopeOutput
	ToGetDatabaseUsersResultScopeOutputWithContext(context.Context) GetDatabaseUsersResultScopeOutput
}

type GetDatabaseUsersResultScopeArgs struct {
	// Name of the role to grant.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatabaseUsersResultScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultScope)(nil)).Elem()
}

func (i GetDatabaseUsersResultScopeArgs) ToGetDatabaseUsersResultScopeOutput() GetDatabaseUsersResultScopeOutput {
	return i.ToGetDatabaseUsersResultScopeOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultScopeArgs) ToGetDatabaseUsersResultScopeOutputWithContext(ctx context.Context) GetDatabaseUsersResultScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultScopeOutput)
}

// GetDatabaseUsersResultScopeArrayInput is an input type that accepts GetDatabaseUsersResultScopeArray and GetDatabaseUsersResultScopeArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultScopeArrayInput` via:
//
//	GetDatabaseUsersResultScopeArray{ GetDatabaseUsersResultScopeArgs{...} }
type GetDatabaseUsersResultScopeArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultScopeArrayOutput() GetDatabaseUsersResultScopeArrayOutput
	ToGetDatabaseUsersResultScopeArrayOutputWithContext(context.Context) GetDatabaseUsersResultScopeArrayOutput
}

type GetDatabaseUsersResultScopeArray []GetDatabaseUsersResultScopeInput

func (GetDatabaseUsersResultScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultScope)(nil)).Elem()
}

func (i GetDatabaseUsersResultScopeArray) ToGetDatabaseUsersResultScopeArrayOutput() GetDatabaseUsersResultScopeArrayOutput {
	return i.ToGetDatabaseUsersResultScopeArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultScopeArray) ToGetDatabaseUsersResultScopeArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultScopeArrayOutput)
}

type GetDatabaseUsersResultScopeOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultScope)(nil)).Elem()
}

func (o GetDatabaseUsersResultScopeOutput) ToGetDatabaseUsersResultScopeOutput() GetDatabaseUsersResultScopeOutput {
	return o
}

func (o GetDatabaseUsersResultScopeOutput) ToGetDatabaseUsersResultScopeOutputWithContext(ctx context.Context) GetDatabaseUsersResultScopeOutput {
	return o
}

// Name of the role to grant.
func (o GetDatabaseUsersResultScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultScope) string { return v.Name }).(pulumi.StringOutput)
}

// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
func (o GetDatabaseUsersResultScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultScope) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultScopeArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultScope)(nil)).Elem()
}

func (o GetDatabaseUsersResultScopeArrayOutput) ToGetDatabaseUsersResultScopeArrayOutput() GetDatabaseUsersResultScopeArrayOutput {
	return o
}

func (o GetDatabaseUsersResultScopeArrayOutput) ToGetDatabaseUsersResultScopeArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultScopeArrayOutput {
	return o
}

func (o GetDatabaseUsersResultScopeArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResultScope {
		return vs[0].([]GetDatabaseUsersResultScope)[vs[1].(int)]
	}).(GetDatabaseUsersResultScopeOutput)
}

type GetEventTriggerEventProcessor struct {
	AwsEventbridges []GetEventTriggerEventProcessorAwsEventbridge `pulumi:"awsEventbridges"`
}

// GetEventTriggerEventProcessorInput is an input type that accepts GetEventTriggerEventProcessorArgs and GetEventTriggerEventProcessorOutput values.
// You can construct a concrete instance of `GetEventTriggerEventProcessorInput` via:
//
//	GetEventTriggerEventProcessorArgs{...}
type GetEventTriggerEventProcessorInput interface {
	pulumi.Input

	ToGetEventTriggerEventProcessorOutput() GetEventTriggerEventProcessorOutput
	ToGetEventTriggerEventProcessorOutputWithContext(context.Context) GetEventTriggerEventProcessorOutput
}

type GetEventTriggerEventProcessorArgs struct {
	AwsEventbridges GetEventTriggerEventProcessorAwsEventbridgeArrayInput `pulumi:"awsEventbridges"`
}

func (GetEventTriggerEventProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggerEventProcessor)(nil)).Elem()
}

func (i GetEventTriggerEventProcessorArgs) ToGetEventTriggerEventProcessorOutput() GetEventTriggerEventProcessorOutput {
	return i.ToGetEventTriggerEventProcessorOutputWithContext(context.Background())
}

func (i GetEventTriggerEventProcessorArgs) ToGetEventTriggerEventProcessorOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggerEventProcessorOutput)
}

// GetEventTriggerEventProcessorArrayInput is an input type that accepts GetEventTriggerEventProcessorArray and GetEventTriggerEventProcessorArrayOutput values.
// You can construct a concrete instance of `GetEventTriggerEventProcessorArrayInput` via:
//
//	GetEventTriggerEventProcessorArray{ GetEventTriggerEventProcessorArgs{...} }
type GetEventTriggerEventProcessorArrayInput interface {
	pulumi.Input

	ToGetEventTriggerEventProcessorArrayOutput() GetEventTriggerEventProcessorArrayOutput
	ToGetEventTriggerEventProcessorArrayOutputWithContext(context.Context) GetEventTriggerEventProcessorArrayOutput
}

type GetEventTriggerEventProcessorArray []GetEventTriggerEventProcessorInput

func (GetEventTriggerEventProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggerEventProcessor)(nil)).Elem()
}

func (i GetEventTriggerEventProcessorArray) ToGetEventTriggerEventProcessorArrayOutput() GetEventTriggerEventProcessorArrayOutput {
	return i.ToGetEventTriggerEventProcessorArrayOutputWithContext(context.Background())
}

func (i GetEventTriggerEventProcessorArray) ToGetEventTriggerEventProcessorArrayOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggerEventProcessorArrayOutput)
}

type GetEventTriggerEventProcessorOutput struct{ *pulumi.OutputState }

func (GetEventTriggerEventProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggerEventProcessor)(nil)).Elem()
}

func (o GetEventTriggerEventProcessorOutput) ToGetEventTriggerEventProcessorOutput() GetEventTriggerEventProcessorOutput {
	return o
}

func (o GetEventTriggerEventProcessorOutput) ToGetEventTriggerEventProcessorOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorOutput {
	return o
}

func (o GetEventTriggerEventProcessorOutput) AwsEventbridges() GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return o.ApplyT(func(v GetEventTriggerEventProcessor) []GetEventTriggerEventProcessorAwsEventbridge {
		return v.AwsEventbridges
	}).(GetEventTriggerEventProcessorAwsEventbridgeArrayOutput)
}

type GetEventTriggerEventProcessorArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggerEventProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggerEventProcessor)(nil)).Elem()
}

func (o GetEventTriggerEventProcessorArrayOutput) ToGetEventTriggerEventProcessorArrayOutput() GetEventTriggerEventProcessorArrayOutput {
	return o
}

func (o GetEventTriggerEventProcessorArrayOutput) ToGetEventTriggerEventProcessorArrayOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorArrayOutput {
	return o
}

func (o GetEventTriggerEventProcessorArrayOutput) Index(i pulumi.IntInput) GetEventTriggerEventProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggerEventProcessor {
		return vs[0].([]GetEventTriggerEventProcessor)[vs[1].(int)]
	}).(GetEventTriggerEventProcessorOutput)
}

type GetEventTriggerEventProcessorAwsEventbridge struct {
	ConfigAccountId string `pulumi:"configAccountId"`
	ConfigRegion    string `pulumi:"configRegion"`
}

// GetEventTriggerEventProcessorAwsEventbridgeInput is an input type that accepts GetEventTriggerEventProcessorAwsEventbridgeArgs and GetEventTriggerEventProcessorAwsEventbridgeOutput values.
// You can construct a concrete instance of `GetEventTriggerEventProcessorAwsEventbridgeInput` via:
//
//	GetEventTriggerEventProcessorAwsEventbridgeArgs{...}
type GetEventTriggerEventProcessorAwsEventbridgeInput interface {
	pulumi.Input

	ToGetEventTriggerEventProcessorAwsEventbridgeOutput() GetEventTriggerEventProcessorAwsEventbridgeOutput
	ToGetEventTriggerEventProcessorAwsEventbridgeOutputWithContext(context.Context) GetEventTriggerEventProcessorAwsEventbridgeOutput
}

type GetEventTriggerEventProcessorAwsEventbridgeArgs struct {
	ConfigAccountId pulumi.StringInput `pulumi:"configAccountId"`
	ConfigRegion    pulumi.StringInput `pulumi:"configRegion"`
}

func (GetEventTriggerEventProcessorAwsEventbridgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggerEventProcessorAwsEventbridge)(nil)).Elem()
}

func (i GetEventTriggerEventProcessorAwsEventbridgeArgs) ToGetEventTriggerEventProcessorAwsEventbridgeOutput() GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return i.ToGetEventTriggerEventProcessorAwsEventbridgeOutputWithContext(context.Background())
}

func (i GetEventTriggerEventProcessorAwsEventbridgeArgs) ToGetEventTriggerEventProcessorAwsEventbridgeOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggerEventProcessorAwsEventbridgeOutput)
}

// GetEventTriggerEventProcessorAwsEventbridgeArrayInput is an input type that accepts GetEventTriggerEventProcessorAwsEventbridgeArray and GetEventTriggerEventProcessorAwsEventbridgeArrayOutput values.
// You can construct a concrete instance of `GetEventTriggerEventProcessorAwsEventbridgeArrayInput` via:
//
//	GetEventTriggerEventProcessorAwsEventbridgeArray{ GetEventTriggerEventProcessorAwsEventbridgeArgs{...} }
type GetEventTriggerEventProcessorAwsEventbridgeArrayInput interface {
	pulumi.Input

	ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutput() GetEventTriggerEventProcessorAwsEventbridgeArrayOutput
	ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutputWithContext(context.Context) GetEventTriggerEventProcessorAwsEventbridgeArrayOutput
}

type GetEventTriggerEventProcessorAwsEventbridgeArray []GetEventTriggerEventProcessorAwsEventbridgeInput

func (GetEventTriggerEventProcessorAwsEventbridgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggerEventProcessorAwsEventbridge)(nil)).Elem()
}

func (i GetEventTriggerEventProcessorAwsEventbridgeArray) ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutput() GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return i.ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutputWithContext(context.Background())
}

func (i GetEventTriggerEventProcessorAwsEventbridgeArray) ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggerEventProcessorAwsEventbridgeArrayOutput)
}

type GetEventTriggerEventProcessorAwsEventbridgeOutput struct{ *pulumi.OutputState }

func (GetEventTriggerEventProcessorAwsEventbridgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggerEventProcessorAwsEventbridge)(nil)).Elem()
}

func (o GetEventTriggerEventProcessorAwsEventbridgeOutput) ToGetEventTriggerEventProcessorAwsEventbridgeOutput() GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return o
}

func (o GetEventTriggerEventProcessorAwsEventbridgeOutput) ToGetEventTriggerEventProcessorAwsEventbridgeOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return o
}

func (o GetEventTriggerEventProcessorAwsEventbridgeOutput) ConfigAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggerEventProcessorAwsEventbridge) string { return v.ConfigAccountId }).(pulumi.StringOutput)
}

func (o GetEventTriggerEventProcessorAwsEventbridgeOutput) ConfigRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggerEventProcessorAwsEventbridge) string { return v.ConfigRegion }).(pulumi.StringOutput)
}

type GetEventTriggerEventProcessorAwsEventbridgeArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggerEventProcessorAwsEventbridgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggerEventProcessorAwsEventbridge)(nil)).Elem()
}

func (o GetEventTriggerEventProcessorAwsEventbridgeArrayOutput) ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutput() GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return o
}

func (o GetEventTriggerEventProcessorAwsEventbridgeArrayOutput) ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return o
}

func (o GetEventTriggerEventProcessorAwsEventbridgeArrayOutput) Index(i pulumi.IntInput) GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggerEventProcessorAwsEventbridge {
		return vs[0].([]GetEventTriggerEventProcessorAwsEventbridge)[vs[1].(int)]
	}).(GetEventTriggerEventProcessorAwsEventbridgeOutput)
}

type GetEventTriggersResult struct {
	// The name of the MongoDB collection that the trigger watches for change events.
	ConfigCollection string `pulumi:"configCollection"`
	// The name of the MongoDB database that contains the watched collection.
	ConfigDatabase string `pulumi:"configDatabase"`
	// If true, indicates that `UPDATE` change events should include the most current [majority-committed](https://docs.mongodb.com/manual/reference/read-concern-majority/) version of the modified document in the fullDocument field.
	ConfigFullDocument       bool `pulumi:"configFullDocument"`
	ConfigFullDocumentBefore bool `pulumi:"configFullDocumentBefore"`
	// A [$match](https://docs.mongodb.com/manual/reference/operator/aggregation/match/) expression document that MongoDB Realm includes in the underlying change stream pipeline for the trigger.
	ConfigMatch string `pulumi:"configMatch"`
	// The [authentication operation type](https://docs.mongodb.com/realm/triggers/authentication-triggers/#std-label-authentication-event-operation-types) to listen for.
	ConfigOperationType string `pulumi:"configOperationType"`
	// The [database event operation types](https://docs.mongodb.com/realm/triggers/database-triggers/#std-label-database-events) to listen for.
	ConfigOperationTypes []string `pulumi:"configOperationTypes"`
	// A [$project](https://docs.mongodb.com/manual/reference/operator/aggregation/project/) expression document that Realm uses to filter the fields that appear in change event objects.
	ConfigProject string `pulumi:"configProject"`
	// A list of one or more [authentication provider](https://docs.mongodb.com/realm/authentication/providers/) id values. The trigger will only listen for authentication events produced by these providers.
	ConfigProviders []string `pulumi:"configProviders"`
	// A [cron expression](https://docs.mongodb.com/realm/triggers/cron-expressions/) that defines the trigger schedule.
	ConfigSchedule     string `pulumi:"configSchedule"`
	ConfigScheduleType string `pulumi:"configScheduleType"`
	// The ID of the MongoDB Service associated with the trigger.
	ConfigServiceId string `pulumi:"configServiceId"`
	// Status of a trigger.
	Disabled bool `pulumi:"disabled"`
	// An object where each field name is an event processor ID and each value is an object that configures its corresponding event processor.
	// * `event_processors.0.aws_eventbridge.config_account_id` - AWS Account ID.
	// * `event_processors.0.aws_eventbridge.config_region` - Region of AWS Account.
	EventProcessors []GetEventTriggersResultEventProcessor `pulumi:"eventProcessors"`
	// The ID of the function associated with the trigger.
	FunctionId string `pulumi:"functionId"`
	// The name of the function associated with the trigger.
	FunctionName string `pulumi:"functionName"`
	// The name of the trigger.
	Name      string `pulumi:"name"`
	TriggerId string `pulumi:"triggerId"`
	// The type of the trigger. Possible Values: `DATABASE`, `AUTHENTICATION`
	Type string `pulumi:"type"`
	// Sort order for `DATABASE` type.
	Unordered bool `pulumi:"unordered"`
}

// GetEventTriggersResultInput is an input type that accepts GetEventTriggersResultArgs and GetEventTriggersResultOutput values.
// You can construct a concrete instance of `GetEventTriggersResultInput` via:
//
//	GetEventTriggersResultArgs{...}
type GetEventTriggersResultInput interface {
	pulumi.Input

	ToGetEventTriggersResultOutput() GetEventTriggersResultOutput
	ToGetEventTriggersResultOutputWithContext(context.Context) GetEventTriggersResultOutput
}

type GetEventTriggersResultArgs struct {
	// The name of the MongoDB collection that the trigger watches for change events.
	ConfigCollection pulumi.StringInput `pulumi:"configCollection"`
	// The name of the MongoDB database that contains the watched collection.
	ConfigDatabase pulumi.StringInput `pulumi:"configDatabase"`
	// If true, indicates that `UPDATE` change events should include the most current [majority-committed](https://docs.mongodb.com/manual/reference/read-concern-majority/) version of the modified document in the fullDocument field.
	ConfigFullDocument       pulumi.BoolInput `pulumi:"configFullDocument"`
	ConfigFullDocumentBefore pulumi.BoolInput `pulumi:"configFullDocumentBefore"`
	// A [$match](https://docs.mongodb.com/manual/reference/operator/aggregation/match/) expression document that MongoDB Realm includes in the underlying change stream pipeline for the trigger.
	ConfigMatch pulumi.StringInput `pulumi:"configMatch"`
	// The [authentication operation type](https://docs.mongodb.com/realm/triggers/authentication-triggers/#std-label-authentication-event-operation-types) to listen for.
	ConfigOperationType pulumi.StringInput `pulumi:"configOperationType"`
	// The [database event operation types](https://docs.mongodb.com/realm/triggers/database-triggers/#std-label-database-events) to listen for.
	ConfigOperationTypes pulumi.StringArrayInput `pulumi:"configOperationTypes"`
	// A [$project](https://docs.mongodb.com/manual/reference/operator/aggregation/project/) expression document that Realm uses to filter the fields that appear in change event objects.
	ConfigProject pulumi.StringInput `pulumi:"configProject"`
	// A list of one or more [authentication provider](https://docs.mongodb.com/realm/authentication/providers/) id values. The trigger will only listen for authentication events produced by these providers.
	ConfigProviders pulumi.StringArrayInput `pulumi:"configProviders"`
	// A [cron expression](https://docs.mongodb.com/realm/triggers/cron-expressions/) that defines the trigger schedule.
	ConfigSchedule     pulumi.StringInput `pulumi:"configSchedule"`
	ConfigScheduleType pulumi.StringInput `pulumi:"configScheduleType"`
	// The ID of the MongoDB Service associated with the trigger.
	ConfigServiceId pulumi.StringInput `pulumi:"configServiceId"`
	// Status of a trigger.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
	// An object where each field name is an event processor ID and each value is an object that configures its corresponding event processor.
	// * `event_processors.0.aws_eventbridge.config_account_id` - AWS Account ID.
	// * `event_processors.0.aws_eventbridge.config_region` - Region of AWS Account.
	EventProcessors GetEventTriggersResultEventProcessorArrayInput `pulumi:"eventProcessors"`
	// The ID of the function associated with the trigger.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// The name of the function associated with the trigger.
	FunctionName pulumi.StringInput `pulumi:"functionName"`
	// The name of the trigger.
	Name      pulumi.StringInput `pulumi:"name"`
	TriggerId pulumi.StringInput `pulumi:"triggerId"`
	// The type of the trigger. Possible Values: `DATABASE`, `AUTHENTICATION`
	Type pulumi.StringInput `pulumi:"type"`
	// Sort order for `DATABASE` type.
	Unordered pulumi.BoolInput `pulumi:"unordered"`
}

func (GetEventTriggersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResult)(nil)).Elem()
}

func (i GetEventTriggersResultArgs) ToGetEventTriggersResultOutput() GetEventTriggersResultOutput {
	return i.ToGetEventTriggersResultOutputWithContext(context.Background())
}

func (i GetEventTriggersResultArgs) ToGetEventTriggersResultOutputWithContext(ctx context.Context) GetEventTriggersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultOutput)
}

// GetEventTriggersResultArrayInput is an input type that accepts GetEventTriggersResultArray and GetEventTriggersResultArrayOutput values.
// You can construct a concrete instance of `GetEventTriggersResultArrayInput` via:
//
//	GetEventTriggersResultArray{ GetEventTriggersResultArgs{...} }
type GetEventTriggersResultArrayInput interface {
	pulumi.Input

	ToGetEventTriggersResultArrayOutput() GetEventTriggersResultArrayOutput
	ToGetEventTriggersResultArrayOutputWithContext(context.Context) GetEventTriggersResultArrayOutput
}

type GetEventTriggersResultArray []GetEventTriggersResultInput

func (GetEventTriggersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResult)(nil)).Elem()
}

func (i GetEventTriggersResultArray) ToGetEventTriggersResultArrayOutput() GetEventTriggersResultArrayOutput {
	return i.ToGetEventTriggersResultArrayOutputWithContext(context.Background())
}

func (i GetEventTriggersResultArray) ToGetEventTriggersResultArrayOutputWithContext(ctx context.Context) GetEventTriggersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultArrayOutput)
}

type GetEventTriggersResultOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResult)(nil)).Elem()
}

func (o GetEventTriggersResultOutput) ToGetEventTriggersResultOutput() GetEventTriggersResultOutput {
	return o
}

func (o GetEventTriggersResultOutput) ToGetEventTriggersResultOutputWithContext(ctx context.Context) GetEventTriggersResultOutput {
	return o
}

// The name of the MongoDB collection that the trigger watches for change events.
func (o GetEventTriggersResultOutput) ConfigCollection() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigCollection }).(pulumi.StringOutput)
}

// The name of the MongoDB database that contains the watched collection.
func (o GetEventTriggersResultOutput) ConfigDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigDatabase }).(pulumi.StringOutput)
}

// If true, indicates that `UPDATE` change events should include the most current [majority-committed](https://docs.mongodb.com/manual/reference/read-concern-majority/) version of the modified document in the fullDocument field.
func (o GetEventTriggersResultOutput) ConfigFullDocument() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEventTriggersResult) bool { return v.ConfigFullDocument }).(pulumi.BoolOutput)
}

func (o GetEventTriggersResultOutput) ConfigFullDocumentBefore() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEventTriggersResult) bool { return v.ConfigFullDocumentBefore }).(pulumi.BoolOutput)
}

// A [$match](https://docs.mongodb.com/manual/reference/operator/aggregation/match/) expression document that MongoDB Realm includes in the underlying change stream pipeline for the trigger.
func (o GetEventTriggersResultOutput) ConfigMatch() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigMatch }).(pulumi.StringOutput)
}

// The [authentication operation type](https://docs.mongodb.com/realm/triggers/authentication-triggers/#std-label-authentication-event-operation-types) to listen for.
func (o GetEventTriggersResultOutput) ConfigOperationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigOperationType }).(pulumi.StringOutput)
}

// The [database event operation types](https://docs.mongodb.com/realm/triggers/database-triggers/#std-label-database-events) to listen for.
func (o GetEventTriggersResultOutput) ConfigOperationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEventTriggersResult) []string { return v.ConfigOperationTypes }).(pulumi.StringArrayOutput)
}

// A [$project](https://docs.mongodb.com/manual/reference/operator/aggregation/project/) expression document that Realm uses to filter the fields that appear in change event objects.
func (o GetEventTriggersResultOutput) ConfigProject() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigProject }).(pulumi.StringOutput)
}

// A list of one or more [authentication provider](https://docs.mongodb.com/realm/authentication/providers/) id values. The trigger will only listen for authentication events produced by these providers.
func (o GetEventTriggersResultOutput) ConfigProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEventTriggersResult) []string { return v.ConfigProviders }).(pulumi.StringArrayOutput)
}

// A [cron expression](https://docs.mongodb.com/realm/triggers/cron-expressions/) that defines the trigger schedule.
func (o GetEventTriggersResultOutput) ConfigSchedule() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigSchedule }).(pulumi.StringOutput)
}

func (o GetEventTriggersResultOutput) ConfigScheduleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigScheduleType }).(pulumi.StringOutput)
}

// The ID of the MongoDB Service associated with the trigger.
func (o GetEventTriggersResultOutput) ConfigServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigServiceId }).(pulumi.StringOutput)
}

// Status of a trigger.
func (o GetEventTriggersResultOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEventTriggersResult) bool { return v.Disabled }).(pulumi.BoolOutput)
}

// An object where each field name is an event processor ID and each value is an object that configures its corresponding event processor.
// * `event_processors.0.aws_eventbridge.config_account_id` - AWS Account ID.
// * `event_processors.0.aws_eventbridge.config_region` - Region of AWS Account.
func (o GetEventTriggersResultOutput) EventProcessors() GetEventTriggersResultEventProcessorArrayOutput {
	return o.ApplyT(func(v GetEventTriggersResult) []GetEventTriggersResultEventProcessor { return v.EventProcessors }).(GetEventTriggersResultEventProcessorArrayOutput)
}

// The ID of the function associated with the trigger.
func (o GetEventTriggersResultOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The name of the function associated with the trigger.
func (o GetEventTriggersResultOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.FunctionName }).(pulumi.StringOutput)
}

// The name of the trigger.
func (o GetEventTriggersResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetEventTriggersResultOutput) TriggerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.TriggerId }).(pulumi.StringOutput)
}

// The type of the trigger. Possible Values: `DATABASE`, `AUTHENTICATION`
func (o GetEventTriggersResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.Type }).(pulumi.StringOutput)
}

// Sort order for `DATABASE` type.
func (o GetEventTriggersResultOutput) Unordered() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEventTriggersResult) bool { return v.Unordered }).(pulumi.BoolOutput)
}

type GetEventTriggersResultArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResult)(nil)).Elem()
}

func (o GetEventTriggersResultArrayOutput) ToGetEventTriggersResultArrayOutput() GetEventTriggersResultArrayOutput {
	return o
}

func (o GetEventTriggersResultArrayOutput) ToGetEventTriggersResultArrayOutputWithContext(ctx context.Context) GetEventTriggersResultArrayOutput {
	return o
}

func (o GetEventTriggersResultArrayOutput) Index(i pulumi.IntInput) GetEventTriggersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggersResult {
		return vs[0].([]GetEventTriggersResult)[vs[1].(int)]
	}).(GetEventTriggersResultOutput)
}

type GetEventTriggersResultEventProcessor struct {
	AwsEventbridges []GetEventTriggersResultEventProcessorAwsEventbridge `pulumi:"awsEventbridges"`
}

// GetEventTriggersResultEventProcessorInput is an input type that accepts GetEventTriggersResultEventProcessorArgs and GetEventTriggersResultEventProcessorOutput values.
// You can construct a concrete instance of `GetEventTriggersResultEventProcessorInput` via:
//
//	GetEventTriggersResultEventProcessorArgs{...}
type GetEventTriggersResultEventProcessorInput interface {
	pulumi.Input

	ToGetEventTriggersResultEventProcessorOutput() GetEventTriggersResultEventProcessorOutput
	ToGetEventTriggersResultEventProcessorOutputWithContext(context.Context) GetEventTriggersResultEventProcessorOutput
}

type GetEventTriggersResultEventProcessorArgs struct {
	AwsEventbridges GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput `pulumi:"awsEventbridges"`
}

func (GetEventTriggersResultEventProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResultEventProcessor)(nil)).Elem()
}

func (i GetEventTriggersResultEventProcessorArgs) ToGetEventTriggersResultEventProcessorOutput() GetEventTriggersResultEventProcessorOutput {
	return i.ToGetEventTriggersResultEventProcessorOutputWithContext(context.Background())
}

func (i GetEventTriggersResultEventProcessorArgs) ToGetEventTriggersResultEventProcessorOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultEventProcessorOutput)
}

// GetEventTriggersResultEventProcessorArrayInput is an input type that accepts GetEventTriggersResultEventProcessorArray and GetEventTriggersResultEventProcessorArrayOutput values.
// You can construct a concrete instance of `GetEventTriggersResultEventProcessorArrayInput` via:
//
//	GetEventTriggersResultEventProcessorArray{ GetEventTriggersResultEventProcessorArgs{...} }
type GetEventTriggersResultEventProcessorArrayInput interface {
	pulumi.Input

	ToGetEventTriggersResultEventProcessorArrayOutput() GetEventTriggersResultEventProcessorArrayOutput
	ToGetEventTriggersResultEventProcessorArrayOutputWithContext(context.Context) GetEventTriggersResultEventProcessorArrayOutput
}

type GetEventTriggersResultEventProcessorArray []GetEventTriggersResultEventProcessorInput

func (GetEventTriggersResultEventProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResultEventProcessor)(nil)).Elem()
}

func (i GetEventTriggersResultEventProcessorArray) ToGetEventTriggersResultEventProcessorArrayOutput() GetEventTriggersResultEventProcessorArrayOutput {
	return i.ToGetEventTriggersResultEventProcessorArrayOutputWithContext(context.Background())
}

func (i GetEventTriggersResultEventProcessorArray) ToGetEventTriggersResultEventProcessorArrayOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultEventProcessorArrayOutput)
}

type GetEventTriggersResultEventProcessorOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultEventProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResultEventProcessor)(nil)).Elem()
}

func (o GetEventTriggersResultEventProcessorOutput) ToGetEventTriggersResultEventProcessorOutput() GetEventTriggersResultEventProcessorOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorOutput) ToGetEventTriggersResultEventProcessorOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorOutput) AwsEventbridges() GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return o.ApplyT(func(v GetEventTriggersResultEventProcessor) []GetEventTriggersResultEventProcessorAwsEventbridge {
		return v.AwsEventbridges
	}).(GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput)
}

type GetEventTriggersResultEventProcessorArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultEventProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResultEventProcessor)(nil)).Elem()
}

func (o GetEventTriggersResultEventProcessorArrayOutput) ToGetEventTriggersResultEventProcessorArrayOutput() GetEventTriggersResultEventProcessorArrayOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorArrayOutput) ToGetEventTriggersResultEventProcessorArrayOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorArrayOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorArrayOutput) Index(i pulumi.IntInput) GetEventTriggersResultEventProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggersResultEventProcessor {
		return vs[0].([]GetEventTriggersResultEventProcessor)[vs[1].(int)]
	}).(GetEventTriggersResultEventProcessorOutput)
}

type GetEventTriggersResultEventProcessorAwsEventbridge struct {
	ConfigAccountId string `pulumi:"configAccountId"`
	ConfigRegion    string `pulumi:"configRegion"`
}

// GetEventTriggersResultEventProcessorAwsEventbridgeInput is an input type that accepts GetEventTriggersResultEventProcessorAwsEventbridgeArgs and GetEventTriggersResultEventProcessorAwsEventbridgeOutput values.
// You can construct a concrete instance of `GetEventTriggersResultEventProcessorAwsEventbridgeInput` via:
//
//	GetEventTriggersResultEventProcessorAwsEventbridgeArgs{...}
type GetEventTriggersResultEventProcessorAwsEventbridgeInput interface {
	pulumi.Input

	ToGetEventTriggersResultEventProcessorAwsEventbridgeOutput() GetEventTriggersResultEventProcessorAwsEventbridgeOutput
	ToGetEventTriggersResultEventProcessorAwsEventbridgeOutputWithContext(context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeOutput
}

type GetEventTriggersResultEventProcessorAwsEventbridgeArgs struct {
	ConfigAccountId pulumi.StringInput `pulumi:"configAccountId"`
	ConfigRegion    pulumi.StringInput `pulumi:"configRegion"`
}

func (GetEventTriggersResultEventProcessorAwsEventbridgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResultEventProcessorAwsEventbridge)(nil)).Elem()
}

func (i GetEventTriggersResultEventProcessorAwsEventbridgeArgs) ToGetEventTriggersResultEventProcessorAwsEventbridgeOutput() GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return i.ToGetEventTriggersResultEventProcessorAwsEventbridgeOutputWithContext(context.Background())
}

func (i GetEventTriggersResultEventProcessorAwsEventbridgeArgs) ToGetEventTriggersResultEventProcessorAwsEventbridgeOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultEventProcessorAwsEventbridgeOutput)
}

// GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput is an input type that accepts GetEventTriggersResultEventProcessorAwsEventbridgeArray and GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput values.
// You can construct a concrete instance of `GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput` via:
//
//	GetEventTriggersResultEventProcessorAwsEventbridgeArray{ GetEventTriggersResultEventProcessorAwsEventbridgeArgs{...} }
type GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput interface {
	pulumi.Input

	ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput() GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput
	ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutputWithContext(context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput
}

type GetEventTriggersResultEventProcessorAwsEventbridgeArray []GetEventTriggersResultEventProcessorAwsEventbridgeInput

func (GetEventTriggersResultEventProcessorAwsEventbridgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResultEventProcessorAwsEventbridge)(nil)).Elem()
}

func (i GetEventTriggersResultEventProcessorAwsEventbridgeArray) ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput() GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return i.ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutputWithContext(context.Background())
}

func (i GetEventTriggersResultEventProcessorAwsEventbridgeArray) ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput)
}

type GetEventTriggersResultEventProcessorAwsEventbridgeOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResultEventProcessorAwsEventbridge)(nil)).Elem()
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ToGetEventTriggersResultEventProcessorAwsEventbridgeOutput() GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ToGetEventTriggersResultEventProcessorAwsEventbridgeOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ConfigAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResultEventProcessorAwsEventbridge) string { return v.ConfigAccountId }).(pulumi.StringOutput)
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ConfigRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResultEventProcessorAwsEventbridge) string { return v.ConfigRegion }).(pulumi.StringOutput)
}

type GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResultEventProcessorAwsEventbridge)(nil)).Elem()
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput) ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput() GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput) ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput) Index(i pulumi.IntInput) GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggersResultEventProcessorAwsEventbridge {
		return vs[0].([]GetEventTriggersResultEventProcessorAwsEventbridge)[vs[1].(int)]
	}).(GetEventTriggersResultEventProcessorAwsEventbridgeOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrg struct {
	// List that contains the approved domains from which organization users can log in.
	DomainAllowLists []string `pulumi:"domainAllowLists"`
	// Flag that indicates whether domain restriction is enabled for the connected organization.
	DomainRestrictionEnabled bool `pulumi:"domainRestrictionEnabled"`
	// Unique 20-hexadecimal digit string that identifies the IdP.
	IdentityProviderId string `pulumi:"identityProviderId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// List that contains the default roles granted to users who authenticate through the IdP in a connected organization. If you provide a postAuthRoleGrants field in the request, the array that you provide replaces the current postAuthRoleGrants.
	PostAuthRoleGrants []string                                                        `pulumi:"postAuthRoleGrants"`
	RoleMappings       []GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping  `pulumi:"roleMappings"`
	UserConflicts      []GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict `pulumi:"userConflicts"`
}

// GetFederatedSettingsIdentityProviderAssociatedOrgInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgArgs and GetFederatedSettingsIdentityProviderAssociatedOrgOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgArgs{...}
type GetFederatedSettingsIdentityProviderAssociatedOrgInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgOutput() GetFederatedSettingsIdentityProviderAssociatedOrgOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgArgs struct {
	// List that contains the approved domains from which organization users can log in.
	DomainAllowLists pulumi.StringArrayInput `pulumi:"domainAllowLists"`
	// Flag that indicates whether domain restriction is enabled for the connected organization.
	DomainRestrictionEnabled pulumi.BoolInput `pulumi:"domainRestrictionEnabled"`
	// Unique 20-hexadecimal digit string that identifies the IdP.
	IdentityProviderId pulumi.StringInput `pulumi:"identityProviderId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// List that contains the default roles granted to users who authenticate through the IdP in a connected organization. If you provide a postAuthRoleGrants field in the request, the array that you provide replaces the current postAuthRoleGrants.
	PostAuthRoleGrants pulumi.StringArrayInput                                                 `pulumi:"postAuthRoleGrants"`
	RoleMappings       GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayInput  `pulumi:"roleMappings"`
	UserConflicts      GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayInput `pulumi:"userConflicts"`
}

func (GetFederatedSettingsIdentityProviderAssociatedOrgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrg)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgOutput() GetFederatedSettingsIdentityProviderAssociatedOrgOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgOutput)
}

// GetFederatedSettingsIdentityProviderAssociatedOrgArrayInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgArray and GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgArrayInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgArray{ GetFederatedSettingsIdentityProviderAssociatedOrgArgs{...} }
type GetFederatedSettingsIdentityProviderAssociatedOrgArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgArray []GetFederatedSettingsIdentityProviderAssociatedOrgInput

func (GetFederatedSettingsIdentityProviderAssociatedOrgArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrg)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrg)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgOutput() GetFederatedSettingsIdentityProviderAssociatedOrgOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgOutput {
	return o
}

// List that contains the approved domains from which organization users can log in.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) DomainAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrg) []string { return v.DomainAllowLists }).(pulumi.StringArrayOutput)
}

// Flag that indicates whether domain restriction is enabled for the connected organization.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) DomainRestrictionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrg) bool { return v.DomainRestrictionEnabled }).(pulumi.BoolOutput)
}

// Unique 20-hexadecimal digit string that identifies the IdP.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) IdentityProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrg) string { return v.IdentityProviderId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrg) string { return v.OrgId }).(pulumi.StringOutput)
}

// List that contains the default roles granted to users who authenticate through the IdP in a connected organization. If you provide a postAuthRoleGrants field in the request, the array that you provide replaces the current postAuthRoleGrants.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) PostAuthRoleGrants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrg) []string { return v.PostAuthRoleGrants }).(pulumi.StringArrayOutput)
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) RoleMappings() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrg) []GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping {
		return v.RoleMappings
	}).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput)
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) UserConflicts() GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrg) []GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict {
		return v.UserConflicts
	}).(GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrg)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProviderAssociatedOrgOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProviderAssociatedOrg {
		return vs[0].([]GetFederatedSettingsIdentityProviderAssociatedOrg)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProviderAssociatedOrgOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName string `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id string `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments []GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment `pulumi:"roleAssignments"`
}

// GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs and GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs{...}
type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName pulumi.StringInput `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id pulumi.StringInput `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayInput `pulumi:"roleAssignments"`
}

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput)
}

// GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray and GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray{ GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs{...} }
type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray []GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingInput

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput {
	return o
}

// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput) ExternalGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping) string {
		return v.ExternalGroupName
	}).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies this role mapping.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping) string { return v.Id }).(pulumi.StringOutput)
}

// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput) RoleAssignments() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping) []GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment {
		return v.RoleAssignments
	}).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping {
		return vs[0].([]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId string `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role string `pulumi:"role"`
}

// GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs and GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs{...}
type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput)
}

// GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray and GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray{ GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs{...} }
type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray []GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentInput

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput {
	return o
}

// Unique identifier of the project to which you want the role mapping to apply.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment) string {
		return v.GroupId
	}).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment) string {
		return v.OrgId
	}).(pulumi.StringOutput)
}

// Specifies the Role that is attached to the Role Mapping.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment) string {
		return v.Role
	}).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment {
		return vs[0].([]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress string `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId string `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName string `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName string `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId string `pulumi:"userId"`
}

// GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs and GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs{...}
type GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput() GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId pulumi.StringInput `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName pulumi.StringInput `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName pulumi.StringInput `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput() GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput)
}

// GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray and GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray{ GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs{...} }
type GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray []GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictInput

func (GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput() GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput {
	return o
}

// Email address of the the user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) FederationSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict) string {
		return v.FederationSettingsId
	}).(pulumi.StringOutput)
}

// First name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict) string { return v.FirstName }).(pulumi.StringOutput)
}

// Last name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict) string { return v.LastName }).(pulumi.StringOutput)
}

// Name of the Atlas user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict) string { return v.UserId }).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict {
		return vs[0].([]GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput)
}

type GetFederatedSettingsIdentityProviderPemFileInfo struct {
	Certificates []GetFederatedSettingsIdentityProviderPemFileInfoCertificate `pulumi:"certificates"`
	// Filename of certificate
	FileName string `pulumi:"fileName"`
}

// GetFederatedSettingsIdentityProviderPemFileInfoInput is an input type that accepts GetFederatedSettingsIdentityProviderPemFileInfoArgs and GetFederatedSettingsIdentityProviderPemFileInfoOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderPemFileInfoInput` via:
//
//	GetFederatedSettingsIdentityProviderPemFileInfoArgs{...}
type GetFederatedSettingsIdentityProviderPemFileInfoInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderPemFileInfoOutput() GetFederatedSettingsIdentityProviderPemFileInfoOutput
	ToGetFederatedSettingsIdentityProviderPemFileInfoOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderPemFileInfoOutput
}

type GetFederatedSettingsIdentityProviderPemFileInfoArgs struct {
	Certificates GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayInput `pulumi:"certificates"`
	// Filename of certificate
	FileName pulumi.StringInput `pulumi:"fileName"`
}

func (GetFederatedSettingsIdentityProviderPemFileInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfo)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoArgs) ToGetFederatedSettingsIdentityProviderPemFileInfoOutput() GetFederatedSettingsIdentityProviderPemFileInfoOutput {
	return i.ToGetFederatedSettingsIdentityProviderPemFileInfoOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoArgs) ToGetFederatedSettingsIdentityProviderPemFileInfoOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderPemFileInfoOutput)
}

// GetFederatedSettingsIdentityProviderPemFileInfoArrayInput is an input type that accepts GetFederatedSettingsIdentityProviderPemFileInfoArray and GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderPemFileInfoArrayInput` via:
//
//	GetFederatedSettingsIdentityProviderPemFileInfoArray{ GetFederatedSettingsIdentityProviderPemFileInfoArgs{...} }
type GetFederatedSettingsIdentityProviderPemFileInfoArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutput() GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput
	ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput
}

type GetFederatedSettingsIdentityProviderPemFileInfoArray []GetFederatedSettingsIdentityProviderPemFileInfoInput

func (GetFederatedSettingsIdentityProviderPemFileInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderPemFileInfo)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoArray) ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutput() GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput {
	return i.ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoArray) ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput)
}

type GetFederatedSettingsIdentityProviderPemFileInfoOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderPemFileInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfo)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoOutput() GetFederatedSettingsIdentityProviderPemFileInfoOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoOutput) Certificates() GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderPemFileInfo) []GetFederatedSettingsIdentityProviderPemFileInfoCertificate {
		return v.Certificates
	}).(GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput)
}

// Filename of certificate
func (o GetFederatedSettingsIdentityProviderPemFileInfoOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderPemFileInfo) string { return v.FileName }).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderPemFileInfo)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutput() GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProviderPemFileInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProviderPemFileInfo {
		return vs[0].([]GetFederatedSettingsIdentityProviderPemFileInfo)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProviderPemFileInfoOutput)
}

type GetFederatedSettingsIdentityProviderPemFileInfoCertificate struct {
	// Expiration  Date.
	NotAfter string `pulumi:"notAfter"`
	// Start Date.
	NotBefore string `pulumi:"notBefore"`
}

// GetFederatedSettingsIdentityProviderPemFileInfoCertificateInput is an input type that accepts GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs and GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderPemFileInfoCertificateInput` via:
//
//	GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs{...}
type GetFederatedSettingsIdentityProviderPemFileInfoCertificateInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput() GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput
	ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput
}

type GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs struct {
	// Expiration  Date.
	NotAfter pulumi.StringInput `pulumi:"notAfter"`
	// Start Date.
	NotBefore pulumi.StringInput `pulumi:"notBefore"`
}

func (GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfoCertificate)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput() GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput {
	return i.ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput)
}

// GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayInput is an input type that accepts GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray and GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayInput` via:
//
//	GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray{ GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs{...} }
type GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput() GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput
	ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput
}

type GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray []GetFederatedSettingsIdentityProviderPemFileInfoCertificateInput

func (GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderPemFileInfoCertificate)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput() GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput {
	return i.ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput)
}

type GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfoCertificate)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput() GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput {
	return o
}

// Expiration  Date.
func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput) NotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderPemFileInfoCertificate) string { return v.NotAfter }).(pulumi.StringOutput)
}

// Start Date.
func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput) NotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderPemFileInfoCertificate) string { return v.NotBefore }).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderPemFileInfoCertificate)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput() GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProviderPemFileInfoCertificate {
		return vs[0].([]GetFederatedSettingsIdentityProviderPemFileInfoCertificate)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput)
}

type GetFederatedSettingsIdentityProvidersResult struct {
	// Assertion consumer service URL to which the IdP sends the SAML response.
	AcsUrl string `pulumi:"acsUrl"`
	// List that contains the configured domains from which users can log in for this IdP.
	AssociatedDomains []string `pulumi:"associatedDomains"`
	// List that contains the configured domains from which users can log in for this IdP.
	AssociatedOrgs []GetFederatedSettingsIdentityProvidersResultAssociatedOrg `pulumi:"associatedOrgs"`
	// Identifier for the intended audience of the SAML Assertion.
	AudienceUri string `pulumi:"audienceUri"`
	// Human-readable label that identifies the IdP.
	DisplayName string `pulumi:"displayName"`
	// Identifier for the issuer of the SAML Assertion.
	IssuerUri    string                                                   `pulumi:"issuerUri"`
	OktaIdpId    string                                                   `pulumi:"oktaIdpId"`
	PemFileInfos []GetFederatedSettingsIdentityProvidersResultPemFileInfo `pulumi:"pemFileInfos"`
	// SAML Authentication Request Protocol binding used to send the AuthNRequest. Atlas supports the following binding values:
	// - HTTP POST
	// - HTTP REDIRECT
	RequestBinding string `pulumi:"requestBinding"`
	// Algorithm used to encrypt the IdP signature. Atlas supports the following signature algorithm values:
	// - SHA-1
	// - SHA-256
	ResponseSignatureAlgorithm string `pulumi:"responseSignatureAlgorithm"`
	// Flag that indicates whether the IdP has enabled Bypass SAML Mode. Enabling this mode generates a URL that allows you bypass SAML and login to your organizations at any point. You can authenticate with this special URL only when Bypass Mode is enabled. Set this parameter to true during testing. This keeps you from getting locked out of MongoDB.
	SsoDebugEnabled bool `pulumi:"ssoDebugEnabled"`
	// URL of the receiver of the SAML AuthNRequest.
	SsoUrl string `pulumi:"ssoUrl"`
	// Label that indicates whether the identity provider is active. The IdP is Inactive until you map at least one domain to the IdP.
	Status string `pulumi:"status"`
}

// GetFederatedSettingsIdentityProvidersResultInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultArgs and GetFederatedSettingsIdentityProvidersResultOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultArgs{...}
type GetFederatedSettingsIdentityProvidersResultInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultOutput() GetFederatedSettingsIdentityProvidersResultOutput
	ToGetFederatedSettingsIdentityProvidersResultOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultOutput
}

type GetFederatedSettingsIdentityProvidersResultArgs struct {
	// Assertion consumer service URL to which the IdP sends the SAML response.
	AcsUrl pulumi.StringInput `pulumi:"acsUrl"`
	// List that contains the configured domains from which users can log in for this IdP.
	AssociatedDomains pulumi.StringArrayInput `pulumi:"associatedDomains"`
	// List that contains the configured domains from which users can log in for this IdP.
	AssociatedOrgs GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayInput `pulumi:"associatedOrgs"`
	// Identifier for the intended audience of the SAML Assertion.
	AudienceUri pulumi.StringInput `pulumi:"audienceUri"`
	// Human-readable label that identifies the IdP.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Identifier for the issuer of the SAML Assertion.
	IssuerUri    pulumi.StringInput                                               `pulumi:"issuerUri"`
	OktaIdpId    pulumi.StringInput                                               `pulumi:"oktaIdpId"`
	PemFileInfos GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayInput `pulumi:"pemFileInfos"`
	// SAML Authentication Request Protocol binding used to send the AuthNRequest. Atlas supports the following binding values:
	// - HTTP POST
	// - HTTP REDIRECT
	RequestBinding pulumi.StringInput `pulumi:"requestBinding"`
	// Algorithm used to encrypt the IdP signature. Atlas supports the following signature algorithm values:
	// - SHA-1
	// - SHA-256
	ResponseSignatureAlgorithm pulumi.StringInput `pulumi:"responseSignatureAlgorithm"`
	// Flag that indicates whether the IdP has enabled Bypass SAML Mode. Enabling this mode generates a URL that allows you bypass SAML and login to your organizations at any point. You can authenticate with this special URL only when Bypass Mode is enabled. Set this parameter to true during testing. This keeps you from getting locked out of MongoDB.
	SsoDebugEnabled pulumi.BoolInput `pulumi:"ssoDebugEnabled"`
	// URL of the receiver of the SAML AuthNRequest.
	SsoUrl pulumi.StringInput `pulumi:"ssoUrl"`
	// Label that indicates whether the identity provider is active. The IdP is Inactive until you map at least one domain to the IdP.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetFederatedSettingsIdentityProvidersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResult)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultArgs) ToGetFederatedSettingsIdentityProvidersResultOutput() GetFederatedSettingsIdentityProvidersResultOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultArgs) ToGetFederatedSettingsIdentityProvidersResultOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultOutput)
}

// GetFederatedSettingsIdentityProvidersResultArrayInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultArray and GetFederatedSettingsIdentityProvidersResultArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultArrayInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultArray{ GetFederatedSettingsIdentityProvidersResultArgs{...} }
type GetFederatedSettingsIdentityProvidersResultArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultArrayOutput() GetFederatedSettingsIdentityProvidersResultArrayOutput
	ToGetFederatedSettingsIdentityProvidersResultArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultArrayOutput
}

type GetFederatedSettingsIdentityProvidersResultArray []GetFederatedSettingsIdentityProvidersResultInput

func (GetFederatedSettingsIdentityProvidersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResult)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultArray) ToGetFederatedSettingsIdentityProvidersResultArrayOutput() GetFederatedSettingsIdentityProvidersResultArrayOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultArray) ToGetFederatedSettingsIdentityProvidersResultArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultArrayOutput)
}

type GetFederatedSettingsIdentityProvidersResultOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResult)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultOutput) ToGetFederatedSettingsIdentityProvidersResultOutput() GetFederatedSettingsIdentityProvidersResultOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultOutput) ToGetFederatedSettingsIdentityProvidersResultOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultOutput {
	return o
}

// Assertion consumer service URL to which the IdP sends the SAML response.
func (o GetFederatedSettingsIdentityProvidersResultOutput) AcsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.AcsUrl }).(pulumi.StringOutput)
}

// List that contains the configured domains from which users can log in for this IdP.
func (o GetFederatedSettingsIdentityProvidersResultOutput) AssociatedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) []string { return v.AssociatedDomains }).(pulumi.StringArrayOutput)
}

// List that contains the configured domains from which users can log in for this IdP.
func (o GetFederatedSettingsIdentityProvidersResultOutput) AssociatedOrgs() GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) []GetFederatedSettingsIdentityProvidersResultAssociatedOrg {
		return v.AssociatedOrgs
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput)
}

// Identifier for the intended audience of the SAML Assertion.
func (o GetFederatedSettingsIdentityProvidersResultOutput) AudienceUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.AudienceUri }).(pulumi.StringOutput)
}

// Human-readable label that identifies the IdP.
func (o GetFederatedSettingsIdentityProvidersResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Identifier for the issuer of the SAML Assertion.
func (o GetFederatedSettingsIdentityProvidersResultOutput) IssuerUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.IssuerUri }).(pulumi.StringOutput)
}

func (o GetFederatedSettingsIdentityProvidersResultOutput) OktaIdpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.OktaIdpId }).(pulumi.StringOutput)
}

func (o GetFederatedSettingsIdentityProvidersResultOutput) PemFileInfos() GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) []GetFederatedSettingsIdentityProvidersResultPemFileInfo {
		return v.PemFileInfos
	}).(GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput)
}

// SAML Authentication Request Protocol binding used to send the AuthNRequest. Atlas supports the following binding values:
// - HTTP POST
// - HTTP REDIRECT
func (o GetFederatedSettingsIdentityProvidersResultOutput) RequestBinding() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.RequestBinding }).(pulumi.StringOutput)
}

// Algorithm used to encrypt the IdP signature. Atlas supports the following signature algorithm values:
// - SHA-1
// - SHA-256
func (o GetFederatedSettingsIdentityProvidersResultOutput) ResponseSignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.ResponseSignatureAlgorithm }).(pulumi.StringOutput)
}

// Flag that indicates whether the IdP has enabled Bypass SAML Mode. Enabling this mode generates a URL that allows you bypass SAML and login to your organizations at any point. You can authenticate with this special URL only when Bypass Mode is enabled. Set this parameter to true during testing. This keeps you from getting locked out of MongoDB.
func (o GetFederatedSettingsIdentityProvidersResultOutput) SsoDebugEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) bool { return v.SsoDebugEnabled }).(pulumi.BoolOutput)
}

// URL of the receiver of the SAML AuthNRequest.
func (o GetFederatedSettingsIdentityProvidersResultOutput) SsoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.SsoUrl }).(pulumi.StringOutput)
}

// Label that indicates whether the identity provider is active. The IdP is Inactive until you map at least one domain to the IdP.
func (o GetFederatedSettingsIdentityProvidersResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.Status }).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProvidersResultArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResult)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultArrayOutput) ToGetFederatedSettingsIdentityProvidersResultArrayOutput() GetFederatedSettingsIdentityProvidersResultArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultArrayOutput) ToGetFederatedSettingsIdentityProvidersResultArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProvidersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProvidersResult {
		return vs[0].([]GetFederatedSettingsIdentityProvidersResult)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProvidersResultOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrg struct {
	// List that contains the approved domains from which organization users can log in.
	DomainAllowLists []string `pulumi:"domainAllowLists"`
	// Flag that indicates whether domain restriction is enabled for the connected organization.
	DomainRestrictionEnabled bool `pulumi:"domainRestrictionEnabled"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	IdentityProviderId string `pulumi:"identityProviderId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// List that contains the default roles granted to users who authenticate through the IdP in a connected organization. If you provide a postAuthRoleGrants field in the request, the array that you provide replaces the current postAuthRoleGrants.
	PostAuthRoleGrants []string                                                               `pulumi:"postAuthRoleGrants"`
	RoleMappings       []GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping  `pulumi:"roleMappings"`
	UserConflicts      []GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict `pulumi:"userConflicts"`
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs and GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs{...}
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs struct {
	// List that contains the approved domains from which organization users can log in.
	DomainAllowLists pulumi.StringArrayInput `pulumi:"domainAllowLists"`
	// Flag that indicates whether domain restriction is enabled for the connected organization.
	DomainRestrictionEnabled pulumi.BoolInput `pulumi:"domainRestrictionEnabled"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	IdentityProviderId pulumi.StringInput `pulumi:"identityProviderId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// List that contains the default roles granted to users who authenticate through the IdP in a connected organization. If you provide a postAuthRoleGrants field in the request, the array that you provide replaces the current postAuthRoleGrants.
	PostAuthRoleGrants pulumi.StringArrayInput                                                        `pulumi:"postAuthRoleGrants"`
	RoleMappings       GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayInput  `pulumi:"roleMappings"`
	UserConflicts      GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayInput `pulumi:"userConflicts"`
}

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrg)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput)
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray and GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray{ GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs{...} }
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray []GetFederatedSettingsIdentityProvidersResultAssociatedOrgInput

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrg)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrg)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput {
	return o
}

// List that contains the approved domains from which organization users can log in.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) DomainAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrg) []string { return v.DomainAllowLists }).(pulumi.StringArrayOutput)
}

// Flag that indicates whether domain restriction is enabled for the connected organization.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) DomainRestrictionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrg) bool {
		return v.DomainRestrictionEnabled
	}).(pulumi.BoolOutput)
}

// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) IdentityProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrg) string { return v.IdentityProviderId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrg) string { return v.OrgId }).(pulumi.StringOutput)
}

// List that contains the default roles granted to users who authenticate through the IdP in a connected organization. If you provide a postAuthRoleGrants field in the request, the array that you provide replaces the current postAuthRoleGrants.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) PostAuthRoleGrants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrg) []string { return v.PostAuthRoleGrants }).(pulumi.StringArrayOutput)
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) RoleMappings() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrg) []GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping {
		return v.RoleMappings
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput)
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) UserConflicts() GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrg) []GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict {
		return v.UserConflicts
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrg)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProvidersResultAssociatedOrg {
		return vs[0].([]GetFederatedSettingsIdentityProvidersResultAssociatedOrg)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName string `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id string `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments []GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment `pulumi:"roleAssignments"`
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs and GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs{...}
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName pulumi.StringInput `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id pulumi.StringInput `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayInput `pulumi:"roleAssignments"`
}

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput)
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray and GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray{ GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs{...} }
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray []GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingInput

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput {
	return o
}

// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput) ExternalGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping) string {
		return v.ExternalGroupName
	}).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies this role mapping.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping) string { return v.Id }).(pulumi.StringOutput)
}

// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput) RoleAssignments() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping) []GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment {
		return v.RoleAssignments
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping {
		return vs[0].([]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId string `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role string `pulumi:"role"`
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs and GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs{...}
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput)
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray and GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray{ GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs{...} }
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray []GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentInput

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput {
	return o
}

// Unique identifier of the project to which you want the role mapping to apply.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment) string {
		return v.GroupId
	}).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment) string {
		return v.OrgId
	}).(pulumi.StringOutput)
}

// Specifies the Role that is attached to the Role Mapping.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment) string {
		return v.Role
	}).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment {
		return vs[0].([]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress string `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId string `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName string `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName string `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId string `pulumi:"userId"`
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs and GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs{...}
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId pulumi.StringInput `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName pulumi.StringInput `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName pulumi.StringInput `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput)
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray and GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray{ GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs{...} }
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray []GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictInput

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput {
	return o
}

// Email address of the the user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict) string {
		return v.EmailAddress
	}).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) FederationSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict) string {
		return v.FederationSettingsId
	}).(pulumi.StringOutput)
}

// First name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict) string {
		return v.FirstName
	}).(pulumi.StringOutput)
}

// Last name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict) string { return v.LastName }).(pulumi.StringOutput)
}

// Name of the Atlas user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict) string { return v.UserId }).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict {
		return vs[0].([]GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput)
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfo struct {
	Certificates []GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate `pulumi:"certificates"`
	// Filename of certificate
	FileName string `pulumi:"fileName"`
}

// GetFederatedSettingsIdentityProvidersResultPemFileInfoInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs and GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultPemFileInfoInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs{...}
type GetFederatedSettingsIdentityProvidersResultPemFileInfoInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput
	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs struct {
	Certificates GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayInput `pulumi:"certificates"`
	// Filename of certificate
	FileName pulumi.StringInput `pulumi:"fileName"`
}

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfo)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput)
}

// GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultPemFileInfoArray and GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultPemFileInfoArray{ GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs{...} }
type GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput
	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoArray []GetFederatedSettingsIdentityProvidersResultPemFileInfoInput

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultPemFileInfo)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoArray) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoArray) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput)
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfo)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput) Certificates() GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultPemFileInfo) []GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate {
		return v.Certificates
	}).(GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput)
}

// Filename of certificate
func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultPemFileInfo) string { return v.FileName }).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultPemFileInfo)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProvidersResultPemFileInfo {
		return vs[0].([]GetFederatedSettingsIdentityProvidersResultPemFileInfo)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput)
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate struct {
	// Expiration  Date.
	NotAfter string `pulumi:"notAfter"`
	// Start Date.
	NotBefore string `pulumi:"notBefore"`
}

// GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs and GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs{...}
type GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput
	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs struct {
	// Expiration  Date.
	NotAfter pulumi.StringInput `pulumi:"notAfter"`
	// Start Date.
	NotBefore pulumi.StringInput `pulumi:"notBefore"`
}

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput)
}

// GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray and GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray{ GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs{...} }
type GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput
	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray []GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateInput

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput)
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput {
	return o
}

// Expiration  Date.
func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput) NotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate) string { return v.NotAfter }).(pulumi.StringOutput)
}

// Start Date.
func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput) NotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate) string { return v.NotBefore }).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate {
		return vs[0].([]GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput)
}

type GetFederatedSettingsOrgConfigRoleMapping struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName string `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id string `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments []GetFederatedSettingsOrgConfigRoleMappingRoleAssignment `pulumi:"roleAssignments"`
}

// GetFederatedSettingsOrgConfigRoleMappingInput is an input type that accepts GetFederatedSettingsOrgConfigRoleMappingArgs and GetFederatedSettingsOrgConfigRoleMappingOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigRoleMappingInput` via:
//
//	GetFederatedSettingsOrgConfigRoleMappingArgs{...}
type GetFederatedSettingsOrgConfigRoleMappingInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigRoleMappingOutput() GetFederatedSettingsOrgConfigRoleMappingOutput
	ToGetFederatedSettingsOrgConfigRoleMappingOutputWithContext(context.Context) GetFederatedSettingsOrgConfigRoleMappingOutput
}

type GetFederatedSettingsOrgConfigRoleMappingArgs struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName pulumi.StringInput `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id pulumi.StringInput `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayInput `pulumi:"roleAssignments"`
}

func (GetFederatedSettingsOrgConfigRoleMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigRoleMappingArgs) ToGetFederatedSettingsOrgConfigRoleMappingOutput() GetFederatedSettingsOrgConfigRoleMappingOutput {
	return i.ToGetFederatedSettingsOrgConfigRoleMappingOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigRoleMappingArgs) ToGetFederatedSettingsOrgConfigRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigRoleMappingOutput)
}

// GetFederatedSettingsOrgConfigRoleMappingArrayInput is an input type that accepts GetFederatedSettingsOrgConfigRoleMappingArray and GetFederatedSettingsOrgConfigRoleMappingArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigRoleMappingArrayInput` via:
//
//	GetFederatedSettingsOrgConfigRoleMappingArray{ GetFederatedSettingsOrgConfigRoleMappingArgs{...} }
type GetFederatedSettingsOrgConfigRoleMappingArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigRoleMappingArrayOutput() GetFederatedSettingsOrgConfigRoleMappingArrayOutput
	ToGetFederatedSettingsOrgConfigRoleMappingArrayOutputWithContext(context.Context) GetFederatedSettingsOrgConfigRoleMappingArrayOutput
}

type GetFederatedSettingsOrgConfigRoleMappingArray []GetFederatedSettingsOrgConfigRoleMappingInput

func (GetFederatedSettingsOrgConfigRoleMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigRoleMappingArray) ToGetFederatedSettingsOrgConfigRoleMappingArrayOutput() GetFederatedSettingsOrgConfigRoleMappingArrayOutput {
	return i.ToGetFederatedSettingsOrgConfigRoleMappingArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigRoleMappingArray) ToGetFederatedSettingsOrgConfigRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigRoleMappingArrayOutput)
}

type GetFederatedSettingsOrgConfigRoleMappingOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigRoleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigRoleMappingOutput) ToGetFederatedSettingsOrgConfigRoleMappingOutput() GetFederatedSettingsOrgConfigRoleMappingOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigRoleMappingOutput) ToGetFederatedSettingsOrgConfigRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingOutput {
	return o
}

// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
func (o GetFederatedSettingsOrgConfigRoleMappingOutput) ExternalGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigRoleMapping) string { return v.ExternalGroupName }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies this role mapping.
func (o GetFederatedSettingsOrgConfigRoleMappingOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigRoleMapping) string { return v.Id }).(pulumi.StringOutput)
}

// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
func (o GetFederatedSettingsOrgConfigRoleMappingOutput) RoleAssignments() GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigRoleMapping) []GetFederatedSettingsOrgConfigRoleMappingRoleAssignment {
		return v.RoleAssignments
	}).(GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput)
}

type GetFederatedSettingsOrgConfigRoleMappingArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigRoleMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigRoleMappingArrayOutput) ToGetFederatedSettingsOrgConfigRoleMappingArrayOutput() GetFederatedSettingsOrgConfigRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigRoleMappingArrayOutput) ToGetFederatedSettingsOrgConfigRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigRoleMappingArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgConfigRoleMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgConfigRoleMapping {
		return vs[0].([]GetFederatedSettingsOrgConfigRoleMapping)[vs[1].(int)]
	}).(GetFederatedSettingsOrgConfigRoleMappingOutput)
}

type GetFederatedSettingsOrgConfigRoleMappingRoleAssignment struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId string `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role string `pulumi:"role"`
}

// GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentInput is an input type that accepts GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs and GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentInput` via:
//
//	GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs{...}
type GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput
	ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutputWithContext(context.Context) GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput
}

type GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput {
	return i.ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput)
}

// GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayInput is an input type that accepts GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray and GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayInput` via:
//
//	GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray{ GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs{...} }
type GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput
	ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutputWithContext(context.Context) GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput
}

type GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray []GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentInput

func (GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput {
	return i.ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput)
}

type GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput {
	return o
}

// Unique identifier of the project to which you want the role mapping to apply.
func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigRoleMappingRoleAssignment) string { return v.GroupId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigRoleMappingRoleAssignment) string { return v.OrgId }).(pulumi.StringOutput)
}

// Specifies the Role that is attached to the Role Mapping.
func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigRoleMappingRoleAssignment) string { return v.Role }).(pulumi.StringOutput)
}

type GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgConfigRoleMappingRoleAssignment {
		return vs[0].([]GetFederatedSettingsOrgConfigRoleMappingRoleAssignment)[vs[1].(int)]
	}).(GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput)
}

type GetFederatedSettingsOrgConfigUserConflict struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress string `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId string `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName string `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName string `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId string `pulumi:"userId"`
}

// GetFederatedSettingsOrgConfigUserConflictInput is an input type that accepts GetFederatedSettingsOrgConfigUserConflictArgs and GetFederatedSettingsOrgConfigUserConflictOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigUserConflictInput` via:
//
//	GetFederatedSettingsOrgConfigUserConflictArgs{...}
type GetFederatedSettingsOrgConfigUserConflictInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigUserConflictOutput() GetFederatedSettingsOrgConfigUserConflictOutput
	ToGetFederatedSettingsOrgConfigUserConflictOutputWithContext(context.Context) GetFederatedSettingsOrgConfigUserConflictOutput
}

type GetFederatedSettingsOrgConfigUserConflictArgs struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId pulumi.StringInput `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName pulumi.StringInput `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName pulumi.StringInput `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetFederatedSettingsOrgConfigUserConflictArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigUserConflictArgs) ToGetFederatedSettingsOrgConfigUserConflictOutput() GetFederatedSettingsOrgConfigUserConflictOutput {
	return i.ToGetFederatedSettingsOrgConfigUserConflictOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigUserConflictArgs) ToGetFederatedSettingsOrgConfigUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigUserConflictOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigUserConflictOutput)
}

// GetFederatedSettingsOrgConfigUserConflictArrayInput is an input type that accepts GetFederatedSettingsOrgConfigUserConflictArray and GetFederatedSettingsOrgConfigUserConflictArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigUserConflictArrayInput` via:
//
//	GetFederatedSettingsOrgConfigUserConflictArray{ GetFederatedSettingsOrgConfigUserConflictArgs{...} }
type GetFederatedSettingsOrgConfigUserConflictArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigUserConflictArrayOutput() GetFederatedSettingsOrgConfigUserConflictArrayOutput
	ToGetFederatedSettingsOrgConfigUserConflictArrayOutputWithContext(context.Context) GetFederatedSettingsOrgConfigUserConflictArrayOutput
}

type GetFederatedSettingsOrgConfigUserConflictArray []GetFederatedSettingsOrgConfigUserConflictInput

func (GetFederatedSettingsOrgConfigUserConflictArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigUserConflictArray) ToGetFederatedSettingsOrgConfigUserConflictArrayOutput() GetFederatedSettingsOrgConfigUserConflictArrayOutput {
	return i.ToGetFederatedSettingsOrgConfigUserConflictArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigUserConflictArray) ToGetFederatedSettingsOrgConfigUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigUserConflictArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigUserConflictArrayOutput)
}

type GetFederatedSettingsOrgConfigUserConflictOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigUserConflictOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigUserConflictOutput) ToGetFederatedSettingsOrgConfigUserConflictOutput() GetFederatedSettingsOrgConfigUserConflictOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigUserConflictOutput) ToGetFederatedSettingsOrgConfigUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigUserConflictOutput {
	return o
}

// Email address of the the user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigUserConflictOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigUserConflict) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
func (o GetFederatedSettingsOrgConfigUserConflictOutput) FederationSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigUserConflict) string { return v.FederationSettingsId }).(pulumi.StringOutput)
}

// First name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigUserConflictOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigUserConflict) string { return v.FirstName }).(pulumi.StringOutput)
}

// Last name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigUserConflictOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigUserConflict) string { return v.LastName }).(pulumi.StringOutput)
}

// Name of the Atlas user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigUserConflictOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigUserConflict) string { return v.UserId }).(pulumi.StringOutput)
}

type GetFederatedSettingsOrgConfigUserConflictArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigUserConflictArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigUserConflictArrayOutput) ToGetFederatedSettingsOrgConfigUserConflictArrayOutput() GetFederatedSettingsOrgConfigUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigUserConflictArrayOutput) ToGetFederatedSettingsOrgConfigUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigUserConflictArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgConfigUserConflictOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgConfigUserConflict {
		return vs[0].([]GetFederatedSettingsOrgConfigUserConflict)[vs[1].(int)]
	}).(GetFederatedSettingsOrgConfigUserConflictOutput)
}

type GetFederatedSettingsOrgConfigsResult struct {
	// List that contains the approved domains from which organization users can log in.
	DomainAllowLists []string `pulumi:"domainAllowLists"`
	// Flag that indicates whether domain restriction is enabled for the connected organization.
	DomainRestrictionEnabled bool `pulumi:"domainRestrictionEnabled"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	IdentityProviderId string `pulumi:"identityProviderId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// List that contains the default roles granted to users who authenticate through the IdP in a connected organization.
	PostAuthRoleGrants []string                                           `pulumi:"postAuthRoleGrants"`
	RoleMappings       []GetFederatedSettingsOrgConfigsResultRoleMapping  `pulumi:"roleMappings"`
	UserConflicts      []GetFederatedSettingsOrgConfigsResultUserConflict `pulumi:"userConflicts"`
}

// GetFederatedSettingsOrgConfigsResultInput is an input type that accepts GetFederatedSettingsOrgConfigsResultArgs and GetFederatedSettingsOrgConfigsResultOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultInput` via:
//
//	GetFederatedSettingsOrgConfigsResultArgs{...}
type GetFederatedSettingsOrgConfigsResultInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultOutput() GetFederatedSettingsOrgConfigsResultOutput
	ToGetFederatedSettingsOrgConfigsResultOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultOutput
}

type GetFederatedSettingsOrgConfigsResultArgs struct {
	// List that contains the approved domains from which organization users can log in.
	DomainAllowLists pulumi.StringArrayInput `pulumi:"domainAllowLists"`
	// Flag that indicates whether domain restriction is enabled for the connected organization.
	DomainRestrictionEnabled pulumi.BoolInput `pulumi:"domainRestrictionEnabled"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	IdentityProviderId pulumi.StringInput `pulumi:"identityProviderId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// List that contains the default roles granted to users who authenticate through the IdP in a connected organization.
	PostAuthRoleGrants pulumi.StringArrayInput                                    `pulumi:"postAuthRoleGrants"`
	RoleMappings       GetFederatedSettingsOrgConfigsResultRoleMappingArrayInput  `pulumi:"roleMappings"`
	UserConflicts      GetFederatedSettingsOrgConfigsResultUserConflictArrayInput `pulumi:"userConflicts"`
}

func (GetFederatedSettingsOrgConfigsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResult)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultArgs) ToGetFederatedSettingsOrgConfigsResultOutput() GetFederatedSettingsOrgConfigsResultOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultArgs) ToGetFederatedSettingsOrgConfigsResultOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultOutput)
}

// GetFederatedSettingsOrgConfigsResultArrayInput is an input type that accepts GetFederatedSettingsOrgConfigsResultArray and GetFederatedSettingsOrgConfigsResultArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultArrayInput` via:
//
//	GetFederatedSettingsOrgConfigsResultArray{ GetFederatedSettingsOrgConfigsResultArgs{...} }
type GetFederatedSettingsOrgConfigsResultArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultArrayOutput() GetFederatedSettingsOrgConfigsResultArrayOutput
	ToGetFederatedSettingsOrgConfigsResultArrayOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultArrayOutput
}

type GetFederatedSettingsOrgConfigsResultArray []GetFederatedSettingsOrgConfigsResultInput

func (GetFederatedSettingsOrgConfigsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResult)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultArray) ToGetFederatedSettingsOrgConfigsResultArrayOutput() GetFederatedSettingsOrgConfigsResultArrayOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultArray) ToGetFederatedSettingsOrgConfigsResultArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultArrayOutput)
}

type GetFederatedSettingsOrgConfigsResultOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResult)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultOutput) ToGetFederatedSettingsOrgConfigsResultOutput() GetFederatedSettingsOrgConfigsResultOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultOutput) ToGetFederatedSettingsOrgConfigsResultOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultOutput {
	return o
}

// List that contains the approved domains from which organization users can log in.
func (o GetFederatedSettingsOrgConfigsResultOutput) DomainAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResult) []string { return v.DomainAllowLists }).(pulumi.StringArrayOutput)
}

// Flag that indicates whether domain restriction is enabled for the connected organization.
func (o GetFederatedSettingsOrgConfigsResultOutput) DomainRestrictionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResult) bool { return v.DomainRestrictionEnabled }).(pulumi.BoolOutput)
}

// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
func (o GetFederatedSettingsOrgConfigsResultOutput) IdentityProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResult) string { return v.IdentityProviderId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsOrgConfigsResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// List that contains the default roles granted to users who authenticate through the IdP in a connected organization.
func (o GetFederatedSettingsOrgConfigsResultOutput) PostAuthRoleGrants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResult) []string { return v.PostAuthRoleGrants }).(pulumi.StringArrayOutput)
}

func (o GetFederatedSettingsOrgConfigsResultOutput) RoleMappings() GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResult) []GetFederatedSettingsOrgConfigsResultRoleMapping {
		return v.RoleMappings
	}).(GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput)
}

func (o GetFederatedSettingsOrgConfigsResultOutput) UserConflicts() GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResult) []GetFederatedSettingsOrgConfigsResultUserConflict {
		return v.UserConflicts
	}).(GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput)
}

type GetFederatedSettingsOrgConfigsResultArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResult)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultArrayOutput) ToGetFederatedSettingsOrgConfigsResultArrayOutput() GetFederatedSettingsOrgConfigsResultArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultArrayOutput) ToGetFederatedSettingsOrgConfigsResultArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgConfigsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgConfigsResult {
		return vs[0].([]GetFederatedSettingsOrgConfigsResult)[vs[1].(int)]
	}).(GetFederatedSettingsOrgConfigsResultOutput)
}

type GetFederatedSettingsOrgConfigsResultRoleMapping struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName string `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id string `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments []GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment `pulumi:"roleAssignments"`
}

// GetFederatedSettingsOrgConfigsResultRoleMappingInput is an input type that accepts GetFederatedSettingsOrgConfigsResultRoleMappingArgs and GetFederatedSettingsOrgConfigsResultRoleMappingOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultRoleMappingInput` via:
//
//	GetFederatedSettingsOrgConfigsResultRoleMappingArgs{...}
type GetFederatedSettingsOrgConfigsResultRoleMappingInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultRoleMappingOutput() GetFederatedSettingsOrgConfigsResultRoleMappingOutput
	ToGetFederatedSettingsOrgConfigsResultRoleMappingOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingOutput
}

type GetFederatedSettingsOrgConfigsResultRoleMappingArgs struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName pulumi.StringInput `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id pulumi.StringInput `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayInput `pulumi:"roleAssignments"`
}

func (GetFederatedSettingsOrgConfigsResultRoleMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingArgs) ToGetFederatedSettingsOrgConfigsResultRoleMappingOutput() GetFederatedSettingsOrgConfigsResultRoleMappingOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultRoleMappingOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingArgs) ToGetFederatedSettingsOrgConfigsResultRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultRoleMappingOutput)
}

// GetFederatedSettingsOrgConfigsResultRoleMappingArrayInput is an input type that accepts GetFederatedSettingsOrgConfigsResultRoleMappingArray and GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultRoleMappingArrayInput` via:
//
//	GetFederatedSettingsOrgConfigsResultRoleMappingArray{ GetFederatedSettingsOrgConfigsResultRoleMappingArgs{...} }
type GetFederatedSettingsOrgConfigsResultRoleMappingArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput() GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput
	ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput
}

type GetFederatedSettingsOrgConfigsResultRoleMappingArray []GetFederatedSettingsOrgConfigsResultRoleMappingInput

func (GetFederatedSettingsOrgConfigsResultRoleMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResultRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingArray) ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput() GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingArray) ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput)
}

type GetFederatedSettingsOrgConfigsResultRoleMappingOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultRoleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingOutput() GetFederatedSettingsOrgConfigsResultRoleMappingOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingOutput {
	return o
}

// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
func (o GetFederatedSettingsOrgConfigsResultRoleMappingOutput) ExternalGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultRoleMapping) string { return v.ExternalGroupName }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies this role mapping.
func (o GetFederatedSettingsOrgConfigsResultRoleMappingOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultRoleMapping) string { return v.Id }).(pulumi.StringOutput)
}

// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
func (o GetFederatedSettingsOrgConfigsResultRoleMappingOutput) RoleAssignments() GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultRoleMapping) []GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment {
		return v.RoleAssignments
	}).(GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput)
}

type GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResultRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput() GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgConfigsResultRoleMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgConfigsResultRoleMapping {
		return vs[0].([]GetFederatedSettingsOrgConfigsResultRoleMapping)[vs[1].(int)]
	}).(GetFederatedSettingsOrgConfigsResultRoleMappingOutput)
}

type GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId string `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role string `pulumi:"role"`
}

// GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentInput is an input type that accepts GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs and GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentInput` via:
//
//	GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs{...}
type GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput
	ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput
}

type GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput)
}

// GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayInput is an input type that accepts GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray and GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayInput` via:
//
//	GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray{ GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs{...} }
type GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput
	ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput
}

type GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray []GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentInput

func (GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput)
}

type GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput {
	return o
}

// Unique identifier of the project to which you want the role mapping to apply.
func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment) string { return v.GroupId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment) string { return v.OrgId }).(pulumi.StringOutput)
}

// Specifies the Role that is attached to the Role Mapping.
func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment) string { return v.Role }).(pulumi.StringOutput)
}

type GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment {
		return vs[0].([]GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment)[vs[1].(int)]
	}).(GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput)
}

type GetFederatedSettingsOrgConfigsResultUserConflict struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress string `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId string `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName string `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName string `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId string `pulumi:"userId"`
}

// GetFederatedSettingsOrgConfigsResultUserConflictInput is an input type that accepts GetFederatedSettingsOrgConfigsResultUserConflictArgs and GetFederatedSettingsOrgConfigsResultUserConflictOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultUserConflictInput` via:
//
//	GetFederatedSettingsOrgConfigsResultUserConflictArgs{...}
type GetFederatedSettingsOrgConfigsResultUserConflictInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultUserConflictOutput() GetFederatedSettingsOrgConfigsResultUserConflictOutput
	ToGetFederatedSettingsOrgConfigsResultUserConflictOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultUserConflictOutput
}

type GetFederatedSettingsOrgConfigsResultUserConflictArgs struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId pulumi.StringInput `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName pulumi.StringInput `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName pulumi.StringInput `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetFederatedSettingsOrgConfigsResultUserConflictArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultUserConflictArgs) ToGetFederatedSettingsOrgConfigsResultUserConflictOutput() GetFederatedSettingsOrgConfigsResultUserConflictOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultUserConflictOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultUserConflictArgs) ToGetFederatedSettingsOrgConfigsResultUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultUserConflictOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultUserConflictOutput)
}

// GetFederatedSettingsOrgConfigsResultUserConflictArrayInput is an input type that accepts GetFederatedSettingsOrgConfigsResultUserConflictArray and GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultUserConflictArrayInput` via:
//
//	GetFederatedSettingsOrgConfigsResultUserConflictArray{ GetFederatedSettingsOrgConfigsResultUserConflictArgs{...} }
type GetFederatedSettingsOrgConfigsResultUserConflictArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutput() GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput
	ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput
}

type GetFederatedSettingsOrgConfigsResultUserConflictArray []GetFederatedSettingsOrgConfigsResultUserConflictInput

func (GetFederatedSettingsOrgConfigsResultUserConflictArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResultUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultUserConflictArray) ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutput() GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultUserConflictArray) ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput)
}

type GetFederatedSettingsOrgConfigsResultUserConflictOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultUserConflictOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) ToGetFederatedSettingsOrgConfigsResultUserConflictOutput() GetFederatedSettingsOrgConfigsResultUserConflictOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) ToGetFederatedSettingsOrgConfigsResultUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultUserConflictOutput {
	return o
}

// Email address of the the user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultUserConflict) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) FederationSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultUserConflict) string { return v.FederationSettingsId }).(pulumi.StringOutput)
}

// First name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultUserConflict) string { return v.FirstName }).(pulumi.StringOutput)
}

// Last name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultUserConflict) string { return v.LastName }).(pulumi.StringOutput)
}

// Name of the Atlas user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultUserConflict) string { return v.UserId }).(pulumi.StringOutput)
}

type GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResultUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput) ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutput() GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput) ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgConfigsResultUserConflictOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgConfigsResultUserConflict {
		return vs[0].([]GetFederatedSettingsOrgConfigsResultUserConflict)[vs[1].(int)]
	}).(GetFederatedSettingsOrgConfigsResultUserConflictOutput)
}

type GetFederatedSettingsOrgRoleMappingRoleAssignment struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId string `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role string `pulumi:"role"`
}

// GetFederatedSettingsOrgRoleMappingRoleAssignmentInput is an input type that accepts GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs and GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgRoleMappingRoleAssignmentInput` via:
//
//	GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs{...}
type GetFederatedSettingsOrgRoleMappingRoleAssignmentInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput
	ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(context.Context) GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput
}

type GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return i.ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput)
}

// GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayInput is an input type that accepts GetFederatedSettingsOrgRoleMappingRoleAssignmentArray and GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayInput` via:
//
//	GetFederatedSettingsOrgRoleMappingRoleAssignmentArray{ GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs{...} }
type GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput
	ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Context) GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput
}

type GetFederatedSettingsOrgRoleMappingRoleAssignmentArray []GetFederatedSettingsOrgRoleMappingRoleAssignmentInput

func (GetFederatedSettingsOrgRoleMappingRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgRoleMappingRoleAssignmentArray) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return i.ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgRoleMappingRoleAssignmentArray) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput)
}

type GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return o
}

// Unique identifier of the project to which you want the role mapping to apply.
func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingRoleAssignment) string { return v.GroupId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingRoleAssignment) string { return v.OrgId }).(pulumi.StringOutput)
}

// Specifies the Role that is attached to the Role Mapping.
func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingRoleAssignment) string { return v.Role }).(pulumi.StringOutput)
}

type GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgRoleMappingRoleAssignment {
		return vs[0].([]GetFederatedSettingsOrgRoleMappingRoleAssignment)[vs[1].(int)]
	}).(GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput)
}

type GetFederatedSettingsOrgRoleMappingsResult struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName string `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id string `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments []GetFederatedSettingsOrgRoleMappingsResultRoleAssignment `pulumi:"roleAssignments"`
}

// GetFederatedSettingsOrgRoleMappingsResultInput is an input type that accepts GetFederatedSettingsOrgRoleMappingsResultArgs and GetFederatedSettingsOrgRoleMappingsResultOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgRoleMappingsResultInput` via:
//
//	GetFederatedSettingsOrgRoleMappingsResultArgs{...}
type GetFederatedSettingsOrgRoleMappingsResultInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgRoleMappingsResultOutput() GetFederatedSettingsOrgRoleMappingsResultOutput
	ToGetFederatedSettingsOrgRoleMappingsResultOutputWithContext(context.Context) GetFederatedSettingsOrgRoleMappingsResultOutput
}

type GetFederatedSettingsOrgRoleMappingsResultArgs struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName pulumi.StringInput `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id pulumi.StringInput `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayInput `pulumi:"roleAssignments"`
}

func (GetFederatedSettingsOrgRoleMappingsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResult)(nil)).Elem()
}

func (i GetFederatedSettingsOrgRoleMappingsResultArgs) ToGetFederatedSettingsOrgRoleMappingsResultOutput() GetFederatedSettingsOrgRoleMappingsResultOutput {
	return i.ToGetFederatedSettingsOrgRoleMappingsResultOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgRoleMappingsResultArgs) ToGetFederatedSettingsOrgRoleMappingsResultOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgRoleMappingsResultOutput)
}

// GetFederatedSettingsOrgRoleMappingsResultArrayInput is an input type that accepts GetFederatedSettingsOrgRoleMappingsResultArray and GetFederatedSettingsOrgRoleMappingsResultArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgRoleMappingsResultArrayInput` via:
//
//	GetFederatedSettingsOrgRoleMappingsResultArray{ GetFederatedSettingsOrgRoleMappingsResultArgs{...} }
type GetFederatedSettingsOrgRoleMappingsResultArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgRoleMappingsResultArrayOutput() GetFederatedSettingsOrgRoleMappingsResultArrayOutput
	ToGetFederatedSettingsOrgRoleMappingsResultArrayOutputWithContext(context.Context) GetFederatedSettingsOrgRoleMappingsResultArrayOutput
}

type GetFederatedSettingsOrgRoleMappingsResultArray []GetFederatedSettingsOrgRoleMappingsResultInput

func (GetFederatedSettingsOrgRoleMappingsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgRoleMappingsResult)(nil)).Elem()
}

func (i GetFederatedSettingsOrgRoleMappingsResultArray) ToGetFederatedSettingsOrgRoleMappingsResultArrayOutput() GetFederatedSettingsOrgRoleMappingsResultArrayOutput {
	return i.ToGetFederatedSettingsOrgRoleMappingsResultArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgRoleMappingsResultArray) ToGetFederatedSettingsOrgRoleMappingsResultArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgRoleMappingsResultArrayOutput)
}

type GetFederatedSettingsOrgRoleMappingsResultOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgRoleMappingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResult)(nil)).Elem()
}

func (o GetFederatedSettingsOrgRoleMappingsResultOutput) ToGetFederatedSettingsOrgRoleMappingsResultOutput() GetFederatedSettingsOrgRoleMappingsResultOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingsResultOutput) ToGetFederatedSettingsOrgRoleMappingsResultOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultOutput {
	return o
}

// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
func (o GetFederatedSettingsOrgRoleMappingsResultOutput) ExternalGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingsResult) string { return v.ExternalGroupName }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies this role mapping.
func (o GetFederatedSettingsOrgRoleMappingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
func (o GetFederatedSettingsOrgRoleMappingsResultOutput) RoleAssignments() GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingsResult) []GetFederatedSettingsOrgRoleMappingsResultRoleAssignment {
		return v.RoleAssignments
	}).(GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput)
}

type GetFederatedSettingsOrgRoleMappingsResultArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgRoleMappingsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgRoleMappingsResult)(nil)).Elem()
}

func (o GetFederatedSettingsOrgRoleMappingsResultArrayOutput) ToGetFederatedSettingsOrgRoleMappingsResultArrayOutput() GetFederatedSettingsOrgRoleMappingsResultArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingsResultArrayOutput) ToGetFederatedSettingsOrgRoleMappingsResultArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingsResultArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgRoleMappingsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgRoleMappingsResult {
		return vs[0].([]GetFederatedSettingsOrgRoleMappingsResult)[vs[1].(int)]
	}).(GetFederatedSettingsOrgRoleMappingsResultOutput)
}

type GetFederatedSettingsOrgRoleMappingsResultRoleAssignment struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId string `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role string `pulumi:"role"`
}

// GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentInput is an input type that accepts GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs and GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentInput` via:
//
//	GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs{...}
type GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput() GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput
	ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutputWithContext(context.Context) GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput
}

type GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResultRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput() GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput {
	return i.ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput)
}

// GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayInput is an input type that accepts GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray and GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayInput` via:
//
//	GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray{ GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs{...} }
type GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput() GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput
	ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutputWithContext(context.Context) GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput
}

type GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray []GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentInput

func (GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgRoleMappingsResultRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput() GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput {
	return i.ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput)
}

type GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResultRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput() GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput {
	return o
}

// Unique identifier of the project to which you want the role mapping to apply.
func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingsResultRoleAssignment) string { return v.GroupId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingsResultRoleAssignment) string { return v.OrgId }).(pulumi.StringOutput)
}

// Specifies the Role that is attached to the Role Mapping.
func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingsResultRoleAssignment) string { return v.Role }).(pulumi.StringOutput)
}

type GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgRoleMappingsResultRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput() GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgRoleMappingsResultRoleAssignment {
		return vs[0].([]GetFederatedSettingsOrgRoleMappingsResultRoleAssignment)[vs[1].(int)]
	}).(GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput)
}

type GetGlobalClusterConfigManagedNamespace struct {
	// (Required) The name of the collection associated with the managed namespace.
	Collection string `pulumi:"collection"`
	// (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey string `pulumi:"customShardKey"`
	// (Required) The name of the database containing the collection.
	Db string `pulumi:"db"`
	// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
	IsCustomShardKeyHashed bool `pulumi:"isCustomShardKeyHashed"`
	// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
	IsShardKeyUnique bool `pulumi:"isShardKeyUnique"`
}

// GetGlobalClusterConfigManagedNamespaceInput is an input type that accepts GetGlobalClusterConfigManagedNamespaceArgs and GetGlobalClusterConfigManagedNamespaceOutput values.
// You can construct a concrete instance of `GetGlobalClusterConfigManagedNamespaceInput` via:
//
//	GetGlobalClusterConfigManagedNamespaceArgs{...}
type GetGlobalClusterConfigManagedNamespaceInput interface {
	pulumi.Input

	ToGetGlobalClusterConfigManagedNamespaceOutput() GetGlobalClusterConfigManagedNamespaceOutput
	ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(context.Context) GetGlobalClusterConfigManagedNamespaceOutput
}

type GetGlobalClusterConfigManagedNamespaceArgs struct {
	// (Required) The name of the collection associated with the managed namespace.
	Collection pulumi.StringInput `pulumi:"collection"`
	// (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey pulumi.StringInput `pulumi:"customShardKey"`
	// (Required) The name of the database containing the collection.
	Db pulumi.StringInput `pulumi:"db"`
	// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
	IsCustomShardKeyHashed pulumi.BoolInput `pulumi:"isCustomShardKeyHashed"`
	// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
	IsShardKeyUnique pulumi.BoolInput `pulumi:"isShardKeyUnique"`
}

func (GetGlobalClusterConfigManagedNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GetGlobalClusterConfigManagedNamespaceArgs) ToGetGlobalClusterConfigManagedNamespaceOutput() GetGlobalClusterConfigManagedNamespaceOutput {
	return i.ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(context.Background())
}

func (i GetGlobalClusterConfigManagedNamespaceArgs) ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClusterConfigManagedNamespaceOutput)
}

// GetGlobalClusterConfigManagedNamespaceArrayInput is an input type that accepts GetGlobalClusterConfigManagedNamespaceArray and GetGlobalClusterConfigManagedNamespaceArrayOutput values.
// You can construct a concrete instance of `GetGlobalClusterConfigManagedNamespaceArrayInput` via:
//
//	GetGlobalClusterConfigManagedNamespaceArray{ GetGlobalClusterConfigManagedNamespaceArgs{...} }
type GetGlobalClusterConfigManagedNamespaceArrayInput interface {
	pulumi.Input

	ToGetGlobalClusterConfigManagedNamespaceArrayOutput() GetGlobalClusterConfigManagedNamespaceArrayOutput
	ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Context) GetGlobalClusterConfigManagedNamespaceArrayOutput
}

type GetGlobalClusterConfigManagedNamespaceArray []GetGlobalClusterConfigManagedNamespaceInput

func (GetGlobalClusterConfigManagedNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GetGlobalClusterConfigManagedNamespaceArray) ToGetGlobalClusterConfigManagedNamespaceArrayOutput() GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return i.ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Background())
}

func (i GetGlobalClusterConfigManagedNamespaceArray) ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClusterConfigManagedNamespaceArrayOutput)
}

type GetGlobalClusterConfigManagedNamespaceOutput struct{ *pulumi.OutputState }

func (GetGlobalClusterConfigManagedNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GetGlobalClusterConfigManagedNamespaceOutput) ToGetGlobalClusterConfigManagedNamespaceOutput() GetGlobalClusterConfigManagedNamespaceOutput {
	return o
}

func (o GetGlobalClusterConfigManagedNamespaceOutput) ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceOutput {
	return o
}

// (Required) The name of the collection associated with the managed namespace.
func (o GetGlobalClusterConfigManagedNamespaceOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) string { return v.Collection }).(pulumi.StringOutput)
}

// (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
func (o GetGlobalClusterConfigManagedNamespaceOutput) CustomShardKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) string { return v.CustomShardKey }).(pulumi.StringOutput)
}

// (Required) The name of the database containing the collection.
func (o GetGlobalClusterConfigManagedNamespaceOutput) Db() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) string { return v.Db }).(pulumi.StringOutput)
}

// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
func (o GetGlobalClusterConfigManagedNamespaceOutput) IsCustomShardKeyHashed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) bool { return v.IsCustomShardKeyHashed }).(pulumi.BoolOutput)
}

// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
func (o GetGlobalClusterConfigManagedNamespaceOutput) IsShardKeyUnique() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) bool { return v.IsShardKeyUnique }).(pulumi.BoolOutput)
}

type GetGlobalClusterConfigManagedNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClusterConfigManagedNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GetGlobalClusterConfigManagedNamespaceArrayOutput) ToGetGlobalClusterConfigManagedNamespaceArrayOutput() GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GetGlobalClusterConfigManagedNamespaceArrayOutput) ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GetGlobalClusterConfigManagedNamespaceArrayOutput) Index(i pulumi.IntInput) GetGlobalClusterConfigManagedNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClusterConfigManagedNamespace {
		return vs[0].([]GetGlobalClusterConfigManagedNamespace)[vs[1].(int)]
	}).(GetGlobalClusterConfigManagedNamespaceOutput)
}

type GetLdapConfigurationUserToDnMapping struct {
	LdapQuery    string `pulumi:"ldapQuery"`
	Match        string `pulumi:"match"`
	Substitution string `pulumi:"substitution"`
}

// GetLdapConfigurationUserToDnMappingInput is an input type that accepts GetLdapConfigurationUserToDnMappingArgs and GetLdapConfigurationUserToDnMappingOutput values.
// You can construct a concrete instance of `GetLdapConfigurationUserToDnMappingInput` via:
//
//	GetLdapConfigurationUserToDnMappingArgs{...}
type GetLdapConfigurationUserToDnMappingInput interface {
	pulumi.Input

	ToGetLdapConfigurationUserToDnMappingOutput() GetLdapConfigurationUserToDnMappingOutput
	ToGetLdapConfigurationUserToDnMappingOutputWithContext(context.Context) GetLdapConfigurationUserToDnMappingOutput
}

type GetLdapConfigurationUserToDnMappingArgs struct {
	LdapQuery    pulumi.StringInput `pulumi:"ldapQuery"`
	Match        pulumi.StringInput `pulumi:"match"`
	Substitution pulumi.StringInput `pulumi:"substitution"`
}

func (GetLdapConfigurationUserToDnMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (i GetLdapConfigurationUserToDnMappingArgs) ToGetLdapConfigurationUserToDnMappingOutput() GetLdapConfigurationUserToDnMappingOutput {
	return i.ToGetLdapConfigurationUserToDnMappingOutputWithContext(context.Background())
}

func (i GetLdapConfigurationUserToDnMappingArgs) ToGetLdapConfigurationUserToDnMappingOutputWithContext(ctx context.Context) GetLdapConfigurationUserToDnMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapConfigurationUserToDnMappingOutput)
}

// GetLdapConfigurationUserToDnMappingArrayInput is an input type that accepts GetLdapConfigurationUserToDnMappingArray and GetLdapConfigurationUserToDnMappingArrayOutput values.
// You can construct a concrete instance of `GetLdapConfigurationUserToDnMappingArrayInput` via:
//
//	GetLdapConfigurationUserToDnMappingArray{ GetLdapConfigurationUserToDnMappingArgs{...} }
type GetLdapConfigurationUserToDnMappingArrayInput interface {
	pulumi.Input

	ToGetLdapConfigurationUserToDnMappingArrayOutput() GetLdapConfigurationUserToDnMappingArrayOutput
	ToGetLdapConfigurationUserToDnMappingArrayOutputWithContext(context.Context) GetLdapConfigurationUserToDnMappingArrayOutput
}

type GetLdapConfigurationUserToDnMappingArray []GetLdapConfigurationUserToDnMappingInput

func (GetLdapConfigurationUserToDnMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (i GetLdapConfigurationUserToDnMappingArray) ToGetLdapConfigurationUserToDnMappingArrayOutput() GetLdapConfigurationUserToDnMappingArrayOutput {
	return i.ToGetLdapConfigurationUserToDnMappingArrayOutputWithContext(context.Background())
}

func (i GetLdapConfigurationUserToDnMappingArray) ToGetLdapConfigurationUserToDnMappingArrayOutputWithContext(ctx context.Context) GetLdapConfigurationUserToDnMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapConfigurationUserToDnMappingArrayOutput)
}

type GetLdapConfigurationUserToDnMappingOutput struct{ *pulumi.OutputState }

func (GetLdapConfigurationUserToDnMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (o GetLdapConfigurationUserToDnMappingOutput) ToGetLdapConfigurationUserToDnMappingOutput() GetLdapConfigurationUserToDnMappingOutput {
	return o
}

func (o GetLdapConfigurationUserToDnMappingOutput) ToGetLdapConfigurationUserToDnMappingOutputWithContext(ctx context.Context) GetLdapConfigurationUserToDnMappingOutput {
	return o
}

func (o GetLdapConfigurationUserToDnMappingOutput) LdapQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapConfigurationUserToDnMapping) string { return v.LdapQuery }).(pulumi.StringOutput)
}

func (o GetLdapConfigurationUserToDnMappingOutput) Match() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapConfigurationUserToDnMapping) string { return v.Match }).(pulumi.StringOutput)
}

func (o GetLdapConfigurationUserToDnMappingOutput) Substitution() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapConfigurationUserToDnMapping) string { return v.Substitution }).(pulumi.StringOutput)
}

type GetLdapConfigurationUserToDnMappingArrayOutput struct{ *pulumi.OutputState }

func (GetLdapConfigurationUserToDnMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (o GetLdapConfigurationUserToDnMappingArrayOutput) ToGetLdapConfigurationUserToDnMappingArrayOutput() GetLdapConfigurationUserToDnMappingArrayOutput {
	return o
}

func (o GetLdapConfigurationUserToDnMappingArrayOutput) ToGetLdapConfigurationUserToDnMappingArrayOutputWithContext(ctx context.Context) GetLdapConfigurationUserToDnMappingArrayOutput {
	return o
}

func (o GetLdapConfigurationUserToDnMappingArrayOutput) Index(i pulumi.IntInput) GetLdapConfigurationUserToDnMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLdapConfigurationUserToDnMapping {
		return vs[0].([]GetLdapConfigurationUserToDnMapping)[vs[1].(int)]
	}).(GetLdapConfigurationUserToDnMappingOutput)
}

type GetLdapVerifyLink struct {
	Href string `pulumi:"href"`
	Rel  string `pulumi:"rel"`
}

// GetLdapVerifyLinkInput is an input type that accepts GetLdapVerifyLinkArgs and GetLdapVerifyLinkOutput values.
// You can construct a concrete instance of `GetLdapVerifyLinkInput` via:
//
//	GetLdapVerifyLinkArgs{...}
type GetLdapVerifyLinkInput interface {
	pulumi.Input

	ToGetLdapVerifyLinkOutput() GetLdapVerifyLinkOutput
	ToGetLdapVerifyLinkOutputWithContext(context.Context) GetLdapVerifyLinkOutput
}

type GetLdapVerifyLinkArgs struct {
	Href pulumi.StringInput `pulumi:"href"`
	Rel  pulumi.StringInput `pulumi:"rel"`
}

func (GetLdapVerifyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapVerifyLink)(nil)).Elem()
}

func (i GetLdapVerifyLinkArgs) ToGetLdapVerifyLinkOutput() GetLdapVerifyLinkOutput {
	return i.ToGetLdapVerifyLinkOutputWithContext(context.Background())
}

func (i GetLdapVerifyLinkArgs) ToGetLdapVerifyLinkOutputWithContext(ctx context.Context) GetLdapVerifyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapVerifyLinkOutput)
}

// GetLdapVerifyLinkArrayInput is an input type that accepts GetLdapVerifyLinkArray and GetLdapVerifyLinkArrayOutput values.
// You can construct a concrete instance of `GetLdapVerifyLinkArrayInput` via:
//
//	GetLdapVerifyLinkArray{ GetLdapVerifyLinkArgs{...} }
type GetLdapVerifyLinkArrayInput interface {
	pulumi.Input

	ToGetLdapVerifyLinkArrayOutput() GetLdapVerifyLinkArrayOutput
	ToGetLdapVerifyLinkArrayOutputWithContext(context.Context) GetLdapVerifyLinkArrayOutput
}

type GetLdapVerifyLinkArray []GetLdapVerifyLinkInput

func (GetLdapVerifyLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapVerifyLink)(nil)).Elem()
}

func (i GetLdapVerifyLinkArray) ToGetLdapVerifyLinkArrayOutput() GetLdapVerifyLinkArrayOutput {
	return i.ToGetLdapVerifyLinkArrayOutputWithContext(context.Background())
}

func (i GetLdapVerifyLinkArray) ToGetLdapVerifyLinkArrayOutputWithContext(ctx context.Context) GetLdapVerifyLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapVerifyLinkArrayOutput)
}

type GetLdapVerifyLinkOutput struct{ *pulumi.OutputState }

func (GetLdapVerifyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapVerifyLink)(nil)).Elem()
}

func (o GetLdapVerifyLinkOutput) ToGetLdapVerifyLinkOutput() GetLdapVerifyLinkOutput {
	return o
}

func (o GetLdapVerifyLinkOutput) ToGetLdapVerifyLinkOutputWithContext(ctx context.Context) GetLdapVerifyLinkOutput {
	return o
}

func (o GetLdapVerifyLinkOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapVerifyLink) string { return v.Href }).(pulumi.StringOutput)
}

func (o GetLdapVerifyLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapVerifyLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetLdapVerifyLinkArrayOutput struct{ *pulumi.OutputState }

func (GetLdapVerifyLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapVerifyLink)(nil)).Elem()
}

func (o GetLdapVerifyLinkArrayOutput) ToGetLdapVerifyLinkArrayOutput() GetLdapVerifyLinkArrayOutput {
	return o
}

func (o GetLdapVerifyLinkArrayOutput) ToGetLdapVerifyLinkArrayOutputWithContext(ctx context.Context) GetLdapVerifyLinkArrayOutput {
	return o
}

func (o GetLdapVerifyLinkArrayOutput) Index(i pulumi.IntInput) GetLdapVerifyLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLdapVerifyLink {
		return vs[0].([]GetLdapVerifyLink)[vs[1].(int)]
	}).(GetLdapVerifyLinkOutput)
}

type GetLdapVerifyValidation struct {
	// The current status of the LDAP over TLS/SSL configuration.
	Status         string `pulumi:"status"`
	ValidationType string `pulumi:"validationType"`
}

// GetLdapVerifyValidationInput is an input type that accepts GetLdapVerifyValidationArgs and GetLdapVerifyValidationOutput values.
// You can construct a concrete instance of `GetLdapVerifyValidationInput` via:
//
//	GetLdapVerifyValidationArgs{...}
type GetLdapVerifyValidationInput interface {
	pulumi.Input

	ToGetLdapVerifyValidationOutput() GetLdapVerifyValidationOutput
	ToGetLdapVerifyValidationOutputWithContext(context.Context) GetLdapVerifyValidationOutput
}

type GetLdapVerifyValidationArgs struct {
	// The current status of the LDAP over TLS/SSL configuration.
	Status         pulumi.StringInput `pulumi:"status"`
	ValidationType pulumi.StringInput `pulumi:"validationType"`
}

func (GetLdapVerifyValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapVerifyValidation)(nil)).Elem()
}

func (i GetLdapVerifyValidationArgs) ToGetLdapVerifyValidationOutput() GetLdapVerifyValidationOutput {
	return i.ToGetLdapVerifyValidationOutputWithContext(context.Background())
}

func (i GetLdapVerifyValidationArgs) ToGetLdapVerifyValidationOutputWithContext(ctx context.Context) GetLdapVerifyValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapVerifyValidationOutput)
}

// GetLdapVerifyValidationArrayInput is an input type that accepts GetLdapVerifyValidationArray and GetLdapVerifyValidationArrayOutput values.
// You can construct a concrete instance of `GetLdapVerifyValidationArrayInput` via:
//
//	GetLdapVerifyValidationArray{ GetLdapVerifyValidationArgs{...} }
type GetLdapVerifyValidationArrayInput interface {
	pulumi.Input

	ToGetLdapVerifyValidationArrayOutput() GetLdapVerifyValidationArrayOutput
	ToGetLdapVerifyValidationArrayOutputWithContext(context.Context) GetLdapVerifyValidationArrayOutput
}

type GetLdapVerifyValidationArray []GetLdapVerifyValidationInput

func (GetLdapVerifyValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapVerifyValidation)(nil)).Elem()
}

func (i GetLdapVerifyValidationArray) ToGetLdapVerifyValidationArrayOutput() GetLdapVerifyValidationArrayOutput {
	return i.ToGetLdapVerifyValidationArrayOutputWithContext(context.Background())
}

func (i GetLdapVerifyValidationArray) ToGetLdapVerifyValidationArrayOutputWithContext(ctx context.Context) GetLdapVerifyValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapVerifyValidationArrayOutput)
}

type GetLdapVerifyValidationOutput struct{ *pulumi.OutputState }

func (GetLdapVerifyValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapVerifyValidation)(nil)).Elem()
}

func (o GetLdapVerifyValidationOutput) ToGetLdapVerifyValidationOutput() GetLdapVerifyValidationOutput {
	return o
}

func (o GetLdapVerifyValidationOutput) ToGetLdapVerifyValidationOutputWithContext(ctx context.Context) GetLdapVerifyValidationOutput {
	return o
}

// The current status of the LDAP over TLS/SSL configuration.
func (o GetLdapVerifyValidationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapVerifyValidation) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetLdapVerifyValidationOutput) ValidationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapVerifyValidation) string { return v.ValidationType }).(pulumi.StringOutput)
}

type GetLdapVerifyValidationArrayOutput struct{ *pulumi.OutputState }

func (GetLdapVerifyValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapVerifyValidation)(nil)).Elem()
}

func (o GetLdapVerifyValidationArrayOutput) ToGetLdapVerifyValidationArrayOutput() GetLdapVerifyValidationArrayOutput {
	return o
}

func (o GetLdapVerifyValidationArrayOutput) ToGetLdapVerifyValidationArrayOutputWithContext(ctx context.Context) GetLdapVerifyValidationArrayOutput {
	return o
}

func (o GetLdapVerifyValidationArrayOutput) Index(i pulumi.IntInput) GetLdapVerifyValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLdapVerifyValidation {
		return vs[0].([]GetLdapVerifyValidation)[vs[1].(int)]
	}).(GetLdapVerifyValidationOutput)
}

type GetNetworkContainersResult struct {
	// CIDR block that Atlas uses for your clusters. Atlas uses the specified CIDR block for all other Network Peering connections created in the project. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following [private networks](https://tools.ietf.org/html/rfc1918.html#section-3).
	AtlasCidrBlock string `pulumi:"atlasCidrBlock"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	// Unique identifier of the GCP project in which the Network Peering connection resides.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// The Network Peering Container ID.
	Id string `pulumi:"id"`
	// Name of the Network Peering connection in the Atlas project.
	NetworkName string `pulumi:"networkName"`
	// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
	ProviderName string `pulumi:"providerName"`
	// Indicates whether the project has Network Peering connections deployed in the container.
	Provisioned bool `pulumi:"provisioned"`
	// The Atlas Azure region name for where this container exists.
	Region string `pulumi:"region"`
	// The Atlas AWS region name for where this container exists.
	RegionName string `pulumi:"regionName"`
	// Atlas GCP regions where the container resides.
	Regions []string `pulumi:"regions"`
	// The name of the Azure VNet. This value is null until you provision an Azure VNet in the container.
	VnetName string `pulumi:"vnetName"`
	// Unique identifier of the project’s VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetNetworkContainersResultInput is an input type that accepts GetNetworkContainersResultArgs and GetNetworkContainersResultOutput values.
// You can construct a concrete instance of `GetNetworkContainersResultInput` via:
//
//	GetNetworkContainersResultArgs{...}
type GetNetworkContainersResultInput interface {
	pulumi.Input

	ToGetNetworkContainersResultOutput() GetNetworkContainersResultOutput
	ToGetNetworkContainersResultOutputWithContext(context.Context) GetNetworkContainersResultOutput
}

type GetNetworkContainersResultArgs struct {
	// CIDR block that Atlas uses for your clusters. Atlas uses the specified CIDR block for all other Network Peering connections created in the project. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following [private networks](https://tools.ietf.org/html/rfc1918.html#section-3).
	AtlasCidrBlock pulumi.StringInput `pulumi:"atlasCidrBlock"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId pulumi.StringInput `pulumi:"azureSubscriptionId"`
	// Unique identifier of the GCP project in which the Network Peering connection resides.
	GcpProjectId pulumi.StringInput `pulumi:"gcpProjectId"`
	// The Network Peering Container ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the Network Peering connection in the Atlas project.
	NetworkName pulumi.StringInput `pulumi:"networkName"`
	// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Indicates whether the project has Network Peering connections deployed in the container.
	Provisioned pulumi.BoolInput `pulumi:"provisioned"`
	// The Atlas Azure region name for where this container exists.
	Region pulumi.StringInput `pulumi:"region"`
	// The Atlas AWS region name for where this container exists.
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// Atlas GCP regions where the container resides.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// The name of the Azure VNet. This value is null until you provision an Azure VNet in the container.
	VnetName pulumi.StringInput `pulumi:"vnetName"`
	// Unique identifier of the project’s VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetNetworkContainersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkContainersResult)(nil)).Elem()
}

func (i GetNetworkContainersResultArgs) ToGetNetworkContainersResultOutput() GetNetworkContainersResultOutput {
	return i.ToGetNetworkContainersResultOutputWithContext(context.Background())
}

func (i GetNetworkContainersResultArgs) ToGetNetworkContainersResultOutputWithContext(ctx context.Context) GetNetworkContainersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkContainersResultOutput)
}

// GetNetworkContainersResultArrayInput is an input type that accepts GetNetworkContainersResultArray and GetNetworkContainersResultArrayOutput values.
// You can construct a concrete instance of `GetNetworkContainersResultArrayInput` via:
//
//	GetNetworkContainersResultArray{ GetNetworkContainersResultArgs{...} }
type GetNetworkContainersResultArrayInput interface {
	pulumi.Input

	ToGetNetworkContainersResultArrayOutput() GetNetworkContainersResultArrayOutput
	ToGetNetworkContainersResultArrayOutputWithContext(context.Context) GetNetworkContainersResultArrayOutput
}

type GetNetworkContainersResultArray []GetNetworkContainersResultInput

func (GetNetworkContainersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkContainersResult)(nil)).Elem()
}

func (i GetNetworkContainersResultArray) ToGetNetworkContainersResultArrayOutput() GetNetworkContainersResultArrayOutput {
	return i.ToGetNetworkContainersResultArrayOutputWithContext(context.Background())
}

func (i GetNetworkContainersResultArray) ToGetNetworkContainersResultArrayOutputWithContext(ctx context.Context) GetNetworkContainersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkContainersResultArrayOutput)
}

type GetNetworkContainersResultOutput struct{ *pulumi.OutputState }

func (GetNetworkContainersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkContainersResult)(nil)).Elem()
}

func (o GetNetworkContainersResultOutput) ToGetNetworkContainersResultOutput() GetNetworkContainersResultOutput {
	return o
}

func (o GetNetworkContainersResultOutput) ToGetNetworkContainersResultOutputWithContext(ctx context.Context) GetNetworkContainersResultOutput {
	return o
}

// CIDR block that Atlas uses for your clusters. Atlas uses the specified CIDR block for all other Network Peering connections created in the project. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following [private networks](https://tools.ietf.org/html/rfc1918.html#section-3).
func (o GetNetworkContainersResultOutput) AtlasCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.AtlasCidrBlock }).(pulumi.StringOutput)
}

// Unique identifer of the Azure subscription in which the VNet resides.
func (o GetNetworkContainersResultOutput) AzureSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.AzureSubscriptionId }).(pulumi.StringOutput)
}

// Unique identifier of the GCP project in which the Network Peering connection resides.
func (o GetNetworkContainersResultOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

// The Network Peering Container ID.
func (o GetNetworkContainersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the Network Peering connection in the Atlas project.
func (o GetNetworkContainersResultOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.NetworkName }).(pulumi.StringOutput)
}

// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
func (o GetNetworkContainersResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Indicates whether the project has Network Peering connections deployed in the container.
func (o GetNetworkContainersResultOutput) Provisioned() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) bool { return v.Provisioned }).(pulumi.BoolOutput)
}

// The Atlas Azure region name for where this container exists.
func (o GetNetworkContainersResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.Region }).(pulumi.StringOutput)
}

// The Atlas AWS region name for where this container exists.
func (o GetNetworkContainersResultOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.RegionName }).(pulumi.StringOutput)
}

// Atlas GCP regions where the container resides.
func (o GetNetworkContainersResultOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// The name of the Azure VNet. This value is null until you provision an Azure VNet in the container.
func (o GetNetworkContainersResultOutput) VnetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.VnetName }).(pulumi.StringOutput)
}

// Unique identifier of the project’s VPC.
func (o GetNetworkContainersResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetNetworkContainersResultArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkContainersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkContainersResult)(nil)).Elem()
}

func (o GetNetworkContainersResultArrayOutput) ToGetNetworkContainersResultArrayOutput() GetNetworkContainersResultArrayOutput {
	return o
}

func (o GetNetworkContainersResultArrayOutput) ToGetNetworkContainersResultArrayOutputWithContext(ctx context.Context) GetNetworkContainersResultArrayOutput {
	return o
}

func (o GetNetworkContainersResultArrayOutput) Index(i pulumi.IntInput) GetNetworkContainersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkContainersResult {
		return vs[0].([]GetNetworkContainersResult)[vs[1].(int)]
	}).(GetNetworkContainersResultOutput)
}

type GetNetworkPeeringsResult struct {
	// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
	AccepterRegionName string `pulumi:"accepterRegionName"`
	AtlasCidrBlock     string `pulumi:"atlasCidrBlock"`
	// Account ID of the owner of the peer VPC.
	AwsAccountId string `pulumi:"awsAccountId"`
	// Unique identifier for an Azure AD directory.
	AzureDirectoryId string `pulumi:"azureDirectoryId"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	// Unique identifier for the peering connection.
	ConnectionId string `pulumi:"connectionId"`
	ContainerId  string `pulumi:"containerId"`
	// When `"status" : "FAILED"`, Atlas provides a description of the error.
	ErrorMessage string `pulumi:"errorMessage"`
	// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
	ErrorState string `pulumi:"errorState"`
	// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
	ErrorStateName string `pulumi:"errorStateName"`
	// GCP project ID of the owner of the network peer.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// Name of the network peer to which Atlas connects.
	NetworkName string `pulumi:"networkName"`
	// Atlas assigned unique ID for the peering connection.
	PeeringId string `pulumi:"peeringId"`
	// Cloud provider for this VPC peering connection. If omitted, Atlas sets this parameter to AWS. (Possible Values `AWS`, `AZURE`, `GCP`).
	ProviderName string `pulumi:"providerName"`
	// Name of your Azure resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Peer VPC CIDR block or subnet.
	RouteTableCidrBlock string `pulumi:"routeTableCidrBlock"`
	// Status of the Atlas network peering connection: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING`, `WAITING_FOR_USER`.
	Status string `pulumi:"status"`
	// The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
	StatusName string `pulumi:"statusName"`
	// Name of your Azure VNet.
	VnetName string `pulumi:"vnetName"`
	// Unique identifier of the peer VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetNetworkPeeringsResultInput is an input type that accepts GetNetworkPeeringsResultArgs and GetNetworkPeeringsResultOutput values.
// You can construct a concrete instance of `GetNetworkPeeringsResultInput` via:
//
//	GetNetworkPeeringsResultArgs{...}
type GetNetworkPeeringsResultInput interface {
	pulumi.Input

	ToGetNetworkPeeringsResultOutput() GetNetworkPeeringsResultOutput
	ToGetNetworkPeeringsResultOutputWithContext(context.Context) GetNetworkPeeringsResultOutput
}

type GetNetworkPeeringsResultArgs struct {
	// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
	AccepterRegionName pulumi.StringInput `pulumi:"accepterRegionName"`
	AtlasCidrBlock     pulumi.StringInput `pulumi:"atlasCidrBlock"`
	// Account ID of the owner of the peer VPC.
	AwsAccountId pulumi.StringInput `pulumi:"awsAccountId"`
	// Unique identifier for an Azure AD directory.
	AzureDirectoryId pulumi.StringInput `pulumi:"azureDirectoryId"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId pulumi.StringInput `pulumi:"azureSubscriptionId"`
	// Unique identifier for the peering connection.
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
	ContainerId  pulumi.StringInput `pulumi:"containerId"`
	// When `"status" : "FAILED"`, Atlas provides a description of the error.
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
	ErrorState pulumi.StringInput `pulumi:"errorState"`
	// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
	ErrorStateName pulumi.StringInput `pulumi:"errorStateName"`
	// GCP project ID of the owner of the network peer.
	GcpProjectId pulumi.StringInput `pulumi:"gcpProjectId"`
	// Name of the network peer to which Atlas connects.
	NetworkName pulumi.StringInput `pulumi:"networkName"`
	// Atlas assigned unique ID for the peering connection.
	PeeringId pulumi.StringInput `pulumi:"peeringId"`
	// Cloud provider for this VPC peering connection. If omitted, Atlas sets this parameter to AWS. (Possible Values `AWS`, `AZURE`, `GCP`).
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Name of your Azure resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Peer VPC CIDR block or subnet.
	RouteTableCidrBlock pulumi.StringInput `pulumi:"routeTableCidrBlock"`
	// Status of the Atlas network peering connection: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING`, `WAITING_FOR_USER`.
	Status pulumi.StringInput `pulumi:"status"`
	// The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
	StatusName pulumi.StringInput `pulumi:"statusName"`
	// Name of your Azure VNet.
	VnetName pulumi.StringInput `pulumi:"vnetName"`
	// Unique identifier of the peer VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetNetworkPeeringsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPeeringsResult)(nil)).Elem()
}

func (i GetNetworkPeeringsResultArgs) ToGetNetworkPeeringsResultOutput() GetNetworkPeeringsResultOutput {
	return i.ToGetNetworkPeeringsResultOutputWithContext(context.Background())
}

func (i GetNetworkPeeringsResultArgs) ToGetNetworkPeeringsResultOutputWithContext(ctx context.Context) GetNetworkPeeringsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPeeringsResultOutput)
}

// GetNetworkPeeringsResultArrayInput is an input type that accepts GetNetworkPeeringsResultArray and GetNetworkPeeringsResultArrayOutput values.
// You can construct a concrete instance of `GetNetworkPeeringsResultArrayInput` via:
//
//	GetNetworkPeeringsResultArray{ GetNetworkPeeringsResultArgs{...} }
type GetNetworkPeeringsResultArrayInput interface {
	pulumi.Input

	ToGetNetworkPeeringsResultArrayOutput() GetNetworkPeeringsResultArrayOutput
	ToGetNetworkPeeringsResultArrayOutputWithContext(context.Context) GetNetworkPeeringsResultArrayOutput
}

type GetNetworkPeeringsResultArray []GetNetworkPeeringsResultInput

func (GetNetworkPeeringsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPeeringsResult)(nil)).Elem()
}

func (i GetNetworkPeeringsResultArray) ToGetNetworkPeeringsResultArrayOutput() GetNetworkPeeringsResultArrayOutput {
	return i.ToGetNetworkPeeringsResultArrayOutputWithContext(context.Background())
}

func (i GetNetworkPeeringsResultArray) ToGetNetworkPeeringsResultArrayOutputWithContext(ctx context.Context) GetNetworkPeeringsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPeeringsResultArrayOutput)
}

type GetNetworkPeeringsResultOutput struct{ *pulumi.OutputState }

func (GetNetworkPeeringsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPeeringsResult)(nil)).Elem()
}

func (o GetNetworkPeeringsResultOutput) ToGetNetworkPeeringsResultOutput() GetNetworkPeeringsResultOutput {
	return o
}

func (o GetNetworkPeeringsResultOutput) ToGetNetworkPeeringsResultOutputWithContext(ctx context.Context) GetNetworkPeeringsResultOutput {
	return o
}

// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
func (o GetNetworkPeeringsResultOutput) AccepterRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AccepterRegionName }).(pulumi.StringOutput)
}

func (o GetNetworkPeeringsResultOutput) AtlasCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AtlasCidrBlock }).(pulumi.StringOutput)
}

// Account ID of the owner of the peer VPC.
func (o GetNetworkPeeringsResultOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AwsAccountId }).(pulumi.StringOutput)
}

// Unique identifier for an Azure AD directory.
func (o GetNetworkPeeringsResultOutput) AzureDirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AzureDirectoryId }).(pulumi.StringOutput)
}

// Unique identifer of the Azure subscription in which the VNet resides.
func (o GetNetworkPeeringsResultOutput) AzureSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AzureSubscriptionId }).(pulumi.StringOutput)
}

// Unique identifier for the peering connection.
func (o GetNetworkPeeringsResultOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ConnectionId }).(pulumi.StringOutput)
}

func (o GetNetworkPeeringsResultOutput) ContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ContainerId }).(pulumi.StringOutput)
}

// When `"status" : "FAILED"`, Atlas provides a description of the error.
func (o GetNetworkPeeringsResultOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
func (o GetNetworkPeeringsResultOutput) ErrorState() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ErrorState }).(pulumi.StringOutput)
}

// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
func (o GetNetworkPeeringsResultOutput) ErrorStateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ErrorStateName }).(pulumi.StringOutput)
}

// GCP project ID of the owner of the network peer.
func (o GetNetworkPeeringsResultOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

// Name of the network peer to which Atlas connects.
func (o GetNetworkPeeringsResultOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.NetworkName }).(pulumi.StringOutput)
}

// Atlas assigned unique ID for the peering connection.
func (o GetNetworkPeeringsResultOutput) PeeringId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.PeeringId }).(pulumi.StringOutput)
}

// Cloud provider for this VPC peering connection. If omitted, Atlas sets this parameter to AWS. (Possible Values `AWS`, `AZURE`, `GCP`).
func (o GetNetworkPeeringsResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Name of your Azure resource group.
func (o GetNetworkPeeringsResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Peer VPC CIDR block or subnet.
func (o GetNetworkPeeringsResultOutput) RouteTableCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.RouteTableCidrBlock }).(pulumi.StringOutput)
}

// Status of the Atlas network peering connection: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING`, `WAITING_FOR_USER`.
func (o GetNetworkPeeringsResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.Status }).(pulumi.StringOutput)
}

// The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
func (o GetNetworkPeeringsResultOutput) StatusName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.StatusName }).(pulumi.StringOutput)
}

// Name of your Azure VNet.
func (o GetNetworkPeeringsResultOutput) VnetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.VnetName }).(pulumi.StringOutput)
}

// Unique identifier of the peer VPC.
func (o GetNetworkPeeringsResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetNetworkPeeringsResultArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkPeeringsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPeeringsResult)(nil)).Elem()
}

func (o GetNetworkPeeringsResultArrayOutput) ToGetNetworkPeeringsResultArrayOutput() GetNetworkPeeringsResultArrayOutput {
	return o
}

func (o GetNetworkPeeringsResultArrayOutput) ToGetNetworkPeeringsResultArrayOutputWithContext(ctx context.Context) GetNetworkPeeringsResultArrayOutput {
	return o
}

func (o GetNetworkPeeringsResultArrayOutput) Index(i pulumi.IntInput) GetNetworkPeeringsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkPeeringsResult {
		return vs[0].([]GetNetworkPeeringsResult)[vs[1].(int)]
	}).(GetNetworkPeeringsResultOutput)
}

type GetOnlineArchiveCriteria struct {
	DateField       string `pulumi:"dateField"`
	DateFormat      string `pulumi:"dateFormat"`
	ExpireAfterDays int    `pulumi:"expireAfterDays"`
	Query           string `pulumi:"query"`
	Type            string `pulumi:"type"`
}

// GetOnlineArchiveCriteriaInput is an input type that accepts GetOnlineArchiveCriteriaArgs and GetOnlineArchiveCriteriaOutput values.
// You can construct a concrete instance of `GetOnlineArchiveCriteriaInput` via:
//
//	GetOnlineArchiveCriteriaArgs{...}
type GetOnlineArchiveCriteriaInput interface {
	pulumi.Input

	ToGetOnlineArchiveCriteriaOutput() GetOnlineArchiveCriteriaOutput
	ToGetOnlineArchiveCriteriaOutputWithContext(context.Context) GetOnlineArchiveCriteriaOutput
}

type GetOnlineArchiveCriteriaArgs struct {
	DateField       pulumi.StringInput `pulumi:"dateField"`
	DateFormat      pulumi.StringInput `pulumi:"dateFormat"`
	ExpireAfterDays pulumi.IntInput    `pulumi:"expireAfterDays"`
	Query           pulumi.StringInput `pulumi:"query"`
	Type            pulumi.StringInput `pulumi:"type"`
}

func (GetOnlineArchiveCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchiveCriteria)(nil)).Elem()
}

func (i GetOnlineArchiveCriteriaArgs) ToGetOnlineArchiveCriteriaOutput() GetOnlineArchiveCriteriaOutput {
	return i.ToGetOnlineArchiveCriteriaOutputWithContext(context.Background())
}

func (i GetOnlineArchiveCriteriaArgs) ToGetOnlineArchiveCriteriaOutputWithContext(ctx context.Context) GetOnlineArchiveCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchiveCriteriaOutput)
}

// GetOnlineArchiveCriteriaArrayInput is an input type that accepts GetOnlineArchiveCriteriaArray and GetOnlineArchiveCriteriaArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchiveCriteriaArrayInput` via:
//
//	GetOnlineArchiveCriteriaArray{ GetOnlineArchiveCriteriaArgs{...} }
type GetOnlineArchiveCriteriaArrayInput interface {
	pulumi.Input

	ToGetOnlineArchiveCriteriaArrayOutput() GetOnlineArchiveCriteriaArrayOutput
	ToGetOnlineArchiveCriteriaArrayOutputWithContext(context.Context) GetOnlineArchiveCriteriaArrayOutput
}

type GetOnlineArchiveCriteriaArray []GetOnlineArchiveCriteriaInput

func (GetOnlineArchiveCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchiveCriteria)(nil)).Elem()
}

func (i GetOnlineArchiveCriteriaArray) ToGetOnlineArchiveCriteriaArrayOutput() GetOnlineArchiveCriteriaArrayOutput {
	return i.ToGetOnlineArchiveCriteriaArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchiveCriteriaArray) ToGetOnlineArchiveCriteriaArrayOutputWithContext(ctx context.Context) GetOnlineArchiveCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchiveCriteriaArrayOutput)
}

type GetOnlineArchiveCriteriaOutput struct{ *pulumi.OutputState }

func (GetOnlineArchiveCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchiveCriteria)(nil)).Elem()
}

func (o GetOnlineArchiveCriteriaOutput) ToGetOnlineArchiveCriteriaOutput() GetOnlineArchiveCriteriaOutput {
	return o
}

func (o GetOnlineArchiveCriteriaOutput) ToGetOnlineArchiveCriteriaOutputWithContext(ctx context.Context) GetOnlineArchiveCriteriaOutput {
	return o
}

func (o GetOnlineArchiveCriteriaOutput) DateField() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) string { return v.DateField }).(pulumi.StringOutput)
}

func (o GetOnlineArchiveCriteriaOutput) DateFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) string { return v.DateFormat }).(pulumi.StringOutput)
}

func (o GetOnlineArchiveCriteriaOutput) ExpireAfterDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) int { return v.ExpireAfterDays }).(pulumi.IntOutput)
}

func (o GetOnlineArchiveCriteriaOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) string { return v.Query }).(pulumi.StringOutput)
}

func (o GetOnlineArchiveCriteriaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) string { return v.Type }).(pulumi.StringOutput)
}

type GetOnlineArchiveCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchiveCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchiveCriteria)(nil)).Elem()
}

func (o GetOnlineArchiveCriteriaArrayOutput) ToGetOnlineArchiveCriteriaArrayOutput() GetOnlineArchiveCriteriaArrayOutput {
	return o
}

func (o GetOnlineArchiveCriteriaArrayOutput) ToGetOnlineArchiveCriteriaArrayOutputWithContext(ctx context.Context) GetOnlineArchiveCriteriaArrayOutput {
	return o
}

func (o GetOnlineArchiveCriteriaArrayOutput) Index(i pulumi.IntInput) GetOnlineArchiveCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchiveCriteria {
		return vs[0].([]GetOnlineArchiveCriteria)[vs[1].(int)]
	}).(GetOnlineArchiveCriteriaOutput)
}

type GetOnlineArchivePartitionField struct {
	FieldName string `pulumi:"fieldName"`
	FieldType string `pulumi:"fieldType"`
	Order     int    `pulumi:"order"`
}

// GetOnlineArchivePartitionFieldInput is an input type that accepts GetOnlineArchivePartitionFieldArgs and GetOnlineArchivePartitionFieldOutput values.
// You can construct a concrete instance of `GetOnlineArchivePartitionFieldInput` via:
//
//	GetOnlineArchivePartitionFieldArgs{...}
type GetOnlineArchivePartitionFieldInput interface {
	pulumi.Input

	ToGetOnlineArchivePartitionFieldOutput() GetOnlineArchivePartitionFieldOutput
	ToGetOnlineArchivePartitionFieldOutputWithContext(context.Context) GetOnlineArchivePartitionFieldOutput
}

type GetOnlineArchivePartitionFieldArgs struct {
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	FieldType pulumi.StringInput `pulumi:"fieldType"`
	Order     pulumi.IntInput    `pulumi:"order"`
}

func (GetOnlineArchivePartitionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivePartitionField)(nil)).Elem()
}

func (i GetOnlineArchivePartitionFieldArgs) ToGetOnlineArchivePartitionFieldOutput() GetOnlineArchivePartitionFieldOutput {
	return i.ToGetOnlineArchivePartitionFieldOutputWithContext(context.Background())
}

func (i GetOnlineArchivePartitionFieldArgs) ToGetOnlineArchivePartitionFieldOutputWithContext(ctx context.Context) GetOnlineArchivePartitionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivePartitionFieldOutput)
}

// GetOnlineArchivePartitionFieldArrayInput is an input type that accepts GetOnlineArchivePartitionFieldArray and GetOnlineArchivePartitionFieldArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchivePartitionFieldArrayInput` via:
//
//	GetOnlineArchivePartitionFieldArray{ GetOnlineArchivePartitionFieldArgs{...} }
type GetOnlineArchivePartitionFieldArrayInput interface {
	pulumi.Input

	ToGetOnlineArchivePartitionFieldArrayOutput() GetOnlineArchivePartitionFieldArrayOutput
	ToGetOnlineArchivePartitionFieldArrayOutputWithContext(context.Context) GetOnlineArchivePartitionFieldArrayOutput
}

type GetOnlineArchivePartitionFieldArray []GetOnlineArchivePartitionFieldInput

func (GetOnlineArchivePartitionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivePartitionField)(nil)).Elem()
}

func (i GetOnlineArchivePartitionFieldArray) ToGetOnlineArchivePartitionFieldArrayOutput() GetOnlineArchivePartitionFieldArrayOutput {
	return i.ToGetOnlineArchivePartitionFieldArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchivePartitionFieldArray) ToGetOnlineArchivePartitionFieldArrayOutputWithContext(ctx context.Context) GetOnlineArchivePartitionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivePartitionFieldArrayOutput)
}

type GetOnlineArchivePartitionFieldOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivePartitionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivePartitionField)(nil)).Elem()
}

func (o GetOnlineArchivePartitionFieldOutput) ToGetOnlineArchivePartitionFieldOutput() GetOnlineArchivePartitionFieldOutput {
	return o
}

func (o GetOnlineArchivePartitionFieldOutput) ToGetOnlineArchivePartitionFieldOutputWithContext(ctx context.Context) GetOnlineArchivePartitionFieldOutput {
	return o
}

func (o GetOnlineArchivePartitionFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivePartitionField) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivePartitionFieldOutput) FieldType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivePartitionField) string { return v.FieldType }).(pulumi.StringOutput)
}

func (o GetOnlineArchivePartitionFieldOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchivePartitionField) int { return v.Order }).(pulumi.IntOutput)
}

type GetOnlineArchivePartitionFieldArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivePartitionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivePartitionField)(nil)).Elem()
}

func (o GetOnlineArchivePartitionFieldArrayOutput) ToGetOnlineArchivePartitionFieldArrayOutput() GetOnlineArchivePartitionFieldArrayOutput {
	return o
}

func (o GetOnlineArchivePartitionFieldArrayOutput) ToGetOnlineArchivePartitionFieldArrayOutputWithContext(ctx context.Context) GetOnlineArchivePartitionFieldArrayOutput {
	return o
}

func (o GetOnlineArchivePartitionFieldArrayOutput) Index(i pulumi.IntInput) GetOnlineArchivePartitionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchivePartitionField {
		return vs[0].([]GetOnlineArchivePartitionField)[vs[1].(int)]
	}).(GetOnlineArchivePartitionFieldOutput)
}

type GetOnlineArchivesResult struct {
	ArchiveId string `pulumi:"archiveId"`
	// Name of the cluster that contains the collection.
	ClusterName     string                                  `pulumi:"clusterName"`
	CollName        string                                  `pulumi:"collName"`
	CollectionType  string                                  `pulumi:"collectionType"`
	Criterias       []GetOnlineArchivesResultCriteria       `pulumi:"criterias"`
	DbName          string                                  `pulumi:"dbName"`
	PartitionFields []GetOnlineArchivesResultPartitionField `pulumi:"partitionFields"`
	Paused          bool                                    `pulumi:"paused"`
	// The unique ID for the project.
	ProjectId string `pulumi:"projectId"`
	State     string `pulumi:"state"`
}

// GetOnlineArchivesResultInput is an input type that accepts GetOnlineArchivesResultArgs and GetOnlineArchivesResultOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultInput` via:
//
//	GetOnlineArchivesResultArgs{...}
type GetOnlineArchivesResultInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultOutput() GetOnlineArchivesResultOutput
	ToGetOnlineArchivesResultOutputWithContext(context.Context) GetOnlineArchivesResultOutput
}

type GetOnlineArchivesResultArgs struct {
	ArchiveId pulumi.StringInput `pulumi:"archiveId"`
	// Name of the cluster that contains the collection.
	ClusterName     pulumi.StringInput                              `pulumi:"clusterName"`
	CollName        pulumi.StringInput                              `pulumi:"collName"`
	CollectionType  pulumi.StringInput                              `pulumi:"collectionType"`
	Criterias       GetOnlineArchivesResultCriteriaArrayInput       `pulumi:"criterias"`
	DbName          pulumi.StringInput                              `pulumi:"dbName"`
	PartitionFields GetOnlineArchivesResultPartitionFieldArrayInput `pulumi:"partitionFields"`
	Paused          pulumi.BoolInput                                `pulumi:"paused"`
	// The unique ID for the project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	State     pulumi.StringInput `pulumi:"state"`
}

func (GetOnlineArchivesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResult)(nil)).Elem()
}

func (i GetOnlineArchivesResultArgs) ToGetOnlineArchivesResultOutput() GetOnlineArchivesResultOutput {
	return i.ToGetOnlineArchivesResultOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultArgs) ToGetOnlineArchivesResultOutputWithContext(ctx context.Context) GetOnlineArchivesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultOutput)
}

// GetOnlineArchivesResultArrayInput is an input type that accepts GetOnlineArchivesResultArray and GetOnlineArchivesResultArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultArrayInput` via:
//
//	GetOnlineArchivesResultArray{ GetOnlineArchivesResultArgs{...} }
type GetOnlineArchivesResultArrayInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultArrayOutput() GetOnlineArchivesResultArrayOutput
	ToGetOnlineArchivesResultArrayOutputWithContext(context.Context) GetOnlineArchivesResultArrayOutput
}

type GetOnlineArchivesResultArray []GetOnlineArchivesResultInput

func (GetOnlineArchivesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResult)(nil)).Elem()
}

func (i GetOnlineArchivesResultArray) ToGetOnlineArchivesResultArrayOutput() GetOnlineArchivesResultArrayOutput {
	return i.ToGetOnlineArchivesResultArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultArray) ToGetOnlineArchivesResultArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultArrayOutput)
}

type GetOnlineArchivesResultOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResult)(nil)).Elem()
}

func (o GetOnlineArchivesResultOutput) ToGetOnlineArchivesResultOutput() GetOnlineArchivesResultOutput {
	return o
}

func (o GetOnlineArchivesResultOutput) ToGetOnlineArchivesResultOutputWithContext(ctx context.Context) GetOnlineArchivesResultOutput {
	return o
}

func (o GetOnlineArchivesResultOutput) ArchiveId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.ArchiveId }).(pulumi.StringOutput)
}

// Name of the cluster that contains the collection.
func (o GetOnlineArchivesResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultOutput) CollName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.CollName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultOutput) CollectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.CollectionType }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultOutput) Criterias() GetOnlineArchivesResultCriteriaArrayOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) []GetOnlineArchivesResultCriteria { return v.Criterias }).(GetOnlineArchivesResultCriteriaArrayOutput)
}

func (o GetOnlineArchivesResultOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.DbName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultOutput) PartitionFields() GetOnlineArchivesResultPartitionFieldArrayOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) []GetOnlineArchivesResultPartitionField { return v.PartitionFields }).(GetOnlineArchivesResultPartitionFieldArrayOutput)
}

func (o GetOnlineArchivesResultOutput) Paused() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) bool { return v.Paused }).(pulumi.BoolOutput)
}

// The unique ID for the project.
func (o GetOnlineArchivesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.State }).(pulumi.StringOutput)
}

type GetOnlineArchivesResultArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResult)(nil)).Elem()
}

func (o GetOnlineArchivesResultArrayOutput) ToGetOnlineArchivesResultArrayOutput() GetOnlineArchivesResultArrayOutput {
	return o
}

func (o GetOnlineArchivesResultArrayOutput) ToGetOnlineArchivesResultArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultArrayOutput {
	return o
}

func (o GetOnlineArchivesResultArrayOutput) Index(i pulumi.IntInput) GetOnlineArchivesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchivesResult {
		return vs[0].([]GetOnlineArchivesResult)[vs[1].(int)]
	}).(GetOnlineArchivesResultOutput)
}

type GetOnlineArchivesResultCriteria struct {
	DateField       string `pulumi:"dateField"`
	DateFormat      string `pulumi:"dateFormat"`
	ExpireAfterDays int    `pulumi:"expireAfterDays"`
	Query           string `pulumi:"query"`
	Type            string `pulumi:"type"`
}

// GetOnlineArchivesResultCriteriaInput is an input type that accepts GetOnlineArchivesResultCriteriaArgs and GetOnlineArchivesResultCriteriaOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultCriteriaInput` via:
//
//	GetOnlineArchivesResultCriteriaArgs{...}
type GetOnlineArchivesResultCriteriaInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultCriteriaOutput() GetOnlineArchivesResultCriteriaOutput
	ToGetOnlineArchivesResultCriteriaOutputWithContext(context.Context) GetOnlineArchivesResultCriteriaOutput
}

type GetOnlineArchivesResultCriteriaArgs struct {
	DateField       pulumi.StringInput `pulumi:"dateField"`
	DateFormat      pulumi.StringInput `pulumi:"dateFormat"`
	ExpireAfterDays pulumi.IntInput    `pulumi:"expireAfterDays"`
	Query           pulumi.StringInput `pulumi:"query"`
	Type            pulumi.StringInput `pulumi:"type"`
}

func (GetOnlineArchivesResultCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResultCriteria)(nil)).Elem()
}

func (i GetOnlineArchivesResultCriteriaArgs) ToGetOnlineArchivesResultCriteriaOutput() GetOnlineArchivesResultCriteriaOutput {
	return i.ToGetOnlineArchivesResultCriteriaOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultCriteriaArgs) ToGetOnlineArchivesResultCriteriaOutputWithContext(ctx context.Context) GetOnlineArchivesResultCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultCriteriaOutput)
}

// GetOnlineArchivesResultCriteriaArrayInput is an input type that accepts GetOnlineArchivesResultCriteriaArray and GetOnlineArchivesResultCriteriaArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultCriteriaArrayInput` via:
//
//	GetOnlineArchivesResultCriteriaArray{ GetOnlineArchivesResultCriteriaArgs{...} }
type GetOnlineArchivesResultCriteriaArrayInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultCriteriaArrayOutput() GetOnlineArchivesResultCriteriaArrayOutput
	ToGetOnlineArchivesResultCriteriaArrayOutputWithContext(context.Context) GetOnlineArchivesResultCriteriaArrayOutput
}

type GetOnlineArchivesResultCriteriaArray []GetOnlineArchivesResultCriteriaInput

func (GetOnlineArchivesResultCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResultCriteria)(nil)).Elem()
}

func (i GetOnlineArchivesResultCriteriaArray) ToGetOnlineArchivesResultCriteriaArrayOutput() GetOnlineArchivesResultCriteriaArrayOutput {
	return i.ToGetOnlineArchivesResultCriteriaArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultCriteriaArray) ToGetOnlineArchivesResultCriteriaArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultCriteriaArrayOutput)
}

type GetOnlineArchivesResultCriteriaOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResultCriteria)(nil)).Elem()
}

func (o GetOnlineArchivesResultCriteriaOutput) ToGetOnlineArchivesResultCriteriaOutput() GetOnlineArchivesResultCriteriaOutput {
	return o
}

func (o GetOnlineArchivesResultCriteriaOutput) ToGetOnlineArchivesResultCriteriaOutputWithContext(ctx context.Context) GetOnlineArchivesResultCriteriaOutput {
	return o
}

func (o GetOnlineArchivesResultCriteriaOutput) DateField() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) string { return v.DateField }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultCriteriaOutput) DateFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) string { return v.DateFormat }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultCriteriaOutput) ExpireAfterDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) int { return v.ExpireAfterDays }).(pulumi.IntOutput)
}

func (o GetOnlineArchivesResultCriteriaOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) string { return v.Query }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultCriteriaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) string { return v.Type }).(pulumi.StringOutput)
}

type GetOnlineArchivesResultCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResultCriteria)(nil)).Elem()
}

func (o GetOnlineArchivesResultCriteriaArrayOutput) ToGetOnlineArchivesResultCriteriaArrayOutput() GetOnlineArchivesResultCriteriaArrayOutput {
	return o
}

func (o GetOnlineArchivesResultCriteriaArrayOutput) ToGetOnlineArchivesResultCriteriaArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultCriteriaArrayOutput {
	return o
}

func (o GetOnlineArchivesResultCriteriaArrayOutput) Index(i pulumi.IntInput) GetOnlineArchivesResultCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchivesResultCriteria {
		return vs[0].([]GetOnlineArchivesResultCriteria)[vs[1].(int)]
	}).(GetOnlineArchivesResultCriteriaOutput)
}

type GetOnlineArchivesResultPartitionField struct {
	FieldName string `pulumi:"fieldName"`
	FieldType string `pulumi:"fieldType"`
	Order     int    `pulumi:"order"`
}

// GetOnlineArchivesResultPartitionFieldInput is an input type that accepts GetOnlineArchivesResultPartitionFieldArgs and GetOnlineArchivesResultPartitionFieldOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultPartitionFieldInput` via:
//
//	GetOnlineArchivesResultPartitionFieldArgs{...}
type GetOnlineArchivesResultPartitionFieldInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultPartitionFieldOutput() GetOnlineArchivesResultPartitionFieldOutput
	ToGetOnlineArchivesResultPartitionFieldOutputWithContext(context.Context) GetOnlineArchivesResultPartitionFieldOutput
}

type GetOnlineArchivesResultPartitionFieldArgs struct {
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	FieldType pulumi.StringInput `pulumi:"fieldType"`
	Order     pulumi.IntInput    `pulumi:"order"`
}

func (GetOnlineArchivesResultPartitionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResultPartitionField)(nil)).Elem()
}

func (i GetOnlineArchivesResultPartitionFieldArgs) ToGetOnlineArchivesResultPartitionFieldOutput() GetOnlineArchivesResultPartitionFieldOutput {
	return i.ToGetOnlineArchivesResultPartitionFieldOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultPartitionFieldArgs) ToGetOnlineArchivesResultPartitionFieldOutputWithContext(ctx context.Context) GetOnlineArchivesResultPartitionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultPartitionFieldOutput)
}

// GetOnlineArchivesResultPartitionFieldArrayInput is an input type that accepts GetOnlineArchivesResultPartitionFieldArray and GetOnlineArchivesResultPartitionFieldArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultPartitionFieldArrayInput` via:
//
//	GetOnlineArchivesResultPartitionFieldArray{ GetOnlineArchivesResultPartitionFieldArgs{...} }
type GetOnlineArchivesResultPartitionFieldArrayInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultPartitionFieldArrayOutput() GetOnlineArchivesResultPartitionFieldArrayOutput
	ToGetOnlineArchivesResultPartitionFieldArrayOutputWithContext(context.Context) GetOnlineArchivesResultPartitionFieldArrayOutput
}

type GetOnlineArchivesResultPartitionFieldArray []GetOnlineArchivesResultPartitionFieldInput

func (GetOnlineArchivesResultPartitionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResultPartitionField)(nil)).Elem()
}

func (i GetOnlineArchivesResultPartitionFieldArray) ToGetOnlineArchivesResultPartitionFieldArrayOutput() GetOnlineArchivesResultPartitionFieldArrayOutput {
	return i.ToGetOnlineArchivesResultPartitionFieldArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultPartitionFieldArray) ToGetOnlineArchivesResultPartitionFieldArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultPartitionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultPartitionFieldArrayOutput)
}

type GetOnlineArchivesResultPartitionFieldOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultPartitionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResultPartitionField)(nil)).Elem()
}

func (o GetOnlineArchivesResultPartitionFieldOutput) ToGetOnlineArchivesResultPartitionFieldOutput() GetOnlineArchivesResultPartitionFieldOutput {
	return o
}

func (o GetOnlineArchivesResultPartitionFieldOutput) ToGetOnlineArchivesResultPartitionFieldOutputWithContext(ctx context.Context) GetOnlineArchivesResultPartitionFieldOutput {
	return o
}

func (o GetOnlineArchivesResultPartitionFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultPartitionField) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultPartitionFieldOutput) FieldType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultPartitionField) string { return v.FieldType }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultPartitionFieldOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultPartitionField) int { return v.Order }).(pulumi.IntOutput)
}

type GetOnlineArchivesResultPartitionFieldArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultPartitionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResultPartitionField)(nil)).Elem()
}

func (o GetOnlineArchivesResultPartitionFieldArrayOutput) ToGetOnlineArchivesResultPartitionFieldArrayOutput() GetOnlineArchivesResultPartitionFieldArrayOutput {
	return o
}

func (o GetOnlineArchivesResultPartitionFieldArrayOutput) ToGetOnlineArchivesResultPartitionFieldArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultPartitionFieldArrayOutput {
	return o
}

func (o GetOnlineArchivesResultPartitionFieldArrayOutput) Index(i pulumi.IntInput) GetOnlineArchivesResultPartitionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchivesResultPartitionField {
		return vs[0].([]GetOnlineArchivesResultPartitionField)[vs[1].(int)]
	}).(GetOnlineArchivesResultPartitionFieldOutput)
}

type GetPrivateLinkEndpointServiceEndpoint struct {
	// Forwarding rule that corresponds to the endpoint you created in GCP.
	EndpointName string `pulumi:"endpointName"`
	// Private IP address of the network endpoint group you created in GCP.
	IpAddress string `pulumi:"ipAddress"`
	// Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
	ServiceAttachmentName string `pulumi:"serviceAttachmentName"`
	// Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
	Status string `pulumi:"status"`
}

// GetPrivateLinkEndpointServiceEndpointInput is an input type that accepts GetPrivateLinkEndpointServiceEndpointArgs and GetPrivateLinkEndpointServiceEndpointOutput values.
// You can construct a concrete instance of `GetPrivateLinkEndpointServiceEndpointInput` via:
//
//	GetPrivateLinkEndpointServiceEndpointArgs{...}
type GetPrivateLinkEndpointServiceEndpointInput interface {
	pulumi.Input

	ToGetPrivateLinkEndpointServiceEndpointOutput() GetPrivateLinkEndpointServiceEndpointOutput
	ToGetPrivateLinkEndpointServiceEndpointOutputWithContext(context.Context) GetPrivateLinkEndpointServiceEndpointOutput
}

type GetPrivateLinkEndpointServiceEndpointArgs struct {
	// Forwarding rule that corresponds to the endpoint you created in GCP.
	EndpointName pulumi.StringInput `pulumi:"endpointName"`
	// Private IP address of the network endpoint group you created in GCP.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
	ServiceAttachmentName pulumi.StringInput `pulumi:"serviceAttachmentName"`
	// Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetPrivateLinkEndpointServiceEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (i GetPrivateLinkEndpointServiceEndpointArgs) ToGetPrivateLinkEndpointServiceEndpointOutput() GetPrivateLinkEndpointServiceEndpointOutput {
	return i.ToGetPrivateLinkEndpointServiceEndpointOutputWithContext(context.Background())
}

func (i GetPrivateLinkEndpointServiceEndpointArgs) ToGetPrivateLinkEndpointServiceEndpointOutputWithContext(ctx context.Context) GetPrivateLinkEndpointServiceEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkEndpointServiceEndpointOutput)
}

// GetPrivateLinkEndpointServiceEndpointArrayInput is an input type that accepts GetPrivateLinkEndpointServiceEndpointArray and GetPrivateLinkEndpointServiceEndpointArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkEndpointServiceEndpointArrayInput` via:
//
//	GetPrivateLinkEndpointServiceEndpointArray{ GetPrivateLinkEndpointServiceEndpointArgs{...} }
type GetPrivateLinkEndpointServiceEndpointArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkEndpointServiceEndpointArrayOutput() GetPrivateLinkEndpointServiceEndpointArrayOutput
	ToGetPrivateLinkEndpointServiceEndpointArrayOutputWithContext(context.Context) GetPrivateLinkEndpointServiceEndpointArrayOutput
}

type GetPrivateLinkEndpointServiceEndpointArray []GetPrivateLinkEndpointServiceEndpointInput

func (GetPrivateLinkEndpointServiceEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (i GetPrivateLinkEndpointServiceEndpointArray) ToGetPrivateLinkEndpointServiceEndpointArrayOutput() GetPrivateLinkEndpointServiceEndpointArrayOutput {
	return i.ToGetPrivateLinkEndpointServiceEndpointArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkEndpointServiceEndpointArray) ToGetPrivateLinkEndpointServiceEndpointArrayOutputWithContext(ctx context.Context) GetPrivateLinkEndpointServiceEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkEndpointServiceEndpointArrayOutput)
}

type GetPrivateLinkEndpointServiceEndpointOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkEndpointServiceEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (o GetPrivateLinkEndpointServiceEndpointOutput) ToGetPrivateLinkEndpointServiceEndpointOutput() GetPrivateLinkEndpointServiceEndpointOutput {
	return o
}

func (o GetPrivateLinkEndpointServiceEndpointOutput) ToGetPrivateLinkEndpointServiceEndpointOutputWithContext(ctx context.Context) GetPrivateLinkEndpointServiceEndpointOutput {
	return o
}

// Forwarding rule that corresponds to the endpoint you created in GCP.
func (o GetPrivateLinkEndpointServiceEndpointOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkEndpointServiceEndpoint) string { return v.EndpointName }).(pulumi.StringOutput)
}

// Private IP address of the network endpoint group you created in GCP.
func (o GetPrivateLinkEndpointServiceEndpointOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkEndpointServiceEndpoint) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
func (o GetPrivateLinkEndpointServiceEndpointOutput) ServiceAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkEndpointServiceEndpoint) string { return v.ServiceAttachmentName }).(pulumi.StringOutput)
}

// Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
func (o GetPrivateLinkEndpointServiceEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkEndpointServiceEndpoint) string { return v.Status }).(pulumi.StringOutput)
}

type GetPrivateLinkEndpointServiceEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkEndpointServiceEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (o GetPrivateLinkEndpointServiceEndpointArrayOutput) ToGetPrivateLinkEndpointServiceEndpointArrayOutput() GetPrivateLinkEndpointServiceEndpointArrayOutput {
	return o
}

func (o GetPrivateLinkEndpointServiceEndpointArrayOutput) ToGetPrivateLinkEndpointServiceEndpointArrayOutputWithContext(ctx context.Context) GetPrivateLinkEndpointServiceEndpointArrayOutput {
	return o
}

func (o GetPrivateLinkEndpointServiceEndpointArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkEndpointServiceEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkEndpointServiceEndpoint {
		return vs[0].([]GetPrivateLinkEndpointServiceEndpoint)[vs[1].(int)]
	}).(GetPrivateLinkEndpointServiceEndpointOutput)
}

type GetPrivatelinkEndpointsServiceAdlLink struct {
	Href string `pulumi:"href"`
	Rel  string `pulumi:"rel"`
}

// GetPrivatelinkEndpointsServiceAdlLinkInput is an input type that accepts GetPrivatelinkEndpointsServiceAdlLinkArgs and GetPrivatelinkEndpointsServiceAdlLinkOutput values.
// You can construct a concrete instance of `GetPrivatelinkEndpointsServiceAdlLinkInput` via:
//
//	GetPrivatelinkEndpointsServiceAdlLinkArgs{...}
type GetPrivatelinkEndpointsServiceAdlLinkInput interface {
	pulumi.Input

	ToGetPrivatelinkEndpointsServiceAdlLinkOutput() GetPrivatelinkEndpointsServiceAdlLinkOutput
	ToGetPrivatelinkEndpointsServiceAdlLinkOutputWithContext(context.Context) GetPrivatelinkEndpointsServiceAdlLinkOutput
}

type GetPrivatelinkEndpointsServiceAdlLinkArgs struct {
	Href pulumi.StringInput `pulumi:"href"`
	Rel  pulumi.StringInput `pulumi:"rel"`
}

func (GetPrivatelinkEndpointsServiceAdlLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlLink)(nil)).Elem()
}

func (i GetPrivatelinkEndpointsServiceAdlLinkArgs) ToGetPrivatelinkEndpointsServiceAdlLinkOutput() GetPrivatelinkEndpointsServiceAdlLinkOutput {
	return i.ToGetPrivatelinkEndpointsServiceAdlLinkOutputWithContext(context.Background())
}

func (i GetPrivatelinkEndpointsServiceAdlLinkArgs) ToGetPrivatelinkEndpointsServiceAdlLinkOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivatelinkEndpointsServiceAdlLinkOutput)
}

// GetPrivatelinkEndpointsServiceAdlLinkArrayInput is an input type that accepts GetPrivatelinkEndpointsServiceAdlLinkArray and GetPrivatelinkEndpointsServiceAdlLinkArrayOutput values.
// You can construct a concrete instance of `GetPrivatelinkEndpointsServiceAdlLinkArrayInput` via:
//
//	GetPrivatelinkEndpointsServiceAdlLinkArray{ GetPrivatelinkEndpointsServiceAdlLinkArgs{...} }
type GetPrivatelinkEndpointsServiceAdlLinkArrayInput interface {
	pulumi.Input

	ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutput() GetPrivatelinkEndpointsServiceAdlLinkArrayOutput
	ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutputWithContext(context.Context) GetPrivatelinkEndpointsServiceAdlLinkArrayOutput
}

type GetPrivatelinkEndpointsServiceAdlLinkArray []GetPrivatelinkEndpointsServiceAdlLinkInput

func (GetPrivatelinkEndpointsServiceAdlLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivatelinkEndpointsServiceAdlLink)(nil)).Elem()
}

func (i GetPrivatelinkEndpointsServiceAdlLinkArray) ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutput() GetPrivatelinkEndpointsServiceAdlLinkArrayOutput {
	return i.ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutputWithContext(context.Background())
}

func (i GetPrivatelinkEndpointsServiceAdlLinkArray) ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivatelinkEndpointsServiceAdlLinkArrayOutput)
}

type GetPrivatelinkEndpointsServiceAdlLinkOutput struct{ *pulumi.OutputState }

func (GetPrivatelinkEndpointsServiceAdlLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlLink)(nil)).Elem()
}

func (o GetPrivatelinkEndpointsServiceAdlLinkOutput) ToGetPrivatelinkEndpointsServiceAdlLinkOutput() GetPrivatelinkEndpointsServiceAdlLinkOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlLinkOutput) ToGetPrivatelinkEndpointsServiceAdlLinkOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlLinkOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlLinkOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceAdlLink) string { return v.Href }).(pulumi.StringOutput)
}

func (o GetPrivatelinkEndpointsServiceAdlLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceAdlLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetPrivatelinkEndpointsServiceAdlLinkArrayOutput struct{ *pulumi.OutputState }

func (GetPrivatelinkEndpointsServiceAdlLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivatelinkEndpointsServiceAdlLink)(nil)).Elem()
}

func (o GetPrivatelinkEndpointsServiceAdlLinkArrayOutput) ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutput() GetPrivatelinkEndpointsServiceAdlLinkArrayOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlLinkArrayOutput) ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlLinkArrayOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlLinkArrayOutput) Index(i pulumi.IntInput) GetPrivatelinkEndpointsServiceAdlLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivatelinkEndpointsServiceAdlLink {
		return vs[0].([]GetPrivatelinkEndpointsServiceAdlLink)[vs[1].(int)]
	}).(GetPrivatelinkEndpointsServiceAdlLinkOutput)
}

type GetPrivatelinkEndpointsServiceAdlResult struct {
	// Human-readable string to associate with this private endpoint.
	Comment string `pulumi:"comment"`
	// Unique 22-character alphanumeric string that identifies the private endpoint. Atlas supports AWS private endpoints using the [|aws| PrivateLink](https://aws.amazon.com/privatelink/) feature.
	EndpointId string `pulumi:"endpointId"`
	// Human-readable label that identifies the cloud provider for this endpoint.
	ProviderName string `pulumi:"providerName"`
	// Human-readable label that identifies the type of resource to associate with this private endpoint.
	Type string `pulumi:"type"`
}

// GetPrivatelinkEndpointsServiceAdlResultInput is an input type that accepts GetPrivatelinkEndpointsServiceAdlResultArgs and GetPrivatelinkEndpointsServiceAdlResultOutput values.
// You can construct a concrete instance of `GetPrivatelinkEndpointsServiceAdlResultInput` via:
//
//	GetPrivatelinkEndpointsServiceAdlResultArgs{...}
type GetPrivatelinkEndpointsServiceAdlResultInput interface {
	pulumi.Input

	ToGetPrivatelinkEndpointsServiceAdlResultOutput() GetPrivatelinkEndpointsServiceAdlResultOutput
	ToGetPrivatelinkEndpointsServiceAdlResultOutputWithContext(context.Context) GetPrivatelinkEndpointsServiceAdlResultOutput
}

type GetPrivatelinkEndpointsServiceAdlResultArgs struct {
	// Human-readable string to associate with this private endpoint.
	Comment pulumi.StringInput `pulumi:"comment"`
	// Unique 22-character alphanumeric string that identifies the private endpoint. Atlas supports AWS private endpoints using the [|aws| PrivateLink](https://aws.amazon.com/privatelink/) feature.
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Human-readable label that identifies the cloud provider for this endpoint.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Human-readable label that identifies the type of resource to associate with this private endpoint.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetPrivatelinkEndpointsServiceAdlResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlResult)(nil)).Elem()
}

func (i GetPrivatelinkEndpointsServiceAdlResultArgs) ToGetPrivatelinkEndpointsServiceAdlResultOutput() GetPrivatelinkEndpointsServiceAdlResultOutput {
	return i.ToGetPrivatelinkEndpointsServiceAdlResultOutputWithContext(context.Background())
}

func (i GetPrivatelinkEndpointsServiceAdlResultArgs) ToGetPrivatelinkEndpointsServiceAdlResultOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivatelinkEndpointsServiceAdlResultOutput)
}

// GetPrivatelinkEndpointsServiceAdlResultArrayInput is an input type that accepts GetPrivatelinkEndpointsServiceAdlResultArray and GetPrivatelinkEndpointsServiceAdlResultArrayOutput values.
// You can construct a concrete instance of `GetPrivatelinkEndpointsServiceAdlResultArrayInput` via:
//
//	GetPrivatelinkEndpointsServiceAdlResultArray{ GetPrivatelinkEndpointsServiceAdlResultArgs{...} }
type GetPrivatelinkEndpointsServiceAdlResultArrayInput interface {
	pulumi.Input

	ToGetPrivatelinkEndpointsServiceAdlResultArrayOutput() GetPrivatelinkEndpointsServiceAdlResultArrayOutput
	ToGetPrivatelinkEndpointsServiceAdlResultArrayOutputWithContext(context.Context) GetPrivatelinkEndpointsServiceAdlResultArrayOutput
}

type GetPrivatelinkEndpointsServiceAdlResultArray []GetPrivatelinkEndpointsServiceAdlResultInput

func (GetPrivatelinkEndpointsServiceAdlResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivatelinkEndpointsServiceAdlResult)(nil)).Elem()
}

func (i GetPrivatelinkEndpointsServiceAdlResultArray) ToGetPrivatelinkEndpointsServiceAdlResultArrayOutput() GetPrivatelinkEndpointsServiceAdlResultArrayOutput {
	return i.ToGetPrivatelinkEndpointsServiceAdlResultArrayOutputWithContext(context.Background())
}

func (i GetPrivatelinkEndpointsServiceAdlResultArray) ToGetPrivatelinkEndpointsServiceAdlResultArrayOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivatelinkEndpointsServiceAdlResultArrayOutput)
}

type GetPrivatelinkEndpointsServiceAdlResultOutput struct{ *pulumi.OutputState }

func (GetPrivatelinkEndpointsServiceAdlResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlResult)(nil)).Elem()
}

func (o GetPrivatelinkEndpointsServiceAdlResultOutput) ToGetPrivatelinkEndpointsServiceAdlResultOutput() GetPrivatelinkEndpointsServiceAdlResultOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlResultOutput) ToGetPrivatelinkEndpointsServiceAdlResultOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlResultOutput {
	return o
}

// Human-readable string to associate with this private endpoint.
func (o GetPrivatelinkEndpointsServiceAdlResultOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceAdlResult) string { return v.Comment }).(pulumi.StringOutput)
}

// Unique 22-character alphanumeric string that identifies the private endpoint. Atlas supports AWS private endpoints using the [|aws| PrivateLink](https://aws.amazon.com/privatelink/) feature.
func (o GetPrivatelinkEndpointsServiceAdlResultOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceAdlResult) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Human-readable label that identifies the cloud provider for this endpoint.
func (o GetPrivatelinkEndpointsServiceAdlResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceAdlResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Human-readable label that identifies the type of resource to associate with this private endpoint.
func (o GetPrivatelinkEndpointsServiceAdlResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceAdlResult) string { return v.Type }).(pulumi.StringOutput)
}

type GetPrivatelinkEndpointsServiceAdlResultArrayOutput struct{ *pulumi.OutputState }

func (GetPrivatelinkEndpointsServiceAdlResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivatelinkEndpointsServiceAdlResult)(nil)).Elem()
}

func (o GetPrivatelinkEndpointsServiceAdlResultArrayOutput) ToGetPrivatelinkEndpointsServiceAdlResultArrayOutput() GetPrivatelinkEndpointsServiceAdlResultArrayOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlResultArrayOutput) ToGetPrivatelinkEndpointsServiceAdlResultArrayOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlResultArrayOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlResultArrayOutput) Index(i pulumi.IntInput) GetPrivatelinkEndpointsServiceAdlResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivatelinkEndpointsServiceAdlResult {
		return vs[0].([]GetPrivatelinkEndpointsServiceAdlResult)[vs[1].(int)]
	}).(GetPrivatelinkEndpointsServiceAdlResultOutput)
}

type GetPrivatelinkEndpointsServiceServerlessResult struct {
	// Unique string that identifies the private endpoint's network interface.
	CloudProviderEndpointId string `pulumi:"cloudProviderEndpointId"`
	// Human-readable string to associate with this private endpoint.
	Comment string `pulumi:"comment"`
	// (Required) Unique 22-character alphanumeric string that identifies the private endpoint. Atlas supports AWS private endpoints using the [AWS PrivateLink](https://aws.amazon.com/privatelink/) feature.
	EndpointId string `pulumi:"endpointId"`
	// Unique string that identifies the PrivateLink endpoint service. MongoDB Cloud returns null while it creates the endpoint service.
	EndpointServiceName string `pulumi:"endpointServiceName"`
	ErrorMessage        string `pulumi:"errorMessage"`
	// IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.
	PrivateEndpointIpAddress string `pulumi:"privateEndpointIpAddress"`
	// Root-relative path that identifies the Azure Private Link Service that MongoDB Cloud manages.
	PrivateLinkServiceResourceId string `pulumi:"privateLinkServiceResourceId"`
	// Human-readable label that indicates the current operating status of the private endpoint. Values include: RESERVATION_REQUESTED, RESERVED, INITIATING, AVAILABLE, FAILED, DELETING.
	Status string `pulumi:"status"`
}

// GetPrivatelinkEndpointsServiceServerlessResultInput is an input type that accepts GetPrivatelinkEndpointsServiceServerlessResultArgs and GetPrivatelinkEndpointsServiceServerlessResultOutput values.
// You can construct a concrete instance of `GetPrivatelinkEndpointsServiceServerlessResultInput` via:
//
//	GetPrivatelinkEndpointsServiceServerlessResultArgs{...}
type GetPrivatelinkEndpointsServiceServerlessResultInput interface {
	pulumi.Input

	ToGetPrivatelinkEndpointsServiceServerlessResultOutput() GetPrivatelinkEndpointsServiceServerlessResultOutput
	ToGetPrivatelinkEndpointsServiceServerlessResultOutputWithContext(context.Context) GetPrivatelinkEndpointsServiceServerlessResultOutput
}

type GetPrivatelinkEndpointsServiceServerlessResultArgs struct {
	// Unique string that identifies the private endpoint's network interface.
	CloudProviderEndpointId pulumi.StringInput `pulumi:"cloudProviderEndpointId"`
	// Human-readable string to associate with this private endpoint.
	Comment pulumi.StringInput `pulumi:"comment"`
	// (Required) Unique 22-character alphanumeric string that identifies the private endpoint. Atlas supports AWS private endpoints using the [AWS PrivateLink](https://aws.amazon.com/privatelink/) feature.
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Unique string that identifies the PrivateLink endpoint service. MongoDB Cloud returns null while it creates the endpoint service.
	EndpointServiceName pulumi.StringInput `pulumi:"endpointServiceName"`
	ErrorMessage        pulumi.StringInput `pulumi:"errorMessage"`
	// IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.
	PrivateEndpointIpAddress pulumi.StringInput `pulumi:"privateEndpointIpAddress"`
	// Root-relative path that identifies the Azure Private Link Service that MongoDB Cloud manages.
	PrivateLinkServiceResourceId pulumi.StringInput `pulumi:"privateLinkServiceResourceId"`
	// Human-readable label that indicates the current operating status of the private endpoint. Values include: RESERVATION_REQUESTED, RESERVED, INITIATING, AVAILABLE, FAILED, DELETING.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetPrivatelinkEndpointsServiceServerlessResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivatelinkEndpointsServiceServerlessResult)(nil)).Elem()
}

func (i GetPrivatelinkEndpointsServiceServerlessResultArgs) ToGetPrivatelinkEndpointsServiceServerlessResultOutput() GetPrivatelinkEndpointsServiceServerlessResultOutput {
	return i.ToGetPrivatelinkEndpointsServiceServerlessResultOutputWithContext(context.Background())
}

func (i GetPrivatelinkEndpointsServiceServerlessResultArgs) ToGetPrivatelinkEndpointsServiceServerlessResultOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceServerlessResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivatelinkEndpointsServiceServerlessResultOutput)
}

// GetPrivatelinkEndpointsServiceServerlessResultArrayInput is an input type that accepts GetPrivatelinkEndpointsServiceServerlessResultArray and GetPrivatelinkEndpointsServiceServerlessResultArrayOutput values.
// You can construct a concrete instance of `GetPrivatelinkEndpointsServiceServerlessResultArrayInput` via:
//
//	GetPrivatelinkEndpointsServiceServerlessResultArray{ GetPrivatelinkEndpointsServiceServerlessResultArgs{...} }
type GetPrivatelinkEndpointsServiceServerlessResultArrayInput interface {
	pulumi.Input

	ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutput() GetPrivatelinkEndpointsServiceServerlessResultArrayOutput
	ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutputWithContext(context.Context) GetPrivatelinkEndpointsServiceServerlessResultArrayOutput
}

type GetPrivatelinkEndpointsServiceServerlessResultArray []GetPrivatelinkEndpointsServiceServerlessResultInput

func (GetPrivatelinkEndpointsServiceServerlessResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivatelinkEndpointsServiceServerlessResult)(nil)).Elem()
}

func (i GetPrivatelinkEndpointsServiceServerlessResultArray) ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutput() GetPrivatelinkEndpointsServiceServerlessResultArrayOutput {
	return i.ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutputWithContext(context.Background())
}

func (i GetPrivatelinkEndpointsServiceServerlessResultArray) ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceServerlessResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivatelinkEndpointsServiceServerlessResultArrayOutput)
}

type GetPrivatelinkEndpointsServiceServerlessResultOutput struct{ *pulumi.OutputState }

func (GetPrivatelinkEndpointsServiceServerlessResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivatelinkEndpointsServiceServerlessResult)(nil)).Elem()
}

func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) ToGetPrivatelinkEndpointsServiceServerlessResultOutput() GetPrivatelinkEndpointsServiceServerlessResultOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) ToGetPrivatelinkEndpointsServiceServerlessResultOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceServerlessResultOutput {
	return o
}

// Unique string that identifies the private endpoint's network interface.
func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) CloudProviderEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.CloudProviderEndpointId }).(pulumi.StringOutput)
}

// Human-readable string to associate with this private endpoint.
func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.Comment }).(pulumi.StringOutput)
}

// (Required) Unique 22-character alphanumeric string that identifies the private endpoint. Atlas supports AWS private endpoints using the [AWS PrivateLink](https://aws.amazon.com/privatelink/) feature.
func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Unique string that identifies the PrivateLink endpoint service. MongoDB Cloud returns null while it creates the endpoint service.
func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) EndpointServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.EndpointServiceName }).(pulumi.StringOutput)
}

func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.
func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) PrivateEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.PrivateEndpointIpAddress }).(pulumi.StringOutput)
}

// Root-relative path that identifies the Azure Private Link Service that MongoDB Cloud manages.
func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) PrivateLinkServiceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.PrivateLinkServiceResourceId }).(pulumi.StringOutput)
}

// Human-readable label that indicates the current operating status of the private endpoint. Values include: RESERVATION_REQUESTED, RESERVED, INITIATING, AVAILABLE, FAILED, DELETING.
func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.Status }).(pulumi.StringOutput)
}

type GetPrivatelinkEndpointsServiceServerlessResultArrayOutput struct{ *pulumi.OutputState }

func (GetPrivatelinkEndpointsServiceServerlessResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivatelinkEndpointsServiceServerlessResult)(nil)).Elem()
}

func (o GetPrivatelinkEndpointsServiceServerlessResultArrayOutput) ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutput() GetPrivatelinkEndpointsServiceServerlessResultArrayOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceServerlessResultArrayOutput) ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceServerlessResultArrayOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceServerlessResultArrayOutput) Index(i pulumi.IntInput) GetPrivatelinkEndpointsServiceServerlessResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivatelinkEndpointsServiceServerlessResult {
		return vs[0].([]GetPrivatelinkEndpointsServiceServerlessResult)[vs[1].(int)]
	}).(GetPrivatelinkEndpointsServiceServerlessResultOutput)
}

type GetProjectApiKeyType struct {
	ApiKeyId  string   `pulumi:"apiKeyId"`
	RoleNames []string `pulumi:"roleNames"`
}

// GetProjectApiKeyTypeInput is an input type that accepts GetProjectApiKeyTypeArgs and GetProjectApiKeyTypeOutput values.
// You can construct a concrete instance of `GetProjectApiKeyTypeInput` via:
//
//	GetProjectApiKeyTypeArgs{...}
type GetProjectApiKeyTypeInput interface {
	pulumi.Input

	ToGetProjectApiKeyTypeOutput() GetProjectApiKeyTypeOutput
	ToGetProjectApiKeyTypeOutputWithContext(context.Context) GetProjectApiKeyTypeOutput
}

type GetProjectApiKeyTypeArgs struct {
	ApiKeyId  pulumi.StringInput      `pulumi:"apiKeyId"`
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
}

func (GetProjectApiKeyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectApiKeyType)(nil)).Elem()
}

func (i GetProjectApiKeyTypeArgs) ToGetProjectApiKeyTypeOutput() GetProjectApiKeyTypeOutput {
	return i.ToGetProjectApiKeyTypeOutputWithContext(context.Background())
}

func (i GetProjectApiKeyTypeArgs) ToGetProjectApiKeyTypeOutputWithContext(ctx context.Context) GetProjectApiKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectApiKeyTypeOutput)
}

// GetProjectApiKeyTypeArrayInput is an input type that accepts GetProjectApiKeyTypeArray and GetProjectApiKeyTypeArrayOutput values.
// You can construct a concrete instance of `GetProjectApiKeyTypeArrayInput` via:
//
//	GetProjectApiKeyTypeArray{ GetProjectApiKeyTypeArgs{...} }
type GetProjectApiKeyTypeArrayInput interface {
	pulumi.Input

	ToGetProjectApiKeyTypeArrayOutput() GetProjectApiKeyTypeArrayOutput
	ToGetProjectApiKeyTypeArrayOutputWithContext(context.Context) GetProjectApiKeyTypeArrayOutput
}

type GetProjectApiKeyTypeArray []GetProjectApiKeyTypeInput

func (GetProjectApiKeyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectApiKeyType)(nil)).Elem()
}

func (i GetProjectApiKeyTypeArray) ToGetProjectApiKeyTypeArrayOutput() GetProjectApiKeyTypeArrayOutput {
	return i.ToGetProjectApiKeyTypeArrayOutputWithContext(context.Background())
}

func (i GetProjectApiKeyTypeArray) ToGetProjectApiKeyTypeArrayOutputWithContext(ctx context.Context) GetProjectApiKeyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectApiKeyTypeArrayOutput)
}

type GetProjectApiKeyTypeOutput struct{ *pulumi.OutputState }

func (GetProjectApiKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectApiKeyType)(nil)).Elem()
}

func (o GetProjectApiKeyTypeOutput) ToGetProjectApiKeyTypeOutput() GetProjectApiKeyTypeOutput {
	return o
}

func (o GetProjectApiKeyTypeOutput) ToGetProjectApiKeyTypeOutputWithContext(ctx context.Context) GetProjectApiKeyTypeOutput {
	return o
}

func (o GetProjectApiKeyTypeOutput) ApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectApiKeyType) string { return v.ApiKeyId }).(pulumi.StringOutput)
}

func (o GetProjectApiKeyTypeOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectApiKeyType) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

type GetProjectApiKeyTypeArrayOutput struct{ *pulumi.OutputState }

func (GetProjectApiKeyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectApiKeyType)(nil)).Elem()
}

func (o GetProjectApiKeyTypeArrayOutput) ToGetProjectApiKeyTypeArrayOutput() GetProjectApiKeyTypeArrayOutput {
	return o
}

func (o GetProjectApiKeyTypeArrayOutput) ToGetProjectApiKeyTypeArrayOutputWithContext(ctx context.Context) GetProjectApiKeyTypeArrayOutput {
	return o
}

func (o GetProjectApiKeyTypeArrayOutput) Index(i pulumi.IntInput) GetProjectApiKeyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectApiKeyType {
		return vs[0].([]GetProjectApiKeyType)[vs[1].(int)]
	}).(GetProjectApiKeyTypeOutput)
}

type GetProjectApiKeysResult struct {
	// Unique identifier for the API key you want to update. Use the /orgs/{ORG-ID}/apiKeys endpoint to retrieve all API keys to which the authenticated user has access for the specified organization.
	ApiKeyId string `pulumi:"apiKeyId"`
	// Description of this Project API key.
	Description string `pulumi:"description"`
	PrivateKey  string `pulumi:"privateKey"`
	PublicKey   string `pulumi:"publicKey"`
	// Name of the role. This resource returns all the roles the user has in Atlas.
	// The following are valid roles:
	RoleNames []string `pulumi:"roleNames"`
}

// GetProjectApiKeysResultInput is an input type that accepts GetProjectApiKeysResultArgs and GetProjectApiKeysResultOutput values.
// You can construct a concrete instance of `GetProjectApiKeysResultInput` via:
//
//	GetProjectApiKeysResultArgs{...}
type GetProjectApiKeysResultInput interface {
	pulumi.Input

	ToGetProjectApiKeysResultOutput() GetProjectApiKeysResultOutput
	ToGetProjectApiKeysResultOutputWithContext(context.Context) GetProjectApiKeysResultOutput
}

type GetProjectApiKeysResultArgs struct {
	// Unique identifier for the API key you want to update. Use the /orgs/{ORG-ID}/apiKeys endpoint to retrieve all API keys to which the authenticated user has access for the specified organization.
	ApiKeyId pulumi.StringInput `pulumi:"apiKeyId"`
	// Description of this Project API key.
	Description pulumi.StringInput `pulumi:"description"`
	PrivateKey  pulumi.StringInput `pulumi:"privateKey"`
	PublicKey   pulumi.StringInput `pulumi:"publicKey"`
	// Name of the role. This resource returns all the roles the user has in Atlas.
	// The following are valid roles:
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
}

func (GetProjectApiKeysResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectApiKeysResult)(nil)).Elem()
}

func (i GetProjectApiKeysResultArgs) ToGetProjectApiKeysResultOutput() GetProjectApiKeysResultOutput {
	return i.ToGetProjectApiKeysResultOutputWithContext(context.Background())
}

func (i GetProjectApiKeysResultArgs) ToGetProjectApiKeysResultOutputWithContext(ctx context.Context) GetProjectApiKeysResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectApiKeysResultOutput)
}

// GetProjectApiKeysResultArrayInput is an input type that accepts GetProjectApiKeysResultArray and GetProjectApiKeysResultArrayOutput values.
// You can construct a concrete instance of `GetProjectApiKeysResultArrayInput` via:
//
//	GetProjectApiKeysResultArray{ GetProjectApiKeysResultArgs{...} }
type GetProjectApiKeysResultArrayInput interface {
	pulumi.Input

	ToGetProjectApiKeysResultArrayOutput() GetProjectApiKeysResultArrayOutput
	ToGetProjectApiKeysResultArrayOutputWithContext(context.Context) GetProjectApiKeysResultArrayOutput
}

type GetProjectApiKeysResultArray []GetProjectApiKeysResultInput

func (GetProjectApiKeysResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectApiKeysResult)(nil)).Elem()
}

func (i GetProjectApiKeysResultArray) ToGetProjectApiKeysResultArrayOutput() GetProjectApiKeysResultArrayOutput {
	return i.ToGetProjectApiKeysResultArrayOutputWithContext(context.Background())
}

func (i GetProjectApiKeysResultArray) ToGetProjectApiKeysResultArrayOutputWithContext(ctx context.Context) GetProjectApiKeysResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectApiKeysResultArrayOutput)
}

type GetProjectApiKeysResultOutput struct{ *pulumi.OutputState }

func (GetProjectApiKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectApiKeysResult)(nil)).Elem()
}

func (o GetProjectApiKeysResultOutput) ToGetProjectApiKeysResultOutput() GetProjectApiKeysResultOutput {
	return o
}

func (o GetProjectApiKeysResultOutput) ToGetProjectApiKeysResultOutputWithContext(ctx context.Context) GetProjectApiKeysResultOutput {
	return o
}

// Unique identifier for the API key you want to update. Use the /orgs/{ORG-ID}/apiKeys endpoint to retrieve all API keys to which the authenticated user has access for the specified organization.
func (o GetProjectApiKeysResultOutput) ApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectApiKeysResult) string { return v.ApiKeyId }).(pulumi.StringOutput)
}

// Description of this Project API key.
func (o GetProjectApiKeysResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectApiKeysResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetProjectApiKeysResultOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectApiKeysResult) string { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o GetProjectApiKeysResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectApiKeysResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

// Name of the role. This resource returns all the roles the user has in Atlas.
// The following are valid roles:
func (o GetProjectApiKeysResultOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectApiKeysResult) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

type GetProjectApiKeysResultArrayOutput struct{ *pulumi.OutputState }

func (GetProjectApiKeysResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectApiKeysResult)(nil)).Elem()
}

func (o GetProjectApiKeysResultArrayOutput) ToGetProjectApiKeysResultArrayOutput() GetProjectApiKeysResultArrayOutput {
	return o
}

func (o GetProjectApiKeysResultArrayOutput) ToGetProjectApiKeysResultArrayOutputWithContext(ctx context.Context) GetProjectApiKeysResultArrayOutput {
	return o
}

func (o GetProjectApiKeysResultArrayOutput) Index(i pulumi.IntInput) GetProjectApiKeysResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectApiKeysResult {
		return vs[0].([]GetProjectApiKeysResult)[vs[1].(int)]
	}).(GetProjectApiKeysResultOutput)
}

type GetProjectTeam struct {
	RoleNames []string `pulumi:"roleNames"`
	TeamId    string   `pulumi:"teamId"`
}

// GetProjectTeamInput is an input type that accepts GetProjectTeamArgs and GetProjectTeamOutput values.
// You can construct a concrete instance of `GetProjectTeamInput` via:
//
//	GetProjectTeamArgs{...}
type GetProjectTeamInput interface {
	pulumi.Input

	ToGetProjectTeamOutput() GetProjectTeamOutput
	ToGetProjectTeamOutputWithContext(context.Context) GetProjectTeamOutput
}

type GetProjectTeamArgs struct {
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	TeamId    pulumi.StringInput      `pulumi:"teamId"`
}

func (GetProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTeam)(nil)).Elem()
}

func (i GetProjectTeamArgs) ToGetProjectTeamOutput() GetProjectTeamOutput {
	return i.ToGetProjectTeamOutputWithContext(context.Background())
}

func (i GetProjectTeamArgs) ToGetProjectTeamOutputWithContext(ctx context.Context) GetProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTeamOutput)
}

// GetProjectTeamArrayInput is an input type that accepts GetProjectTeamArray and GetProjectTeamArrayOutput values.
// You can construct a concrete instance of `GetProjectTeamArrayInput` via:
//
//	GetProjectTeamArray{ GetProjectTeamArgs{...} }
type GetProjectTeamArrayInput interface {
	pulumi.Input

	ToGetProjectTeamArrayOutput() GetProjectTeamArrayOutput
	ToGetProjectTeamArrayOutputWithContext(context.Context) GetProjectTeamArrayOutput
}

type GetProjectTeamArray []GetProjectTeamInput

func (GetProjectTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTeam)(nil)).Elem()
}

func (i GetProjectTeamArray) ToGetProjectTeamArrayOutput() GetProjectTeamArrayOutput {
	return i.ToGetProjectTeamArrayOutputWithContext(context.Background())
}

func (i GetProjectTeamArray) ToGetProjectTeamArrayOutputWithContext(ctx context.Context) GetProjectTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTeamArrayOutput)
}

type GetProjectTeamOutput struct{ *pulumi.OutputState }

func (GetProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTeam)(nil)).Elem()
}

func (o GetProjectTeamOutput) ToGetProjectTeamOutput() GetProjectTeamOutput {
	return o
}

func (o GetProjectTeamOutput) ToGetProjectTeamOutputWithContext(ctx context.Context) GetProjectTeamOutput {
	return o
}

func (o GetProjectTeamOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectTeam) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

func (o GetProjectTeamOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTeam) string { return v.TeamId }).(pulumi.StringOutput)
}

type GetProjectTeamArrayOutput struct{ *pulumi.OutputState }

func (GetProjectTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTeam)(nil)).Elem()
}

func (o GetProjectTeamArrayOutput) ToGetProjectTeamArrayOutput() GetProjectTeamArrayOutput {
	return o
}

func (o GetProjectTeamArrayOutput) ToGetProjectTeamArrayOutputWithContext(ctx context.Context) GetProjectTeamArrayOutput {
	return o
}

func (o GetProjectTeamArrayOutput) Index(i pulumi.IntInput) GetProjectTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectTeam {
		return vs[0].([]GetProjectTeam)[vs[1].(int)]
	}).(GetProjectTeamOutput)
}

type GetProjectsResult struct {
	ApiKeys []GetProjectsResultApiKey `pulumi:"apiKeys"`
	// The number of Atlas clusters deployed in the project.
	ClusterCount int `pulumi:"clusterCount"`
	// The ISO-8601-formatted timestamp of when Atlas created the project.
	// * `teams.#.team_id` - The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	// * `teams.#.role_names` - Each string in the array represents a project role assigned to the team. Every user associated with the team inherits these roles.
	//   The following are valid roles:
	Created string `pulumi:"created"`
	// Autogenerated Unique ID for this data source.
	Id string `pulumi:"id"`
	// Flag that indicates whether to enable statistics in [cluster metrics](https://www.mongodb.com/docs/atlas/monitor-cluster-metrics/) collection for the project.
	IsCollectDatabaseSpecificsStatisticsEnabled bool `pulumi:"isCollectDatabaseSpecificsStatisticsEnabled"`
	// Flag that indicates whether to enable Data Explorer for the project. If enabled, you can query your database with an easy to use interface.
	IsDataExplorerEnabled bool `pulumi:"isDataExplorerEnabled"`
	// Flag that indicates whether to enable Performance Advisor and Profiler for the project. If enabled, you can analyze database logs to recommend performance improvements.
	IsPerformanceAdvisorEnabled bool `pulumi:"isPerformanceAdvisorEnabled"`
	// Flag that indicates whether to enable Real Time Performance Panel for the project. If enabled, you can see real time metrics from your MongoDB database.
	IsRealtimePerformancePanelEnabled bool `pulumi:"isRealtimePerformancePanelEnabled"`
	// Flag that indicates whether to enable Schema Advisor for the project. If enabled, you receive customized recommendations to optimize your data model and enhance performance. Disable this setting to disable schema suggestions in the [Performance Advisor](https://www.mongodb.com/docs/atlas/performance-advisor/#std-label-performance-advisor) and the [Data Explorer](https://www.mongodb.com/docs/atlas/atlas-ui/#std-label-atlas-ui).
	IsSchemaAdvisorEnabled bool `pulumi:"isSchemaAdvisorEnabled"`
	// The name of the project you want to create. (Cannot be changed via this Provider after creation.)
	Name string `pulumi:"name"`
	// The ID of the organization you want to create the project within.
	OrgId string `pulumi:"orgId"`
	// If GOV_REGIONS_ONLY the project can be used for government regions only, otherwise defaults to standard regions. For more information see [MongoDB Atlas for Government](https://www.mongodb.com/docs/atlas/government/api/#creating-a-project).
	RegionUsageRestrictions string                  `pulumi:"regionUsageRestrictions"`
	Teams                   []GetProjectsResultTeam `pulumi:"teams"`
}

// GetProjectsResultInput is an input type that accepts GetProjectsResultArgs and GetProjectsResultOutput values.
// You can construct a concrete instance of `GetProjectsResultInput` via:
//
//	GetProjectsResultArgs{...}
type GetProjectsResultInput interface {
	pulumi.Input

	ToGetProjectsResultOutput() GetProjectsResultOutput
	ToGetProjectsResultOutputWithContext(context.Context) GetProjectsResultOutput
}

type GetProjectsResultArgs struct {
	ApiKeys GetProjectsResultApiKeyArrayInput `pulumi:"apiKeys"`
	// The number of Atlas clusters deployed in the project.
	ClusterCount pulumi.IntInput `pulumi:"clusterCount"`
	// The ISO-8601-formatted timestamp of when Atlas created the project.
	// * `teams.#.team_id` - The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	// * `teams.#.role_names` - Each string in the array represents a project role assigned to the team. Every user associated with the team inherits these roles.
	//   The following are valid roles:
	Created pulumi.StringInput `pulumi:"created"`
	// Autogenerated Unique ID for this data source.
	Id pulumi.StringInput `pulumi:"id"`
	// Flag that indicates whether to enable statistics in [cluster metrics](https://www.mongodb.com/docs/atlas/monitor-cluster-metrics/) collection for the project.
	IsCollectDatabaseSpecificsStatisticsEnabled pulumi.BoolInput `pulumi:"isCollectDatabaseSpecificsStatisticsEnabled"`
	// Flag that indicates whether to enable Data Explorer for the project. If enabled, you can query your database with an easy to use interface.
	IsDataExplorerEnabled pulumi.BoolInput `pulumi:"isDataExplorerEnabled"`
	// Flag that indicates whether to enable Performance Advisor and Profiler for the project. If enabled, you can analyze database logs to recommend performance improvements.
	IsPerformanceAdvisorEnabled pulumi.BoolInput `pulumi:"isPerformanceAdvisorEnabled"`
	// Flag that indicates whether to enable Real Time Performance Panel for the project. If enabled, you can see real time metrics from your MongoDB database.
	IsRealtimePerformancePanelEnabled pulumi.BoolInput `pulumi:"isRealtimePerformancePanelEnabled"`
	// Flag that indicates whether to enable Schema Advisor for the project. If enabled, you receive customized recommendations to optimize your data model and enhance performance. Disable this setting to disable schema suggestions in the [Performance Advisor](https://www.mongodb.com/docs/atlas/performance-advisor/#std-label-performance-advisor) and the [Data Explorer](https://www.mongodb.com/docs/atlas/atlas-ui/#std-label-atlas-ui).
	IsSchemaAdvisorEnabled pulumi.BoolInput `pulumi:"isSchemaAdvisorEnabled"`
	// The name of the project you want to create. (Cannot be changed via this Provider after creation.)
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the organization you want to create the project within.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// If GOV_REGIONS_ONLY the project can be used for government regions only, otherwise defaults to standard regions. For more information see [MongoDB Atlas for Government](https://www.mongodb.com/docs/atlas/government/api/#creating-a-project).
	RegionUsageRestrictions pulumi.StringInput              `pulumi:"regionUsageRestrictions"`
	Teams                   GetProjectsResultTeamArrayInput `pulumi:"teams"`
}

func (GetProjectsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResult)(nil)).Elem()
}

func (i GetProjectsResultArgs) ToGetProjectsResultOutput() GetProjectsResultOutput {
	return i.ToGetProjectsResultOutputWithContext(context.Background())
}

func (i GetProjectsResultArgs) ToGetProjectsResultOutputWithContext(ctx context.Context) GetProjectsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultOutput)
}

// GetProjectsResultArrayInput is an input type that accepts GetProjectsResultArray and GetProjectsResultArrayOutput values.
// You can construct a concrete instance of `GetProjectsResultArrayInput` via:
//
//	GetProjectsResultArray{ GetProjectsResultArgs{...} }
type GetProjectsResultArrayInput interface {
	pulumi.Input

	ToGetProjectsResultArrayOutput() GetProjectsResultArrayOutput
	ToGetProjectsResultArrayOutputWithContext(context.Context) GetProjectsResultArrayOutput
}

type GetProjectsResultArray []GetProjectsResultInput

func (GetProjectsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResult)(nil)).Elem()
}

func (i GetProjectsResultArray) ToGetProjectsResultArrayOutput() GetProjectsResultArrayOutput {
	return i.ToGetProjectsResultArrayOutputWithContext(context.Background())
}

func (i GetProjectsResultArray) ToGetProjectsResultArrayOutputWithContext(ctx context.Context) GetProjectsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultArrayOutput)
}

type GetProjectsResultOutput struct{ *pulumi.OutputState }

func (GetProjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResult)(nil)).Elem()
}

func (o GetProjectsResultOutput) ToGetProjectsResultOutput() GetProjectsResultOutput {
	return o
}

func (o GetProjectsResultOutput) ToGetProjectsResultOutputWithContext(ctx context.Context) GetProjectsResultOutput {
	return o
}

func (o GetProjectsResultOutput) ApiKeys() GetProjectsResultApiKeyArrayOutput {
	return o.ApplyT(func(v GetProjectsResult) []GetProjectsResultApiKey { return v.ApiKeys }).(GetProjectsResultApiKeyArrayOutput)
}

// The number of Atlas clusters deployed in the project.
func (o GetProjectsResultOutput) ClusterCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsResult) int { return v.ClusterCount }).(pulumi.IntOutput)
}

// The ISO-8601-formatted timestamp of when Atlas created the project.
//   - `teams.#.team_id` - The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
//   - `teams.#.role_names` - Each string in the array represents a project role assigned to the team. Every user associated with the team inherits these roles.
//     The following are valid roles:
func (o GetProjectsResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.Created }).(pulumi.StringOutput)
}

// Autogenerated Unique ID for this data source.
func (o GetProjectsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Flag that indicates whether to enable statistics in [cluster metrics](https://www.mongodb.com/docs/atlas/monitor-cluster-metrics/) collection for the project.
func (o GetProjectsResultOutput) IsCollectDatabaseSpecificsStatisticsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsResult) bool { return v.IsCollectDatabaseSpecificsStatisticsEnabled }).(pulumi.BoolOutput)
}

// Flag that indicates whether to enable Data Explorer for the project. If enabled, you can query your database with an easy to use interface.
func (o GetProjectsResultOutput) IsDataExplorerEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsResult) bool { return v.IsDataExplorerEnabled }).(pulumi.BoolOutput)
}

// Flag that indicates whether to enable Performance Advisor and Profiler for the project. If enabled, you can analyze database logs to recommend performance improvements.
func (o GetProjectsResultOutput) IsPerformanceAdvisorEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsResult) bool { return v.IsPerformanceAdvisorEnabled }).(pulumi.BoolOutput)
}

// Flag that indicates whether to enable Real Time Performance Panel for the project. If enabled, you can see real time metrics from your MongoDB database.
func (o GetProjectsResultOutput) IsRealtimePerformancePanelEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsResult) bool { return v.IsRealtimePerformancePanelEnabled }).(pulumi.BoolOutput)
}

// Flag that indicates whether to enable Schema Advisor for the project. If enabled, you receive customized recommendations to optimize your data model and enhance performance. Disable this setting to disable schema suggestions in the [Performance Advisor](https://www.mongodb.com/docs/atlas/performance-advisor/#std-label-performance-advisor) and the [Data Explorer](https://www.mongodb.com/docs/atlas/atlas-ui/#std-label-atlas-ui).
func (o GetProjectsResultOutput) IsSchemaAdvisorEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsResult) bool { return v.IsSchemaAdvisorEnabled }).(pulumi.BoolOutput)
}

// The name of the project you want to create. (Cannot be changed via this Provider after creation.)
func (o GetProjectsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the organization you want to create the project within.
func (o GetProjectsResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// If GOV_REGIONS_ONLY the project can be used for government regions only, otherwise defaults to standard regions. For more information see [MongoDB Atlas for Government](https://www.mongodb.com/docs/atlas/government/api/#creating-a-project).
func (o GetProjectsResultOutput) RegionUsageRestrictions() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.RegionUsageRestrictions }).(pulumi.StringOutput)
}

func (o GetProjectsResultOutput) Teams() GetProjectsResultTeamArrayOutput {
	return o.ApplyT(func(v GetProjectsResult) []GetProjectsResultTeam { return v.Teams }).(GetProjectsResultTeamArrayOutput)
}

type GetProjectsResultArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResult)(nil)).Elem()
}

func (o GetProjectsResultArrayOutput) ToGetProjectsResultArrayOutput() GetProjectsResultArrayOutput {
	return o
}

func (o GetProjectsResultArrayOutput) ToGetProjectsResultArrayOutputWithContext(ctx context.Context) GetProjectsResultArrayOutput {
	return o
}

func (o GetProjectsResultArrayOutput) Index(i pulumi.IntInput) GetProjectsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsResult {
		return vs[0].([]GetProjectsResult)[vs[1].(int)]
	}).(GetProjectsResultOutput)
}

type GetProjectsResultApiKey struct {
	ApiKeyId  string   `pulumi:"apiKeyId"`
	RoleNames []string `pulumi:"roleNames"`
}

// GetProjectsResultApiKeyInput is an input type that accepts GetProjectsResultApiKeyArgs and GetProjectsResultApiKeyOutput values.
// You can construct a concrete instance of `GetProjectsResultApiKeyInput` via:
//
//	GetProjectsResultApiKeyArgs{...}
type GetProjectsResultApiKeyInput interface {
	pulumi.Input

	ToGetProjectsResultApiKeyOutput() GetProjectsResultApiKeyOutput
	ToGetProjectsResultApiKeyOutputWithContext(context.Context) GetProjectsResultApiKeyOutput
}

type GetProjectsResultApiKeyArgs struct {
	ApiKeyId  pulumi.StringInput      `pulumi:"apiKeyId"`
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
}

func (GetProjectsResultApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultApiKey)(nil)).Elem()
}

func (i GetProjectsResultApiKeyArgs) ToGetProjectsResultApiKeyOutput() GetProjectsResultApiKeyOutput {
	return i.ToGetProjectsResultApiKeyOutputWithContext(context.Background())
}

func (i GetProjectsResultApiKeyArgs) ToGetProjectsResultApiKeyOutputWithContext(ctx context.Context) GetProjectsResultApiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultApiKeyOutput)
}

// GetProjectsResultApiKeyArrayInput is an input type that accepts GetProjectsResultApiKeyArray and GetProjectsResultApiKeyArrayOutput values.
// You can construct a concrete instance of `GetProjectsResultApiKeyArrayInput` via:
//
//	GetProjectsResultApiKeyArray{ GetProjectsResultApiKeyArgs{...} }
type GetProjectsResultApiKeyArrayInput interface {
	pulumi.Input

	ToGetProjectsResultApiKeyArrayOutput() GetProjectsResultApiKeyArrayOutput
	ToGetProjectsResultApiKeyArrayOutputWithContext(context.Context) GetProjectsResultApiKeyArrayOutput
}

type GetProjectsResultApiKeyArray []GetProjectsResultApiKeyInput

func (GetProjectsResultApiKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultApiKey)(nil)).Elem()
}

func (i GetProjectsResultApiKeyArray) ToGetProjectsResultApiKeyArrayOutput() GetProjectsResultApiKeyArrayOutput {
	return i.ToGetProjectsResultApiKeyArrayOutputWithContext(context.Background())
}

func (i GetProjectsResultApiKeyArray) ToGetProjectsResultApiKeyArrayOutputWithContext(ctx context.Context) GetProjectsResultApiKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultApiKeyArrayOutput)
}

type GetProjectsResultApiKeyOutput struct{ *pulumi.OutputState }

func (GetProjectsResultApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultApiKey)(nil)).Elem()
}

func (o GetProjectsResultApiKeyOutput) ToGetProjectsResultApiKeyOutput() GetProjectsResultApiKeyOutput {
	return o
}

func (o GetProjectsResultApiKeyOutput) ToGetProjectsResultApiKeyOutputWithContext(ctx context.Context) GetProjectsResultApiKeyOutput {
	return o
}

func (o GetProjectsResultApiKeyOutput) ApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResultApiKey) string { return v.ApiKeyId }).(pulumi.StringOutput)
}

func (o GetProjectsResultApiKeyOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsResultApiKey) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

type GetProjectsResultApiKeyArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsResultApiKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultApiKey)(nil)).Elem()
}

func (o GetProjectsResultApiKeyArrayOutput) ToGetProjectsResultApiKeyArrayOutput() GetProjectsResultApiKeyArrayOutput {
	return o
}

func (o GetProjectsResultApiKeyArrayOutput) ToGetProjectsResultApiKeyArrayOutputWithContext(ctx context.Context) GetProjectsResultApiKeyArrayOutput {
	return o
}

func (o GetProjectsResultApiKeyArrayOutput) Index(i pulumi.IntInput) GetProjectsResultApiKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsResultApiKey {
		return vs[0].([]GetProjectsResultApiKey)[vs[1].(int)]
	}).(GetProjectsResultApiKeyOutput)
}

type GetProjectsResultTeam struct {
	RoleNames []string `pulumi:"roleNames"`
	TeamId    string   `pulumi:"teamId"`
}

// GetProjectsResultTeamInput is an input type that accepts GetProjectsResultTeamArgs and GetProjectsResultTeamOutput values.
// You can construct a concrete instance of `GetProjectsResultTeamInput` via:
//
//	GetProjectsResultTeamArgs{...}
type GetProjectsResultTeamInput interface {
	pulumi.Input

	ToGetProjectsResultTeamOutput() GetProjectsResultTeamOutput
	ToGetProjectsResultTeamOutputWithContext(context.Context) GetProjectsResultTeamOutput
}

type GetProjectsResultTeamArgs struct {
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	TeamId    pulumi.StringInput      `pulumi:"teamId"`
}

func (GetProjectsResultTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultTeam)(nil)).Elem()
}

func (i GetProjectsResultTeamArgs) ToGetProjectsResultTeamOutput() GetProjectsResultTeamOutput {
	return i.ToGetProjectsResultTeamOutputWithContext(context.Background())
}

func (i GetProjectsResultTeamArgs) ToGetProjectsResultTeamOutputWithContext(ctx context.Context) GetProjectsResultTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultTeamOutput)
}

// GetProjectsResultTeamArrayInput is an input type that accepts GetProjectsResultTeamArray and GetProjectsResultTeamArrayOutput values.
// You can construct a concrete instance of `GetProjectsResultTeamArrayInput` via:
//
//	GetProjectsResultTeamArray{ GetProjectsResultTeamArgs{...} }
type GetProjectsResultTeamArrayInput interface {
	pulumi.Input

	ToGetProjectsResultTeamArrayOutput() GetProjectsResultTeamArrayOutput
	ToGetProjectsResultTeamArrayOutputWithContext(context.Context) GetProjectsResultTeamArrayOutput
}

type GetProjectsResultTeamArray []GetProjectsResultTeamInput

func (GetProjectsResultTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultTeam)(nil)).Elem()
}

func (i GetProjectsResultTeamArray) ToGetProjectsResultTeamArrayOutput() GetProjectsResultTeamArrayOutput {
	return i.ToGetProjectsResultTeamArrayOutputWithContext(context.Background())
}

func (i GetProjectsResultTeamArray) ToGetProjectsResultTeamArrayOutputWithContext(ctx context.Context) GetProjectsResultTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultTeamArrayOutput)
}

type GetProjectsResultTeamOutput struct{ *pulumi.OutputState }

func (GetProjectsResultTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultTeam)(nil)).Elem()
}

func (o GetProjectsResultTeamOutput) ToGetProjectsResultTeamOutput() GetProjectsResultTeamOutput {
	return o
}

func (o GetProjectsResultTeamOutput) ToGetProjectsResultTeamOutputWithContext(ctx context.Context) GetProjectsResultTeamOutput {
	return o
}

func (o GetProjectsResultTeamOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsResultTeam) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

func (o GetProjectsResultTeamOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResultTeam) string { return v.TeamId }).(pulumi.StringOutput)
}

type GetProjectsResultTeamArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsResultTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultTeam)(nil)).Elem()
}

func (o GetProjectsResultTeamArrayOutput) ToGetProjectsResultTeamArrayOutput() GetProjectsResultTeamArrayOutput {
	return o
}

func (o GetProjectsResultTeamArrayOutput) ToGetProjectsResultTeamArrayOutputWithContext(ctx context.Context) GetProjectsResultTeamArrayOutput {
	return o
}

func (o GetProjectsResultTeamArrayOutput) Index(i pulumi.IntInput) GetProjectsResultTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsResultTeam {
		return vs[0].([]GetProjectsResultTeam)[vs[1].(int)]
	}).(GetProjectsResultTeamOutput)
}

type GetSearchIndexSynonym struct {
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
	Analyzer string `pulumi:"analyzer"`
	// Name of the index.
	Name             string `pulumi:"name"`
	SourceCollection string `pulumi:"sourceCollection"`
}

// GetSearchIndexSynonymInput is an input type that accepts GetSearchIndexSynonymArgs and GetSearchIndexSynonymOutput values.
// You can construct a concrete instance of `GetSearchIndexSynonymInput` via:
//
//	GetSearchIndexSynonymArgs{...}
type GetSearchIndexSynonymInput interface {
	pulumi.Input

	ToGetSearchIndexSynonymOutput() GetSearchIndexSynonymOutput
	ToGetSearchIndexSynonymOutputWithContext(context.Context) GetSearchIndexSynonymOutput
}

type GetSearchIndexSynonymArgs struct {
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
	Analyzer pulumi.StringInput `pulumi:"analyzer"`
	// Name of the index.
	Name             pulumi.StringInput `pulumi:"name"`
	SourceCollection pulumi.StringInput `pulumi:"sourceCollection"`
}

func (GetSearchIndexSynonymArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchIndexSynonym)(nil)).Elem()
}

func (i GetSearchIndexSynonymArgs) ToGetSearchIndexSynonymOutput() GetSearchIndexSynonymOutput {
	return i.ToGetSearchIndexSynonymOutputWithContext(context.Background())
}

func (i GetSearchIndexSynonymArgs) ToGetSearchIndexSynonymOutputWithContext(ctx context.Context) GetSearchIndexSynonymOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSearchIndexSynonymOutput)
}

// GetSearchIndexSynonymArrayInput is an input type that accepts GetSearchIndexSynonymArray and GetSearchIndexSynonymArrayOutput values.
// You can construct a concrete instance of `GetSearchIndexSynonymArrayInput` via:
//
//	GetSearchIndexSynonymArray{ GetSearchIndexSynonymArgs{...} }
type GetSearchIndexSynonymArrayInput interface {
	pulumi.Input

	ToGetSearchIndexSynonymArrayOutput() GetSearchIndexSynonymArrayOutput
	ToGetSearchIndexSynonymArrayOutputWithContext(context.Context) GetSearchIndexSynonymArrayOutput
}

type GetSearchIndexSynonymArray []GetSearchIndexSynonymInput

func (GetSearchIndexSynonymArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSearchIndexSynonym)(nil)).Elem()
}

func (i GetSearchIndexSynonymArray) ToGetSearchIndexSynonymArrayOutput() GetSearchIndexSynonymArrayOutput {
	return i.ToGetSearchIndexSynonymArrayOutputWithContext(context.Background())
}

func (i GetSearchIndexSynonymArray) ToGetSearchIndexSynonymArrayOutputWithContext(ctx context.Context) GetSearchIndexSynonymArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSearchIndexSynonymArrayOutput)
}

type GetSearchIndexSynonymOutput struct{ *pulumi.OutputState }

func (GetSearchIndexSynonymOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchIndexSynonym)(nil)).Elem()
}

func (o GetSearchIndexSynonymOutput) ToGetSearchIndexSynonymOutput() GetSearchIndexSynonymOutput {
	return o
}

func (o GetSearchIndexSynonymOutput) ToGetSearchIndexSynonymOutputWithContext(ctx context.Context) GetSearchIndexSynonymOutput {
	return o
}

// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
func (o GetSearchIndexSynonymOutput) Analyzer() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexSynonym) string { return v.Analyzer }).(pulumi.StringOutput)
}

// Name of the index.
func (o GetSearchIndexSynonymOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexSynonym) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSearchIndexSynonymOutput) SourceCollection() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexSynonym) string { return v.SourceCollection }).(pulumi.StringOutput)
}

type GetSearchIndexSynonymArrayOutput struct{ *pulumi.OutputState }

func (GetSearchIndexSynonymArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSearchIndexSynonym)(nil)).Elem()
}

func (o GetSearchIndexSynonymArrayOutput) ToGetSearchIndexSynonymArrayOutput() GetSearchIndexSynonymArrayOutput {
	return o
}

func (o GetSearchIndexSynonymArrayOutput) ToGetSearchIndexSynonymArrayOutputWithContext(ctx context.Context) GetSearchIndexSynonymArrayOutput {
	return o
}

func (o GetSearchIndexSynonymArrayOutput) Index(i pulumi.IntInput) GetSearchIndexSynonymOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSearchIndexSynonym {
		return vs[0].([]GetSearchIndexSynonym)[vs[1].(int)]
	}).(GetSearchIndexSynonymOutput)
}

type GetSearchIndexesResult struct {
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
	Analyzer string `pulumi:"analyzer"`
	// [Custom analyzers](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) to use in this index (this is an array of objects).
	Analyzers *string `pulumi:"analyzers"`
	// Name of the cluster containing the collection with one or more Atlas Search indexes.
	ClusterName string `pulumi:"clusterName"`
	// Name of the collection with one or more Atlas Search indexes.
	CollectionName string `pulumi:"collectionName"`
	// (Required) Name of the database the collection is in.
	Database string `pulumi:"database"`
	IndexId  string `pulumi:"indexId"`
	// Flag indicating whether the index uses dynamic or static mappings.
	MappingsDynamic *bool `pulumi:"mappingsDynamic"`
	// Object containing one or more field specifications.
	MappingsFields *string `pulumi:"mappingsFields"`
	// Name of the index.
	Name string `pulumi:"name"`
	// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
	ProjectId string `pulumi:"projectId"`
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when searching the index.
	SearchAnalyzer *string `pulumi:"searchAnalyzer"`
	Status         string  `pulumi:"status"`
	// Synonyms mapping definition to use in this index.
	// * `synonyms.#.name` - Name of the [synonym mapping definition](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-ref).
	// * `synonyms.#.source_collection` - Name of the source MongoDB collection for the synonyms.
	// * `synonyms.#.analyzer` - Name of the [analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use with this synonym mapping.
	Synonyms                    []GetSearchIndexesResultSynonym `pulumi:"synonyms"`
	WaitForIndexBuildCompletion *bool                           `pulumi:"waitForIndexBuildCompletion"`
}

// GetSearchIndexesResultInput is an input type that accepts GetSearchIndexesResultArgs and GetSearchIndexesResultOutput values.
// You can construct a concrete instance of `GetSearchIndexesResultInput` via:
//
//	GetSearchIndexesResultArgs{...}
type GetSearchIndexesResultInput interface {
	pulumi.Input

	ToGetSearchIndexesResultOutput() GetSearchIndexesResultOutput
	ToGetSearchIndexesResultOutputWithContext(context.Context) GetSearchIndexesResultOutput
}

type GetSearchIndexesResultArgs struct {
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
	Analyzer pulumi.StringInput `pulumi:"analyzer"`
	// [Custom analyzers](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) to use in this index (this is an array of objects).
	Analyzers pulumi.StringPtrInput `pulumi:"analyzers"`
	// Name of the cluster containing the collection with one or more Atlas Search indexes.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Name of the collection with one or more Atlas Search indexes.
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// (Required) Name of the database the collection is in.
	Database pulumi.StringInput `pulumi:"database"`
	IndexId  pulumi.StringInput `pulumi:"indexId"`
	// Flag indicating whether the index uses dynamic or static mappings.
	MappingsDynamic pulumi.BoolPtrInput `pulumi:"mappingsDynamic"`
	// Object containing one or more field specifications.
	MappingsFields pulumi.StringPtrInput `pulumi:"mappingsFields"`
	// Name of the index.
	Name pulumi.StringInput `pulumi:"name"`
	// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when searching the index.
	SearchAnalyzer pulumi.StringPtrInput `pulumi:"searchAnalyzer"`
	Status         pulumi.StringInput    `pulumi:"status"`
	// Synonyms mapping definition to use in this index.
	// * `synonyms.#.name` - Name of the [synonym mapping definition](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-ref).
	// * `synonyms.#.source_collection` - Name of the source MongoDB collection for the synonyms.
	// * `synonyms.#.analyzer` - Name of the [analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use with this synonym mapping.
	Synonyms                    GetSearchIndexesResultSynonymArrayInput `pulumi:"synonyms"`
	WaitForIndexBuildCompletion pulumi.BoolPtrInput                     `pulumi:"waitForIndexBuildCompletion"`
}

func (GetSearchIndexesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchIndexesResult)(nil)).Elem()
}

func (i GetSearchIndexesResultArgs) ToGetSearchIndexesResultOutput() GetSearchIndexesResultOutput {
	return i.ToGetSearchIndexesResultOutputWithContext(context.Background())
}

func (i GetSearchIndexesResultArgs) ToGetSearchIndexesResultOutputWithContext(ctx context.Context) GetSearchIndexesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSearchIndexesResultOutput)
}

// GetSearchIndexesResultArrayInput is an input type that accepts GetSearchIndexesResultArray and GetSearchIndexesResultArrayOutput values.
// You can construct a concrete instance of `GetSearchIndexesResultArrayInput` via:
//
//	GetSearchIndexesResultArray{ GetSearchIndexesResultArgs{...} }
type GetSearchIndexesResultArrayInput interface {
	pulumi.Input

	ToGetSearchIndexesResultArrayOutput() GetSearchIndexesResultArrayOutput
	ToGetSearchIndexesResultArrayOutputWithContext(context.Context) GetSearchIndexesResultArrayOutput
}

type GetSearchIndexesResultArray []GetSearchIndexesResultInput

func (GetSearchIndexesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSearchIndexesResult)(nil)).Elem()
}

func (i GetSearchIndexesResultArray) ToGetSearchIndexesResultArrayOutput() GetSearchIndexesResultArrayOutput {
	return i.ToGetSearchIndexesResultArrayOutputWithContext(context.Background())
}

func (i GetSearchIndexesResultArray) ToGetSearchIndexesResultArrayOutputWithContext(ctx context.Context) GetSearchIndexesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSearchIndexesResultArrayOutput)
}

type GetSearchIndexesResultOutput struct{ *pulumi.OutputState }

func (GetSearchIndexesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchIndexesResult)(nil)).Elem()
}

func (o GetSearchIndexesResultOutput) ToGetSearchIndexesResultOutput() GetSearchIndexesResultOutput {
	return o
}

func (o GetSearchIndexesResultOutput) ToGetSearchIndexesResultOutputWithContext(ctx context.Context) GetSearchIndexesResultOutput {
	return o
}

// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
func (o GetSearchIndexesResultOutput) Analyzer() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.Analyzer }).(pulumi.StringOutput)
}

// [Custom analyzers](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) to use in this index (this is an array of objects).
func (o GetSearchIndexesResultOutput) Analyzers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *string { return v.Analyzers }).(pulumi.StringPtrOutput)
}

// Name of the cluster containing the collection with one or more Atlas Search indexes.
func (o GetSearchIndexesResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

// Name of the collection with one or more Atlas Search indexes.
func (o GetSearchIndexesResultOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.CollectionName }).(pulumi.StringOutput)
}

// (Required) Name of the database the collection is in.
func (o GetSearchIndexesResultOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.Database }).(pulumi.StringOutput)
}

func (o GetSearchIndexesResultOutput) IndexId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.IndexId }).(pulumi.StringOutput)
}

// Flag indicating whether the index uses dynamic or static mappings.
func (o GetSearchIndexesResultOutput) MappingsDynamic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *bool { return v.MappingsDynamic }).(pulumi.BoolPtrOutput)
}

// Object containing one or more field specifications.
func (o GetSearchIndexesResultOutput) MappingsFields() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *string { return v.MappingsFields }).(pulumi.StringPtrOutput)
}

// Name of the index.
func (o GetSearchIndexesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.Name }).(pulumi.StringOutput)
}

// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
func (o GetSearchIndexesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when searching the index.
func (o GetSearchIndexesResultOutput) SearchAnalyzer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *string { return v.SearchAnalyzer }).(pulumi.StringPtrOutput)
}

func (o GetSearchIndexesResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.Status }).(pulumi.StringOutput)
}

// Synonyms mapping definition to use in this index.
// * `synonyms.#.name` - Name of the [synonym mapping definition](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-ref).
// * `synonyms.#.source_collection` - Name of the source MongoDB collection for the synonyms.
// * `synonyms.#.analyzer` - Name of the [analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use with this synonym mapping.
func (o GetSearchIndexesResultOutput) Synonyms() GetSearchIndexesResultSynonymArrayOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) []GetSearchIndexesResultSynonym { return v.Synonyms }).(GetSearchIndexesResultSynonymArrayOutput)
}

func (o GetSearchIndexesResultOutput) WaitForIndexBuildCompletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *bool { return v.WaitForIndexBuildCompletion }).(pulumi.BoolPtrOutput)
}

type GetSearchIndexesResultArrayOutput struct{ *pulumi.OutputState }

func (GetSearchIndexesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSearchIndexesResult)(nil)).Elem()
}

func (o GetSearchIndexesResultArrayOutput) ToGetSearchIndexesResultArrayOutput() GetSearchIndexesResultArrayOutput {
	return o
}

func (o GetSearchIndexesResultArrayOutput) ToGetSearchIndexesResultArrayOutputWithContext(ctx context.Context) GetSearchIndexesResultArrayOutput {
	return o
}

func (o GetSearchIndexesResultArrayOutput) Index(i pulumi.IntInput) GetSearchIndexesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSearchIndexesResult {
		return vs[0].([]GetSearchIndexesResult)[vs[1].(int)]
	}).(GetSearchIndexesResultOutput)
}

type GetSearchIndexesResultSynonym struct {
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
	Analyzer string `pulumi:"analyzer"`
	// Name of the index.
	Name             string `pulumi:"name"`
	SourceCollection string `pulumi:"sourceCollection"`
}

// GetSearchIndexesResultSynonymInput is an input type that accepts GetSearchIndexesResultSynonymArgs and GetSearchIndexesResultSynonymOutput values.
// You can construct a concrete instance of `GetSearchIndexesResultSynonymInput` via:
//
//	GetSearchIndexesResultSynonymArgs{...}
type GetSearchIndexesResultSynonymInput interface {
	pulumi.Input

	ToGetSearchIndexesResultSynonymOutput() GetSearchIndexesResultSynonymOutput
	ToGetSearchIndexesResultSynonymOutputWithContext(context.Context) GetSearchIndexesResultSynonymOutput
}

type GetSearchIndexesResultSynonymArgs struct {
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
	Analyzer pulumi.StringInput `pulumi:"analyzer"`
	// Name of the index.
	Name             pulumi.StringInput `pulumi:"name"`
	SourceCollection pulumi.StringInput `pulumi:"sourceCollection"`
}

func (GetSearchIndexesResultSynonymArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchIndexesResultSynonym)(nil)).Elem()
}

func (i GetSearchIndexesResultSynonymArgs) ToGetSearchIndexesResultSynonymOutput() GetSearchIndexesResultSynonymOutput {
	return i.ToGetSearchIndexesResultSynonymOutputWithContext(context.Background())
}

func (i GetSearchIndexesResultSynonymArgs) ToGetSearchIndexesResultSynonymOutputWithContext(ctx context.Context) GetSearchIndexesResultSynonymOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSearchIndexesResultSynonymOutput)
}

// GetSearchIndexesResultSynonymArrayInput is an input type that accepts GetSearchIndexesResultSynonymArray and GetSearchIndexesResultSynonymArrayOutput values.
// You can construct a concrete instance of `GetSearchIndexesResultSynonymArrayInput` via:
//
//	GetSearchIndexesResultSynonymArray{ GetSearchIndexesResultSynonymArgs{...} }
type GetSearchIndexesResultSynonymArrayInput interface {
	pulumi.Input

	ToGetSearchIndexesResultSynonymArrayOutput() GetSearchIndexesResultSynonymArrayOutput
	ToGetSearchIndexesResultSynonymArrayOutputWithContext(context.Context) GetSearchIndexesResultSynonymArrayOutput
}

type GetSearchIndexesResultSynonymArray []GetSearchIndexesResultSynonymInput

func (GetSearchIndexesResultSynonymArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSearchIndexesResultSynonym)(nil)).Elem()
}

func (i GetSearchIndexesResultSynonymArray) ToGetSearchIndexesResultSynonymArrayOutput() GetSearchIndexesResultSynonymArrayOutput {
	return i.ToGetSearchIndexesResultSynonymArrayOutputWithContext(context.Background())
}

func (i GetSearchIndexesResultSynonymArray) ToGetSearchIndexesResultSynonymArrayOutputWithContext(ctx context.Context) GetSearchIndexesResultSynonymArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSearchIndexesResultSynonymArrayOutput)
}

type GetSearchIndexesResultSynonymOutput struct{ *pulumi.OutputState }

func (GetSearchIndexesResultSynonymOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchIndexesResultSynonym)(nil)).Elem()
}

func (o GetSearchIndexesResultSynonymOutput) ToGetSearchIndexesResultSynonymOutput() GetSearchIndexesResultSynonymOutput {
	return o
}

func (o GetSearchIndexesResultSynonymOutput) ToGetSearchIndexesResultSynonymOutputWithContext(ctx context.Context) GetSearchIndexesResultSynonymOutput {
	return o
}

// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
func (o GetSearchIndexesResultSynonymOutput) Analyzer() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResultSynonym) string { return v.Analyzer }).(pulumi.StringOutput)
}

// Name of the index.
func (o GetSearchIndexesResultSynonymOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResultSynonym) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSearchIndexesResultSynonymOutput) SourceCollection() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResultSynonym) string { return v.SourceCollection }).(pulumi.StringOutput)
}

type GetSearchIndexesResultSynonymArrayOutput struct{ *pulumi.OutputState }

func (GetSearchIndexesResultSynonymArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSearchIndexesResultSynonym)(nil)).Elem()
}

func (o GetSearchIndexesResultSynonymArrayOutput) ToGetSearchIndexesResultSynonymArrayOutput() GetSearchIndexesResultSynonymArrayOutput {
	return o
}

func (o GetSearchIndexesResultSynonymArrayOutput) ToGetSearchIndexesResultSynonymArrayOutputWithContext(ctx context.Context) GetSearchIndexesResultSynonymArrayOutput {
	return o
}

func (o GetSearchIndexesResultSynonymArrayOutput) Index(i pulumi.IntInput) GetSearchIndexesResultSynonymOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSearchIndexesResultSynonym {
		return vs[0].([]GetSearchIndexesResultSynonym)[vs[1].(int)]
	}).(GetSearchIndexesResultSynonymOutput)
}

type GetServerlessInstanceLink struct {
	Href string `pulumi:"href"`
	Rel  string `pulumi:"rel"`
}

// GetServerlessInstanceLinkInput is an input type that accepts GetServerlessInstanceLinkArgs and GetServerlessInstanceLinkOutput values.
// You can construct a concrete instance of `GetServerlessInstanceLinkInput` via:
//
//	GetServerlessInstanceLinkArgs{...}
type GetServerlessInstanceLinkInput interface {
	pulumi.Input

	ToGetServerlessInstanceLinkOutput() GetServerlessInstanceLinkOutput
	ToGetServerlessInstanceLinkOutputWithContext(context.Context) GetServerlessInstanceLinkOutput
}

type GetServerlessInstanceLinkArgs struct {
	Href pulumi.StringInput `pulumi:"href"`
	Rel  pulumi.StringInput `pulumi:"rel"`
}

func (GetServerlessInstanceLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerlessInstanceLink)(nil)).Elem()
}

func (i GetServerlessInstanceLinkArgs) ToGetServerlessInstanceLinkOutput() GetServerlessInstanceLinkOutput {
	return i.ToGetServerlessInstanceLinkOutputWithContext(context.Background())
}

func (i GetServerlessInstanceLinkArgs) ToGetServerlessInstanceLinkOutputWithContext(ctx context.Context) GetServerlessInstanceLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerlessInstanceLinkOutput)
}

// GetServerlessInstanceLinkArrayInput is an input type that accepts GetServerlessInstanceLinkArray and GetServerlessInstanceLinkArrayOutput values.
// You can construct a concrete instance of `GetServerlessInstanceLinkArrayInput` via:
//
//	GetServerlessInstanceLinkArray{ GetServerlessInstanceLinkArgs{...} }
type GetServerlessInstanceLinkArrayInput interface {
	pulumi.Input

	ToGetServerlessInstanceLinkArrayOutput() GetServerlessInstanceLinkArrayOutput
	ToGetServerlessInstanceLinkArrayOutputWithContext(context.Context) GetServerlessInstanceLinkArrayOutput
}

type GetServerlessInstanceLinkArray []GetServerlessInstanceLinkInput

func (GetServerlessInstanceLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerlessInstanceLink)(nil)).Elem()
}

func (i GetServerlessInstanceLinkArray) ToGetServerlessInstanceLinkArrayOutput() GetServerlessInstanceLinkArrayOutput {
	return i.ToGetServerlessInstanceLinkArrayOutputWithContext(context.Background())
}

func (i GetServerlessInstanceLinkArray) ToGetServerlessInstanceLinkArrayOutputWithContext(ctx context.Context) GetServerlessInstanceLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerlessInstanceLinkArrayOutput)
}

type GetServerlessInstanceLinkOutput struct{ *pulumi.OutputState }

func (GetServerlessInstanceLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerlessInstanceLink)(nil)).Elem()
}

func (o GetServerlessInstanceLinkOutput) ToGetServerlessInstanceLinkOutput() GetServerlessInstanceLinkOutput {
	return o
}

func (o GetServerlessInstanceLinkOutput) ToGetServerlessInstanceLinkOutputWithContext(ctx context.Context) GetServerlessInstanceLinkOutput {
	return o
}

func (o GetServerlessInstanceLinkOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstanceLink) string { return v.Href }).(pulumi.StringOutput)
}

func (o GetServerlessInstanceLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstanceLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetServerlessInstanceLinkArrayOutput struct{ *pulumi.OutputState }

func (GetServerlessInstanceLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerlessInstanceLink)(nil)).Elem()
}

func (o GetServerlessInstanceLinkArrayOutput) ToGetServerlessInstanceLinkArrayOutput() GetServerlessInstanceLinkArrayOutput {
	return o
}

func (o GetServerlessInstanceLinkArrayOutput) ToGetServerlessInstanceLinkArrayOutputWithContext(ctx context.Context) GetServerlessInstanceLinkArrayOutput {
	return o
}

func (o GetServerlessInstanceLinkArrayOutput) Index(i pulumi.IntInput) GetServerlessInstanceLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerlessInstanceLink {
		return vs[0].([]GetServerlessInstanceLink)[vs[1].(int)]
	}).(GetServerlessInstanceLinkOutput)
}

type GetServerlessInstancesResult struct {
	ConnectionStringsPrivateEndpointSrvs []string `pulumi:"connectionStringsPrivateEndpointSrvs"`
	// Public `mongodb+srv://` connection string that you can use to connect to this serverless instance.
	ConnectionStringsStandardSrv string `pulumi:"connectionStringsStandardSrv"`
	// Flag that indicates whether the serverless instance uses Serverless Continuous Backup.
	ContinuousBackupEnabled bool   `pulumi:"continuousBackupEnabled"`
	CreateDate              string `pulumi:"createDate"`
	// Unique 24-hexadecimal digit string that identifies the serverless instance.
	Id    string                             `pulumi:"id"`
	Links []GetServerlessInstancesResultLink `pulumi:"links"`
	// Version of MongoDB that the serverless instance runs, in `<major version>`.`<minor version>` format.
	MongoDbVersion string `pulumi:"mongoDbVersion"`
	// (Required) Human-readable label that identifies your serverless instance.
	Name string `pulumi:"name"`
	// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
	ProjectId string `pulumi:"projectId"`
	// Cloud service provider on which MongoDB Cloud provisioned the serverless instance.
	ProviderSettingsBackingProviderName string `pulumi:"providerSettingsBackingProviderName"`
	// Cloud service provider that applies to the provisioned the serverless instance.
	ProviderSettingsProviderName string `pulumi:"providerSettingsProviderName"`
	// Human-readable label that identifies the physical location of your MongoDB serverless instance. The region you choose can affect network latency for clients accessing your databases.
	ProviderSettingsRegionName string `pulumi:"providerSettingsRegionName"`
	// Stage of deployment of this serverless instance when the resource made its request.
	StateName string `pulumi:"stateName"`
	// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled bool `pulumi:"terminationProtectionEnabled"`
}

// GetServerlessInstancesResultInput is an input type that accepts GetServerlessInstancesResultArgs and GetServerlessInstancesResultOutput values.
// You can construct a concrete instance of `GetServerlessInstancesResultInput` via:
//
//	GetServerlessInstancesResultArgs{...}
type GetServerlessInstancesResultInput interface {
	pulumi.Input

	ToGetServerlessInstancesResultOutput() GetServerlessInstancesResultOutput
	ToGetServerlessInstancesResultOutputWithContext(context.Context) GetServerlessInstancesResultOutput
}

type GetServerlessInstancesResultArgs struct {
	ConnectionStringsPrivateEndpointSrvs pulumi.StringArrayInput `pulumi:"connectionStringsPrivateEndpointSrvs"`
	// Public `mongodb+srv://` connection string that you can use to connect to this serverless instance.
	ConnectionStringsStandardSrv pulumi.StringInput `pulumi:"connectionStringsStandardSrv"`
	// Flag that indicates whether the serverless instance uses Serverless Continuous Backup.
	ContinuousBackupEnabled pulumi.BoolInput   `pulumi:"continuousBackupEnabled"`
	CreateDate              pulumi.StringInput `pulumi:"createDate"`
	// Unique 24-hexadecimal digit string that identifies the serverless instance.
	Id    pulumi.StringInput                         `pulumi:"id"`
	Links GetServerlessInstancesResultLinkArrayInput `pulumi:"links"`
	// Version of MongoDB that the serverless instance runs, in `<major version>`.`<minor version>` format.
	MongoDbVersion pulumi.StringInput `pulumi:"mongoDbVersion"`
	// (Required) Human-readable label that identifies your serverless instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Cloud service provider on which MongoDB Cloud provisioned the serverless instance.
	ProviderSettingsBackingProviderName pulumi.StringInput `pulumi:"providerSettingsBackingProviderName"`
	// Cloud service provider that applies to the provisioned the serverless instance.
	ProviderSettingsProviderName pulumi.StringInput `pulumi:"providerSettingsProviderName"`
	// Human-readable label that identifies the physical location of your MongoDB serverless instance. The region you choose can affect network latency for clients accessing your databases.
	ProviderSettingsRegionName pulumi.StringInput `pulumi:"providerSettingsRegionName"`
	// Stage of deployment of this serverless instance when the resource made its request.
	StateName pulumi.StringInput `pulumi:"stateName"`
	// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled pulumi.BoolInput `pulumi:"terminationProtectionEnabled"`
}

func (GetServerlessInstancesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerlessInstancesResult)(nil)).Elem()
}

func (i GetServerlessInstancesResultArgs) ToGetServerlessInstancesResultOutput() GetServerlessInstancesResultOutput {
	return i.ToGetServerlessInstancesResultOutputWithContext(context.Background())
}

func (i GetServerlessInstancesResultArgs) ToGetServerlessInstancesResultOutputWithContext(ctx context.Context) GetServerlessInstancesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerlessInstancesResultOutput)
}

// GetServerlessInstancesResultArrayInput is an input type that accepts GetServerlessInstancesResultArray and GetServerlessInstancesResultArrayOutput values.
// You can construct a concrete instance of `GetServerlessInstancesResultArrayInput` via:
//
//	GetServerlessInstancesResultArray{ GetServerlessInstancesResultArgs{...} }
type GetServerlessInstancesResultArrayInput interface {
	pulumi.Input

	ToGetServerlessInstancesResultArrayOutput() GetServerlessInstancesResultArrayOutput
	ToGetServerlessInstancesResultArrayOutputWithContext(context.Context) GetServerlessInstancesResultArrayOutput
}

type GetServerlessInstancesResultArray []GetServerlessInstancesResultInput

func (GetServerlessInstancesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerlessInstancesResult)(nil)).Elem()
}

func (i GetServerlessInstancesResultArray) ToGetServerlessInstancesResultArrayOutput() GetServerlessInstancesResultArrayOutput {
	return i.ToGetServerlessInstancesResultArrayOutputWithContext(context.Background())
}

func (i GetServerlessInstancesResultArray) ToGetServerlessInstancesResultArrayOutputWithContext(ctx context.Context) GetServerlessInstancesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerlessInstancesResultArrayOutput)
}

type GetServerlessInstancesResultOutput struct{ *pulumi.OutputState }

func (GetServerlessInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerlessInstancesResult)(nil)).Elem()
}

func (o GetServerlessInstancesResultOutput) ToGetServerlessInstancesResultOutput() GetServerlessInstancesResultOutput {
	return o
}

func (o GetServerlessInstancesResultOutput) ToGetServerlessInstancesResultOutputWithContext(ctx context.Context) GetServerlessInstancesResultOutput {
	return o
}

func (o GetServerlessInstancesResultOutput) ConnectionStringsPrivateEndpointSrvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) []string { return v.ConnectionStringsPrivateEndpointSrvs }).(pulumi.StringArrayOutput)
}

// Public `mongodb+srv://` connection string that you can use to connect to this serverless instance.
func (o GetServerlessInstancesResultOutput) ConnectionStringsStandardSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.ConnectionStringsStandardSrv }).(pulumi.StringOutput)
}

// Flag that indicates whether the serverless instance uses Serverless Continuous Backup.
func (o GetServerlessInstancesResultOutput) ContinuousBackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) bool { return v.ContinuousBackupEnabled }).(pulumi.BoolOutput)
}

func (o GetServerlessInstancesResultOutput) CreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.CreateDate }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the serverless instance.
func (o GetServerlessInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServerlessInstancesResultOutput) Links() GetServerlessInstancesResultLinkArrayOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) []GetServerlessInstancesResultLink { return v.Links }).(GetServerlessInstancesResultLinkArrayOutput)
}

// Version of MongoDB that the serverless instance runs, in `<major version>`.`<minor version>` format.
func (o GetServerlessInstancesResultOutput) MongoDbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.MongoDbVersion }).(pulumi.StringOutput)
}

// (Required) Human-readable label that identifies your serverless instance.
func (o GetServerlessInstancesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.Name }).(pulumi.StringOutput)
}

// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
func (o GetServerlessInstancesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Cloud service provider on which MongoDB Cloud provisioned the serverless instance.
func (o GetServerlessInstancesResultOutput) ProviderSettingsBackingProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.ProviderSettingsBackingProviderName }).(pulumi.StringOutput)
}

// Cloud service provider that applies to the provisioned the serverless instance.
func (o GetServerlessInstancesResultOutput) ProviderSettingsProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.ProviderSettingsProviderName }).(pulumi.StringOutput)
}

// Human-readable label that identifies the physical location of your MongoDB serverless instance. The region you choose can affect network latency for clients accessing your databases.
func (o GetServerlessInstancesResultOutput) ProviderSettingsRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.ProviderSettingsRegionName }).(pulumi.StringOutput)
}

// Stage of deployment of this serverless instance when the resource made its request.
func (o GetServerlessInstancesResultOutput) StateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.StateName }).(pulumi.StringOutput)
}

// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
func (o GetServerlessInstancesResultOutput) TerminationProtectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) bool { return v.TerminationProtectionEnabled }).(pulumi.BoolOutput)
}

type GetServerlessInstancesResultArrayOutput struct{ *pulumi.OutputState }

func (GetServerlessInstancesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerlessInstancesResult)(nil)).Elem()
}

func (o GetServerlessInstancesResultArrayOutput) ToGetServerlessInstancesResultArrayOutput() GetServerlessInstancesResultArrayOutput {
	return o
}

func (o GetServerlessInstancesResultArrayOutput) ToGetServerlessInstancesResultArrayOutputWithContext(ctx context.Context) GetServerlessInstancesResultArrayOutput {
	return o
}

func (o GetServerlessInstancesResultArrayOutput) Index(i pulumi.IntInput) GetServerlessInstancesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerlessInstancesResult {
		return vs[0].([]GetServerlessInstancesResult)[vs[1].(int)]
	}).(GetServerlessInstancesResultOutput)
}

type GetServerlessInstancesResultLink struct {
	Href string `pulumi:"href"`
	Rel  string `pulumi:"rel"`
}

// GetServerlessInstancesResultLinkInput is an input type that accepts GetServerlessInstancesResultLinkArgs and GetServerlessInstancesResultLinkOutput values.
// You can construct a concrete instance of `GetServerlessInstancesResultLinkInput` via:
//
//	GetServerlessInstancesResultLinkArgs{...}
type GetServerlessInstancesResultLinkInput interface {
	pulumi.Input

	ToGetServerlessInstancesResultLinkOutput() GetServerlessInstancesResultLinkOutput
	ToGetServerlessInstancesResultLinkOutputWithContext(context.Context) GetServerlessInstancesResultLinkOutput
}

type GetServerlessInstancesResultLinkArgs struct {
	Href pulumi.StringInput `pulumi:"href"`
	Rel  pulumi.StringInput `pulumi:"rel"`
}

func (GetServerlessInstancesResultLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerlessInstancesResultLink)(nil)).Elem()
}

func (i GetServerlessInstancesResultLinkArgs) ToGetServerlessInstancesResultLinkOutput() GetServerlessInstancesResultLinkOutput {
	return i.ToGetServerlessInstancesResultLinkOutputWithContext(context.Background())
}

func (i GetServerlessInstancesResultLinkArgs) ToGetServerlessInstancesResultLinkOutputWithContext(ctx context.Context) GetServerlessInstancesResultLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerlessInstancesResultLinkOutput)
}

// GetServerlessInstancesResultLinkArrayInput is an input type that accepts GetServerlessInstancesResultLinkArray and GetServerlessInstancesResultLinkArrayOutput values.
// You can construct a concrete instance of `GetServerlessInstancesResultLinkArrayInput` via:
//
//	GetServerlessInstancesResultLinkArray{ GetServerlessInstancesResultLinkArgs{...} }
type GetServerlessInstancesResultLinkArrayInput interface {
	pulumi.Input

	ToGetServerlessInstancesResultLinkArrayOutput() GetServerlessInstancesResultLinkArrayOutput
	ToGetServerlessInstancesResultLinkArrayOutputWithContext(context.Context) GetServerlessInstancesResultLinkArrayOutput
}

type GetServerlessInstancesResultLinkArray []GetServerlessInstancesResultLinkInput

func (GetServerlessInstancesResultLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerlessInstancesResultLink)(nil)).Elem()
}

func (i GetServerlessInstancesResultLinkArray) ToGetServerlessInstancesResultLinkArrayOutput() GetServerlessInstancesResultLinkArrayOutput {
	return i.ToGetServerlessInstancesResultLinkArrayOutputWithContext(context.Background())
}

func (i GetServerlessInstancesResultLinkArray) ToGetServerlessInstancesResultLinkArrayOutputWithContext(ctx context.Context) GetServerlessInstancesResultLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerlessInstancesResultLinkArrayOutput)
}

type GetServerlessInstancesResultLinkOutput struct{ *pulumi.OutputState }

func (GetServerlessInstancesResultLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerlessInstancesResultLink)(nil)).Elem()
}

func (o GetServerlessInstancesResultLinkOutput) ToGetServerlessInstancesResultLinkOutput() GetServerlessInstancesResultLinkOutput {
	return o
}

func (o GetServerlessInstancesResultLinkOutput) ToGetServerlessInstancesResultLinkOutputWithContext(ctx context.Context) GetServerlessInstancesResultLinkOutput {
	return o
}

func (o GetServerlessInstancesResultLinkOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResultLink) string { return v.Href }).(pulumi.StringOutput)
}

func (o GetServerlessInstancesResultLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResultLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetServerlessInstancesResultLinkArrayOutput struct{ *pulumi.OutputState }

func (GetServerlessInstancesResultLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerlessInstancesResultLink)(nil)).Elem()
}

func (o GetServerlessInstancesResultLinkArrayOutput) ToGetServerlessInstancesResultLinkArrayOutput() GetServerlessInstancesResultLinkArrayOutput {
	return o
}

func (o GetServerlessInstancesResultLinkArrayOutput) ToGetServerlessInstancesResultLinkArrayOutputWithContext(ctx context.Context) GetServerlessInstancesResultLinkArrayOutput {
	return o
}

func (o GetServerlessInstancesResultLinkArrayOutput) Index(i pulumi.IntInput) GetServerlessInstancesResultLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerlessInstancesResultLink {
		return vs[0].([]GetServerlessInstancesResultLink)[vs[1].(int)]
	}).(GetServerlessInstancesResultLinkOutput)
}

type GetThirdPartyIntegrationsResult struct {
	// Unique identifier of your New Relic account.
	AccountId string `pulumi:"accountId"`
	// Your API Key.
	ApiKey string `pulumi:"apiKey"`
	// Your API Token.
	ApiToken    string `pulumi:"apiToken"`
	ChannelName string `pulumi:"channelName"`
	// Whether your cluster has Prometheus enabled.
	Enabled *bool `pulumi:"enabled"`
	// Your Flowdock Flow name.
	FlowName string `pulumi:"flowName"`
	// Your License Key.
	LicenseKey string `pulumi:"licenseKey"`
	// Your Microsoft Teams incoming webhook URL.
	MicrosoftTeamsWebhookUrl *string `pulumi:"microsoftTeamsWebhookUrl"`
	// Your Flowdock organization name.
	OrgName string `pulumi:"orgName"`
	// The unique ID for the project to get all Third-Party service integrations
	ProjectId string `pulumi:"projectId"`
	// Your Insights Query Key.
	ReadToken string `pulumi:"readToken"`
	// Indicates which API URL to use, either US or EU. Opsgenie will use US by default.
	Region string `pulumi:"region"`
	// An optional field for your Routing Key.
	RoutingKey string `pulumi:"routingKey"`
	// Your Prometheus protocol scheme configured for requests.
	Scheme *string `pulumi:"scheme"`
	// An optional field for your webhook secret.
	Secret string `pulumi:"secret"`
	// Indicates which service discovery method is used, either file or http.
	ServiceDiscovery *string `pulumi:"serviceDiscovery"`
	// Your Service Key.
	ServiceKey string `pulumi:"serviceKey"`
	TeamName   string `pulumi:"teamName"`
	// (Required) Thirt-Party service integration type.
	Type string `pulumi:"type"`
	// Your webhook URL.
	Url string `pulumi:"url"`
	// Your Prometheus username.
	UserName *string `pulumi:"userName"`
	// Your Insights Insert Key.
	WriteToken string `pulumi:"writeToken"`
}

// GetThirdPartyIntegrationsResultInput is an input type that accepts GetThirdPartyIntegrationsResultArgs and GetThirdPartyIntegrationsResultOutput values.
// You can construct a concrete instance of `GetThirdPartyIntegrationsResultInput` via:
//
//	GetThirdPartyIntegrationsResultArgs{...}
type GetThirdPartyIntegrationsResultInput interface {
	pulumi.Input

	ToGetThirdPartyIntegrationsResultOutput() GetThirdPartyIntegrationsResultOutput
	ToGetThirdPartyIntegrationsResultOutputWithContext(context.Context) GetThirdPartyIntegrationsResultOutput
}

type GetThirdPartyIntegrationsResultArgs struct {
	// Unique identifier of your New Relic account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Your API Key.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// Your API Token.
	ApiToken    pulumi.StringInput `pulumi:"apiToken"`
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Whether your cluster has Prometheus enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Your Flowdock Flow name.
	FlowName pulumi.StringInput `pulumi:"flowName"`
	// Your License Key.
	LicenseKey pulumi.StringInput `pulumi:"licenseKey"`
	// Your Microsoft Teams incoming webhook URL.
	MicrosoftTeamsWebhookUrl pulumi.StringPtrInput `pulumi:"microsoftTeamsWebhookUrl"`
	// Your Flowdock organization name.
	OrgName pulumi.StringInput `pulumi:"orgName"`
	// The unique ID for the project to get all Third-Party service integrations
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Your Insights Query Key.
	ReadToken pulumi.StringInput `pulumi:"readToken"`
	// Indicates which API URL to use, either US or EU. Opsgenie will use US by default.
	Region pulumi.StringInput `pulumi:"region"`
	// An optional field for your Routing Key.
	RoutingKey pulumi.StringInput `pulumi:"routingKey"`
	// Your Prometheus protocol scheme configured for requests.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
	// An optional field for your webhook secret.
	Secret pulumi.StringInput `pulumi:"secret"`
	// Indicates which service discovery method is used, either file or http.
	ServiceDiscovery pulumi.StringPtrInput `pulumi:"serviceDiscovery"`
	// Your Service Key.
	ServiceKey pulumi.StringInput `pulumi:"serviceKey"`
	TeamName   pulumi.StringInput `pulumi:"teamName"`
	// (Required) Thirt-Party service integration type.
	Type pulumi.StringInput `pulumi:"type"`
	// Your webhook URL.
	Url pulumi.StringInput `pulumi:"url"`
	// Your Prometheus username.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
	// Your Insights Insert Key.
	WriteToken pulumi.StringInput `pulumi:"writeToken"`
}

func (GetThirdPartyIntegrationsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetThirdPartyIntegrationsResult)(nil)).Elem()
}

func (i GetThirdPartyIntegrationsResultArgs) ToGetThirdPartyIntegrationsResultOutput() GetThirdPartyIntegrationsResultOutput {
	return i.ToGetThirdPartyIntegrationsResultOutputWithContext(context.Background())
}

func (i GetThirdPartyIntegrationsResultArgs) ToGetThirdPartyIntegrationsResultOutputWithContext(ctx context.Context) GetThirdPartyIntegrationsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetThirdPartyIntegrationsResultOutput)
}

// GetThirdPartyIntegrationsResultArrayInput is an input type that accepts GetThirdPartyIntegrationsResultArray and GetThirdPartyIntegrationsResultArrayOutput values.
// You can construct a concrete instance of `GetThirdPartyIntegrationsResultArrayInput` via:
//
//	GetThirdPartyIntegrationsResultArray{ GetThirdPartyIntegrationsResultArgs{...} }
type GetThirdPartyIntegrationsResultArrayInput interface {
	pulumi.Input

	ToGetThirdPartyIntegrationsResultArrayOutput() GetThirdPartyIntegrationsResultArrayOutput
	ToGetThirdPartyIntegrationsResultArrayOutputWithContext(context.Context) GetThirdPartyIntegrationsResultArrayOutput
}

type GetThirdPartyIntegrationsResultArray []GetThirdPartyIntegrationsResultInput

func (GetThirdPartyIntegrationsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetThirdPartyIntegrationsResult)(nil)).Elem()
}

func (i GetThirdPartyIntegrationsResultArray) ToGetThirdPartyIntegrationsResultArrayOutput() GetThirdPartyIntegrationsResultArrayOutput {
	return i.ToGetThirdPartyIntegrationsResultArrayOutputWithContext(context.Background())
}

func (i GetThirdPartyIntegrationsResultArray) ToGetThirdPartyIntegrationsResultArrayOutputWithContext(ctx context.Context) GetThirdPartyIntegrationsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetThirdPartyIntegrationsResultArrayOutput)
}

type GetThirdPartyIntegrationsResultOutput struct{ *pulumi.OutputState }

func (GetThirdPartyIntegrationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetThirdPartyIntegrationsResult)(nil)).Elem()
}

func (o GetThirdPartyIntegrationsResultOutput) ToGetThirdPartyIntegrationsResultOutput() GetThirdPartyIntegrationsResultOutput {
	return o
}

func (o GetThirdPartyIntegrationsResultOutput) ToGetThirdPartyIntegrationsResultOutputWithContext(ctx context.Context) GetThirdPartyIntegrationsResultOutput {
	return o
}

// Unique identifier of your New Relic account.
func (o GetThirdPartyIntegrationsResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Your API Key.
func (o GetThirdPartyIntegrationsResultOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Your API Token.
func (o GetThirdPartyIntegrationsResultOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ApiToken }).(pulumi.StringOutput)
}

func (o GetThirdPartyIntegrationsResultOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Whether your cluster has Prometheus enabled.
func (o GetThirdPartyIntegrationsResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Your Flowdock Flow name.
func (o GetThirdPartyIntegrationsResultOutput) FlowName() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.FlowName }).(pulumi.StringOutput)
}

// Your License Key.
func (o GetThirdPartyIntegrationsResultOutput) LicenseKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.LicenseKey }).(pulumi.StringOutput)
}

// Your Microsoft Teams incoming webhook URL.
func (o GetThirdPartyIntegrationsResultOutput) MicrosoftTeamsWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) *string { return v.MicrosoftTeamsWebhookUrl }).(pulumi.StringPtrOutput)
}

// Your Flowdock organization name.
func (o GetThirdPartyIntegrationsResultOutput) OrgName() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.OrgName }).(pulumi.StringOutput)
}

// The unique ID for the project to get all Third-Party service integrations
func (o GetThirdPartyIntegrationsResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Your Insights Query Key.
func (o GetThirdPartyIntegrationsResultOutput) ReadToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ReadToken }).(pulumi.StringOutput)
}

// Indicates which API URL to use, either US or EU. Opsgenie will use US by default.
func (o GetThirdPartyIntegrationsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.Region }).(pulumi.StringOutput)
}

// An optional field for your Routing Key.
func (o GetThirdPartyIntegrationsResultOutput) RoutingKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.RoutingKey }).(pulumi.StringOutput)
}

// Your Prometheus protocol scheme configured for requests.
func (o GetThirdPartyIntegrationsResultOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

// An optional field for your webhook secret.
func (o GetThirdPartyIntegrationsResultOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.Secret }).(pulumi.StringOutput)
}

// Indicates which service discovery method is used, either file or http.
func (o GetThirdPartyIntegrationsResultOutput) ServiceDiscovery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) *string { return v.ServiceDiscovery }).(pulumi.StringPtrOutput)
}

// Your Service Key.
func (o GetThirdPartyIntegrationsResultOutput) ServiceKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ServiceKey }).(pulumi.StringOutput)
}

func (o GetThirdPartyIntegrationsResultOutput) TeamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.TeamName }).(pulumi.StringOutput)
}

// (Required) Thirt-Party service integration type.
func (o GetThirdPartyIntegrationsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.Type }).(pulumi.StringOutput)
}

// Your webhook URL.
func (o GetThirdPartyIntegrationsResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.Url }).(pulumi.StringOutput)
}

// Your Prometheus username.
func (o GetThirdPartyIntegrationsResultOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

// Your Insights Insert Key.
func (o GetThirdPartyIntegrationsResultOutput) WriteToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.WriteToken }).(pulumi.StringOutput)
}

type GetThirdPartyIntegrationsResultArrayOutput struct{ *pulumi.OutputState }

func (GetThirdPartyIntegrationsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetThirdPartyIntegrationsResult)(nil)).Elem()
}

func (o GetThirdPartyIntegrationsResultArrayOutput) ToGetThirdPartyIntegrationsResultArrayOutput() GetThirdPartyIntegrationsResultArrayOutput {
	return o
}

func (o GetThirdPartyIntegrationsResultArrayOutput) ToGetThirdPartyIntegrationsResultArrayOutputWithContext(ctx context.Context) GetThirdPartyIntegrationsResultArrayOutput {
	return o
}

func (o GetThirdPartyIntegrationsResultArrayOutput) Index(i pulumi.IntInput) GetThirdPartyIntegrationsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetThirdPartyIntegrationsResult {
		return vs[0].([]GetThirdPartyIntegrationsResult)[vs[1].(int)]
	}).(GetThirdPartyIntegrationsResultOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterAdvancedConfigurationInput)(nil)).Elem(), AdvancedClusterAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterAdvancedConfigurationPtrInput)(nil)).Elem(), AdvancedClusterAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterBiConnectorInput)(nil)).Elem(), AdvancedClusterBiConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterBiConnectorPtrInput)(nil)).Elem(), AdvancedClusterBiConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterBiConnectorConfigInput)(nil)).Elem(), AdvancedClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterBiConnectorConfigPtrInput)(nil)).Elem(), AdvancedClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterConnectionStringInput)(nil)).Elem(), AdvancedClusterConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterConnectionStringArrayInput)(nil)).Elem(), AdvancedClusterConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpointInput)(nil)).Elem(), AdvancedClusterConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), AdvancedClusterConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), AdvancedClusterConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), AdvancedClusterConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterLabelInput)(nil)).Elem(), AdvancedClusterLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterLabelArrayInput)(nil)).Elem(), AdvancedClusterLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecInput)(nil)).Elem(), AdvancedClusterReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecArrayInput)(nil)).Elem(), AdvancedClusterReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigArrayInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAutoScalingInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigElectableSpecsInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationMatcherInput)(nil)).Elem(), AlertConfigurationMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationMatcherArrayInput)(nil)).Elem(), AlertConfigurationMatcherArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationMetricThresholdConfigInput)(nil)).Elem(), AlertConfigurationMetricThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationMetricThresholdConfigPtrInput)(nil)).Elem(), AlertConfigurationMetricThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationNotificationInput)(nil)).Elem(), AlertConfigurationNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationNotificationArrayInput)(nil)).Elem(), AlertConfigurationNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationThresholdConfigInput)(nil)).Elem(), AlertConfigurationThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationThresholdConfigPtrInput)(nil)).Elem(), AlertConfigurationThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyOnDemandPolicyItemInput)(nil)).Elem(), BackupCompliancePolicyOnDemandPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyOnDemandPolicyItemPtrInput)(nil)).Elem(), BackupCompliancePolicyOnDemandPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemDailyInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemDailyPtrInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemHourlyInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemHourlyPtrInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemMonthlyInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemMonthlyArrayInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemMonthlyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemWeeklyInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemWeeklyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemWeeklyArrayInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemWeeklyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupScheduleCopySettingInput)(nil)).Elem(), CloudBackupScheduleCopySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupScheduleCopySettingArrayInput)(nil)).Elem(), CloudBackupScheduleCopySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupScheduleExportInput)(nil)).Elem(), CloudBackupScheduleExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupScheduleExportPtrInput)(nil)).Elem(), CloudBackupScheduleExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemDailyInput)(nil)).Elem(), CloudBackupSchedulePolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemDailyPtrInput)(nil)).Elem(), CloudBackupSchedulePolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemHourlyInput)(nil)).Elem(), CloudBackupSchedulePolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemHourlyPtrInput)(nil)).Elem(), CloudBackupSchedulePolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemMonthlyInput)(nil)).Elem(), CloudBackupSchedulePolicyItemMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemMonthlyArrayInput)(nil)).Elem(), CloudBackupSchedulePolicyItemMonthlyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemWeeklyInput)(nil)).Elem(), CloudBackupSchedulePolicyItemWeeklyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemWeeklyArrayInput)(nil)).Elem(), CloudBackupSchedulePolicyItemWeeklyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotExportJobComponentInput)(nil)).Elem(), CloudBackupSnapshotExportJobComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotExportJobComponentArrayInput)(nil)).Elem(), CloudBackupSnapshotExportJobComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotExportJobCustomDataInput)(nil)).Elem(), CloudBackupSnapshotExportJobCustomDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotExportJobCustomDataArrayInput)(nil)).Elem(), CloudBackupSnapshotExportJobCustomDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotMemberInput)(nil)).Elem(), CloudBackupSnapshotMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotMemberArrayInput)(nil)).Elem(), CloudBackupSnapshotMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotRestoreJobDeliveryTypeConfigInput)(nil)).Elem(), CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrInput)(nil)).Elem(), CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessAuthorizationAwsInput)(nil)).Elem(), CloudProviderAccessAuthorizationAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessAuthorizationAwsPtrInput)(nil)).Elem(), CloudProviderAccessAuthorizationAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessAuthorizationFeatureUsageInput)(nil)).Elem(), CloudProviderAccessAuthorizationFeatureUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessAuthorizationFeatureUsageArrayInput)(nil)).Elem(), CloudProviderAccessAuthorizationFeatureUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessFeatureUsageInput)(nil)).Elem(), CloudProviderAccessFeatureUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessFeatureUsageArrayInput)(nil)).Elem(), CloudProviderAccessFeatureUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessSetupAwsConfigInput)(nil)).Elem(), CloudProviderAccessSetupAwsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessSetupAwsConfigArrayInput)(nil)).Elem(), CloudProviderAccessSetupAwsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicyInput)(nil)).Elem(), CloudProviderSnapshotBackupPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicyArrayInput)(nil)).Elem(), CloudProviderSnapshotBackupPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicyPolicyItemInput)(nil)).Elem(), CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput)(nil)).Elem(), CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderSnapshotRestoreJobDeliveryTypeConfigInput)(nil)).Elem(), CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrInput)(nil)).Elem(), CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAdvancedConfigurationInput)(nil)).Elem(), ClusterAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAdvancedConfigurationPtrInput)(nil)).Elem(), ClusterAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBiConnectorConfigInput)(nil)).Elem(), ClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBiConnectorConfigPtrInput)(nil)).Elem(), ClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringInput)(nil)).Elem(), ClusterConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringArrayInput)(nil)).Elem(), ClusterConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringPrivateEndpointInput)(nil)).Elem(), ClusterConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), ClusterConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), ClusterConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), ClusterConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLabelInput)(nil)).Elem(), ClusterLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLabelArrayInput)(nil)).Elem(), ClusterLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterReplicationSpecInput)(nil)).Elem(), ClusterReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterReplicationSpecArrayInput)(nil)).Elem(), ClusterReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterReplicationSpecRegionsConfigInput)(nil)).Elem(), ClusterReplicationSpecRegionsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterReplicationSpecRegionsConfigArrayInput)(nil)).Elem(), ClusterReplicationSpecRegionsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyInput)(nil)).Elem(), ClusterSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyArrayInput)(nil)).Elem(), ClusterSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyInput)(nil)).Elem(), ClusterSnapshotBackupPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyArrayInput)(nil)).Elem(), ClusterSnapshotBackupPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyPolicyItemInput)(nil)).Elem(), ClusterSnapshotBackupPolicyPolicyPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput)(nil)).Elem(), ClusterSnapshotBackupPolicyPolicyPolicyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleActionInput)(nil)).Elem(), CustomDbRoleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleActionArrayInput)(nil)).Elem(), CustomDbRoleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleActionResourceInput)(nil)).Elem(), CustomDbRoleActionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleActionResourceArrayInput)(nil)).Elem(), CustomDbRoleActionResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleInheritedRoleInput)(nil)).Elem(), CustomDbRoleInheritedRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleInheritedRoleArrayInput)(nil)).Elem(), CustomDbRoleInheritedRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeAwsInput)(nil)).Elem(), DataLakeAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeAwsPtrInput)(nil)).Elem(), DataLakeAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeDataProcessRegionInput)(nil)).Elem(), DataLakeDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeDataProcessRegionPtrInput)(nil)).Elem(), DataLakeDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseInput)(nil)).Elem(), DataLakeStorageDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseArrayInput)(nil)).Elem(), DataLakeStorageDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseCollectionInput)(nil)).Elem(), DataLakeStorageDatabaseCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseCollectionArrayInput)(nil)).Elem(), DataLakeStorageDatabaseCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseCollectionDataSourceInput)(nil)).Elem(), DataLakeStorageDatabaseCollectionDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseCollectionDataSourceArrayInput)(nil)).Elem(), DataLakeStorageDatabaseCollectionDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseViewInput)(nil)).Elem(), DataLakeStorageDatabaseViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseViewArrayInput)(nil)).Elem(), DataLakeStorageDatabaseViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageStoreInput)(nil)).Elem(), DataLakeStorageStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageStoreArrayInput)(nil)).Elem(), DataLakeStorageStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserLabelInput)(nil)).Elem(), DatabaseUserLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserLabelArrayInput)(nil)).Elem(), DatabaseUserLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserRoleInput)(nil)).Elem(), DatabaseUserRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserRoleArrayInput)(nil)).Elem(), DatabaseUserRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserScopeInput)(nil)).Elem(), DatabaseUserScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserScopeArrayInput)(nil)).Elem(), DatabaseUserScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestAwsKmsConfigInput)(nil)).Elem(), EncryptionAtRestAwsKmsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestAwsKmsConfigPtrInput)(nil)).Elem(), EncryptionAtRestAwsKmsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestAzureKeyVaultConfigInput)(nil)).Elem(), EncryptionAtRestAzureKeyVaultConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestAzureKeyVaultConfigPtrInput)(nil)).Elem(), EncryptionAtRestAzureKeyVaultConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestGoogleCloudKmsConfigInput)(nil)).Elem(), EncryptionAtRestGoogleCloudKmsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestGoogleCloudKmsConfigPtrInput)(nil)).Elem(), EncryptionAtRestGoogleCloudKmsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTriggerEventProcessorsInput)(nil)).Elem(), EventTriggerEventProcessorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTriggerEventProcessorsPtrInput)(nil)).Elem(), EventTriggerEventProcessorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTriggerEventProcessorsAwsEventbridgeInput)(nil)).Elem(), EventTriggerEventProcessorsAwsEventbridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTriggerEventProcessorsAwsEventbridgePtrInput)(nil)).Elem(), EventTriggerEventProcessorsAwsEventbridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedSettingsOrgRoleMappingRoleAssignmentInput)(nil)).Elem(), FederatedSettingsOrgRoleMappingRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedSettingsOrgRoleMappingRoleAssignmentArrayInput)(nil)).Elem(), FederatedSettingsOrgRoleMappingRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterConfigCustomZoneMappingInput)(nil)).Elem(), GlobalClusterConfigCustomZoneMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterConfigCustomZoneMappingArrayInput)(nil)).Elem(), GlobalClusterConfigCustomZoneMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterConfigManagedNamespaceInput)(nil)).Elem(), GlobalClusterConfigManagedNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterConfigManagedNamespaceArrayInput)(nil)).Elem(), GlobalClusterConfigManagedNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapConfigurationUserToDnMappingInput)(nil)).Elem(), LdapConfigurationUserToDnMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapConfigurationUserToDnMappingArrayInput)(nil)).Elem(), LdapConfigurationUserToDnMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapVerifyLinkInput)(nil)).Elem(), LdapVerifyLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapVerifyLinkArrayInput)(nil)).Elem(), LdapVerifyLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapVerifyValidationInput)(nil)).Elem(), LdapVerifyValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapVerifyValidationArrayInput)(nil)).Elem(), LdapVerifyValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineArchiveCriteriaInput)(nil)).Elem(), OnlineArchiveCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineArchiveCriteriaPtrInput)(nil)).Elem(), OnlineArchiveCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineArchivePartitionFieldInput)(nil)).Elem(), OnlineArchivePartitionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineArchivePartitionFieldArrayInput)(nil)).Elem(), OnlineArchivePartitionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkEndpointServiceEndpointInput)(nil)).Elem(), PrivateLinkEndpointServiceEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkEndpointServiceEndpointArrayInput)(nil)).Elem(), PrivateLinkEndpointServiceEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectApiKeyTypeInput)(nil)).Elem(), ProjectApiKeyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectApiKeyTypeArrayInput)(nil)).Elem(), ProjectApiKeyTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTeamInput)(nil)).Elem(), ProjectTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTeamArrayInput)(nil)).Elem(), ProjectTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAssumeRoleInput)(nil)).Elem(), ProviderAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAssumeRolePtrInput)(nil)).Elem(), ProviderAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SearchIndexSynonymInput)(nil)).Elem(), SearchIndexSynonymArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SearchIndexSynonymArrayInput)(nil)).Elem(), SearchIndexSynonymArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessInstanceLinkInput)(nil)).Elem(), ServerlessInstanceLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessInstanceLinkArrayInput)(nil)).Elem(), ServerlessInstanceLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*X509AuthenticationDatabaseUserCertificateInput)(nil)).Elem(), X509AuthenticationDatabaseUserCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*X509AuthenticationDatabaseUserCertificateArrayInput)(nil)).Elem(), X509AuthenticationDatabaseUserCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Get509AuthenticationDatabaseUserCertificateInput)(nil)).Elem(), Get509AuthenticationDatabaseUserCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Get509AuthenticationDatabaseUserCertificateArrayInput)(nil)).Elem(), Get509AuthenticationDatabaseUserCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessListApiKeysResultInput)(nil)).Elem(), GetAccessListApiKeysResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessListApiKeysResultArrayInput)(nil)).Elem(), GetAccessListApiKeysResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterAdvancedConfigurationInput)(nil)).Elem(), GetAdvancedClusterAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterAdvancedConfigurationArrayInput)(nil)).Elem(), GetAdvancedClusterAdvancedConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterBiConnectorConfigInput)(nil)).Elem(), GetAdvancedClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterBiConnectorConfigArrayInput)(nil)).Elem(), GetAdvancedClusterBiConnectorConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterConnectionStringInput)(nil)).Elem(), GetAdvancedClusterConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterConnectionStringArrayInput)(nil)).Elem(), GetAdvancedClusterConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpointInput)(nil)).Elem(), GetAdvancedClusterConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), GetAdvancedClusterConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterLabelInput)(nil)).Elem(), GetAdvancedClusterLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterLabelArrayInput)(nil)).Elem(), GetAdvancedClusterLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecArrayInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigArrayInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAutoScalingInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultInput)(nil)).Elem(), GetAdvancedClustersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultArrayInput)(nil)).Elem(), GetAdvancedClustersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultAdvancedConfigurationInput)(nil)).Elem(), GetAdvancedClustersResultAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultAdvancedConfigurationArrayInput)(nil)).Elem(), GetAdvancedClustersResultAdvancedConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultBiConnectorConfigInput)(nil)).Elem(), GetAdvancedClustersResultBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultBiConnectorConfigArrayInput)(nil)).Elem(), GetAdvancedClustersResultBiConnectorConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultConnectionStringInput)(nil)).Elem(), GetAdvancedClustersResultConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultConnectionStringArrayInput)(nil)).Elem(), GetAdvancedClustersResultConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpointInput)(nil)).Elem(), GetAdvancedClustersResultConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), GetAdvancedClustersResultConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultLabelInput)(nil)).Elem(), GetAdvancedClustersResultLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultLabelArrayInput)(nil)).Elem(), GetAdvancedClustersResultLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecArrayInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigArrayInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationMatcherInput)(nil)).Elem(), GetAlertConfigurationMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationMatcherArrayInput)(nil)).Elem(), GetAlertConfigurationMatcherArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationMetricThresholdConfigInput)(nil)).Elem(), GetAlertConfigurationMetricThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationMetricThresholdConfigArrayInput)(nil)).Elem(), GetAlertConfigurationMetricThresholdConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationNotificationInput)(nil)).Elem(), GetAlertConfigurationNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationNotificationArrayInput)(nil)).Elem(), GetAlertConfigurationNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationOutputInput)(nil)).Elem(), GetAlertConfigurationOutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationOutputArrayInput)(nil)).Elem(), GetAlertConfigurationOutputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationThresholdConfigInput)(nil)).Elem(), GetAlertConfigurationThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationThresholdConfigArrayInput)(nil)).Elem(), GetAlertConfigurationThresholdConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsListOptionInput)(nil)).Elem(), GetAlertConfigurationsListOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsListOptionArrayInput)(nil)).Elem(), GetAlertConfigurationsListOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultInput)(nil)).Elem(), GetAlertConfigurationsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultArrayInput)(nil)).Elem(), GetAlertConfigurationsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultMatcherInput)(nil)).Elem(), GetAlertConfigurationsResultMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultMatcherArrayInput)(nil)).Elem(), GetAlertConfigurationsResultMatcherArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultMetricThresholdConfigInput)(nil)).Elem(), GetAlertConfigurationsResultMetricThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultMetricThresholdConfigArrayInput)(nil)).Elem(), GetAlertConfigurationsResultMetricThresholdConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultNotificationInput)(nil)).Elem(), GetAlertConfigurationsResultNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultNotificationArrayInput)(nil)).Elem(), GetAlertConfigurationsResultNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultOutputTypeInput)(nil)).Elem(), GetAlertConfigurationsResultOutputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultOutputTypeArrayInput)(nil)).Elem(), GetAlertConfigurationsResultOutputTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultThresholdConfigInput)(nil)).Elem(), GetAlertConfigurationsResultThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultThresholdConfigArrayInput)(nil)).Elem(), GetAlertConfigurationsResultThresholdConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiKeysResultInput)(nil)).Elem(), GetApiKeysResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiKeysResultArrayInput)(nil)).Elem(), GetApiKeysResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyOnDemandPolicyItemInput)(nil)).Elem(), GetBackupCompliancePolicyOnDemandPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyOnDemandPolicyItemPtrInput)(nil)).Elem(), GetBackupCompliancePolicyOnDemandPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemDailyInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemDailyPtrInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemHourlyInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemHourlyPtrInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemMonthlyInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemMonthlyArrayInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemMonthlyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemWeeklyInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemWeeklyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemWeeklyArrayInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemWeeklyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupScheduleCopySettingInput)(nil)).Elem(), GetCloudBackupScheduleCopySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupScheduleCopySettingArrayInput)(nil)).Elem(), GetCloudBackupScheduleCopySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupScheduleExportInput)(nil)).Elem(), GetCloudBackupScheduleExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupScheduleExportArrayInput)(nil)).Elem(), GetCloudBackupScheduleExportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemDailyInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemDailyArrayInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemDailyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemHourlyInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemHourlyArrayInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemHourlyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemMonthlyInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemMonthlyArrayInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemMonthlyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemWeeklyInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemWeeklyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemWeeklyArrayInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemWeeklyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportBucketsResultInput)(nil)).Elem(), GetCloudBackupSnapshotExportBucketsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportBucketsResultArrayInput)(nil)).Elem(), GetCloudBackupSnapshotExportBucketsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobComponentInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobComponentArrayInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobCustomDataInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobCustomDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobCustomDataArrayInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobCustomDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultArrayInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultComponentInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobsResultComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultComponentArrayInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobsResultComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultCustomDataInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobsResultCustomDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultCustomDataArrayInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobsResultCustomDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotMemberInput)(nil)).Elem(), GetCloudBackupSnapshotMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotMemberArrayInput)(nil)).Elem(), GetCloudBackupSnapshotMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotRestoreJobsResultInput)(nil)).Elem(), GetCloudBackupSnapshotRestoreJobsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotRestoreJobsResultArrayInput)(nil)).Elem(), GetCloudBackupSnapshotRestoreJobsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotsResultInput)(nil)).Elem(), GetCloudBackupSnapshotsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotsResultArrayInput)(nil)).Elem(), GetCloudBackupSnapshotsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotsResultMemberInput)(nil)).Elem(), GetCloudBackupSnapshotsResultMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotsResultMemberArrayInput)(nil)).Elem(), GetCloudBackupSnapshotsResultMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleInput)(nil)).Elem(), GetCloudProviderAccessAwsIamRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleArrayInput)(nil)).Elem(), GetCloudProviderAccessAwsIamRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleFeatureUsageInput)(nil)).Elem(), GetCloudProviderAccessAwsIamRoleFeatureUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput)(nil)).Elem(), GetCloudProviderAccessAwsIamRoleFeatureUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessSetupAwsConfigInput)(nil)).Elem(), GetCloudProviderAccessSetupAwsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessSetupAwsConfigArrayInput)(nil)).Elem(), GetCloudProviderAccessSetupAwsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicyInput)(nil)).Elem(), GetCloudProviderSnapshotBackupPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicyArrayInput)(nil)).Elem(), GetCloudProviderSnapshotBackupPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemInput)(nil)).Elem(), GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput)(nil)).Elem(), GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotRestoreJobsResultInput)(nil)).Elem(), GetCloudProviderSnapshotRestoreJobsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotRestoreJobsResultArrayInput)(nil)).Elem(), GetCloudProviderSnapshotRestoreJobsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotsResultInput)(nil)).Elem(), GetCloudProviderSnapshotsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotsResultArrayInput)(nil)).Elem(), GetCloudProviderSnapshotsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAdvancedConfigurationInput)(nil)).Elem(), GetClusterAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAdvancedConfigurationArrayInput)(nil)).Elem(), GetClusterAdvancedConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBiConnectorConfigInput)(nil)).Elem(), GetClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBiConnectorConfigArrayInput)(nil)).Elem(), GetClusterBiConnectorConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringInput)(nil)).Elem(), GetClusterConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringArrayInput)(nil)).Elem(), GetClusterConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointInput)(nil)).Elem(), GetClusterConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), GetClusterConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), GetClusterConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), GetClusterConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterLabelInput)(nil)).Elem(), GetClusterLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterLabelArrayInput)(nil)).Elem(), GetClusterLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterReplicationSpecInput)(nil)).Elem(), GetClusterReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterReplicationSpecArrayInput)(nil)).Elem(), GetClusterReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterReplicationSpecRegionsConfigInput)(nil)).Elem(), GetClusterReplicationSpecRegionsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterReplicationSpecRegionsConfigArrayInput)(nil)).Elem(), GetClusterReplicationSpecRegionsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyArrayInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyArrayInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyPolicyItemInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyPolicyPolicyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultInput)(nil)).Elem(), GetClustersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultArrayInput)(nil)).Elem(), GetClustersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultAdvancedConfigurationInput)(nil)).Elem(), GetClustersResultAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultAdvancedConfigurationArrayInput)(nil)).Elem(), GetClustersResultAdvancedConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultBiConnectorConfigInput)(nil)).Elem(), GetClustersResultBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultBiConnectorConfigArrayInput)(nil)).Elem(), GetClustersResultBiConnectorConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringInput)(nil)).Elem(), GetClustersResultConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringArrayInput)(nil)).Elem(), GetClustersResultConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointInput)(nil)).Elem(), GetClustersResultConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), GetClustersResultConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), GetClustersResultConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), GetClustersResultConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultLabelInput)(nil)).Elem(), GetClustersResultLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultLabelArrayInput)(nil)).Elem(), GetClustersResultLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultReplicationSpecInput)(nil)).Elem(), GetClustersResultReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultReplicationSpecArrayInput)(nil)).Elem(), GetClustersResultReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultReplicationSpecRegionsConfigInput)(nil)).Elem(), GetClustersResultReplicationSpecRegionsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultReplicationSpecRegionsConfigArrayInput)(nil)).Elem(), GetClustersResultReplicationSpecRegionsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyArrayInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyArrayInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleActionInput)(nil)).Elem(), GetCustomDbRoleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleActionArrayInput)(nil)).Elem(), GetCustomDbRoleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleActionResourceInput)(nil)).Elem(), GetCustomDbRoleActionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleActionResourceArrayInput)(nil)).Elem(), GetCustomDbRoleActionResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleInheritedRoleInput)(nil)).Elem(), GetCustomDbRoleInheritedRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleInheritedRoleArrayInput)(nil)).Elem(), GetCustomDbRoleInheritedRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultInput)(nil)).Elem(), GetCustomDbRolesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultArrayInput)(nil)).Elem(), GetCustomDbRolesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultActionInput)(nil)).Elem(), GetCustomDbRolesResultActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultActionArrayInput)(nil)).Elem(), GetCustomDbRolesResultActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultActionResourceInput)(nil)).Elem(), GetCustomDbRolesResultActionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultActionResourceArrayInput)(nil)).Elem(), GetCustomDbRolesResultActionResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultInheritedRoleInput)(nil)).Elem(), GetCustomDbRolesResultInheritedRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultInheritedRoleArrayInput)(nil)).Elem(), GetCustomDbRolesResultInheritedRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeAwInput)(nil)).Elem(), GetDataLakeAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeAwArrayInput)(nil)).Elem(), GetDataLakeAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeDataProcessRegionInput)(nil)).Elem(), GetDataLakeDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeDataProcessRegionArrayInput)(nil)).Elem(), GetDataLakeDataProcessRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseInput)(nil)).Elem(), GetDataLakeStorageDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseArrayInput)(nil)).Elem(), GetDataLakeStorageDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionInput)(nil)).Elem(), GetDataLakeStorageDatabaseCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionArrayInput)(nil)).Elem(), GetDataLakeStorageDatabaseCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionDataSourceInput)(nil)).Elem(), GetDataLakeStorageDatabaseCollectionDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionDataSourceArrayInput)(nil)).Elem(), GetDataLakeStorageDatabaseCollectionDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseViewInput)(nil)).Elem(), GetDataLakeStorageDatabaseViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseViewArrayInput)(nil)).Elem(), GetDataLakeStorageDatabaseViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageStoreInput)(nil)).Elem(), GetDataLakeStorageStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageStoreArrayInput)(nil)).Elem(), GetDataLakeStorageStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultInput)(nil)).Elem(), GetDataLakesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultArrayInput)(nil)).Elem(), GetDataLakesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultAwInput)(nil)).Elem(), GetDataLakesResultAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultAwArrayInput)(nil)).Elem(), GetDataLakesResultAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultDataProcessRegionInput)(nil)).Elem(), GetDataLakesResultDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultDataProcessRegionArrayInput)(nil)).Elem(), GetDataLakesResultDataProcessRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseArrayInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionArrayInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionDataSourceInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseCollectionDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseCollectionDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseViewInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseViewArrayInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageStoreInput)(nil)).Elem(), GetDataLakesResultStorageStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageStoreArrayInput)(nil)).Elem(), GetDataLakesResultStorageStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserLabelInput)(nil)).Elem(), GetDatabaseUserLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserLabelArrayInput)(nil)).Elem(), GetDatabaseUserLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserRoleInput)(nil)).Elem(), GetDatabaseUserRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserRoleArrayInput)(nil)).Elem(), GetDatabaseUserRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserScopeInput)(nil)).Elem(), GetDatabaseUserScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserScopeArrayInput)(nil)).Elem(), GetDatabaseUserScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultInput)(nil)).Elem(), GetDatabaseUsersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultArrayInput)(nil)).Elem(), GetDatabaseUsersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultLabelInput)(nil)).Elem(), GetDatabaseUsersResultLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultLabelArrayInput)(nil)).Elem(), GetDatabaseUsersResultLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultRoleInput)(nil)).Elem(), GetDatabaseUsersResultRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultRoleArrayInput)(nil)).Elem(), GetDatabaseUsersResultRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultScopeInput)(nil)).Elem(), GetDatabaseUsersResultScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultScopeArrayInput)(nil)).Elem(), GetDatabaseUsersResultScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggerEventProcessorInput)(nil)).Elem(), GetEventTriggerEventProcessorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggerEventProcessorArrayInput)(nil)).Elem(), GetEventTriggerEventProcessorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggerEventProcessorAwsEventbridgeInput)(nil)).Elem(), GetEventTriggerEventProcessorAwsEventbridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggerEventProcessorAwsEventbridgeArrayInput)(nil)).Elem(), GetEventTriggerEventProcessorAwsEventbridgeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultInput)(nil)).Elem(), GetEventTriggersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultArrayInput)(nil)).Elem(), GetEventTriggersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultEventProcessorInput)(nil)).Elem(), GetEventTriggersResultEventProcessorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultEventProcessorArrayInput)(nil)).Elem(), GetEventTriggersResultEventProcessorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultEventProcessorAwsEventbridgeInput)(nil)).Elem(), GetEventTriggersResultEventProcessorAwsEventbridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput)(nil)).Elem(), GetEventTriggersResultEventProcessorAwsEventbridgeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfoInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderPemFileInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfoArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderPemFileInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfoCertificateInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfoInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultPemFileInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMappingInput)(nil)).Elem(), GetFederatedSettingsOrgConfigRoleMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMappingArrayInput)(nil)).Elem(), GetFederatedSettingsOrgConfigRoleMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentInput)(nil)).Elem(), GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayInput)(nil)).Elem(), GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigUserConflictInput)(nil)).Elem(), GetFederatedSettingsOrgConfigUserConflictArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigUserConflictArrayInput)(nil)).Elem(), GetFederatedSettingsOrgConfigUserConflictArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultArrayInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMappingInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultRoleMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMappingArrayInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultRoleMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultUserConflictInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultUserConflictArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultUserConflictArrayInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultUserConflictArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingRoleAssignmentInput)(nil)).Elem(), GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayInput)(nil)).Elem(), GetFederatedSettingsOrgRoleMappingRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResultInput)(nil)).Elem(), GetFederatedSettingsOrgRoleMappingsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResultArrayInput)(nil)).Elem(), GetFederatedSettingsOrgRoleMappingsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentInput)(nil)).Elem(), GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayInput)(nil)).Elem(), GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClusterConfigManagedNamespaceInput)(nil)).Elem(), GetGlobalClusterConfigManagedNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClusterConfigManagedNamespaceArrayInput)(nil)).Elem(), GetGlobalClusterConfigManagedNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapConfigurationUserToDnMappingInput)(nil)).Elem(), GetLdapConfigurationUserToDnMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapConfigurationUserToDnMappingArrayInput)(nil)).Elem(), GetLdapConfigurationUserToDnMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapVerifyLinkInput)(nil)).Elem(), GetLdapVerifyLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapVerifyLinkArrayInput)(nil)).Elem(), GetLdapVerifyLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapVerifyValidationInput)(nil)).Elem(), GetLdapVerifyValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapVerifyValidationArrayInput)(nil)).Elem(), GetLdapVerifyValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkContainersResultInput)(nil)).Elem(), GetNetworkContainersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkContainersResultArrayInput)(nil)).Elem(), GetNetworkContainersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPeeringsResultInput)(nil)).Elem(), GetNetworkPeeringsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPeeringsResultArrayInput)(nil)).Elem(), GetNetworkPeeringsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchiveCriteriaInput)(nil)).Elem(), GetOnlineArchiveCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchiveCriteriaArrayInput)(nil)).Elem(), GetOnlineArchiveCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivePartitionFieldInput)(nil)).Elem(), GetOnlineArchivePartitionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivePartitionFieldArrayInput)(nil)).Elem(), GetOnlineArchivePartitionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultInput)(nil)).Elem(), GetOnlineArchivesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultArrayInput)(nil)).Elem(), GetOnlineArchivesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultCriteriaInput)(nil)).Elem(), GetOnlineArchivesResultCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultCriteriaArrayInput)(nil)).Elem(), GetOnlineArchivesResultCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultPartitionFieldInput)(nil)).Elem(), GetOnlineArchivesResultPartitionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultPartitionFieldArrayInput)(nil)).Elem(), GetOnlineArchivesResultPartitionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkEndpointServiceEndpointInput)(nil)).Elem(), GetPrivateLinkEndpointServiceEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkEndpointServiceEndpointArrayInput)(nil)).Elem(), GetPrivateLinkEndpointServiceEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlLinkInput)(nil)).Elem(), GetPrivatelinkEndpointsServiceAdlLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlLinkArrayInput)(nil)).Elem(), GetPrivatelinkEndpointsServiceAdlLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlResultInput)(nil)).Elem(), GetPrivatelinkEndpointsServiceAdlResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlResultArrayInput)(nil)).Elem(), GetPrivatelinkEndpointsServiceAdlResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivatelinkEndpointsServiceServerlessResultInput)(nil)).Elem(), GetPrivatelinkEndpointsServiceServerlessResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivatelinkEndpointsServiceServerlessResultArrayInput)(nil)).Elem(), GetPrivatelinkEndpointsServiceServerlessResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectApiKeyTypeInput)(nil)).Elem(), GetProjectApiKeyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectApiKeyTypeArrayInput)(nil)).Elem(), GetProjectApiKeyTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectApiKeysResultInput)(nil)).Elem(), GetProjectApiKeysResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectApiKeysResultArrayInput)(nil)).Elem(), GetProjectApiKeysResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTeamInput)(nil)).Elem(), GetProjectTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTeamArrayInput)(nil)).Elem(), GetProjectTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultInput)(nil)).Elem(), GetProjectsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultArrayInput)(nil)).Elem(), GetProjectsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultApiKeyInput)(nil)).Elem(), GetProjectsResultApiKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultApiKeyArrayInput)(nil)).Elem(), GetProjectsResultApiKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultTeamInput)(nil)).Elem(), GetProjectsResultTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultTeamArrayInput)(nil)).Elem(), GetProjectsResultTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSearchIndexSynonymInput)(nil)).Elem(), GetSearchIndexSynonymArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSearchIndexSynonymArrayInput)(nil)).Elem(), GetSearchIndexSynonymArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSearchIndexesResultInput)(nil)).Elem(), GetSearchIndexesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSearchIndexesResultArrayInput)(nil)).Elem(), GetSearchIndexesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSearchIndexesResultSynonymInput)(nil)).Elem(), GetSearchIndexesResultSynonymArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSearchIndexesResultSynonymArrayInput)(nil)).Elem(), GetSearchIndexesResultSynonymArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerlessInstanceLinkInput)(nil)).Elem(), GetServerlessInstanceLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerlessInstanceLinkArrayInput)(nil)).Elem(), GetServerlessInstanceLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerlessInstancesResultInput)(nil)).Elem(), GetServerlessInstancesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerlessInstancesResultArrayInput)(nil)).Elem(), GetServerlessInstancesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerlessInstancesResultLinkInput)(nil)).Elem(), GetServerlessInstancesResultLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerlessInstancesResultLinkArrayInput)(nil)).Elem(), GetServerlessInstancesResultLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetThirdPartyIntegrationsResultInput)(nil)).Elem(), GetThirdPartyIntegrationsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetThirdPartyIntegrationsResultArrayInput)(nil)).Elem(), GetThirdPartyIntegrationsResultArray{})
	pulumi.RegisterOutputType(AdvancedClusterAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(AdvancedClusterAdvancedConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AdvancedClusterBiConnectorOutput{})
	pulumi.RegisterOutputType(AdvancedClusterBiConnectorPtrOutput{})
	pulumi.RegisterOutputType(AdvancedClusterBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(AdvancedClusterBiConnectorConfigPtrOutput{})
	pulumi.RegisterOutputType(AdvancedClusterConnectionStringOutput{})
	pulumi.RegisterOutputType(AdvancedClusterConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(AdvancedClusterConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(AdvancedClusterConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(AdvancedClusterConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(AdvancedClusterLabelOutput{})
	pulumi.RegisterOutputType(AdvancedClusterLabelArrayOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigArrayOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationMatcherOutput{})
	pulumi.RegisterOutputType(AlertConfigurationMatcherArrayOutput{})
	pulumi.RegisterOutputType(AlertConfigurationMetricThresholdConfigOutput{})
	pulumi.RegisterOutputType(AlertConfigurationMetricThresholdConfigPtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationNotificationOutput{})
	pulumi.RegisterOutputType(AlertConfigurationNotificationArrayOutput{})
	pulumi.RegisterOutputType(AlertConfigurationThresholdConfigOutput{})
	pulumi.RegisterOutputType(AlertConfigurationThresholdConfigPtrOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyOnDemandPolicyItemOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyOnDemandPolicyItemPtrOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemDailyOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemDailyPtrOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemHourlyOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemHourlyPtrOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemMonthlyOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemMonthlyArrayOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemWeeklyOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemWeeklyArrayOutput{})
	pulumi.RegisterOutputType(CloudBackupScheduleCopySettingOutput{})
	pulumi.RegisterOutputType(CloudBackupScheduleCopySettingArrayOutput{})
	pulumi.RegisterOutputType(CloudBackupScheduleExportOutput{})
	pulumi.RegisterOutputType(CloudBackupScheduleExportPtrOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemDailyOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemDailyPtrOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemHourlyOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemHourlyPtrOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemMonthlyOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemMonthlyArrayOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemWeeklyOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemWeeklyArrayOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotExportJobComponentOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotExportJobComponentArrayOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotExportJobCustomDataOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotExportJobCustomDataArrayOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotMemberOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotMemberArrayOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessAuthorizationAwsOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessAuthorizationAwsPtrOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessAuthorizationFeatureUsageOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessAuthorizationFeatureUsageArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessFeatureUsageOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessFeatureUsageArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessSetupAwsConfigOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessSetupAwsConfigArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(ClusterAdvancedConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClusterBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(ClusterBiConnectorConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(ClusterLabelOutput{})
	pulumi.RegisterOutputType(ClusterLabelArrayOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecRegionsConfigOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecRegionsConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionArrayOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionResourceOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionResourceArrayOutput{})
	pulumi.RegisterOutputType(CustomDbRoleInheritedRoleOutput{})
	pulumi.RegisterOutputType(CustomDbRoleInheritedRoleArrayOutput{})
	pulumi.RegisterOutputType(DataLakeAwsOutput{})
	pulumi.RegisterOutputType(DataLakeAwsPtrOutput{})
	pulumi.RegisterOutputType(DataLakeDataProcessRegionOutput{})
	pulumi.RegisterOutputType(DataLakeDataProcessRegionPtrOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseArrayOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseCollectionOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseCollectionArrayOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseCollectionDataSourceOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseCollectionDataSourceArrayOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseViewOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseViewArrayOutput{})
	pulumi.RegisterOutputType(DataLakeStorageStoreOutput{})
	pulumi.RegisterOutputType(DataLakeStorageStoreArrayOutput{})
	pulumi.RegisterOutputType(DatabaseUserLabelOutput{})
	pulumi.RegisterOutputType(DatabaseUserLabelArrayOutput{})
	pulumi.RegisterOutputType(DatabaseUserRoleOutput{})
	pulumi.RegisterOutputType(DatabaseUserRoleArrayOutput{})
	pulumi.RegisterOutputType(DatabaseUserScopeOutput{})
	pulumi.RegisterOutputType(DatabaseUserScopeArrayOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAwsKmsConfigOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAwsKmsConfigPtrOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAzureKeyVaultConfigOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAzureKeyVaultConfigPtrOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestGoogleCloudKmsConfigOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestGoogleCloudKmsConfigPtrOutput{})
	pulumi.RegisterOutputType(EventTriggerEventProcessorsOutput{})
	pulumi.RegisterOutputType(EventTriggerEventProcessorsPtrOutput{})
	pulumi.RegisterOutputType(EventTriggerEventProcessorsAwsEventbridgeOutput{})
	pulumi.RegisterOutputType(EventTriggerEventProcessorsAwsEventbridgePtrOutput{})
	pulumi.RegisterOutputType(FederatedSettingsOrgRoleMappingRoleAssignmentOutput{})
	pulumi.RegisterOutputType(FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigCustomZoneMappingOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigCustomZoneMappingArrayOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigManagedNamespaceOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigManagedNamespaceArrayOutput{})
	pulumi.RegisterOutputType(LdapConfigurationUserToDnMappingOutput{})
	pulumi.RegisterOutputType(LdapConfigurationUserToDnMappingArrayOutput{})
	pulumi.RegisterOutputType(LdapVerifyLinkOutput{})
	pulumi.RegisterOutputType(LdapVerifyLinkArrayOutput{})
	pulumi.RegisterOutputType(LdapVerifyValidationOutput{})
	pulumi.RegisterOutputType(LdapVerifyValidationArrayOutput{})
	pulumi.RegisterOutputType(OnlineArchiveCriteriaOutput{})
	pulumi.RegisterOutputType(OnlineArchiveCriteriaPtrOutput{})
	pulumi.RegisterOutputType(OnlineArchivePartitionFieldOutput{})
	pulumi.RegisterOutputType(OnlineArchivePartitionFieldArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkEndpointServiceEndpointOutput{})
	pulumi.RegisterOutputType(PrivateLinkEndpointServiceEndpointArrayOutput{})
	pulumi.RegisterOutputType(ProjectApiKeyTypeOutput{})
	pulumi.RegisterOutputType(ProjectApiKeyTypeArrayOutput{})
	pulumi.RegisterOutputType(ProjectTeamOutput{})
	pulumi.RegisterOutputType(ProjectTeamArrayOutput{})
	pulumi.RegisterOutputType(ProviderAssumeRoleOutput{})
	pulumi.RegisterOutputType(ProviderAssumeRolePtrOutput{})
	pulumi.RegisterOutputType(SearchIndexSynonymOutput{})
	pulumi.RegisterOutputType(SearchIndexSynonymArrayOutput{})
	pulumi.RegisterOutputType(ServerlessInstanceLinkOutput{})
	pulumi.RegisterOutputType(ServerlessInstanceLinkArrayOutput{})
	pulumi.RegisterOutputType(X509AuthenticationDatabaseUserCertificateOutput{})
	pulumi.RegisterOutputType(X509AuthenticationDatabaseUserCertificateArrayOutput{})
	pulumi.RegisterOutputType(Get509AuthenticationDatabaseUserCertificateOutput{})
	pulumi.RegisterOutputType(Get509AuthenticationDatabaseUserCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetAccessListApiKeysResultOutput{})
	pulumi.RegisterOutputType(GetAccessListApiKeysResultArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterAdvancedConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterBiConnectorConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterConnectionStringOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterLabelOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterLabelArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultAdvancedConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultBiConnectorConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultConnectionStringOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultLabelOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultLabelArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMatcherOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMatcherArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMetricThresholdConfigOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMetricThresholdConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationNotificationOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationNotificationArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationOutputOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationOutputArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationThresholdConfigOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationThresholdConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsListOptionOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsListOptionArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultMatcherOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultMatcherArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultMetricThresholdConfigOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultMetricThresholdConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultNotificationOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultNotificationArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultOutputTypeOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultOutputTypeArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultThresholdConfigOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultThresholdConfigArrayOutput{})
	pulumi.RegisterOutputType(GetApiKeysResultOutput{})
	pulumi.RegisterOutputType(GetApiKeysResultArrayOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyOnDemandPolicyItemOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemDailyOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemDailyPtrOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemHourlyOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemHourlyPtrOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemMonthlyOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemWeeklyOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupScheduleCopySettingOutput{})
	pulumi.RegisterOutputType(GetCloudBackupScheduleCopySettingArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupScheduleExportOutput{})
	pulumi.RegisterOutputType(GetCloudBackupScheduleExportArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemDailyOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemDailyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemHourlyOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemHourlyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemMonthlyOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemMonthlyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemWeeklyOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemWeeklyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportBucketsResultOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportBucketsResultArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobComponentOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobComponentArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobCustomDataOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobCustomDataArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobsResultOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobsResultArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobsResultComponentOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobsResultComponentArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobsResultCustomDataOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotMemberOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotMemberArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotRestoreJobsResultOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotRestoreJobsResultArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotsResultOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotsResultArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotsResultMemberOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotsResultMemberArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessAwsIamRoleOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessAwsIamRoleArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessAwsIamRoleFeatureUsageOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessSetupAwsConfigOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessSetupAwsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotRestoreJobsResultOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotRestoreJobsResultArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotsResultOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotsResultArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(GetClusterAdvancedConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetClusterBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(GetClusterBiConnectorConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetClusterLabelOutput{})
	pulumi.RegisterOutputType(GetClusterLabelArrayOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecRegionsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecRegionsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultOutput{})
	pulumi.RegisterOutputType(GetClustersResultArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(GetClustersResultAdvancedConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(GetClustersResultBiConnectorConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultLabelOutput{})
	pulumi.RegisterOutputType(GetClustersResultLabelArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecRegionsConfigOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecRegionsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionResourceOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionResourceArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleInheritedRoleOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleInheritedRoleArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionResourceOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionResourceArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultInheritedRoleOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultInheritedRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeAwOutput{})
	pulumi.RegisterOutputType(GetDataLakeAwArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeDataProcessRegionOutput{})
	pulumi.RegisterOutputType(GetDataLakeDataProcessRegionArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseCollectionOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseCollectionDataSourceOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseViewOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseViewArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageStoreOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageStoreArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultAwOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultAwArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultDataProcessRegionOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultDataProcessRegionArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseCollectionOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseCollectionDataSourceOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseViewOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseViewArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageStoreOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageStoreArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserLabelOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserLabelArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserRoleOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserScopeOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserScopeArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultLabelOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultLabelArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultRoleOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultScopeOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultScopeArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggerEventProcessorOutput{})
	pulumi.RegisterOutputType(GetEventTriggerEventProcessorArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggerEventProcessorAwsEventbridgeOutput{})
	pulumi.RegisterOutputType(GetEventTriggerEventProcessorAwsEventbridgeArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultEventProcessorOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultEventProcessorArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultEventProcessorAwsEventbridgeOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderPemFileInfoOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigRoleMappingOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigRoleMappingArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigUserConflictOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigUserConflictArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultRoleMappingOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultUserConflictOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgRoleMappingsResultOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgRoleMappingsResultArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClusterConfigManagedNamespaceOutput{})
	pulumi.RegisterOutputType(GetGlobalClusterConfigManagedNamespaceArrayOutput{})
	pulumi.RegisterOutputType(GetLdapConfigurationUserToDnMappingOutput{})
	pulumi.RegisterOutputType(GetLdapConfigurationUserToDnMappingArrayOutput{})
	pulumi.RegisterOutputType(GetLdapVerifyLinkOutput{})
	pulumi.RegisterOutputType(GetLdapVerifyLinkArrayOutput{})
	pulumi.RegisterOutputType(GetLdapVerifyValidationOutput{})
	pulumi.RegisterOutputType(GetLdapVerifyValidationArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkContainersResultOutput{})
	pulumi.RegisterOutputType(GetNetworkContainersResultArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkPeeringsResultOutput{})
	pulumi.RegisterOutputType(GetNetworkPeeringsResultArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchiveCriteriaOutput{})
	pulumi.RegisterOutputType(GetOnlineArchiveCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivePartitionFieldOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivePartitionFieldArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultCriteriaOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultPartitionFieldOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultPartitionFieldArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkEndpointServiceEndpointOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkEndpointServiceEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetPrivatelinkEndpointsServiceAdlLinkOutput{})
	pulumi.RegisterOutputType(GetPrivatelinkEndpointsServiceAdlLinkArrayOutput{})
	pulumi.RegisterOutputType(GetPrivatelinkEndpointsServiceAdlResultOutput{})
	pulumi.RegisterOutputType(GetPrivatelinkEndpointsServiceAdlResultArrayOutput{})
	pulumi.RegisterOutputType(GetPrivatelinkEndpointsServiceServerlessResultOutput{})
	pulumi.RegisterOutputType(GetPrivatelinkEndpointsServiceServerlessResultArrayOutput{})
	pulumi.RegisterOutputType(GetProjectApiKeyTypeOutput{})
	pulumi.RegisterOutputType(GetProjectApiKeyTypeArrayOutput{})
	pulumi.RegisterOutputType(GetProjectApiKeysResultOutput{})
	pulumi.RegisterOutputType(GetProjectApiKeysResultArrayOutput{})
	pulumi.RegisterOutputType(GetProjectTeamOutput{})
	pulumi.RegisterOutputType(GetProjectTeamArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsResultOutput{})
	pulumi.RegisterOutputType(GetProjectsResultArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsResultApiKeyOutput{})
	pulumi.RegisterOutputType(GetProjectsResultApiKeyArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsResultTeamOutput{})
	pulumi.RegisterOutputType(GetProjectsResultTeamArrayOutput{})
	pulumi.RegisterOutputType(GetSearchIndexSynonymOutput{})
	pulumi.RegisterOutputType(GetSearchIndexSynonymArrayOutput{})
	pulumi.RegisterOutputType(GetSearchIndexesResultOutput{})
	pulumi.RegisterOutputType(GetSearchIndexesResultArrayOutput{})
	pulumi.RegisterOutputType(GetSearchIndexesResultSynonymOutput{})
	pulumi.RegisterOutputType(GetSearchIndexesResultSynonymArrayOutput{})
	pulumi.RegisterOutputType(GetServerlessInstanceLinkOutput{})
	pulumi.RegisterOutputType(GetServerlessInstanceLinkArrayOutput{})
	pulumi.RegisterOutputType(GetServerlessInstancesResultOutput{})
	pulumi.RegisterOutputType(GetServerlessInstancesResultArrayOutput{})
	pulumi.RegisterOutputType(GetServerlessInstancesResultLinkOutput{})
	pulumi.RegisterOutputType(GetServerlessInstancesResultLinkArrayOutput{})
	pulumi.RegisterOutputType(GetThirdPartyIntegrationsResultOutput{})
	pulumi.RegisterOutputType(GetThirdPartyIntegrationsResultArrayOutput{})
}
