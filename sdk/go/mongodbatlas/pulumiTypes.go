// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type AdvancedClusterAdvancedConfiguration struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern *string `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern *string `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong *bool `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled *bool `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	//
	// - TLS1_0
	// - TLS1_1
	// - TLS1_2
	MinimumEnabledTlsProtocol *string `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan *bool `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
	OplogMinRetentionHours *int `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb *int `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector *int `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector *int `pulumi:"sampleSizeBiConnector"`
	// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
	TransactionLifetimeLimitSeconds *int `pulumi:"transactionLifetimeLimitSeconds"`
}

// AdvancedClusterAdvancedConfigurationInput is an input type that accepts AdvancedClusterAdvancedConfigurationArgs and AdvancedClusterAdvancedConfigurationOutput values.
// You can construct a concrete instance of `AdvancedClusterAdvancedConfigurationInput` via:
//
//	AdvancedClusterAdvancedConfigurationArgs{...}
type AdvancedClusterAdvancedConfigurationInput interface {
	pulumi.Input

	ToAdvancedClusterAdvancedConfigurationOutput() AdvancedClusterAdvancedConfigurationOutput
	ToAdvancedClusterAdvancedConfigurationOutputWithContext(context.Context) AdvancedClusterAdvancedConfigurationOutput
}

type AdvancedClusterAdvancedConfigurationArgs struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern pulumi.StringPtrInput `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern pulumi.StringPtrInput `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong pulumi.BoolPtrInput `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled pulumi.BoolPtrInput `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	//
	// - TLS1_0
	// - TLS1_1
	// - TLS1_2
	MinimumEnabledTlsProtocol pulumi.StringPtrInput `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan pulumi.BoolPtrInput `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
	OplogMinRetentionHours pulumi.IntPtrInput `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb pulumi.IntPtrInput `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector pulumi.IntPtrInput `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector pulumi.IntPtrInput `pulumi:"sampleSizeBiConnector"`
	// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
	TransactionLifetimeLimitSeconds pulumi.IntPtrInput `pulumi:"transactionLifetimeLimitSeconds"`
}

func (AdvancedClusterAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (i AdvancedClusterAdvancedConfigurationArgs) ToAdvancedClusterAdvancedConfigurationOutput() AdvancedClusterAdvancedConfigurationOutput {
	return i.ToAdvancedClusterAdvancedConfigurationOutputWithContext(context.Background())
}

func (i AdvancedClusterAdvancedConfigurationArgs) ToAdvancedClusterAdvancedConfigurationOutputWithContext(ctx context.Context) AdvancedClusterAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterAdvancedConfigurationOutput)
}

func (i AdvancedClusterAdvancedConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterAdvancedConfiguration] {
	return pulumix.Output[AdvancedClusterAdvancedConfiguration]{
		OutputState: i.ToAdvancedClusterAdvancedConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i AdvancedClusterAdvancedConfigurationArgs) ToAdvancedClusterAdvancedConfigurationPtrOutput() AdvancedClusterAdvancedConfigurationPtrOutput {
	return i.ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterAdvancedConfigurationArgs) ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) AdvancedClusterAdvancedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterAdvancedConfigurationOutput).ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(ctx)
}

// AdvancedClusterAdvancedConfigurationPtrInput is an input type that accepts AdvancedClusterAdvancedConfigurationArgs, AdvancedClusterAdvancedConfigurationPtr and AdvancedClusterAdvancedConfigurationPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterAdvancedConfigurationPtrInput` via:
//
//	        AdvancedClusterAdvancedConfigurationArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterAdvancedConfigurationPtrInput interface {
	pulumi.Input

	ToAdvancedClusterAdvancedConfigurationPtrOutput() AdvancedClusterAdvancedConfigurationPtrOutput
	ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(context.Context) AdvancedClusterAdvancedConfigurationPtrOutput
}

type advancedClusterAdvancedConfigurationPtrType AdvancedClusterAdvancedConfigurationArgs

func AdvancedClusterAdvancedConfigurationPtr(v *AdvancedClusterAdvancedConfigurationArgs) AdvancedClusterAdvancedConfigurationPtrInput {
	return (*advancedClusterAdvancedConfigurationPtrType)(v)
}

func (*advancedClusterAdvancedConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (i *advancedClusterAdvancedConfigurationPtrType) ToAdvancedClusterAdvancedConfigurationPtrOutput() AdvancedClusterAdvancedConfigurationPtrOutput {
	return i.ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (i *advancedClusterAdvancedConfigurationPtrType) ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) AdvancedClusterAdvancedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterAdvancedConfigurationPtrOutput)
}

func (i *advancedClusterAdvancedConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterAdvancedConfiguration] {
	return pulumix.Output[*AdvancedClusterAdvancedConfiguration]{
		OutputState: i.ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type AdvancedClusterAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (AdvancedClusterAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (o AdvancedClusterAdvancedConfigurationOutput) ToAdvancedClusterAdvancedConfigurationOutput() AdvancedClusterAdvancedConfigurationOutput {
	return o
}

func (o AdvancedClusterAdvancedConfigurationOutput) ToAdvancedClusterAdvancedConfigurationOutputWithContext(ctx context.Context) AdvancedClusterAdvancedConfigurationOutput {
	return o
}

func (o AdvancedClusterAdvancedConfigurationOutput) ToAdvancedClusterAdvancedConfigurationPtrOutput() AdvancedClusterAdvancedConfigurationPtrOutput {
	return o.ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterAdvancedConfigurationOutput) ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) AdvancedClusterAdvancedConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterAdvancedConfiguration) *AdvancedClusterAdvancedConfiguration {
		return &v
	}).(AdvancedClusterAdvancedConfigurationPtrOutput)
}

func (o AdvancedClusterAdvancedConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterAdvancedConfiguration] {
	return pulumix.Output[AdvancedClusterAdvancedConfiguration]{
		OutputState: o.OutputState,
	}
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o AdvancedClusterAdvancedConfigurationOutput) DefaultReadConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *string { return v.DefaultReadConcern }).(pulumi.StringPtrOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o AdvancedClusterAdvancedConfigurationOutput) DefaultWriteConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *string { return v.DefaultWriteConcern }).(pulumi.StringPtrOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o AdvancedClusterAdvancedConfigurationOutput) FailIndexKeyTooLong() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *bool { return v.FailIndexKeyTooLong }).(pulumi.BoolPtrOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o AdvancedClusterAdvancedConfigurationOutput) JavascriptEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *bool { return v.JavascriptEnabled }).(pulumi.BoolPtrOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
//
// - TLS1_0
// - TLS1_1
// - TLS1_2
func (o AdvancedClusterAdvancedConfigurationOutput) MinimumEnabledTlsProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *string { return v.MinimumEnabledTlsProtocol }).(pulumi.StringPtrOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o AdvancedClusterAdvancedConfigurationOutput) NoTableScan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *bool { return v.NoTableScan }).(pulumi.BoolPtrOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
func (o AdvancedClusterAdvancedConfigurationOutput) OplogMinRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *int { return v.OplogMinRetentionHours }).(pulumi.IntPtrOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o AdvancedClusterAdvancedConfigurationOutput) OplogSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *int { return v.OplogSizeMb }).(pulumi.IntPtrOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o AdvancedClusterAdvancedConfigurationOutput) SampleRefreshIntervalBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *int { return v.SampleRefreshIntervalBiConnector }).(pulumi.IntPtrOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o AdvancedClusterAdvancedConfigurationOutput) SampleSizeBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *int { return v.SampleSizeBiConnector }).(pulumi.IntPtrOutput)
}

// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
func (o AdvancedClusterAdvancedConfigurationOutput) TransactionLifetimeLimitSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterAdvancedConfiguration) *int { return v.TransactionLifetimeLimitSeconds }).(pulumi.IntPtrOutput)
}

type AdvancedClusterAdvancedConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterAdvancedConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (o AdvancedClusterAdvancedConfigurationPtrOutput) ToAdvancedClusterAdvancedConfigurationPtrOutput() AdvancedClusterAdvancedConfigurationPtrOutput {
	return o
}

func (o AdvancedClusterAdvancedConfigurationPtrOutput) ToAdvancedClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) AdvancedClusterAdvancedConfigurationPtrOutput {
	return o
}

func (o AdvancedClusterAdvancedConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterAdvancedConfiguration] {
	return pulumix.Output[*AdvancedClusterAdvancedConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterAdvancedConfigurationPtrOutput) Elem() AdvancedClusterAdvancedConfigurationOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) AdvancedClusterAdvancedConfiguration {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterAdvancedConfiguration
		return ret
	}).(AdvancedClusterAdvancedConfigurationOutput)
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o AdvancedClusterAdvancedConfigurationPtrOutput) DefaultReadConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DefaultReadConcern
	}).(pulumi.StringPtrOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o AdvancedClusterAdvancedConfigurationPtrOutput) DefaultWriteConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DefaultWriteConcern
	}).(pulumi.StringPtrOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o AdvancedClusterAdvancedConfigurationPtrOutput) FailIndexKeyTooLong() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.FailIndexKeyTooLong
	}).(pulumi.BoolPtrOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o AdvancedClusterAdvancedConfigurationPtrOutput) JavascriptEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.JavascriptEnabled
	}).(pulumi.BoolPtrOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
//
// - TLS1_0
// - TLS1_1
// - TLS1_2
func (o AdvancedClusterAdvancedConfigurationPtrOutput) MinimumEnabledTlsProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.MinimumEnabledTlsProtocol
	}).(pulumi.StringPtrOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o AdvancedClusterAdvancedConfigurationPtrOutput) NoTableScan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.NoTableScan
	}).(pulumi.BoolPtrOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
func (o AdvancedClusterAdvancedConfigurationPtrOutput) OplogMinRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.OplogMinRetentionHours
	}).(pulumi.IntPtrOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o AdvancedClusterAdvancedConfigurationPtrOutput) OplogSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.OplogSizeMb
	}).(pulumi.IntPtrOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o AdvancedClusterAdvancedConfigurationPtrOutput) SampleRefreshIntervalBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SampleRefreshIntervalBiConnector
	}).(pulumi.IntPtrOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o AdvancedClusterAdvancedConfigurationPtrOutput) SampleSizeBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SampleSizeBiConnector
	}).(pulumi.IntPtrOutput)
}

// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
func (o AdvancedClusterAdvancedConfigurationPtrOutput) TransactionLifetimeLimitSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.TransactionLifetimeLimitSeconds
	}).(pulumi.IntPtrOutput)
}

type AdvancedClusterBiConnector struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	//
	// - Set to "primary" to have BI Connector for Atlas read from the primary.
	//
	// - Set to "secondary" to have BI Connector for Atlas read from a secondary member. Default if there are no analytics nodes in the cluster.
	//
	// - Set to "analytics" to have BI Connector for Atlas read from an analytics node. Default if the cluster contains analytics nodes.
	ReadPreference *string `pulumi:"readPreference"`
}

// AdvancedClusterBiConnectorInput is an input type that accepts AdvancedClusterBiConnectorArgs and AdvancedClusterBiConnectorOutput values.
// You can construct a concrete instance of `AdvancedClusterBiConnectorInput` via:
//
//	AdvancedClusterBiConnectorArgs{...}
type AdvancedClusterBiConnectorInput interface {
	pulumi.Input

	ToAdvancedClusterBiConnectorOutput() AdvancedClusterBiConnectorOutput
	ToAdvancedClusterBiConnectorOutputWithContext(context.Context) AdvancedClusterBiConnectorOutput
}

type AdvancedClusterBiConnectorArgs struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	//
	// - Set to "primary" to have BI Connector for Atlas read from the primary.
	//
	// - Set to "secondary" to have BI Connector for Atlas read from a secondary member. Default if there are no analytics nodes in the cluster.
	//
	// - Set to "analytics" to have BI Connector for Atlas read from an analytics node. Default if the cluster contains analytics nodes.
	ReadPreference pulumi.StringPtrInput `pulumi:"readPreference"`
}

func (AdvancedClusterBiConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterBiConnector)(nil)).Elem()
}

func (i AdvancedClusterBiConnectorArgs) ToAdvancedClusterBiConnectorOutput() AdvancedClusterBiConnectorOutput {
	return i.ToAdvancedClusterBiConnectorOutputWithContext(context.Background())
}

func (i AdvancedClusterBiConnectorArgs) ToAdvancedClusterBiConnectorOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterBiConnectorOutput)
}

func (i AdvancedClusterBiConnectorArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterBiConnector] {
	return pulumix.Output[AdvancedClusterBiConnector]{
		OutputState: i.ToAdvancedClusterBiConnectorOutputWithContext(ctx).OutputState,
	}
}

func (i AdvancedClusterBiConnectorArgs) ToAdvancedClusterBiConnectorPtrOutput() AdvancedClusterBiConnectorPtrOutput {
	return i.ToAdvancedClusterBiConnectorPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterBiConnectorArgs) ToAdvancedClusterBiConnectorPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterBiConnectorOutput).ToAdvancedClusterBiConnectorPtrOutputWithContext(ctx)
}

// AdvancedClusterBiConnectorPtrInput is an input type that accepts AdvancedClusterBiConnectorArgs, AdvancedClusterBiConnectorPtr and AdvancedClusterBiConnectorPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterBiConnectorPtrInput` via:
//
//	        AdvancedClusterBiConnectorArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterBiConnectorPtrInput interface {
	pulumi.Input

	ToAdvancedClusterBiConnectorPtrOutput() AdvancedClusterBiConnectorPtrOutput
	ToAdvancedClusterBiConnectorPtrOutputWithContext(context.Context) AdvancedClusterBiConnectorPtrOutput
}

type advancedClusterBiConnectorPtrType AdvancedClusterBiConnectorArgs

func AdvancedClusterBiConnectorPtr(v *AdvancedClusterBiConnectorArgs) AdvancedClusterBiConnectorPtrInput {
	return (*advancedClusterBiConnectorPtrType)(v)
}

func (*advancedClusterBiConnectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterBiConnector)(nil)).Elem()
}

func (i *advancedClusterBiConnectorPtrType) ToAdvancedClusterBiConnectorPtrOutput() AdvancedClusterBiConnectorPtrOutput {
	return i.ToAdvancedClusterBiConnectorPtrOutputWithContext(context.Background())
}

func (i *advancedClusterBiConnectorPtrType) ToAdvancedClusterBiConnectorPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterBiConnectorPtrOutput)
}

func (i *advancedClusterBiConnectorPtrType) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterBiConnector] {
	return pulumix.Output[*AdvancedClusterBiConnector]{
		OutputState: i.ToAdvancedClusterBiConnectorPtrOutputWithContext(ctx).OutputState,
	}
}

type AdvancedClusterBiConnectorOutput struct{ *pulumi.OutputState }

func (AdvancedClusterBiConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterBiConnector)(nil)).Elem()
}

func (o AdvancedClusterBiConnectorOutput) ToAdvancedClusterBiConnectorOutput() AdvancedClusterBiConnectorOutput {
	return o
}

func (o AdvancedClusterBiConnectorOutput) ToAdvancedClusterBiConnectorOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorOutput {
	return o
}

func (o AdvancedClusterBiConnectorOutput) ToAdvancedClusterBiConnectorPtrOutput() AdvancedClusterBiConnectorPtrOutput {
	return o.ToAdvancedClusterBiConnectorPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterBiConnectorOutput) ToAdvancedClusterBiConnectorPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterBiConnector) *AdvancedClusterBiConnector {
		return &v
	}).(AdvancedClusterBiConnectorPtrOutput)
}

func (o AdvancedClusterBiConnectorOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterBiConnector] {
	return pulumix.Output[AdvancedClusterBiConnector]{
		OutputState: o.OutputState,
	}
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o AdvancedClusterBiConnectorOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterBiConnector) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
//
// - Set to "primary" to have BI Connector for Atlas read from the primary.
//
// - Set to "secondary" to have BI Connector for Atlas read from a secondary member. Default if there are no analytics nodes in the cluster.
//
// - Set to "analytics" to have BI Connector for Atlas read from an analytics node. Default if the cluster contains analytics nodes.
func (o AdvancedClusterBiConnectorOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterBiConnector) *string { return v.ReadPreference }).(pulumi.StringPtrOutput)
}

type AdvancedClusterBiConnectorPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterBiConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterBiConnector)(nil)).Elem()
}

func (o AdvancedClusterBiConnectorPtrOutput) ToAdvancedClusterBiConnectorPtrOutput() AdvancedClusterBiConnectorPtrOutput {
	return o
}

func (o AdvancedClusterBiConnectorPtrOutput) ToAdvancedClusterBiConnectorPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorPtrOutput {
	return o
}

func (o AdvancedClusterBiConnectorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterBiConnector] {
	return pulumix.Output[*AdvancedClusterBiConnector]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterBiConnectorPtrOutput) Elem() AdvancedClusterBiConnectorOutput {
	return o.ApplyT(func(v *AdvancedClusterBiConnector) AdvancedClusterBiConnector {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterBiConnector
		return ret
	}).(AdvancedClusterBiConnectorOutput)
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o AdvancedClusterBiConnectorPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterBiConnector) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
//
// - Set to "primary" to have BI Connector for Atlas read from the primary.
//
// - Set to "secondary" to have BI Connector for Atlas read from a secondary member. Default if there are no analytics nodes in the cluster.
//
// - Set to "analytics" to have BI Connector for Atlas read from an analytics node. Default if the cluster contains analytics nodes.
func (o AdvancedClusterBiConnectorPtrOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterBiConnector) *string {
		if v == nil {
			return nil
		}
		return v.ReadPreference
	}).(pulumi.StringPtrOutput)
}

type AdvancedClusterBiConnectorConfig struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	//
	// - Set to "primary" to have BI Connector for Atlas read from the primary.
	//
	// - Set to "secondary" to have BI Connector for Atlas read from a secondary member. Default if there are no analytics nodes in the cluster.
	//
	// - Set to "analytics" to have BI Connector for Atlas read from an analytics node. Default if the cluster contains analytics nodes.
	ReadPreference *string `pulumi:"readPreference"`
}

// AdvancedClusterBiConnectorConfigInput is an input type that accepts AdvancedClusterBiConnectorConfigArgs and AdvancedClusterBiConnectorConfigOutput values.
// You can construct a concrete instance of `AdvancedClusterBiConnectorConfigInput` via:
//
//	AdvancedClusterBiConnectorConfigArgs{...}
type AdvancedClusterBiConnectorConfigInput interface {
	pulumi.Input

	ToAdvancedClusterBiConnectorConfigOutput() AdvancedClusterBiConnectorConfigOutput
	ToAdvancedClusterBiConnectorConfigOutputWithContext(context.Context) AdvancedClusterBiConnectorConfigOutput
}

type AdvancedClusterBiConnectorConfigArgs struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	//
	// - Set to "primary" to have BI Connector for Atlas read from the primary.
	//
	// - Set to "secondary" to have BI Connector for Atlas read from a secondary member. Default if there are no analytics nodes in the cluster.
	//
	// - Set to "analytics" to have BI Connector for Atlas read from an analytics node. Default if the cluster contains analytics nodes.
	ReadPreference pulumi.StringPtrInput `pulumi:"readPreference"`
}

func (AdvancedClusterBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (i AdvancedClusterBiConnectorConfigArgs) ToAdvancedClusterBiConnectorConfigOutput() AdvancedClusterBiConnectorConfigOutput {
	return i.ToAdvancedClusterBiConnectorConfigOutputWithContext(context.Background())
}

func (i AdvancedClusterBiConnectorConfigArgs) ToAdvancedClusterBiConnectorConfigOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterBiConnectorConfigOutput)
}

func (i AdvancedClusterBiConnectorConfigArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterBiConnectorConfig] {
	return pulumix.Output[AdvancedClusterBiConnectorConfig]{
		OutputState: i.ToAdvancedClusterBiConnectorConfigOutputWithContext(ctx).OutputState,
	}
}

func (i AdvancedClusterBiConnectorConfigArgs) ToAdvancedClusterBiConnectorConfigPtrOutput() AdvancedClusterBiConnectorConfigPtrOutput {
	return i.ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterBiConnectorConfigArgs) ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterBiConnectorConfigOutput).ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(ctx)
}

// AdvancedClusterBiConnectorConfigPtrInput is an input type that accepts AdvancedClusterBiConnectorConfigArgs, AdvancedClusterBiConnectorConfigPtr and AdvancedClusterBiConnectorConfigPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterBiConnectorConfigPtrInput` via:
//
//	        AdvancedClusterBiConnectorConfigArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterBiConnectorConfigPtrInput interface {
	pulumi.Input

	ToAdvancedClusterBiConnectorConfigPtrOutput() AdvancedClusterBiConnectorConfigPtrOutput
	ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(context.Context) AdvancedClusterBiConnectorConfigPtrOutput
}

type advancedClusterBiConnectorConfigPtrType AdvancedClusterBiConnectorConfigArgs

func AdvancedClusterBiConnectorConfigPtr(v *AdvancedClusterBiConnectorConfigArgs) AdvancedClusterBiConnectorConfigPtrInput {
	return (*advancedClusterBiConnectorConfigPtrType)(v)
}

func (*advancedClusterBiConnectorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (i *advancedClusterBiConnectorConfigPtrType) ToAdvancedClusterBiConnectorConfigPtrOutput() AdvancedClusterBiConnectorConfigPtrOutput {
	return i.ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (i *advancedClusterBiConnectorConfigPtrType) ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterBiConnectorConfigPtrOutput)
}

func (i *advancedClusterBiConnectorConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterBiConnectorConfig] {
	return pulumix.Output[*AdvancedClusterBiConnectorConfig]{
		OutputState: i.ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type AdvancedClusterBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (AdvancedClusterBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (o AdvancedClusterBiConnectorConfigOutput) ToAdvancedClusterBiConnectorConfigOutput() AdvancedClusterBiConnectorConfigOutput {
	return o
}

func (o AdvancedClusterBiConnectorConfigOutput) ToAdvancedClusterBiConnectorConfigOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorConfigOutput {
	return o
}

func (o AdvancedClusterBiConnectorConfigOutput) ToAdvancedClusterBiConnectorConfigPtrOutput() AdvancedClusterBiConnectorConfigPtrOutput {
	return o.ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterBiConnectorConfigOutput) ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterBiConnectorConfig) *AdvancedClusterBiConnectorConfig {
		return &v
	}).(AdvancedClusterBiConnectorConfigPtrOutput)
}

func (o AdvancedClusterBiConnectorConfigOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterBiConnectorConfig] {
	return pulumix.Output[AdvancedClusterBiConnectorConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o AdvancedClusterBiConnectorConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterBiConnectorConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
//
// - Set to "primary" to have BI Connector for Atlas read from the primary.
//
// - Set to "secondary" to have BI Connector for Atlas read from a secondary member. Default if there are no analytics nodes in the cluster.
//
// - Set to "analytics" to have BI Connector for Atlas read from an analytics node. Default if the cluster contains analytics nodes.
func (o AdvancedClusterBiConnectorConfigOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterBiConnectorConfig) *string { return v.ReadPreference }).(pulumi.StringPtrOutput)
}

type AdvancedClusterBiConnectorConfigPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterBiConnectorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (o AdvancedClusterBiConnectorConfigPtrOutput) ToAdvancedClusterBiConnectorConfigPtrOutput() AdvancedClusterBiConnectorConfigPtrOutput {
	return o
}

func (o AdvancedClusterBiConnectorConfigPtrOutput) ToAdvancedClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) AdvancedClusterBiConnectorConfigPtrOutput {
	return o
}

func (o AdvancedClusterBiConnectorConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterBiConnectorConfig] {
	return pulumix.Output[*AdvancedClusterBiConnectorConfig]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterBiConnectorConfigPtrOutput) Elem() AdvancedClusterBiConnectorConfigOutput {
	return o.ApplyT(func(v *AdvancedClusterBiConnectorConfig) AdvancedClusterBiConnectorConfig {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterBiConnectorConfig
		return ret
	}).(AdvancedClusterBiConnectorConfigOutput)
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o AdvancedClusterBiConnectorConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterBiConnectorConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
//
// - Set to "primary" to have BI Connector for Atlas read from the primary.
//
// - Set to "secondary" to have BI Connector for Atlas read from a secondary member. Default if there are no analytics nodes in the cluster.
//
// - Set to "analytics" to have BI Connector for Atlas read from an analytics node. Default if the cluster contains analytics nodes.
func (o AdvancedClusterBiConnectorConfigPtrOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterBiConnectorConfig) *string {
		if v == nil {
			return nil
		}
		return v.ReadPreference
	}).(pulumi.StringPtrOutput)
}

type AdvancedClusterConnectionString struct {
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].connection_string
	AwsPrivateLink map[string]interface{} `pulumi:"awsPrivateLink"`
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].srv_connection_string
	AwsPrivateLinkSrv map[string]interface{}                           `pulumi:"awsPrivateLinkSrv"`
	Private           *string                                          `pulumi:"private"`
	PrivateEndpoints  []AdvancedClusterConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        *string                                          `pulumi:"privateSrv"`
	Standard          *string                                          `pulumi:"standard"`
	StandardSrv       *string                                          `pulumi:"standardSrv"`
}

// AdvancedClusterConnectionStringInput is an input type that accepts AdvancedClusterConnectionStringArgs and AdvancedClusterConnectionStringOutput values.
// You can construct a concrete instance of `AdvancedClusterConnectionStringInput` via:
//
//	AdvancedClusterConnectionStringArgs{...}
type AdvancedClusterConnectionStringInput interface {
	pulumi.Input

	ToAdvancedClusterConnectionStringOutput() AdvancedClusterConnectionStringOutput
	ToAdvancedClusterConnectionStringOutputWithContext(context.Context) AdvancedClusterConnectionStringOutput
}

type AdvancedClusterConnectionStringArgs struct {
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].connection_string
	AwsPrivateLink pulumi.MapInput `pulumi:"awsPrivateLink"`
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].srv_connection_string
	AwsPrivateLinkSrv pulumi.MapInput                                          `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringPtrInput                                    `pulumi:"private"`
	PrivateEndpoints  AdvancedClusterConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringPtrInput                                    `pulumi:"privateSrv"`
	Standard          pulumi.StringPtrInput                                    `pulumi:"standard"`
	StandardSrv       pulumi.StringPtrInput                                    `pulumi:"standardSrv"`
}

func (AdvancedClusterConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterConnectionString)(nil)).Elem()
}

func (i AdvancedClusterConnectionStringArgs) ToAdvancedClusterConnectionStringOutput() AdvancedClusterConnectionStringOutput {
	return i.ToAdvancedClusterConnectionStringOutputWithContext(context.Background())
}

func (i AdvancedClusterConnectionStringArgs) ToAdvancedClusterConnectionStringOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterConnectionStringOutput)
}

func (i AdvancedClusterConnectionStringArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterConnectionString] {
	return pulumix.Output[AdvancedClusterConnectionString]{
		OutputState: i.ToAdvancedClusterConnectionStringOutputWithContext(ctx).OutputState,
	}
}

// AdvancedClusterConnectionStringArrayInput is an input type that accepts AdvancedClusterConnectionStringArray and AdvancedClusterConnectionStringArrayOutput values.
// You can construct a concrete instance of `AdvancedClusterConnectionStringArrayInput` via:
//
//	AdvancedClusterConnectionStringArray{ AdvancedClusterConnectionStringArgs{...} }
type AdvancedClusterConnectionStringArrayInput interface {
	pulumi.Input

	ToAdvancedClusterConnectionStringArrayOutput() AdvancedClusterConnectionStringArrayOutput
	ToAdvancedClusterConnectionStringArrayOutputWithContext(context.Context) AdvancedClusterConnectionStringArrayOutput
}

type AdvancedClusterConnectionStringArray []AdvancedClusterConnectionStringInput

func (AdvancedClusterConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterConnectionString)(nil)).Elem()
}

func (i AdvancedClusterConnectionStringArray) ToAdvancedClusterConnectionStringArrayOutput() AdvancedClusterConnectionStringArrayOutput {
	return i.ToAdvancedClusterConnectionStringArrayOutputWithContext(context.Background())
}

func (i AdvancedClusterConnectionStringArray) ToAdvancedClusterConnectionStringArrayOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterConnectionStringArrayOutput)
}

func (i AdvancedClusterConnectionStringArray) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedClusterConnectionString] {
	return pulumix.Output[[]AdvancedClusterConnectionString]{
		OutputState: i.ToAdvancedClusterConnectionStringArrayOutputWithContext(ctx).OutputState,
	}
}

type AdvancedClusterConnectionStringOutput struct{ *pulumi.OutputState }

func (AdvancedClusterConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterConnectionString)(nil)).Elem()
}

func (o AdvancedClusterConnectionStringOutput) ToAdvancedClusterConnectionStringOutput() AdvancedClusterConnectionStringOutput {
	return o
}

func (o AdvancedClusterConnectionStringOutput) ToAdvancedClusterConnectionStringOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringOutput {
	return o
}

func (o AdvancedClusterConnectionStringOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterConnectionString] {
	return pulumix.Output[AdvancedClusterConnectionString]{
		OutputState: o.OutputState,
	}
}

// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].connection_string
func (o AdvancedClusterConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].srv_connection_string
func (o AdvancedClusterConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o AdvancedClusterConnectionStringOutput) Private() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionString) *string { return v.Private }).(pulumi.StringPtrOutput)
}

func (o AdvancedClusterConnectionStringOutput) PrivateEndpoints() AdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionString) []AdvancedClusterConnectionStringPrivateEndpoint {
		return v.PrivateEndpoints
	}).(AdvancedClusterConnectionStringPrivateEndpointArrayOutput)
}

func (o AdvancedClusterConnectionStringOutput) PrivateSrv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionString) *string { return v.PrivateSrv }).(pulumi.StringPtrOutput)
}

func (o AdvancedClusterConnectionStringOutput) Standard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionString) *string { return v.Standard }).(pulumi.StringPtrOutput)
}

func (o AdvancedClusterConnectionStringOutput) StandardSrv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionString) *string { return v.StandardSrv }).(pulumi.StringPtrOutput)
}

type AdvancedClusterConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (AdvancedClusterConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterConnectionString)(nil)).Elem()
}

func (o AdvancedClusterConnectionStringArrayOutput) ToAdvancedClusterConnectionStringArrayOutput() AdvancedClusterConnectionStringArrayOutput {
	return o
}

func (o AdvancedClusterConnectionStringArrayOutput) ToAdvancedClusterConnectionStringArrayOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringArrayOutput {
	return o
}

func (o AdvancedClusterConnectionStringArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedClusterConnectionString] {
	return pulumix.Output[[]AdvancedClusterConnectionString]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterConnectionStringArrayOutput) Index(i pulumi.IntInput) AdvancedClusterConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdvancedClusterConnectionString {
		return vs[0].([]AdvancedClusterConnectionString)[vs[1].(int)]
	}).(AdvancedClusterConnectionStringOutput)
}

type AdvancedClusterConnectionStringPrivateEndpoint struct {
	ConnectionString                  *string                                                  `pulumi:"connectionString"`
	Endpoints                         []AdvancedClusterConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString               *string                                                  `pulumi:"srvConnectionString"`
	SrvShardOptimizedConnectionString *string                                                  `pulumi:"srvShardOptimizedConnectionString"`
	Type                              *string                                                  `pulumi:"type"`
}

// AdvancedClusterConnectionStringPrivateEndpointInput is an input type that accepts AdvancedClusterConnectionStringPrivateEndpointArgs and AdvancedClusterConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `AdvancedClusterConnectionStringPrivateEndpointInput` via:
//
//	AdvancedClusterConnectionStringPrivateEndpointArgs{...}
type AdvancedClusterConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToAdvancedClusterConnectionStringPrivateEndpointOutput() AdvancedClusterConnectionStringPrivateEndpointOutput
	ToAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(context.Context) AdvancedClusterConnectionStringPrivateEndpointOutput
}

type AdvancedClusterConnectionStringPrivateEndpointArgs struct {
	ConnectionString                  pulumi.StringPtrInput                                            `pulumi:"connectionString"`
	Endpoints                         AdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString               pulumi.StringPtrInput                                            `pulumi:"srvConnectionString"`
	SrvShardOptimizedConnectionString pulumi.StringPtrInput                                            `pulumi:"srvShardOptimizedConnectionString"`
	Type                              pulumi.StringPtrInput                                            `pulumi:"type"`
}

func (AdvancedClusterConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i AdvancedClusterConnectionStringPrivateEndpointArgs) ToAdvancedClusterConnectionStringPrivateEndpointOutput() AdvancedClusterConnectionStringPrivateEndpointOutput {
	return i.ToAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i AdvancedClusterConnectionStringPrivateEndpointArgs) ToAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterConnectionStringPrivateEndpointOutput)
}

func (i AdvancedClusterConnectionStringPrivateEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[AdvancedClusterConnectionStringPrivateEndpoint]{
		OutputState: i.ToAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(ctx).OutputState,
	}
}

// AdvancedClusterConnectionStringPrivateEndpointArrayInput is an input type that accepts AdvancedClusterConnectionStringPrivateEndpointArray and AdvancedClusterConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `AdvancedClusterConnectionStringPrivateEndpointArrayInput` via:
//
//	AdvancedClusterConnectionStringPrivateEndpointArray{ AdvancedClusterConnectionStringPrivateEndpointArgs{...} }
type AdvancedClusterConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToAdvancedClusterConnectionStringPrivateEndpointArrayOutput() AdvancedClusterConnectionStringPrivateEndpointArrayOutput
	ToAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) AdvancedClusterConnectionStringPrivateEndpointArrayOutput
}

type AdvancedClusterConnectionStringPrivateEndpointArray []AdvancedClusterConnectionStringPrivateEndpointInput

func (AdvancedClusterConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i AdvancedClusterConnectionStringPrivateEndpointArray) ToAdvancedClusterConnectionStringPrivateEndpointArrayOutput() AdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return i.ToAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i AdvancedClusterConnectionStringPrivateEndpointArray) ToAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterConnectionStringPrivateEndpointArrayOutput)
}

func (i AdvancedClusterConnectionStringPrivateEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[[]AdvancedClusterConnectionStringPrivateEndpoint]{
		OutputState: i.ToAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type AdvancedClusterConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (AdvancedClusterConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o AdvancedClusterConnectionStringPrivateEndpointOutput) ToAdvancedClusterConnectionStringPrivateEndpointOutput() AdvancedClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointOutput) ToAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[AdvancedClusterConnectionStringPrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpoint) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

func (o AdvancedClusterConnectionStringPrivateEndpointOutput) Endpoints() AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpoint) []AdvancedClusterConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o AdvancedClusterConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpoint) *string { return v.SrvConnectionString }).(pulumi.StringPtrOutput)
}

func (o AdvancedClusterConnectionStringPrivateEndpointOutput) SrvShardOptimizedConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpoint) *string {
		return v.SrvShardOptimizedConnectionString
	}).(pulumi.StringPtrOutput)
}

func (o AdvancedClusterConnectionStringPrivateEndpointOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpoint) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AdvancedClusterConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (AdvancedClusterConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o AdvancedClusterConnectionStringPrivateEndpointArrayOutput) ToAdvancedClusterConnectionStringPrivateEndpointArrayOutput() AdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointArrayOutput) ToAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[[]AdvancedClusterConnectionStringPrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) AdvancedClusterConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdvancedClusterConnectionStringPrivateEndpoint {
		return vs[0].([]AdvancedClusterConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(AdvancedClusterConnectionStringPrivateEndpointOutput)
}

type AdvancedClusterConnectionStringPrivateEndpointEndpoint struct {
	EndpointId *string `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	// The possible values are:
	ProviderName *string `pulumi:"providerName"`
	Region       *string `pulumi:"region"`
}

// AdvancedClusterConnectionStringPrivateEndpointEndpointInput is an input type that accepts AdvancedClusterConnectionStringPrivateEndpointEndpointArgs and AdvancedClusterConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `AdvancedClusterConnectionStringPrivateEndpointEndpointInput` via:
//
//	AdvancedClusterConnectionStringPrivateEndpointEndpointArgs{...}
type AdvancedClusterConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutput() AdvancedClusterConnectionStringPrivateEndpointEndpointOutput
	ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) AdvancedClusterConnectionStringPrivateEndpointEndpointOutput
}

type AdvancedClusterConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringPtrInput `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	// The possible values are:
	ProviderName pulumi.StringPtrInput `pulumi:"providerName"`
	Region       pulumi.StringPtrInput `pulumi:"region"`
}

func (AdvancedClusterConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i AdvancedClusterConnectionStringPrivateEndpointEndpointArgs) ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutput() AdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return i.ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i AdvancedClusterConnectionStringPrivateEndpointEndpointArgs) ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterConnectionStringPrivateEndpointEndpointOutput)
}

func (i AdvancedClusterConnectionStringPrivateEndpointEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[AdvancedClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: i.ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx).OutputState,
	}
}

// AdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts AdvancedClusterConnectionStringPrivateEndpointEndpointArray and AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `AdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//	AdvancedClusterConnectionStringPrivateEndpointEndpointArray{ AdvancedClusterConnectionStringPrivateEndpointEndpointArgs{...} }
type AdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput() AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput
	ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput
}

type AdvancedClusterConnectionStringPrivateEndpointEndpointArray []AdvancedClusterConnectionStringPrivateEndpointEndpointInput

func (AdvancedClusterConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i AdvancedClusterConnectionStringPrivateEndpointEndpointArray) ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput() AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i AdvancedClusterConnectionStringPrivateEndpointEndpointArray) ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (i AdvancedClusterConnectionStringPrivateEndpointEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[[]AdvancedClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: i.ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type AdvancedClusterConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (AdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutput() AdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ToAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[AdvancedClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpointEndpoint) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// Cloud service provider on which the servers are provisioned.
// The possible values are:
func (o AdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpointEndpoint) *string { return v.ProviderName }).(pulumi.StringPtrOutput)
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterConnectionStringPrivateEndpointEndpoint) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput() AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[[]AdvancedClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) AdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdvancedClusterConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]AdvancedClusterConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(AdvancedClusterConnectionStringPrivateEndpointEndpointOutput)
}

type AdvancedClusterLabel struct {
	// The key that you want to write.
	Key *string `pulumi:"key"`
	// The value that you want to write.
	//
	// > **NOTE:** MongoDB Atlas doesn't display your labels.
	// **NOTE:** Cluster labels are not the same as [resource TAGs](https://www.mongodb.com/docs/atlas/tags/). We plan to add [resource TAGs](https://www.mongodb.com/docs/atlas/tags/) support in a future release.
	Value *string `pulumi:"value"`
}

// AdvancedClusterLabelInput is an input type that accepts AdvancedClusterLabelArgs and AdvancedClusterLabelOutput values.
// You can construct a concrete instance of `AdvancedClusterLabelInput` via:
//
//	AdvancedClusterLabelArgs{...}
type AdvancedClusterLabelInput interface {
	pulumi.Input

	ToAdvancedClusterLabelOutput() AdvancedClusterLabelOutput
	ToAdvancedClusterLabelOutputWithContext(context.Context) AdvancedClusterLabelOutput
}

type AdvancedClusterLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value that you want to write.
	//
	// > **NOTE:** MongoDB Atlas doesn't display your labels.
	// **NOTE:** Cluster labels are not the same as [resource TAGs](https://www.mongodb.com/docs/atlas/tags/). We plan to add [resource TAGs](https://www.mongodb.com/docs/atlas/tags/) support in a future release.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AdvancedClusterLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterLabel)(nil)).Elem()
}

func (i AdvancedClusterLabelArgs) ToAdvancedClusterLabelOutput() AdvancedClusterLabelOutput {
	return i.ToAdvancedClusterLabelOutputWithContext(context.Background())
}

func (i AdvancedClusterLabelArgs) ToAdvancedClusterLabelOutputWithContext(ctx context.Context) AdvancedClusterLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterLabelOutput)
}

func (i AdvancedClusterLabelArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterLabel] {
	return pulumix.Output[AdvancedClusterLabel]{
		OutputState: i.ToAdvancedClusterLabelOutputWithContext(ctx).OutputState,
	}
}

// AdvancedClusterLabelArrayInput is an input type that accepts AdvancedClusterLabelArray and AdvancedClusterLabelArrayOutput values.
// You can construct a concrete instance of `AdvancedClusterLabelArrayInput` via:
//
//	AdvancedClusterLabelArray{ AdvancedClusterLabelArgs{...} }
type AdvancedClusterLabelArrayInput interface {
	pulumi.Input

	ToAdvancedClusterLabelArrayOutput() AdvancedClusterLabelArrayOutput
	ToAdvancedClusterLabelArrayOutputWithContext(context.Context) AdvancedClusterLabelArrayOutput
}

type AdvancedClusterLabelArray []AdvancedClusterLabelInput

func (AdvancedClusterLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterLabel)(nil)).Elem()
}

func (i AdvancedClusterLabelArray) ToAdvancedClusterLabelArrayOutput() AdvancedClusterLabelArrayOutput {
	return i.ToAdvancedClusterLabelArrayOutputWithContext(context.Background())
}

func (i AdvancedClusterLabelArray) ToAdvancedClusterLabelArrayOutputWithContext(ctx context.Context) AdvancedClusterLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterLabelArrayOutput)
}

func (i AdvancedClusterLabelArray) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedClusterLabel] {
	return pulumix.Output[[]AdvancedClusterLabel]{
		OutputState: i.ToAdvancedClusterLabelArrayOutputWithContext(ctx).OutputState,
	}
}

type AdvancedClusterLabelOutput struct{ *pulumi.OutputState }

func (AdvancedClusterLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterLabel)(nil)).Elem()
}

func (o AdvancedClusterLabelOutput) ToAdvancedClusterLabelOutput() AdvancedClusterLabelOutput {
	return o
}

func (o AdvancedClusterLabelOutput) ToAdvancedClusterLabelOutputWithContext(ctx context.Context) AdvancedClusterLabelOutput {
	return o
}

func (o AdvancedClusterLabelOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterLabel] {
	return pulumix.Output[AdvancedClusterLabel]{
		OutputState: o.OutputState,
	}
}

// The key that you want to write.
func (o AdvancedClusterLabelOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterLabel) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value that you want to write.
//
// > **NOTE:** MongoDB Atlas doesn't display your labels.
// **NOTE:** Cluster labels are not the same as [resource TAGs](https://www.mongodb.com/docs/atlas/tags/). We plan to add [resource TAGs](https://www.mongodb.com/docs/atlas/tags/) support in a future release.
func (o AdvancedClusterLabelOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterLabel) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AdvancedClusterLabelArrayOutput struct{ *pulumi.OutputState }

func (AdvancedClusterLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterLabel)(nil)).Elem()
}

func (o AdvancedClusterLabelArrayOutput) ToAdvancedClusterLabelArrayOutput() AdvancedClusterLabelArrayOutput {
	return o
}

func (o AdvancedClusterLabelArrayOutput) ToAdvancedClusterLabelArrayOutputWithContext(ctx context.Context) AdvancedClusterLabelArrayOutput {
	return o
}

func (o AdvancedClusterLabelArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedClusterLabel] {
	return pulumix.Output[[]AdvancedClusterLabel]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterLabelArrayOutput) Index(i pulumi.IntInput) AdvancedClusterLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdvancedClusterLabel {
		return vs[0].([]AdvancedClusterLabel)[vs[1].(int)]
	}).(AdvancedClusterLabelOutput)
}

type AdvancedClusterReplicationSpec struct {
	ContainerId map[string]string `pulumi:"containerId"`
	Id          *string           `pulumi:"id"`
	// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED. Omit this value if you selected a `clusterType` of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a `numShards` value of 1 and a `clusterType` of SHARDED, Atlas deploys a single-shard [sharded cluster](https://docs.atlas.mongodb.com/reference/glossary/#std-term-sharded-cluster). Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations.
	NumShards *int `pulumi:"numShards"`
	// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
	RegionConfigs []AdvancedClusterReplicationSpecRegionConfig `pulumi:"regionConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName *string `pulumi:"zoneName"`
}

// AdvancedClusterReplicationSpecInput is an input type that accepts AdvancedClusterReplicationSpecArgs and AdvancedClusterReplicationSpecOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecInput` via:
//
//	AdvancedClusterReplicationSpecArgs{...}
type AdvancedClusterReplicationSpecInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecOutput() AdvancedClusterReplicationSpecOutput
	ToAdvancedClusterReplicationSpecOutputWithContext(context.Context) AdvancedClusterReplicationSpecOutput
}

type AdvancedClusterReplicationSpecArgs struct {
	ContainerId pulumi.StringMapInput `pulumi:"containerId"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED. Omit this value if you selected a `clusterType` of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a `numShards` value of 1 and a `clusterType` of SHARDED, Atlas deploys a single-shard [sharded cluster](https://docs.atlas.mongodb.com/reference/glossary/#std-term-sharded-cluster). Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations.
	NumShards pulumi.IntPtrInput `pulumi:"numShards"`
	// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
	RegionConfigs AdvancedClusterReplicationSpecRegionConfigArrayInput `pulumi:"regionConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName pulumi.StringPtrInput `pulumi:"zoneName"`
}

func (AdvancedClusterReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpec)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecArgs) ToAdvancedClusterReplicationSpecOutput() AdvancedClusterReplicationSpecOutput {
	return i.ToAdvancedClusterReplicationSpecOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecArgs) ToAdvancedClusterReplicationSpecOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecOutput)
}

func (i AdvancedClusterReplicationSpecArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterReplicationSpec] {
	return pulumix.Output[AdvancedClusterReplicationSpec]{
		OutputState: i.ToAdvancedClusterReplicationSpecOutputWithContext(ctx).OutputState,
	}
}

// AdvancedClusterReplicationSpecArrayInput is an input type that accepts AdvancedClusterReplicationSpecArray and AdvancedClusterReplicationSpecArrayOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecArrayInput` via:
//
//	AdvancedClusterReplicationSpecArray{ AdvancedClusterReplicationSpecArgs{...} }
type AdvancedClusterReplicationSpecArrayInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecArrayOutput() AdvancedClusterReplicationSpecArrayOutput
	ToAdvancedClusterReplicationSpecArrayOutputWithContext(context.Context) AdvancedClusterReplicationSpecArrayOutput
}

type AdvancedClusterReplicationSpecArray []AdvancedClusterReplicationSpecInput

func (AdvancedClusterReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterReplicationSpec)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecArray) ToAdvancedClusterReplicationSpecArrayOutput() AdvancedClusterReplicationSpecArrayOutput {
	return i.ToAdvancedClusterReplicationSpecArrayOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecArray) ToAdvancedClusterReplicationSpecArrayOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecArrayOutput)
}

func (i AdvancedClusterReplicationSpecArray) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedClusterReplicationSpec] {
	return pulumix.Output[[]AdvancedClusterReplicationSpec]{
		OutputState: i.ToAdvancedClusterReplicationSpecArrayOutputWithContext(ctx).OutputState,
	}
}

type AdvancedClusterReplicationSpecOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpec)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecOutput) ToAdvancedClusterReplicationSpecOutput() AdvancedClusterReplicationSpecOutput {
	return o
}

func (o AdvancedClusterReplicationSpecOutput) ToAdvancedClusterReplicationSpecOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecOutput {
	return o
}

func (o AdvancedClusterReplicationSpecOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterReplicationSpec] {
	return pulumix.Output[AdvancedClusterReplicationSpec]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterReplicationSpecOutput) ContainerId() pulumi.StringMapOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpec) map[string]string { return v.ContainerId }).(pulumi.StringMapOutput)
}

func (o AdvancedClusterReplicationSpecOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpec) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED. Omit this value if you selected a `clusterType` of REPLICASET. This API resource accepts 1 through 50, inclusive. This parameter defaults to 1. If you specify a `numShards` value of 1 and a `clusterType` of SHARDED, Atlas deploys a single-shard [sharded cluster](https://docs.atlas.mongodb.com/reference/glossary/#std-term-sharded-cluster). Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations.
func (o AdvancedClusterReplicationSpecOutput) NumShards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpec) *int { return v.NumShards }).(pulumi.IntPtrOutput)
}

// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
func (o AdvancedClusterReplicationSpecOutput) RegionConfigs() AdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpec) []AdvancedClusterReplicationSpecRegionConfig {
		return v.RegionConfigs
	}).(AdvancedClusterReplicationSpecRegionConfigArrayOutput)
}

// Name for the zone in a Global Cluster.
func (o AdvancedClusterReplicationSpecOutput) ZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpec) *string { return v.ZoneName }).(pulumi.StringPtrOutput)
}

type AdvancedClusterReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterReplicationSpec)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecArrayOutput) ToAdvancedClusterReplicationSpecArrayOutput() AdvancedClusterReplicationSpecArrayOutput {
	return o
}

func (o AdvancedClusterReplicationSpecArrayOutput) ToAdvancedClusterReplicationSpecArrayOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecArrayOutput {
	return o
}

func (o AdvancedClusterReplicationSpecArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedClusterReplicationSpec] {
	return pulumix.Output[[]AdvancedClusterReplicationSpec]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterReplicationSpecArrayOutput) Index(i pulumi.IntInput) AdvancedClusterReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdvancedClusterReplicationSpec {
		return vs[0].([]AdvancedClusterReplicationSpec)[vs[1].(int)]
	}).(AdvancedClusterReplicationSpecOutput)
}

type AdvancedClusterReplicationSpecRegionConfig struct {
	// Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. The values for the `analyticsAutoScaling` parameter must be the same for every item in the `replicationSpecs` array. See below
	AnalyticsAutoScaling *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling `pulumi:"analyticsAutoScaling"`
	// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. Analytics nodes handle analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only and can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary). If you don't specify this parameter, no analytics nodes deploy to this region. See below
	AnalyticsSpecs *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs `pulumi:"analyticsSpecs"`
	// Configuration for the Collection of settings that configures auto-scaling information for the cluster. The values for the `autoScaling` parameter must be the same for every item in the `replicationSpecs` array. See below
	AutoScaling *AdvancedClusterReplicationSpecRegionConfigAutoScaling `pulumi:"autoScaling"`
	// Cloud service provider on which you provision the host for a multi-tenant cluster. Use this only when a `providerName` is `TENANT` and `instanceSize` of a specs is `M2` or `M5`.
	BackingProviderName *string `pulumi:"backingProviderName"`
	// Hardware specifications for electable nodes in the region. Electable nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you do not specify this option, no electable nodes are deployed to the region. See below
	ElectableSpecs *AdvancedClusterReplicationSpecRegionConfigElectableSpecs `pulumi:"electableSpecs"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	// * If you have multiple `regionConfigs` objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is 7.
	// * If your region has set `region_configs.#.electable_specs.0.node_count` to 1 or higher, it must have a priority of exactly one (1) less than another region in the `replication_specs.#.region_configs.#` array. The highest-priority region must have a priority of 7. The lowest possible priority is 1.
	Priority int `pulumi:"priority"`
	// Cloud service provider on which the servers are provisioned.
	// The possible values are:
	ProviderName string `pulumi:"providerName"`
	// Hardware specifications for read-only nodes in the region. Read-only nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you don't specify this parameter, no read-only nodes are deployed to the region. See below
	ReadOnlySpecs *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs `pulumi:"readOnlySpecs"`
	// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	RegionName string `pulumi:"regionName"`
}

// AdvancedClusterReplicationSpecRegionConfigInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigArgs and AdvancedClusterReplicationSpecRegionConfigOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigInput` via:
//
//	AdvancedClusterReplicationSpecRegionConfigArgs{...}
type AdvancedClusterReplicationSpecRegionConfigInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigOutput() AdvancedClusterReplicationSpecRegionConfigOutput
	ToAdvancedClusterReplicationSpecRegionConfigOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigOutput
}

type AdvancedClusterReplicationSpecRegionConfigArgs struct {
	// Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. The values for the `analyticsAutoScaling` parameter must be the same for every item in the `replicationSpecs` array. See below
	AnalyticsAutoScaling AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrInput `pulumi:"analyticsAutoScaling"`
	// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. Analytics nodes handle analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only and can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary). If you don't specify this parameter, no analytics nodes deploy to this region. See below
	AnalyticsSpecs AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput `pulumi:"analyticsSpecs"`
	// Configuration for the Collection of settings that configures auto-scaling information for the cluster. The values for the `autoScaling` parameter must be the same for every item in the `replicationSpecs` array. See below
	AutoScaling AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrInput `pulumi:"autoScaling"`
	// Cloud service provider on which you provision the host for a multi-tenant cluster. Use this only when a `providerName` is `TENANT` and `instanceSize` of a specs is `M2` or `M5`.
	BackingProviderName pulumi.StringPtrInput `pulumi:"backingProviderName"`
	// Hardware specifications for electable nodes in the region. Electable nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you do not specify this option, no electable nodes are deployed to the region. See below
	ElectableSpecs AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput `pulumi:"electableSpecs"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	// * If you have multiple `regionConfigs` objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is 7.
	// * If your region has set `region_configs.#.electable_specs.0.node_count` to 1 or higher, it must have a priority of exactly one (1) less than another region in the `replication_specs.#.region_configs.#` array. The highest-priority region must have a priority of 7. The lowest possible priority is 1.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Cloud service provider on which the servers are provisioned.
	// The possible values are:
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Hardware specifications for read-only nodes in the region. Read-only nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you don't specify this parameter, no read-only nodes are deployed to the region. See below
	ReadOnlySpecs AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput `pulumi:"readOnlySpecs"`
	// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (AdvancedClusterReplicationSpecRegionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecRegionConfigArgs) ToAdvancedClusterReplicationSpecRegionConfigOutput() AdvancedClusterReplicationSpecRegionConfigOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigArgs) ToAdvancedClusterReplicationSpecRegionConfigOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigOutput)
}

func (i AdvancedClusterReplicationSpecRegionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterReplicationSpecRegionConfig] {
	return pulumix.Output[AdvancedClusterReplicationSpecRegionConfig]{
		OutputState: i.ToAdvancedClusterReplicationSpecRegionConfigOutputWithContext(ctx).OutputState,
	}
}

// AdvancedClusterReplicationSpecRegionConfigArrayInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigArray and AdvancedClusterReplicationSpecRegionConfigArrayOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigArrayInput` via:
//
//	AdvancedClusterReplicationSpecRegionConfigArray{ AdvancedClusterReplicationSpecRegionConfigArgs{...} }
type AdvancedClusterReplicationSpecRegionConfigArrayInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigArrayOutput() AdvancedClusterReplicationSpecRegionConfigArrayOutput
	ToAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigArrayOutput
}

type AdvancedClusterReplicationSpecRegionConfigArray []AdvancedClusterReplicationSpecRegionConfigInput

func (AdvancedClusterReplicationSpecRegionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecRegionConfigArray) ToAdvancedClusterReplicationSpecRegionConfigArrayOutput() AdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigArray) ToAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigArrayOutput)
}

func (i AdvancedClusterReplicationSpecRegionConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedClusterReplicationSpecRegionConfig] {
	return pulumix.Output[[]AdvancedClusterReplicationSpecRegionConfig]{
		OutputState: i.ToAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type AdvancedClusterReplicationSpecRegionConfigOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigOutput) ToAdvancedClusterReplicationSpecRegionConfigOutput() AdvancedClusterReplicationSpecRegionConfigOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigOutput) ToAdvancedClusterReplicationSpecRegionConfigOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterReplicationSpecRegionConfig] {
	return pulumix.Output[AdvancedClusterReplicationSpecRegionConfig]{
		OutputState: o.OutputState,
	}
}

// Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. The values for the `analyticsAutoScaling` parameter must be the same for every item in the `replicationSpecs` array. See below
func (o AdvancedClusterReplicationSpecRegionConfigOutput) AnalyticsAutoScaling() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling {
		return v.AnalyticsAutoScaling
	}).(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput)
}

// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. Analytics nodes handle analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only and can never become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary). If you don't specify this parameter, no analytics nodes deploy to this region. See below
func (o AdvancedClusterReplicationSpecRegionConfigOutput) AnalyticsSpecs() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
		return v.AnalyticsSpecs
	}).(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

// Configuration for the Collection of settings that configures auto-scaling information for the cluster. The values for the `autoScaling` parameter must be the same for every item in the `replicationSpecs` array. See below
func (o AdvancedClusterReplicationSpecRegionConfigOutput) AutoScaling() AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) *AdvancedClusterReplicationSpecRegionConfigAutoScaling {
		return v.AutoScaling
	}).(AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput)
}

// Cloud service provider on which you provision the host for a multi-tenant cluster. Use this only when a `providerName` is `TENANT` and `instanceSize` of a specs is `M2` or `M5`.
func (o AdvancedClusterReplicationSpecRegionConfigOutput) BackingProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) *string { return v.BackingProviderName }).(pulumi.StringPtrOutput)
}

// Hardware specifications for electable nodes in the region. Electable nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you do not specify this option, no electable nodes are deployed to the region. See below
func (o AdvancedClusterReplicationSpecRegionConfigOutput) ElectableSpecs() AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) *AdvancedClusterReplicationSpecRegionConfigElectableSpecs {
		return v.ElectableSpecs
	}).(AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

// Election priority of the region. For regions with only read-only nodes, set this value to 0.
// * If you have multiple `regionConfigs` objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is 7.
// * If your region has set `region_configs.#.electable_specs.0.node_count` to 1 or higher, it must have a priority of exactly one (1) less than another region in the `replication_specs.#.region_configs.#` array. The highest-priority region must have a priority of 7. The lowest possible priority is 1.
func (o AdvancedClusterReplicationSpecRegionConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Cloud service provider on which the servers are provisioned.
// The possible values are:
func (o AdvancedClusterReplicationSpecRegionConfigOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Hardware specifications for read-only nodes in the region. Read-only nodes can become the [primary](https://docs.atlas.mongodb.com/reference/glossary/#std-term-primary) and can enable local reads. If you don't specify this parameter, no read-only nodes are deployed to the region. See below
func (o AdvancedClusterReplicationSpecRegionConfigOutput) ReadOnlySpecs() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
		return v.ReadOnlySpecs
	}).(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
func (o AdvancedClusterReplicationSpecRegionConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type AdvancedClusterReplicationSpecRegionConfigArrayOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigArrayOutput) ToAdvancedClusterReplicationSpecRegionConfigArrayOutput() AdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigArrayOutput) ToAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AdvancedClusterReplicationSpecRegionConfig] {
	return pulumix.Output[[]AdvancedClusterReplicationSpecRegionConfig]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterReplicationSpecRegionConfigArrayOutput) Index(i pulumi.IntInput) AdvancedClusterReplicationSpecRegionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdvancedClusterReplicationSpecRegionConfig {
		return vs[0].([]AdvancedClusterReplicationSpecRegionConfig)[vs[1].(int)]
	}).(AdvancedClusterReplicationSpecRegionConfigOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling struct {
	ComputeEnabled *bool `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` is true.
	ComputeMaxInstanceSize *string `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_scale_down_enabled` is true.
	ComputeMinInstanceSize *string `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_min_instance_size`.
	ComputeScaleDownEnabled *bool `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
	DiskGbEnabled *bool `pulumi:"diskGbEnabled"`
}

// AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs and AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput` via:
//
//	AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs{...}
type AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput
	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs struct {
	ComputeEnabled pulumi.BoolPtrInput `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` is true.
	ComputeMaxInstanceSize pulumi.StringPtrInput `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_scale_down_enabled` is true.
	ComputeMinInstanceSize pulumi.StringPtrInput `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_min_instance_size`.
	ComputeScaleDownEnabled pulumi.BoolPtrInput `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
	DiskGbEnabled pulumi.BoolPtrInput `pulumi:"diskGbEnabled"`
}

func (AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput)
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling] {
	return pulumix.Output[AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling]{
		OutputState: i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx).OutputState,
	}
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput).ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(ctx)
}

// AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs, AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtr and AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrInput` via:
//
//	        AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput
	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput
}

type advancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrType AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs

func AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtr(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrInput {
	return (*advancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrType)(v)
}

func (*advancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (i *advancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrType) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(context.Background())
}

func (i *advancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrType) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput)
}

func (i *advancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling] {
	return pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling]{
		OutputState: i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(ctx).OutputState,
	}
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return o.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling {
		return &v
	}).(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput)
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling] {
	return pulumix.Output[AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *bool { return v.ComputeEnabled }).(pulumi.BoolPtrOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeMaxInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *string {
		return v.ComputeMaxInstanceSize
	}).(pulumi.StringPtrOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_scale_down_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeMinInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *string {
		return v.ComputeMinInstanceSize
	}).(pulumi.StringPtrOutput)
}

// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_min_instance_size`.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeScaleDownEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *bool {
		return v.ComputeScaleDownEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) DiskGbEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *bool { return v.DiskGbEnabled }).(pulumi.BoolPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling] {
	return pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) Elem() AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling
		return ret
	}).(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput)
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ComputeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *bool {
		if v == nil {
			return nil
		}
		return v.ComputeEnabled
	}).(pulumi.BoolPtrOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ComputeMaxInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *string {
		if v == nil {
			return nil
		}
		return v.ComputeMaxInstanceSize
	}).(pulumi.StringPtrOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_scale_down_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ComputeMinInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *string {
		if v == nil {
			return nil
		}
		return v.ComputeMinInstanceSize
	}).(pulumi.StringPtrOutput)
}

// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.analytics_auto_scaling.0.compute_min_instance_size`.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) ComputeScaleDownEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *bool {
		if v == nil {
			return nil
		}
		return v.ComputeScaleDownEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag that indicates whether this cluster enables disk auto-scaling. This parameter defaults to true.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput) DiskGbEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) *bool {
		if v == nil {
			return nil
		}
		return v.DiskGbEnabled
	}).(pulumi.BoolPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs and AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput` via:
//
//	AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{...}
type AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput
	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput)
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs] {
	return pulumix.Output[AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs]{
		OutputState: i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx).OutputState,
	}
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput).ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx)
}

// AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs, AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtr and AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput` via:
//
//	        AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput
	ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput
}

type advancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs

func AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtr(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput {
	return (*advancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType)(v)
}

func (*advancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (i *advancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (i *advancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

func (i *advancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs] {
	return pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs]{
		OutputState: i.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx).OutputState,
	}
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
		return &v
	}).(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs] {
	return pulumix.Output[AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs]{
		OutputState: o.OutputState,
	}
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *string { return v.EbsVolumeType }).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) string { return v.InstanceSize }).(pulumi.StringOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs] {
	return pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) Elem() AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs
		return ret
	}).(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAutoScaling struct {
	ComputeEnabled *bool `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` is true.
	ComputeMaxInstanceSize *string `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled` is true.
	ComputeMinInstanceSize *string `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size`.
	ComputeScaleDownEnabled *bool `pulumi:"computeScaleDownEnabled"`
	DiskGbEnabled           *bool `pulumi:"diskGbEnabled"`
}

// AdvancedClusterReplicationSpecRegionConfigAutoScalingInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs and AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigAutoScalingInput` via:
//
//	AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs{...}
type AdvancedClusterReplicationSpecRegionConfigAutoScalingInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput
	ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput
}

type AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs struct {
	ComputeEnabled pulumi.BoolPtrInput `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` is true.
	ComputeMaxInstanceSize pulumi.StringPtrInput `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled` is true.
	ComputeMinInstanceSize pulumi.StringPtrInput `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size`.
	ComputeScaleDownEnabled pulumi.BoolPtrInput `pulumi:"computeScaleDownEnabled"`
	DiskGbEnabled           pulumi.BoolPtrInput `pulumi:"diskGbEnabled"`
}

func (AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput)
}

func (i AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterReplicationSpecRegionConfigAutoScaling] {
	return pulumix.Output[AdvancedClusterReplicationSpecRegionConfigAutoScaling]{
		OutputState: i.ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx).OutputState,
	}
}

func (i AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput).ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(ctx)
}

// AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs, AdvancedClusterReplicationSpecRegionConfigAutoScalingPtr and AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrInput` via:
//
//	        AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput
	ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput
}

type advancedClusterReplicationSpecRegionConfigAutoScalingPtrType AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs

func AdvancedClusterReplicationSpecRegionConfigAutoScalingPtr(v *AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrInput {
	return (*advancedClusterReplicationSpecRegionConfigAutoScalingPtrType)(v)
}

func (*advancedClusterReplicationSpecRegionConfigAutoScalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (i *advancedClusterReplicationSpecRegionConfigAutoScalingPtrType) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(context.Background())
}

func (i *advancedClusterReplicationSpecRegionConfigAutoScalingPtrType) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput)
}

func (i *advancedClusterReplicationSpecRegionConfigAutoScalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigAutoScaling] {
	return pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigAutoScaling]{
		OutputState: i.ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(ctx).OutputState,
	}
}

type AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return o.ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterReplicationSpecRegionConfigAutoScaling) *AdvancedClusterReplicationSpecRegionConfigAutoScaling {
		return &v
	}).(AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput)
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterReplicationSpecRegionConfigAutoScaling] {
	return pulumix.Output[AdvancedClusterReplicationSpecRegionConfigAutoScaling]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAutoScaling) *bool { return v.ComputeEnabled }).(pulumi.BoolPtrOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeMaxInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAutoScaling) *string { return v.ComputeMaxInstanceSize }).(pulumi.StringPtrOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeMinInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAutoScaling) *string { return v.ComputeMinInstanceSize }).(pulumi.StringPtrOutput)
}

// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size`.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeScaleDownEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAutoScaling) *bool { return v.ComputeScaleDownEnabled }).(pulumi.BoolPtrOutput)
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) DiskGbEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigAutoScaling) *bool { return v.DiskGbEnabled }).(pulumi.BoolPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput() AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigAutoScaling] {
	return pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigAutoScaling]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) Elem() AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAutoScaling) AdvancedClusterReplicationSpecRegionConfigAutoScaling {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterReplicationSpecRegionConfigAutoScaling
		return ret
	}).(AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput)
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ComputeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAutoScaling) *bool {
		if v == nil {
			return nil
		}
		return v.ComputeEnabled
	}).(pulumi.BoolPtrOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ComputeMaxInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAutoScaling) *string {
		if v == nil {
			return nil
		}
		return v.ComputeMaxInstanceSize
	}).(pulumi.StringPtrOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10). Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_scale_down_enabled` is true.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ComputeMinInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAutoScaling) *string {
		if v == nil {
			return nil
		}
		return v.ComputeMinInstanceSize
	}).(pulumi.StringPtrOutput)
}

// Flag that indicates whether the instance size may scale down. Atlas requires this parameter if `replication_specs.#.region_configs.#.auto_scaling.0.compute_enabled` : true. If you enable this option, specify a value for `replication_specs.#.region_configs.#.auto_scaling.0.compute_min_instance_size`.
func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) ComputeScaleDownEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAutoScaling) *bool {
		if v == nil {
			return nil
		}
		return v.ComputeScaleDownEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput) DiskGbEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigAutoScaling) *bool {
		if v == nil {
			return nil
		}
		return v.DiskGbEnabled
	}).(pulumi.BoolPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigElectableSpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// AdvancedClusterReplicationSpecRegionConfigElectableSpecsInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs and AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigElectableSpecsInput` via:
//
//	AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{...}
type AdvancedClusterReplicationSpecRegionConfigElectableSpecsInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput
	ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput
}

type AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput)
}

func (i AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterReplicationSpecRegionConfigElectableSpecs] {
	return pulumix.Output[AdvancedClusterReplicationSpecRegionConfigElectableSpecs]{
		OutputState: i.ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx).OutputState,
	}
}

func (i AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput).ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx)
}

// AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs, AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtr and AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput` via:
//
//	        AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput
	ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput
}

type advancedClusterReplicationSpecRegionConfigElectableSpecsPtrType AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs

func AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtr(v *AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput {
	return (*advancedClusterReplicationSpecRegionConfigElectableSpecsPtrType)(v)
}

func (*advancedClusterReplicationSpecRegionConfigElectableSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (i *advancedClusterReplicationSpecRegionConfigElectableSpecsPtrType) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (i *advancedClusterReplicationSpecRegionConfigElectableSpecsPtrType) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

func (i *advancedClusterReplicationSpecRegionConfigElectableSpecsPtrType) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigElectableSpecs] {
	return pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigElectableSpecs]{
		OutputState: i.ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx).OutputState,
	}
}

type AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *AdvancedClusterReplicationSpecRegionConfigElectableSpecs {
		return &v
	}).(AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterReplicationSpecRegionConfigElectableSpecs] {
	return pulumix.Output[AdvancedClusterReplicationSpecRegionConfigElectableSpecs]{
		OutputState: o.OutputState,
	}
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *string { return v.EbsVolumeType }).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigElectableSpecs) string { return v.InstanceSize }).(pulumi.StringOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigElectableSpecs] {
	return pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigElectableSpecs]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) Elem() AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigElectableSpecs) AdvancedClusterReplicationSpecRegionConfigElectableSpecs {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterReplicationSpecRegionConfigElectableSpecs
		return ret
	}).(AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs and AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput` via:
//
//	AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{...}
type AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput
	ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput
}

type AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (i AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput)
}

func (i AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs] {
	return pulumix.Output[AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs]{
		OutputState: i.ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx).OutputState,
	}
}

func (i AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (i AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput).ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx)
}

// AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput is an input type that accepts AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs, AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtr and AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput values.
// You can construct a concrete instance of `AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput` via:
//
//	        AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{...}
//
//	or:
//
//	        nil
type AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput interface {
	pulumi.Input

	ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput
	ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput
}

type advancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs

func AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtr(v *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput {
	return (*advancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType)(v)
}

func (*advancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (i *advancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return i.ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (i *advancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

func (i *advancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs] {
	return pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs]{
		OutputState: i.ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx).OutputState,
	}
}

type AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
		return &v
	}).(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToOutput(ctx context.Context) pulumix.Output[AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs] {
	return pulumix.Output[AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs]{
		OutputState: o.OutputState,
	}
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *string { return v.EbsVolumeType }).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) string { return v.InstanceSize }).(pulumi.StringOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput struct{ *pulumi.OutputState }

func (AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs] {
	return pulumix.Output[*AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs]{
		OutputState: o.OutputState,
	}
}

func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) Elem() AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
		if v != nil {
			return *v
		}
		var ret AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs
		return ret
	}).(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster.
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster. Set only if you selected AWS as your cloud service provider. You can't set this parameter for a multi-cloud cluster. Valid values are:
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region. Each instance size has a default storage and memory capacity. The instance size you select applies to all the data-bearing hosts in your instance size.
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type AlertConfigurationMatcher struct {
	// Name of the field in the target object to match on.
	//
	// | Host alerts         | Replica set alerts  |  Sharded cluster alerts |
	// |:----------           |:-------------       |:------                 |
	// | `TYPE_NAME`         | `REPLICA_SET_NAME`  | `CLUSTER_NAME`          |
	// | `HOSTNAME`          | `SHARD_NAME`        | `SHARD_NAME`            |
	// | `PORT`              | `CLUSTER_NAME`      |                         |
	// | `HOSTNAME_AND_PORT` |                     |                         |
	// | `REPLICA_SET_NAME`  |                     |                         |
	//
	// All other types of alerts do not support matchers.
	FieldName *string `pulumi:"fieldName"`
	// The operator to test the field’s value.
	// Accepted values are:
	Operator *string `pulumi:"operator"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	Value *string `pulumi:"value"`
}

// AlertConfigurationMatcherInput is an input type that accepts AlertConfigurationMatcherArgs and AlertConfigurationMatcherOutput values.
// You can construct a concrete instance of `AlertConfigurationMatcherInput` via:
//
//	AlertConfigurationMatcherArgs{...}
type AlertConfigurationMatcherInput interface {
	pulumi.Input

	ToAlertConfigurationMatcherOutput() AlertConfigurationMatcherOutput
	ToAlertConfigurationMatcherOutputWithContext(context.Context) AlertConfigurationMatcherOutput
}

type AlertConfigurationMatcherArgs struct {
	// Name of the field in the target object to match on.
	//
	// | Host alerts         | Replica set alerts  |  Sharded cluster alerts |
	// |:----------           |:-------------       |:------                 |
	// | `TYPE_NAME`         | `REPLICA_SET_NAME`  | `CLUSTER_NAME`          |
	// | `HOSTNAME`          | `SHARD_NAME`        | `SHARD_NAME`            |
	// | `PORT`              | `CLUSTER_NAME`      |                         |
	// | `HOSTNAME_AND_PORT` |                     |                         |
	// | `REPLICA_SET_NAME`  |                     |                         |
	//
	// All other types of alerts do not support matchers.
	FieldName pulumi.StringPtrInput `pulumi:"fieldName"`
	// The operator to test the field’s value.
	// Accepted values are:
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AlertConfigurationMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMatcher)(nil)).Elem()
}

func (i AlertConfigurationMatcherArgs) ToAlertConfigurationMatcherOutput() AlertConfigurationMatcherOutput {
	return i.ToAlertConfigurationMatcherOutputWithContext(context.Background())
}

func (i AlertConfigurationMatcherArgs) ToAlertConfigurationMatcherOutputWithContext(ctx context.Context) AlertConfigurationMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMatcherOutput)
}

func (i AlertConfigurationMatcherArgs) ToOutput(ctx context.Context) pulumix.Output[AlertConfigurationMatcher] {
	return pulumix.Output[AlertConfigurationMatcher]{
		OutputState: i.ToAlertConfigurationMatcherOutputWithContext(ctx).OutputState,
	}
}

// AlertConfigurationMatcherArrayInput is an input type that accepts AlertConfigurationMatcherArray and AlertConfigurationMatcherArrayOutput values.
// You can construct a concrete instance of `AlertConfigurationMatcherArrayInput` via:
//
//	AlertConfigurationMatcherArray{ AlertConfigurationMatcherArgs{...} }
type AlertConfigurationMatcherArrayInput interface {
	pulumi.Input

	ToAlertConfigurationMatcherArrayOutput() AlertConfigurationMatcherArrayOutput
	ToAlertConfigurationMatcherArrayOutputWithContext(context.Context) AlertConfigurationMatcherArrayOutput
}

type AlertConfigurationMatcherArray []AlertConfigurationMatcherInput

func (AlertConfigurationMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationMatcher)(nil)).Elem()
}

func (i AlertConfigurationMatcherArray) ToAlertConfigurationMatcherArrayOutput() AlertConfigurationMatcherArrayOutput {
	return i.ToAlertConfigurationMatcherArrayOutputWithContext(context.Background())
}

func (i AlertConfigurationMatcherArray) ToAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) AlertConfigurationMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMatcherArrayOutput)
}

func (i AlertConfigurationMatcherArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertConfigurationMatcher] {
	return pulumix.Output[[]AlertConfigurationMatcher]{
		OutputState: i.ToAlertConfigurationMatcherArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertConfigurationMatcherOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMatcher)(nil)).Elem()
}

func (o AlertConfigurationMatcherOutput) ToAlertConfigurationMatcherOutput() AlertConfigurationMatcherOutput {
	return o
}

func (o AlertConfigurationMatcherOutput) ToAlertConfigurationMatcherOutputWithContext(ctx context.Context) AlertConfigurationMatcherOutput {
	return o
}

func (o AlertConfigurationMatcherOutput) ToOutput(ctx context.Context) pulumix.Output[AlertConfigurationMatcher] {
	return pulumix.Output[AlertConfigurationMatcher]{
		OutputState: o.OutputState,
	}
}

// Name of the field in the target object to match on.
//
// | Host alerts         | Replica set alerts  |  Sharded cluster alerts |
// |:----------           |:-------------       |:------                 |
// | `TYPE_NAME`         | `REPLICA_SET_NAME`  | `CLUSTER_NAME`          |
// | `HOSTNAME`          | `SHARD_NAME`        | `SHARD_NAME`            |
// | `PORT`              | `CLUSTER_NAME`      |                         |
// | `HOSTNAME_AND_PORT` |                     |                         |
// | `REPLICA_SET_NAME`  |                     |                         |
//
// All other types of alerts do not support matchers.
func (o AlertConfigurationMatcherOutput) FieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMatcher) *string { return v.FieldName }).(pulumi.StringPtrOutput)
}

// The operator to test the field’s value.
// Accepted values are:
func (o AlertConfigurationMatcherOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMatcher) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
func (o AlertConfigurationMatcherOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMatcher) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlertConfigurationMatcherArrayOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationMatcher)(nil)).Elem()
}

func (o AlertConfigurationMatcherArrayOutput) ToAlertConfigurationMatcherArrayOutput() AlertConfigurationMatcherArrayOutput {
	return o
}

func (o AlertConfigurationMatcherArrayOutput) ToAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) AlertConfigurationMatcherArrayOutput {
	return o
}

func (o AlertConfigurationMatcherArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertConfigurationMatcher] {
	return pulumix.Output[[]AlertConfigurationMatcher]{
		OutputState: o.OutputState,
	}
}

func (o AlertConfigurationMatcherArrayOutput) Index(i pulumi.IntInput) AlertConfigurationMatcherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConfigurationMatcher {
		return vs[0].([]AlertConfigurationMatcher)[vs[1].(int)]
	}).(AlertConfigurationMatcherOutput)
}

type AlertConfigurationMetricThresholdConfig struct {
	// Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
	MetricName *string `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode *string `pulumi:"mode"`
	// The operator to test the field’s value.
	// Accepted values are:
	Operator *string `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold *float64 `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units *string `pulumi:"units"`
}

// AlertConfigurationMetricThresholdConfigInput is an input type that accepts AlertConfigurationMetricThresholdConfigArgs and AlertConfigurationMetricThresholdConfigOutput values.
// You can construct a concrete instance of `AlertConfigurationMetricThresholdConfigInput` via:
//
//	AlertConfigurationMetricThresholdConfigArgs{...}
type AlertConfigurationMetricThresholdConfigInput interface {
	pulumi.Input

	ToAlertConfigurationMetricThresholdConfigOutput() AlertConfigurationMetricThresholdConfigOutput
	ToAlertConfigurationMetricThresholdConfigOutputWithContext(context.Context) AlertConfigurationMetricThresholdConfigOutput
}

type AlertConfigurationMetricThresholdConfigArgs struct {
	// Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The operator to test the field’s value.
	// Accepted values are:
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units pulumi.StringPtrInput `pulumi:"units"`
}

func (AlertConfigurationMetricThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (i AlertConfigurationMetricThresholdConfigArgs) ToAlertConfigurationMetricThresholdConfigOutput() AlertConfigurationMetricThresholdConfigOutput {
	return i.ToAlertConfigurationMetricThresholdConfigOutputWithContext(context.Background())
}

func (i AlertConfigurationMetricThresholdConfigArgs) ToAlertConfigurationMetricThresholdConfigOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMetricThresholdConfigOutput)
}

func (i AlertConfigurationMetricThresholdConfigArgs) ToOutput(ctx context.Context) pulumix.Output[AlertConfigurationMetricThresholdConfig] {
	return pulumix.Output[AlertConfigurationMetricThresholdConfig]{
		OutputState: i.ToAlertConfigurationMetricThresholdConfigOutputWithContext(ctx).OutputState,
	}
}

func (i AlertConfigurationMetricThresholdConfigArgs) ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput {
	return i.ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationMetricThresholdConfigArgs) ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMetricThresholdConfigOutput).ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx)
}

// AlertConfigurationMetricThresholdConfigPtrInput is an input type that accepts AlertConfigurationMetricThresholdConfigArgs, AlertConfigurationMetricThresholdConfigPtr and AlertConfigurationMetricThresholdConfigPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationMetricThresholdConfigPtrInput` via:
//
//	        AlertConfigurationMetricThresholdConfigArgs{...}
//
//	or:
//
//	        nil
type AlertConfigurationMetricThresholdConfigPtrInput interface {
	pulumi.Input

	ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput
	ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(context.Context) AlertConfigurationMetricThresholdConfigPtrOutput
}

type alertConfigurationMetricThresholdConfigPtrType AlertConfigurationMetricThresholdConfigArgs

func AlertConfigurationMetricThresholdConfigPtr(v *AlertConfigurationMetricThresholdConfigArgs) AlertConfigurationMetricThresholdConfigPtrInput {
	return (*alertConfigurationMetricThresholdConfigPtrType)(v)
}

func (*alertConfigurationMetricThresholdConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (i *alertConfigurationMetricThresholdConfigPtrType) ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput {
	return i.ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationMetricThresholdConfigPtrType) ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMetricThresholdConfigPtrOutput)
}

func (i *alertConfigurationMetricThresholdConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*AlertConfigurationMetricThresholdConfig] {
	return pulumix.Output[*AlertConfigurationMetricThresholdConfig]{
		OutputState: i.ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type AlertConfigurationMetricThresholdConfigOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMetricThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (o AlertConfigurationMetricThresholdConfigOutput) ToAlertConfigurationMetricThresholdConfigOutput() AlertConfigurationMetricThresholdConfigOutput {
	return o
}

func (o AlertConfigurationMetricThresholdConfigOutput) ToAlertConfigurationMetricThresholdConfigOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigOutput {
	return o
}

func (o AlertConfigurationMetricThresholdConfigOutput) ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput {
	return o.ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationMetricThresholdConfigOutput) ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfigurationMetricThresholdConfig) *AlertConfigurationMetricThresholdConfig {
		return &v
	}).(AlertConfigurationMetricThresholdConfigPtrOutput)
}

func (o AlertConfigurationMetricThresholdConfigOutput) ToOutput(ctx context.Context) pulumix.Output[AlertConfigurationMetricThresholdConfig] {
	return pulumix.Output[AlertConfigurationMetricThresholdConfig]{
		OutputState: o.OutputState,
	}
}

// Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
func (o AlertConfigurationMetricThresholdConfigOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// This must be set to AVERAGE. Atlas computes the current metric value as an average.
func (o AlertConfigurationMetricThresholdConfigOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The operator to test the field’s value.
// Accepted values are:
func (o AlertConfigurationMetricThresholdConfigOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o AlertConfigurationMetricThresholdConfigOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

// The units for the threshold value. Depends on the type of metric.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
func (o AlertConfigurationMetricThresholdConfigOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *string { return v.Units }).(pulumi.StringPtrOutput)
}

type AlertConfigurationMetricThresholdConfigPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMetricThresholdConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (o AlertConfigurationMetricThresholdConfigPtrOutput) ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput {
	return o
}

func (o AlertConfigurationMetricThresholdConfigPtrOutput) ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigPtrOutput {
	return o
}

func (o AlertConfigurationMetricThresholdConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AlertConfigurationMetricThresholdConfig] {
	return pulumix.Output[*AlertConfigurationMetricThresholdConfig]{
		OutputState: o.OutputState,
	}
}

func (o AlertConfigurationMetricThresholdConfigPtrOutput) Elem() AlertConfigurationMetricThresholdConfigOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) AlertConfigurationMetricThresholdConfig {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationMetricThresholdConfig
		return ret
	}).(AlertConfigurationMetricThresholdConfigOutput)
}

// Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
func (o AlertConfigurationMetricThresholdConfigPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

// This must be set to AVERAGE. Atlas computes the current metric value as an average.
func (o AlertConfigurationMetricThresholdConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The operator to test the field’s value.
// Accepted values are:
func (o AlertConfigurationMetricThresholdConfigPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o AlertConfigurationMetricThresholdConfigPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

// The units for the threshold value. Depends on the type of metric.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
func (o AlertConfigurationMetricThresholdConfigPtrOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Units
	}).(pulumi.StringPtrOutput)
}

type AlertConfigurationNotification struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken *string `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName *string `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey *string `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion *string `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin *int `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress *string `pulumi:"emailAddress"`
	// Flag indicating email notifications should be sent. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	EmailEnabled *bool `pulumi:"emailEnabled"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5. **NOTE** `PAGER_DUTY`, `VICTOR_OPS`, and `OPS_GENIE` notifications do not return this value. The notification interval must be configured and managed within each external service.
	IntervalMin *int `pulumi:"intervalMin"`
	// Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB Cloud needs to send this notification via Microsoft Teams. Required if `typeName` is `MICROSOFT_TEAMS`. If the URL later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.
	MicrosoftTeamsWebhookUrl *string `pulumi:"microsoftTeamsWebhookUrl"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber *string `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey *string `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion *string `pulumi:"opsGenieRegion"`
	// Optional. One or more roles that receive the configured alert. If you include this field, Atlas sends alerts only to users assigned the roles you specify in the array. If you omit this field, Atlas sends alerts to users assigned any role. This parameter is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	// Accepted values are:
	//
	// | Project roles                   | Organization roles  |
	// |:----------                      |:-----------         |
	// | `GROUP_CHARTS_ADMIN`            | `ORG_OWNER`         |
	// | `GROUP_CLUSTER_MANAGER`         | `ORG_MEMBER`        |
	// | `GROUP_DATA_ACCESS_ADMIN`       | `ORG_GROUP_CREATOR` |
	// | `GROUP_DATA_ACCESS_READ_ONLY`   | `ORG_BILLING_ADMIN` |
	// | `GROUP_DATA_ACCESS_READ_WRITE`  | `ORG_READ_ONLY`     |
	// | `GROUP_OWNER`                   |                     |
	// | `GROUP_READ_ONLY`               |                     |
	Roles []string `pulumi:"roles"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey *string `pulumi:"serviceKey"`
	// Flag indicating if text message notifications should be sent to this user's mobile phone. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	SmsEnabled *bool `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId *string `pulumi:"teamId"`
	// Label for the team that receives this notification.
	TeamName *string `pulumi:"teamName"`
	// Type of alert notification.
	// Accepted values are:
	TypeName *string `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username *string `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey *string `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey *string `pulumi:"victorOpsRoutingKey"`
	// Optional authentication secret for the `WEBHOOK` notifications type.
	WebhookSecret *string `pulumi:"webhookSecret"`
	// Target URL  for the `WEBHOOK` notifications type.
	WebhookUrl *string `pulumi:"webhookUrl"`
}

// AlertConfigurationNotificationInput is an input type that accepts AlertConfigurationNotificationArgs and AlertConfigurationNotificationOutput values.
// You can construct a concrete instance of `AlertConfigurationNotificationInput` via:
//
//	AlertConfigurationNotificationArgs{...}
type AlertConfigurationNotificationInput interface {
	pulumi.Input

	ToAlertConfigurationNotificationOutput() AlertConfigurationNotificationOutput
	ToAlertConfigurationNotificationOutputWithContext(context.Context) AlertConfigurationNotificationOutput
}

type AlertConfigurationNotificationArgs struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken pulumi.StringPtrInput `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName pulumi.StringPtrInput `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey pulumi.StringPtrInput `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion pulumi.StringPtrInput `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin pulumi.IntPtrInput `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress pulumi.StringPtrInput `pulumi:"emailAddress"`
	// Flag indicating email notifications should be sent. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	EmailEnabled pulumi.BoolPtrInput `pulumi:"emailEnabled"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5. **NOTE** `PAGER_DUTY`, `VICTOR_OPS`, and `OPS_GENIE` notifications do not return this value. The notification interval must be configured and managed within each external service.
	IntervalMin pulumi.IntPtrInput `pulumi:"intervalMin"`
	// Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB Cloud needs to send this notification via Microsoft Teams. Required if `typeName` is `MICROSOFT_TEAMS`. If the URL later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.
	MicrosoftTeamsWebhookUrl pulumi.StringPtrInput `pulumi:"microsoftTeamsWebhookUrl"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber pulumi.StringPtrInput `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey pulumi.StringPtrInput `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion pulumi.StringPtrInput `pulumi:"opsGenieRegion"`
	// Optional. One or more roles that receive the configured alert. If you include this field, Atlas sends alerts only to users assigned the roles you specify in the array. If you omit this field, Atlas sends alerts to users assigned any role. This parameter is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	// Accepted values are:
	//
	// | Project roles                   | Organization roles  |
	// |:----------                      |:-----------         |
	// | `GROUP_CHARTS_ADMIN`            | `ORG_OWNER`         |
	// | `GROUP_CLUSTER_MANAGER`         | `ORG_MEMBER`        |
	// | `GROUP_DATA_ACCESS_ADMIN`       | `ORG_GROUP_CREATOR` |
	// | `GROUP_DATA_ACCESS_READ_ONLY`   | `ORG_BILLING_ADMIN` |
	// | `GROUP_DATA_ACCESS_READ_WRITE`  | `ORG_READ_ONLY`     |
	// | `GROUP_OWNER`                   |                     |
	// | `GROUP_READ_ONLY`               |                     |
	Roles pulumi.StringArrayInput `pulumi:"roles"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey pulumi.StringPtrInput `pulumi:"serviceKey"`
	// Flag indicating if text message notifications should be sent to this user's mobile phone. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	SmsEnabled pulumi.BoolPtrInput `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
	// Label for the team that receives this notification.
	TeamName pulumi.StringPtrInput `pulumi:"teamName"`
	// Type of alert notification.
	// Accepted values are:
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey pulumi.StringPtrInput `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey pulumi.StringPtrInput `pulumi:"victorOpsRoutingKey"`
	// Optional authentication secret for the `WEBHOOK` notifications type.
	WebhookSecret pulumi.StringPtrInput `pulumi:"webhookSecret"`
	// Target URL  for the `WEBHOOK` notifications type.
	WebhookUrl pulumi.StringPtrInput `pulumi:"webhookUrl"`
}

func (AlertConfigurationNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationNotification)(nil)).Elem()
}

func (i AlertConfigurationNotificationArgs) ToAlertConfigurationNotificationOutput() AlertConfigurationNotificationOutput {
	return i.ToAlertConfigurationNotificationOutputWithContext(context.Background())
}

func (i AlertConfigurationNotificationArgs) ToAlertConfigurationNotificationOutputWithContext(ctx context.Context) AlertConfigurationNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationNotificationOutput)
}

func (i AlertConfigurationNotificationArgs) ToOutput(ctx context.Context) pulumix.Output[AlertConfigurationNotification] {
	return pulumix.Output[AlertConfigurationNotification]{
		OutputState: i.ToAlertConfigurationNotificationOutputWithContext(ctx).OutputState,
	}
}

// AlertConfigurationNotificationArrayInput is an input type that accepts AlertConfigurationNotificationArray and AlertConfigurationNotificationArrayOutput values.
// You can construct a concrete instance of `AlertConfigurationNotificationArrayInput` via:
//
//	AlertConfigurationNotificationArray{ AlertConfigurationNotificationArgs{...} }
type AlertConfigurationNotificationArrayInput interface {
	pulumi.Input

	ToAlertConfigurationNotificationArrayOutput() AlertConfigurationNotificationArrayOutput
	ToAlertConfigurationNotificationArrayOutputWithContext(context.Context) AlertConfigurationNotificationArrayOutput
}

type AlertConfigurationNotificationArray []AlertConfigurationNotificationInput

func (AlertConfigurationNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationNotification)(nil)).Elem()
}

func (i AlertConfigurationNotificationArray) ToAlertConfigurationNotificationArrayOutput() AlertConfigurationNotificationArrayOutput {
	return i.ToAlertConfigurationNotificationArrayOutputWithContext(context.Background())
}

func (i AlertConfigurationNotificationArray) ToAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) AlertConfigurationNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationNotificationArrayOutput)
}

func (i AlertConfigurationNotificationArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertConfigurationNotification] {
	return pulumix.Output[[]AlertConfigurationNotification]{
		OutputState: i.ToAlertConfigurationNotificationArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertConfigurationNotificationOutput struct{ *pulumi.OutputState }

func (AlertConfigurationNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationNotification)(nil)).Elem()
}

func (o AlertConfigurationNotificationOutput) ToAlertConfigurationNotificationOutput() AlertConfigurationNotificationOutput {
	return o
}

func (o AlertConfigurationNotificationOutput) ToAlertConfigurationNotificationOutputWithContext(ctx context.Context) AlertConfigurationNotificationOutput {
	return o
}

func (o AlertConfigurationNotificationOutput) ToOutput(ctx context.Context) pulumix.Output[AlertConfigurationNotification] {
	return pulumix.Output[AlertConfigurationNotification]{
		OutputState: o.OutputState,
	}
}

// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o AlertConfigurationNotificationOutput) ApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.ApiToken }).(pulumi.StringPtrOutput)
}

// Slack channel name. Required for the SLACK notifications type.
func (o AlertConfigurationNotificationOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.ChannelName }).(pulumi.StringPtrOutput)
}

// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
func (o AlertConfigurationNotificationOutput) DatadogApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.DatadogApiKey }).(pulumi.StringPtrOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
func (o AlertConfigurationNotificationOutput) DatadogRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.DatadogRegion }).(pulumi.StringPtrOutput)
}

// Number of minutes to wait after an alert condition is detected before sending out the first notification.
func (o AlertConfigurationNotificationOutput) DelayMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *int { return v.DelayMin }).(pulumi.IntPtrOutput)
}

// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
func (o AlertConfigurationNotificationOutput) EmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.EmailAddress }).(pulumi.StringPtrOutput)
}

// Flag indicating email notifications should be sent. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
func (o AlertConfigurationNotificationOutput) EmailEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *bool { return v.EmailEnabled }).(pulumi.BoolPtrOutput)
}

// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5. **NOTE** `PAGER_DUTY`, `VICTOR_OPS`, and `OPS_GENIE` notifications do not return this value. The notification interval must be configured and managed within each external service.
func (o AlertConfigurationNotificationOutput) IntervalMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *int { return v.IntervalMin }).(pulumi.IntPtrOutput)
}

// Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB Cloud needs to send this notification via Microsoft Teams. Required if `typeName` is `MICROSOFT_TEAMS`. If the URL later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.
func (o AlertConfigurationNotificationOutput) MicrosoftTeamsWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.MicrosoftTeamsWebhookUrl }).(pulumi.StringPtrOutput)
}

// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
func (o AlertConfigurationNotificationOutput) MobileNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.MobileNumber }).(pulumi.StringPtrOutput)
}

// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o AlertConfigurationNotificationOutput) OpsGenieApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.OpsGenieApiKey }).(pulumi.StringPtrOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
func (o AlertConfigurationNotificationOutput) OpsGenieRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.OpsGenieRegion }).(pulumi.StringPtrOutput)
}

// Optional. One or more roles that receive the configured alert. If you include this field, Atlas sends alerts only to users assigned the roles you specify in the array. If you omit this field, Atlas sends alerts to users assigned any role. This parameter is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
// Accepted values are:
//
// | Project roles                   | Organization roles  |
// |:----------                      |:-----------         |
// | `GROUP_CHARTS_ADMIN`            | `ORG_OWNER`         |
// | `GROUP_CLUSTER_MANAGER`         | `ORG_MEMBER`        |
// | `GROUP_DATA_ACCESS_ADMIN`       | `ORG_GROUP_CREATOR` |
// | `GROUP_DATA_ACCESS_READ_ONLY`   | `ORG_BILLING_ADMIN` |
// | `GROUP_DATA_ACCESS_READ_WRITE`  | `ORG_READ_ONLY`     |
// | `GROUP_OWNER`                   |                     |
// | `GROUP_READ_ONLY`               |                     |
func (o AlertConfigurationNotificationOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o AlertConfigurationNotificationOutput) ServiceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.ServiceKey }).(pulumi.StringPtrOutput)
}

// Flag indicating if text message notifications should be sent to this user's mobile phone. This flag is only valid if `typeName` is set to `ORG`, `GROUP`, or `USER`.
func (o AlertConfigurationNotificationOutput) SmsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *bool { return v.SmsEnabled }).(pulumi.BoolPtrOutput)
}

// Unique identifier of a team.
func (o AlertConfigurationNotificationOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

// Label for the team that receives this notification.
func (o AlertConfigurationNotificationOutput) TeamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.TeamName }).(pulumi.StringPtrOutput)
}

// Type of alert notification.
// Accepted values are:
func (o AlertConfigurationNotificationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
func (o AlertConfigurationNotificationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o AlertConfigurationNotificationOutput) VictorOpsApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.VictorOpsApiKey }).(pulumi.StringPtrOutput)
}

// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o AlertConfigurationNotificationOutput) VictorOpsRoutingKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.VictorOpsRoutingKey }).(pulumi.StringPtrOutput)
}

// Optional authentication secret for the `WEBHOOK` notifications type.
func (o AlertConfigurationNotificationOutput) WebhookSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.WebhookSecret }).(pulumi.StringPtrOutput)
}

// Target URL  for the `WEBHOOK` notifications type.
func (o AlertConfigurationNotificationOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.WebhookUrl }).(pulumi.StringPtrOutput)
}

type AlertConfigurationNotificationArrayOutput struct{ *pulumi.OutputState }

func (AlertConfigurationNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationNotification)(nil)).Elem()
}

func (o AlertConfigurationNotificationArrayOutput) ToAlertConfigurationNotificationArrayOutput() AlertConfigurationNotificationArrayOutput {
	return o
}

func (o AlertConfigurationNotificationArrayOutput) ToAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) AlertConfigurationNotificationArrayOutput {
	return o
}

func (o AlertConfigurationNotificationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertConfigurationNotification] {
	return pulumix.Output[[]AlertConfigurationNotification]{
		OutputState: o.OutputState,
	}
}

func (o AlertConfigurationNotificationArrayOutput) Index(i pulumi.IntInput) AlertConfigurationNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConfigurationNotification {
		return vs[0].([]AlertConfigurationNotification)[vs[1].(int)]
	}).(AlertConfigurationNotificationOutput)
}

type AlertConfigurationThresholdConfig struct {
	// The operator to test the field’s value.
	// Accepted values are:
	Operator *string `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold *float64 `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units *string `pulumi:"units"`
}

// AlertConfigurationThresholdConfigInput is an input type that accepts AlertConfigurationThresholdConfigArgs and AlertConfigurationThresholdConfigOutput values.
// You can construct a concrete instance of `AlertConfigurationThresholdConfigInput` via:
//
//	AlertConfigurationThresholdConfigArgs{...}
type AlertConfigurationThresholdConfigInput interface {
	pulumi.Input

	ToAlertConfigurationThresholdConfigOutput() AlertConfigurationThresholdConfigOutput
	ToAlertConfigurationThresholdConfigOutputWithContext(context.Context) AlertConfigurationThresholdConfigOutput
}

type AlertConfigurationThresholdConfigArgs struct {
	// The operator to test the field’s value.
	// Accepted values are:
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units pulumi.StringPtrInput `pulumi:"units"`
}

func (AlertConfigurationThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationThresholdConfig)(nil)).Elem()
}

func (i AlertConfigurationThresholdConfigArgs) ToAlertConfigurationThresholdConfigOutput() AlertConfigurationThresholdConfigOutput {
	return i.ToAlertConfigurationThresholdConfigOutputWithContext(context.Background())
}

func (i AlertConfigurationThresholdConfigArgs) ToAlertConfigurationThresholdConfigOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationThresholdConfigOutput)
}

func (i AlertConfigurationThresholdConfigArgs) ToOutput(ctx context.Context) pulumix.Output[AlertConfigurationThresholdConfig] {
	return pulumix.Output[AlertConfigurationThresholdConfig]{
		OutputState: i.ToAlertConfigurationThresholdConfigOutputWithContext(ctx).OutputState,
	}
}

func (i AlertConfigurationThresholdConfigArgs) ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput {
	return i.ToAlertConfigurationThresholdConfigPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationThresholdConfigArgs) ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationThresholdConfigOutput).ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx)
}

// AlertConfigurationThresholdConfigPtrInput is an input type that accepts AlertConfigurationThresholdConfigArgs, AlertConfigurationThresholdConfigPtr and AlertConfigurationThresholdConfigPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationThresholdConfigPtrInput` via:
//
//	        AlertConfigurationThresholdConfigArgs{...}
//
//	or:
//
//	        nil
type AlertConfigurationThresholdConfigPtrInput interface {
	pulumi.Input

	ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput
	ToAlertConfigurationThresholdConfigPtrOutputWithContext(context.Context) AlertConfigurationThresholdConfigPtrOutput
}

type alertConfigurationThresholdConfigPtrType AlertConfigurationThresholdConfigArgs

func AlertConfigurationThresholdConfigPtr(v *AlertConfigurationThresholdConfigArgs) AlertConfigurationThresholdConfigPtrInput {
	return (*alertConfigurationThresholdConfigPtrType)(v)
}

func (*alertConfigurationThresholdConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationThresholdConfig)(nil)).Elem()
}

func (i *alertConfigurationThresholdConfigPtrType) ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput {
	return i.ToAlertConfigurationThresholdConfigPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationThresholdConfigPtrType) ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationThresholdConfigPtrOutput)
}

func (i *alertConfigurationThresholdConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*AlertConfigurationThresholdConfig] {
	return pulumix.Output[*AlertConfigurationThresholdConfig]{
		OutputState: i.ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type AlertConfigurationThresholdConfigOutput struct{ *pulumi.OutputState }

func (AlertConfigurationThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationThresholdConfig)(nil)).Elem()
}

func (o AlertConfigurationThresholdConfigOutput) ToAlertConfigurationThresholdConfigOutput() AlertConfigurationThresholdConfigOutput {
	return o
}

func (o AlertConfigurationThresholdConfigOutput) ToAlertConfigurationThresholdConfigOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigOutput {
	return o
}

func (o AlertConfigurationThresholdConfigOutput) ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput {
	return o.ToAlertConfigurationThresholdConfigPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationThresholdConfigOutput) ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfigurationThresholdConfig) *AlertConfigurationThresholdConfig {
		return &v
	}).(AlertConfigurationThresholdConfigPtrOutput)
}

func (o AlertConfigurationThresholdConfigOutput) ToOutput(ctx context.Context) pulumix.Output[AlertConfigurationThresholdConfig] {
	return pulumix.Output[AlertConfigurationThresholdConfig]{
		OutputState: o.OutputState,
	}
}

// The operator to test the field’s value.
// Accepted values are:
func (o AlertConfigurationThresholdConfigOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationThresholdConfig) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o AlertConfigurationThresholdConfigOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AlertConfigurationThresholdConfig) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

// The units for the threshold value. Depends on the type of metric.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
func (o AlertConfigurationThresholdConfigOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationThresholdConfig) *string { return v.Units }).(pulumi.StringPtrOutput)
}

type AlertConfigurationThresholdConfigPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationThresholdConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationThresholdConfig)(nil)).Elem()
}

func (o AlertConfigurationThresholdConfigPtrOutput) ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput {
	return o
}

func (o AlertConfigurationThresholdConfigPtrOutput) ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigPtrOutput {
	return o
}

func (o AlertConfigurationThresholdConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AlertConfigurationThresholdConfig] {
	return pulumix.Output[*AlertConfigurationThresholdConfig]{
		OutputState: o.OutputState,
	}
}

func (o AlertConfigurationThresholdConfigPtrOutput) Elem() AlertConfigurationThresholdConfigOutput {
	return o.ApplyT(func(v *AlertConfigurationThresholdConfig) AlertConfigurationThresholdConfig {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationThresholdConfig
		return ret
	}).(AlertConfigurationThresholdConfigOutput)
}

// The operator to test the field’s value.
// Accepted values are:
func (o AlertConfigurationThresholdConfigPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o AlertConfigurationThresholdConfigPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AlertConfigurationThresholdConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

// The units for the threshold value. Depends on the type of metric.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
func (o AlertConfigurationThresholdConfigPtrOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Units
	}).(pulumi.StringPtrOutput)
}

type BackupCompliancePolicyOnDemandPolicyItem struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// BackupCompliancePolicyOnDemandPolicyItemInput is an input type that accepts BackupCompliancePolicyOnDemandPolicyItemArgs and BackupCompliancePolicyOnDemandPolicyItemOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyOnDemandPolicyItemInput` via:
//
//	BackupCompliancePolicyOnDemandPolicyItemArgs{...}
type BackupCompliancePolicyOnDemandPolicyItemInput interface {
	pulumi.Input

	ToBackupCompliancePolicyOnDemandPolicyItemOutput() BackupCompliancePolicyOnDemandPolicyItemOutput
	ToBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(context.Context) BackupCompliancePolicyOnDemandPolicyItemOutput
}

type BackupCompliancePolicyOnDemandPolicyItemArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (BackupCompliancePolicyOnDemandPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (i BackupCompliancePolicyOnDemandPolicyItemArgs) ToBackupCompliancePolicyOnDemandPolicyItemOutput() BackupCompliancePolicyOnDemandPolicyItemOutput {
	return i.ToBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyOnDemandPolicyItemArgs) ToBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(ctx context.Context) BackupCompliancePolicyOnDemandPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyOnDemandPolicyItemOutput)
}

func (i BackupCompliancePolicyOnDemandPolicyItemArgs) ToOutput(ctx context.Context) pulumix.Output[BackupCompliancePolicyOnDemandPolicyItem] {
	return pulumix.Output[BackupCompliancePolicyOnDemandPolicyItem]{
		OutputState: i.ToBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(ctx).OutputState,
	}
}

func (i BackupCompliancePolicyOnDemandPolicyItemArgs) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutput() BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return i.ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyOnDemandPolicyItemArgs) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyOnDemandPolicyItemOutput).ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx)
}

// BackupCompliancePolicyOnDemandPolicyItemPtrInput is an input type that accepts BackupCompliancePolicyOnDemandPolicyItemArgs, BackupCompliancePolicyOnDemandPolicyItemPtr and BackupCompliancePolicyOnDemandPolicyItemPtrOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyOnDemandPolicyItemPtrInput` via:
//
//	        BackupCompliancePolicyOnDemandPolicyItemArgs{...}
//
//	or:
//
//	        nil
type BackupCompliancePolicyOnDemandPolicyItemPtrInput interface {
	pulumi.Input

	ToBackupCompliancePolicyOnDemandPolicyItemPtrOutput() BackupCompliancePolicyOnDemandPolicyItemPtrOutput
	ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Context) BackupCompliancePolicyOnDemandPolicyItemPtrOutput
}

type backupCompliancePolicyOnDemandPolicyItemPtrType BackupCompliancePolicyOnDemandPolicyItemArgs

func BackupCompliancePolicyOnDemandPolicyItemPtr(v *BackupCompliancePolicyOnDemandPolicyItemArgs) BackupCompliancePolicyOnDemandPolicyItemPtrInput {
	return (*backupCompliancePolicyOnDemandPolicyItemPtrType)(v)
}

func (*backupCompliancePolicyOnDemandPolicyItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (i *backupCompliancePolicyOnDemandPolicyItemPtrType) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutput() BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return i.ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Background())
}

func (i *backupCompliancePolicyOnDemandPolicyItemPtrType) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyOnDemandPolicyItemPtrOutput)
}

func (i *backupCompliancePolicyOnDemandPolicyItemPtrType) ToOutput(ctx context.Context) pulumix.Output[*BackupCompliancePolicyOnDemandPolicyItem] {
	return pulumix.Output[*BackupCompliancePolicyOnDemandPolicyItem]{
		OutputState: i.ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx).OutputState,
	}
}

type BackupCompliancePolicyOnDemandPolicyItemOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyOnDemandPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (o BackupCompliancePolicyOnDemandPolicyItemOutput) ToBackupCompliancePolicyOnDemandPolicyItemOutput() BackupCompliancePolicyOnDemandPolicyItemOutput {
	return o
}

func (o BackupCompliancePolicyOnDemandPolicyItemOutput) ToBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(ctx context.Context) BackupCompliancePolicyOnDemandPolicyItemOutput {
	return o
}

func (o BackupCompliancePolicyOnDemandPolicyItemOutput) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutput() BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o.ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Background())
}

func (o BackupCompliancePolicyOnDemandPolicyItemOutput) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupCompliancePolicyOnDemandPolicyItem) *BackupCompliancePolicyOnDemandPolicyItem {
		return &v
	}).(BackupCompliancePolicyOnDemandPolicyItemPtrOutput)
}

func (o BackupCompliancePolicyOnDemandPolicyItemOutput) ToOutput(ctx context.Context) pulumix.Output[BackupCompliancePolicyOnDemandPolicyItem] {
	return pulumix.Output[BackupCompliancePolicyOnDemandPolicyItem]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyOnDemandPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyOnDemandPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyOnDemandPolicyItemOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyOnDemandPolicyItem) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyOnDemandPolicyItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyOnDemandPolicyItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyOnDemandPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupCompliancePolicyOnDemandPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyOnDemandPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyOnDemandPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type BackupCompliancePolicyOnDemandPolicyItemPtrOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyOnDemandPolicyItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutput() BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o
}

func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) ToBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o
}

func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BackupCompliancePolicyOnDemandPolicyItem] {
	return pulumix.Output[*BackupCompliancePolicyOnDemandPolicyItem]{
		OutputState: o.OutputState,
	}
}

func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) Elem() BackupCompliancePolicyOnDemandPolicyItemOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyOnDemandPolicyItem) BackupCompliancePolicyOnDemandPolicyItem {
		if v != nil {
			return *v
		}
		var ret BackupCompliancePolicyOnDemandPolicyItem
		return ret
	}).(BackupCompliancePolicyOnDemandPolicyItemOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyOnDemandPolicyItem) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyOnDemandPolicyItem) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyOnDemandPolicyItem) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyOnDemandPolicyItem) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyOnDemandPolicyItemPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyOnDemandPolicyItem) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type BackupCompliancePolicyPolicyItemDaily struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// BackupCompliancePolicyPolicyItemDailyInput is an input type that accepts BackupCompliancePolicyPolicyItemDailyArgs and BackupCompliancePolicyPolicyItemDailyOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemDailyInput` via:
//
//	BackupCompliancePolicyPolicyItemDailyArgs{...}
type BackupCompliancePolicyPolicyItemDailyInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemDailyOutput() BackupCompliancePolicyPolicyItemDailyOutput
	ToBackupCompliancePolicyPolicyItemDailyOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemDailyOutput
}

type BackupCompliancePolicyPolicyItemDailyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (BackupCompliancePolicyPolicyItemDailyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (i BackupCompliancePolicyPolicyItemDailyArgs) ToBackupCompliancePolicyPolicyItemDailyOutput() BackupCompliancePolicyPolicyItemDailyOutput {
	return i.ToBackupCompliancePolicyPolicyItemDailyOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemDailyArgs) ToBackupCompliancePolicyPolicyItemDailyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemDailyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemDailyOutput)
}

func (i BackupCompliancePolicyPolicyItemDailyArgs) ToOutput(ctx context.Context) pulumix.Output[BackupCompliancePolicyPolicyItemDaily] {
	return pulumix.Output[BackupCompliancePolicyPolicyItemDaily]{
		OutputState: i.ToBackupCompliancePolicyPolicyItemDailyOutputWithContext(ctx).OutputState,
	}
}

func (i BackupCompliancePolicyPolicyItemDailyArgs) ToBackupCompliancePolicyPolicyItemDailyPtrOutput() BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return i.ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemDailyArgs) ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemDailyOutput).ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx)
}

// BackupCompliancePolicyPolicyItemDailyPtrInput is an input type that accepts BackupCompliancePolicyPolicyItemDailyArgs, BackupCompliancePolicyPolicyItemDailyPtr and BackupCompliancePolicyPolicyItemDailyPtrOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemDailyPtrInput` via:
//
//	        BackupCompliancePolicyPolicyItemDailyArgs{...}
//
//	or:
//
//	        nil
type BackupCompliancePolicyPolicyItemDailyPtrInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemDailyPtrOutput() BackupCompliancePolicyPolicyItemDailyPtrOutput
	ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemDailyPtrOutput
}

type backupCompliancePolicyPolicyItemDailyPtrType BackupCompliancePolicyPolicyItemDailyArgs

func BackupCompliancePolicyPolicyItemDailyPtr(v *BackupCompliancePolicyPolicyItemDailyArgs) BackupCompliancePolicyPolicyItemDailyPtrInput {
	return (*backupCompliancePolicyPolicyItemDailyPtrType)(v)
}

func (*backupCompliancePolicyPolicyItemDailyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (i *backupCompliancePolicyPolicyItemDailyPtrType) ToBackupCompliancePolicyPolicyItemDailyPtrOutput() BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return i.ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Background())
}

func (i *backupCompliancePolicyPolicyItemDailyPtrType) ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemDailyPtrOutput)
}

func (i *backupCompliancePolicyPolicyItemDailyPtrType) ToOutput(ctx context.Context) pulumix.Output[*BackupCompliancePolicyPolicyItemDaily] {
	return pulumix.Output[*BackupCompliancePolicyPolicyItemDaily]{
		OutputState: i.ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx).OutputState,
	}
}

type BackupCompliancePolicyPolicyItemDailyOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemDailyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemDailyOutput) ToBackupCompliancePolicyPolicyItemDailyOutput() BackupCompliancePolicyPolicyItemDailyOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemDailyOutput) ToBackupCompliancePolicyPolicyItemDailyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemDailyOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemDailyOutput) ToBackupCompliancePolicyPolicyItemDailyPtrOutput() BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o.ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Background())
}

func (o BackupCompliancePolicyPolicyItemDailyOutput) ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupCompliancePolicyPolicyItemDaily) *BackupCompliancePolicyPolicyItemDaily {
		return &v
	}).(BackupCompliancePolicyPolicyItemDailyPtrOutput)
}

func (o BackupCompliancePolicyPolicyItemDailyOutput) ToOutput(ctx context.Context) pulumix.Output[BackupCompliancePolicyPolicyItemDaily] {
	return pulumix.Output[BackupCompliancePolicyPolicyItemDaily]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyPolicyItemDailyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemDaily) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyPolicyItemDailyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemDaily) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyPolicyItemDailyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemDaily) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyPolicyItemDailyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemDaily) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyPolicyItemDailyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemDaily) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type BackupCompliancePolicyPolicyItemDailyPtrOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemDailyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) ToBackupCompliancePolicyPolicyItemDailyPtrOutput() BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) ToBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BackupCompliancePolicyPolicyItemDaily] {
	return pulumix.Output[*BackupCompliancePolicyPolicyItemDaily]{
		OutputState: o.OutputState,
	}
}

func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) Elem() BackupCompliancePolicyPolicyItemDailyOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemDaily) BackupCompliancePolicyPolicyItemDaily {
		if v != nil {
			return *v
		}
		var ret BackupCompliancePolicyPolicyItemDaily
		return ret
	}).(BackupCompliancePolicyPolicyItemDailyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemDaily) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyPolicyItemDailyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemDaily) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type BackupCompliancePolicyPolicyItemHourly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// BackupCompliancePolicyPolicyItemHourlyInput is an input type that accepts BackupCompliancePolicyPolicyItemHourlyArgs and BackupCompliancePolicyPolicyItemHourlyOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemHourlyInput` via:
//
//	BackupCompliancePolicyPolicyItemHourlyArgs{...}
type BackupCompliancePolicyPolicyItemHourlyInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemHourlyOutput() BackupCompliancePolicyPolicyItemHourlyOutput
	ToBackupCompliancePolicyPolicyItemHourlyOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemHourlyOutput
}

type BackupCompliancePolicyPolicyItemHourlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (BackupCompliancePolicyPolicyItemHourlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (i BackupCompliancePolicyPolicyItemHourlyArgs) ToBackupCompliancePolicyPolicyItemHourlyOutput() BackupCompliancePolicyPolicyItemHourlyOutput {
	return i.ToBackupCompliancePolicyPolicyItemHourlyOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemHourlyArgs) ToBackupCompliancePolicyPolicyItemHourlyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemHourlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemHourlyOutput)
}

func (i BackupCompliancePolicyPolicyItemHourlyArgs) ToOutput(ctx context.Context) pulumix.Output[BackupCompliancePolicyPolicyItemHourly] {
	return pulumix.Output[BackupCompliancePolicyPolicyItemHourly]{
		OutputState: i.ToBackupCompliancePolicyPolicyItemHourlyOutputWithContext(ctx).OutputState,
	}
}

func (i BackupCompliancePolicyPolicyItemHourlyArgs) ToBackupCompliancePolicyPolicyItemHourlyPtrOutput() BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return i.ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemHourlyArgs) ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemHourlyOutput).ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx)
}

// BackupCompliancePolicyPolicyItemHourlyPtrInput is an input type that accepts BackupCompliancePolicyPolicyItemHourlyArgs, BackupCompliancePolicyPolicyItemHourlyPtr and BackupCompliancePolicyPolicyItemHourlyPtrOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemHourlyPtrInput` via:
//
//	        BackupCompliancePolicyPolicyItemHourlyArgs{...}
//
//	or:
//
//	        nil
type BackupCompliancePolicyPolicyItemHourlyPtrInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemHourlyPtrOutput() BackupCompliancePolicyPolicyItemHourlyPtrOutput
	ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemHourlyPtrOutput
}

type backupCompliancePolicyPolicyItemHourlyPtrType BackupCompliancePolicyPolicyItemHourlyArgs

func BackupCompliancePolicyPolicyItemHourlyPtr(v *BackupCompliancePolicyPolicyItemHourlyArgs) BackupCompliancePolicyPolicyItemHourlyPtrInput {
	return (*backupCompliancePolicyPolicyItemHourlyPtrType)(v)
}

func (*backupCompliancePolicyPolicyItemHourlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (i *backupCompliancePolicyPolicyItemHourlyPtrType) ToBackupCompliancePolicyPolicyItemHourlyPtrOutput() BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return i.ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (i *backupCompliancePolicyPolicyItemHourlyPtrType) ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemHourlyPtrOutput)
}

func (i *backupCompliancePolicyPolicyItemHourlyPtrType) ToOutput(ctx context.Context) pulumix.Output[*BackupCompliancePolicyPolicyItemHourly] {
	return pulumix.Output[*BackupCompliancePolicyPolicyItemHourly]{
		OutputState: i.ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx).OutputState,
	}
}

type BackupCompliancePolicyPolicyItemHourlyOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemHourlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemHourlyOutput) ToBackupCompliancePolicyPolicyItemHourlyOutput() BackupCompliancePolicyPolicyItemHourlyOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemHourlyOutput) ToBackupCompliancePolicyPolicyItemHourlyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemHourlyOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemHourlyOutput) ToBackupCompliancePolicyPolicyItemHourlyPtrOutput() BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o.ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (o BackupCompliancePolicyPolicyItemHourlyOutput) ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupCompliancePolicyPolicyItemHourly) *BackupCompliancePolicyPolicyItemHourly {
		return &v
	}).(BackupCompliancePolicyPolicyItemHourlyPtrOutput)
}

func (o BackupCompliancePolicyPolicyItemHourlyOutput) ToOutput(ctx context.Context) pulumix.Output[BackupCompliancePolicyPolicyItemHourly] {
	return pulumix.Output[BackupCompliancePolicyPolicyItemHourly]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyPolicyItemHourlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemHourly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyPolicyItemHourlyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemHourly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyPolicyItemHourlyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemHourly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyPolicyItemHourlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemHourly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyPolicyItemHourlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemHourly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type BackupCompliancePolicyPolicyItemHourlyPtrOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemHourlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) ToBackupCompliancePolicyPolicyItemHourlyPtrOutput() BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) ToBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BackupCompliancePolicyPolicyItemHourly] {
	return pulumix.Output[*BackupCompliancePolicyPolicyItemHourly]{
		OutputState: o.OutputState,
	}
}

func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) Elem() BackupCompliancePolicyPolicyItemHourlyOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemHourly) BackupCompliancePolicyPolicyItemHourly {
		if v != nil {
			return *v
		}
		var ret BackupCompliancePolicyPolicyItemHourly
		return ret
	}).(BackupCompliancePolicyPolicyItemHourlyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemHourly) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyPolicyItemHourlyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupCompliancePolicyPolicyItemHourly) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type BackupCompliancePolicyPolicyItemMonthly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// BackupCompliancePolicyPolicyItemMonthlyInput is an input type that accepts BackupCompliancePolicyPolicyItemMonthlyArgs and BackupCompliancePolicyPolicyItemMonthlyOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemMonthlyInput` via:
//
//	BackupCompliancePolicyPolicyItemMonthlyArgs{...}
type BackupCompliancePolicyPolicyItemMonthlyInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemMonthlyOutput() BackupCompliancePolicyPolicyItemMonthlyOutput
	ToBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemMonthlyOutput
}

type BackupCompliancePolicyPolicyItemMonthlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (BackupCompliancePolicyPolicyItemMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (i BackupCompliancePolicyPolicyItemMonthlyArgs) ToBackupCompliancePolicyPolicyItemMonthlyOutput() BackupCompliancePolicyPolicyItemMonthlyOutput {
	return i.ToBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemMonthlyArgs) ToBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemMonthlyOutput)
}

func (i BackupCompliancePolicyPolicyItemMonthlyArgs) ToOutput(ctx context.Context) pulumix.Output[BackupCompliancePolicyPolicyItemMonthly] {
	return pulumix.Output[BackupCompliancePolicyPolicyItemMonthly]{
		OutputState: i.ToBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(ctx).OutputState,
	}
}

// BackupCompliancePolicyPolicyItemMonthlyArrayInput is an input type that accepts BackupCompliancePolicyPolicyItemMonthlyArray and BackupCompliancePolicyPolicyItemMonthlyArrayOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemMonthlyArrayInput` via:
//
//	BackupCompliancePolicyPolicyItemMonthlyArray{ BackupCompliancePolicyPolicyItemMonthlyArgs{...} }
type BackupCompliancePolicyPolicyItemMonthlyArrayInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemMonthlyArrayOutput() BackupCompliancePolicyPolicyItemMonthlyArrayOutput
	ToBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemMonthlyArrayOutput
}

type BackupCompliancePolicyPolicyItemMonthlyArray []BackupCompliancePolicyPolicyItemMonthlyInput

func (BackupCompliancePolicyPolicyItemMonthlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (i BackupCompliancePolicyPolicyItemMonthlyArray) ToBackupCompliancePolicyPolicyItemMonthlyArrayOutput() BackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return i.ToBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemMonthlyArray) ToBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemMonthlyArrayOutput)
}

func (i BackupCompliancePolicyPolicyItemMonthlyArray) ToOutput(ctx context.Context) pulumix.Output[[]BackupCompliancePolicyPolicyItemMonthly] {
	return pulumix.Output[[]BackupCompliancePolicyPolicyItemMonthly]{
		OutputState: i.ToBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(ctx).OutputState,
	}
}

type BackupCompliancePolicyPolicyItemMonthlyOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemMonthlyOutput) ToBackupCompliancePolicyPolicyItemMonthlyOutput() BackupCompliancePolicyPolicyItemMonthlyOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemMonthlyOutput) ToBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemMonthlyOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemMonthlyOutput) ToOutput(ctx context.Context) pulumix.Output[BackupCompliancePolicyPolicyItemMonthly] {
	return pulumix.Output[BackupCompliancePolicyPolicyItemMonthly]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyPolicyItemMonthlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemMonthly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyPolicyItemMonthlyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemMonthly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyPolicyItemMonthlyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemMonthly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyPolicyItemMonthlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemMonthly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyPolicyItemMonthlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemMonthly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type BackupCompliancePolicyPolicyItemMonthlyArrayOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemMonthlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemMonthlyArrayOutput) ToBackupCompliancePolicyPolicyItemMonthlyArrayOutput() BackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemMonthlyArrayOutput) ToBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemMonthlyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BackupCompliancePolicyPolicyItemMonthly] {
	return pulumix.Output[[]BackupCompliancePolicyPolicyItemMonthly]{
		OutputState: o.OutputState,
	}
}

func (o BackupCompliancePolicyPolicyItemMonthlyArrayOutput) Index(i pulumi.IntInput) BackupCompliancePolicyPolicyItemMonthlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupCompliancePolicyPolicyItemMonthly {
		return vs[0].([]BackupCompliancePolicyPolicyItemMonthly)[vs[1].(int)]
	}).(BackupCompliancePolicyPolicyItemMonthlyOutput)
}

type BackupCompliancePolicyPolicyItemWeekly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// BackupCompliancePolicyPolicyItemWeeklyInput is an input type that accepts BackupCompliancePolicyPolicyItemWeeklyArgs and BackupCompliancePolicyPolicyItemWeeklyOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemWeeklyInput` via:
//
//	BackupCompliancePolicyPolicyItemWeeklyArgs{...}
type BackupCompliancePolicyPolicyItemWeeklyInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemWeeklyOutput() BackupCompliancePolicyPolicyItemWeeklyOutput
	ToBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemWeeklyOutput
}

type BackupCompliancePolicyPolicyItemWeeklyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (BackupCompliancePolicyPolicyItemWeeklyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (i BackupCompliancePolicyPolicyItemWeeklyArgs) ToBackupCompliancePolicyPolicyItemWeeklyOutput() BackupCompliancePolicyPolicyItemWeeklyOutput {
	return i.ToBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemWeeklyArgs) ToBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemWeeklyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemWeeklyOutput)
}

func (i BackupCompliancePolicyPolicyItemWeeklyArgs) ToOutput(ctx context.Context) pulumix.Output[BackupCompliancePolicyPolicyItemWeekly] {
	return pulumix.Output[BackupCompliancePolicyPolicyItemWeekly]{
		OutputState: i.ToBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(ctx).OutputState,
	}
}

// BackupCompliancePolicyPolicyItemWeeklyArrayInput is an input type that accepts BackupCompliancePolicyPolicyItemWeeklyArray and BackupCompliancePolicyPolicyItemWeeklyArrayOutput values.
// You can construct a concrete instance of `BackupCompliancePolicyPolicyItemWeeklyArrayInput` via:
//
//	BackupCompliancePolicyPolicyItemWeeklyArray{ BackupCompliancePolicyPolicyItemWeeklyArgs{...} }
type BackupCompliancePolicyPolicyItemWeeklyArrayInput interface {
	pulumi.Input

	ToBackupCompliancePolicyPolicyItemWeeklyArrayOutput() BackupCompliancePolicyPolicyItemWeeklyArrayOutput
	ToBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(context.Context) BackupCompliancePolicyPolicyItemWeeklyArrayOutput
}

type BackupCompliancePolicyPolicyItemWeeklyArray []BackupCompliancePolicyPolicyItemWeeklyInput

func (BackupCompliancePolicyPolicyItemWeeklyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (i BackupCompliancePolicyPolicyItemWeeklyArray) ToBackupCompliancePolicyPolicyItemWeeklyArrayOutput() BackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return i.ToBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(context.Background())
}

func (i BackupCompliancePolicyPolicyItemWeeklyArray) ToBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupCompliancePolicyPolicyItemWeeklyArrayOutput)
}

func (i BackupCompliancePolicyPolicyItemWeeklyArray) ToOutput(ctx context.Context) pulumix.Output[[]BackupCompliancePolicyPolicyItemWeekly] {
	return pulumix.Output[[]BackupCompliancePolicyPolicyItemWeekly]{
		OutputState: i.ToBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(ctx).OutputState,
	}
}

type BackupCompliancePolicyPolicyItemWeeklyOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemWeeklyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemWeeklyOutput) ToBackupCompliancePolicyPolicyItemWeeklyOutput() BackupCompliancePolicyPolicyItemWeeklyOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemWeeklyOutput) ToBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemWeeklyOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemWeeklyOutput) ToOutput(ctx context.Context) pulumix.Output[BackupCompliancePolicyPolicyItemWeekly] {
	return pulumix.Output[BackupCompliancePolicyPolicyItemWeekly]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o BackupCompliancePolicyPolicyItemWeeklyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemWeekly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o BackupCompliancePolicyPolicyItemWeeklyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemWeekly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o BackupCompliancePolicyPolicyItemWeeklyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemWeekly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o BackupCompliancePolicyPolicyItemWeeklyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemWeekly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o BackupCompliancePolicyPolicyItemWeeklyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v BackupCompliancePolicyPolicyItemWeekly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type BackupCompliancePolicyPolicyItemWeeklyArrayOutput struct{ *pulumi.OutputState }

func (BackupCompliancePolicyPolicyItemWeeklyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (o BackupCompliancePolicyPolicyItemWeeklyArrayOutput) ToBackupCompliancePolicyPolicyItemWeeklyArrayOutput() BackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemWeeklyArrayOutput) ToBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(ctx context.Context) BackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return o
}

func (o BackupCompliancePolicyPolicyItemWeeklyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BackupCompliancePolicyPolicyItemWeekly] {
	return pulumix.Output[[]BackupCompliancePolicyPolicyItemWeekly]{
		OutputState: o.OutputState,
	}
}

func (o BackupCompliancePolicyPolicyItemWeeklyArrayOutput) Index(i pulumi.IntInput) BackupCompliancePolicyPolicyItemWeeklyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupCompliancePolicyPolicyItemWeekly {
		return vs[0].([]BackupCompliancePolicyPolicyItemWeekly)[vs[1].(int)]
	}).(BackupCompliancePolicyPolicyItemWeeklyOutput)
}

type CloudBackupScheduleCopySetting struct {
	// Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. "AWS" "AZURE" "GCP"
	CloudProvider *string `pulumi:"cloudProvider"`
	// List that describes which types of snapshots to copy. i.e. "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "ON_DEMAND"
	Frequencies []string `pulumi:"frequencies"`
	// Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under https://www.mongodb.com/docs/atlas/reference/cloud-providers/ 'regions' link
	RegionName *string `pulumi:"regionName"`
	// Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, consult the replicationSpecs array returned from [Return One Multi-Cloud Cluster in One Project](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/getCluster).
	ReplicationSpecId *string `pulumi:"replicationSpecId"`
	// Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
	ShouldCopyOplogs *bool `pulumi:"shouldCopyOplogs"`
}

// CloudBackupScheduleCopySettingInput is an input type that accepts CloudBackupScheduleCopySettingArgs and CloudBackupScheduleCopySettingOutput values.
// You can construct a concrete instance of `CloudBackupScheduleCopySettingInput` via:
//
//	CloudBackupScheduleCopySettingArgs{...}
type CloudBackupScheduleCopySettingInput interface {
	pulumi.Input

	ToCloudBackupScheduleCopySettingOutput() CloudBackupScheduleCopySettingOutput
	ToCloudBackupScheduleCopySettingOutputWithContext(context.Context) CloudBackupScheduleCopySettingOutput
}

type CloudBackupScheduleCopySettingArgs struct {
	// Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. "AWS" "AZURE" "GCP"
	CloudProvider pulumi.StringPtrInput `pulumi:"cloudProvider"`
	// List that describes which types of snapshots to copy. i.e. "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "ON_DEMAND"
	Frequencies pulumi.StringArrayInput `pulumi:"frequencies"`
	// Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under https://www.mongodb.com/docs/atlas/reference/cloud-providers/ 'regions' link
	RegionName pulumi.StringPtrInput `pulumi:"regionName"`
	// Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, consult the replicationSpecs array returned from [Return One Multi-Cloud Cluster in One Project](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/getCluster).
	ReplicationSpecId pulumi.StringPtrInput `pulumi:"replicationSpecId"`
	// Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
	ShouldCopyOplogs pulumi.BoolPtrInput `pulumi:"shouldCopyOplogs"`
}

func (CloudBackupScheduleCopySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupScheduleCopySetting)(nil)).Elem()
}

func (i CloudBackupScheduleCopySettingArgs) ToCloudBackupScheduleCopySettingOutput() CloudBackupScheduleCopySettingOutput {
	return i.ToCloudBackupScheduleCopySettingOutputWithContext(context.Background())
}

func (i CloudBackupScheduleCopySettingArgs) ToCloudBackupScheduleCopySettingOutputWithContext(ctx context.Context) CloudBackupScheduleCopySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupScheduleCopySettingOutput)
}

func (i CloudBackupScheduleCopySettingArgs) ToOutput(ctx context.Context) pulumix.Output[CloudBackupScheduleCopySetting] {
	return pulumix.Output[CloudBackupScheduleCopySetting]{
		OutputState: i.ToCloudBackupScheduleCopySettingOutputWithContext(ctx).OutputState,
	}
}

// CloudBackupScheduleCopySettingArrayInput is an input type that accepts CloudBackupScheduleCopySettingArray and CloudBackupScheduleCopySettingArrayOutput values.
// You can construct a concrete instance of `CloudBackupScheduleCopySettingArrayInput` via:
//
//	CloudBackupScheduleCopySettingArray{ CloudBackupScheduleCopySettingArgs{...} }
type CloudBackupScheduleCopySettingArrayInput interface {
	pulumi.Input

	ToCloudBackupScheduleCopySettingArrayOutput() CloudBackupScheduleCopySettingArrayOutput
	ToCloudBackupScheduleCopySettingArrayOutputWithContext(context.Context) CloudBackupScheduleCopySettingArrayOutput
}

type CloudBackupScheduleCopySettingArray []CloudBackupScheduleCopySettingInput

func (CloudBackupScheduleCopySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupScheduleCopySetting)(nil)).Elem()
}

func (i CloudBackupScheduleCopySettingArray) ToCloudBackupScheduleCopySettingArrayOutput() CloudBackupScheduleCopySettingArrayOutput {
	return i.ToCloudBackupScheduleCopySettingArrayOutputWithContext(context.Background())
}

func (i CloudBackupScheduleCopySettingArray) ToCloudBackupScheduleCopySettingArrayOutputWithContext(ctx context.Context) CloudBackupScheduleCopySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupScheduleCopySettingArrayOutput)
}

func (i CloudBackupScheduleCopySettingArray) ToOutput(ctx context.Context) pulumix.Output[[]CloudBackupScheduleCopySetting] {
	return pulumix.Output[[]CloudBackupScheduleCopySetting]{
		OutputState: i.ToCloudBackupScheduleCopySettingArrayOutputWithContext(ctx).OutputState,
	}
}

type CloudBackupScheduleCopySettingOutput struct{ *pulumi.OutputState }

func (CloudBackupScheduleCopySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupScheduleCopySetting)(nil)).Elem()
}

func (o CloudBackupScheduleCopySettingOutput) ToCloudBackupScheduleCopySettingOutput() CloudBackupScheduleCopySettingOutput {
	return o
}

func (o CloudBackupScheduleCopySettingOutput) ToCloudBackupScheduleCopySettingOutputWithContext(ctx context.Context) CloudBackupScheduleCopySettingOutput {
	return o
}

func (o CloudBackupScheduleCopySettingOutput) ToOutput(ctx context.Context) pulumix.Output[CloudBackupScheduleCopySetting] {
	return pulumix.Output[CloudBackupScheduleCopySetting]{
		OutputState: o.OutputState,
	}
}

// Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. "AWS" "AZURE" "GCP"
func (o CloudBackupScheduleCopySettingOutput) CloudProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupScheduleCopySetting) *string { return v.CloudProvider }).(pulumi.StringPtrOutput)
}

// List that describes which types of snapshots to copy. i.e. "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "ON_DEMAND"
func (o CloudBackupScheduleCopySettingOutput) Frequencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudBackupScheduleCopySetting) []string { return v.Frequencies }).(pulumi.StringArrayOutput)
}

// Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under https://www.mongodb.com/docs/atlas/reference/cloud-providers/ 'regions' link
func (o CloudBackupScheduleCopySettingOutput) RegionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupScheduleCopySetting) *string { return v.RegionName }).(pulumi.StringPtrOutput)
}

// Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, consult the replicationSpecs array returned from [Return One Multi-Cloud Cluster in One Project](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/getCluster).
func (o CloudBackupScheduleCopySettingOutput) ReplicationSpecId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupScheduleCopySetting) *string { return v.ReplicationSpecId }).(pulumi.StringPtrOutput)
}

// Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
func (o CloudBackupScheduleCopySettingOutput) ShouldCopyOplogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudBackupScheduleCopySetting) *bool { return v.ShouldCopyOplogs }).(pulumi.BoolPtrOutput)
}

type CloudBackupScheduleCopySettingArrayOutput struct{ *pulumi.OutputState }

func (CloudBackupScheduleCopySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupScheduleCopySetting)(nil)).Elem()
}

func (o CloudBackupScheduleCopySettingArrayOutput) ToCloudBackupScheduleCopySettingArrayOutput() CloudBackupScheduleCopySettingArrayOutput {
	return o
}

func (o CloudBackupScheduleCopySettingArrayOutput) ToCloudBackupScheduleCopySettingArrayOutputWithContext(ctx context.Context) CloudBackupScheduleCopySettingArrayOutput {
	return o
}

func (o CloudBackupScheduleCopySettingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CloudBackupScheduleCopySetting] {
	return pulumix.Output[[]CloudBackupScheduleCopySetting]{
		OutputState: o.OutputState,
	}
}

func (o CloudBackupScheduleCopySettingArrayOutput) Index(i pulumi.IntInput) CloudBackupScheduleCopySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudBackupScheduleCopySetting {
		return vs[0].([]CloudBackupScheduleCopySetting)[vs[1].(int)]
	}).(CloudBackupScheduleCopySettingOutput)
}

type CloudBackupScheduleExport struct {
	// Unique identifier of the CloudBackupSnapshotExportBucket export_bucket_id value.
	ExportBucketId *string `pulumi:"exportBucketId"`
	// Frequency associated with the export snapshot item.
	FrequencyType *string `pulumi:"frequencyType"`
}

// CloudBackupScheduleExportInput is an input type that accepts CloudBackupScheduleExportArgs and CloudBackupScheduleExportOutput values.
// You can construct a concrete instance of `CloudBackupScheduleExportInput` via:
//
//	CloudBackupScheduleExportArgs{...}
type CloudBackupScheduleExportInput interface {
	pulumi.Input

	ToCloudBackupScheduleExportOutput() CloudBackupScheduleExportOutput
	ToCloudBackupScheduleExportOutputWithContext(context.Context) CloudBackupScheduleExportOutput
}

type CloudBackupScheduleExportArgs struct {
	// Unique identifier of the CloudBackupSnapshotExportBucket export_bucket_id value.
	ExportBucketId pulumi.StringPtrInput `pulumi:"exportBucketId"`
	// Frequency associated with the export snapshot item.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
}

func (CloudBackupScheduleExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupScheduleExport)(nil)).Elem()
}

func (i CloudBackupScheduleExportArgs) ToCloudBackupScheduleExportOutput() CloudBackupScheduleExportOutput {
	return i.ToCloudBackupScheduleExportOutputWithContext(context.Background())
}

func (i CloudBackupScheduleExportArgs) ToCloudBackupScheduleExportOutputWithContext(ctx context.Context) CloudBackupScheduleExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupScheduleExportOutput)
}

func (i CloudBackupScheduleExportArgs) ToOutput(ctx context.Context) pulumix.Output[CloudBackupScheduleExport] {
	return pulumix.Output[CloudBackupScheduleExport]{
		OutputState: i.ToCloudBackupScheduleExportOutputWithContext(ctx).OutputState,
	}
}

func (i CloudBackupScheduleExportArgs) ToCloudBackupScheduleExportPtrOutput() CloudBackupScheduleExportPtrOutput {
	return i.ToCloudBackupScheduleExportPtrOutputWithContext(context.Background())
}

func (i CloudBackupScheduleExportArgs) ToCloudBackupScheduleExportPtrOutputWithContext(ctx context.Context) CloudBackupScheduleExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupScheduleExportOutput).ToCloudBackupScheduleExportPtrOutputWithContext(ctx)
}

// CloudBackupScheduleExportPtrInput is an input type that accepts CloudBackupScheduleExportArgs, CloudBackupScheduleExportPtr and CloudBackupScheduleExportPtrOutput values.
// You can construct a concrete instance of `CloudBackupScheduleExportPtrInput` via:
//
//	        CloudBackupScheduleExportArgs{...}
//
//	or:
//
//	        nil
type CloudBackupScheduleExportPtrInput interface {
	pulumi.Input

	ToCloudBackupScheduleExportPtrOutput() CloudBackupScheduleExportPtrOutput
	ToCloudBackupScheduleExportPtrOutputWithContext(context.Context) CloudBackupScheduleExportPtrOutput
}

type cloudBackupScheduleExportPtrType CloudBackupScheduleExportArgs

func CloudBackupScheduleExportPtr(v *CloudBackupScheduleExportArgs) CloudBackupScheduleExportPtrInput {
	return (*cloudBackupScheduleExportPtrType)(v)
}

func (*cloudBackupScheduleExportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupScheduleExport)(nil)).Elem()
}

func (i *cloudBackupScheduleExportPtrType) ToCloudBackupScheduleExportPtrOutput() CloudBackupScheduleExportPtrOutput {
	return i.ToCloudBackupScheduleExportPtrOutputWithContext(context.Background())
}

func (i *cloudBackupScheduleExportPtrType) ToCloudBackupScheduleExportPtrOutputWithContext(ctx context.Context) CloudBackupScheduleExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupScheduleExportPtrOutput)
}

func (i *cloudBackupScheduleExportPtrType) ToOutput(ctx context.Context) pulumix.Output[*CloudBackupScheduleExport] {
	return pulumix.Output[*CloudBackupScheduleExport]{
		OutputState: i.ToCloudBackupScheduleExportPtrOutputWithContext(ctx).OutputState,
	}
}

type CloudBackupScheduleExportOutput struct{ *pulumi.OutputState }

func (CloudBackupScheduleExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupScheduleExport)(nil)).Elem()
}

func (o CloudBackupScheduleExportOutput) ToCloudBackupScheduleExportOutput() CloudBackupScheduleExportOutput {
	return o
}

func (o CloudBackupScheduleExportOutput) ToCloudBackupScheduleExportOutputWithContext(ctx context.Context) CloudBackupScheduleExportOutput {
	return o
}

func (o CloudBackupScheduleExportOutput) ToCloudBackupScheduleExportPtrOutput() CloudBackupScheduleExportPtrOutput {
	return o.ToCloudBackupScheduleExportPtrOutputWithContext(context.Background())
}

func (o CloudBackupScheduleExportOutput) ToCloudBackupScheduleExportPtrOutputWithContext(ctx context.Context) CloudBackupScheduleExportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudBackupScheduleExport) *CloudBackupScheduleExport {
		return &v
	}).(CloudBackupScheduleExportPtrOutput)
}

func (o CloudBackupScheduleExportOutput) ToOutput(ctx context.Context) pulumix.Output[CloudBackupScheduleExport] {
	return pulumix.Output[CloudBackupScheduleExport]{
		OutputState: o.OutputState,
	}
}

// Unique identifier of the CloudBackupSnapshotExportBucket export_bucket_id value.
func (o CloudBackupScheduleExportOutput) ExportBucketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupScheduleExport) *string { return v.ExportBucketId }).(pulumi.StringPtrOutput)
}

// Frequency associated with the export snapshot item.
func (o CloudBackupScheduleExportOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupScheduleExport) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

type CloudBackupScheduleExportPtrOutput struct{ *pulumi.OutputState }

func (CloudBackupScheduleExportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupScheduleExport)(nil)).Elem()
}

func (o CloudBackupScheduleExportPtrOutput) ToCloudBackupScheduleExportPtrOutput() CloudBackupScheduleExportPtrOutput {
	return o
}

func (o CloudBackupScheduleExportPtrOutput) ToCloudBackupScheduleExportPtrOutputWithContext(ctx context.Context) CloudBackupScheduleExportPtrOutput {
	return o
}

func (o CloudBackupScheduleExportPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudBackupScheduleExport] {
	return pulumix.Output[*CloudBackupScheduleExport]{
		OutputState: o.OutputState,
	}
}

func (o CloudBackupScheduleExportPtrOutput) Elem() CloudBackupScheduleExportOutput {
	return o.ApplyT(func(v *CloudBackupScheduleExport) CloudBackupScheduleExport {
		if v != nil {
			return *v
		}
		var ret CloudBackupScheduleExport
		return ret
	}).(CloudBackupScheduleExportOutput)
}

// Unique identifier of the CloudBackupSnapshotExportBucket export_bucket_id value.
func (o CloudBackupScheduleExportPtrOutput) ExportBucketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupScheduleExport) *string {
		if v == nil {
			return nil
		}
		return v.ExportBucketId
	}).(pulumi.StringPtrOutput)
}

// Frequency associated with the export snapshot item.
func (o CloudBackupScheduleExportPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupScheduleExport) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

type CloudBackupSchedulePolicyItemDaily struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (daily in this case). The only supported value for daily policies is `1` day.
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For daily policies, the frequency type is defined as `daily`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.  Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the hourly policy item specifies a retention of two days, the daily retention policy must specify two days or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// CloudBackupSchedulePolicyItemDailyInput is an input type that accepts CloudBackupSchedulePolicyItemDailyArgs and CloudBackupSchedulePolicyItemDailyOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemDailyInput` via:
//
//	CloudBackupSchedulePolicyItemDailyArgs{...}
type CloudBackupSchedulePolicyItemDailyInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemDailyOutput() CloudBackupSchedulePolicyItemDailyOutput
	ToCloudBackupSchedulePolicyItemDailyOutputWithContext(context.Context) CloudBackupSchedulePolicyItemDailyOutput
}

type CloudBackupSchedulePolicyItemDailyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (daily in this case). The only supported value for daily policies is `1` day.
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For daily policies, the frequency type is defined as `daily`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.  Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the hourly policy item specifies a retention of two days, the daily retention policy must specify two days or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (CloudBackupSchedulePolicyItemDailyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemDailyArgs) ToCloudBackupSchedulePolicyItemDailyOutput() CloudBackupSchedulePolicyItemDailyOutput {
	return i.ToCloudBackupSchedulePolicyItemDailyOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemDailyArgs) ToCloudBackupSchedulePolicyItemDailyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemDailyOutput)
}

func (i CloudBackupSchedulePolicyItemDailyArgs) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSchedulePolicyItemDaily] {
	return pulumix.Output[CloudBackupSchedulePolicyItemDaily]{
		OutputState: i.ToCloudBackupSchedulePolicyItemDailyOutputWithContext(ctx).OutputState,
	}
}

func (i CloudBackupSchedulePolicyItemDailyArgs) ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemDailyArgs) ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemDailyOutput).ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx)
}

// CloudBackupSchedulePolicyItemDailyPtrInput is an input type that accepts CloudBackupSchedulePolicyItemDailyArgs, CloudBackupSchedulePolicyItemDailyPtr and CloudBackupSchedulePolicyItemDailyPtrOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemDailyPtrInput` via:
//
//	        CloudBackupSchedulePolicyItemDailyArgs{...}
//
//	or:
//
//	        nil
type CloudBackupSchedulePolicyItemDailyPtrInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput
	ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput
}

type cloudBackupSchedulePolicyItemDailyPtrType CloudBackupSchedulePolicyItemDailyArgs

func CloudBackupSchedulePolicyItemDailyPtr(v *CloudBackupSchedulePolicyItemDailyArgs) CloudBackupSchedulePolicyItemDailyPtrInput {
	return (*cloudBackupSchedulePolicyItemDailyPtrType)(v)
}

func (*cloudBackupSchedulePolicyItemDailyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (i *cloudBackupSchedulePolicyItemDailyPtrType) ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(context.Background())
}

func (i *cloudBackupSchedulePolicyItemDailyPtrType) ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemDailyPtrOutput)
}

func (i *cloudBackupSchedulePolicyItemDailyPtrType) ToOutput(ctx context.Context) pulumix.Output[*CloudBackupSchedulePolicyItemDaily] {
	return pulumix.Output[*CloudBackupSchedulePolicyItemDaily]{
		OutputState: i.ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx).OutputState,
	}
}

type CloudBackupSchedulePolicyItemDailyOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemDailyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemDailyOutput) ToCloudBackupSchedulePolicyItemDailyOutput() CloudBackupSchedulePolicyItemDailyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemDailyOutput) ToCloudBackupSchedulePolicyItemDailyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemDailyOutput) ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput {
	return o.ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(context.Background())
}

func (o CloudBackupSchedulePolicyItemDailyOutput) ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudBackupSchedulePolicyItemDaily) *CloudBackupSchedulePolicyItemDaily {
		return &v
	}).(CloudBackupSchedulePolicyItemDailyPtrOutput)
}

func (o CloudBackupSchedulePolicyItemDailyOutput) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSchedulePolicyItemDaily] {
	return pulumix.Output[CloudBackupSchedulePolicyItemDaily]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (daily in this case). The only supported value for daily policies is `1` day.
func (o CloudBackupSchedulePolicyItemDailyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For daily policies, the frequency type is defined as `daily`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o CloudBackupSchedulePolicyItemDailyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o CloudBackupSchedulePolicyItemDailyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o CloudBackupSchedulePolicyItemDailyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`.  Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the hourly policy item specifies a retention of two days, the daily retention policy must specify two days or greater.
func (o CloudBackupSchedulePolicyItemDailyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudBackupSchedulePolicyItemDailyPtrOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemDailyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemDailyPtrOutput) ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemDailyPtrOutput) ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemDailyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudBackupSchedulePolicyItemDaily] {
	return pulumix.Output[*CloudBackupSchedulePolicyItemDaily]{
		OutputState: o.OutputState,
	}
}

func (o CloudBackupSchedulePolicyItemDailyPtrOutput) Elem() CloudBackupSchedulePolicyItemDailyOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) CloudBackupSchedulePolicyItemDaily {
		if v != nil {
			return *v
		}
		var ret CloudBackupSchedulePolicyItemDaily
		return ret
	}).(CloudBackupSchedulePolicyItemDailyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (daily in this case). The only supported value for daily policies is `1` day.
func (o CloudBackupSchedulePolicyItemDailyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For daily policies, the frequency type is defined as `daily`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o CloudBackupSchedulePolicyItemDailyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o CloudBackupSchedulePolicyItemDailyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o CloudBackupSchedulePolicyItemDailyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`.  Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the hourly policy item specifies a retention of two days, the daily retention policy must specify two days or greater.
func (o CloudBackupSchedulePolicyItemDailyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type CloudBackupSchedulePolicyItemHourly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (hourly in this case). The supported values for hourly policies are `1`, `2`, `4`, `6`, `8` or `12` hours. Note that `12` hours is the only accepted value for NVMe clusters.
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For hourly policies, the frequency type is defined as `hourly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue int `pulumi:"retentionValue"`
}

// CloudBackupSchedulePolicyItemHourlyInput is an input type that accepts CloudBackupSchedulePolicyItemHourlyArgs and CloudBackupSchedulePolicyItemHourlyOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemHourlyInput` via:
//
//	CloudBackupSchedulePolicyItemHourlyArgs{...}
type CloudBackupSchedulePolicyItemHourlyInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemHourlyOutput() CloudBackupSchedulePolicyItemHourlyOutput
	ToCloudBackupSchedulePolicyItemHourlyOutputWithContext(context.Context) CloudBackupSchedulePolicyItemHourlyOutput
}

type CloudBackupSchedulePolicyItemHourlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (hourly in this case). The supported values for hourly policies are `1`, `2`, `4`, `6`, `8` or `12` hours. Note that `12` hours is the only accepted value for NVMe clusters.
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For hourly policies, the frequency type is defined as `hourly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (CloudBackupSchedulePolicyItemHourlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemHourlyArgs) ToCloudBackupSchedulePolicyItemHourlyOutput() CloudBackupSchedulePolicyItemHourlyOutput {
	return i.ToCloudBackupSchedulePolicyItemHourlyOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemHourlyArgs) ToCloudBackupSchedulePolicyItemHourlyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemHourlyOutput)
}

func (i CloudBackupSchedulePolicyItemHourlyArgs) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSchedulePolicyItemHourly] {
	return pulumix.Output[CloudBackupSchedulePolicyItemHourly]{
		OutputState: i.ToCloudBackupSchedulePolicyItemHourlyOutputWithContext(ctx).OutputState,
	}
}

func (i CloudBackupSchedulePolicyItemHourlyArgs) ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemHourlyArgs) ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemHourlyOutput).ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx)
}

// CloudBackupSchedulePolicyItemHourlyPtrInput is an input type that accepts CloudBackupSchedulePolicyItemHourlyArgs, CloudBackupSchedulePolicyItemHourlyPtr and CloudBackupSchedulePolicyItemHourlyPtrOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemHourlyPtrInput` via:
//
//	        CloudBackupSchedulePolicyItemHourlyArgs{...}
//
//	or:
//
//	        nil
type CloudBackupSchedulePolicyItemHourlyPtrInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput
	ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput
}

type cloudBackupSchedulePolicyItemHourlyPtrType CloudBackupSchedulePolicyItemHourlyArgs

func CloudBackupSchedulePolicyItemHourlyPtr(v *CloudBackupSchedulePolicyItemHourlyArgs) CloudBackupSchedulePolicyItemHourlyPtrInput {
	return (*cloudBackupSchedulePolicyItemHourlyPtrType)(v)
}

func (*cloudBackupSchedulePolicyItemHourlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (i *cloudBackupSchedulePolicyItemHourlyPtrType) ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (i *cloudBackupSchedulePolicyItemHourlyPtrType) ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemHourlyPtrOutput)
}

func (i *cloudBackupSchedulePolicyItemHourlyPtrType) ToOutput(ctx context.Context) pulumix.Output[*CloudBackupSchedulePolicyItemHourly] {
	return pulumix.Output[*CloudBackupSchedulePolicyItemHourly]{
		OutputState: i.ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx).OutputState,
	}
}

type CloudBackupSchedulePolicyItemHourlyOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemHourlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) ToCloudBackupSchedulePolicyItemHourlyOutput() CloudBackupSchedulePolicyItemHourlyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) ToCloudBackupSchedulePolicyItemHourlyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return o.ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudBackupSchedulePolicyItemHourly) *CloudBackupSchedulePolicyItemHourly {
		return &v
	}).(CloudBackupSchedulePolicyItemHourlyPtrOutput)
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSchedulePolicyItemHourly] {
	return pulumix.Output[CloudBackupSchedulePolicyItemHourly]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (hourly in this case). The supported values for hourly policies are `1`, `2`, `4`, `6`, `8` or `12` hours. Note that `12` hours is the only accepted value for NVMe clusters.
func (o CloudBackupSchedulePolicyItemHourlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For hourly policies, the frequency type is defined as `hourly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o CloudBackupSchedulePolicyItemHourlyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o CloudBackupSchedulePolicyItemHourlyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o CloudBackupSchedulePolicyItemHourlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`.
func (o CloudBackupSchedulePolicyItemHourlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudBackupSchedulePolicyItemHourlyPtrOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemHourlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudBackupSchedulePolicyItemHourly] {
	return pulumix.Output[*CloudBackupSchedulePolicyItemHourly]{
		OutputState: o.OutputState,
	}
}

func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) Elem() CloudBackupSchedulePolicyItemHourlyOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) CloudBackupSchedulePolicyItemHourly {
		if v != nil {
			return *v
		}
		var ret CloudBackupSchedulePolicyItemHourly
		return ret
	}).(CloudBackupSchedulePolicyItemHourlyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (hourly in this case). The supported values for hourly policies are `1`, `2`, `4`, `6`, `8` or `12` hours. Note that `12` hours is the only accepted value for NVMe clusters.
func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For hourly policies, the frequency type is defined as `hourly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`.
func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type CloudBackupSchedulePolicyItemMonthly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// CloudBackupSchedulePolicyItemMonthlyInput is an input type that accepts CloudBackupSchedulePolicyItemMonthlyArgs and CloudBackupSchedulePolicyItemMonthlyOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemMonthlyInput` via:
//
//	CloudBackupSchedulePolicyItemMonthlyArgs{...}
type CloudBackupSchedulePolicyItemMonthlyInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemMonthlyOutput() CloudBackupSchedulePolicyItemMonthlyOutput
	ToCloudBackupSchedulePolicyItemMonthlyOutputWithContext(context.Context) CloudBackupSchedulePolicyItemMonthlyOutput
}

type CloudBackupSchedulePolicyItemMonthlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (CloudBackupSchedulePolicyItemMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemMonthlyArgs) ToCloudBackupSchedulePolicyItemMonthlyOutput() CloudBackupSchedulePolicyItemMonthlyOutput {
	return i.ToCloudBackupSchedulePolicyItemMonthlyOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemMonthlyArgs) ToCloudBackupSchedulePolicyItemMonthlyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemMonthlyOutput)
}

func (i CloudBackupSchedulePolicyItemMonthlyArgs) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSchedulePolicyItemMonthly] {
	return pulumix.Output[CloudBackupSchedulePolicyItemMonthly]{
		OutputState: i.ToCloudBackupSchedulePolicyItemMonthlyOutputWithContext(ctx).OutputState,
	}
}

// CloudBackupSchedulePolicyItemMonthlyArrayInput is an input type that accepts CloudBackupSchedulePolicyItemMonthlyArray and CloudBackupSchedulePolicyItemMonthlyArrayOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemMonthlyArrayInput` via:
//
//	CloudBackupSchedulePolicyItemMonthlyArray{ CloudBackupSchedulePolicyItemMonthlyArgs{...} }
type CloudBackupSchedulePolicyItemMonthlyArrayInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemMonthlyArrayOutput() CloudBackupSchedulePolicyItemMonthlyArrayOutput
	ToCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(context.Context) CloudBackupSchedulePolicyItemMonthlyArrayOutput
}

type CloudBackupSchedulePolicyItemMonthlyArray []CloudBackupSchedulePolicyItemMonthlyInput

func (CloudBackupSchedulePolicyItemMonthlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemMonthlyArray) ToCloudBackupSchedulePolicyItemMonthlyArrayOutput() CloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return i.ToCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemMonthlyArray) ToCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemMonthlyArrayOutput)
}

func (i CloudBackupSchedulePolicyItemMonthlyArray) ToOutput(ctx context.Context) pulumix.Output[[]CloudBackupSchedulePolicyItemMonthly] {
	return pulumix.Output[[]CloudBackupSchedulePolicyItemMonthly]{
		OutputState: i.ToCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(ctx).OutputState,
	}
}

type CloudBackupSchedulePolicyItemMonthlyOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemMonthlyOutput) ToCloudBackupSchedulePolicyItemMonthlyOutput() CloudBackupSchedulePolicyItemMonthlyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemMonthlyOutput) ToCloudBackupSchedulePolicyItemMonthlyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemMonthlyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemMonthlyOutput) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSchedulePolicyItemMonthly] {
	return pulumix.Output[CloudBackupSchedulePolicyItemMonthly]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o CloudBackupSchedulePolicyItemMonthlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o CloudBackupSchedulePolicyItemMonthlyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o CloudBackupSchedulePolicyItemMonthlyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o CloudBackupSchedulePolicyItemMonthlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o CloudBackupSchedulePolicyItemMonthlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudBackupSchedulePolicyItemMonthlyArrayOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemMonthlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemMonthlyArrayOutput) ToCloudBackupSchedulePolicyItemMonthlyArrayOutput() CloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemMonthlyArrayOutput) ToCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemMonthlyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CloudBackupSchedulePolicyItemMonthly] {
	return pulumix.Output[[]CloudBackupSchedulePolicyItemMonthly]{
		OutputState: o.OutputState,
	}
}

func (o CloudBackupSchedulePolicyItemMonthlyArrayOutput) Index(i pulumi.IntInput) CloudBackupSchedulePolicyItemMonthlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudBackupSchedulePolicyItemMonthly {
		return vs[0].([]CloudBackupSchedulePolicyItemMonthly)[vs[1].(int)]
	}).(CloudBackupSchedulePolicyItemMonthlyOutput)
}

type CloudBackupSchedulePolicyItemWeekly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (weekly in this case). The supported values for weekly policies are `1` through `7`, where `1` represents Monday and `7` represents Sunday.
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For weekly policies, the frequency type is defined as `weekly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType *string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id *string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Weekly policy must have retention of at least 7 days or 1 week. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the daily policy item specifies a retention of two weeks, the weekly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// CloudBackupSchedulePolicyItemWeeklyInput is an input type that accepts CloudBackupSchedulePolicyItemWeeklyArgs and CloudBackupSchedulePolicyItemWeeklyOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemWeeklyInput` via:
//
//	CloudBackupSchedulePolicyItemWeeklyArgs{...}
type CloudBackupSchedulePolicyItemWeeklyInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemWeeklyOutput() CloudBackupSchedulePolicyItemWeeklyOutput
	ToCloudBackupSchedulePolicyItemWeeklyOutputWithContext(context.Context) CloudBackupSchedulePolicyItemWeeklyOutput
}

type CloudBackupSchedulePolicyItemWeeklyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (weekly in this case). The supported values for weekly policies are `1` through `7`, where `1` represents Monday and `7` represents Sunday.
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For weekly policies, the frequency type is defined as `weekly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Weekly policy must have retention of at least 7 days or 1 week. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the daily policy item specifies a retention of two weeks, the weekly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (CloudBackupSchedulePolicyItemWeeklyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemWeeklyArgs) ToCloudBackupSchedulePolicyItemWeeklyOutput() CloudBackupSchedulePolicyItemWeeklyOutput {
	return i.ToCloudBackupSchedulePolicyItemWeeklyOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemWeeklyArgs) ToCloudBackupSchedulePolicyItemWeeklyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemWeeklyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemWeeklyOutput)
}

func (i CloudBackupSchedulePolicyItemWeeklyArgs) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSchedulePolicyItemWeekly] {
	return pulumix.Output[CloudBackupSchedulePolicyItemWeekly]{
		OutputState: i.ToCloudBackupSchedulePolicyItemWeeklyOutputWithContext(ctx).OutputState,
	}
}

// CloudBackupSchedulePolicyItemWeeklyArrayInput is an input type that accepts CloudBackupSchedulePolicyItemWeeklyArray and CloudBackupSchedulePolicyItemWeeklyArrayOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemWeeklyArrayInput` via:
//
//	CloudBackupSchedulePolicyItemWeeklyArray{ CloudBackupSchedulePolicyItemWeeklyArgs{...} }
type CloudBackupSchedulePolicyItemWeeklyArrayInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemWeeklyArrayOutput() CloudBackupSchedulePolicyItemWeeklyArrayOutput
	ToCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(context.Context) CloudBackupSchedulePolicyItemWeeklyArrayOutput
}

type CloudBackupSchedulePolicyItemWeeklyArray []CloudBackupSchedulePolicyItemWeeklyInput

func (CloudBackupSchedulePolicyItemWeeklyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemWeeklyArray) ToCloudBackupSchedulePolicyItemWeeklyArrayOutput() CloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return i.ToCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemWeeklyArray) ToCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemWeeklyArrayOutput)
}

func (i CloudBackupSchedulePolicyItemWeeklyArray) ToOutput(ctx context.Context) pulumix.Output[[]CloudBackupSchedulePolicyItemWeekly] {
	return pulumix.Output[[]CloudBackupSchedulePolicyItemWeekly]{
		OutputState: i.ToCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(ctx).OutputState,
	}
}

type CloudBackupSchedulePolicyItemWeeklyOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemWeeklyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemWeeklyOutput) ToCloudBackupSchedulePolicyItemWeeklyOutput() CloudBackupSchedulePolicyItemWeeklyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemWeeklyOutput) ToCloudBackupSchedulePolicyItemWeeklyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemWeeklyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemWeeklyOutput) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSchedulePolicyItemWeekly] {
	return pulumix.Output[CloudBackupSchedulePolicyItemWeekly]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (weekly in this case). The supported values for weekly policies are `1` through `7`, where `1` represents Monday and `7` represents Sunday.
func (o CloudBackupSchedulePolicyItemWeeklyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For weekly policies, the frequency type is defined as `weekly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o CloudBackupSchedulePolicyItemWeeklyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o CloudBackupSchedulePolicyItemWeeklyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o CloudBackupSchedulePolicyItemWeeklyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Weekly policy must have retention of at least 7 days or 1 week. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the daily policy item specifies a retention of two weeks, the weekly retention policy must specify two weeks or greater.
func (o CloudBackupSchedulePolicyItemWeeklyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudBackupSchedulePolicyItemWeeklyArrayOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemWeeklyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemWeeklyArrayOutput) ToCloudBackupSchedulePolicyItemWeeklyArrayOutput() CloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemWeeklyArrayOutput) ToCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemWeeklyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CloudBackupSchedulePolicyItemWeekly] {
	return pulumix.Output[[]CloudBackupSchedulePolicyItemWeekly]{
		OutputState: o.OutputState,
	}
}

func (o CloudBackupSchedulePolicyItemWeeklyArrayOutput) Index(i pulumi.IntInput) CloudBackupSchedulePolicyItemWeeklyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudBackupSchedulePolicyItemWeekly {
		return vs[0].([]CloudBackupSchedulePolicyItemWeekly)[vs[1].(int)]
	}).(CloudBackupSchedulePolicyItemWeeklyOutput)
}

type CloudBackupSnapshotExportJobComponent struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	ExportId *string `pulumi:"exportId"`
	// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
	ReplicaSetName *string `pulumi:"replicaSetName"`
}

// CloudBackupSnapshotExportJobComponentInput is an input type that accepts CloudBackupSnapshotExportJobComponentArgs and CloudBackupSnapshotExportJobComponentOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotExportJobComponentInput` via:
//
//	CloudBackupSnapshotExportJobComponentArgs{...}
type CloudBackupSnapshotExportJobComponentInput interface {
	pulumi.Input

	ToCloudBackupSnapshotExportJobComponentOutput() CloudBackupSnapshotExportJobComponentOutput
	ToCloudBackupSnapshotExportJobComponentOutputWithContext(context.Context) CloudBackupSnapshotExportJobComponentOutput
}

type CloudBackupSnapshotExportJobComponentArgs struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	ExportId pulumi.StringPtrInput `pulumi:"exportId"`
	// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
	ReplicaSetName pulumi.StringPtrInput `pulumi:"replicaSetName"`
}

func (CloudBackupSnapshotExportJobComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (i CloudBackupSnapshotExportJobComponentArgs) ToCloudBackupSnapshotExportJobComponentOutput() CloudBackupSnapshotExportJobComponentOutput {
	return i.ToCloudBackupSnapshotExportJobComponentOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotExportJobComponentArgs) ToCloudBackupSnapshotExportJobComponentOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotExportJobComponentOutput)
}

func (i CloudBackupSnapshotExportJobComponentArgs) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSnapshotExportJobComponent] {
	return pulumix.Output[CloudBackupSnapshotExportJobComponent]{
		OutputState: i.ToCloudBackupSnapshotExportJobComponentOutputWithContext(ctx).OutputState,
	}
}

// CloudBackupSnapshotExportJobComponentArrayInput is an input type that accepts CloudBackupSnapshotExportJobComponentArray and CloudBackupSnapshotExportJobComponentArrayOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotExportJobComponentArrayInput` via:
//
//	CloudBackupSnapshotExportJobComponentArray{ CloudBackupSnapshotExportJobComponentArgs{...} }
type CloudBackupSnapshotExportJobComponentArrayInput interface {
	pulumi.Input

	ToCloudBackupSnapshotExportJobComponentArrayOutput() CloudBackupSnapshotExportJobComponentArrayOutput
	ToCloudBackupSnapshotExportJobComponentArrayOutputWithContext(context.Context) CloudBackupSnapshotExportJobComponentArrayOutput
}

type CloudBackupSnapshotExportJobComponentArray []CloudBackupSnapshotExportJobComponentInput

func (CloudBackupSnapshotExportJobComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (i CloudBackupSnapshotExportJobComponentArray) ToCloudBackupSnapshotExportJobComponentArrayOutput() CloudBackupSnapshotExportJobComponentArrayOutput {
	return i.ToCloudBackupSnapshotExportJobComponentArrayOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotExportJobComponentArray) ToCloudBackupSnapshotExportJobComponentArrayOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotExportJobComponentArrayOutput)
}

func (i CloudBackupSnapshotExportJobComponentArray) ToOutput(ctx context.Context) pulumix.Output[[]CloudBackupSnapshotExportJobComponent] {
	return pulumix.Output[[]CloudBackupSnapshotExportJobComponent]{
		OutputState: i.ToCloudBackupSnapshotExportJobComponentArrayOutputWithContext(ctx).OutputState,
	}
}

type CloudBackupSnapshotExportJobComponentOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotExportJobComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (o CloudBackupSnapshotExportJobComponentOutput) ToCloudBackupSnapshotExportJobComponentOutput() CloudBackupSnapshotExportJobComponentOutput {
	return o
}

func (o CloudBackupSnapshotExportJobComponentOutput) ToCloudBackupSnapshotExportJobComponentOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobComponentOutput {
	return o
}

func (o CloudBackupSnapshotExportJobComponentOutput) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSnapshotExportJobComponent] {
	return pulumix.Output[CloudBackupSnapshotExportJobComponent]{
		OutputState: o.OutputState,
	}
}

// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
func (o CloudBackupSnapshotExportJobComponentOutput) ExportId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotExportJobComponent) *string { return v.ExportId }).(pulumi.StringPtrOutput)
}

// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
func (o CloudBackupSnapshotExportJobComponentOutput) ReplicaSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotExportJobComponent) *string { return v.ReplicaSetName }).(pulumi.StringPtrOutput)
}

type CloudBackupSnapshotExportJobComponentArrayOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotExportJobComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (o CloudBackupSnapshotExportJobComponentArrayOutput) ToCloudBackupSnapshotExportJobComponentArrayOutput() CloudBackupSnapshotExportJobComponentArrayOutput {
	return o
}

func (o CloudBackupSnapshotExportJobComponentArrayOutput) ToCloudBackupSnapshotExportJobComponentArrayOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobComponentArrayOutput {
	return o
}

func (o CloudBackupSnapshotExportJobComponentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CloudBackupSnapshotExportJobComponent] {
	return pulumix.Output[[]CloudBackupSnapshotExportJobComponent]{
		OutputState: o.OutputState,
	}
}

func (o CloudBackupSnapshotExportJobComponentArrayOutput) Index(i pulumi.IntInput) CloudBackupSnapshotExportJobComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudBackupSnapshotExportJobComponent {
		return vs[0].([]CloudBackupSnapshotExportJobComponent)[vs[1].(int)]
	}).(CloudBackupSnapshotExportJobComponentOutput)
}

type CloudBackupSnapshotExportJobCustomData struct {
	// Required if you want to include custom data using `customData` in the metadata file uploaded to the bucket. Key to include in the metadata file that Atlas uploads to the bucket when the export job finishes.
	Key string `pulumi:"key"`
	// Required if you specify `key`.
	Value string `pulumi:"value"`
}

// CloudBackupSnapshotExportJobCustomDataInput is an input type that accepts CloudBackupSnapshotExportJobCustomDataArgs and CloudBackupSnapshotExportJobCustomDataOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotExportJobCustomDataInput` via:
//
//	CloudBackupSnapshotExportJobCustomDataArgs{...}
type CloudBackupSnapshotExportJobCustomDataInput interface {
	pulumi.Input

	ToCloudBackupSnapshotExportJobCustomDataOutput() CloudBackupSnapshotExportJobCustomDataOutput
	ToCloudBackupSnapshotExportJobCustomDataOutputWithContext(context.Context) CloudBackupSnapshotExportJobCustomDataOutput
}

type CloudBackupSnapshotExportJobCustomDataArgs struct {
	// Required if you want to include custom data using `customData` in the metadata file uploaded to the bucket. Key to include in the metadata file that Atlas uploads to the bucket when the export job finishes.
	Key pulumi.StringInput `pulumi:"key"`
	// Required if you specify `key`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CloudBackupSnapshotExportJobCustomDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (i CloudBackupSnapshotExportJobCustomDataArgs) ToCloudBackupSnapshotExportJobCustomDataOutput() CloudBackupSnapshotExportJobCustomDataOutput {
	return i.ToCloudBackupSnapshotExportJobCustomDataOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotExportJobCustomDataArgs) ToCloudBackupSnapshotExportJobCustomDataOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobCustomDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotExportJobCustomDataOutput)
}

func (i CloudBackupSnapshotExportJobCustomDataArgs) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSnapshotExportJobCustomData] {
	return pulumix.Output[CloudBackupSnapshotExportJobCustomData]{
		OutputState: i.ToCloudBackupSnapshotExportJobCustomDataOutputWithContext(ctx).OutputState,
	}
}

// CloudBackupSnapshotExportJobCustomDataArrayInput is an input type that accepts CloudBackupSnapshotExportJobCustomDataArray and CloudBackupSnapshotExportJobCustomDataArrayOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotExportJobCustomDataArrayInput` via:
//
//	CloudBackupSnapshotExportJobCustomDataArray{ CloudBackupSnapshotExportJobCustomDataArgs{...} }
type CloudBackupSnapshotExportJobCustomDataArrayInput interface {
	pulumi.Input

	ToCloudBackupSnapshotExportJobCustomDataArrayOutput() CloudBackupSnapshotExportJobCustomDataArrayOutput
	ToCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(context.Context) CloudBackupSnapshotExportJobCustomDataArrayOutput
}

type CloudBackupSnapshotExportJobCustomDataArray []CloudBackupSnapshotExportJobCustomDataInput

func (CloudBackupSnapshotExportJobCustomDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (i CloudBackupSnapshotExportJobCustomDataArray) ToCloudBackupSnapshotExportJobCustomDataArrayOutput() CloudBackupSnapshotExportJobCustomDataArrayOutput {
	return i.ToCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotExportJobCustomDataArray) ToCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobCustomDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotExportJobCustomDataArrayOutput)
}

func (i CloudBackupSnapshotExportJobCustomDataArray) ToOutput(ctx context.Context) pulumix.Output[[]CloudBackupSnapshotExportJobCustomData] {
	return pulumix.Output[[]CloudBackupSnapshotExportJobCustomData]{
		OutputState: i.ToCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(ctx).OutputState,
	}
}

type CloudBackupSnapshotExportJobCustomDataOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotExportJobCustomDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (o CloudBackupSnapshotExportJobCustomDataOutput) ToCloudBackupSnapshotExportJobCustomDataOutput() CloudBackupSnapshotExportJobCustomDataOutput {
	return o
}

func (o CloudBackupSnapshotExportJobCustomDataOutput) ToCloudBackupSnapshotExportJobCustomDataOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobCustomDataOutput {
	return o
}

func (o CloudBackupSnapshotExportJobCustomDataOutput) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSnapshotExportJobCustomData] {
	return pulumix.Output[CloudBackupSnapshotExportJobCustomData]{
		OutputState: o.OutputState,
	}
}

// Required if you want to include custom data using `customData` in the metadata file uploaded to the bucket. Key to include in the metadata file that Atlas uploads to the bucket when the export job finishes.
func (o CloudBackupSnapshotExportJobCustomDataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSnapshotExportJobCustomData) string { return v.Key }).(pulumi.StringOutput)
}

// Required if you specify `key`.
func (o CloudBackupSnapshotExportJobCustomDataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSnapshotExportJobCustomData) string { return v.Value }).(pulumi.StringOutput)
}

type CloudBackupSnapshotExportJobCustomDataArrayOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotExportJobCustomDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (o CloudBackupSnapshotExportJobCustomDataArrayOutput) ToCloudBackupSnapshotExportJobCustomDataArrayOutput() CloudBackupSnapshotExportJobCustomDataArrayOutput {
	return o
}

func (o CloudBackupSnapshotExportJobCustomDataArrayOutput) ToCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(ctx context.Context) CloudBackupSnapshotExportJobCustomDataArrayOutput {
	return o
}

func (o CloudBackupSnapshotExportJobCustomDataArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CloudBackupSnapshotExportJobCustomData] {
	return pulumix.Output[[]CloudBackupSnapshotExportJobCustomData]{
		OutputState: o.OutputState,
	}
}

func (o CloudBackupSnapshotExportJobCustomDataArrayOutput) Index(i pulumi.IntInput) CloudBackupSnapshotExportJobCustomDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudBackupSnapshotExportJobCustomData {
		return vs[0].([]CloudBackupSnapshotExportJobCustomData)[vs[1].(int)]
	}).(CloudBackupSnapshotExportJobCustomDataOutput)
}

type CloudBackupSnapshotMember struct {
	// Cloud provider that stores this snapshot.
	CloudProvider *string `pulumi:"cloudProvider"`
	// Unique identifier for the sharded cluster snapshot.
	Id *string `pulumi:"id"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName *string `pulumi:"replicaSetName"`
}

// CloudBackupSnapshotMemberInput is an input type that accepts CloudBackupSnapshotMemberArgs and CloudBackupSnapshotMemberOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotMemberInput` via:
//
//	CloudBackupSnapshotMemberArgs{...}
type CloudBackupSnapshotMemberInput interface {
	pulumi.Input

	ToCloudBackupSnapshotMemberOutput() CloudBackupSnapshotMemberOutput
	ToCloudBackupSnapshotMemberOutputWithContext(context.Context) CloudBackupSnapshotMemberOutput
}

type CloudBackupSnapshotMemberArgs struct {
	// Cloud provider that stores this snapshot.
	CloudProvider pulumi.StringPtrInput `pulumi:"cloudProvider"`
	// Unique identifier for the sharded cluster snapshot.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName pulumi.StringPtrInput `pulumi:"replicaSetName"`
}

func (CloudBackupSnapshotMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotMember)(nil)).Elem()
}

func (i CloudBackupSnapshotMemberArgs) ToCloudBackupSnapshotMemberOutput() CloudBackupSnapshotMemberOutput {
	return i.ToCloudBackupSnapshotMemberOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotMemberArgs) ToCloudBackupSnapshotMemberOutputWithContext(ctx context.Context) CloudBackupSnapshotMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotMemberOutput)
}

func (i CloudBackupSnapshotMemberArgs) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSnapshotMember] {
	return pulumix.Output[CloudBackupSnapshotMember]{
		OutputState: i.ToCloudBackupSnapshotMemberOutputWithContext(ctx).OutputState,
	}
}

// CloudBackupSnapshotMemberArrayInput is an input type that accepts CloudBackupSnapshotMemberArray and CloudBackupSnapshotMemberArrayOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotMemberArrayInput` via:
//
//	CloudBackupSnapshotMemberArray{ CloudBackupSnapshotMemberArgs{...} }
type CloudBackupSnapshotMemberArrayInput interface {
	pulumi.Input

	ToCloudBackupSnapshotMemberArrayOutput() CloudBackupSnapshotMemberArrayOutput
	ToCloudBackupSnapshotMemberArrayOutputWithContext(context.Context) CloudBackupSnapshotMemberArrayOutput
}

type CloudBackupSnapshotMemberArray []CloudBackupSnapshotMemberInput

func (CloudBackupSnapshotMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSnapshotMember)(nil)).Elem()
}

func (i CloudBackupSnapshotMemberArray) ToCloudBackupSnapshotMemberArrayOutput() CloudBackupSnapshotMemberArrayOutput {
	return i.ToCloudBackupSnapshotMemberArrayOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotMemberArray) ToCloudBackupSnapshotMemberArrayOutputWithContext(ctx context.Context) CloudBackupSnapshotMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotMemberArrayOutput)
}

func (i CloudBackupSnapshotMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]CloudBackupSnapshotMember] {
	return pulumix.Output[[]CloudBackupSnapshotMember]{
		OutputState: i.ToCloudBackupSnapshotMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type CloudBackupSnapshotMemberOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotMember)(nil)).Elem()
}

func (o CloudBackupSnapshotMemberOutput) ToCloudBackupSnapshotMemberOutput() CloudBackupSnapshotMemberOutput {
	return o
}

func (o CloudBackupSnapshotMemberOutput) ToCloudBackupSnapshotMemberOutputWithContext(ctx context.Context) CloudBackupSnapshotMemberOutput {
	return o
}

func (o CloudBackupSnapshotMemberOutput) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSnapshotMember] {
	return pulumix.Output[CloudBackupSnapshotMember]{
		OutputState: o.OutputState,
	}
}

// Cloud provider that stores this snapshot.
func (o CloudBackupSnapshotMemberOutput) CloudProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotMember) *string { return v.CloudProvider }).(pulumi.StringPtrOutput)
}

// Unique identifier for the sharded cluster snapshot.
func (o CloudBackupSnapshotMemberOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotMember) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Label given to a shard or config server from which Atlas took this snapshot.
func (o CloudBackupSnapshotMemberOutput) ReplicaSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotMember) *string { return v.ReplicaSetName }).(pulumi.StringPtrOutput)
}

type CloudBackupSnapshotMemberArrayOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudBackupSnapshotMember)(nil)).Elem()
}

func (o CloudBackupSnapshotMemberArrayOutput) ToCloudBackupSnapshotMemberArrayOutput() CloudBackupSnapshotMemberArrayOutput {
	return o
}

func (o CloudBackupSnapshotMemberArrayOutput) ToCloudBackupSnapshotMemberArrayOutputWithContext(ctx context.Context) CloudBackupSnapshotMemberArrayOutput {
	return o
}

func (o CloudBackupSnapshotMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CloudBackupSnapshotMember] {
	return pulumix.Output[[]CloudBackupSnapshotMember]{
		OutputState: o.OutputState,
	}
}

func (o CloudBackupSnapshotMemberArrayOutput) Index(i pulumi.IntInput) CloudBackupSnapshotMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudBackupSnapshotMember {
		return vs[0].([]CloudBackupSnapshotMember)[vs[1].(int)]
	}).(CloudBackupSnapshotMemberOutput)
}

type CloudBackupSnapshotRestoreJobDeliveryTypeConfig struct {
	Automated             *bool `pulumi:"automated"`
	Download              *bool `pulumi:"download"`
	OplogInc              *int  `pulumi:"oplogInc"`
	OplogTs               *int  `pulumi:"oplogTs"`
	PointInTime           *bool `pulumi:"pointInTime"`
	PointInTimeUtcSeconds *int  `pulumi:"pointInTimeUtcSeconds"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
	TargetClusterName *string `pulumi:"targetClusterName"`
	// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
	TargetProjectId *string `pulumi:"targetProjectId"`
}

// CloudBackupSnapshotRestoreJobDeliveryTypeConfigInput is an input type that accepts CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs and CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotRestoreJobDeliveryTypeConfigInput` via:
//
//	CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs{...}
type CloudBackupSnapshotRestoreJobDeliveryTypeConfigInput interface {
	pulumi.Input

	ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput
	ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput
}

type CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs struct {
	Automated             pulumi.BoolPtrInput `pulumi:"automated"`
	Download              pulumi.BoolPtrInput `pulumi:"download"`
	OplogInc              pulumi.IntPtrInput  `pulumi:"oplogInc"`
	OplogTs               pulumi.IntPtrInput  `pulumi:"oplogTs"`
	PointInTime           pulumi.BoolPtrInput `pulumi:"pointInTime"`
	PointInTimeUtcSeconds pulumi.IntPtrInput  `pulumi:"pointInTimeUtcSeconds"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
	TargetClusterName pulumi.StringPtrInput `pulumi:"targetClusterName"`
	// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
	TargetProjectId pulumi.StringPtrInput `pulumi:"targetProjectId"`
}

func (CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (i CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput {
	return i.ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(ctx context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput)
}

func (i CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSnapshotRestoreJobDeliveryTypeConfig] {
	return pulumix.Output[CloudBackupSnapshotRestoreJobDeliveryTypeConfig]{
		OutputState: i.ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(ctx).OutputState,
	}
}

func (i CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return i.ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Background())
}

func (i CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput).ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx)
}

// CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrInput is an input type that accepts CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs, CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtr and CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput values.
// You can construct a concrete instance of `CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrInput` via:
//
//	        CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs{...}
//
//	or:
//
//	        nil
type CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrInput interface {
	pulumi.Input

	ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput
	ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput
}

type cloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrType CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs

func CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtr(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs) CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrInput {
	return (*cloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrType)(v)
}

func (*cloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (i *cloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrType) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return i.ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Background())
}

func (i *cloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrType) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput)
}

func (i *cloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*CloudBackupSnapshotRestoreJobDeliveryTypeConfig] {
	return pulumix.Output[*CloudBackupSnapshotRestoreJobDeliveryTypeConfig]{
		OutputState: i.ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput {
	return o
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(ctx context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput {
	return o
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o.ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Background())
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *CloudBackupSnapshotRestoreJobDeliveryTypeConfig {
		return &v
	}).(CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) ToOutput(ctx context.Context) pulumix.Output[CloudBackupSnapshotRestoreJobDeliveryTypeConfig] {
	return pulumix.Output[CloudBackupSnapshotRestoreJobDeliveryTypeConfig]{
		OutputState: o.OutputState,
	}
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) Automated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *bool { return v.Automated }).(pulumi.BoolPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) Download() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *bool { return v.Download }).(pulumi.BoolPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) OplogInc() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *int { return v.OplogInc }).(pulumi.IntPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) OplogTs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *int { return v.OplogTs }).(pulumi.IntPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) PointInTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *bool { return v.PointInTime }).(pulumi.BoolPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) PointInTimeUtcSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *int { return v.PointInTimeUtcSeconds }).(pulumi.IntPtrOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) TargetClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *string { return v.TargetClusterName }).(pulumi.StringPtrOutput)
}

// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput) TargetProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *string { return v.TargetProjectId }).(pulumi.StringPtrOutput)
}

type CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput struct{ *pulumi.OutputState }

func (CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) ToCloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudBackupSnapshotRestoreJobDeliveryTypeConfig] {
	return pulumix.Output[*CloudBackupSnapshotRestoreJobDeliveryTypeConfig]{
		OutputState: o.OutputState,
	}
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) Elem() CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) CloudBackupSnapshotRestoreJobDeliveryTypeConfig {
		if v != nil {
			return *v
		}
		var ret CloudBackupSnapshotRestoreJobDeliveryTypeConfig
		return ret
	}).(CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) Automated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Automated
	}).(pulumi.BoolPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) Download() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Download
	}).(pulumi.BoolPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) OplogInc() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *int {
		if v == nil {
			return nil
		}
		return v.OplogInc
	}).(pulumi.IntPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) OplogTs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *int {
		if v == nil {
			return nil
		}
		return v.OplogTs
	}).(pulumi.IntPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) PointInTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.PointInTime
	}).(pulumi.BoolPtrOutput)
}

func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) PointInTimeUtcSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *int {
		if v == nil {
			return nil
		}
		return v.PointInTimeUtcSeconds
	}).(pulumi.IntPtrOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) TargetClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *string {
		if v == nil {
			return nil
		}
		return v.TargetClusterName
	}).(pulumi.StringPtrOutput)
}

// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
func (o CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput) TargetProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSnapshotRestoreJobDeliveryTypeConfig) *string {
		if v == nil {
			return nil
		}
		return v.TargetProjectId
	}).(pulumi.StringPtrOutput)
}

type CloudProviderAccessAuthorizationAws struct {
	IamAssumedRoleArn string `pulumi:"iamAssumedRoleArn"`
}

// CloudProviderAccessAuthorizationAwsInput is an input type that accepts CloudProviderAccessAuthorizationAwsArgs and CloudProviderAccessAuthorizationAwsOutput values.
// You can construct a concrete instance of `CloudProviderAccessAuthorizationAwsInput` via:
//
//	CloudProviderAccessAuthorizationAwsArgs{...}
type CloudProviderAccessAuthorizationAwsInput interface {
	pulumi.Input

	ToCloudProviderAccessAuthorizationAwsOutput() CloudProviderAccessAuthorizationAwsOutput
	ToCloudProviderAccessAuthorizationAwsOutputWithContext(context.Context) CloudProviderAccessAuthorizationAwsOutput
}

type CloudProviderAccessAuthorizationAwsArgs struct {
	IamAssumedRoleArn pulumi.StringInput `pulumi:"iamAssumedRoleArn"`
}

func (CloudProviderAccessAuthorizationAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessAuthorizationAws)(nil)).Elem()
}

func (i CloudProviderAccessAuthorizationAwsArgs) ToCloudProviderAccessAuthorizationAwsOutput() CloudProviderAccessAuthorizationAwsOutput {
	return i.ToCloudProviderAccessAuthorizationAwsOutputWithContext(context.Background())
}

func (i CloudProviderAccessAuthorizationAwsArgs) ToCloudProviderAccessAuthorizationAwsOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationAwsOutput)
}

func (i CloudProviderAccessAuthorizationAwsArgs) ToOutput(ctx context.Context) pulumix.Output[CloudProviderAccessAuthorizationAws] {
	return pulumix.Output[CloudProviderAccessAuthorizationAws]{
		OutputState: i.ToCloudProviderAccessAuthorizationAwsOutputWithContext(ctx).OutputState,
	}
}

func (i CloudProviderAccessAuthorizationAwsArgs) ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput {
	return i.ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(context.Background())
}

func (i CloudProviderAccessAuthorizationAwsArgs) ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationAwsOutput).ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx)
}

// CloudProviderAccessAuthorizationAwsPtrInput is an input type that accepts CloudProviderAccessAuthorizationAwsArgs, CloudProviderAccessAuthorizationAwsPtr and CloudProviderAccessAuthorizationAwsPtrOutput values.
// You can construct a concrete instance of `CloudProviderAccessAuthorizationAwsPtrInput` via:
//
//	        CloudProviderAccessAuthorizationAwsArgs{...}
//
//	or:
//
//	        nil
type CloudProviderAccessAuthorizationAwsPtrInput interface {
	pulumi.Input

	ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput
	ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(context.Context) CloudProviderAccessAuthorizationAwsPtrOutput
}

type cloudProviderAccessAuthorizationAwsPtrType CloudProviderAccessAuthorizationAwsArgs

func CloudProviderAccessAuthorizationAwsPtr(v *CloudProviderAccessAuthorizationAwsArgs) CloudProviderAccessAuthorizationAwsPtrInput {
	return (*cloudProviderAccessAuthorizationAwsPtrType)(v)
}

func (*cloudProviderAccessAuthorizationAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderAccessAuthorizationAws)(nil)).Elem()
}

func (i *cloudProviderAccessAuthorizationAwsPtrType) ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput {
	return i.ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(context.Background())
}

func (i *cloudProviderAccessAuthorizationAwsPtrType) ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationAwsPtrOutput)
}

func (i *cloudProviderAccessAuthorizationAwsPtrType) ToOutput(ctx context.Context) pulumix.Output[*CloudProviderAccessAuthorizationAws] {
	return pulumix.Output[*CloudProviderAccessAuthorizationAws]{
		OutputState: i.ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx).OutputState,
	}
}

type CloudProviderAccessAuthorizationAwsOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessAuthorizationAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessAuthorizationAws)(nil)).Elem()
}

func (o CloudProviderAccessAuthorizationAwsOutput) ToCloudProviderAccessAuthorizationAwsOutput() CloudProviderAccessAuthorizationAwsOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAwsOutput) ToCloudProviderAccessAuthorizationAwsOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAwsOutput) ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput {
	return o.ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(context.Background())
}

func (o CloudProviderAccessAuthorizationAwsOutput) ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudProviderAccessAuthorizationAws) *CloudProviderAccessAuthorizationAws {
		return &v
	}).(CloudProviderAccessAuthorizationAwsPtrOutput)
}

func (o CloudProviderAccessAuthorizationAwsOutput) ToOutput(ctx context.Context) pulumix.Output[CloudProviderAccessAuthorizationAws] {
	return pulumix.Output[CloudProviderAccessAuthorizationAws]{
		OutputState: o.OutputState,
	}
}

func (o CloudProviderAccessAuthorizationAwsOutput) IamAssumedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderAccessAuthorizationAws) string { return v.IamAssumedRoleArn }).(pulumi.StringOutput)
}

type CloudProviderAccessAuthorizationAwsPtrOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessAuthorizationAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderAccessAuthorizationAws)(nil)).Elem()
}

func (o CloudProviderAccessAuthorizationAwsPtrOutput) ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAwsPtrOutput) ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsPtrOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAwsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudProviderAccessAuthorizationAws] {
	return pulumix.Output[*CloudProviderAccessAuthorizationAws]{
		OutputState: o.OutputState,
	}
}

func (o CloudProviderAccessAuthorizationAwsPtrOutput) Elem() CloudProviderAccessAuthorizationAwsOutput {
	return o.ApplyT(func(v *CloudProviderAccessAuthorizationAws) CloudProviderAccessAuthorizationAws {
		if v != nil {
			return *v
		}
		var ret CloudProviderAccessAuthorizationAws
		return ret
	}).(CloudProviderAccessAuthorizationAwsOutput)
}

func (o CloudProviderAccessAuthorizationAwsPtrOutput) IamAssumedRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProviderAccessAuthorizationAws) *string {
		if v == nil {
			return nil
		}
		return &v.IamAssumedRoleArn
	}).(pulumi.StringPtrOutput)
}

type CloudProviderAccessAuthorizationAzure struct {
	AtlasAzureAppId    string `pulumi:"atlasAzureAppId"`
	ServicePrincipalId string `pulumi:"servicePrincipalId"`
	TenantId           string `pulumi:"tenantId"`
}

// CloudProviderAccessAuthorizationAzureInput is an input type that accepts CloudProviderAccessAuthorizationAzureArgs and CloudProviderAccessAuthorizationAzureOutput values.
// You can construct a concrete instance of `CloudProviderAccessAuthorizationAzureInput` via:
//
//	CloudProviderAccessAuthorizationAzureArgs{...}
type CloudProviderAccessAuthorizationAzureInput interface {
	pulumi.Input

	ToCloudProviderAccessAuthorizationAzureOutput() CloudProviderAccessAuthorizationAzureOutput
	ToCloudProviderAccessAuthorizationAzureOutputWithContext(context.Context) CloudProviderAccessAuthorizationAzureOutput
}

type CloudProviderAccessAuthorizationAzureArgs struct {
	AtlasAzureAppId    pulumi.StringInput `pulumi:"atlasAzureAppId"`
	ServicePrincipalId pulumi.StringInput `pulumi:"servicePrincipalId"`
	TenantId           pulumi.StringInput `pulumi:"tenantId"`
}

func (CloudProviderAccessAuthorizationAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessAuthorizationAzure)(nil)).Elem()
}

func (i CloudProviderAccessAuthorizationAzureArgs) ToCloudProviderAccessAuthorizationAzureOutput() CloudProviderAccessAuthorizationAzureOutput {
	return i.ToCloudProviderAccessAuthorizationAzureOutputWithContext(context.Background())
}

func (i CloudProviderAccessAuthorizationAzureArgs) ToCloudProviderAccessAuthorizationAzureOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationAzureOutput)
}

func (i CloudProviderAccessAuthorizationAzureArgs) ToOutput(ctx context.Context) pulumix.Output[CloudProviderAccessAuthorizationAzure] {
	return pulumix.Output[CloudProviderAccessAuthorizationAzure]{
		OutputState: i.ToCloudProviderAccessAuthorizationAzureOutputWithContext(ctx).OutputState,
	}
}

func (i CloudProviderAccessAuthorizationAzureArgs) ToCloudProviderAccessAuthorizationAzurePtrOutput() CloudProviderAccessAuthorizationAzurePtrOutput {
	return i.ToCloudProviderAccessAuthorizationAzurePtrOutputWithContext(context.Background())
}

func (i CloudProviderAccessAuthorizationAzureArgs) ToCloudProviderAccessAuthorizationAzurePtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationAzureOutput).ToCloudProviderAccessAuthorizationAzurePtrOutputWithContext(ctx)
}

// CloudProviderAccessAuthorizationAzurePtrInput is an input type that accepts CloudProviderAccessAuthorizationAzureArgs, CloudProviderAccessAuthorizationAzurePtr and CloudProviderAccessAuthorizationAzurePtrOutput values.
// You can construct a concrete instance of `CloudProviderAccessAuthorizationAzurePtrInput` via:
//
//	        CloudProviderAccessAuthorizationAzureArgs{...}
//
//	or:
//
//	        nil
type CloudProviderAccessAuthorizationAzurePtrInput interface {
	pulumi.Input

	ToCloudProviderAccessAuthorizationAzurePtrOutput() CloudProviderAccessAuthorizationAzurePtrOutput
	ToCloudProviderAccessAuthorizationAzurePtrOutputWithContext(context.Context) CloudProviderAccessAuthorizationAzurePtrOutput
}

type cloudProviderAccessAuthorizationAzurePtrType CloudProviderAccessAuthorizationAzureArgs

func CloudProviderAccessAuthorizationAzurePtr(v *CloudProviderAccessAuthorizationAzureArgs) CloudProviderAccessAuthorizationAzurePtrInput {
	return (*cloudProviderAccessAuthorizationAzurePtrType)(v)
}

func (*cloudProviderAccessAuthorizationAzurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderAccessAuthorizationAzure)(nil)).Elem()
}

func (i *cloudProviderAccessAuthorizationAzurePtrType) ToCloudProviderAccessAuthorizationAzurePtrOutput() CloudProviderAccessAuthorizationAzurePtrOutput {
	return i.ToCloudProviderAccessAuthorizationAzurePtrOutputWithContext(context.Background())
}

func (i *cloudProviderAccessAuthorizationAzurePtrType) ToCloudProviderAccessAuthorizationAzurePtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationAzurePtrOutput)
}

func (i *cloudProviderAccessAuthorizationAzurePtrType) ToOutput(ctx context.Context) pulumix.Output[*CloudProviderAccessAuthorizationAzure] {
	return pulumix.Output[*CloudProviderAccessAuthorizationAzure]{
		OutputState: i.ToCloudProviderAccessAuthorizationAzurePtrOutputWithContext(ctx).OutputState,
	}
}

type CloudProviderAccessAuthorizationAzureOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessAuthorizationAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessAuthorizationAzure)(nil)).Elem()
}

func (o CloudProviderAccessAuthorizationAzureOutput) ToCloudProviderAccessAuthorizationAzureOutput() CloudProviderAccessAuthorizationAzureOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAzureOutput) ToCloudProviderAccessAuthorizationAzureOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAzureOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAzureOutput) ToCloudProviderAccessAuthorizationAzurePtrOutput() CloudProviderAccessAuthorizationAzurePtrOutput {
	return o.ToCloudProviderAccessAuthorizationAzurePtrOutputWithContext(context.Background())
}

func (o CloudProviderAccessAuthorizationAzureOutput) ToCloudProviderAccessAuthorizationAzurePtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAzurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudProviderAccessAuthorizationAzure) *CloudProviderAccessAuthorizationAzure {
		return &v
	}).(CloudProviderAccessAuthorizationAzurePtrOutput)
}

func (o CloudProviderAccessAuthorizationAzureOutput) ToOutput(ctx context.Context) pulumix.Output[CloudProviderAccessAuthorizationAzure] {
	return pulumix.Output[CloudProviderAccessAuthorizationAzure]{
		OutputState: o.OutputState,
	}
}

func (o CloudProviderAccessAuthorizationAzureOutput) AtlasAzureAppId() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderAccessAuthorizationAzure) string { return v.AtlasAzureAppId }).(pulumi.StringOutput)
}

func (o CloudProviderAccessAuthorizationAzureOutput) ServicePrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderAccessAuthorizationAzure) string { return v.ServicePrincipalId }).(pulumi.StringOutput)
}

func (o CloudProviderAccessAuthorizationAzureOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderAccessAuthorizationAzure) string { return v.TenantId }).(pulumi.StringOutput)
}

type CloudProviderAccessAuthorizationAzurePtrOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessAuthorizationAzurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderAccessAuthorizationAzure)(nil)).Elem()
}

func (o CloudProviderAccessAuthorizationAzurePtrOutput) ToCloudProviderAccessAuthorizationAzurePtrOutput() CloudProviderAccessAuthorizationAzurePtrOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAzurePtrOutput) ToCloudProviderAccessAuthorizationAzurePtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAzurePtrOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAzurePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudProviderAccessAuthorizationAzure] {
	return pulumix.Output[*CloudProviderAccessAuthorizationAzure]{
		OutputState: o.OutputState,
	}
}

func (o CloudProviderAccessAuthorizationAzurePtrOutput) Elem() CloudProviderAccessAuthorizationAzureOutput {
	return o.ApplyT(func(v *CloudProviderAccessAuthorizationAzure) CloudProviderAccessAuthorizationAzure {
		if v != nil {
			return *v
		}
		var ret CloudProviderAccessAuthorizationAzure
		return ret
	}).(CloudProviderAccessAuthorizationAzureOutput)
}

func (o CloudProviderAccessAuthorizationAzurePtrOutput) AtlasAzureAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProviderAccessAuthorizationAzure) *string {
		if v == nil {
			return nil
		}
		return &v.AtlasAzureAppId
	}).(pulumi.StringPtrOutput)
}

func (o CloudProviderAccessAuthorizationAzurePtrOutput) ServicePrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProviderAccessAuthorizationAzure) *string {
		if v == nil {
			return nil
		}
		return &v.ServicePrincipalId
	}).(pulumi.StringPtrOutput)
}

func (o CloudProviderAccessAuthorizationAzurePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProviderAccessAuthorizationAzure) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type CloudProviderAccessAuthorizationFeatureUsage struct {
	FeatureId   map[string]interface{} `pulumi:"featureId"`
	FeatureType *string                `pulumi:"featureType"`
}

// CloudProviderAccessAuthorizationFeatureUsageInput is an input type that accepts CloudProviderAccessAuthorizationFeatureUsageArgs and CloudProviderAccessAuthorizationFeatureUsageOutput values.
// You can construct a concrete instance of `CloudProviderAccessAuthorizationFeatureUsageInput` via:
//
//	CloudProviderAccessAuthorizationFeatureUsageArgs{...}
type CloudProviderAccessAuthorizationFeatureUsageInput interface {
	pulumi.Input

	ToCloudProviderAccessAuthorizationFeatureUsageOutput() CloudProviderAccessAuthorizationFeatureUsageOutput
	ToCloudProviderAccessAuthorizationFeatureUsageOutputWithContext(context.Context) CloudProviderAccessAuthorizationFeatureUsageOutput
}

type CloudProviderAccessAuthorizationFeatureUsageArgs struct {
	FeatureId   pulumi.MapInput       `pulumi:"featureId"`
	FeatureType pulumi.StringPtrInput `pulumi:"featureType"`
}

func (CloudProviderAccessAuthorizationFeatureUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessAuthorizationFeatureUsage)(nil)).Elem()
}

func (i CloudProviderAccessAuthorizationFeatureUsageArgs) ToCloudProviderAccessAuthorizationFeatureUsageOutput() CloudProviderAccessAuthorizationFeatureUsageOutput {
	return i.ToCloudProviderAccessAuthorizationFeatureUsageOutputWithContext(context.Background())
}

func (i CloudProviderAccessAuthorizationFeatureUsageArgs) ToCloudProviderAccessAuthorizationFeatureUsageOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationFeatureUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationFeatureUsageOutput)
}

func (i CloudProviderAccessAuthorizationFeatureUsageArgs) ToOutput(ctx context.Context) pulumix.Output[CloudProviderAccessAuthorizationFeatureUsage] {
	return pulumix.Output[CloudProviderAccessAuthorizationFeatureUsage]{
		OutputState: i.ToCloudProviderAccessAuthorizationFeatureUsageOutputWithContext(ctx).OutputState,
	}
}

// CloudProviderAccessAuthorizationFeatureUsageArrayInput is an input type that accepts CloudProviderAccessAuthorizationFeatureUsageArray and CloudProviderAccessAuthorizationFeatureUsageArrayOutput values.
// You can construct a concrete instance of `CloudProviderAccessAuthorizationFeatureUsageArrayInput` via:
//
//	CloudProviderAccessAuthorizationFeatureUsageArray{ CloudProviderAccessAuthorizationFeatureUsageArgs{...} }
type CloudProviderAccessAuthorizationFeatureUsageArrayInput interface {
	pulumi.Input

	ToCloudProviderAccessAuthorizationFeatureUsageArrayOutput() CloudProviderAccessAuthorizationFeatureUsageArrayOutput
	ToCloudProviderAccessAuthorizationFeatureUsageArrayOutputWithContext(context.Context) CloudProviderAccessAuthorizationFeatureUsageArrayOutput
}

type CloudProviderAccessAuthorizationFeatureUsageArray []CloudProviderAccessAuthorizationFeatureUsageInput

func (CloudProviderAccessAuthorizationFeatureUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessAuthorizationFeatureUsage)(nil)).Elem()
}

func (i CloudProviderAccessAuthorizationFeatureUsageArray) ToCloudProviderAccessAuthorizationFeatureUsageArrayOutput() CloudProviderAccessAuthorizationFeatureUsageArrayOutput {
	return i.ToCloudProviderAccessAuthorizationFeatureUsageArrayOutputWithContext(context.Background())
}

func (i CloudProviderAccessAuthorizationFeatureUsageArray) ToCloudProviderAccessAuthorizationFeatureUsageArrayOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationFeatureUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationFeatureUsageArrayOutput)
}

func (i CloudProviderAccessAuthorizationFeatureUsageArray) ToOutput(ctx context.Context) pulumix.Output[[]CloudProviderAccessAuthorizationFeatureUsage] {
	return pulumix.Output[[]CloudProviderAccessAuthorizationFeatureUsage]{
		OutputState: i.ToCloudProviderAccessAuthorizationFeatureUsageArrayOutputWithContext(ctx).OutputState,
	}
}

type CloudProviderAccessAuthorizationFeatureUsageOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessAuthorizationFeatureUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessAuthorizationFeatureUsage)(nil)).Elem()
}

func (o CloudProviderAccessAuthorizationFeatureUsageOutput) ToCloudProviderAccessAuthorizationFeatureUsageOutput() CloudProviderAccessAuthorizationFeatureUsageOutput {
	return o
}

func (o CloudProviderAccessAuthorizationFeatureUsageOutput) ToCloudProviderAccessAuthorizationFeatureUsageOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationFeatureUsageOutput {
	return o
}

func (o CloudProviderAccessAuthorizationFeatureUsageOutput) ToOutput(ctx context.Context) pulumix.Output[CloudProviderAccessAuthorizationFeatureUsage] {
	return pulumix.Output[CloudProviderAccessAuthorizationFeatureUsage]{
		OutputState: o.OutputState,
	}
}

func (o CloudProviderAccessAuthorizationFeatureUsageOutput) FeatureId() pulumi.MapOutput {
	return o.ApplyT(func(v CloudProviderAccessAuthorizationFeatureUsage) map[string]interface{} { return v.FeatureId }).(pulumi.MapOutput)
}

func (o CloudProviderAccessAuthorizationFeatureUsageOutput) FeatureType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderAccessAuthorizationFeatureUsage) *string { return v.FeatureType }).(pulumi.StringPtrOutput)
}

type CloudProviderAccessAuthorizationFeatureUsageArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessAuthorizationFeatureUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessAuthorizationFeatureUsage)(nil)).Elem()
}

func (o CloudProviderAccessAuthorizationFeatureUsageArrayOutput) ToCloudProviderAccessAuthorizationFeatureUsageArrayOutput() CloudProviderAccessAuthorizationFeatureUsageArrayOutput {
	return o
}

func (o CloudProviderAccessAuthorizationFeatureUsageArrayOutput) ToCloudProviderAccessAuthorizationFeatureUsageArrayOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationFeatureUsageArrayOutput {
	return o
}

func (o CloudProviderAccessAuthorizationFeatureUsageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CloudProviderAccessAuthorizationFeatureUsage] {
	return pulumix.Output[[]CloudProviderAccessAuthorizationFeatureUsage]{
		OutputState: o.OutputState,
	}
}

func (o CloudProviderAccessAuthorizationFeatureUsageArrayOutput) Index(i pulumi.IntInput) CloudProviderAccessAuthorizationFeatureUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderAccessAuthorizationFeatureUsage {
		return vs[0].([]CloudProviderAccessAuthorizationFeatureUsage)[vs[1].(int)]
	}).(CloudProviderAccessAuthorizationFeatureUsageOutput)
}

type CloudProviderAccessFeatureUsage struct {
	FeatureId   map[string]interface{} `pulumi:"featureId"`
	FeatureType *string                `pulumi:"featureType"`
}

// CloudProviderAccessFeatureUsageInput is an input type that accepts CloudProviderAccessFeatureUsageArgs and CloudProviderAccessFeatureUsageOutput values.
// You can construct a concrete instance of `CloudProviderAccessFeatureUsageInput` via:
//
//	CloudProviderAccessFeatureUsageArgs{...}
type CloudProviderAccessFeatureUsageInput interface {
	pulumi.Input

	ToCloudProviderAccessFeatureUsageOutput() CloudProviderAccessFeatureUsageOutput
	ToCloudProviderAccessFeatureUsageOutputWithContext(context.Context) CloudProviderAccessFeatureUsageOutput
}

type CloudProviderAccessFeatureUsageArgs struct {
	FeatureId   pulumi.MapInput       `pulumi:"featureId"`
	FeatureType pulumi.StringPtrInput `pulumi:"featureType"`
}

func (CloudProviderAccessFeatureUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessFeatureUsage)(nil)).Elem()
}

func (i CloudProviderAccessFeatureUsageArgs) ToCloudProviderAccessFeatureUsageOutput() CloudProviderAccessFeatureUsageOutput {
	return i.ToCloudProviderAccessFeatureUsageOutputWithContext(context.Background())
}

func (i CloudProviderAccessFeatureUsageArgs) ToCloudProviderAccessFeatureUsageOutputWithContext(ctx context.Context) CloudProviderAccessFeatureUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessFeatureUsageOutput)
}

func (i CloudProviderAccessFeatureUsageArgs) ToOutput(ctx context.Context) pulumix.Output[CloudProviderAccessFeatureUsage] {
	return pulumix.Output[CloudProviderAccessFeatureUsage]{
		OutputState: i.ToCloudProviderAccessFeatureUsageOutputWithContext(ctx).OutputState,
	}
}

// CloudProviderAccessFeatureUsageArrayInput is an input type that accepts CloudProviderAccessFeatureUsageArray and CloudProviderAccessFeatureUsageArrayOutput values.
// You can construct a concrete instance of `CloudProviderAccessFeatureUsageArrayInput` via:
//
//	CloudProviderAccessFeatureUsageArray{ CloudProviderAccessFeatureUsageArgs{...} }
type CloudProviderAccessFeatureUsageArrayInput interface {
	pulumi.Input

	ToCloudProviderAccessFeatureUsageArrayOutput() CloudProviderAccessFeatureUsageArrayOutput
	ToCloudProviderAccessFeatureUsageArrayOutputWithContext(context.Context) CloudProviderAccessFeatureUsageArrayOutput
}

type CloudProviderAccessFeatureUsageArray []CloudProviderAccessFeatureUsageInput

func (CloudProviderAccessFeatureUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessFeatureUsage)(nil)).Elem()
}

func (i CloudProviderAccessFeatureUsageArray) ToCloudProviderAccessFeatureUsageArrayOutput() CloudProviderAccessFeatureUsageArrayOutput {
	return i.ToCloudProviderAccessFeatureUsageArrayOutputWithContext(context.Background())
}

func (i CloudProviderAccessFeatureUsageArray) ToCloudProviderAccessFeatureUsageArrayOutputWithContext(ctx context.Context) CloudProviderAccessFeatureUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessFeatureUsageArrayOutput)
}

func (i CloudProviderAccessFeatureUsageArray) ToOutput(ctx context.Context) pulumix.Output[[]CloudProviderAccessFeatureUsage] {
	return pulumix.Output[[]CloudProviderAccessFeatureUsage]{
		OutputState: i.ToCloudProviderAccessFeatureUsageArrayOutputWithContext(ctx).OutputState,
	}
}

type CloudProviderAccessFeatureUsageOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessFeatureUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessFeatureUsage)(nil)).Elem()
}

func (o CloudProviderAccessFeatureUsageOutput) ToCloudProviderAccessFeatureUsageOutput() CloudProviderAccessFeatureUsageOutput {
	return o
}

func (o CloudProviderAccessFeatureUsageOutput) ToCloudProviderAccessFeatureUsageOutputWithContext(ctx context.Context) CloudProviderAccessFeatureUsageOutput {
	return o
}

func (o CloudProviderAccessFeatureUsageOutput) ToOutput(ctx context.Context) pulumix.Output[CloudProviderAccessFeatureUsage] {
	return pulumix.Output[CloudProviderAccessFeatureUsage]{
		OutputState: o.OutputState,
	}
}

func (o CloudProviderAccessFeatureUsageOutput) FeatureId() pulumi.MapOutput {
	return o.ApplyT(func(v CloudProviderAccessFeatureUsage) map[string]interface{} { return v.FeatureId }).(pulumi.MapOutput)
}

func (o CloudProviderAccessFeatureUsageOutput) FeatureType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderAccessFeatureUsage) *string { return v.FeatureType }).(pulumi.StringPtrOutput)
}

type CloudProviderAccessFeatureUsageArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessFeatureUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessFeatureUsage)(nil)).Elem()
}

func (o CloudProviderAccessFeatureUsageArrayOutput) ToCloudProviderAccessFeatureUsageArrayOutput() CloudProviderAccessFeatureUsageArrayOutput {
	return o
}

func (o CloudProviderAccessFeatureUsageArrayOutput) ToCloudProviderAccessFeatureUsageArrayOutputWithContext(ctx context.Context) CloudProviderAccessFeatureUsageArrayOutput {
	return o
}

func (o CloudProviderAccessFeatureUsageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CloudProviderAccessFeatureUsage] {
	return pulumix.Output[[]CloudProviderAccessFeatureUsage]{
		OutputState: o.OutputState,
	}
}

func (o CloudProviderAccessFeatureUsageArrayOutput) Index(i pulumi.IntInput) CloudProviderAccessFeatureUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderAccessFeatureUsage {
		return vs[0].([]CloudProviderAccessFeatureUsage)[vs[1].(int)]
	}).(CloudProviderAccessFeatureUsageOutput)
}

type CloudProviderAccessSetupAwsConfig struct {
	AtlasAssumedRoleExternalId *string `pulumi:"atlasAssumedRoleExternalId"`
	AtlasAwsAccountArn         *string `pulumi:"atlasAwsAccountArn"`
}

// CloudProviderAccessSetupAwsConfigInput is an input type that accepts CloudProviderAccessSetupAwsConfigArgs and CloudProviderAccessSetupAwsConfigOutput values.
// You can construct a concrete instance of `CloudProviderAccessSetupAwsConfigInput` via:
//
//	CloudProviderAccessSetupAwsConfigArgs{...}
type CloudProviderAccessSetupAwsConfigInput interface {
	pulumi.Input

	ToCloudProviderAccessSetupAwsConfigOutput() CloudProviderAccessSetupAwsConfigOutput
	ToCloudProviderAccessSetupAwsConfigOutputWithContext(context.Context) CloudProviderAccessSetupAwsConfigOutput
}

type CloudProviderAccessSetupAwsConfigArgs struct {
	AtlasAssumedRoleExternalId pulumi.StringPtrInput `pulumi:"atlasAssumedRoleExternalId"`
	AtlasAwsAccountArn         pulumi.StringPtrInput `pulumi:"atlasAwsAccountArn"`
}

func (CloudProviderAccessSetupAwsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (i CloudProviderAccessSetupAwsConfigArgs) ToCloudProviderAccessSetupAwsConfigOutput() CloudProviderAccessSetupAwsConfigOutput {
	return i.ToCloudProviderAccessSetupAwsConfigOutputWithContext(context.Background())
}

func (i CloudProviderAccessSetupAwsConfigArgs) ToCloudProviderAccessSetupAwsConfigOutputWithContext(ctx context.Context) CloudProviderAccessSetupAwsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessSetupAwsConfigOutput)
}

func (i CloudProviderAccessSetupAwsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[CloudProviderAccessSetupAwsConfig] {
	return pulumix.Output[CloudProviderAccessSetupAwsConfig]{
		OutputState: i.ToCloudProviderAccessSetupAwsConfigOutputWithContext(ctx).OutputState,
	}
}

// CloudProviderAccessSetupAwsConfigArrayInput is an input type that accepts CloudProviderAccessSetupAwsConfigArray and CloudProviderAccessSetupAwsConfigArrayOutput values.
// You can construct a concrete instance of `CloudProviderAccessSetupAwsConfigArrayInput` via:
//
//	CloudProviderAccessSetupAwsConfigArray{ CloudProviderAccessSetupAwsConfigArgs{...} }
type CloudProviderAccessSetupAwsConfigArrayInput interface {
	pulumi.Input

	ToCloudProviderAccessSetupAwsConfigArrayOutput() CloudProviderAccessSetupAwsConfigArrayOutput
	ToCloudProviderAccessSetupAwsConfigArrayOutputWithContext(context.Context) CloudProviderAccessSetupAwsConfigArrayOutput
}

type CloudProviderAccessSetupAwsConfigArray []CloudProviderAccessSetupAwsConfigInput

func (CloudProviderAccessSetupAwsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (i CloudProviderAccessSetupAwsConfigArray) ToCloudProviderAccessSetupAwsConfigArrayOutput() CloudProviderAccessSetupAwsConfigArrayOutput {
	return i.ToCloudProviderAccessSetupAwsConfigArrayOutputWithContext(context.Background())
}

func (i CloudProviderAccessSetupAwsConfigArray) ToCloudProviderAccessSetupAwsConfigArrayOutputWithContext(ctx context.Context) CloudProviderAccessSetupAwsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessSetupAwsConfigArrayOutput)
}

func (i CloudProviderAccessSetupAwsConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]CloudProviderAccessSetupAwsConfig] {
	return pulumix.Output[[]CloudProviderAccessSetupAwsConfig]{
		OutputState: i.ToCloudProviderAccessSetupAwsConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type CloudProviderAccessSetupAwsConfigOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessSetupAwsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (o CloudProviderAccessSetupAwsConfigOutput) ToCloudProviderAccessSetupAwsConfigOutput() CloudProviderAccessSetupAwsConfigOutput {
	return o
}

func (o CloudProviderAccessSetupAwsConfigOutput) ToCloudProviderAccessSetupAwsConfigOutputWithContext(ctx context.Context) CloudProviderAccessSetupAwsConfigOutput {
	return o
}

func (o CloudProviderAccessSetupAwsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[CloudProviderAccessSetupAwsConfig] {
	return pulumix.Output[CloudProviderAccessSetupAwsConfig]{
		OutputState: o.OutputState,
	}
}

func (o CloudProviderAccessSetupAwsConfigOutput) AtlasAssumedRoleExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderAccessSetupAwsConfig) *string { return v.AtlasAssumedRoleExternalId }).(pulumi.StringPtrOutput)
}

func (o CloudProviderAccessSetupAwsConfigOutput) AtlasAwsAccountArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderAccessSetupAwsConfig) *string { return v.AtlasAwsAccountArn }).(pulumi.StringPtrOutput)
}

type CloudProviderAccessSetupAwsConfigArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessSetupAwsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (o CloudProviderAccessSetupAwsConfigArrayOutput) ToCloudProviderAccessSetupAwsConfigArrayOutput() CloudProviderAccessSetupAwsConfigArrayOutput {
	return o
}

func (o CloudProviderAccessSetupAwsConfigArrayOutput) ToCloudProviderAccessSetupAwsConfigArrayOutputWithContext(ctx context.Context) CloudProviderAccessSetupAwsConfigArrayOutput {
	return o
}

func (o CloudProviderAccessSetupAwsConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CloudProviderAccessSetupAwsConfig] {
	return pulumix.Output[[]CloudProviderAccessSetupAwsConfig]{
		OutputState: o.OutputState,
	}
}

func (o CloudProviderAccessSetupAwsConfigArrayOutput) Index(i pulumi.IntInput) CloudProviderAccessSetupAwsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderAccessSetupAwsConfig {
		return vs[0].([]CloudProviderAccessSetupAwsConfig)[vs[1].(int)]
	}).(CloudProviderAccessSetupAwsConfigOutput)
}

type CloudProviderAccessSetupAzureConfig struct {
	AtlasAzureAppId    string `pulumi:"atlasAzureAppId"`
	ServicePrincipalId string `pulumi:"servicePrincipalId"`
	TenantId           string `pulumi:"tenantId"`
}

// CloudProviderAccessSetupAzureConfigInput is an input type that accepts CloudProviderAccessSetupAzureConfigArgs and CloudProviderAccessSetupAzureConfigOutput values.
// You can construct a concrete instance of `CloudProviderAccessSetupAzureConfigInput` via:
//
//	CloudProviderAccessSetupAzureConfigArgs{...}
type CloudProviderAccessSetupAzureConfigInput interface {
	pulumi.Input

	ToCloudProviderAccessSetupAzureConfigOutput() CloudProviderAccessSetupAzureConfigOutput
	ToCloudProviderAccessSetupAzureConfigOutputWithContext(context.Context) CloudProviderAccessSetupAzureConfigOutput
}

type CloudProviderAccessSetupAzureConfigArgs struct {
	AtlasAzureAppId    pulumi.StringInput `pulumi:"atlasAzureAppId"`
	ServicePrincipalId pulumi.StringInput `pulumi:"servicePrincipalId"`
	TenantId           pulumi.StringInput `pulumi:"tenantId"`
}

func (CloudProviderAccessSetupAzureConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessSetupAzureConfig)(nil)).Elem()
}

func (i CloudProviderAccessSetupAzureConfigArgs) ToCloudProviderAccessSetupAzureConfigOutput() CloudProviderAccessSetupAzureConfigOutput {
	return i.ToCloudProviderAccessSetupAzureConfigOutputWithContext(context.Background())
}

func (i CloudProviderAccessSetupAzureConfigArgs) ToCloudProviderAccessSetupAzureConfigOutputWithContext(ctx context.Context) CloudProviderAccessSetupAzureConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessSetupAzureConfigOutput)
}

func (i CloudProviderAccessSetupAzureConfigArgs) ToOutput(ctx context.Context) pulumix.Output[CloudProviderAccessSetupAzureConfig] {
	return pulumix.Output[CloudProviderAccessSetupAzureConfig]{
		OutputState: i.ToCloudProviderAccessSetupAzureConfigOutputWithContext(ctx).OutputState,
	}
}

// CloudProviderAccessSetupAzureConfigArrayInput is an input type that accepts CloudProviderAccessSetupAzureConfigArray and CloudProviderAccessSetupAzureConfigArrayOutput values.
// You can construct a concrete instance of `CloudProviderAccessSetupAzureConfigArrayInput` via:
//
//	CloudProviderAccessSetupAzureConfigArray{ CloudProviderAccessSetupAzureConfigArgs{...} }
type CloudProviderAccessSetupAzureConfigArrayInput interface {
	pulumi.Input

	ToCloudProviderAccessSetupAzureConfigArrayOutput() CloudProviderAccessSetupAzureConfigArrayOutput
	ToCloudProviderAccessSetupAzureConfigArrayOutputWithContext(context.Context) CloudProviderAccessSetupAzureConfigArrayOutput
}

type CloudProviderAccessSetupAzureConfigArray []CloudProviderAccessSetupAzureConfigInput

func (CloudProviderAccessSetupAzureConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessSetupAzureConfig)(nil)).Elem()
}

func (i CloudProviderAccessSetupAzureConfigArray) ToCloudProviderAccessSetupAzureConfigArrayOutput() CloudProviderAccessSetupAzureConfigArrayOutput {
	return i.ToCloudProviderAccessSetupAzureConfigArrayOutputWithContext(context.Background())
}

func (i CloudProviderAccessSetupAzureConfigArray) ToCloudProviderAccessSetupAzureConfigArrayOutputWithContext(ctx context.Context) CloudProviderAccessSetupAzureConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessSetupAzureConfigArrayOutput)
}

func (i CloudProviderAccessSetupAzureConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]CloudProviderAccessSetupAzureConfig] {
	return pulumix.Output[[]CloudProviderAccessSetupAzureConfig]{
		OutputState: i.ToCloudProviderAccessSetupAzureConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type CloudProviderAccessSetupAzureConfigOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessSetupAzureConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessSetupAzureConfig)(nil)).Elem()
}

func (o CloudProviderAccessSetupAzureConfigOutput) ToCloudProviderAccessSetupAzureConfigOutput() CloudProviderAccessSetupAzureConfigOutput {
	return o
}

func (o CloudProviderAccessSetupAzureConfigOutput) ToCloudProviderAccessSetupAzureConfigOutputWithContext(ctx context.Context) CloudProviderAccessSetupAzureConfigOutput {
	return o
}

func (o CloudProviderAccessSetupAzureConfigOutput) ToOutput(ctx context.Context) pulumix.Output[CloudProviderAccessSetupAzureConfig] {
	return pulumix.Output[CloudProviderAccessSetupAzureConfig]{
		OutputState: o.OutputState,
	}
}

func (o CloudProviderAccessSetupAzureConfigOutput) AtlasAzureAppId() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderAccessSetupAzureConfig) string { return v.AtlasAzureAppId }).(pulumi.StringOutput)
}

func (o CloudProviderAccessSetupAzureConfigOutput) ServicePrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderAccessSetupAzureConfig) string { return v.ServicePrincipalId }).(pulumi.StringOutput)
}

func (o CloudProviderAccessSetupAzureConfigOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderAccessSetupAzureConfig) string { return v.TenantId }).(pulumi.StringOutput)
}

type CloudProviderAccessSetupAzureConfigArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessSetupAzureConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessSetupAzureConfig)(nil)).Elem()
}

func (o CloudProviderAccessSetupAzureConfigArrayOutput) ToCloudProviderAccessSetupAzureConfigArrayOutput() CloudProviderAccessSetupAzureConfigArrayOutput {
	return o
}

func (o CloudProviderAccessSetupAzureConfigArrayOutput) ToCloudProviderAccessSetupAzureConfigArrayOutputWithContext(ctx context.Context) CloudProviderAccessSetupAzureConfigArrayOutput {
	return o
}

func (o CloudProviderAccessSetupAzureConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CloudProviderAccessSetupAzureConfig] {
	return pulumix.Output[[]CloudProviderAccessSetupAzureConfig]{
		OutputState: o.OutputState,
	}
}

func (o CloudProviderAccessSetupAzureConfigArrayOutput) Index(i pulumi.IntInput) CloudProviderAccessSetupAzureConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderAccessSetupAzureConfig {
		return vs[0].([]CloudProviderAccessSetupAzureConfig)[vs[1].(int)]
	}).(CloudProviderAccessSetupAzureConfigOutput)
}

type ClusterAdvancedConfiguration struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern *string `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern *string `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong *bool `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled *bool `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	//
	// - TLS1_0
	// - TLS1_1
	// - TLS1_2
	MinimumEnabledTlsProtocol *string `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan *bool `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see  [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
	OplogMinRetentionHours *int `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb *int `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector *int `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector *int `pulumi:"sampleSizeBiConnector"`
	// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
	TransactionLifetimeLimitSeconds *int `pulumi:"transactionLifetimeLimitSeconds"`
}

// ClusterAdvancedConfigurationInput is an input type that accepts ClusterAdvancedConfigurationArgs and ClusterAdvancedConfigurationOutput values.
// You can construct a concrete instance of `ClusterAdvancedConfigurationInput` via:
//
//	ClusterAdvancedConfigurationArgs{...}
type ClusterAdvancedConfigurationInput interface {
	pulumi.Input

	ToClusterAdvancedConfigurationOutput() ClusterAdvancedConfigurationOutput
	ToClusterAdvancedConfigurationOutputWithContext(context.Context) ClusterAdvancedConfigurationOutput
}

type ClusterAdvancedConfigurationArgs struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern pulumi.StringPtrInput `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern pulumi.StringPtrInput `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong pulumi.BoolPtrInput `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled pulumi.BoolPtrInput `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	//
	// - TLS1_0
	// - TLS1_1
	// - TLS1_2
	MinimumEnabledTlsProtocol pulumi.StringPtrInput `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan pulumi.BoolPtrInput `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see  [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
	OplogMinRetentionHours pulumi.IntPtrInput `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb pulumi.IntPtrInput `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector pulumi.IntPtrInput `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector pulumi.IntPtrInput `pulumi:"sampleSizeBiConnector"`
	// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
	TransactionLifetimeLimitSeconds pulumi.IntPtrInput `pulumi:"transactionLifetimeLimitSeconds"`
}

func (ClusterAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAdvancedConfiguration)(nil)).Elem()
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationOutput() ClusterAdvancedConfigurationOutput {
	return i.ToClusterAdvancedConfigurationOutputWithContext(context.Background())
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAdvancedConfigurationOutput)
}

func (i ClusterAdvancedConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterAdvancedConfiguration] {
	return pulumix.Output[ClusterAdvancedConfiguration]{
		OutputState: i.ToClusterAdvancedConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return i.ToClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAdvancedConfigurationOutput).ToClusterAdvancedConfigurationPtrOutputWithContext(ctx)
}

// ClusterAdvancedConfigurationPtrInput is an input type that accepts ClusterAdvancedConfigurationArgs, ClusterAdvancedConfigurationPtr and ClusterAdvancedConfigurationPtrOutput values.
// You can construct a concrete instance of `ClusterAdvancedConfigurationPtrInput` via:
//
//	        ClusterAdvancedConfigurationArgs{...}
//
//	or:
//
//	        nil
type ClusterAdvancedConfigurationPtrInput interface {
	pulumi.Input

	ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput
	ToClusterAdvancedConfigurationPtrOutputWithContext(context.Context) ClusterAdvancedConfigurationPtrOutput
}

type clusterAdvancedConfigurationPtrType ClusterAdvancedConfigurationArgs

func ClusterAdvancedConfigurationPtr(v *ClusterAdvancedConfigurationArgs) ClusterAdvancedConfigurationPtrInput {
	return (*clusterAdvancedConfigurationPtrType)(v)
}

func (*clusterAdvancedConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAdvancedConfiguration)(nil)).Elem()
}

func (i *clusterAdvancedConfigurationPtrType) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return i.ToClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (i *clusterAdvancedConfigurationPtrType) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAdvancedConfigurationPtrOutput)
}

func (i *clusterAdvancedConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterAdvancedConfiguration] {
	return pulumix.Output[*ClusterAdvancedConfiguration]{
		OutputState: i.ToClusterAdvancedConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (ClusterAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAdvancedConfiguration)(nil)).Elem()
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationOutput() ClusterAdvancedConfigurationOutput {
	return o
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationOutput {
	return o
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return o.ToClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAdvancedConfiguration) *ClusterAdvancedConfiguration {
		return &v
	}).(ClusterAdvancedConfigurationPtrOutput)
}

func (o ClusterAdvancedConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterAdvancedConfiguration] {
	return pulumix.Output[ClusterAdvancedConfiguration]{
		OutputState: o.OutputState,
	}
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o ClusterAdvancedConfigurationOutput) DefaultReadConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *string { return v.DefaultReadConcern }).(pulumi.StringPtrOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o ClusterAdvancedConfigurationOutput) DefaultWriteConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *string { return v.DefaultWriteConcern }).(pulumi.StringPtrOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o ClusterAdvancedConfigurationOutput) FailIndexKeyTooLong() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *bool { return v.FailIndexKeyTooLong }).(pulumi.BoolPtrOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o ClusterAdvancedConfigurationOutput) JavascriptEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *bool { return v.JavascriptEnabled }).(pulumi.BoolPtrOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
//
// - TLS1_0
// - TLS1_1
// - TLS1_2
func (o ClusterAdvancedConfigurationOutput) MinimumEnabledTlsProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *string { return v.MinimumEnabledTlsProtocol }).(pulumi.StringPtrOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o ClusterAdvancedConfigurationOutput) NoTableScan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *bool { return v.NoTableScan }).(pulumi.BoolPtrOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see  [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
func (o ClusterAdvancedConfigurationOutput) OplogMinRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.OplogMinRetentionHours }).(pulumi.IntPtrOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o ClusterAdvancedConfigurationOutput) OplogSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.OplogSizeMb }).(pulumi.IntPtrOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationOutput) SampleRefreshIntervalBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.SampleRefreshIntervalBiConnector }).(pulumi.IntPtrOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationOutput) SampleSizeBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.SampleSizeBiConnector }).(pulumi.IntPtrOutput)
}

// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
func (o ClusterAdvancedConfigurationOutput) TransactionLifetimeLimitSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.TransactionLifetimeLimitSeconds }).(pulumi.IntPtrOutput)
}

type ClusterAdvancedConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClusterAdvancedConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAdvancedConfiguration)(nil)).Elem()
}

func (o ClusterAdvancedConfigurationPtrOutput) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return o
}

func (o ClusterAdvancedConfigurationPtrOutput) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return o
}

func (o ClusterAdvancedConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterAdvancedConfiguration] {
	return pulumix.Output[*ClusterAdvancedConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o ClusterAdvancedConfigurationPtrOutput) Elem() ClusterAdvancedConfigurationOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) ClusterAdvancedConfiguration {
		if v != nil {
			return *v
		}
		var ret ClusterAdvancedConfiguration
		return ret
	}).(ClusterAdvancedConfigurationOutput)
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o ClusterAdvancedConfigurationPtrOutput) DefaultReadConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DefaultReadConcern
	}).(pulumi.StringPtrOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o ClusterAdvancedConfigurationPtrOutput) DefaultWriteConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DefaultWriteConcern
	}).(pulumi.StringPtrOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o ClusterAdvancedConfigurationPtrOutput) FailIndexKeyTooLong() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.FailIndexKeyTooLong
	}).(pulumi.BoolPtrOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o ClusterAdvancedConfigurationPtrOutput) JavascriptEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.JavascriptEnabled
	}).(pulumi.BoolPtrOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
//
// - TLS1_0
// - TLS1_1
// - TLS1_2
func (o ClusterAdvancedConfigurationPtrOutput) MinimumEnabledTlsProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.MinimumEnabledTlsProtocol
	}).(pulumi.StringPtrOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o ClusterAdvancedConfigurationPtrOutput) NoTableScan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.NoTableScan
	}).(pulumi.BoolPtrOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
// * **Note**  A minimum oplog retention is required when seeking to change a cluster's class to Local NVMe SSD. To learn more and for latest guidance see  [`oplogMinRetentionHours`](https://www.mongodb.com/docs/manual/core/replica-set-oplog/#std-label-replica-set-minimum-oplog-size)
func (o ClusterAdvancedConfigurationPtrOutput) OplogMinRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.OplogMinRetentionHours
	}).(pulumi.IntPtrOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o ClusterAdvancedConfigurationPtrOutput) OplogSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.OplogSizeMb
	}).(pulumi.IntPtrOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationPtrOutput) SampleRefreshIntervalBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SampleRefreshIntervalBiConnector
	}).(pulumi.IntPtrOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationPtrOutput) SampleSizeBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SampleSizeBiConnector
	}).(pulumi.IntPtrOutput)
}

// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
func (o ClusterAdvancedConfigurationPtrOutput) TransactionLifetimeLimitSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.TransactionLifetimeLimitSeconds
	}).(pulumi.IntPtrOutput)
}

type ClusterBiConnectorConfig struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	//
	// - Set to "primary" to have BI Connector for Atlas read from the primary.
	//
	// - Set to "secondary" to have BI Connector for Atlas read from a secondary member. Default if there are no analytics nodes in the cluster.
	//
	// - Set to "analytics" to have BI Connector for Atlas read from an analytics node. Default if the cluster contains analytics nodes.
	ReadPreference *string `pulumi:"readPreference"`
}

// ClusterBiConnectorConfigInput is an input type that accepts ClusterBiConnectorConfigArgs and ClusterBiConnectorConfigOutput values.
// You can construct a concrete instance of `ClusterBiConnectorConfigInput` via:
//
//	ClusterBiConnectorConfigArgs{...}
type ClusterBiConnectorConfigInput interface {
	pulumi.Input

	ToClusterBiConnectorConfigOutput() ClusterBiConnectorConfigOutput
	ToClusterBiConnectorConfigOutputWithContext(context.Context) ClusterBiConnectorConfigOutput
}

type ClusterBiConnectorConfigArgs struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	//
	// - Set to "primary" to have BI Connector for Atlas read from the primary.
	//
	// - Set to "secondary" to have BI Connector for Atlas read from a secondary member. Default if there are no analytics nodes in the cluster.
	//
	// - Set to "analytics" to have BI Connector for Atlas read from an analytics node. Default if the cluster contains analytics nodes.
	ReadPreference pulumi.StringPtrInput `pulumi:"readPreference"`
}

func (ClusterBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBiConnectorConfig)(nil)).Elem()
}

func (i ClusterBiConnectorConfigArgs) ToClusterBiConnectorConfigOutput() ClusterBiConnectorConfigOutput {
	return i.ToClusterBiConnectorConfigOutputWithContext(context.Background())
}

func (i ClusterBiConnectorConfigArgs) ToClusterBiConnectorConfigOutputWithContext(ctx context.Context) ClusterBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBiConnectorConfigOutput)
}

func (i ClusterBiConnectorConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterBiConnectorConfig] {
	return pulumix.Output[ClusterBiConnectorConfig]{
		OutputState: i.ToClusterBiConnectorConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterBiConnectorConfigArgs) ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput {
	return i.ToClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (i ClusterBiConnectorConfigArgs) ToClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterBiConnectorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBiConnectorConfigOutput).ToClusterBiConnectorConfigPtrOutputWithContext(ctx)
}

// ClusterBiConnectorConfigPtrInput is an input type that accepts ClusterBiConnectorConfigArgs, ClusterBiConnectorConfigPtr and ClusterBiConnectorConfigPtrOutput values.
// You can construct a concrete instance of `ClusterBiConnectorConfigPtrInput` via:
//
//	        ClusterBiConnectorConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterBiConnectorConfigPtrInput interface {
	pulumi.Input

	ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput
	ToClusterBiConnectorConfigPtrOutputWithContext(context.Context) ClusterBiConnectorConfigPtrOutput
}

type clusterBiConnectorConfigPtrType ClusterBiConnectorConfigArgs

func ClusterBiConnectorConfigPtr(v *ClusterBiConnectorConfigArgs) ClusterBiConnectorConfigPtrInput {
	return (*clusterBiConnectorConfigPtrType)(v)
}

func (*clusterBiConnectorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBiConnectorConfig)(nil)).Elem()
}

func (i *clusterBiConnectorConfigPtrType) ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput {
	return i.ToClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (i *clusterBiConnectorConfigPtrType) ToClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterBiConnectorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBiConnectorConfigPtrOutput)
}

func (i *clusterBiConnectorConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterBiConnectorConfig] {
	return pulumix.Output[*ClusterBiConnectorConfig]{
		OutputState: i.ToClusterBiConnectorConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (ClusterBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBiConnectorConfig)(nil)).Elem()
}

func (o ClusterBiConnectorConfigOutput) ToClusterBiConnectorConfigOutput() ClusterBiConnectorConfigOutput {
	return o
}

func (o ClusterBiConnectorConfigOutput) ToClusterBiConnectorConfigOutputWithContext(ctx context.Context) ClusterBiConnectorConfigOutput {
	return o
}

func (o ClusterBiConnectorConfigOutput) ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput {
	return o.ToClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (o ClusterBiConnectorConfigOutput) ToClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterBiConnectorConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBiConnectorConfig) *ClusterBiConnectorConfig {
		return &v
	}).(ClusterBiConnectorConfigPtrOutput)
}

func (o ClusterBiConnectorConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterBiConnectorConfig] {
	return pulumix.Output[ClusterBiConnectorConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o ClusterBiConnectorConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBiConnectorConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
//
// - Set to "primary" to have BI Connector for Atlas read from the primary.
//
// - Set to "secondary" to have BI Connector for Atlas read from a secondary member. Default if there are no analytics nodes in the cluster.
//
// - Set to "analytics" to have BI Connector for Atlas read from an analytics node. Default if the cluster contains analytics nodes.
func (o ClusterBiConnectorConfigOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBiConnectorConfig) *string { return v.ReadPreference }).(pulumi.StringPtrOutput)
}

type ClusterBiConnectorConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterBiConnectorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBiConnectorConfig)(nil)).Elem()
}

func (o ClusterBiConnectorConfigPtrOutput) ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput {
	return o
}

func (o ClusterBiConnectorConfigPtrOutput) ToClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterBiConnectorConfigPtrOutput {
	return o
}

func (o ClusterBiConnectorConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterBiConnectorConfig] {
	return pulumix.Output[*ClusterBiConnectorConfig]{
		OutputState: o.OutputState,
	}
}

func (o ClusterBiConnectorConfigPtrOutput) Elem() ClusterBiConnectorConfigOutput {
	return o.ApplyT(func(v *ClusterBiConnectorConfig) ClusterBiConnectorConfig {
		if v != nil {
			return *v
		}
		var ret ClusterBiConnectorConfig
		return ret
	}).(ClusterBiConnectorConfigOutput)
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o ClusterBiConnectorConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBiConnectorConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
//
// - Set to "primary" to have BI Connector for Atlas read from the primary.
//
// - Set to "secondary" to have BI Connector for Atlas read from a secondary member. Default if there are no analytics nodes in the cluster.
//
// - Set to "analytics" to have BI Connector for Atlas read from an analytics node. Default if the cluster contains analytics nodes.
func (o ClusterBiConnectorConfigPtrOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBiConnectorConfig) *string {
		if v == nil {
			return nil
		}
		return v.ReadPreference
	}).(pulumi.StringPtrOutput)
}

type ClusterConnectionString struct {
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].connection_string
	AwsPrivateLink map[string]interface{} `pulumi:"awsPrivateLink"`
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].srv_connection_string
	AwsPrivateLinkSrv map[string]interface{}                   `pulumi:"awsPrivateLinkSrv"`
	Private           *string                                  `pulumi:"private"`
	PrivateEndpoints  []ClusterConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        *string                                  `pulumi:"privateSrv"`
	Standard          *string                                  `pulumi:"standard"`
	StandardSrv       *string                                  `pulumi:"standardSrv"`
}

// ClusterConnectionStringInput is an input type that accepts ClusterConnectionStringArgs and ClusterConnectionStringOutput values.
// You can construct a concrete instance of `ClusterConnectionStringInput` via:
//
//	ClusterConnectionStringArgs{...}
type ClusterConnectionStringInput interface {
	pulumi.Input

	ToClusterConnectionStringOutput() ClusterConnectionStringOutput
	ToClusterConnectionStringOutputWithContext(context.Context) ClusterConnectionStringOutput
}

type ClusterConnectionStringArgs struct {
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].connection_string
	AwsPrivateLink pulumi.MapInput `pulumi:"awsPrivateLink"`
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].srv_connection_string
	AwsPrivateLinkSrv pulumi.MapInput                                  `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringPtrInput                            `pulumi:"private"`
	PrivateEndpoints  ClusterConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringPtrInput                            `pulumi:"privateSrv"`
	Standard          pulumi.StringPtrInput                            `pulumi:"standard"`
	StandardSrv       pulumi.StringPtrInput                            `pulumi:"standardSrv"`
}

func (ClusterConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionString)(nil)).Elem()
}

func (i ClusterConnectionStringArgs) ToClusterConnectionStringOutput() ClusterConnectionStringOutput {
	return i.ToClusterConnectionStringOutputWithContext(context.Background())
}

func (i ClusterConnectionStringArgs) ToClusterConnectionStringOutputWithContext(ctx context.Context) ClusterConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringOutput)
}

func (i ClusterConnectionStringArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterConnectionString] {
	return pulumix.Output[ClusterConnectionString]{
		OutputState: i.ToClusterConnectionStringOutputWithContext(ctx).OutputState,
	}
}

// ClusterConnectionStringArrayInput is an input type that accepts ClusterConnectionStringArray and ClusterConnectionStringArrayOutput values.
// You can construct a concrete instance of `ClusterConnectionStringArrayInput` via:
//
//	ClusterConnectionStringArray{ ClusterConnectionStringArgs{...} }
type ClusterConnectionStringArrayInput interface {
	pulumi.Input

	ToClusterConnectionStringArrayOutput() ClusterConnectionStringArrayOutput
	ToClusterConnectionStringArrayOutputWithContext(context.Context) ClusterConnectionStringArrayOutput
}

type ClusterConnectionStringArray []ClusterConnectionStringInput

func (ClusterConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionString)(nil)).Elem()
}

func (i ClusterConnectionStringArray) ToClusterConnectionStringArrayOutput() ClusterConnectionStringArrayOutput {
	return i.ToClusterConnectionStringArrayOutputWithContext(context.Background())
}

func (i ClusterConnectionStringArray) ToClusterConnectionStringArrayOutputWithContext(ctx context.Context) ClusterConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringArrayOutput)
}

func (i ClusterConnectionStringArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterConnectionString] {
	return pulumix.Output[[]ClusterConnectionString]{
		OutputState: i.ToClusterConnectionStringArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterConnectionStringOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionString)(nil)).Elem()
}

func (o ClusterConnectionStringOutput) ToClusterConnectionStringOutput() ClusterConnectionStringOutput {
	return o
}

func (o ClusterConnectionStringOutput) ToClusterConnectionStringOutputWithContext(ctx context.Context) ClusterConnectionStringOutput {
	return o
}

func (o ClusterConnectionStringOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterConnectionString] {
	return pulumix.Output[ClusterConnectionString]{
		OutputState: o.OutputState,
	}
}

// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].connection_string
func (o ClusterConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].srv_connection_string
func (o ClusterConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o ClusterConnectionStringOutput) Private() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionString) *string { return v.Private }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringOutput) PrivateEndpoints() ClusterConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v ClusterConnectionString) []ClusterConnectionStringPrivateEndpoint { return v.PrivateEndpoints }).(ClusterConnectionStringPrivateEndpointArrayOutput)
}

func (o ClusterConnectionStringOutput) PrivateSrv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionString) *string { return v.PrivateSrv }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringOutput) Standard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionString) *string { return v.Standard }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringOutput) StandardSrv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionString) *string { return v.StandardSrv }).(pulumi.StringPtrOutput)
}

type ClusterConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionString)(nil)).Elem()
}

func (o ClusterConnectionStringArrayOutput) ToClusterConnectionStringArrayOutput() ClusterConnectionStringArrayOutput {
	return o
}

func (o ClusterConnectionStringArrayOutput) ToClusterConnectionStringArrayOutputWithContext(ctx context.Context) ClusterConnectionStringArrayOutput {
	return o
}

func (o ClusterConnectionStringArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterConnectionString] {
	return pulumix.Output[[]ClusterConnectionString]{
		OutputState: o.OutputState,
	}
}

func (o ClusterConnectionStringArrayOutput) Index(i pulumi.IntInput) ClusterConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterConnectionString {
		return vs[0].([]ClusterConnectionString)[vs[1].(int)]
	}).(ClusterConnectionStringOutput)
}

type ClusterConnectionStringPrivateEndpoint struct {
	ConnectionString                  *string                                          `pulumi:"connectionString"`
	Endpoints                         []ClusterConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString               *string                                          `pulumi:"srvConnectionString"`
	SrvShardOptimizedConnectionString *string                                          `pulumi:"srvShardOptimizedConnectionString"`
	Type                              *string                                          `pulumi:"type"`
}

// ClusterConnectionStringPrivateEndpointInput is an input type that accepts ClusterConnectionStringPrivateEndpointArgs and ClusterConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `ClusterConnectionStringPrivateEndpointInput` via:
//
//	ClusterConnectionStringPrivateEndpointArgs{...}
type ClusterConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToClusterConnectionStringPrivateEndpointOutput() ClusterConnectionStringPrivateEndpointOutput
	ToClusterConnectionStringPrivateEndpointOutputWithContext(context.Context) ClusterConnectionStringPrivateEndpointOutput
}

type ClusterConnectionStringPrivateEndpointArgs struct {
	ConnectionString                  pulumi.StringPtrInput                                    `pulumi:"connectionString"`
	Endpoints                         ClusterConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString               pulumi.StringPtrInput                                    `pulumi:"srvConnectionString"`
	SrvShardOptimizedConnectionString pulumi.StringPtrInput                                    `pulumi:"srvShardOptimizedConnectionString"`
	Type                              pulumi.StringPtrInput                                    `pulumi:"type"`
}

func (ClusterConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i ClusterConnectionStringPrivateEndpointArgs) ToClusterConnectionStringPrivateEndpointOutput() ClusterConnectionStringPrivateEndpointOutput {
	return i.ToClusterConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i ClusterConnectionStringPrivateEndpointArgs) ToClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringPrivateEndpointOutput)
}

func (i ClusterConnectionStringPrivateEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[ClusterConnectionStringPrivateEndpoint]{
		OutputState: i.ToClusterConnectionStringPrivateEndpointOutputWithContext(ctx).OutputState,
	}
}

// ClusterConnectionStringPrivateEndpointArrayInput is an input type that accepts ClusterConnectionStringPrivateEndpointArray and ClusterConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `ClusterConnectionStringPrivateEndpointArrayInput` via:
//
//	ClusterConnectionStringPrivateEndpointArray{ ClusterConnectionStringPrivateEndpointArgs{...} }
type ClusterConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToClusterConnectionStringPrivateEndpointArrayOutput() ClusterConnectionStringPrivateEndpointArrayOutput
	ToClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) ClusterConnectionStringPrivateEndpointArrayOutput
}

type ClusterConnectionStringPrivateEndpointArray []ClusterConnectionStringPrivateEndpointInput

func (ClusterConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i ClusterConnectionStringPrivateEndpointArray) ToClusterConnectionStringPrivateEndpointArrayOutput() ClusterConnectionStringPrivateEndpointArrayOutput {
	return i.ToClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i ClusterConnectionStringPrivateEndpointArray) ToClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringPrivateEndpointArrayOutput)
}

func (i ClusterConnectionStringPrivateEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[[]ClusterConnectionStringPrivateEndpoint]{
		OutputState: i.ToClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o ClusterConnectionStringPrivateEndpointOutput) ToClusterConnectionStringPrivateEndpointOutput() ClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointOutput) ToClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[ClusterConnectionStringPrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o ClusterConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpoint) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringPrivateEndpointOutput) Endpoints() ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpoint) []ClusterConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(ClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o ClusterConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpoint) *string { return v.SrvConnectionString }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringPrivateEndpointOutput) SrvShardOptimizedConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpoint) *string { return v.SrvShardOptimizedConnectionString }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringPrivateEndpointOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpoint) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ClusterConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o ClusterConnectionStringPrivateEndpointArrayOutput) ToClusterConnectionStringPrivateEndpointArrayOutput() ClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointArrayOutput) ToClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[[]ClusterConnectionStringPrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o ClusterConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) ClusterConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterConnectionStringPrivateEndpoint {
		return vs[0].([]ClusterConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(ClusterConnectionStringPrivateEndpointOutput)
}

type ClusterConnectionStringPrivateEndpointEndpoint struct {
	EndpointId *string `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	//
	// The possible values are:
	ProviderName *string `pulumi:"providerName"`
	Region       *string `pulumi:"region"`
}

// ClusterConnectionStringPrivateEndpointEndpointInput is an input type that accepts ClusterConnectionStringPrivateEndpointEndpointArgs and ClusterConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `ClusterConnectionStringPrivateEndpointEndpointInput` via:
//
//	ClusterConnectionStringPrivateEndpointEndpointArgs{...}
type ClusterConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToClusterConnectionStringPrivateEndpointEndpointOutput() ClusterConnectionStringPrivateEndpointEndpointOutput
	ToClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) ClusterConnectionStringPrivateEndpointEndpointOutput
}

type ClusterConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringPtrInput `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	//
	// The possible values are:
	ProviderName pulumi.StringPtrInput `pulumi:"providerName"`
	Region       pulumi.StringPtrInput `pulumi:"region"`
}

func (ClusterConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i ClusterConnectionStringPrivateEndpointEndpointArgs) ToClusterConnectionStringPrivateEndpointEndpointOutput() ClusterConnectionStringPrivateEndpointEndpointOutput {
	return i.ToClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i ClusterConnectionStringPrivateEndpointEndpointArgs) ToClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringPrivateEndpointEndpointOutput)
}

func (i ClusterConnectionStringPrivateEndpointEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[ClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: i.ToClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx).OutputState,
	}
}

// ClusterConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts ClusterConnectionStringPrivateEndpointEndpointArray and ClusterConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `ClusterConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//	ClusterConnectionStringPrivateEndpointEndpointArray{ ClusterConnectionStringPrivateEndpointEndpointArgs{...} }
type ClusterConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToClusterConnectionStringPrivateEndpointEndpointArrayOutput() ClusterConnectionStringPrivateEndpointEndpointArrayOutput
	ToClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) ClusterConnectionStringPrivateEndpointEndpointArrayOutput
}

type ClusterConnectionStringPrivateEndpointEndpointArray []ClusterConnectionStringPrivateEndpointEndpointInput

func (ClusterConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i ClusterConnectionStringPrivateEndpointEndpointArray) ToClusterConnectionStringPrivateEndpointEndpointArrayOutput() ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i ClusterConnectionStringPrivateEndpointEndpointArray) ToClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (i ClusterConnectionStringPrivateEndpointEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[[]ClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: i.ToClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o ClusterConnectionStringPrivateEndpointEndpointOutput) ToClusterConnectionStringPrivateEndpointEndpointOutput() ClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointEndpointOutput) ToClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[ClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o ClusterConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpointEndpoint) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// Cloud service provider on which the servers are provisioned.
//
// The possible values are:
func (o ClusterConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpointEndpoint) *string { return v.ProviderName }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpointEndpoint) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type ClusterConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o ClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToClusterConnectionStringPrivateEndpointEndpointArrayOutput() ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[[]ClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o ClusterConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) ClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]ClusterConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(ClusterConnectionStringPrivateEndpointEndpointOutput)
}

type ClusterLabel struct {
	// The key that you want to write.
	Key *string `pulumi:"key"`
	// The value that you want to write.
	//
	// > **NOTE:** MongoDB Atlas doesn't display your labels.
	// **NOTE:** Cluster labels are not the same as [resource TAGs](https://www.mongodb.com/docs/atlas/tags/). We plan to add [resource TAGs](https://www.mongodb.com/docs/atlas/tags/) support in a future release.
	Value *string `pulumi:"value"`
}

// ClusterLabelInput is an input type that accepts ClusterLabelArgs and ClusterLabelOutput values.
// You can construct a concrete instance of `ClusterLabelInput` via:
//
//	ClusterLabelArgs{...}
type ClusterLabelInput interface {
	pulumi.Input

	ToClusterLabelOutput() ClusterLabelOutput
	ToClusterLabelOutputWithContext(context.Context) ClusterLabelOutput
}

type ClusterLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value that you want to write.
	//
	// > **NOTE:** MongoDB Atlas doesn't display your labels.
	// **NOTE:** Cluster labels are not the same as [resource TAGs](https://www.mongodb.com/docs/atlas/tags/). We plan to add [resource TAGs](https://www.mongodb.com/docs/atlas/tags/) support in a future release.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClusterLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLabel)(nil)).Elem()
}

func (i ClusterLabelArgs) ToClusterLabelOutput() ClusterLabelOutput {
	return i.ToClusterLabelOutputWithContext(context.Background())
}

func (i ClusterLabelArgs) ToClusterLabelOutputWithContext(ctx context.Context) ClusterLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLabelOutput)
}

func (i ClusterLabelArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterLabel] {
	return pulumix.Output[ClusterLabel]{
		OutputState: i.ToClusterLabelOutputWithContext(ctx).OutputState,
	}
}

// ClusterLabelArrayInput is an input type that accepts ClusterLabelArray and ClusterLabelArrayOutput values.
// You can construct a concrete instance of `ClusterLabelArrayInput` via:
//
//	ClusterLabelArray{ ClusterLabelArgs{...} }
type ClusterLabelArrayInput interface {
	pulumi.Input

	ToClusterLabelArrayOutput() ClusterLabelArrayOutput
	ToClusterLabelArrayOutputWithContext(context.Context) ClusterLabelArrayOutput
}

type ClusterLabelArray []ClusterLabelInput

func (ClusterLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterLabel)(nil)).Elem()
}

func (i ClusterLabelArray) ToClusterLabelArrayOutput() ClusterLabelArrayOutput {
	return i.ToClusterLabelArrayOutputWithContext(context.Background())
}

func (i ClusterLabelArray) ToClusterLabelArrayOutputWithContext(ctx context.Context) ClusterLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLabelArrayOutput)
}

func (i ClusterLabelArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterLabel] {
	return pulumix.Output[[]ClusterLabel]{
		OutputState: i.ToClusterLabelArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterLabelOutput struct{ *pulumi.OutputState }

func (ClusterLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLabel)(nil)).Elem()
}

func (o ClusterLabelOutput) ToClusterLabelOutput() ClusterLabelOutput {
	return o
}

func (o ClusterLabelOutput) ToClusterLabelOutputWithContext(ctx context.Context) ClusterLabelOutput {
	return o
}

func (o ClusterLabelOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterLabel] {
	return pulumix.Output[ClusterLabel]{
		OutputState: o.OutputState,
	}
}

// The key that you want to write.
func (o ClusterLabelOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLabel) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value that you want to write.
//
// > **NOTE:** MongoDB Atlas doesn't display your labels.
// **NOTE:** Cluster labels are not the same as [resource TAGs](https://www.mongodb.com/docs/atlas/tags/). We plan to add [resource TAGs](https://www.mongodb.com/docs/atlas/tags/) support in a future release.
func (o ClusterLabelOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLabel) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClusterLabelArrayOutput struct{ *pulumi.OutputState }

func (ClusterLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterLabel)(nil)).Elem()
}

func (o ClusterLabelArrayOutput) ToClusterLabelArrayOutput() ClusterLabelArrayOutput {
	return o
}

func (o ClusterLabelArrayOutput) ToClusterLabelArrayOutputWithContext(ctx context.Context) ClusterLabelArrayOutput {
	return o
}

func (o ClusterLabelArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterLabel] {
	return pulumix.Output[[]ClusterLabel]{
		OutputState: o.OutputState,
	}
}

func (o ClusterLabelArrayOutput) Index(i pulumi.IntInput) ClusterLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterLabel {
		return vs[0].([]ClusterLabel)[vs[1].(int)]
	}).(ClusterLabelOutput)
}

type ClusterOutageSimulationOutageFilter struct {
	// The cloud provider of the region that undergoes the outage simulation. Following values are supported:
	CloudProvider string `pulumi:"cloudProvider"`
	// The Atlas name of the region to undergo an outage simulation.
	RegionName string `pulumi:"regionName"`
	// The type of cluster outage simulation. Following values are supported:
	Type *string `pulumi:"type"`
}

// ClusterOutageSimulationOutageFilterInput is an input type that accepts ClusterOutageSimulationOutageFilterArgs and ClusterOutageSimulationOutageFilterOutput values.
// You can construct a concrete instance of `ClusterOutageSimulationOutageFilterInput` via:
//
//	ClusterOutageSimulationOutageFilterArgs{...}
type ClusterOutageSimulationOutageFilterInput interface {
	pulumi.Input

	ToClusterOutageSimulationOutageFilterOutput() ClusterOutageSimulationOutageFilterOutput
	ToClusterOutageSimulationOutageFilterOutputWithContext(context.Context) ClusterOutageSimulationOutageFilterOutput
}

type ClusterOutageSimulationOutageFilterArgs struct {
	// The cloud provider of the region that undergoes the outage simulation. Following values are supported:
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// The Atlas name of the region to undergo an outage simulation.
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// The type of cluster outage simulation. Following values are supported:
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ClusterOutageSimulationOutageFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOutageSimulationOutageFilter)(nil)).Elem()
}

func (i ClusterOutageSimulationOutageFilterArgs) ToClusterOutageSimulationOutageFilterOutput() ClusterOutageSimulationOutageFilterOutput {
	return i.ToClusterOutageSimulationOutageFilterOutputWithContext(context.Background())
}

func (i ClusterOutageSimulationOutageFilterArgs) ToClusterOutageSimulationOutageFilterOutputWithContext(ctx context.Context) ClusterOutageSimulationOutageFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutageSimulationOutageFilterOutput)
}

func (i ClusterOutageSimulationOutageFilterArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterOutageSimulationOutageFilter] {
	return pulumix.Output[ClusterOutageSimulationOutageFilter]{
		OutputState: i.ToClusterOutageSimulationOutageFilterOutputWithContext(ctx).OutputState,
	}
}

// ClusterOutageSimulationOutageFilterArrayInput is an input type that accepts ClusterOutageSimulationOutageFilterArray and ClusterOutageSimulationOutageFilterArrayOutput values.
// You can construct a concrete instance of `ClusterOutageSimulationOutageFilterArrayInput` via:
//
//	ClusterOutageSimulationOutageFilterArray{ ClusterOutageSimulationOutageFilterArgs{...} }
type ClusterOutageSimulationOutageFilterArrayInput interface {
	pulumi.Input

	ToClusterOutageSimulationOutageFilterArrayOutput() ClusterOutageSimulationOutageFilterArrayOutput
	ToClusterOutageSimulationOutageFilterArrayOutputWithContext(context.Context) ClusterOutageSimulationOutageFilterArrayOutput
}

type ClusterOutageSimulationOutageFilterArray []ClusterOutageSimulationOutageFilterInput

func (ClusterOutageSimulationOutageFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterOutageSimulationOutageFilter)(nil)).Elem()
}

func (i ClusterOutageSimulationOutageFilterArray) ToClusterOutageSimulationOutageFilterArrayOutput() ClusterOutageSimulationOutageFilterArrayOutput {
	return i.ToClusterOutageSimulationOutageFilterArrayOutputWithContext(context.Background())
}

func (i ClusterOutageSimulationOutageFilterArray) ToClusterOutageSimulationOutageFilterArrayOutputWithContext(ctx context.Context) ClusterOutageSimulationOutageFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutageSimulationOutageFilterArrayOutput)
}

func (i ClusterOutageSimulationOutageFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterOutageSimulationOutageFilter] {
	return pulumix.Output[[]ClusterOutageSimulationOutageFilter]{
		OutputState: i.ToClusterOutageSimulationOutageFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterOutageSimulationOutageFilterOutput struct{ *pulumi.OutputState }

func (ClusterOutageSimulationOutageFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOutageSimulationOutageFilter)(nil)).Elem()
}

func (o ClusterOutageSimulationOutageFilterOutput) ToClusterOutageSimulationOutageFilterOutput() ClusterOutageSimulationOutageFilterOutput {
	return o
}

func (o ClusterOutageSimulationOutageFilterOutput) ToClusterOutageSimulationOutageFilterOutputWithContext(ctx context.Context) ClusterOutageSimulationOutageFilterOutput {
	return o
}

func (o ClusterOutageSimulationOutageFilterOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterOutageSimulationOutageFilter] {
	return pulumix.Output[ClusterOutageSimulationOutageFilter]{
		OutputState: o.OutputState,
	}
}

// The cloud provider of the region that undergoes the outage simulation. Following values are supported:
func (o ClusterOutageSimulationOutageFilterOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterOutageSimulationOutageFilter) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// The Atlas name of the region to undergo an outage simulation.
func (o ClusterOutageSimulationOutageFilterOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterOutageSimulationOutageFilter) string { return v.RegionName }).(pulumi.StringOutput)
}

// The type of cluster outage simulation. Following values are supported:
func (o ClusterOutageSimulationOutageFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterOutageSimulationOutageFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ClusterOutageSimulationOutageFilterArrayOutput struct{ *pulumi.OutputState }

func (ClusterOutageSimulationOutageFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterOutageSimulationOutageFilter)(nil)).Elem()
}

func (o ClusterOutageSimulationOutageFilterArrayOutput) ToClusterOutageSimulationOutageFilterArrayOutput() ClusterOutageSimulationOutageFilterArrayOutput {
	return o
}

func (o ClusterOutageSimulationOutageFilterArrayOutput) ToClusterOutageSimulationOutageFilterArrayOutputWithContext(ctx context.Context) ClusterOutageSimulationOutageFilterArrayOutput {
	return o
}

func (o ClusterOutageSimulationOutageFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterOutageSimulationOutageFilter] {
	return pulumix.Output[[]ClusterOutageSimulationOutageFilter]{
		OutputState: o.OutputState,
	}
}

func (o ClusterOutageSimulationOutageFilterArrayOutput) Index(i pulumi.IntInput) ClusterOutageSimulationOutageFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterOutageSimulationOutageFilter {
		return vs[0].([]ClusterOutageSimulationOutageFilter)[vs[1].(int)]
	}).(ClusterOutageSimulationOutageFilterOutput)
}

type ClusterReplicationSpec struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id *string `pulumi:"id"`
	// Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
	NumShards int `pulumi:"numShards"`
	// Physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs []ClusterReplicationSpecRegionsConfig `pulumi:"regionsConfigs"`
	// Name for the zone in a Global Cluster.
	//
	// **Region Config**
	ZoneName *string `pulumi:"zoneName"`
}

// ClusterReplicationSpecInput is an input type that accepts ClusterReplicationSpecArgs and ClusterReplicationSpecOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecInput` via:
//
//	ClusterReplicationSpecArgs{...}
type ClusterReplicationSpecInput interface {
	pulumi.Input

	ToClusterReplicationSpecOutput() ClusterReplicationSpecOutput
	ToClusterReplicationSpecOutputWithContext(context.Context) ClusterReplicationSpecOutput
}

type ClusterReplicationSpecArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs ClusterReplicationSpecRegionsConfigArrayInput `pulumi:"regionsConfigs"`
	// Name for the zone in a Global Cluster.
	//
	// **Region Config**
	ZoneName pulumi.StringPtrInput `pulumi:"zoneName"`
}

func (ClusterReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpec)(nil)).Elem()
}

func (i ClusterReplicationSpecArgs) ToClusterReplicationSpecOutput() ClusterReplicationSpecOutput {
	return i.ToClusterReplicationSpecOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecArgs) ToClusterReplicationSpecOutputWithContext(ctx context.Context) ClusterReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecOutput)
}

func (i ClusterReplicationSpecArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterReplicationSpec] {
	return pulumix.Output[ClusterReplicationSpec]{
		OutputState: i.ToClusterReplicationSpecOutputWithContext(ctx).OutputState,
	}
}

// ClusterReplicationSpecArrayInput is an input type that accepts ClusterReplicationSpecArray and ClusterReplicationSpecArrayOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecArrayInput` via:
//
//	ClusterReplicationSpecArray{ ClusterReplicationSpecArgs{...} }
type ClusterReplicationSpecArrayInput interface {
	pulumi.Input

	ToClusterReplicationSpecArrayOutput() ClusterReplicationSpecArrayOutput
	ToClusterReplicationSpecArrayOutputWithContext(context.Context) ClusterReplicationSpecArrayOutput
}

type ClusterReplicationSpecArray []ClusterReplicationSpecInput

func (ClusterReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpec)(nil)).Elem()
}

func (i ClusterReplicationSpecArray) ToClusterReplicationSpecArrayOutput() ClusterReplicationSpecArrayOutput {
	return i.ToClusterReplicationSpecArrayOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecArray) ToClusterReplicationSpecArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecArrayOutput)
}

func (i ClusterReplicationSpecArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterReplicationSpec] {
	return pulumix.Output[[]ClusterReplicationSpec]{
		OutputState: i.ToClusterReplicationSpecArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterReplicationSpecOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpec)(nil)).Elem()
}

func (o ClusterReplicationSpecOutput) ToClusterReplicationSpecOutput() ClusterReplicationSpecOutput {
	return o
}

func (o ClusterReplicationSpecOutput) ToClusterReplicationSpecOutputWithContext(ctx context.Context) ClusterReplicationSpecOutput {
	return o
}

func (o ClusterReplicationSpecOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterReplicationSpec] {
	return pulumix.Output[ClusterReplicationSpec]{
		OutputState: o.OutputState,
	}
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o ClusterReplicationSpecOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Selects whether the cluster is a replica set or a sharded cluster. If you use the replicationSpecs parameter, you must set num_shards.
func (o ClusterReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
func (o ClusterReplicationSpecOutput) RegionsConfigs() ClusterReplicationSpecRegionsConfigArrayOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) []ClusterReplicationSpecRegionsConfig { return v.RegionsConfigs }).(ClusterReplicationSpecRegionsConfigArrayOutput)
}

// Name for the zone in a Global Cluster.
//
// **Region Config**
func (o ClusterReplicationSpecOutput) ZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) *string { return v.ZoneName }).(pulumi.StringPtrOutput)
}

type ClusterReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpec)(nil)).Elem()
}

func (o ClusterReplicationSpecArrayOutput) ToClusterReplicationSpecArrayOutput() ClusterReplicationSpecArrayOutput {
	return o
}

func (o ClusterReplicationSpecArrayOutput) ToClusterReplicationSpecArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecArrayOutput {
	return o
}

func (o ClusterReplicationSpecArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterReplicationSpec] {
	return pulumix.Output[[]ClusterReplicationSpec]{
		OutputState: o.OutputState,
	}
}

func (o ClusterReplicationSpecArrayOutput) Index(i pulumi.IntInput) ClusterReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterReplicationSpec {
		return vs[0].([]ClusterReplicationSpec)[vs[1].(int)]
	}).(ClusterReplicationSpecOutput)
}

type ClusterReplicationSpecRegionsConfig struct {
	// The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
	AnalyticsNodes *int `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
	// * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
	// * Specify 0 if you do not want any electable nodes in the region.
	// * You cannot create electable nodes in a region if `priority` is 0.
	ElectableNodes *int `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	// * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
	// * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
	// * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
	Priority *int `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes *int `pulumi:"readOnlyNodes"`
	// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	RegionName string `pulumi:"regionName"`
}

// ClusterReplicationSpecRegionsConfigInput is an input type that accepts ClusterReplicationSpecRegionsConfigArgs and ClusterReplicationSpecRegionsConfigOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecRegionsConfigInput` via:
//
//	ClusterReplicationSpecRegionsConfigArgs{...}
type ClusterReplicationSpecRegionsConfigInput interface {
	pulumi.Input

	ToClusterReplicationSpecRegionsConfigOutput() ClusterReplicationSpecRegionsConfigOutput
	ToClusterReplicationSpecRegionsConfigOutputWithContext(context.Context) ClusterReplicationSpecRegionsConfigOutput
}

type ClusterReplicationSpecRegionsConfigArgs struct {
	// The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
	AnalyticsNodes pulumi.IntPtrInput `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
	// * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
	// * Specify 0 if you do not want any electable nodes in the region.
	// * You cannot create electable nodes in a region if `priority` is 0.
	ElectableNodes pulumi.IntPtrInput `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	// * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
	// * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
	// * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes pulumi.IntPtrInput `pulumi:"readOnlyNodes"`
	// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (ClusterReplicationSpecRegionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i ClusterReplicationSpecRegionsConfigArgs) ToClusterReplicationSpecRegionsConfigOutput() ClusterReplicationSpecRegionsConfigOutput {
	return i.ToClusterReplicationSpecRegionsConfigOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecRegionsConfigArgs) ToClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecRegionsConfigOutput)
}

func (i ClusterReplicationSpecRegionsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterReplicationSpecRegionsConfig] {
	return pulumix.Output[ClusterReplicationSpecRegionsConfig]{
		OutputState: i.ToClusterReplicationSpecRegionsConfigOutputWithContext(ctx).OutputState,
	}
}

// ClusterReplicationSpecRegionsConfigArrayInput is an input type that accepts ClusterReplicationSpecRegionsConfigArray and ClusterReplicationSpecRegionsConfigArrayOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecRegionsConfigArrayInput` via:
//
//	ClusterReplicationSpecRegionsConfigArray{ ClusterReplicationSpecRegionsConfigArgs{...} }
type ClusterReplicationSpecRegionsConfigArrayInput interface {
	pulumi.Input

	ToClusterReplicationSpecRegionsConfigArrayOutput() ClusterReplicationSpecRegionsConfigArrayOutput
	ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Context) ClusterReplicationSpecRegionsConfigArrayOutput
}

type ClusterReplicationSpecRegionsConfigArray []ClusterReplicationSpecRegionsConfigInput

func (ClusterReplicationSpecRegionsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i ClusterReplicationSpecRegionsConfigArray) ToClusterReplicationSpecRegionsConfigArrayOutput() ClusterReplicationSpecRegionsConfigArrayOutput {
	return i.ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecRegionsConfigArray) ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecRegionsConfigArrayOutput)
}

func (i ClusterReplicationSpecRegionsConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterReplicationSpecRegionsConfig] {
	return pulumix.Output[[]ClusterReplicationSpecRegionsConfig]{
		OutputState: i.ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterReplicationSpecRegionsConfigOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecRegionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o ClusterReplicationSpecRegionsConfigOutput) ToClusterReplicationSpecRegionsConfigOutput() ClusterReplicationSpecRegionsConfigOutput {
	return o
}

func (o ClusterReplicationSpecRegionsConfigOutput) ToClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigOutput {
	return o
}

func (o ClusterReplicationSpecRegionsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterReplicationSpecRegionsConfig] {
	return pulumix.Output[ClusterReplicationSpecRegionsConfig]{
		OutputState: o.OutputState,
	}
}

// The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
func (o ClusterReplicationSpecRegionsConfigOutput) AnalyticsNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.AnalyticsNodes }).(pulumi.IntPtrOutput)
}

// Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
// * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
// * Specify 0 if you do not want any electable nodes in the region.
// * You cannot create electable nodes in a region if `priority` is 0.
func (o ClusterReplicationSpecRegionsConfigOutput) ElectableNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.ElectableNodes }).(pulumi.IntPtrOutput)
}

// Election priority of the region. For regions with only read-only nodes, set this value to 0.
// * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
// * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
// * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
func (o ClusterReplicationSpecRegionsConfigOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
func (o ClusterReplicationSpecRegionsConfigOutput) ReadOnlyNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.ReadOnlyNodes }).(pulumi.IntPtrOutput)
}

// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
func (o ClusterReplicationSpecRegionsConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type ClusterReplicationSpecRegionsConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecRegionsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o ClusterReplicationSpecRegionsConfigArrayOutput) ToClusterReplicationSpecRegionsConfigArrayOutput() ClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o ClusterReplicationSpecRegionsConfigArrayOutput) ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o ClusterReplicationSpecRegionsConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterReplicationSpecRegionsConfig] {
	return pulumix.Output[[]ClusterReplicationSpecRegionsConfig]{
		OutputState: o.OutputState,
	}
}

func (o ClusterReplicationSpecRegionsConfigArrayOutput) Index(i pulumi.IntInput) ClusterReplicationSpecRegionsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterReplicationSpecRegionsConfig {
		return vs[0].([]ClusterReplicationSpecRegionsConfig)[vs[1].(int)]
	}).(ClusterReplicationSpecRegionsConfigOutput)
}

type ClusterSnapshotBackupPolicy struct {
	// The cluster ID.
	ClusterId             *string                             `pulumi:"clusterId"`
	ClusterName           *string                             `pulumi:"clusterName"`
	NextSnapshot          *string                             `pulumi:"nextSnapshot"`
	Policies              []ClusterSnapshotBackupPolicyPolicy `pulumi:"policies"`
	ReferenceHourOfDay    *int                                `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour *int                                `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     *int                                `pulumi:"restoreWindowDays"`
	UpdateSnapshots       *bool                               `pulumi:"updateSnapshots"`
}

// ClusterSnapshotBackupPolicyInput is an input type that accepts ClusterSnapshotBackupPolicyArgs and ClusterSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyInput` via:
//
//	ClusterSnapshotBackupPolicyArgs{...}
type ClusterSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyOutput() ClusterSnapshotBackupPolicyOutput
	ToClusterSnapshotBackupPolicyOutputWithContext(context.Context) ClusterSnapshotBackupPolicyOutput
}

type ClusterSnapshotBackupPolicyArgs struct {
	// The cluster ID.
	ClusterId             pulumi.StringPtrInput                       `pulumi:"clusterId"`
	ClusterName           pulumi.StringPtrInput                       `pulumi:"clusterName"`
	NextSnapshot          pulumi.StringPtrInput                       `pulumi:"nextSnapshot"`
	Policies              ClusterSnapshotBackupPolicyPolicyArrayInput `pulumi:"policies"`
	ReferenceHourOfDay    pulumi.IntPtrInput                          `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour pulumi.IntPtrInput                          `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     pulumi.IntPtrInput                          `pulumi:"restoreWindowDays"`
	UpdateSnapshots       pulumi.BoolPtrInput                         `pulumi:"updateSnapshots"`
}

func (ClusterSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyArgs) ToClusterSnapshotBackupPolicyOutput() ClusterSnapshotBackupPolicyOutput {
	return i.ToClusterSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyArgs) ToClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyOutput)
}

func (i ClusterSnapshotBackupPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterSnapshotBackupPolicy] {
	return pulumix.Output[ClusterSnapshotBackupPolicy]{
		OutputState: i.ToClusterSnapshotBackupPolicyOutputWithContext(ctx).OutputState,
	}
}

// ClusterSnapshotBackupPolicyArrayInput is an input type that accepts ClusterSnapshotBackupPolicyArray and ClusterSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyArrayInput` via:
//
//	ClusterSnapshotBackupPolicyArray{ ClusterSnapshotBackupPolicyArgs{...} }
type ClusterSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyArrayOutput() ClusterSnapshotBackupPolicyArrayOutput
	ToClusterSnapshotBackupPolicyArrayOutputWithContext(context.Context) ClusterSnapshotBackupPolicyArrayOutput
}

type ClusterSnapshotBackupPolicyArray []ClusterSnapshotBackupPolicyInput

func (ClusterSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyArray) ToClusterSnapshotBackupPolicyArrayOutput() ClusterSnapshotBackupPolicyArrayOutput {
	return i.ToClusterSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyArray) ToClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyArrayOutput)
}

func (i ClusterSnapshotBackupPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterSnapshotBackupPolicy] {
	return pulumix.Output[[]ClusterSnapshotBackupPolicy]{
		OutputState: i.ToClusterSnapshotBackupPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyOutput) ToClusterSnapshotBackupPolicyOutput() ClusterSnapshotBackupPolicyOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyOutput) ToClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterSnapshotBackupPolicy] {
	return pulumix.Output[ClusterSnapshotBackupPolicy]{
		OutputState: o.OutputState,
	}
}

// The cluster ID.
func (o ClusterSnapshotBackupPolicyOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) NextSnapshot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *string { return v.NextSnapshot }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) Policies() ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) []ClusterSnapshotBackupPolicyPolicy { return v.Policies }).(ClusterSnapshotBackupPolicyPolicyArrayOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) ReferenceHourOfDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *int { return v.ReferenceHourOfDay }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) ReferenceMinuteOfHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *int { return v.ReferenceMinuteOfHour }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) RestoreWindowDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *int { return v.RestoreWindowDays }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) UpdateSnapshots() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *bool { return v.UpdateSnapshots }).(pulumi.BoolPtrOutput)
}

type ClusterSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyArrayOutput) ToClusterSnapshotBackupPolicyArrayOutput() ClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyArrayOutput) ToClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterSnapshotBackupPolicy] {
	return pulumix.Output[[]ClusterSnapshotBackupPolicy]{
		OutputState: o.OutputState,
	}
}

func (o ClusterSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) ClusterSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSnapshotBackupPolicy {
		return vs[0].([]ClusterSnapshotBackupPolicy)[vs[1].(int)]
	}).(ClusterSnapshotBackupPolicyOutput)
}

type ClusterSnapshotBackupPolicyPolicy struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          *string                                       `pulumi:"id"`
	PolicyItems []ClusterSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// ClusterSnapshotBackupPolicyPolicyInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyArgs and ClusterSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyInput` via:
//
//	ClusterSnapshotBackupPolicyPolicyArgs{...}
type ClusterSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyOutput() ClusterSnapshotBackupPolicyPolicyOutput
	ToClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyOutput
}

type ClusterSnapshotBackupPolicyPolicyArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          pulumi.StringPtrInput                                 `pulumi:"id"`
	PolicyItems ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (ClusterSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyArgs) ToClusterSnapshotBackupPolicyPolicyOutput() ClusterSnapshotBackupPolicyPolicyOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyArgs) ToClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyOutput)
}

func (i ClusterSnapshotBackupPolicyPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterSnapshotBackupPolicyPolicy] {
	return pulumix.Output[ClusterSnapshotBackupPolicyPolicy]{
		OutputState: i.ToClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx).OutputState,
	}
}

// ClusterSnapshotBackupPolicyPolicyArrayInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyArray and ClusterSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyArrayInput` via:
//
//	ClusterSnapshotBackupPolicyPolicyArray{ ClusterSnapshotBackupPolicyPolicyArgs{...} }
type ClusterSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyArrayOutput() ClusterSnapshotBackupPolicyPolicyArrayOutput
	ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyArrayOutput
}

type ClusterSnapshotBackupPolicyPolicyArray []ClusterSnapshotBackupPolicyPolicyInput

func (ClusterSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyArray) ToClusterSnapshotBackupPolicyPolicyArrayOutput() ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyArray) ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyArrayOutput)
}

func (i ClusterSnapshotBackupPolicyPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterSnapshotBackupPolicyPolicy] {
	return pulumix.Output[[]ClusterSnapshotBackupPolicyPolicy]{
		OutputState: i.ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyOutput) ToClusterSnapshotBackupPolicyPolicyOutput() ClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyOutput) ToClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterSnapshotBackupPolicyPolicy] {
	return pulumix.Output[ClusterSnapshotBackupPolicyPolicy]{
		OutputState: o.OutputState,
	}
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o ClusterSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicy) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyOutput) PolicyItems() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicy) []ClusterSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type ClusterSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyArrayOutput) ToClusterSnapshotBackupPolicyPolicyArrayOutput() ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyArrayOutput) ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterSnapshotBackupPolicyPolicy] {
	return pulumix.Output[[]ClusterSnapshotBackupPolicyPolicy]{
		OutputState: o.OutputState,
	}
}

func (o ClusterSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) ClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSnapshotBackupPolicyPolicy {
		return vs[0].([]ClusterSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(ClusterSnapshotBackupPolicyPolicyOutput)
}

type ClusterSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval *int    `pulumi:"frequencyInterval"`
	FrequencyType     *string `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             *string `pulumi:"id"`
	RetentionUnit  *string `pulumi:"retentionUnit"`
	RetentionValue *int    `pulumi:"retentionValue"`
}

// ClusterSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyPolicyItemArgs and ClusterSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//	ClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type ClusterSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyPolicyItemOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemOutput
	ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntPtrInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             pulumi.StringPtrInput `pulumi:"id"`
	RetentionUnit  pulumi.StringPtrInput `pulumi:"retentionUnit"`
	RetentionValue pulumi.IntPtrInput    `pulumi:"retentionValue"`
}

func (ClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterSnapshotBackupPolicyPolicyPolicyItem] {
	return pulumix.Output[ClusterSnapshotBackupPolicyPolicyPolicyItem]{
		OutputState: i.ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx).OutputState,
	}
}

// ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyPolicyItemArray and ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//	ClusterSnapshotBackupPolicyPolicyPolicyItemArray{ ClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemArray []ClusterSnapshotBackupPolicyPolicyPolicyItemInput

func (ClusterSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToOutput(ctx context.Context) pulumix.Output[[]ClusterSnapshotBackupPolicyPolicyPolicyItem] {
	return pulumix.Output[[]ClusterSnapshotBackupPolicyPolicyPolicyItem]{
		OutputState: i.ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx).OutputState,
	}
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterSnapshotBackupPolicyPolicyPolicyItem] {
	return pulumix.Output[ClusterSnapshotBackupPolicyPolicyPolicyItem]{
		OutputState: o.OutputState,
	}
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *int { return v.FrequencyInterval }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *string { return v.RetentionUnit }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *int { return v.RetentionValue }).(pulumi.IntPtrOutput)
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClusterSnapshotBackupPolicyPolicyPolicyItem] {
	return pulumix.Output[[]ClusterSnapshotBackupPolicyPolicyPolicyItem]{
		OutputState: o.OutputState,
	}
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]ClusterSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(ClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type CustomDbRoleAction struct {
	// Name of the privilege action. For a complete list of actions available in the Atlas API, see [Custom Role Actions](https://docs.atlas.mongodb.com/reference/api/custom-role-actions)
	// > **Note**: The privilege actions available to the Custom Roles API resource represent a subset of the privilege actions available in the Atlas Custom Roles UI.
	Action string `pulumi:"action"`
	// Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	//
	// * `resources.#.collection_name` - (Optional) Collection on which the action is granted. If this value is an empty string, the action is granted on all collections within the database specified in the actions.resources.db field.
	//
	// > **NOTE** This field is mutually exclusive with the `actions.resources.cluster` field.
	//
	// * `resources.#.database_name`	Database on which the action is granted.
	//
	// > **NOTE** This field is mutually exclusive with the `actions.resources.cluster` field.
	//
	// * `resources.#.cluster`	(Optional) Set to true to indicate that the action is granted on the cluster resource.
	//
	// > **NOTE** This field is mutually exclusive with the `actions.resources.collection` and `actions.resources.db fields`.
	Resources []CustomDbRoleActionResource `pulumi:"resources"`
}

// CustomDbRoleActionInput is an input type that accepts CustomDbRoleActionArgs and CustomDbRoleActionOutput values.
// You can construct a concrete instance of `CustomDbRoleActionInput` via:
//
//	CustomDbRoleActionArgs{...}
type CustomDbRoleActionInput interface {
	pulumi.Input

	ToCustomDbRoleActionOutput() CustomDbRoleActionOutput
	ToCustomDbRoleActionOutputWithContext(context.Context) CustomDbRoleActionOutput
}

type CustomDbRoleActionArgs struct {
	// Name of the privilege action. For a complete list of actions available in the Atlas API, see [Custom Role Actions](https://docs.atlas.mongodb.com/reference/api/custom-role-actions)
	// > **Note**: The privilege actions available to the Custom Roles API resource represent a subset of the privilege actions available in the Atlas Custom Roles UI.
	Action pulumi.StringInput `pulumi:"action"`
	// Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	//
	// * `resources.#.collection_name` - (Optional) Collection on which the action is granted. If this value is an empty string, the action is granted on all collections within the database specified in the actions.resources.db field.
	//
	// > **NOTE** This field is mutually exclusive with the `actions.resources.cluster` field.
	//
	// * `resources.#.database_name`	Database on which the action is granted.
	//
	// > **NOTE** This field is mutually exclusive with the `actions.resources.cluster` field.
	//
	// * `resources.#.cluster`	(Optional) Set to true to indicate that the action is granted on the cluster resource.
	//
	// > **NOTE** This field is mutually exclusive with the `actions.resources.collection` and `actions.resources.db fields`.
	Resources CustomDbRoleActionResourceArrayInput `pulumi:"resources"`
}

func (CustomDbRoleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleAction)(nil)).Elem()
}

func (i CustomDbRoleActionArgs) ToCustomDbRoleActionOutput() CustomDbRoleActionOutput {
	return i.ToCustomDbRoleActionOutputWithContext(context.Background())
}

func (i CustomDbRoleActionArgs) ToCustomDbRoleActionOutputWithContext(ctx context.Context) CustomDbRoleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionOutput)
}

func (i CustomDbRoleActionArgs) ToOutput(ctx context.Context) pulumix.Output[CustomDbRoleAction] {
	return pulumix.Output[CustomDbRoleAction]{
		OutputState: i.ToCustomDbRoleActionOutputWithContext(ctx).OutputState,
	}
}

// CustomDbRoleActionArrayInput is an input type that accepts CustomDbRoleActionArray and CustomDbRoleActionArrayOutput values.
// You can construct a concrete instance of `CustomDbRoleActionArrayInput` via:
//
//	CustomDbRoleActionArray{ CustomDbRoleActionArgs{...} }
type CustomDbRoleActionArrayInput interface {
	pulumi.Input

	ToCustomDbRoleActionArrayOutput() CustomDbRoleActionArrayOutput
	ToCustomDbRoleActionArrayOutputWithContext(context.Context) CustomDbRoleActionArrayOutput
}

type CustomDbRoleActionArray []CustomDbRoleActionInput

func (CustomDbRoleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleAction)(nil)).Elem()
}

func (i CustomDbRoleActionArray) ToCustomDbRoleActionArrayOutput() CustomDbRoleActionArrayOutput {
	return i.ToCustomDbRoleActionArrayOutputWithContext(context.Background())
}

func (i CustomDbRoleActionArray) ToCustomDbRoleActionArrayOutputWithContext(ctx context.Context) CustomDbRoleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionArrayOutput)
}

func (i CustomDbRoleActionArray) ToOutput(ctx context.Context) pulumix.Output[[]CustomDbRoleAction] {
	return pulumix.Output[[]CustomDbRoleAction]{
		OutputState: i.ToCustomDbRoleActionArrayOutputWithContext(ctx).OutputState,
	}
}

type CustomDbRoleActionOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleAction)(nil)).Elem()
}

func (o CustomDbRoleActionOutput) ToCustomDbRoleActionOutput() CustomDbRoleActionOutput {
	return o
}

func (o CustomDbRoleActionOutput) ToCustomDbRoleActionOutputWithContext(ctx context.Context) CustomDbRoleActionOutput {
	return o
}

func (o CustomDbRoleActionOutput) ToOutput(ctx context.Context) pulumix.Output[CustomDbRoleAction] {
	return pulumix.Output[CustomDbRoleAction]{
		OutputState: o.OutputState,
	}
}

// Name of the privilege action. For a complete list of actions available in the Atlas API, see [Custom Role Actions](https://docs.atlas.mongodb.com/reference/api/custom-role-actions)
// > **Note**: The privilege actions available to the Custom Roles API resource represent a subset of the privilege actions available in the Atlas Custom Roles UI.
func (o CustomDbRoleActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDbRoleAction) string { return v.Action }).(pulumi.StringOutput)
}

// Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
//
// * `resources.#.collection_name` - (Optional) Collection on which the action is granted. If this value is an empty string, the action is granted on all collections within the database specified in the actions.resources.db field.
//
// > **NOTE** This field is mutually exclusive with the `actions.resources.cluster` field.
//
// * `resources.#.database_name`	Database on which the action is granted.
//
// > **NOTE** This field is mutually exclusive with the `actions.resources.cluster` field.
//
// * `resources.#.cluster`	(Optional) Set to true to indicate that the action is granted on the cluster resource.
//
// > **NOTE** This field is mutually exclusive with the `actions.resources.collection` and `actions.resources.db fields`.
func (o CustomDbRoleActionOutput) Resources() CustomDbRoleActionResourceArrayOutput {
	return o.ApplyT(func(v CustomDbRoleAction) []CustomDbRoleActionResource { return v.Resources }).(CustomDbRoleActionResourceArrayOutput)
}

type CustomDbRoleActionArrayOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleAction)(nil)).Elem()
}

func (o CustomDbRoleActionArrayOutput) ToCustomDbRoleActionArrayOutput() CustomDbRoleActionArrayOutput {
	return o
}

func (o CustomDbRoleActionArrayOutput) ToCustomDbRoleActionArrayOutputWithContext(ctx context.Context) CustomDbRoleActionArrayOutput {
	return o
}

func (o CustomDbRoleActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CustomDbRoleAction] {
	return pulumix.Output[[]CustomDbRoleAction]{
		OutputState: o.OutputState,
	}
}

func (o CustomDbRoleActionArrayOutput) Index(i pulumi.IntInput) CustomDbRoleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDbRoleAction {
		return vs[0].([]CustomDbRoleAction)[vs[1].(int)]
	}).(CustomDbRoleActionOutput)
}

type CustomDbRoleActionResource struct {
	Cluster        *bool   `pulumi:"cluster"`
	CollectionName *string `pulumi:"collectionName"`
	// Database on which the inherited role is granted.
	//
	// > **NOTE** This value should be admin for all roles except read and readWrite.
	DatabaseName *string `pulumi:"databaseName"`
}

// CustomDbRoleActionResourceInput is an input type that accepts CustomDbRoleActionResourceArgs and CustomDbRoleActionResourceOutput values.
// You can construct a concrete instance of `CustomDbRoleActionResourceInput` via:
//
//	CustomDbRoleActionResourceArgs{...}
type CustomDbRoleActionResourceInput interface {
	pulumi.Input

	ToCustomDbRoleActionResourceOutput() CustomDbRoleActionResourceOutput
	ToCustomDbRoleActionResourceOutputWithContext(context.Context) CustomDbRoleActionResourceOutput
}

type CustomDbRoleActionResourceArgs struct {
	Cluster        pulumi.BoolPtrInput   `pulumi:"cluster"`
	CollectionName pulumi.StringPtrInput `pulumi:"collectionName"`
	// Database on which the inherited role is granted.
	//
	// > **NOTE** This value should be admin for all roles except read and readWrite.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
}

func (CustomDbRoleActionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleActionResource)(nil)).Elem()
}

func (i CustomDbRoleActionResourceArgs) ToCustomDbRoleActionResourceOutput() CustomDbRoleActionResourceOutput {
	return i.ToCustomDbRoleActionResourceOutputWithContext(context.Background())
}

func (i CustomDbRoleActionResourceArgs) ToCustomDbRoleActionResourceOutputWithContext(ctx context.Context) CustomDbRoleActionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionResourceOutput)
}

func (i CustomDbRoleActionResourceArgs) ToOutput(ctx context.Context) pulumix.Output[CustomDbRoleActionResource] {
	return pulumix.Output[CustomDbRoleActionResource]{
		OutputState: i.ToCustomDbRoleActionResourceOutputWithContext(ctx).OutputState,
	}
}

// CustomDbRoleActionResourceArrayInput is an input type that accepts CustomDbRoleActionResourceArray and CustomDbRoleActionResourceArrayOutput values.
// You can construct a concrete instance of `CustomDbRoleActionResourceArrayInput` via:
//
//	CustomDbRoleActionResourceArray{ CustomDbRoleActionResourceArgs{...} }
type CustomDbRoleActionResourceArrayInput interface {
	pulumi.Input

	ToCustomDbRoleActionResourceArrayOutput() CustomDbRoleActionResourceArrayOutput
	ToCustomDbRoleActionResourceArrayOutputWithContext(context.Context) CustomDbRoleActionResourceArrayOutput
}

type CustomDbRoleActionResourceArray []CustomDbRoleActionResourceInput

func (CustomDbRoleActionResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleActionResource)(nil)).Elem()
}

func (i CustomDbRoleActionResourceArray) ToCustomDbRoleActionResourceArrayOutput() CustomDbRoleActionResourceArrayOutput {
	return i.ToCustomDbRoleActionResourceArrayOutputWithContext(context.Background())
}

func (i CustomDbRoleActionResourceArray) ToCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) CustomDbRoleActionResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionResourceArrayOutput)
}

func (i CustomDbRoleActionResourceArray) ToOutput(ctx context.Context) pulumix.Output[[]CustomDbRoleActionResource] {
	return pulumix.Output[[]CustomDbRoleActionResource]{
		OutputState: i.ToCustomDbRoleActionResourceArrayOutputWithContext(ctx).OutputState,
	}
}

type CustomDbRoleActionResourceOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleActionResource)(nil)).Elem()
}

func (o CustomDbRoleActionResourceOutput) ToCustomDbRoleActionResourceOutput() CustomDbRoleActionResourceOutput {
	return o
}

func (o CustomDbRoleActionResourceOutput) ToCustomDbRoleActionResourceOutputWithContext(ctx context.Context) CustomDbRoleActionResourceOutput {
	return o
}

func (o CustomDbRoleActionResourceOutput) ToOutput(ctx context.Context) pulumix.Output[CustomDbRoleActionResource] {
	return pulumix.Output[CustomDbRoleActionResource]{
		OutputState: o.OutputState,
	}
}

func (o CustomDbRoleActionResourceOutput) Cluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDbRoleActionResource) *bool { return v.Cluster }).(pulumi.BoolPtrOutput)
}

func (o CustomDbRoleActionResourceOutput) CollectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDbRoleActionResource) *string { return v.CollectionName }).(pulumi.StringPtrOutput)
}

// Database on which the inherited role is granted.
//
// > **NOTE** This value should be admin for all roles except read and readWrite.
func (o CustomDbRoleActionResourceOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDbRoleActionResource) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

type CustomDbRoleActionResourceArrayOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleActionResource)(nil)).Elem()
}

func (o CustomDbRoleActionResourceArrayOutput) ToCustomDbRoleActionResourceArrayOutput() CustomDbRoleActionResourceArrayOutput {
	return o
}

func (o CustomDbRoleActionResourceArrayOutput) ToCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) CustomDbRoleActionResourceArrayOutput {
	return o
}

func (o CustomDbRoleActionResourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CustomDbRoleActionResource] {
	return pulumix.Output[[]CustomDbRoleActionResource]{
		OutputState: o.OutputState,
	}
}

func (o CustomDbRoleActionResourceArrayOutput) Index(i pulumi.IntInput) CustomDbRoleActionResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDbRoleActionResource {
		return vs[0].([]CustomDbRoleActionResource)[vs[1].(int)]
	}).(CustomDbRoleActionResourceOutput)
}

type CustomDbRoleInheritedRole struct {
	// Database on which the inherited role is granted.
	//
	// > **NOTE** This value should be admin for all roles except read and readWrite.
	DatabaseName string `pulumi:"databaseName"`
	// Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName string `pulumi:"roleName"`
}

// CustomDbRoleInheritedRoleInput is an input type that accepts CustomDbRoleInheritedRoleArgs and CustomDbRoleInheritedRoleOutput values.
// You can construct a concrete instance of `CustomDbRoleInheritedRoleInput` via:
//
//	CustomDbRoleInheritedRoleArgs{...}
type CustomDbRoleInheritedRoleInput interface {
	pulumi.Input

	ToCustomDbRoleInheritedRoleOutput() CustomDbRoleInheritedRoleOutput
	ToCustomDbRoleInheritedRoleOutputWithContext(context.Context) CustomDbRoleInheritedRoleOutput
}

type CustomDbRoleInheritedRoleArgs struct {
	// Database on which the inherited role is granted.
	//
	// > **NOTE** This value should be admin for all roles except read and readWrite.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (CustomDbRoleInheritedRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleInheritedRole)(nil)).Elem()
}

func (i CustomDbRoleInheritedRoleArgs) ToCustomDbRoleInheritedRoleOutput() CustomDbRoleInheritedRoleOutput {
	return i.ToCustomDbRoleInheritedRoleOutputWithContext(context.Background())
}

func (i CustomDbRoleInheritedRoleArgs) ToCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleInheritedRoleOutput)
}

func (i CustomDbRoleInheritedRoleArgs) ToOutput(ctx context.Context) pulumix.Output[CustomDbRoleInheritedRole] {
	return pulumix.Output[CustomDbRoleInheritedRole]{
		OutputState: i.ToCustomDbRoleInheritedRoleOutputWithContext(ctx).OutputState,
	}
}

// CustomDbRoleInheritedRoleArrayInput is an input type that accepts CustomDbRoleInheritedRoleArray and CustomDbRoleInheritedRoleArrayOutput values.
// You can construct a concrete instance of `CustomDbRoleInheritedRoleArrayInput` via:
//
//	CustomDbRoleInheritedRoleArray{ CustomDbRoleInheritedRoleArgs{...} }
type CustomDbRoleInheritedRoleArrayInput interface {
	pulumi.Input

	ToCustomDbRoleInheritedRoleArrayOutput() CustomDbRoleInheritedRoleArrayOutput
	ToCustomDbRoleInheritedRoleArrayOutputWithContext(context.Context) CustomDbRoleInheritedRoleArrayOutput
}

type CustomDbRoleInheritedRoleArray []CustomDbRoleInheritedRoleInput

func (CustomDbRoleInheritedRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleInheritedRole)(nil)).Elem()
}

func (i CustomDbRoleInheritedRoleArray) ToCustomDbRoleInheritedRoleArrayOutput() CustomDbRoleInheritedRoleArrayOutput {
	return i.ToCustomDbRoleInheritedRoleArrayOutputWithContext(context.Background())
}

func (i CustomDbRoleInheritedRoleArray) ToCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleInheritedRoleArrayOutput)
}

func (i CustomDbRoleInheritedRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]CustomDbRoleInheritedRole] {
	return pulumix.Output[[]CustomDbRoleInheritedRole]{
		OutputState: i.ToCustomDbRoleInheritedRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type CustomDbRoleInheritedRoleOutput struct{ *pulumi.OutputState }

func (CustomDbRoleInheritedRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleInheritedRole)(nil)).Elem()
}

func (o CustomDbRoleInheritedRoleOutput) ToCustomDbRoleInheritedRoleOutput() CustomDbRoleInheritedRoleOutput {
	return o
}

func (o CustomDbRoleInheritedRoleOutput) ToCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleOutput {
	return o
}

func (o CustomDbRoleInheritedRoleOutput) ToOutput(ctx context.Context) pulumix.Output[CustomDbRoleInheritedRole] {
	return pulumix.Output[CustomDbRoleInheritedRole]{
		OutputState: o.OutputState,
	}
}

// Database on which the inherited role is granted.
//
// > **NOTE** This value should be admin for all roles except read and readWrite.
func (o CustomDbRoleInheritedRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDbRoleInheritedRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Name of the inherited role. This can either be another custom role or a built-in role.
func (o CustomDbRoleInheritedRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDbRoleInheritedRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type CustomDbRoleInheritedRoleArrayOutput struct{ *pulumi.OutputState }

func (CustomDbRoleInheritedRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleInheritedRole)(nil)).Elem()
}

func (o CustomDbRoleInheritedRoleArrayOutput) ToCustomDbRoleInheritedRoleArrayOutput() CustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o CustomDbRoleInheritedRoleArrayOutput) ToCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o CustomDbRoleInheritedRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CustomDbRoleInheritedRole] {
	return pulumix.Output[[]CustomDbRoleInheritedRole]{
		OutputState: o.OutputState,
	}
}

func (o CustomDbRoleInheritedRoleArrayOutput) Index(i pulumi.IntInput) CustomDbRoleInheritedRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDbRoleInheritedRole {
		return vs[0].([]CustomDbRoleInheritedRole)[vs[1].(int)]
	}).(CustomDbRoleInheritedRoleOutput)
}

type DataLakeAws struct {
	ExternalId        *string `pulumi:"externalId"`
	IamAssumedRoleArn *string `pulumi:"iamAssumedRoleArn"`
	IamUserArn        *string `pulumi:"iamUserArn"`
	RoleId            string  `pulumi:"roleId"`
	TestS3Bucket      string  `pulumi:"testS3Bucket"`
}

// DataLakeAwsInput is an input type that accepts DataLakeAwsArgs and DataLakeAwsOutput values.
// You can construct a concrete instance of `DataLakeAwsInput` via:
//
//	DataLakeAwsArgs{...}
type DataLakeAwsInput interface {
	pulumi.Input

	ToDataLakeAwsOutput() DataLakeAwsOutput
	ToDataLakeAwsOutputWithContext(context.Context) DataLakeAwsOutput
}

type DataLakeAwsArgs struct {
	ExternalId        pulumi.StringPtrInput `pulumi:"externalId"`
	IamAssumedRoleArn pulumi.StringPtrInput `pulumi:"iamAssumedRoleArn"`
	IamUserArn        pulumi.StringPtrInput `pulumi:"iamUserArn"`
	RoleId            pulumi.StringInput    `pulumi:"roleId"`
	TestS3Bucket      pulumi.StringInput    `pulumi:"testS3Bucket"`
}

func (DataLakeAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAws)(nil)).Elem()
}

func (i DataLakeAwsArgs) ToDataLakeAwsOutput() DataLakeAwsOutput {
	return i.ToDataLakeAwsOutputWithContext(context.Background())
}

func (i DataLakeAwsArgs) ToDataLakeAwsOutputWithContext(ctx context.Context) DataLakeAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAwsOutput)
}

func (i DataLakeAwsArgs) ToOutput(ctx context.Context) pulumix.Output[DataLakeAws] {
	return pulumix.Output[DataLakeAws]{
		OutputState: i.ToDataLakeAwsOutputWithContext(ctx).OutputState,
	}
}

func (i DataLakeAwsArgs) ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput {
	return i.ToDataLakeAwsPtrOutputWithContext(context.Background())
}

func (i DataLakeAwsArgs) ToDataLakeAwsPtrOutputWithContext(ctx context.Context) DataLakeAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAwsOutput).ToDataLakeAwsPtrOutputWithContext(ctx)
}

// DataLakeAwsPtrInput is an input type that accepts DataLakeAwsArgs, DataLakeAwsPtr and DataLakeAwsPtrOutput values.
// You can construct a concrete instance of `DataLakeAwsPtrInput` via:
//
//	        DataLakeAwsArgs{...}
//
//	or:
//
//	        nil
type DataLakeAwsPtrInput interface {
	pulumi.Input

	ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput
	ToDataLakeAwsPtrOutputWithContext(context.Context) DataLakeAwsPtrOutput
}

type dataLakeAwsPtrType DataLakeAwsArgs

func DataLakeAwsPtr(v *DataLakeAwsArgs) DataLakeAwsPtrInput {
	return (*dataLakeAwsPtrType)(v)
}

func (*dataLakeAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAws)(nil)).Elem()
}

func (i *dataLakeAwsPtrType) ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput {
	return i.ToDataLakeAwsPtrOutputWithContext(context.Background())
}

func (i *dataLakeAwsPtrType) ToDataLakeAwsPtrOutputWithContext(ctx context.Context) DataLakeAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAwsPtrOutput)
}

func (i *dataLakeAwsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataLakeAws] {
	return pulumix.Output[*DataLakeAws]{
		OutputState: i.ToDataLakeAwsPtrOutputWithContext(ctx).OutputState,
	}
}

type DataLakeAwsOutput struct{ *pulumi.OutputState }

func (DataLakeAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAws)(nil)).Elem()
}

func (o DataLakeAwsOutput) ToDataLakeAwsOutput() DataLakeAwsOutput {
	return o
}

func (o DataLakeAwsOutput) ToDataLakeAwsOutputWithContext(ctx context.Context) DataLakeAwsOutput {
	return o
}

func (o DataLakeAwsOutput) ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput {
	return o.ToDataLakeAwsPtrOutputWithContext(context.Background())
}

func (o DataLakeAwsOutput) ToDataLakeAwsPtrOutputWithContext(ctx context.Context) DataLakeAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeAws) *DataLakeAws {
		return &v
	}).(DataLakeAwsPtrOutput)
}

func (o DataLakeAwsOutput) ToOutput(ctx context.Context) pulumix.Output[DataLakeAws] {
	return pulumix.Output[DataLakeAws]{
		OutputState: o.OutputState,
	}
}

func (o DataLakeAwsOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAws) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsOutput) IamAssumedRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAws) *string { return v.IamAssumedRoleArn }).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsOutput) IamUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAws) *string { return v.IamUserArn }).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAws) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o DataLakeAwsOutput) TestS3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAws) string { return v.TestS3Bucket }).(pulumi.StringOutput)
}

type DataLakeAwsPtrOutput struct{ *pulumi.OutputState }

func (DataLakeAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAws)(nil)).Elem()
}

func (o DataLakeAwsPtrOutput) ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput {
	return o
}

func (o DataLakeAwsPtrOutput) ToDataLakeAwsPtrOutputWithContext(ctx context.Context) DataLakeAwsPtrOutput {
	return o
}

func (o DataLakeAwsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataLakeAws] {
	return pulumix.Output[*DataLakeAws]{
		OutputState: o.OutputState,
	}
}

func (o DataLakeAwsPtrOutput) Elem() DataLakeAwsOutput {
	return o.ApplyT(func(v *DataLakeAws) DataLakeAws {
		if v != nil {
			return *v
		}
		var ret DataLakeAws
		return ret
	}).(DataLakeAwsOutput)
}

func (o DataLakeAwsPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsPtrOutput) IamAssumedRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return v.IamAssumedRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsPtrOutput) IamUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return v.IamUserArn
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsPtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return &v.RoleId
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsPtrOutput) TestS3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return &v.TestS3Bucket
	}).(pulumi.StringPtrOutput)
}

type DataLakeDataProcessRegion struct {
	CloudProvider string `pulumi:"cloudProvider"`
	Region        string `pulumi:"region"`
}

// DataLakeDataProcessRegionInput is an input type that accepts DataLakeDataProcessRegionArgs and DataLakeDataProcessRegionOutput values.
// You can construct a concrete instance of `DataLakeDataProcessRegionInput` via:
//
//	DataLakeDataProcessRegionArgs{...}
type DataLakeDataProcessRegionInput interface {
	pulumi.Input

	ToDataLakeDataProcessRegionOutput() DataLakeDataProcessRegionOutput
	ToDataLakeDataProcessRegionOutputWithContext(context.Context) DataLakeDataProcessRegionOutput
}

type DataLakeDataProcessRegionArgs struct {
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	Region        pulumi.StringInput `pulumi:"region"`
}

func (DataLakeDataProcessRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeDataProcessRegion)(nil)).Elem()
}

func (i DataLakeDataProcessRegionArgs) ToDataLakeDataProcessRegionOutput() DataLakeDataProcessRegionOutput {
	return i.ToDataLakeDataProcessRegionOutputWithContext(context.Background())
}

func (i DataLakeDataProcessRegionArgs) ToDataLakeDataProcessRegionOutputWithContext(ctx context.Context) DataLakeDataProcessRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeDataProcessRegionOutput)
}

func (i DataLakeDataProcessRegionArgs) ToOutput(ctx context.Context) pulumix.Output[DataLakeDataProcessRegion] {
	return pulumix.Output[DataLakeDataProcessRegion]{
		OutputState: i.ToDataLakeDataProcessRegionOutputWithContext(ctx).OutputState,
	}
}

func (i DataLakeDataProcessRegionArgs) ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput {
	return i.ToDataLakeDataProcessRegionPtrOutputWithContext(context.Background())
}

func (i DataLakeDataProcessRegionArgs) ToDataLakeDataProcessRegionPtrOutputWithContext(ctx context.Context) DataLakeDataProcessRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeDataProcessRegionOutput).ToDataLakeDataProcessRegionPtrOutputWithContext(ctx)
}

// DataLakeDataProcessRegionPtrInput is an input type that accepts DataLakeDataProcessRegionArgs, DataLakeDataProcessRegionPtr and DataLakeDataProcessRegionPtrOutput values.
// You can construct a concrete instance of `DataLakeDataProcessRegionPtrInput` via:
//
//	        DataLakeDataProcessRegionArgs{...}
//
//	or:
//
//	        nil
type DataLakeDataProcessRegionPtrInput interface {
	pulumi.Input

	ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput
	ToDataLakeDataProcessRegionPtrOutputWithContext(context.Context) DataLakeDataProcessRegionPtrOutput
}

type dataLakeDataProcessRegionPtrType DataLakeDataProcessRegionArgs

func DataLakeDataProcessRegionPtr(v *DataLakeDataProcessRegionArgs) DataLakeDataProcessRegionPtrInput {
	return (*dataLakeDataProcessRegionPtrType)(v)
}

func (*dataLakeDataProcessRegionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeDataProcessRegion)(nil)).Elem()
}

func (i *dataLakeDataProcessRegionPtrType) ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput {
	return i.ToDataLakeDataProcessRegionPtrOutputWithContext(context.Background())
}

func (i *dataLakeDataProcessRegionPtrType) ToDataLakeDataProcessRegionPtrOutputWithContext(ctx context.Context) DataLakeDataProcessRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeDataProcessRegionPtrOutput)
}

func (i *dataLakeDataProcessRegionPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataLakeDataProcessRegion] {
	return pulumix.Output[*DataLakeDataProcessRegion]{
		OutputState: i.ToDataLakeDataProcessRegionPtrOutputWithContext(ctx).OutputState,
	}
}

type DataLakeDataProcessRegionOutput struct{ *pulumi.OutputState }

func (DataLakeDataProcessRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeDataProcessRegion)(nil)).Elem()
}

func (o DataLakeDataProcessRegionOutput) ToDataLakeDataProcessRegionOutput() DataLakeDataProcessRegionOutput {
	return o
}

func (o DataLakeDataProcessRegionOutput) ToDataLakeDataProcessRegionOutputWithContext(ctx context.Context) DataLakeDataProcessRegionOutput {
	return o
}

func (o DataLakeDataProcessRegionOutput) ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput {
	return o.ToDataLakeDataProcessRegionPtrOutputWithContext(context.Background())
}

func (o DataLakeDataProcessRegionOutput) ToDataLakeDataProcessRegionPtrOutputWithContext(ctx context.Context) DataLakeDataProcessRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeDataProcessRegion) *DataLakeDataProcessRegion {
		return &v
	}).(DataLakeDataProcessRegionPtrOutput)
}

func (o DataLakeDataProcessRegionOutput) ToOutput(ctx context.Context) pulumix.Output[DataLakeDataProcessRegion] {
	return pulumix.Output[DataLakeDataProcessRegion]{
		OutputState: o.OutputState,
	}
}

func (o DataLakeDataProcessRegionOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeDataProcessRegion) string { return v.CloudProvider }).(pulumi.StringOutput)
}

func (o DataLakeDataProcessRegionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeDataProcessRegion) string { return v.Region }).(pulumi.StringOutput)
}

type DataLakeDataProcessRegionPtrOutput struct{ *pulumi.OutputState }

func (DataLakeDataProcessRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeDataProcessRegion)(nil)).Elem()
}

func (o DataLakeDataProcessRegionPtrOutput) ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput {
	return o
}

func (o DataLakeDataProcessRegionPtrOutput) ToDataLakeDataProcessRegionPtrOutputWithContext(ctx context.Context) DataLakeDataProcessRegionPtrOutput {
	return o
}

func (o DataLakeDataProcessRegionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataLakeDataProcessRegion] {
	return pulumix.Output[*DataLakeDataProcessRegion]{
		OutputState: o.OutputState,
	}
}

func (o DataLakeDataProcessRegionPtrOutput) Elem() DataLakeDataProcessRegionOutput {
	return o.ApplyT(func(v *DataLakeDataProcessRegion) DataLakeDataProcessRegion {
		if v != nil {
			return *v
		}
		var ret DataLakeDataProcessRegion
		return ret
	}).(DataLakeDataProcessRegionOutput)
}

func (o DataLakeDataProcessRegionPtrOutput) CloudProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeDataProcessRegion) *string {
		if v == nil {
			return nil
		}
		return &v.CloudProvider
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeDataProcessRegionPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeDataProcessRegion) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

type DataLakePipelineIngestionSchedule struct {
	FrequencyInterval *int    `pulumi:"frequencyInterval"`
	FrequencyType     *string `pulumi:"frequencyType"`
	// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
	Id             *string `pulumi:"id"`
	RetentionUnit  *string `pulumi:"retentionUnit"`
	RetentionValue *int    `pulumi:"retentionValue"`
}

// DataLakePipelineIngestionScheduleInput is an input type that accepts DataLakePipelineIngestionScheduleArgs and DataLakePipelineIngestionScheduleOutput values.
// You can construct a concrete instance of `DataLakePipelineIngestionScheduleInput` via:
//
//	DataLakePipelineIngestionScheduleArgs{...}
type DataLakePipelineIngestionScheduleInput interface {
	pulumi.Input

	ToDataLakePipelineIngestionScheduleOutput() DataLakePipelineIngestionScheduleOutput
	ToDataLakePipelineIngestionScheduleOutputWithContext(context.Context) DataLakePipelineIngestionScheduleOutput
}

type DataLakePipelineIngestionScheduleArgs struct {
	FrequencyInterval pulumi.IntPtrInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
	Id             pulumi.StringPtrInput `pulumi:"id"`
	RetentionUnit  pulumi.StringPtrInput `pulumi:"retentionUnit"`
	RetentionValue pulumi.IntPtrInput    `pulumi:"retentionValue"`
}

func (DataLakePipelineIngestionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakePipelineIngestionSchedule)(nil)).Elem()
}

func (i DataLakePipelineIngestionScheduleArgs) ToDataLakePipelineIngestionScheduleOutput() DataLakePipelineIngestionScheduleOutput {
	return i.ToDataLakePipelineIngestionScheduleOutputWithContext(context.Background())
}

func (i DataLakePipelineIngestionScheduleArgs) ToDataLakePipelineIngestionScheduleOutputWithContext(ctx context.Context) DataLakePipelineIngestionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakePipelineIngestionScheduleOutput)
}

func (i DataLakePipelineIngestionScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[DataLakePipelineIngestionSchedule] {
	return pulumix.Output[DataLakePipelineIngestionSchedule]{
		OutputState: i.ToDataLakePipelineIngestionScheduleOutputWithContext(ctx).OutputState,
	}
}

// DataLakePipelineIngestionScheduleArrayInput is an input type that accepts DataLakePipelineIngestionScheduleArray and DataLakePipelineIngestionScheduleArrayOutput values.
// You can construct a concrete instance of `DataLakePipelineIngestionScheduleArrayInput` via:
//
//	DataLakePipelineIngestionScheduleArray{ DataLakePipelineIngestionScheduleArgs{...} }
type DataLakePipelineIngestionScheduleArrayInput interface {
	pulumi.Input

	ToDataLakePipelineIngestionScheduleArrayOutput() DataLakePipelineIngestionScheduleArrayOutput
	ToDataLakePipelineIngestionScheduleArrayOutputWithContext(context.Context) DataLakePipelineIngestionScheduleArrayOutput
}

type DataLakePipelineIngestionScheduleArray []DataLakePipelineIngestionScheduleInput

func (DataLakePipelineIngestionScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakePipelineIngestionSchedule)(nil)).Elem()
}

func (i DataLakePipelineIngestionScheduleArray) ToDataLakePipelineIngestionScheduleArrayOutput() DataLakePipelineIngestionScheduleArrayOutput {
	return i.ToDataLakePipelineIngestionScheduleArrayOutputWithContext(context.Background())
}

func (i DataLakePipelineIngestionScheduleArray) ToDataLakePipelineIngestionScheduleArrayOutputWithContext(ctx context.Context) DataLakePipelineIngestionScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakePipelineIngestionScheduleArrayOutput)
}

func (i DataLakePipelineIngestionScheduleArray) ToOutput(ctx context.Context) pulumix.Output[[]DataLakePipelineIngestionSchedule] {
	return pulumix.Output[[]DataLakePipelineIngestionSchedule]{
		OutputState: i.ToDataLakePipelineIngestionScheduleArrayOutputWithContext(ctx).OutputState,
	}
}

type DataLakePipelineIngestionScheduleOutput struct{ *pulumi.OutputState }

func (DataLakePipelineIngestionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakePipelineIngestionSchedule)(nil)).Elem()
}

func (o DataLakePipelineIngestionScheduleOutput) ToDataLakePipelineIngestionScheduleOutput() DataLakePipelineIngestionScheduleOutput {
	return o
}

func (o DataLakePipelineIngestionScheduleOutput) ToDataLakePipelineIngestionScheduleOutputWithContext(ctx context.Context) DataLakePipelineIngestionScheduleOutput {
	return o
}

func (o DataLakePipelineIngestionScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[DataLakePipelineIngestionSchedule] {
	return pulumix.Output[DataLakePipelineIngestionSchedule]{
		OutputState: o.OutputState,
	}
}

func (o DataLakePipelineIngestionScheduleOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataLakePipelineIngestionSchedule) *int { return v.FrequencyInterval }).(pulumi.IntPtrOutput)
}

func (o DataLakePipelineIngestionScheduleOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineIngestionSchedule) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
func (o DataLakePipelineIngestionScheduleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineIngestionSchedule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DataLakePipelineIngestionScheduleOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineIngestionSchedule) *string { return v.RetentionUnit }).(pulumi.StringPtrOutput)
}

func (o DataLakePipelineIngestionScheduleOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataLakePipelineIngestionSchedule) *int { return v.RetentionValue }).(pulumi.IntPtrOutput)
}

type DataLakePipelineIngestionScheduleArrayOutput struct{ *pulumi.OutputState }

func (DataLakePipelineIngestionScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakePipelineIngestionSchedule)(nil)).Elem()
}

func (o DataLakePipelineIngestionScheduleArrayOutput) ToDataLakePipelineIngestionScheduleArrayOutput() DataLakePipelineIngestionScheduleArrayOutput {
	return o
}

func (o DataLakePipelineIngestionScheduleArrayOutput) ToDataLakePipelineIngestionScheduleArrayOutputWithContext(ctx context.Context) DataLakePipelineIngestionScheduleArrayOutput {
	return o
}

func (o DataLakePipelineIngestionScheduleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DataLakePipelineIngestionSchedule] {
	return pulumix.Output[[]DataLakePipelineIngestionSchedule]{
		OutputState: o.OutputState,
	}
}

func (o DataLakePipelineIngestionScheduleArrayOutput) Index(i pulumi.IntInput) DataLakePipelineIngestionScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakePipelineIngestionSchedule {
		return vs[0].([]DataLakePipelineIngestionSchedule)[vs[1].(int)]
	}).(DataLakePipelineIngestionScheduleOutput)
}

type DataLakePipelineSink struct {
	// Ordered fields used to physically organize data in the destination.
	// * `partition_fields.#.field_name` - Human-readable label that identifies the field name used to partition data.
	// * `partition_fields.#.order` - Sequence in which MongoDB Atlas slices the collection data to create partitions. The resource expresses this sequence starting with zero.
	PartitionFields []DataLakePipelineSinkPartitionField `pulumi:"partitionFields"`
	// Target cloud provider for this Data Lake Pipeline.
	Provider *string `pulumi:"provider"`
	// Target cloud provider region for this Data Lake Pipeline. [Supported cloud provider regions](https://www.mongodb.com/docs/datalake/limitations).
	Region *string `pulumi:"region"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type *string `pulumi:"type"`
}

// DataLakePipelineSinkInput is an input type that accepts DataLakePipelineSinkArgs and DataLakePipelineSinkOutput values.
// You can construct a concrete instance of `DataLakePipelineSinkInput` via:
//
//	DataLakePipelineSinkArgs{...}
type DataLakePipelineSinkInput interface {
	pulumi.Input

	ToDataLakePipelineSinkOutput() DataLakePipelineSinkOutput
	ToDataLakePipelineSinkOutputWithContext(context.Context) DataLakePipelineSinkOutput
}

type DataLakePipelineSinkArgs struct {
	// Ordered fields used to physically organize data in the destination.
	// * `partition_fields.#.field_name` - Human-readable label that identifies the field name used to partition data.
	// * `partition_fields.#.order` - Sequence in which MongoDB Atlas slices the collection data to create partitions. The resource expresses this sequence starting with zero.
	PartitionFields DataLakePipelineSinkPartitionFieldArrayInput `pulumi:"partitionFields"`
	// Target cloud provider for this Data Lake Pipeline.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
	// Target cloud provider region for this Data Lake Pipeline. [Supported cloud provider regions](https://www.mongodb.com/docs/datalake/limitations).
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DataLakePipelineSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakePipelineSink)(nil)).Elem()
}

func (i DataLakePipelineSinkArgs) ToDataLakePipelineSinkOutput() DataLakePipelineSinkOutput {
	return i.ToDataLakePipelineSinkOutputWithContext(context.Background())
}

func (i DataLakePipelineSinkArgs) ToDataLakePipelineSinkOutputWithContext(ctx context.Context) DataLakePipelineSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakePipelineSinkOutput)
}

func (i DataLakePipelineSinkArgs) ToOutput(ctx context.Context) pulumix.Output[DataLakePipelineSink] {
	return pulumix.Output[DataLakePipelineSink]{
		OutputState: i.ToDataLakePipelineSinkOutputWithContext(ctx).OutputState,
	}
}

func (i DataLakePipelineSinkArgs) ToDataLakePipelineSinkPtrOutput() DataLakePipelineSinkPtrOutput {
	return i.ToDataLakePipelineSinkPtrOutputWithContext(context.Background())
}

func (i DataLakePipelineSinkArgs) ToDataLakePipelineSinkPtrOutputWithContext(ctx context.Context) DataLakePipelineSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakePipelineSinkOutput).ToDataLakePipelineSinkPtrOutputWithContext(ctx)
}

// DataLakePipelineSinkPtrInput is an input type that accepts DataLakePipelineSinkArgs, DataLakePipelineSinkPtr and DataLakePipelineSinkPtrOutput values.
// You can construct a concrete instance of `DataLakePipelineSinkPtrInput` via:
//
//	        DataLakePipelineSinkArgs{...}
//
//	or:
//
//	        nil
type DataLakePipelineSinkPtrInput interface {
	pulumi.Input

	ToDataLakePipelineSinkPtrOutput() DataLakePipelineSinkPtrOutput
	ToDataLakePipelineSinkPtrOutputWithContext(context.Context) DataLakePipelineSinkPtrOutput
}

type dataLakePipelineSinkPtrType DataLakePipelineSinkArgs

func DataLakePipelineSinkPtr(v *DataLakePipelineSinkArgs) DataLakePipelineSinkPtrInput {
	return (*dataLakePipelineSinkPtrType)(v)
}

func (*dataLakePipelineSinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakePipelineSink)(nil)).Elem()
}

func (i *dataLakePipelineSinkPtrType) ToDataLakePipelineSinkPtrOutput() DataLakePipelineSinkPtrOutput {
	return i.ToDataLakePipelineSinkPtrOutputWithContext(context.Background())
}

func (i *dataLakePipelineSinkPtrType) ToDataLakePipelineSinkPtrOutputWithContext(ctx context.Context) DataLakePipelineSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakePipelineSinkPtrOutput)
}

func (i *dataLakePipelineSinkPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataLakePipelineSink] {
	return pulumix.Output[*DataLakePipelineSink]{
		OutputState: i.ToDataLakePipelineSinkPtrOutputWithContext(ctx).OutputState,
	}
}

type DataLakePipelineSinkOutput struct{ *pulumi.OutputState }

func (DataLakePipelineSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakePipelineSink)(nil)).Elem()
}

func (o DataLakePipelineSinkOutput) ToDataLakePipelineSinkOutput() DataLakePipelineSinkOutput {
	return o
}

func (o DataLakePipelineSinkOutput) ToDataLakePipelineSinkOutputWithContext(ctx context.Context) DataLakePipelineSinkOutput {
	return o
}

func (o DataLakePipelineSinkOutput) ToDataLakePipelineSinkPtrOutput() DataLakePipelineSinkPtrOutput {
	return o.ToDataLakePipelineSinkPtrOutputWithContext(context.Background())
}

func (o DataLakePipelineSinkOutput) ToDataLakePipelineSinkPtrOutputWithContext(ctx context.Context) DataLakePipelineSinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakePipelineSink) *DataLakePipelineSink {
		return &v
	}).(DataLakePipelineSinkPtrOutput)
}

func (o DataLakePipelineSinkOutput) ToOutput(ctx context.Context) pulumix.Output[DataLakePipelineSink] {
	return pulumix.Output[DataLakePipelineSink]{
		OutputState: o.OutputState,
	}
}

// Ordered fields used to physically organize data in the destination.
// * `partition_fields.#.field_name` - Human-readable label that identifies the field name used to partition data.
// * `partition_fields.#.order` - Sequence in which MongoDB Atlas slices the collection data to create partitions. The resource expresses this sequence starting with zero.
func (o DataLakePipelineSinkOutput) PartitionFields() DataLakePipelineSinkPartitionFieldArrayOutput {
	return o.ApplyT(func(v DataLakePipelineSink) []DataLakePipelineSinkPartitionField { return v.PartitionFields }).(DataLakePipelineSinkPartitionFieldArrayOutput)
}

// Target cloud provider for this Data Lake Pipeline.
func (o DataLakePipelineSinkOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSink) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

// Target cloud provider region for this Data Lake Pipeline. [Supported cloud provider regions](https://www.mongodb.com/docs/datalake/limitations).
func (o DataLakePipelineSinkOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSink) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Type of ingestion source of this Data Lake Pipeline.
func (o DataLakePipelineSinkOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSink) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DataLakePipelineSinkPtrOutput struct{ *pulumi.OutputState }

func (DataLakePipelineSinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakePipelineSink)(nil)).Elem()
}

func (o DataLakePipelineSinkPtrOutput) ToDataLakePipelineSinkPtrOutput() DataLakePipelineSinkPtrOutput {
	return o
}

func (o DataLakePipelineSinkPtrOutput) ToDataLakePipelineSinkPtrOutputWithContext(ctx context.Context) DataLakePipelineSinkPtrOutput {
	return o
}

func (o DataLakePipelineSinkPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataLakePipelineSink] {
	return pulumix.Output[*DataLakePipelineSink]{
		OutputState: o.OutputState,
	}
}

func (o DataLakePipelineSinkPtrOutput) Elem() DataLakePipelineSinkOutput {
	return o.ApplyT(func(v *DataLakePipelineSink) DataLakePipelineSink {
		if v != nil {
			return *v
		}
		var ret DataLakePipelineSink
		return ret
	}).(DataLakePipelineSinkOutput)
}

// Ordered fields used to physically organize data in the destination.
// * `partition_fields.#.field_name` - Human-readable label that identifies the field name used to partition data.
// * `partition_fields.#.order` - Sequence in which MongoDB Atlas slices the collection data to create partitions. The resource expresses this sequence starting with zero.
func (o DataLakePipelineSinkPtrOutput) PartitionFields() DataLakePipelineSinkPartitionFieldArrayOutput {
	return o.ApplyT(func(v *DataLakePipelineSink) []DataLakePipelineSinkPartitionField {
		if v == nil {
			return nil
		}
		return v.PartitionFields
	}).(DataLakePipelineSinkPartitionFieldArrayOutput)
}

// Target cloud provider for this Data Lake Pipeline.
func (o DataLakePipelineSinkPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakePipelineSink) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

// Target cloud provider region for this Data Lake Pipeline. [Supported cloud provider regions](https://www.mongodb.com/docs/datalake/limitations).
func (o DataLakePipelineSinkPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakePipelineSink) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Type of ingestion source of this Data Lake Pipeline.
func (o DataLakePipelineSinkPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakePipelineSink) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type DataLakePipelineSinkPartitionField struct {
	FieldName string `pulumi:"fieldName"`
	Order     int    `pulumi:"order"`
}

// DataLakePipelineSinkPartitionFieldInput is an input type that accepts DataLakePipelineSinkPartitionFieldArgs and DataLakePipelineSinkPartitionFieldOutput values.
// You can construct a concrete instance of `DataLakePipelineSinkPartitionFieldInput` via:
//
//	DataLakePipelineSinkPartitionFieldArgs{...}
type DataLakePipelineSinkPartitionFieldInput interface {
	pulumi.Input

	ToDataLakePipelineSinkPartitionFieldOutput() DataLakePipelineSinkPartitionFieldOutput
	ToDataLakePipelineSinkPartitionFieldOutputWithContext(context.Context) DataLakePipelineSinkPartitionFieldOutput
}

type DataLakePipelineSinkPartitionFieldArgs struct {
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	Order     pulumi.IntInput    `pulumi:"order"`
}

func (DataLakePipelineSinkPartitionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakePipelineSinkPartitionField)(nil)).Elem()
}

func (i DataLakePipelineSinkPartitionFieldArgs) ToDataLakePipelineSinkPartitionFieldOutput() DataLakePipelineSinkPartitionFieldOutput {
	return i.ToDataLakePipelineSinkPartitionFieldOutputWithContext(context.Background())
}

func (i DataLakePipelineSinkPartitionFieldArgs) ToDataLakePipelineSinkPartitionFieldOutputWithContext(ctx context.Context) DataLakePipelineSinkPartitionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakePipelineSinkPartitionFieldOutput)
}

func (i DataLakePipelineSinkPartitionFieldArgs) ToOutput(ctx context.Context) pulumix.Output[DataLakePipelineSinkPartitionField] {
	return pulumix.Output[DataLakePipelineSinkPartitionField]{
		OutputState: i.ToDataLakePipelineSinkPartitionFieldOutputWithContext(ctx).OutputState,
	}
}

// DataLakePipelineSinkPartitionFieldArrayInput is an input type that accepts DataLakePipelineSinkPartitionFieldArray and DataLakePipelineSinkPartitionFieldArrayOutput values.
// You can construct a concrete instance of `DataLakePipelineSinkPartitionFieldArrayInput` via:
//
//	DataLakePipelineSinkPartitionFieldArray{ DataLakePipelineSinkPartitionFieldArgs{...} }
type DataLakePipelineSinkPartitionFieldArrayInput interface {
	pulumi.Input

	ToDataLakePipelineSinkPartitionFieldArrayOutput() DataLakePipelineSinkPartitionFieldArrayOutput
	ToDataLakePipelineSinkPartitionFieldArrayOutputWithContext(context.Context) DataLakePipelineSinkPartitionFieldArrayOutput
}

type DataLakePipelineSinkPartitionFieldArray []DataLakePipelineSinkPartitionFieldInput

func (DataLakePipelineSinkPartitionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakePipelineSinkPartitionField)(nil)).Elem()
}

func (i DataLakePipelineSinkPartitionFieldArray) ToDataLakePipelineSinkPartitionFieldArrayOutput() DataLakePipelineSinkPartitionFieldArrayOutput {
	return i.ToDataLakePipelineSinkPartitionFieldArrayOutputWithContext(context.Background())
}

func (i DataLakePipelineSinkPartitionFieldArray) ToDataLakePipelineSinkPartitionFieldArrayOutputWithContext(ctx context.Context) DataLakePipelineSinkPartitionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakePipelineSinkPartitionFieldArrayOutput)
}

func (i DataLakePipelineSinkPartitionFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]DataLakePipelineSinkPartitionField] {
	return pulumix.Output[[]DataLakePipelineSinkPartitionField]{
		OutputState: i.ToDataLakePipelineSinkPartitionFieldArrayOutputWithContext(ctx).OutputState,
	}
}

type DataLakePipelineSinkPartitionFieldOutput struct{ *pulumi.OutputState }

func (DataLakePipelineSinkPartitionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakePipelineSinkPartitionField)(nil)).Elem()
}

func (o DataLakePipelineSinkPartitionFieldOutput) ToDataLakePipelineSinkPartitionFieldOutput() DataLakePipelineSinkPartitionFieldOutput {
	return o
}

func (o DataLakePipelineSinkPartitionFieldOutput) ToDataLakePipelineSinkPartitionFieldOutputWithContext(ctx context.Context) DataLakePipelineSinkPartitionFieldOutput {
	return o
}

func (o DataLakePipelineSinkPartitionFieldOutput) ToOutput(ctx context.Context) pulumix.Output[DataLakePipelineSinkPartitionField] {
	return pulumix.Output[DataLakePipelineSinkPartitionField]{
		OutputState: o.OutputState,
	}
}

func (o DataLakePipelineSinkPartitionFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakePipelineSinkPartitionField) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o DataLakePipelineSinkPartitionFieldOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DataLakePipelineSinkPartitionField) int { return v.Order }).(pulumi.IntOutput)
}

type DataLakePipelineSinkPartitionFieldArrayOutput struct{ *pulumi.OutputState }

func (DataLakePipelineSinkPartitionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakePipelineSinkPartitionField)(nil)).Elem()
}

func (o DataLakePipelineSinkPartitionFieldArrayOutput) ToDataLakePipelineSinkPartitionFieldArrayOutput() DataLakePipelineSinkPartitionFieldArrayOutput {
	return o
}

func (o DataLakePipelineSinkPartitionFieldArrayOutput) ToDataLakePipelineSinkPartitionFieldArrayOutputWithContext(ctx context.Context) DataLakePipelineSinkPartitionFieldArrayOutput {
	return o
}

func (o DataLakePipelineSinkPartitionFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DataLakePipelineSinkPartitionField] {
	return pulumix.Output[[]DataLakePipelineSinkPartitionField]{
		OutputState: o.OutputState,
	}
}

func (o DataLakePipelineSinkPartitionFieldArrayOutput) Index(i pulumi.IntInput) DataLakePipelineSinkPartitionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakePipelineSinkPartitionField {
		return vs[0].([]DataLakePipelineSinkPartitionField)[vs[1].(int)]
	}).(DataLakePipelineSinkPartitionFieldOutput)
}

type DataLakePipelineSnapshot struct {
	CopyRegion    *string `pulumi:"copyRegion"`
	CreatedAt     *string `pulumi:"createdAt"`
	ExpiresAt     *string `pulumi:"expiresAt"`
	FrequencyYype *string `pulumi:"frequencyYype"`
	// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
	Id            *string  `pulumi:"id"`
	MasterKey     *string  `pulumi:"masterKey"`
	MongodVersion *string  `pulumi:"mongodVersion"`
	Policies      []string `pulumi:"policies"`
	// Target cloud provider for this Data Lake Pipeline.
	Provider       *string `pulumi:"provider"`
	ReplicaSetName *string `pulumi:"replicaSetName"`
	Size           *int    `pulumi:"size"`
	SnapshotType   *string `pulumi:"snapshotType"`
	Status         *string `pulumi:"status"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type *string `pulumi:"type"`
}

// DataLakePipelineSnapshotInput is an input type that accepts DataLakePipelineSnapshotArgs and DataLakePipelineSnapshotOutput values.
// You can construct a concrete instance of `DataLakePipelineSnapshotInput` via:
//
//	DataLakePipelineSnapshotArgs{...}
type DataLakePipelineSnapshotInput interface {
	pulumi.Input

	ToDataLakePipelineSnapshotOutput() DataLakePipelineSnapshotOutput
	ToDataLakePipelineSnapshotOutputWithContext(context.Context) DataLakePipelineSnapshotOutput
}

type DataLakePipelineSnapshotArgs struct {
	CopyRegion    pulumi.StringPtrInput `pulumi:"copyRegion"`
	CreatedAt     pulumi.StringPtrInput `pulumi:"createdAt"`
	ExpiresAt     pulumi.StringPtrInput `pulumi:"expiresAt"`
	FrequencyYype pulumi.StringPtrInput `pulumi:"frequencyYype"`
	// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
	Id            pulumi.StringPtrInput   `pulumi:"id"`
	MasterKey     pulumi.StringPtrInput   `pulumi:"masterKey"`
	MongodVersion pulumi.StringPtrInput   `pulumi:"mongodVersion"`
	Policies      pulumi.StringArrayInput `pulumi:"policies"`
	// Target cloud provider for this Data Lake Pipeline.
	Provider       pulumi.StringPtrInput `pulumi:"provider"`
	ReplicaSetName pulumi.StringPtrInput `pulumi:"replicaSetName"`
	Size           pulumi.IntPtrInput    `pulumi:"size"`
	SnapshotType   pulumi.StringPtrInput `pulumi:"snapshotType"`
	Status         pulumi.StringPtrInput `pulumi:"status"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DataLakePipelineSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakePipelineSnapshot)(nil)).Elem()
}

func (i DataLakePipelineSnapshotArgs) ToDataLakePipelineSnapshotOutput() DataLakePipelineSnapshotOutput {
	return i.ToDataLakePipelineSnapshotOutputWithContext(context.Background())
}

func (i DataLakePipelineSnapshotArgs) ToDataLakePipelineSnapshotOutputWithContext(ctx context.Context) DataLakePipelineSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakePipelineSnapshotOutput)
}

func (i DataLakePipelineSnapshotArgs) ToOutput(ctx context.Context) pulumix.Output[DataLakePipelineSnapshot] {
	return pulumix.Output[DataLakePipelineSnapshot]{
		OutputState: i.ToDataLakePipelineSnapshotOutputWithContext(ctx).OutputState,
	}
}

// DataLakePipelineSnapshotArrayInput is an input type that accepts DataLakePipelineSnapshotArray and DataLakePipelineSnapshotArrayOutput values.
// You can construct a concrete instance of `DataLakePipelineSnapshotArrayInput` via:
//
//	DataLakePipelineSnapshotArray{ DataLakePipelineSnapshotArgs{...} }
type DataLakePipelineSnapshotArrayInput interface {
	pulumi.Input

	ToDataLakePipelineSnapshotArrayOutput() DataLakePipelineSnapshotArrayOutput
	ToDataLakePipelineSnapshotArrayOutputWithContext(context.Context) DataLakePipelineSnapshotArrayOutput
}

type DataLakePipelineSnapshotArray []DataLakePipelineSnapshotInput

func (DataLakePipelineSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakePipelineSnapshot)(nil)).Elem()
}

func (i DataLakePipelineSnapshotArray) ToDataLakePipelineSnapshotArrayOutput() DataLakePipelineSnapshotArrayOutput {
	return i.ToDataLakePipelineSnapshotArrayOutputWithContext(context.Background())
}

func (i DataLakePipelineSnapshotArray) ToDataLakePipelineSnapshotArrayOutputWithContext(ctx context.Context) DataLakePipelineSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakePipelineSnapshotArrayOutput)
}

func (i DataLakePipelineSnapshotArray) ToOutput(ctx context.Context) pulumix.Output[[]DataLakePipelineSnapshot] {
	return pulumix.Output[[]DataLakePipelineSnapshot]{
		OutputState: i.ToDataLakePipelineSnapshotArrayOutputWithContext(ctx).OutputState,
	}
}

type DataLakePipelineSnapshotOutput struct{ *pulumi.OutputState }

func (DataLakePipelineSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakePipelineSnapshot)(nil)).Elem()
}

func (o DataLakePipelineSnapshotOutput) ToDataLakePipelineSnapshotOutput() DataLakePipelineSnapshotOutput {
	return o
}

func (o DataLakePipelineSnapshotOutput) ToDataLakePipelineSnapshotOutputWithContext(ctx context.Context) DataLakePipelineSnapshotOutput {
	return o
}

func (o DataLakePipelineSnapshotOutput) ToOutput(ctx context.Context) pulumix.Output[DataLakePipelineSnapshot] {
	return pulumix.Output[DataLakePipelineSnapshot]{
		OutputState: o.OutputState,
	}
}

func (o DataLakePipelineSnapshotOutput) CopyRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSnapshot) *string { return v.CopyRegion }).(pulumi.StringPtrOutput)
}

func (o DataLakePipelineSnapshotOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSnapshot) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o DataLakePipelineSnapshotOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSnapshot) *string { return v.ExpiresAt }).(pulumi.StringPtrOutput)
}

func (o DataLakePipelineSnapshotOutput) FrequencyYype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSnapshot) *string { return v.FrequencyYype }).(pulumi.StringPtrOutput)
}

// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
func (o DataLakePipelineSnapshotOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSnapshot) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DataLakePipelineSnapshotOutput) MasterKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSnapshot) *string { return v.MasterKey }).(pulumi.StringPtrOutput)
}

func (o DataLakePipelineSnapshotOutput) MongodVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSnapshot) *string { return v.MongodVersion }).(pulumi.StringPtrOutput)
}

func (o DataLakePipelineSnapshotOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataLakePipelineSnapshot) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Target cloud provider for this Data Lake Pipeline.
func (o DataLakePipelineSnapshotOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSnapshot) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

func (o DataLakePipelineSnapshotOutput) ReplicaSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSnapshot) *string { return v.ReplicaSetName }).(pulumi.StringPtrOutput)
}

func (o DataLakePipelineSnapshotOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSnapshot) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o DataLakePipelineSnapshotOutput) SnapshotType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSnapshot) *string { return v.SnapshotType }).(pulumi.StringPtrOutput)
}

func (o DataLakePipelineSnapshotOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSnapshot) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Type of ingestion source of this Data Lake Pipeline.
func (o DataLakePipelineSnapshotOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSnapshot) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DataLakePipelineSnapshotArrayOutput struct{ *pulumi.OutputState }

func (DataLakePipelineSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakePipelineSnapshot)(nil)).Elem()
}

func (o DataLakePipelineSnapshotArrayOutput) ToDataLakePipelineSnapshotArrayOutput() DataLakePipelineSnapshotArrayOutput {
	return o
}

func (o DataLakePipelineSnapshotArrayOutput) ToDataLakePipelineSnapshotArrayOutputWithContext(ctx context.Context) DataLakePipelineSnapshotArrayOutput {
	return o
}

func (o DataLakePipelineSnapshotArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DataLakePipelineSnapshot] {
	return pulumix.Output[[]DataLakePipelineSnapshot]{
		OutputState: o.OutputState,
	}
}

func (o DataLakePipelineSnapshotArrayOutput) Index(i pulumi.IntInput) DataLakePipelineSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakePipelineSnapshot {
		return vs[0].([]DataLakePipelineSnapshot)[vs[1].(int)]
	}).(DataLakePipelineSnapshotOutput)
}

type DataLakePipelineSource struct {
	// Human-readable name that identifies the cluster.
	ClusterName *string `pulumi:"clusterName"`
	// Human-readable name that identifies the collection.
	CollectionName *string `pulumi:"collectionName"`
	// Human-readable name that identifies the database.
	DatabaseName *string `pulumi:"databaseName"`
	PolicyItemId *string `pulumi:"policyItemId"`
	// The unique ID for the project to create a data lake pipeline.
	ProjectId *string `pulumi:"projectId"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type *string `pulumi:"type"`
}

// DataLakePipelineSourceInput is an input type that accepts DataLakePipelineSourceArgs and DataLakePipelineSourceOutput values.
// You can construct a concrete instance of `DataLakePipelineSourceInput` via:
//
//	DataLakePipelineSourceArgs{...}
type DataLakePipelineSourceInput interface {
	pulumi.Input

	ToDataLakePipelineSourceOutput() DataLakePipelineSourceOutput
	ToDataLakePipelineSourceOutputWithContext(context.Context) DataLakePipelineSourceOutput
}

type DataLakePipelineSourceArgs struct {
	// Human-readable name that identifies the cluster.
	ClusterName pulumi.StringPtrInput `pulumi:"clusterName"`
	// Human-readable name that identifies the collection.
	CollectionName pulumi.StringPtrInput `pulumi:"collectionName"`
	// Human-readable name that identifies the database.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	PolicyItemId pulumi.StringPtrInput `pulumi:"policyItemId"`
	// The unique ID for the project to create a data lake pipeline.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DataLakePipelineSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakePipelineSource)(nil)).Elem()
}

func (i DataLakePipelineSourceArgs) ToDataLakePipelineSourceOutput() DataLakePipelineSourceOutput {
	return i.ToDataLakePipelineSourceOutputWithContext(context.Background())
}

func (i DataLakePipelineSourceArgs) ToDataLakePipelineSourceOutputWithContext(ctx context.Context) DataLakePipelineSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakePipelineSourceOutput)
}

func (i DataLakePipelineSourceArgs) ToOutput(ctx context.Context) pulumix.Output[DataLakePipelineSource] {
	return pulumix.Output[DataLakePipelineSource]{
		OutputState: i.ToDataLakePipelineSourceOutputWithContext(ctx).OutputState,
	}
}

func (i DataLakePipelineSourceArgs) ToDataLakePipelineSourcePtrOutput() DataLakePipelineSourcePtrOutput {
	return i.ToDataLakePipelineSourcePtrOutputWithContext(context.Background())
}

func (i DataLakePipelineSourceArgs) ToDataLakePipelineSourcePtrOutputWithContext(ctx context.Context) DataLakePipelineSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakePipelineSourceOutput).ToDataLakePipelineSourcePtrOutputWithContext(ctx)
}

// DataLakePipelineSourcePtrInput is an input type that accepts DataLakePipelineSourceArgs, DataLakePipelineSourcePtr and DataLakePipelineSourcePtrOutput values.
// You can construct a concrete instance of `DataLakePipelineSourcePtrInput` via:
//
//	        DataLakePipelineSourceArgs{...}
//
//	or:
//
//	        nil
type DataLakePipelineSourcePtrInput interface {
	pulumi.Input

	ToDataLakePipelineSourcePtrOutput() DataLakePipelineSourcePtrOutput
	ToDataLakePipelineSourcePtrOutputWithContext(context.Context) DataLakePipelineSourcePtrOutput
}

type dataLakePipelineSourcePtrType DataLakePipelineSourceArgs

func DataLakePipelineSourcePtr(v *DataLakePipelineSourceArgs) DataLakePipelineSourcePtrInput {
	return (*dataLakePipelineSourcePtrType)(v)
}

func (*dataLakePipelineSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakePipelineSource)(nil)).Elem()
}

func (i *dataLakePipelineSourcePtrType) ToDataLakePipelineSourcePtrOutput() DataLakePipelineSourcePtrOutput {
	return i.ToDataLakePipelineSourcePtrOutputWithContext(context.Background())
}

func (i *dataLakePipelineSourcePtrType) ToDataLakePipelineSourcePtrOutputWithContext(ctx context.Context) DataLakePipelineSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakePipelineSourcePtrOutput)
}

func (i *dataLakePipelineSourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*DataLakePipelineSource] {
	return pulumix.Output[*DataLakePipelineSource]{
		OutputState: i.ToDataLakePipelineSourcePtrOutputWithContext(ctx).OutputState,
	}
}

type DataLakePipelineSourceOutput struct{ *pulumi.OutputState }

func (DataLakePipelineSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakePipelineSource)(nil)).Elem()
}

func (o DataLakePipelineSourceOutput) ToDataLakePipelineSourceOutput() DataLakePipelineSourceOutput {
	return o
}

func (o DataLakePipelineSourceOutput) ToDataLakePipelineSourceOutputWithContext(ctx context.Context) DataLakePipelineSourceOutput {
	return o
}

func (o DataLakePipelineSourceOutput) ToDataLakePipelineSourcePtrOutput() DataLakePipelineSourcePtrOutput {
	return o.ToDataLakePipelineSourcePtrOutputWithContext(context.Background())
}

func (o DataLakePipelineSourceOutput) ToDataLakePipelineSourcePtrOutputWithContext(ctx context.Context) DataLakePipelineSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakePipelineSource) *DataLakePipelineSource {
		return &v
	}).(DataLakePipelineSourcePtrOutput)
}

func (o DataLakePipelineSourceOutput) ToOutput(ctx context.Context) pulumix.Output[DataLakePipelineSource] {
	return pulumix.Output[DataLakePipelineSource]{
		OutputState: o.OutputState,
	}
}

// Human-readable name that identifies the cluster.
func (o DataLakePipelineSourceOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSource) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

// Human-readable name that identifies the collection.
func (o DataLakePipelineSourceOutput) CollectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSource) *string { return v.CollectionName }).(pulumi.StringPtrOutput)
}

// Human-readable name that identifies the database.
func (o DataLakePipelineSourceOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSource) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o DataLakePipelineSourceOutput) PolicyItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSource) *string { return v.PolicyItemId }).(pulumi.StringPtrOutput)
}

// The unique ID for the project to create a data lake pipeline.
func (o DataLakePipelineSourceOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSource) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Type of ingestion source of this Data Lake Pipeline.
func (o DataLakePipelineSourceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineSource) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DataLakePipelineSourcePtrOutput struct{ *pulumi.OutputState }

func (DataLakePipelineSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakePipelineSource)(nil)).Elem()
}

func (o DataLakePipelineSourcePtrOutput) ToDataLakePipelineSourcePtrOutput() DataLakePipelineSourcePtrOutput {
	return o
}

func (o DataLakePipelineSourcePtrOutput) ToDataLakePipelineSourcePtrOutputWithContext(ctx context.Context) DataLakePipelineSourcePtrOutput {
	return o
}

func (o DataLakePipelineSourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataLakePipelineSource] {
	return pulumix.Output[*DataLakePipelineSource]{
		OutputState: o.OutputState,
	}
}

func (o DataLakePipelineSourcePtrOutput) Elem() DataLakePipelineSourceOutput {
	return o.ApplyT(func(v *DataLakePipelineSource) DataLakePipelineSource {
		if v != nil {
			return *v
		}
		var ret DataLakePipelineSource
		return ret
	}).(DataLakePipelineSourceOutput)
}

// Human-readable name that identifies the cluster.
func (o DataLakePipelineSourcePtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakePipelineSource) *string {
		if v == nil {
			return nil
		}
		return v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// Human-readable name that identifies the collection.
func (o DataLakePipelineSourcePtrOutput) CollectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakePipelineSource) *string {
		if v == nil {
			return nil
		}
		return v.CollectionName
	}).(pulumi.StringPtrOutput)
}

// Human-readable name that identifies the database.
func (o DataLakePipelineSourcePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakePipelineSource) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o DataLakePipelineSourcePtrOutput) PolicyItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakePipelineSource) *string {
		if v == nil {
			return nil
		}
		return v.PolicyItemId
	}).(pulumi.StringPtrOutput)
}

// The unique ID for the project to create a data lake pipeline.
func (o DataLakePipelineSourcePtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakePipelineSource) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Type of ingestion source of this Data Lake Pipeline.
func (o DataLakePipelineSourcePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakePipelineSource) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type DataLakePipelineTransformation struct {
	Field *string `pulumi:"field"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type *string `pulumi:"type"`
}

// DataLakePipelineTransformationInput is an input type that accepts DataLakePipelineTransformationArgs and DataLakePipelineTransformationOutput values.
// You can construct a concrete instance of `DataLakePipelineTransformationInput` via:
//
//	DataLakePipelineTransformationArgs{...}
type DataLakePipelineTransformationInput interface {
	pulumi.Input

	ToDataLakePipelineTransformationOutput() DataLakePipelineTransformationOutput
	ToDataLakePipelineTransformationOutputWithContext(context.Context) DataLakePipelineTransformationOutput
}

type DataLakePipelineTransformationArgs struct {
	Field pulumi.StringPtrInput `pulumi:"field"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DataLakePipelineTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakePipelineTransformation)(nil)).Elem()
}

func (i DataLakePipelineTransformationArgs) ToDataLakePipelineTransformationOutput() DataLakePipelineTransformationOutput {
	return i.ToDataLakePipelineTransformationOutputWithContext(context.Background())
}

func (i DataLakePipelineTransformationArgs) ToDataLakePipelineTransformationOutputWithContext(ctx context.Context) DataLakePipelineTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakePipelineTransformationOutput)
}

func (i DataLakePipelineTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[DataLakePipelineTransformation] {
	return pulumix.Output[DataLakePipelineTransformation]{
		OutputState: i.ToDataLakePipelineTransformationOutputWithContext(ctx).OutputState,
	}
}

// DataLakePipelineTransformationArrayInput is an input type that accepts DataLakePipelineTransformationArray and DataLakePipelineTransformationArrayOutput values.
// You can construct a concrete instance of `DataLakePipelineTransformationArrayInput` via:
//
//	DataLakePipelineTransformationArray{ DataLakePipelineTransformationArgs{...} }
type DataLakePipelineTransformationArrayInput interface {
	pulumi.Input

	ToDataLakePipelineTransformationArrayOutput() DataLakePipelineTransformationArrayOutput
	ToDataLakePipelineTransformationArrayOutputWithContext(context.Context) DataLakePipelineTransformationArrayOutput
}

type DataLakePipelineTransformationArray []DataLakePipelineTransformationInput

func (DataLakePipelineTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakePipelineTransformation)(nil)).Elem()
}

func (i DataLakePipelineTransformationArray) ToDataLakePipelineTransformationArrayOutput() DataLakePipelineTransformationArrayOutput {
	return i.ToDataLakePipelineTransformationArrayOutputWithContext(context.Background())
}

func (i DataLakePipelineTransformationArray) ToDataLakePipelineTransformationArrayOutputWithContext(ctx context.Context) DataLakePipelineTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakePipelineTransformationArrayOutput)
}

func (i DataLakePipelineTransformationArray) ToOutput(ctx context.Context) pulumix.Output[[]DataLakePipelineTransformation] {
	return pulumix.Output[[]DataLakePipelineTransformation]{
		OutputState: i.ToDataLakePipelineTransformationArrayOutputWithContext(ctx).OutputState,
	}
}

type DataLakePipelineTransformationOutput struct{ *pulumi.OutputState }

func (DataLakePipelineTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakePipelineTransformation)(nil)).Elem()
}

func (o DataLakePipelineTransformationOutput) ToDataLakePipelineTransformationOutput() DataLakePipelineTransformationOutput {
	return o
}

func (o DataLakePipelineTransformationOutput) ToDataLakePipelineTransformationOutputWithContext(ctx context.Context) DataLakePipelineTransformationOutput {
	return o
}

func (o DataLakePipelineTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[DataLakePipelineTransformation] {
	return pulumix.Output[DataLakePipelineTransformation]{
		OutputState: o.OutputState,
	}
}

func (o DataLakePipelineTransformationOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineTransformation) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// Type of ingestion source of this Data Lake Pipeline.
func (o DataLakePipelineTransformationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakePipelineTransformation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DataLakePipelineTransformationArrayOutput struct{ *pulumi.OutputState }

func (DataLakePipelineTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakePipelineTransformation)(nil)).Elem()
}

func (o DataLakePipelineTransformationArrayOutput) ToDataLakePipelineTransformationArrayOutput() DataLakePipelineTransformationArrayOutput {
	return o
}

func (o DataLakePipelineTransformationArrayOutput) ToDataLakePipelineTransformationArrayOutputWithContext(ctx context.Context) DataLakePipelineTransformationArrayOutput {
	return o
}

func (o DataLakePipelineTransformationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DataLakePipelineTransformation] {
	return pulumix.Output[[]DataLakePipelineTransformation]{
		OutputState: o.OutputState,
	}
}

func (o DataLakePipelineTransformationArrayOutput) Index(i pulumi.IntInput) DataLakePipelineTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakePipelineTransformation {
		return vs[0].([]DataLakePipelineTransformation)[vs[1].(int)]
	}).(DataLakePipelineTransformationOutput)
}

type DataLakeStorageDatabase struct {
	Collections            []DataLakeStorageDatabaseCollection `pulumi:"collections"`
	MaxWildcardCollections *int                                `pulumi:"maxWildcardCollections"`
	// Name of the Atlas Data Lake.
	Name  *string                       `pulumi:"name"`
	Views []DataLakeStorageDatabaseView `pulumi:"views"`
}

// DataLakeStorageDatabaseInput is an input type that accepts DataLakeStorageDatabaseArgs and DataLakeStorageDatabaseOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseInput` via:
//
//	DataLakeStorageDatabaseArgs{...}
type DataLakeStorageDatabaseInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseOutput() DataLakeStorageDatabaseOutput
	ToDataLakeStorageDatabaseOutputWithContext(context.Context) DataLakeStorageDatabaseOutput
}

type DataLakeStorageDatabaseArgs struct {
	Collections            DataLakeStorageDatabaseCollectionArrayInput `pulumi:"collections"`
	MaxWildcardCollections pulumi.IntPtrInput                          `pulumi:"maxWildcardCollections"`
	// Name of the Atlas Data Lake.
	Name  pulumi.StringPtrInput                 `pulumi:"name"`
	Views DataLakeStorageDatabaseViewArrayInput `pulumi:"views"`
}

func (DataLakeStorageDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabase)(nil)).Elem()
}

func (i DataLakeStorageDatabaseArgs) ToDataLakeStorageDatabaseOutput() DataLakeStorageDatabaseOutput {
	return i.ToDataLakeStorageDatabaseOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseArgs) ToDataLakeStorageDatabaseOutputWithContext(ctx context.Context) DataLakeStorageDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseOutput)
}

func (i DataLakeStorageDatabaseArgs) ToOutput(ctx context.Context) pulumix.Output[DataLakeStorageDatabase] {
	return pulumix.Output[DataLakeStorageDatabase]{
		OutputState: i.ToDataLakeStorageDatabaseOutputWithContext(ctx).OutputState,
	}
}

// DataLakeStorageDatabaseArrayInput is an input type that accepts DataLakeStorageDatabaseArray and DataLakeStorageDatabaseArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseArrayInput` via:
//
//	DataLakeStorageDatabaseArray{ DataLakeStorageDatabaseArgs{...} }
type DataLakeStorageDatabaseArrayInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseArrayOutput() DataLakeStorageDatabaseArrayOutput
	ToDataLakeStorageDatabaseArrayOutputWithContext(context.Context) DataLakeStorageDatabaseArrayOutput
}

type DataLakeStorageDatabaseArray []DataLakeStorageDatabaseInput

func (DataLakeStorageDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabase)(nil)).Elem()
}

func (i DataLakeStorageDatabaseArray) ToDataLakeStorageDatabaseArrayOutput() DataLakeStorageDatabaseArrayOutput {
	return i.ToDataLakeStorageDatabaseArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseArray) ToDataLakeStorageDatabaseArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseArrayOutput)
}

func (i DataLakeStorageDatabaseArray) ToOutput(ctx context.Context) pulumix.Output[[]DataLakeStorageDatabase] {
	return pulumix.Output[[]DataLakeStorageDatabase]{
		OutputState: i.ToDataLakeStorageDatabaseArrayOutputWithContext(ctx).OutputState,
	}
}

type DataLakeStorageDatabaseOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabase)(nil)).Elem()
}

func (o DataLakeStorageDatabaseOutput) ToDataLakeStorageDatabaseOutput() DataLakeStorageDatabaseOutput {
	return o
}

func (o DataLakeStorageDatabaseOutput) ToDataLakeStorageDatabaseOutputWithContext(ctx context.Context) DataLakeStorageDatabaseOutput {
	return o
}

func (o DataLakeStorageDatabaseOutput) ToOutput(ctx context.Context) pulumix.Output[DataLakeStorageDatabase] {
	return pulumix.Output[DataLakeStorageDatabase]{
		OutputState: o.OutputState,
	}
}

func (o DataLakeStorageDatabaseOutput) Collections() DataLakeStorageDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v DataLakeStorageDatabase) []DataLakeStorageDatabaseCollection { return v.Collections }).(DataLakeStorageDatabaseCollectionArrayOutput)
}

func (o DataLakeStorageDatabaseOutput) MaxWildcardCollections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabase) *int { return v.MaxWildcardCollections }).(pulumi.IntPtrOutput)
}

// Name of the Atlas Data Lake.
func (o DataLakeStorageDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseOutput) Views() DataLakeStorageDatabaseViewArrayOutput {
	return o.ApplyT(func(v DataLakeStorageDatabase) []DataLakeStorageDatabaseView { return v.Views }).(DataLakeStorageDatabaseViewArrayOutput)
}

type DataLakeStorageDatabaseArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabase)(nil)).Elem()
}

func (o DataLakeStorageDatabaseArrayOutput) ToDataLakeStorageDatabaseArrayOutput() DataLakeStorageDatabaseArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseArrayOutput) ToDataLakeStorageDatabaseArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DataLakeStorageDatabase] {
	return pulumix.Output[[]DataLakeStorageDatabase]{
		OutputState: o.OutputState,
	}
}

func (o DataLakeStorageDatabaseArrayOutput) Index(i pulumi.IntInput) DataLakeStorageDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageDatabase {
		return vs[0].([]DataLakeStorageDatabase)[vs[1].(int)]
	}).(DataLakeStorageDatabaseOutput)
}

type DataLakeStorageDatabaseCollection struct {
	DataSources []DataLakeStorageDatabaseCollectionDataSource `pulumi:"dataSources"`
	// Name of the Atlas Data Lake.
	Name *string `pulumi:"name"`
}

// DataLakeStorageDatabaseCollectionInput is an input type that accepts DataLakeStorageDatabaseCollectionArgs and DataLakeStorageDatabaseCollectionOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseCollectionInput` via:
//
//	DataLakeStorageDatabaseCollectionArgs{...}
type DataLakeStorageDatabaseCollectionInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseCollectionOutput() DataLakeStorageDatabaseCollectionOutput
	ToDataLakeStorageDatabaseCollectionOutputWithContext(context.Context) DataLakeStorageDatabaseCollectionOutput
}

type DataLakeStorageDatabaseCollectionArgs struct {
	DataSources DataLakeStorageDatabaseCollectionDataSourceArrayInput `pulumi:"dataSources"`
	// Name of the Atlas Data Lake.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DataLakeStorageDatabaseCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (i DataLakeStorageDatabaseCollectionArgs) ToDataLakeStorageDatabaseCollectionOutput() DataLakeStorageDatabaseCollectionOutput {
	return i.ToDataLakeStorageDatabaseCollectionOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseCollectionArgs) ToDataLakeStorageDatabaseCollectionOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseCollectionOutput)
}

func (i DataLakeStorageDatabaseCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[DataLakeStorageDatabaseCollection] {
	return pulumix.Output[DataLakeStorageDatabaseCollection]{
		OutputState: i.ToDataLakeStorageDatabaseCollectionOutputWithContext(ctx).OutputState,
	}
}

// DataLakeStorageDatabaseCollectionArrayInput is an input type that accepts DataLakeStorageDatabaseCollectionArray and DataLakeStorageDatabaseCollectionArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseCollectionArrayInput` via:
//
//	DataLakeStorageDatabaseCollectionArray{ DataLakeStorageDatabaseCollectionArgs{...} }
type DataLakeStorageDatabaseCollectionArrayInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseCollectionArrayOutput() DataLakeStorageDatabaseCollectionArrayOutput
	ToDataLakeStorageDatabaseCollectionArrayOutputWithContext(context.Context) DataLakeStorageDatabaseCollectionArrayOutput
}

type DataLakeStorageDatabaseCollectionArray []DataLakeStorageDatabaseCollectionInput

func (DataLakeStorageDatabaseCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (i DataLakeStorageDatabaseCollectionArray) ToDataLakeStorageDatabaseCollectionArrayOutput() DataLakeStorageDatabaseCollectionArrayOutput {
	return i.ToDataLakeStorageDatabaseCollectionArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseCollectionArray) ToDataLakeStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseCollectionArrayOutput)
}

func (i DataLakeStorageDatabaseCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]DataLakeStorageDatabaseCollection] {
	return pulumix.Output[[]DataLakeStorageDatabaseCollection]{
		OutputState: i.ToDataLakeStorageDatabaseCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type DataLakeStorageDatabaseCollectionOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (o DataLakeStorageDatabaseCollectionOutput) ToDataLakeStorageDatabaseCollectionOutput() DataLakeStorageDatabaseCollectionOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionOutput) ToDataLakeStorageDatabaseCollectionOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[DataLakeStorageDatabaseCollection] {
	return pulumix.Output[DataLakeStorageDatabaseCollection]{
		OutputState: o.OutputState,
	}
}

func (o DataLakeStorageDatabaseCollectionOutput) DataSources() DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollection) []DataLakeStorageDatabaseCollectionDataSource {
		return v.DataSources
	}).(DataLakeStorageDatabaseCollectionDataSourceArrayOutput)
}

// Name of the Atlas Data Lake.
func (o DataLakeStorageDatabaseCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DataLakeStorageDatabaseCollectionArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (o DataLakeStorageDatabaseCollectionArrayOutput) ToDataLakeStorageDatabaseCollectionArrayOutput() DataLakeStorageDatabaseCollectionArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionArrayOutput) ToDataLakeStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DataLakeStorageDatabaseCollection] {
	return pulumix.Output[[]DataLakeStorageDatabaseCollection]{
		OutputState: o.OutputState,
	}
}

func (o DataLakeStorageDatabaseCollectionArrayOutput) Index(i pulumi.IntInput) DataLakeStorageDatabaseCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageDatabaseCollection {
		return vs[0].([]DataLakeStorageDatabaseCollection)[vs[1].(int)]
	}).(DataLakeStorageDatabaseCollectionOutput)
}

type DataLakeStorageDatabaseCollectionDataSource struct {
	DefaultFormat *string `pulumi:"defaultFormat"`
	Path          *string `pulumi:"path"`
	StoreName     *string `pulumi:"storeName"`
}

// DataLakeStorageDatabaseCollectionDataSourceInput is an input type that accepts DataLakeStorageDatabaseCollectionDataSourceArgs and DataLakeStorageDatabaseCollectionDataSourceOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseCollectionDataSourceInput` via:
//
//	DataLakeStorageDatabaseCollectionDataSourceArgs{...}
type DataLakeStorageDatabaseCollectionDataSourceInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseCollectionDataSourceOutput() DataLakeStorageDatabaseCollectionDataSourceOutput
	ToDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(context.Context) DataLakeStorageDatabaseCollectionDataSourceOutput
}

type DataLakeStorageDatabaseCollectionDataSourceArgs struct {
	DefaultFormat pulumi.StringPtrInput `pulumi:"defaultFormat"`
	Path          pulumi.StringPtrInput `pulumi:"path"`
	StoreName     pulumi.StringPtrInput `pulumi:"storeName"`
}

func (DataLakeStorageDatabaseCollectionDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i DataLakeStorageDatabaseCollectionDataSourceArgs) ToDataLakeStorageDatabaseCollectionDataSourceOutput() DataLakeStorageDatabaseCollectionDataSourceOutput {
	return i.ToDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseCollectionDataSourceArgs) ToDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseCollectionDataSourceOutput)
}

func (i DataLakeStorageDatabaseCollectionDataSourceArgs) ToOutput(ctx context.Context) pulumix.Output[DataLakeStorageDatabaseCollectionDataSource] {
	return pulumix.Output[DataLakeStorageDatabaseCollectionDataSource]{
		OutputState: i.ToDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(ctx).OutputState,
	}
}

// DataLakeStorageDatabaseCollectionDataSourceArrayInput is an input type that accepts DataLakeStorageDatabaseCollectionDataSourceArray and DataLakeStorageDatabaseCollectionDataSourceArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseCollectionDataSourceArrayInput` via:
//
//	DataLakeStorageDatabaseCollectionDataSourceArray{ DataLakeStorageDatabaseCollectionDataSourceArgs{...} }
type DataLakeStorageDatabaseCollectionDataSourceArrayInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseCollectionDataSourceArrayOutput() DataLakeStorageDatabaseCollectionDataSourceArrayOutput
	ToDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Context) DataLakeStorageDatabaseCollectionDataSourceArrayOutput
}

type DataLakeStorageDatabaseCollectionDataSourceArray []DataLakeStorageDatabaseCollectionDataSourceInput

func (DataLakeStorageDatabaseCollectionDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i DataLakeStorageDatabaseCollectionDataSourceArray) ToDataLakeStorageDatabaseCollectionDataSourceArrayOutput() DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return i.ToDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseCollectionDataSourceArray) ToDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseCollectionDataSourceArrayOutput)
}

func (i DataLakeStorageDatabaseCollectionDataSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]DataLakeStorageDatabaseCollectionDataSource] {
	return pulumix.Output[[]DataLakeStorageDatabaseCollectionDataSource]{
		OutputState: i.ToDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type DataLakeStorageDatabaseCollectionDataSourceOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseCollectionDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) ToDataLakeStorageDatabaseCollectionDataSourceOutput() DataLakeStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) ToDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) ToOutput(ctx context.Context) pulumix.Output[DataLakeStorageDatabaseCollectionDataSource] {
	return pulumix.Output[DataLakeStorageDatabaseCollectionDataSource]{
		OutputState: o.OutputState,
	}
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) DefaultFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollectionDataSource) *string { return v.DefaultFormat }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollectionDataSource) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) StoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollectionDataSource) *string { return v.StoreName }).(pulumi.StringPtrOutput)
}

type DataLakeStorageDatabaseCollectionDataSourceArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseCollectionDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o DataLakeStorageDatabaseCollectionDataSourceArrayOutput) ToDataLakeStorageDatabaseCollectionDataSourceArrayOutput() DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionDataSourceArrayOutput) ToDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionDataSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DataLakeStorageDatabaseCollectionDataSource] {
	return pulumix.Output[[]DataLakeStorageDatabaseCollectionDataSource]{
		OutputState: o.OutputState,
	}
}

func (o DataLakeStorageDatabaseCollectionDataSourceArrayOutput) Index(i pulumi.IntInput) DataLakeStorageDatabaseCollectionDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageDatabaseCollectionDataSource {
		return vs[0].([]DataLakeStorageDatabaseCollectionDataSource)[vs[1].(int)]
	}).(DataLakeStorageDatabaseCollectionDataSourceOutput)
}

type DataLakeStorageDatabaseView struct {
	// Name of the Atlas Data Lake.
	Name     *string `pulumi:"name"`
	Pipeline *string `pulumi:"pipeline"`
	Source   *string `pulumi:"source"`
}

// DataLakeStorageDatabaseViewInput is an input type that accepts DataLakeStorageDatabaseViewArgs and DataLakeStorageDatabaseViewOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseViewInput` via:
//
//	DataLakeStorageDatabaseViewArgs{...}
type DataLakeStorageDatabaseViewInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseViewOutput() DataLakeStorageDatabaseViewOutput
	ToDataLakeStorageDatabaseViewOutputWithContext(context.Context) DataLakeStorageDatabaseViewOutput
}

type DataLakeStorageDatabaseViewArgs struct {
	// Name of the Atlas Data Lake.
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Pipeline pulumi.StringPtrInput `pulumi:"pipeline"`
	Source   pulumi.StringPtrInput `pulumi:"source"`
}

func (DataLakeStorageDatabaseViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseView)(nil)).Elem()
}

func (i DataLakeStorageDatabaseViewArgs) ToDataLakeStorageDatabaseViewOutput() DataLakeStorageDatabaseViewOutput {
	return i.ToDataLakeStorageDatabaseViewOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseViewArgs) ToDataLakeStorageDatabaseViewOutputWithContext(ctx context.Context) DataLakeStorageDatabaseViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseViewOutput)
}

func (i DataLakeStorageDatabaseViewArgs) ToOutput(ctx context.Context) pulumix.Output[DataLakeStorageDatabaseView] {
	return pulumix.Output[DataLakeStorageDatabaseView]{
		OutputState: i.ToDataLakeStorageDatabaseViewOutputWithContext(ctx).OutputState,
	}
}

// DataLakeStorageDatabaseViewArrayInput is an input type that accepts DataLakeStorageDatabaseViewArray and DataLakeStorageDatabaseViewArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseViewArrayInput` via:
//
//	DataLakeStorageDatabaseViewArray{ DataLakeStorageDatabaseViewArgs{...} }
type DataLakeStorageDatabaseViewArrayInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseViewArrayOutput() DataLakeStorageDatabaseViewArrayOutput
	ToDataLakeStorageDatabaseViewArrayOutputWithContext(context.Context) DataLakeStorageDatabaseViewArrayOutput
}

type DataLakeStorageDatabaseViewArray []DataLakeStorageDatabaseViewInput

func (DataLakeStorageDatabaseViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseView)(nil)).Elem()
}

func (i DataLakeStorageDatabaseViewArray) ToDataLakeStorageDatabaseViewArrayOutput() DataLakeStorageDatabaseViewArrayOutput {
	return i.ToDataLakeStorageDatabaseViewArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseViewArray) ToDataLakeStorageDatabaseViewArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseViewArrayOutput)
}

func (i DataLakeStorageDatabaseViewArray) ToOutput(ctx context.Context) pulumix.Output[[]DataLakeStorageDatabaseView] {
	return pulumix.Output[[]DataLakeStorageDatabaseView]{
		OutputState: i.ToDataLakeStorageDatabaseViewArrayOutputWithContext(ctx).OutputState,
	}
}

type DataLakeStorageDatabaseViewOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseView)(nil)).Elem()
}

func (o DataLakeStorageDatabaseViewOutput) ToDataLakeStorageDatabaseViewOutput() DataLakeStorageDatabaseViewOutput {
	return o
}

func (o DataLakeStorageDatabaseViewOutput) ToDataLakeStorageDatabaseViewOutputWithContext(ctx context.Context) DataLakeStorageDatabaseViewOutput {
	return o
}

func (o DataLakeStorageDatabaseViewOutput) ToOutput(ctx context.Context) pulumix.Output[DataLakeStorageDatabaseView] {
	return pulumix.Output[DataLakeStorageDatabaseView]{
		OutputState: o.OutputState,
	}
}

// Name of the Atlas Data Lake.
func (o DataLakeStorageDatabaseViewOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseView) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseViewOutput) Pipeline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseView) *string { return v.Pipeline }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseViewOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseView) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type DataLakeStorageDatabaseViewArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseView)(nil)).Elem()
}

func (o DataLakeStorageDatabaseViewArrayOutput) ToDataLakeStorageDatabaseViewArrayOutput() DataLakeStorageDatabaseViewArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseViewArrayOutput) ToDataLakeStorageDatabaseViewArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseViewArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseViewArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DataLakeStorageDatabaseView] {
	return pulumix.Output[[]DataLakeStorageDatabaseView]{
		OutputState: o.OutputState,
	}
}

func (o DataLakeStorageDatabaseViewArrayOutput) Index(i pulumi.IntInput) DataLakeStorageDatabaseViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageDatabaseView {
		return vs[0].([]DataLakeStorageDatabaseView)[vs[1].(int)]
	}).(DataLakeStorageDatabaseViewOutput)
}

type DataLakeStorageStore struct {
	AdditionalStorageClasses []string `pulumi:"additionalStorageClasses"`
	Bucket                   *string  `pulumi:"bucket"`
	Delimiter                *string  `pulumi:"delimiter"`
	IncludeTags              *bool    `pulumi:"includeTags"`
	// Name of the Atlas Data Lake.
	Name     *string `pulumi:"name"`
	Prefix   *string `pulumi:"prefix"`
	Provider *string `pulumi:"provider"`
	Region   *string `pulumi:"region"`
}

// DataLakeStorageStoreInput is an input type that accepts DataLakeStorageStoreArgs and DataLakeStorageStoreOutput values.
// You can construct a concrete instance of `DataLakeStorageStoreInput` via:
//
//	DataLakeStorageStoreArgs{...}
type DataLakeStorageStoreInput interface {
	pulumi.Input

	ToDataLakeStorageStoreOutput() DataLakeStorageStoreOutput
	ToDataLakeStorageStoreOutputWithContext(context.Context) DataLakeStorageStoreOutput
}

type DataLakeStorageStoreArgs struct {
	AdditionalStorageClasses pulumi.StringArrayInput `pulumi:"additionalStorageClasses"`
	Bucket                   pulumi.StringPtrInput   `pulumi:"bucket"`
	Delimiter                pulumi.StringPtrInput   `pulumi:"delimiter"`
	IncludeTags              pulumi.BoolPtrInput     `pulumi:"includeTags"`
	// Name of the Atlas Data Lake.
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Prefix   pulumi.StringPtrInput `pulumi:"prefix"`
	Provider pulumi.StringPtrInput `pulumi:"provider"`
	Region   pulumi.StringPtrInput `pulumi:"region"`
}

func (DataLakeStorageStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageStore)(nil)).Elem()
}

func (i DataLakeStorageStoreArgs) ToDataLakeStorageStoreOutput() DataLakeStorageStoreOutput {
	return i.ToDataLakeStorageStoreOutputWithContext(context.Background())
}

func (i DataLakeStorageStoreArgs) ToDataLakeStorageStoreOutputWithContext(ctx context.Context) DataLakeStorageStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageStoreOutput)
}

func (i DataLakeStorageStoreArgs) ToOutput(ctx context.Context) pulumix.Output[DataLakeStorageStore] {
	return pulumix.Output[DataLakeStorageStore]{
		OutputState: i.ToDataLakeStorageStoreOutputWithContext(ctx).OutputState,
	}
}

// DataLakeStorageStoreArrayInput is an input type that accepts DataLakeStorageStoreArray and DataLakeStorageStoreArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageStoreArrayInput` via:
//
//	DataLakeStorageStoreArray{ DataLakeStorageStoreArgs{...} }
type DataLakeStorageStoreArrayInput interface {
	pulumi.Input

	ToDataLakeStorageStoreArrayOutput() DataLakeStorageStoreArrayOutput
	ToDataLakeStorageStoreArrayOutputWithContext(context.Context) DataLakeStorageStoreArrayOutput
}

type DataLakeStorageStoreArray []DataLakeStorageStoreInput

func (DataLakeStorageStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageStore)(nil)).Elem()
}

func (i DataLakeStorageStoreArray) ToDataLakeStorageStoreArrayOutput() DataLakeStorageStoreArrayOutput {
	return i.ToDataLakeStorageStoreArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageStoreArray) ToDataLakeStorageStoreArrayOutputWithContext(ctx context.Context) DataLakeStorageStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageStoreArrayOutput)
}

func (i DataLakeStorageStoreArray) ToOutput(ctx context.Context) pulumix.Output[[]DataLakeStorageStore] {
	return pulumix.Output[[]DataLakeStorageStore]{
		OutputState: i.ToDataLakeStorageStoreArrayOutputWithContext(ctx).OutputState,
	}
}

type DataLakeStorageStoreOutput struct{ *pulumi.OutputState }

func (DataLakeStorageStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageStore)(nil)).Elem()
}

func (o DataLakeStorageStoreOutput) ToDataLakeStorageStoreOutput() DataLakeStorageStoreOutput {
	return o
}

func (o DataLakeStorageStoreOutput) ToDataLakeStorageStoreOutputWithContext(ctx context.Context) DataLakeStorageStoreOutput {
	return o
}

func (o DataLakeStorageStoreOutput) ToOutput(ctx context.Context) pulumix.Output[DataLakeStorageStore] {
	return pulumix.Output[DataLakeStorageStore]{
		OutputState: o.OutputState,
	}
}

func (o DataLakeStorageStoreOutput) AdditionalStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataLakeStorageStore) []string { return v.AdditionalStorageClasses }).(pulumi.StringArrayOutput)
}

func (o DataLakeStorageStoreOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) IncludeTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *bool { return v.IncludeTags }).(pulumi.BoolPtrOutput)
}

// Name of the Atlas Data Lake.
func (o DataLakeStorageStoreOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type DataLakeStorageStoreArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageStore)(nil)).Elem()
}

func (o DataLakeStorageStoreArrayOutput) ToDataLakeStorageStoreArrayOutput() DataLakeStorageStoreArrayOutput {
	return o
}

func (o DataLakeStorageStoreArrayOutput) ToDataLakeStorageStoreArrayOutputWithContext(ctx context.Context) DataLakeStorageStoreArrayOutput {
	return o
}

func (o DataLakeStorageStoreArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DataLakeStorageStore] {
	return pulumix.Output[[]DataLakeStorageStore]{
		OutputState: o.OutputState,
	}
}

func (o DataLakeStorageStoreArrayOutput) Index(i pulumi.IntInput) DataLakeStorageStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageStore {
		return vs[0].([]DataLakeStorageStore)[vs[1].(int)]
	}).(DataLakeStorageStoreOutput)
}

type DatabaseUserLabel struct {
	// The key that you want to write.
	Key *string `pulumi:"key"`
	// The value that you want to write.
	Value *string `pulumi:"value"`
}

// DatabaseUserLabelInput is an input type that accepts DatabaseUserLabelArgs and DatabaseUserLabelOutput values.
// You can construct a concrete instance of `DatabaseUserLabelInput` via:
//
//	DatabaseUserLabelArgs{...}
type DatabaseUserLabelInput interface {
	pulumi.Input

	ToDatabaseUserLabelOutput() DatabaseUserLabelOutput
	ToDatabaseUserLabelOutputWithContext(context.Context) DatabaseUserLabelOutput
}

type DatabaseUserLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DatabaseUserLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserLabel)(nil)).Elem()
}

func (i DatabaseUserLabelArgs) ToDatabaseUserLabelOutput() DatabaseUserLabelOutput {
	return i.ToDatabaseUserLabelOutputWithContext(context.Background())
}

func (i DatabaseUserLabelArgs) ToDatabaseUserLabelOutputWithContext(ctx context.Context) DatabaseUserLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserLabelOutput)
}

func (i DatabaseUserLabelArgs) ToOutput(ctx context.Context) pulumix.Output[DatabaseUserLabel] {
	return pulumix.Output[DatabaseUserLabel]{
		OutputState: i.ToDatabaseUserLabelOutputWithContext(ctx).OutputState,
	}
}

// DatabaseUserLabelArrayInput is an input type that accepts DatabaseUserLabelArray and DatabaseUserLabelArrayOutput values.
// You can construct a concrete instance of `DatabaseUserLabelArrayInput` via:
//
//	DatabaseUserLabelArray{ DatabaseUserLabelArgs{...} }
type DatabaseUserLabelArrayInput interface {
	pulumi.Input

	ToDatabaseUserLabelArrayOutput() DatabaseUserLabelArrayOutput
	ToDatabaseUserLabelArrayOutputWithContext(context.Context) DatabaseUserLabelArrayOutput
}

type DatabaseUserLabelArray []DatabaseUserLabelInput

func (DatabaseUserLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserLabel)(nil)).Elem()
}

func (i DatabaseUserLabelArray) ToDatabaseUserLabelArrayOutput() DatabaseUserLabelArrayOutput {
	return i.ToDatabaseUserLabelArrayOutputWithContext(context.Background())
}

func (i DatabaseUserLabelArray) ToDatabaseUserLabelArrayOutputWithContext(ctx context.Context) DatabaseUserLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserLabelArrayOutput)
}

func (i DatabaseUserLabelArray) ToOutput(ctx context.Context) pulumix.Output[[]DatabaseUserLabel] {
	return pulumix.Output[[]DatabaseUserLabel]{
		OutputState: i.ToDatabaseUserLabelArrayOutputWithContext(ctx).OutputState,
	}
}

type DatabaseUserLabelOutput struct{ *pulumi.OutputState }

func (DatabaseUserLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserLabel)(nil)).Elem()
}

func (o DatabaseUserLabelOutput) ToDatabaseUserLabelOutput() DatabaseUserLabelOutput {
	return o
}

func (o DatabaseUserLabelOutput) ToDatabaseUserLabelOutputWithContext(ctx context.Context) DatabaseUserLabelOutput {
	return o
}

func (o DatabaseUserLabelOutput) ToOutput(ctx context.Context) pulumix.Output[DatabaseUserLabel] {
	return pulumix.Output[DatabaseUserLabel]{
		OutputState: o.OutputState,
	}
}

// The key that you want to write.
func (o DatabaseUserLabelOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserLabel) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value that you want to write.
func (o DatabaseUserLabelOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserLabel) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DatabaseUserLabelArrayOutput struct{ *pulumi.OutputState }

func (DatabaseUserLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserLabel)(nil)).Elem()
}

func (o DatabaseUserLabelArrayOutput) ToDatabaseUserLabelArrayOutput() DatabaseUserLabelArrayOutput {
	return o
}

func (o DatabaseUserLabelArrayOutput) ToDatabaseUserLabelArrayOutputWithContext(ctx context.Context) DatabaseUserLabelArrayOutput {
	return o
}

func (o DatabaseUserLabelArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DatabaseUserLabel] {
	return pulumix.Output[[]DatabaseUserLabel]{
		OutputState: o.OutputState,
	}
}

func (o DatabaseUserLabelArrayOutput) Index(i pulumi.IntInput) DatabaseUserLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseUserLabel {
		return vs[0].([]DatabaseUserLabel)[vs[1].(int)]
	}).(DatabaseUserLabelOutput)
}

type DatabaseUserRole struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName *string `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName *string `pulumi:"databaseName"`
	// Name of the role to grant. See [Create a Database User](https://docs.atlas.mongodb.com/reference/api/database-users-create-a-user/) `roles.roleName` for valid values and restrictions.
	RoleName *string `pulumi:"roleName"`
}

// DatabaseUserRoleInput is an input type that accepts DatabaseUserRoleArgs and DatabaseUserRoleOutput values.
// You can construct a concrete instance of `DatabaseUserRoleInput` via:
//
//	DatabaseUserRoleArgs{...}
type DatabaseUserRoleInput interface {
	pulumi.Input

	ToDatabaseUserRoleOutput() DatabaseUserRoleOutput
	ToDatabaseUserRoleOutputWithContext(context.Context) DatabaseUserRoleOutput
}

type DatabaseUserRoleArgs struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName pulumi.StringPtrInput `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Name of the role to grant. See [Create a Database User](https://docs.atlas.mongodb.com/reference/api/database-users-create-a-user/) `roles.roleName` for valid values and restrictions.
	RoleName pulumi.StringPtrInput `pulumi:"roleName"`
}

func (DatabaseUserRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserRole)(nil)).Elem()
}

func (i DatabaseUserRoleArgs) ToDatabaseUserRoleOutput() DatabaseUserRoleOutput {
	return i.ToDatabaseUserRoleOutputWithContext(context.Background())
}

func (i DatabaseUserRoleArgs) ToDatabaseUserRoleOutputWithContext(ctx context.Context) DatabaseUserRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserRoleOutput)
}

func (i DatabaseUserRoleArgs) ToOutput(ctx context.Context) pulumix.Output[DatabaseUserRole] {
	return pulumix.Output[DatabaseUserRole]{
		OutputState: i.ToDatabaseUserRoleOutputWithContext(ctx).OutputState,
	}
}

// DatabaseUserRoleArrayInput is an input type that accepts DatabaseUserRoleArray and DatabaseUserRoleArrayOutput values.
// You can construct a concrete instance of `DatabaseUserRoleArrayInput` via:
//
//	DatabaseUserRoleArray{ DatabaseUserRoleArgs{...} }
type DatabaseUserRoleArrayInput interface {
	pulumi.Input

	ToDatabaseUserRoleArrayOutput() DatabaseUserRoleArrayOutput
	ToDatabaseUserRoleArrayOutputWithContext(context.Context) DatabaseUserRoleArrayOutput
}

type DatabaseUserRoleArray []DatabaseUserRoleInput

func (DatabaseUserRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserRole)(nil)).Elem()
}

func (i DatabaseUserRoleArray) ToDatabaseUserRoleArrayOutput() DatabaseUserRoleArrayOutput {
	return i.ToDatabaseUserRoleArrayOutputWithContext(context.Background())
}

func (i DatabaseUserRoleArray) ToDatabaseUserRoleArrayOutputWithContext(ctx context.Context) DatabaseUserRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserRoleArrayOutput)
}

func (i DatabaseUserRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]DatabaseUserRole] {
	return pulumix.Output[[]DatabaseUserRole]{
		OutputState: i.ToDatabaseUserRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type DatabaseUserRoleOutput struct{ *pulumi.OutputState }

func (DatabaseUserRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserRole)(nil)).Elem()
}

func (o DatabaseUserRoleOutput) ToDatabaseUserRoleOutput() DatabaseUserRoleOutput {
	return o
}

func (o DatabaseUserRoleOutput) ToDatabaseUserRoleOutputWithContext(ctx context.Context) DatabaseUserRoleOutput {
	return o
}

func (o DatabaseUserRoleOutput) ToOutput(ctx context.Context) pulumix.Output[DatabaseUserRole] {
	return pulumix.Output[DatabaseUserRole]{
		OutputState: o.OutputState,
	}
}

// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
func (o DatabaseUserRoleOutput) CollectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserRole) *string { return v.CollectionName }).(pulumi.StringPtrOutput)
}

// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
func (o DatabaseUserRoleOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserRole) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Name of the role to grant. See [Create a Database User](https://docs.atlas.mongodb.com/reference/api/database-users-create-a-user/) `roles.roleName` for valid values and restrictions.
func (o DatabaseUserRoleOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserRole) *string { return v.RoleName }).(pulumi.StringPtrOutput)
}

type DatabaseUserRoleArrayOutput struct{ *pulumi.OutputState }

func (DatabaseUserRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserRole)(nil)).Elem()
}

func (o DatabaseUserRoleArrayOutput) ToDatabaseUserRoleArrayOutput() DatabaseUserRoleArrayOutput {
	return o
}

func (o DatabaseUserRoleArrayOutput) ToDatabaseUserRoleArrayOutputWithContext(ctx context.Context) DatabaseUserRoleArrayOutput {
	return o
}

func (o DatabaseUserRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DatabaseUserRole] {
	return pulumix.Output[[]DatabaseUserRole]{
		OutputState: o.OutputState,
	}
}

func (o DatabaseUserRoleArrayOutput) Index(i pulumi.IntInput) DatabaseUserRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseUserRole {
		return vs[0].([]DatabaseUserRole)[vs[1].(int)]
	}).(DatabaseUserRoleOutput)
}

type DatabaseUserScope struct {
	// Name of the cluster or Atlas Data Lake that the user has access to.
	Name *string `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type *string `pulumi:"type"`
}

// DatabaseUserScopeInput is an input type that accepts DatabaseUserScopeArgs and DatabaseUserScopeOutput values.
// You can construct a concrete instance of `DatabaseUserScopeInput` via:
//
//	DatabaseUserScopeArgs{...}
type DatabaseUserScopeInput interface {
	pulumi.Input

	ToDatabaseUserScopeOutput() DatabaseUserScopeOutput
	ToDatabaseUserScopeOutputWithContext(context.Context) DatabaseUserScopeOutput
}

type DatabaseUserScopeArgs struct {
	// Name of the cluster or Atlas Data Lake that the user has access to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatabaseUserScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserScope)(nil)).Elem()
}

func (i DatabaseUserScopeArgs) ToDatabaseUserScopeOutput() DatabaseUserScopeOutput {
	return i.ToDatabaseUserScopeOutputWithContext(context.Background())
}

func (i DatabaseUserScopeArgs) ToDatabaseUserScopeOutputWithContext(ctx context.Context) DatabaseUserScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserScopeOutput)
}

func (i DatabaseUserScopeArgs) ToOutput(ctx context.Context) pulumix.Output[DatabaseUserScope] {
	return pulumix.Output[DatabaseUserScope]{
		OutputState: i.ToDatabaseUserScopeOutputWithContext(ctx).OutputState,
	}
}

// DatabaseUserScopeArrayInput is an input type that accepts DatabaseUserScopeArray and DatabaseUserScopeArrayOutput values.
// You can construct a concrete instance of `DatabaseUserScopeArrayInput` via:
//
//	DatabaseUserScopeArray{ DatabaseUserScopeArgs{...} }
type DatabaseUserScopeArrayInput interface {
	pulumi.Input

	ToDatabaseUserScopeArrayOutput() DatabaseUserScopeArrayOutput
	ToDatabaseUserScopeArrayOutputWithContext(context.Context) DatabaseUserScopeArrayOutput
}

type DatabaseUserScopeArray []DatabaseUserScopeInput

func (DatabaseUserScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserScope)(nil)).Elem()
}

func (i DatabaseUserScopeArray) ToDatabaseUserScopeArrayOutput() DatabaseUserScopeArrayOutput {
	return i.ToDatabaseUserScopeArrayOutputWithContext(context.Background())
}

func (i DatabaseUserScopeArray) ToDatabaseUserScopeArrayOutputWithContext(ctx context.Context) DatabaseUserScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserScopeArrayOutput)
}

func (i DatabaseUserScopeArray) ToOutput(ctx context.Context) pulumix.Output[[]DatabaseUserScope] {
	return pulumix.Output[[]DatabaseUserScope]{
		OutputState: i.ToDatabaseUserScopeArrayOutputWithContext(ctx).OutputState,
	}
}

type DatabaseUserScopeOutput struct{ *pulumi.OutputState }

func (DatabaseUserScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserScope)(nil)).Elem()
}

func (o DatabaseUserScopeOutput) ToDatabaseUserScopeOutput() DatabaseUserScopeOutput {
	return o
}

func (o DatabaseUserScopeOutput) ToDatabaseUserScopeOutputWithContext(ctx context.Context) DatabaseUserScopeOutput {
	return o
}

func (o DatabaseUserScopeOutput) ToOutput(ctx context.Context) pulumix.Output[DatabaseUserScope] {
	return pulumix.Output[DatabaseUserScope]{
		OutputState: o.OutputState,
	}
}

// Name of the cluster or Atlas Data Lake that the user has access to.
func (o DatabaseUserScopeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserScope) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
func (o DatabaseUserScopeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserScope) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatabaseUserScopeArrayOutput struct{ *pulumi.OutputState }

func (DatabaseUserScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserScope)(nil)).Elem()
}

func (o DatabaseUserScopeArrayOutput) ToDatabaseUserScopeArrayOutput() DatabaseUserScopeArrayOutput {
	return o
}

func (o DatabaseUserScopeArrayOutput) ToDatabaseUserScopeArrayOutputWithContext(ctx context.Context) DatabaseUserScopeArrayOutput {
	return o
}

func (o DatabaseUserScopeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DatabaseUserScope] {
	return pulumix.Output[[]DatabaseUserScope]{
		OutputState: o.OutputState,
	}
}

func (o DatabaseUserScopeArrayOutput) Index(i pulumi.IntInput) DatabaseUserScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseUserScope {
		return vs[0].([]DatabaseUserScope)[vs[1].(int)]
	}).(DatabaseUserScopeOutput)
}

type EncryptionAtRestAwsKmsConfig struct {
	AccessKeyId *string `pulumi:"accessKeyId"`
	// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
	CustomerMasterKeyId *string `pulumi:"customerMasterKeyId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project, To disable Encryption at Rest, pass only this parameter with a value of false, When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled *bool `pulumi:"enabled"`
	// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
	Region *string `pulumi:"region"`
	// ID of an AWS IAM role authorized to manage an AWS customer master key. To find the ID for an existing IAM role check the `roleId` attribute of the `CloudProviderAccess` resource.
	RoleId          *string `pulumi:"roleId"`
	SecretAccessKey *string `pulumi:"secretAccessKey"`
}

// EncryptionAtRestAwsKmsConfigInput is an input type that accepts EncryptionAtRestAwsKmsConfigArgs and EncryptionAtRestAwsKmsConfigOutput values.
// You can construct a concrete instance of `EncryptionAtRestAwsKmsConfigInput` via:
//
//	EncryptionAtRestAwsKmsConfigArgs{...}
type EncryptionAtRestAwsKmsConfigInput interface {
	pulumi.Input

	ToEncryptionAtRestAwsKmsConfigOutput() EncryptionAtRestAwsKmsConfigOutput
	ToEncryptionAtRestAwsKmsConfigOutputWithContext(context.Context) EncryptionAtRestAwsKmsConfigOutput
}

type EncryptionAtRestAwsKmsConfigArgs struct {
	AccessKeyId pulumi.StringPtrInput `pulumi:"accessKeyId"`
	// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
	CustomerMasterKeyId pulumi.StringPtrInput `pulumi:"customerMasterKeyId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project, To disable Encryption at Rest, pass only this parameter with a value of false, When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
	Region pulumi.StringPtrInput `pulumi:"region"`
	// ID of an AWS IAM role authorized to manage an AWS customer master key. To find the ID for an existing IAM role check the `roleId` attribute of the `CloudProviderAccess` resource.
	RoleId          pulumi.StringPtrInput `pulumi:"roleId"`
	SecretAccessKey pulumi.StringPtrInput `pulumi:"secretAccessKey"`
}

func (EncryptionAtRestAwsKmsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAwsKmsConfig)(nil)).Elem()
}

func (i EncryptionAtRestAwsKmsConfigArgs) ToEncryptionAtRestAwsKmsConfigOutput() EncryptionAtRestAwsKmsConfigOutput {
	return i.ToEncryptionAtRestAwsKmsConfigOutputWithContext(context.Background())
}

func (i EncryptionAtRestAwsKmsConfigArgs) ToEncryptionAtRestAwsKmsConfigOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAwsKmsConfigOutput)
}

func (i EncryptionAtRestAwsKmsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EncryptionAtRestAwsKmsConfig] {
	return pulumix.Output[EncryptionAtRestAwsKmsConfig]{
		OutputState: i.ToEncryptionAtRestAwsKmsConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EncryptionAtRestAwsKmsConfigArgs) ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput {
	return i.ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(context.Background())
}

func (i EncryptionAtRestAwsKmsConfigArgs) ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAwsKmsConfigOutput).ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx)
}

// EncryptionAtRestAwsKmsConfigPtrInput is an input type that accepts EncryptionAtRestAwsKmsConfigArgs, EncryptionAtRestAwsKmsConfigPtr and EncryptionAtRestAwsKmsConfigPtrOutput values.
// You can construct a concrete instance of `EncryptionAtRestAwsKmsConfigPtrInput` via:
//
//	        EncryptionAtRestAwsKmsConfigArgs{...}
//
//	or:
//
//	        nil
type EncryptionAtRestAwsKmsConfigPtrInput interface {
	pulumi.Input

	ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput
	ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(context.Context) EncryptionAtRestAwsKmsConfigPtrOutput
}

type encryptionAtRestAwsKmsConfigPtrType EncryptionAtRestAwsKmsConfigArgs

func EncryptionAtRestAwsKmsConfigPtr(v *EncryptionAtRestAwsKmsConfigArgs) EncryptionAtRestAwsKmsConfigPtrInput {
	return (*encryptionAtRestAwsKmsConfigPtrType)(v)
}

func (*encryptionAtRestAwsKmsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAwsKmsConfig)(nil)).Elem()
}

func (i *encryptionAtRestAwsKmsConfigPtrType) ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput {
	return i.ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(context.Background())
}

func (i *encryptionAtRestAwsKmsConfigPtrType) ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAwsKmsConfigPtrOutput)
}

func (i *encryptionAtRestAwsKmsConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EncryptionAtRestAwsKmsConfig] {
	return pulumix.Output[*EncryptionAtRestAwsKmsConfig]{
		OutputState: i.ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EncryptionAtRestAwsKmsConfigOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAwsKmsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAwsKmsConfig)(nil)).Elem()
}

func (o EncryptionAtRestAwsKmsConfigOutput) ToEncryptionAtRestAwsKmsConfigOutput() EncryptionAtRestAwsKmsConfigOutput {
	return o
}

func (o EncryptionAtRestAwsKmsConfigOutput) ToEncryptionAtRestAwsKmsConfigOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigOutput {
	return o
}

func (o EncryptionAtRestAwsKmsConfigOutput) ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput {
	return o.ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(context.Background())
}

func (o EncryptionAtRestAwsKmsConfigOutput) ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionAtRestAwsKmsConfig) *EncryptionAtRestAwsKmsConfig {
		return &v
	}).(EncryptionAtRestAwsKmsConfigPtrOutput)
}

func (o EncryptionAtRestAwsKmsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EncryptionAtRestAwsKmsConfig] {
	return pulumix.Output[EncryptionAtRestAwsKmsConfig]{
		OutputState: o.OutputState,
	}
}

func (o EncryptionAtRestAwsKmsConfigOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.AccessKeyId }).(pulumi.StringPtrOutput)
}

// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
func (o EncryptionAtRestAwsKmsConfigOutput) CustomerMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.CustomerMasterKeyId }).(pulumi.StringPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project, To disable Encryption at Rest, pass only this parameter with a value of false, When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAwsKmsConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
func (o EncryptionAtRestAwsKmsConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// ID of an AWS IAM role authorized to manage an AWS customer master key. To find the ID for an existing IAM role check the `roleId` attribute of the `CloudProviderAccess` resource.
func (o EncryptionAtRestAwsKmsConfigOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.RoleId }).(pulumi.StringPtrOutput)
}

func (o EncryptionAtRestAwsKmsConfigOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

type EncryptionAtRestAwsKmsConfigPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAwsKmsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAwsKmsConfig)(nil)).Elem()
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput {
	return o
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigPtrOutput {
	return o
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EncryptionAtRestAwsKmsConfig] {
	return pulumix.Output[*EncryptionAtRestAwsKmsConfig]{
		OutputState: o.OutputState,
	}
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) Elem() EncryptionAtRestAwsKmsConfigOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) EncryptionAtRestAwsKmsConfig {
		if v != nil {
			return *v
		}
		var ret EncryptionAtRestAwsKmsConfig
		return ret
	}).(EncryptionAtRestAwsKmsConfigOutput)
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
func (o EncryptionAtRestAwsKmsConfigPtrOutput) CustomerMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomerMasterKeyId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project, To disable Encryption at Rest, pass only this parameter with a value of false, When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAwsKmsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
func (o EncryptionAtRestAwsKmsConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// ID of an AWS IAM role authorized to manage an AWS customer master key. To find the ID for an existing IAM role check the `roleId` attribute of the `CloudProviderAccess` resource.
func (o EncryptionAtRestAwsKmsConfigPtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoleId
	}).(pulumi.StringPtrOutput)
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

type EncryptionAtRestAzureKeyVaultConfig struct {
	// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
	AzureEnvironment *string `pulumi:"azureEnvironment"`
	// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
	ClientId *string `pulumi:"clientId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled bool `pulumi:"enabled"`
	// The unique identifier of a key in an Azure Key Vault.
	KeyIdentifier *string `pulumi:"keyIdentifier"`
	// The name of an Azure Key Vault containing your key.
	KeyVaultName *string `pulumi:"keyVaultName"`
	// The name of the Azure Resource group that contains an Azure Key Vault.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
	Secret *string `pulumi:"secret"`
	// The unique identifier associated with an Azure subscription.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// The unique identifier for an Azure AD tenant within an Azure subscription.
	TenantId *string `pulumi:"tenantId"`
}

// EncryptionAtRestAzureKeyVaultConfigInput is an input type that accepts EncryptionAtRestAzureKeyVaultConfigArgs and EncryptionAtRestAzureKeyVaultConfigOutput values.
// You can construct a concrete instance of `EncryptionAtRestAzureKeyVaultConfigInput` via:
//
//	EncryptionAtRestAzureKeyVaultConfigArgs{...}
type EncryptionAtRestAzureKeyVaultConfigInput interface {
	pulumi.Input

	ToEncryptionAtRestAzureKeyVaultConfigOutput() EncryptionAtRestAzureKeyVaultConfigOutput
	ToEncryptionAtRestAzureKeyVaultConfigOutputWithContext(context.Context) EncryptionAtRestAzureKeyVaultConfigOutput
}

type EncryptionAtRestAzureKeyVaultConfigArgs struct {
	// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
	AzureEnvironment pulumi.StringPtrInput `pulumi:"azureEnvironment"`
	// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The unique identifier of a key in an Azure Key Vault.
	KeyIdentifier pulumi.StringPtrInput `pulumi:"keyIdentifier"`
	// The name of an Azure Key Vault containing your key.
	KeyVaultName pulumi.StringPtrInput `pulumi:"keyVaultName"`
	// The name of the Azure Resource group that contains an Azure Key Vault.
	ResourceGroupName pulumi.StringPtrInput `pulumi:"resourceGroupName"`
	// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
	// The unique identifier associated with an Azure subscription.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// The unique identifier for an Azure AD tenant within an Azure subscription.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (EncryptionAtRestAzureKeyVaultConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAzureKeyVaultConfig)(nil)).Elem()
}

func (i EncryptionAtRestAzureKeyVaultConfigArgs) ToEncryptionAtRestAzureKeyVaultConfigOutput() EncryptionAtRestAzureKeyVaultConfigOutput {
	return i.ToEncryptionAtRestAzureKeyVaultConfigOutputWithContext(context.Background())
}

func (i EncryptionAtRestAzureKeyVaultConfigArgs) ToEncryptionAtRestAzureKeyVaultConfigOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAzureKeyVaultConfigOutput)
}

func (i EncryptionAtRestAzureKeyVaultConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EncryptionAtRestAzureKeyVaultConfig] {
	return pulumix.Output[EncryptionAtRestAzureKeyVaultConfig]{
		OutputState: i.ToEncryptionAtRestAzureKeyVaultConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EncryptionAtRestAzureKeyVaultConfigArgs) ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return i.ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(context.Background())
}

func (i EncryptionAtRestAzureKeyVaultConfigArgs) ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAzureKeyVaultConfigOutput).ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx)
}

// EncryptionAtRestAzureKeyVaultConfigPtrInput is an input type that accepts EncryptionAtRestAzureKeyVaultConfigArgs, EncryptionAtRestAzureKeyVaultConfigPtr and EncryptionAtRestAzureKeyVaultConfigPtrOutput values.
// You can construct a concrete instance of `EncryptionAtRestAzureKeyVaultConfigPtrInput` via:
//
//	        EncryptionAtRestAzureKeyVaultConfigArgs{...}
//
//	or:
//
//	        nil
type EncryptionAtRestAzureKeyVaultConfigPtrInput interface {
	pulumi.Input

	ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput
	ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput
}

type encryptionAtRestAzureKeyVaultConfigPtrType EncryptionAtRestAzureKeyVaultConfigArgs

func EncryptionAtRestAzureKeyVaultConfigPtr(v *EncryptionAtRestAzureKeyVaultConfigArgs) EncryptionAtRestAzureKeyVaultConfigPtrInput {
	return (*encryptionAtRestAzureKeyVaultConfigPtrType)(v)
}

func (*encryptionAtRestAzureKeyVaultConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAzureKeyVaultConfig)(nil)).Elem()
}

func (i *encryptionAtRestAzureKeyVaultConfigPtrType) ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return i.ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(context.Background())
}

func (i *encryptionAtRestAzureKeyVaultConfigPtrType) ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAzureKeyVaultConfigPtrOutput)
}

func (i *encryptionAtRestAzureKeyVaultConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EncryptionAtRestAzureKeyVaultConfig] {
	return pulumix.Output[*EncryptionAtRestAzureKeyVaultConfig]{
		OutputState: i.ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EncryptionAtRestAzureKeyVaultConfigOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAzureKeyVaultConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAzureKeyVaultConfig)(nil)).Elem()
}

func (o EncryptionAtRestAzureKeyVaultConfigOutput) ToEncryptionAtRestAzureKeyVaultConfigOutput() EncryptionAtRestAzureKeyVaultConfigOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultConfigOutput) ToEncryptionAtRestAzureKeyVaultConfigOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultConfigOutput) ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return o.ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(context.Background())
}

func (o EncryptionAtRestAzureKeyVaultConfigOutput) ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionAtRestAzureKeyVaultConfig) *EncryptionAtRestAzureKeyVaultConfig {
		return &v
	}).(EncryptionAtRestAzureKeyVaultConfigPtrOutput)
}

func (o EncryptionAtRestAzureKeyVaultConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EncryptionAtRestAzureKeyVaultConfig] {
	return pulumix.Output[EncryptionAtRestAzureKeyVaultConfig]{
		OutputState: o.OutputState,
	}
}

// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
func (o EncryptionAtRestAzureKeyVaultConfigOutput) AzureEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.AzureEnvironment }).(pulumi.StringPtrOutput)
}

// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The unique identifier of a key in an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

// The name of an Azure Key Vault containing your key.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) KeyVaultName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.KeyVaultName }).(pulumi.StringPtrOutput)
}

// The name of the Azure Resource group that contains an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.ResourceGroupName }).(pulumi.StringPtrOutput)
}

// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// The unique identifier associated with an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// The unique identifier for an Azure AD tenant within an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type EncryptionAtRestAzureKeyVaultConfigPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAzureKeyVaultConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAzureKeyVaultConfig)(nil)).Elem()
}

func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EncryptionAtRestAzureKeyVaultConfig] {
	return pulumix.Output[*EncryptionAtRestAzureKeyVaultConfig]{
		OutputState: o.OutputState,
	}
}

func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) Elem() EncryptionAtRestAzureKeyVaultConfigOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) EncryptionAtRestAzureKeyVaultConfig {
		if v != nil {
			return *v
		}
		var ret EncryptionAtRestAzureKeyVaultConfig
		return ret
	}).(EncryptionAtRestAzureKeyVaultConfigOutput)
}

// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) AzureEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.AzureEnvironment
	}).(pulumi.StringPtrOutput)
}

// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The unique identifier of a key in an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The name of an Azure Key Vault containing your key.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) KeyVaultName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultName
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure Resource group that contains an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// The unique identifier associated with an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The unique identifier for an Azure AD tenant within an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type EncryptionAtRestGoogleCloudKmsConfig struct {
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled *bool `pulumi:"enabled"`
	// The Key Version Resource ID from your GCP account.
	KeyVersionResourceId *string `pulumi:"keyVersionResourceId"`
	// String-formatted JSON object containing GCP KMS credentials from your GCP account.
	ServiceAccountKey *string `pulumi:"serviceAccountKey"`
}

// EncryptionAtRestGoogleCloudKmsConfigInput is an input type that accepts EncryptionAtRestGoogleCloudKmsConfigArgs and EncryptionAtRestGoogleCloudKmsConfigOutput values.
// You can construct a concrete instance of `EncryptionAtRestGoogleCloudKmsConfigInput` via:
//
//	EncryptionAtRestGoogleCloudKmsConfigArgs{...}
type EncryptionAtRestGoogleCloudKmsConfigInput interface {
	pulumi.Input

	ToEncryptionAtRestGoogleCloudKmsConfigOutput() EncryptionAtRestGoogleCloudKmsConfigOutput
	ToEncryptionAtRestGoogleCloudKmsConfigOutputWithContext(context.Context) EncryptionAtRestGoogleCloudKmsConfigOutput
}

type EncryptionAtRestGoogleCloudKmsConfigArgs struct {
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The Key Version Resource ID from your GCP account.
	KeyVersionResourceId pulumi.StringPtrInput `pulumi:"keyVersionResourceId"`
	// String-formatted JSON object containing GCP KMS credentials from your GCP account.
	ServiceAccountKey pulumi.StringPtrInput `pulumi:"serviceAccountKey"`
}

func (EncryptionAtRestGoogleCloudKmsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestGoogleCloudKmsConfig)(nil)).Elem()
}

func (i EncryptionAtRestGoogleCloudKmsConfigArgs) ToEncryptionAtRestGoogleCloudKmsConfigOutput() EncryptionAtRestGoogleCloudKmsConfigOutput {
	return i.ToEncryptionAtRestGoogleCloudKmsConfigOutputWithContext(context.Background())
}

func (i EncryptionAtRestGoogleCloudKmsConfigArgs) ToEncryptionAtRestGoogleCloudKmsConfigOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestGoogleCloudKmsConfigOutput)
}

func (i EncryptionAtRestGoogleCloudKmsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EncryptionAtRestGoogleCloudKmsConfig] {
	return pulumix.Output[EncryptionAtRestGoogleCloudKmsConfig]{
		OutputState: i.ToEncryptionAtRestGoogleCloudKmsConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EncryptionAtRestGoogleCloudKmsConfigArgs) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return i.ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(context.Background())
}

func (i EncryptionAtRestGoogleCloudKmsConfigArgs) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestGoogleCloudKmsConfigOutput).ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx)
}

// EncryptionAtRestGoogleCloudKmsConfigPtrInput is an input type that accepts EncryptionAtRestGoogleCloudKmsConfigArgs, EncryptionAtRestGoogleCloudKmsConfigPtr and EncryptionAtRestGoogleCloudKmsConfigPtrOutput values.
// You can construct a concrete instance of `EncryptionAtRestGoogleCloudKmsConfigPtrInput` via:
//
//	        EncryptionAtRestGoogleCloudKmsConfigArgs{...}
//
//	or:
//
//	        nil
type EncryptionAtRestGoogleCloudKmsConfigPtrInput interface {
	pulumi.Input

	ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput
	ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput
}

type encryptionAtRestGoogleCloudKmsConfigPtrType EncryptionAtRestGoogleCloudKmsConfigArgs

func EncryptionAtRestGoogleCloudKmsConfigPtr(v *EncryptionAtRestGoogleCloudKmsConfigArgs) EncryptionAtRestGoogleCloudKmsConfigPtrInput {
	return (*encryptionAtRestGoogleCloudKmsConfigPtrType)(v)
}

func (*encryptionAtRestGoogleCloudKmsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestGoogleCloudKmsConfig)(nil)).Elem()
}

func (i *encryptionAtRestGoogleCloudKmsConfigPtrType) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return i.ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(context.Background())
}

func (i *encryptionAtRestGoogleCloudKmsConfigPtrType) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestGoogleCloudKmsConfigPtrOutput)
}

func (i *encryptionAtRestGoogleCloudKmsConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EncryptionAtRestGoogleCloudKmsConfig] {
	return pulumix.Output[*EncryptionAtRestGoogleCloudKmsConfig]{
		OutputState: i.ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EncryptionAtRestGoogleCloudKmsConfigOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestGoogleCloudKmsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestGoogleCloudKmsConfig)(nil)).Elem()
}

func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ToEncryptionAtRestGoogleCloudKmsConfigOutput() EncryptionAtRestGoogleCloudKmsConfigOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ToEncryptionAtRestGoogleCloudKmsConfigOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return o.ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(context.Background())
}

func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionAtRestGoogleCloudKmsConfig) *EncryptionAtRestGoogleCloudKmsConfig {
		return &v
	}).(EncryptionAtRestGoogleCloudKmsConfigPtrOutput)
}

func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EncryptionAtRestGoogleCloudKmsConfig] {
	return pulumix.Output[EncryptionAtRestGoogleCloudKmsConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestGoogleCloudKmsConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestGoogleCloudKmsConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The Key Version Resource ID from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsConfigOutput) KeyVersionResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestGoogleCloudKmsConfig) *string { return v.KeyVersionResourceId }).(pulumi.StringPtrOutput)
}

// String-formatted JSON object containing GCP KMS credentials from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ServiceAccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestGoogleCloudKmsConfig) *string { return v.ServiceAccountKey }).(pulumi.StringPtrOutput)
}

type EncryptionAtRestGoogleCloudKmsConfigPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestGoogleCloudKmsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestGoogleCloudKmsConfig)(nil)).Elem()
}

func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EncryptionAtRestGoogleCloudKmsConfig] {
	return pulumix.Output[*EncryptionAtRestGoogleCloudKmsConfig]{
		OutputState: o.OutputState,
	}
}

func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) Elem() EncryptionAtRestGoogleCloudKmsConfigOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKmsConfig) EncryptionAtRestGoogleCloudKmsConfig {
		if v != nil {
			return *v
		}
		var ret EncryptionAtRestGoogleCloudKmsConfig
		return ret
	}).(EncryptionAtRestGoogleCloudKmsConfigOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKmsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Key Version Resource ID from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) KeyVersionResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersionResourceId
	}).(pulumi.StringPtrOutput)
}

// String-formatted JSON object containing GCP KMS credentials from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) ServiceAccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountKey
	}).(pulumi.StringPtrOutput)
}

type EventTriggerEventProcessors struct {
	AwsEventbridge *EventTriggerEventProcessorsAwsEventbridge `pulumi:"awsEventbridge"`
}

// EventTriggerEventProcessorsInput is an input type that accepts EventTriggerEventProcessorsArgs and EventTriggerEventProcessorsOutput values.
// You can construct a concrete instance of `EventTriggerEventProcessorsInput` via:
//
//	EventTriggerEventProcessorsArgs{...}
type EventTriggerEventProcessorsInput interface {
	pulumi.Input

	ToEventTriggerEventProcessorsOutput() EventTriggerEventProcessorsOutput
	ToEventTriggerEventProcessorsOutputWithContext(context.Context) EventTriggerEventProcessorsOutput
}

type EventTriggerEventProcessorsArgs struct {
	AwsEventbridge EventTriggerEventProcessorsAwsEventbridgePtrInput `pulumi:"awsEventbridge"`
}

func (EventTriggerEventProcessorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTriggerEventProcessors)(nil)).Elem()
}

func (i EventTriggerEventProcessorsArgs) ToEventTriggerEventProcessorsOutput() EventTriggerEventProcessorsOutput {
	return i.ToEventTriggerEventProcessorsOutputWithContext(context.Background())
}

func (i EventTriggerEventProcessorsArgs) ToEventTriggerEventProcessorsOutputWithContext(ctx context.Context) EventTriggerEventProcessorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsOutput)
}

func (i EventTriggerEventProcessorsArgs) ToOutput(ctx context.Context) pulumix.Output[EventTriggerEventProcessors] {
	return pulumix.Output[EventTriggerEventProcessors]{
		OutputState: i.ToEventTriggerEventProcessorsOutputWithContext(ctx).OutputState,
	}
}

func (i EventTriggerEventProcessorsArgs) ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput {
	return i.ToEventTriggerEventProcessorsPtrOutputWithContext(context.Background())
}

func (i EventTriggerEventProcessorsArgs) ToEventTriggerEventProcessorsPtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsOutput).ToEventTriggerEventProcessorsPtrOutputWithContext(ctx)
}

// EventTriggerEventProcessorsPtrInput is an input type that accepts EventTriggerEventProcessorsArgs, EventTriggerEventProcessorsPtr and EventTriggerEventProcessorsPtrOutput values.
// You can construct a concrete instance of `EventTriggerEventProcessorsPtrInput` via:
//
//	        EventTriggerEventProcessorsArgs{...}
//
//	or:
//
//	        nil
type EventTriggerEventProcessorsPtrInput interface {
	pulumi.Input

	ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput
	ToEventTriggerEventProcessorsPtrOutputWithContext(context.Context) EventTriggerEventProcessorsPtrOutput
}

type eventTriggerEventProcessorsPtrType EventTriggerEventProcessorsArgs

func EventTriggerEventProcessorsPtr(v *EventTriggerEventProcessorsArgs) EventTriggerEventProcessorsPtrInput {
	return (*eventTriggerEventProcessorsPtrType)(v)
}

func (*eventTriggerEventProcessorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTriggerEventProcessors)(nil)).Elem()
}

func (i *eventTriggerEventProcessorsPtrType) ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput {
	return i.ToEventTriggerEventProcessorsPtrOutputWithContext(context.Background())
}

func (i *eventTriggerEventProcessorsPtrType) ToEventTriggerEventProcessorsPtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsPtrOutput)
}

func (i *eventTriggerEventProcessorsPtrType) ToOutput(ctx context.Context) pulumix.Output[*EventTriggerEventProcessors] {
	return pulumix.Output[*EventTriggerEventProcessors]{
		OutputState: i.ToEventTriggerEventProcessorsPtrOutputWithContext(ctx).OutputState,
	}
}

type EventTriggerEventProcessorsOutput struct{ *pulumi.OutputState }

func (EventTriggerEventProcessorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTriggerEventProcessors)(nil)).Elem()
}

func (o EventTriggerEventProcessorsOutput) ToEventTriggerEventProcessorsOutput() EventTriggerEventProcessorsOutput {
	return o
}

func (o EventTriggerEventProcessorsOutput) ToEventTriggerEventProcessorsOutputWithContext(ctx context.Context) EventTriggerEventProcessorsOutput {
	return o
}

func (o EventTriggerEventProcessorsOutput) ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput {
	return o.ToEventTriggerEventProcessorsPtrOutputWithContext(context.Background())
}

func (o EventTriggerEventProcessorsOutput) ToEventTriggerEventProcessorsPtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTriggerEventProcessors) *EventTriggerEventProcessors {
		return &v
	}).(EventTriggerEventProcessorsPtrOutput)
}

func (o EventTriggerEventProcessorsOutput) ToOutput(ctx context.Context) pulumix.Output[EventTriggerEventProcessors] {
	return pulumix.Output[EventTriggerEventProcessors]{
		OutputState: o.OutputState,
	}
}

func (o EventTriggerEventProcessorsOutput) AwsEventbridge() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o.ApplyT(func(v EventTriggerEventProcessors) *EventTriggerEventProcessorsAwsEventbridge {
		return v.AwsEventbridge
	}).(EventTriggerEventProcessorsAwsEventbridgePtrOutput)
}

type EventTriggerEventProcessorsPtrOutput struct{ *pulumi.OutputState }

func (EventTriggerEventProcessorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTriggerEventProcessors)(nil)).Elem()
}

func (o EventTriggerEventProcessorsPtrOutput) ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput {
	return o
}

func (o EventTriggerEventProcessorsPtrOutput) ToEventTriggerEventProcessorsPtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsPtrOutput {
	return o
}

func (o EventTriggerEventProcessorsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EventTriggerEventProcessors] {
	return pulumix.Output[*EventTriggerEventProcessors]{
		OutputState: o.OutputState,
	}
}

func (o EventTriggerEventProcessorsPtrOutput) Elem() EventTriggerEventProcessorsOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessors) EventTriggerEventProcessors {
		if v != nil {
			return *v
		}
		var ret EventTriggerEventProcessors
		return ret
	}).(EventTriggerEventProcessorsOutput)
}

func (o EventTriggerEventProcessorsPtrOutput) AwsEventbridge() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessors) *EventTriggerEventProcessorsAwsEventbridge {
		if v == nil {
			return nil
		}
		return v.AwsEventbridge
	}).(EventTriggerEventProcessorsAwsEventbridgePtrOutput)
}

type EventTriggerEventProcessorsAwsEventbridge struct {
	ConfigAccountId *string `pulumi:"configAccountId"`
	ConfigRegion    *string `pulumi:"configRegion"`
}

// EventTriggerEventProcessorsAwsEventbridgeInput is an input type that accepts EventTriggerEventProcessorsAwsEventbridgeArgs and EventTriggerEventProcessorsAwsEventbridgeOutput values.
// You can construct a concrete instance of `EventTriggerEventProcessorsAwsEventbridgeInput` via:
//
//	EventTriggerEventProcessorsAwsEventbridgeArgs{...}
type EventTriggerEventProcessorsAwsEventbridgeInput interface {
	pulumi.Input

	ToEventTriggerEventProcessorsAwsEventbridgeOutput() EventTriggerEventProcessorsAwsEventbridgeOutput
	ToEventTriggerEventProcessorsAwsEventbridgeOutputWithContext(context.Context) EventTriggerEventProcessorsAwsEventbridgeOutput
}

type EventTriggerEventProcessorsAwsEventbridgeArgs struct {
	ConfigAccountId pulumi.StringPtrInput `pulumi:"configAccountId"`
	ConfigRegion    pulumi.StringPtrInput `pulumi:"configRegion"`
}

func (EventTriggerEventProcessorsAwsEventbridgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTriggerEventProcessorsAwsEventbridge)(nil)).Elem()
}

func (i EventTriggerEventProcessorsAwsEventbridgeArgs) ToEventTriggerEventProcessorsAwsEventbridgeOutput() EventTriggerEventProcessorsAwsEventbridgeOutput {
	return i.ToEventTriggerEventProcessorsAwsEventbridgeOutputWithContext(context.Background())
}

func (i EventTriggerEventProcessorsAwsEventbridgeArgs) ToEventTriggerEventProcessorsAwsEventbridgeOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsAwsEventbridgeOutput)
}

func (i EventTriggerEventProcessorsAwsEventbridgeArgs) ToOutput(ctx context.Context) pulumix.Output[EventTriggerEventProcessorsAwsEventbridge] {
	return pulumix.Output[EventTriggerEventProcessorsAwsEventbridge]{
		OutputState: i.ToEventTriggerEventProcessorsAwsEventbridgeOutputWithContext(ctx).OutputState,
	}
}

func (i EventTriggerEventProcessorsAwsEventbridgeArgs) ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return i.ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(context.Background())
}

func (i EventTriggerEventProcessorsAwsEventbridgeArgs) ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsAwsEventbridgeOutput).ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx)
}

// EventTriggerEventProcessorsAwsEventbridgePtrInput is an input type that accepts EventTriggerEventProcessorsAwsEventbridgeArgs, EventTriggerEventProcessorsAwsEventbridgePtr and EventTriggerEventProcessorsAwsEventbridgePtrOutput values.
// You can construct a concrete instance of `EventTriggerEventProcessorsAwsEventbridgePtrInput` via:
//
//	        EventTriggerEventProcessorsAwsEventbridgeArgs{...}
//
//	or:
//
//	        nil
type EventTriggerEventProcessorsAwsEventbridgePtrInput interface {
	pulumi.Input

	ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput
	ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput
}

type eventTriggerEventProcessorsAwsEventbridgePtrType EventTriggerEventProcessorsAwsEventbridgeArgs

func EventTriggerEventProcessorsAwsEventbridgePtr(v *EventTriggerEventProcessorsAwsEventbridgeArgs) EventTriggerEventProcessorsAwsEventbridgePtrInput {
	return (*eventTriggerEventProcessorsAwsEventbridgePtrType)(v)
}

func (*eventTriggerEventProcessorsAwsEventbridgePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTriggerEventProcessorsAwsEventbridge)(nil)).Elem()
}

func (i *eventTriggerEventProcessorsAwsEventbridgePtrType) ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return i.ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(context.Background())
}

func (i *eventTriggerEventProcessorsAwsEventbridgePtrType) ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsAwsEventbridgePtrOutput)
}

func (i *eventTriggerEventProcessorsAwsEventbridgePtrType) ToOutput(ctx context.Context) pulumix.Output[*EventTriggerEventProcessorsAwsEventbridge] {
	return pulumix.Output[*EventTriggerEventProcessorsAwsEventbridge]{
		OutputState: i.ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx).OutputState,
	}
}

type EventTriggerEventProcessorsAwsEventbridgeOutput struct{ *pulumi.OutputState }

func (EventTriggerEventProcessorsAwsEventbridgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTriggerEventProcessorsAwsEventbridge)(nil)).Elem()
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ToEventTriggerEventProcessorsAwsEventbridgeOutput() EventTriggerEventProcessorsAwsEventbridgeOutput {
	return o
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ToEventTriggerEventProcessorsAwsEventbridgeOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgeOutput {
	return o
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o.ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(context.Background())
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTriggerEventProcessorsAwsEventbridge) *EventTriggerEventProcessorsAwsEventbridge {
		return &v
	}).(EventTriggerEventProcessorsAwsEventbridgePtrOutput)
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ToOutput(ctx context.Context) pulumix.Output[EventTriggerEventProcessorsAwsEventbridge] {
	return pulumix.Output[EventTriggerEventProcessorsAwsEventbridge]{
		OutputState: o.OutputState,
	}
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ConfigAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTriggerEventProcessorsAwsEventbridge) *string { return v.ConfigAccountId }).(pulumi.StringPtrOutput)
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ConfigRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTriggerEventProcessorsAwsEventbridge) *string { return v.ConfigRegion }).(pulumi.StringPtrOutput)
}

type EventTriggerEventProcessorsAwsEventbridgePtrOutput struct{ *pulumi.OutputState }

func (EventTriggerEventProcessorsAwsEventbridgePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTriggerEventProcessorsAwsEventbridge)(nil)).Elem()
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EventTriggerEventProcessorsAwsEventbridge] {
	return pulumix.Output[*EventTriggerEventProcessorsAwsEventbridge]{
		OutputState: o.OutputState,
	}
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) Elem() EventTriggerEventProcessorsAwsEventbridgeOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessorsAwsEventbridge) EventTriggerEventProcessorsAwsEventbridge {
		if v != nil {
			return *v
		}
		var ret EventTriggerEventProcessorsAwsEventbridge
		return ret
	}).(EventTriggerEventProcessorsAwsEventbridgeOutput)
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) ConfigAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessorsAwsEventbridge) *string {
		if v == nil {
			return nil
		}
		return v.ConfigAccountId
	}).(pulumi.StringPtrOutput)
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) ConfigRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessorsAwsEventbridge) *string {
		if v == nil {
			return nil
		}
		return v.ConfigRegion
	}).(pulumi.StringPtrOutput)
}

type FederatedDatabaseInstanceCloudProviderConfig struct {
	Aws FederatedDatabaseInstanceCloudProviderConfigAws `pulumi:"aws"`
}

// FederatedDatabaseInstanceCloudProviderConfigInput is an input type that accepts FederatedDatabaseInstanceCloudProviderConfigArgs and FederatedDatabaseInstanceCloudProviderConfigOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceCloudProviderConfigInput` via:
//
//	FederatedDatabaseInstanceCloudProviderConfigArgs{...}
type FederatedDatabaseInstanceCloudProviderConfigInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceCloudProviderConfigOutput() FederatedDatabaseInstanceCloudProviderConfigOutput
	ToFederatedDatabaseInstanceCloudProviderConfigOutputWithContext(context.Context) FederatedDatabaseInstanceCloudProviderConfigOutput
}

type FederatedDatabaseInstanceCloudProviderConfigArgs struct {
	Aws FederatedDatabaseInstanceCloudProviderConfigAwsInput `pulumi:"aws"`
}

func (FederatedDatabaseInstanceCloudProviderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceCloudProviderConfig)(nil)).Elem()
}

func (i FederatedDatabaseInstanceCloudProviderConfigArgs) ToFederatedDatabaseInstanceCloudProviderConfigOutput() FederatedDatabaseInstanceCloudProviderConfigOutput {
	return i.ToFederatedDatabaseInstanceCloudProviderConfigOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceCloudProviderConfigArgs) ToFederatedDatabaseInstanceCloudProviderConfigOutputWithContext(ctx context.Context) FederatedDatabaseInstanceCloudProviderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceCloudProviderConfigOutput)
}

func (i FederatedDatabaseInstanceCloudProviderConfigArgs) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceCloudProviderConfig] {
	return pulumix.Output[FederatedDatabaseInstanceCloudProviderConfig]{
		OutputState: i.ToFederatedDatabaseInstanceCloudProviderConfigOutputWithContext(ctx).OutputState,
	}
}

func (i FederatedDatabaseInstanceCloudProviderConfigArgs) ToFederatedDatabaseInstanceCloudProviderConfigPtrOutput() FederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return i.ToFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceCloudProviderConfigArgs) ToFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceCloudProviderConfigOutput).ToFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(ctx)
}

// FederatedDatabaseInstanceCloudProviderConfigPtrInput is an input type that accepts FederatedDatabaseInstanceCloudProviderConfigArgs, FederatedDatabaseInstanceCloudProviderConfigPtr and FederatedDatabaseInstanceCloudProviderConfigPtrOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceCloudProviderConfigPtrInput` via:
//
//	        FederatedDatabaseInstanceCloudProviderConfigArgs{...}
//
//	or:
//
//	        nil
type FederatedDatabaseInstanceCloudProviderConfigPtrInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceCloudProviderConfigPtrOutput() FederatedDatabaseInstanceCloudProviderConfigPtrOutput
	ToFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(context.Context) FederatedDatabaseInstanceCloudProviderConfigPtrOutput
}

type federatedDatabaseInstanceCloudProviderConfigPtrType FederatedDatabaseInstanceCloudProviderConfigArgs

func FederatedDatabaseInstanceCloudProviderConfigPtr(v *FederatedDatabaseInstanceCloudProviderConfigArgs) FederatedDatabaseInstanceCloudProviderConfigPtrInput {
	return (*federatedDatabaseInstanceCloudProviderConfigPtrType)(v)
}

func (*federatedDatabaseInstanceCloudProviderConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FederatedDatabaseInstanceCloudProviderConfig)(nil)).Elem()
}

func (i *federatedDatabaseInstanceCloudProviderConfigPtrType) ToFederatedDatabaseInstanceCloudProviderConfigPtrOutput() FederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return i.ToFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(context.Background())
}

func (i *federatedDatabaseInstanceCloudProviderConfigPtrType) ToFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceCloudProviderConfigPtrOutput)
}

func (i *federatedDatabaseInstanceCloudProviderConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*FederatedDatabaseInstanceCloudProviderConfig] {
	return pulumix.Output[*FederatedDatabaseInstanceCloudProviderConfig]{
		OutputState: i.ToFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type FederatedDatabaseInstanceCloudProviderConfigOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceCloudProviderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceCloudProviderConfig)(nil)).Elem()
}

func (o FederatedDatabaseInstanceCloudProviderConfigOutput) ToFederatedDatabaseInstanceCloudProviderConfigOutput() FederatedDatabaseInstanceCloudProviderConfigOutput {
	return o
}

func (o FederatedDatabaseInstanceCloudProviderConfigOutput) ToFederatedDatabaseInstanceCloudProviderConfigOutputWithContext(ctx context.Context) FederatedDatabaseInstanceCloudProviderConfigOutput {
	return o
}

func (o FederatedDatabaseInstanceCloudProviderConfigOutput) ToFederatedDatabaseInstanceCloudProviderConfigPtrOutput() FederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return o.ToFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(context.Background())
}

func (o FederatedDatabaseInstanceCloudProviderConfigOutput) ToFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FederatedDatabaseInstanceCloudProviderConfig) *FederatedDatabaseInstanceCloudProviderConfig {
		return &v
	}).(FederatedDatabaseInstanceCloudProviderConfigPtrOutput)
}

func (o FederatedDatabaseInstanceCloudProviderConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceCloudProviderConfig] {
	return pulumix.Output[FederatedDatabaseInstanceCloudProviderConfig]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceCloudProviderConfigOutput) Aws() FederatedDatabaseInstanceCloudProviderConfigAwsOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceCloudProviderConfig) FederatedDatabaseInstanceCloudProviderConfigAws {
		return v.Aws
	}).(FederatedDatabaseInstanceCloudProviderConfigAwsOutput)
}

type FederatedDatabaseInstanceCloudProviderConfigPtrOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceCloudProviderConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FederatedDatabaseInstanceCloudProviderConfig)(nil)).Elem()
}

func (o FederatedDatabaseInstanceCloudProviderConfigPtrOutput) ToFederatedDatabaseInstanceCloudProviderConfigPtrOutput() FederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return o
}

func (o FederatedDatabaseInstanceCloudProviderConfigPtrOutput) ToFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return o
}

func (o FederatedDatabaseInstanceCloudProviderConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FederatedDatabaseInstanceCloudProviderConfig] {
	return pulumix.Output[*FederatedDatabaseInstanceCloudProviderConfig]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceCloudProviderConfigPtrOutput) Elem() FederatedDatabaseInstanceCloudProviderConfigOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceCloudProviderConfig) FederatedDatabaseInstanceCloudProviderConfig {
		if v != nil {
			return *v
		}
		var ret FederatedDatabaseInstanceCloudProviderConfig
		return ret
	}).(FederatedDatabaseInstanceCloudProviderConfigOutput)
}

func (o FederatedDatabaseInstanceCloudProviderConfigPtrOutput) Aws() FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceCloudProviderConfig) *FederatedDatabaseInstanceCloudProviderConfigAws {
		if v == nil {
			return nil
		}
		return &v.Aws
	}).(FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput)
}

type FederatedDatabaseInstanceCloudProviderConfigAws struct {
	// Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
	ExternalId *string `pulumi:"externalId"`
	// Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
	// * `s3:GetObject`
	// * `s3:ListBucket`
	// * `s3:GetObjectVersion`
	IamAssumedRoleArn *string `pulumi:"iamAssumedRoleArn"`
	// Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
	IamUserArn *string `pulumi:"iamUserArn"`
	// Unique identifier of the role that the Federated Instance can use to access the data stores. If necessary, use the Atlas [UI](https://docs.atlas.mongodb.com/security/manage-iam-roles/) or [API](https://docs.atlas.mongodb.com/reference/api/cloud-provider-access-get-roles/) to retrieve the role ID. You must also specify the `testS3Bucket`.
	RoleId string `pulumi:"roleId"`
	// Name of the S3 data bucket that the provided role ID is authorized to access. You must also specify the `roleId`.
	// ### `dataProcessRegion` - (Optional) The cloud provider region to which the Federated Instance routes client connections for data processing.
	TestS3Bucket string `pulumi:"testS3Bucket"`
}

// FederatedDatabaseInstanceCloudProviderConfigAwsInput is an input type that accepts FederatedDatabaseInstanceCloudProviderConfigAwsArgs and FederatedDatabaseInstanceCloudProviderConfigAwsOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceCloudProviderConfigAwsInput` via:
//
//	FederatedDatabaseInstanceCloudProviderConfigAwsArgs{...}
type FederatedDatabaseInstanceCloudProviderConfigAwsInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceCloudProviderConfigAwsOutput() FederatedDatabaseInstanceCloudProviderConfigAwsOutput
	ToFederatedDatabaseInstanceCloudProviderConfigAwsOutputWithContext(context.Context) FederatedDatabaseInstanceCloudProviderConfigAwsOutput
}

type FederatedDatabaseInstanceCloudProviderConfigAwsArgs struct {
	// Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
	// * `s3:GetObject`
	// * `s3:ListBucket`
	// * `s3:GetObjectVersion`
	IamAssumedRoleArn pulumi.StringPtrInput `pulumi:"iamAssumedRoleArn"`
	// Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
	IamUserArn pulumi.StringPtrInput `pulumi:"iamUserArn"`
	// Unique identifier of the role that the Federated Instance can use to access the data stores. If necessary, use the Atlas [UI](https://docs.atlas.mongodb.com/security/manage-iam-roles/) or [API](https://docs.atlas.mongodb.com/reference/api/cloud-provider-access-get-roles/) to retrieve the role ID. You must also specify the `testS3Bucket`.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// Name of the S3 data bucket that the provided role ID is authorized to access. You must also specify the `roleId`.
	// ### `dataProcessRegion` - (Optional) The cloud provider region to which the Federated Instance routes client connections for data processing.
	TestS3Bucket pulumi.StringInput `pulumi:"testS3Bucket"`
}

func (FederatedDatabaseInstanceCloudProviderConfigAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceCloudProviderConfigAws)(nil)).Elem()
}

func (i FederatedDatabaseInstanceCloudProviderConfigAwsArgs) ToFederatedDatabaseInstanceCloudProviderConfigAwsOutput() FederatedDatabaseInstanceCloudProviderConfigAwsOutput {
	return i.ToFederatedDatabaseInstanceCloudProviderConfigAwsOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceCloudProviderConfigAwsArgs) ToFederatedDatabaseInstanceCloudProviderConfigAwsOutputWithContext(ctx context.Context) FederatedDatabaseInstanceCloudProviderConfigAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceCloudProviderConfigAwsOutput)
}

func (i FederatedDatabaseInstanceCloudProviderConfigAwsArgs) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceCloudProviderConfigAws] {
	return pulumix.Output[FederatedDatabaseInstanceCloudProviderConfigAws]{
		OutputState: i.ToFederatedDatabaseInstanceCloudProviderConfigAwsOutputWithContext(ctx).OutputState,
	}
}

func (i FederatedDatabaseInstanceCloudProviderConfigAwsArgs) ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput() FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return i.ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceCloudProviderConfigAwsArgs) ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceCloudProviderConfigAwsOutput).ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(ctx)
}

// FederatedDatabaseInstanceCloudProviderConfigAwsPtrInput is an input type that accepts FederatedDatabaseInstanceCloudProviderConfigAwsArgs, FederatedDatabaseInstanceCloudProviderConfigAwsPtr and FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceCloudProviderConfigAwsPtrInput` via:
//
//	        FederatedDatabaseInstanceCloudProviderConfigAwsArgs{...}
//
//	or:
//
//	        nil
type FederatedDatabaseInstanceCloudProviderConfigAwsPtrInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput() FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput
	ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(context.Context) FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput
}

type federatedDatabaseInstanceCloudProviderConfigAwsPtrType FederatedDatabaseInstanceCloudProviderConfigAwsArgs

func FederatedDatabaseInstanceCloudProviderConfigAwsPtr(v *FederatedDatabaseInstanceCloudProviderConfigAwsArgs) FederatedDatabaseInstanceCloudProviderConfigAwsPtrInput {
	return (*federatedDatabaseInstanceCloudProviderConfigAwsPtrType)(v)
}

func (*federatedDatabaseInstanceCloudProviderConfigAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FederatedDatabaseInstanceCloudProviderConfigAws)(nil)).Elem()
}

func (i *federatedDatabaseInstanceCloudProviderConfigAwsPtrType) ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput() FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return i.ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(context.Background())
}

func (i *federatedDatabaseInstanceCloudProviderConfigAwsPtrType) ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput)
}

func (i *federatedDatabaseInstanceCloudProviderConfigAwsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FederatedDatabaseInstanceCloudProviderConfigAws] {
	return pulumix.Output[*FederatedDatabaseInstanceCloudProviderConfigAws]{
		OutputState: i.ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(ctx).OutputState,
	}
}

type FederatedDatabaseInstanceCloudProviderConfigAwsOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceCloudProviderConfigAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceCloudProviderConfigAws)(nil)).Elem()
}

func (o FederatedDatabaseInstanceCloudProviderConfigAwsOutput) ToFederatedDatabaseInstanceCloudProviderConfigAwsOutput() FederatedDatabaseInstanceCloudProviderConfigAwsOutput {
	return o
}

func (o FederatedDatabaseInstanceCloudProviderConfigAwsOutput) ToFederatedDatabaseInstanceCloudProviderConfigAwsOutputWithContext(ctx context.Context) FederatedDatabaseInstanceCloudProviderConfigAwsOutput {
	return o
}

func (o FederatedDatabaseInstanceCloudProviderConfigAwsOutput) ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput() FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return o.ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(context.Background())
}

func (o FederatedDatabaseInstanceCloudProviderConfigAwsOutput) ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FederatedDatabaseInstanceCloudProviderConfigAws) *FederatedDatabaseInstanceCloudProviderConfigAws {
		return &v
	}).(FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput)
}

func (o FederatedDatabaseInstanceCloudProviderConfigAwsOutput) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceCloudProviderConfigAws] {
	return pulumix.Output[FederatedDatabaseInstanceCloudProviderConfigAws]{
		OutputState: o.OutputState,
	}
}

// Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
func (o FederatedDatabaseInstanceCloudProviderConfigAwsOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceCloudProviderConfigAws) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
// * `s3:GetObject`
// * `s3:ListBucket`
// * `s3:GetObjectVersion`
func (o FederatedDatabaseInstanceCloudProviderConfigAwsOutput) IamAssumedRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceCloudProviderConfigAws) *string { return v.IamAssumedRoleArn }).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
func (o FederatedDatabaseInstanceCloudProviderConfigAwsOutput) IamUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceCloudProviderConfigAws) *string { return v.IamUserArn }).(pulumi.StringPtrOutput)
}

// Unique identifier of the role that the Federated Instance can use to access the data stores. If necessary, use the Atlas [UI](https://docs.atlas.mongodb.com/security/manage-iam-roles/) or [API](https://docs.atlas.mongodb.com/reference/api/cloud-provider-access-get-roles/) to retrieve the role ID. You must also specify the `testS3Bucket`.
func (o FederatedDatabaseInstanceCloudProviderConfigAwsOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceCloudProviderConfigAws) string { return v.RoleId }).(pulumi.StringOutput)
}

// Name of the S3 data bucket that the provided role ID is authorized to access. You must also specify the `roleId`.
// ### `dataProcessRegion` - (Optional) The cloud provider region to which the Federated Instance routes client connections for data processing.
func (o FederatedDatabaseInstanceCloudProviderConfigAwsOutput) TestS3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceCloudProviderConfigAws) string { return v.TestS3Bucket }).(pulumi.StringOutput)
}

type FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FederatedDatabaseInstanceCloudProviderConfigAws)(nil)).Elem()
}

func (o FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput() FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return o
}

func (o FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) ToFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return o
}

func (o FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FederatedDatabaseInstanceCloudProviderConfigAws] {
	return pulumix.Output[*FederatedDatabaseInstanceCloudProviderConfigAws]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) Elem() FederatedDatabaseInstanceCloudProviderConfigAwsOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceCloudProviderConfigAws) FederatedDatabaseInstanceCloudProviderConfigAws {
		if v != nil {
			return *v
		}
		var ret FederatedDatabaseInstanceCloudProviderConfigAws
		return ret
	}).(FederatedDatabaseInstanceCloudProviderConfigAwsOutput)
}

// Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
func (o FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceCloudProviderConfigAws) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
// * `s3:GetObject`
// * `s3:ListBucket`
// * `s3:GetObjectVersion`
func (o FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) IamAssumedRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceCloudProviderConfigAws) *string {
		if v == nil {
			return nil
		}
		return v.IamAssumedRoleArn
	}).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
func (o FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) IamUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceCloudProviderConfigAws) *string {
		if v == nil {
			return nil
		}
		return v.IamUserArn
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the role that the Federated Instance can use to access the data stores. If necessary, use the Atlas [UI](https://docs.atlas.mongodb.com/security/manage-iam-roles/) or [API](https://docs.atlas.mongodb.com/reference/api/cloud-provider-access-get-roles/) to retrieve the role ID. You must also specify the `testS3Bucket`.
func (o FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceCloudProviderConfigAws) *string {
		if v == nil {
			return nil
		}
		return &v.RoleId
	}).(pulumi.StringPtrOutput)
}

// Name of the S3 data bucket that the provided role ID is authorized to access. You must also specify the `roleId`.
// ### `dataProcessRegion` - (Optional) The cloud provider region to which the Federated Instance routes client connections for data processing.
func (o FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) TestS3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceCloudProviderConfigAws) *string {
		if v == nil {
			return nil
		}
		return &v.TestS3Bucket
	}).(pulumi.StringPtrOutput)
}

type FederatedDatabaseInstanceDataProcessRegion struct {
	// Name of the cloud service provider. Atlas Federated Database only supports AWS.
	CloudProvider string `pulumi:"cloudProvider"`
	// Name of the region to which the Federanted Instnace routes client connections for data processing. See the [documention](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Data-Federation/operation/createFederatedDatabase) for the available region.
	Region string `pulumi:"region"`
}

// FederatedDatabaseInstanceDataProcessRegionInput is an input type that accepts FederatedDatabaseInstanceDataProcessRegionArgs and FederatedDatabaseInstanceDataProcessRegionOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceDataProcessRegionInput` via:
//
//	FederatedDatabaseInstanceDataProcessRegionArgs{...}
type FederatedDatabaseInstanceDataProcessRegionInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceDataProcessRegionOutput() FederatedDatabaseInstanceDataProcessRegionOutput
	ToFederatedDatabaseInstanceDataProcessRegionOutputWithContext(context.Context) FederatedDatabaseInstanceDataProcessRegionOutput
}

type FederatedDatabaseInstanceDataProcessRegionArgs struct {
	// Name of the cloud service provider. Atlas Federated Database only supports AWS.
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// Name of the region to which the Federanted Instnace routes client connections for data processing. See the [documention](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Data-Federation/operation/createFederatedDatabase) for the available region.
	Region pulumi.StringInput `pulumi:"region"`
}

func (FederatedDatabaseInstanceDataProcessRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceDataProcessRegion)(nil)).Elem()
}

func (i FederatedDatabaseInstanceDataProcessRegionArgs) ToFederatedDatabaseInstanceDataProcessRegionOutput() FederatedDatabaseInstanceDataProcessRegionOutput {
	return i.ToFederatedDatabaseInstanceDataProcessRegionOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceDataProcessRegionArgs) ToFederatedDatabaseInstanceDataProcessRegionOutputWithContext(ctx context.Context) FederatedDatabaseInstanceDataProcessRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceDataProcessRegionOutput)
}

func (i FederatedDatabaseInstanceDataProcessRegionArgs) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceDataProcessRegion] {
	return pulumix.Output[FederatedDatabaseInstanceDataProcessRegion]{
		OutputState: i.ToFederatedDatabaseInstanceDataProcessRegionOutputWithContext(ctx).OutputState,
	}
}

func (i FederatedDatabaseInstanceDataProcessRegionArgs) ToFederatedDatabaseInstanceDataProcessRegionPtrOutput() FederatedDatabaseInstanceDataProcessRegionPtrOutput {
	return i.ToFederatedDatabaseInstanceDataProcessRegionPtrOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceDataProcessRegionArgs) ToFederatedDatabaseInstanceDataProcessRegionPtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceDataProcessRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceDataProcessRegionOutput).ToFederatedDatabaseInstanceDataProcessRegionPtrOutputWithContext(ctx)
}

// FederatedDatabaseInstanceDataProcessRegionPtrInput is an input type that accepts FederatedDatabaseInstanceDataProcessRegionArgs, FederatedDatabaseInstanceDataProcessRegionPtr and FederatedDatabaseInstanceDataProcessRegionPtrOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceDataProcessRegionPtrInput` via:
//
//	        FederatedDatabaseInstanceDataProcessRegionArgs{...}
//
//	or:
//
//	        nil
type FederatedDatabaseInstanceDataProcessRegionPtrInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceDataProcessRegionPtrOutput() FederatedDatabaseInstanceDataProcessRegionPtrOutput
	ToFederatedDatabaseInstanceDataProcessRegionPtrOutputWithContext(context.Context) FederatedDatabaseInstanceDataProcessRegionPtrOutput
}

type federatedDatabaseInstanceDataProcessRegionPtrType FederatedDatabaseInstanceDataProcessRegionArgs

func FederatedDatabaseInstanceDataProcessRegionPtr(v *FederatedDatabaseInstanceDataProcessRegionArgs) FederatedDatabaseInstanceDataProcessRegionPtrInput {
	return (*federatedDatabaseInstanceDataProcessRegionPtrType)(v)
}

func (*federatedDatabaseInstanceDataProcessRegionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FederatedDatabaseInstanceDataProcessRegion)(nil)).Elem()
}

func (i *federatedDatabaseInstanceDataProcessRegionPtrType) ToFederatedDatabaseInstanceDataProcessRegionPtrOutput() FederatedDatabaseInstanceDataProcessRegionPtrOutput {
	return i.ToFederatedDatabaseInstanceDataProcessRegionPtrOutputWithContext(context.Background())
}

func (i *federatedDatabaseInstanceDataProcessRegionPtrType) ToFederatedDatabaseInstanceDataProcessRegionPtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceDataProcessRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceDataProcessRegionPtrOutput)
}

func (i *federatedDatabaseInstanceDataProcessRegionPtrType) ToOutput(ctx context.Context) pulumix.Output[*FederatedDatabaseInstanceDataProcessRegion] {
	return pulumix.Output[*FederatedDatabaseInstanceDataProcessRegion]{
		OutputState: i.ToFederatedDatabaseInstanceDataProcessRegionPtrOutputWithContext(ctx).OutputState,
	}
}

type FederatedDatabaseInstanceDataProcessRegionOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceDataProcessRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceDataProcessRegion)(nil)).Elem()
}

func (o FederatedDatabaseInstanceDataProcessRegionOutput) ToFederatedDatabaseInstanceDataProcessRegionOutput() FederatedDatabaseInstanceDataProcessRegionOutput {
	return o
}

func (o FederatedDatabaseInstanceDataProcessRegionOutput) ToFederatedDatabaseInstanceDataProcessRegionOutputWithContext(ctx context.Context) FederatedDatabaseInstanceDataProcessRegionOutput {
	return o
}

func (o FederatedDatabaseInstanceDataProcessRegionOutput) ToFederatedDatabaseInstanceDataProcessRegionPtrOutput() FederatedDatabaseInstanceDataProcessRegionPtrOutput {
	return o.ToFederatedDatabaseInstanceDataProcessRegionPtrOutputWithContext(context.Background())
}

func (o FederatedDatabaseInstanceDataProcessRegionOutput) ToFederatedDatabaseInstanceDataProcessRegionPtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceDataProcessRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FederatedDatabaseInstanceDataProcessRegion) *FederatedDatabaseInstanceDataProcessRegion {
		return &v
	}).(FederatedDatabaseInstanceDataProcessRegionPtrOutput)
}

func (o FederatedDatabaseInstanceDataProcessRegionOutput) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceDataProcessRegion] {
	return pulumix.Output[FederatedDatabaseInstanceDataProcessRegion]{
		OutputState: o.OutputState,
	}
}

// Name of the cloud service provider. Atlas Federated Database only supports AWS.
func (o FederatedDatabaseInstanceDataProcessRegionOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceDataProcessRegion) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// Name of the region to which the Federanted Instnace routes client connections for data processing. See the [documention](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Data-Federation/operation/createFederatedDatabase) for the available region.
func (o FederatedDatabaseInstanceDataProcessRegionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceDataProcessRegion) string { return v.Region }).(pulumi.StringOutput)
}

type FederatedDatabaseInstanceDataProcessRegionPtrOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceDataProcessRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FederatedDatabaseInstanceDataProcessRegion)(nil)).Elem()
}

func (o FederatedDatabaseInstanceDataProcessRegionPtrOutput) ToFederatedDatabaseInstanceDataProcessRegionPtrOutput() FederatedDatabaseInstanceDataProcessRegionPtrOutput {
	return o
}

func (o FederatedDatabaseInstanceDataProcessRegionPtrOutput) ToFederatedDatabaseInstanceDataProcessRegionPtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceDataProcessRegionPtrOutput {
	return o
}

func (o FederatedDatabaseInstanceDataProcessRegionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FederatedDatabaseInstanceDataProcessRegion] {
	return pulumix.Output[*FederatedDatabaseInstanceDataProcessRegion]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceDataProcessRegionPtrOutput) Elem() FederatedDatabaseInstanceDataProcessRegionOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceDataProcessRegion) FederatedDatabaseInstanceDataProcessRegion {
		if v != nil {
			return *v
		}
		var ret FederatedDatabaseInstanceDataProcessRegion
		return ret
	}).(FederatedDatabaseInstanceDataProcessRegionOutput)
}

// Name of the cloud service provider. Atlas Federated Database only supports AWS.
func (o FederatedDatabaseInstanceDataProcessRegionPtrOutput) CloudProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceDataProcessRegion) *string {
		if v == nil {
			return nil
		}
		return &v.CloudProvider
	}).(pulumi.StringPtrOutput)
}

// Name of the region to which the Federanted Instnace routes client connections for data processing. See the [documention](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Data-Federation/operation/createFederatedDatabase) for the available region.
func (o FederatedDatabaseInstanceDataProcessRegionPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceDataProcessRegion) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

type FederatedDatabaseInstanceStorageDatabase struct {
	Collections            []FederatedDatabaseInstanceStorageDatabaseCollection `pulumi:"collections"`
	MaxWildcardCollections *int                                                 `pulumi:"maxWildcardCollections"`
	// Name of the Atlas Federated Database Instance.
	// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
	// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
	Name  *string                                        `pulumi:"name"`
	Views []FederatedDatabaseInstanceStorageDatabaseView `pulumi:"views"`
}

// FederatedDatabaseInstanceStorageDatabaseInput is an input type that accepts FederatedDatabaseInstanceStorageDatabaseArgs and FederatedDatabaseInstanceStorageDatabaseOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageDatabaseInput` via:
//
//	FederatedDatabaseInstanceStorageDatabaseArgs{...}
type FederatedDatabaseInstanceStorageDatabaseInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageDatabaseOutput() FederatedDatabaseInstanceStorageDatabaseOutput
	ToFederatedDatabaseInstanceStorageDatabaseOutputWithContext(context.Context) FederatedDatabaseInstanceStorageDatabaseOutput
}

type FederatedDatabaseInstanceStorageDatabaseArgs struct {
	Collections            FederatedDatabaseInstanceStorageDatabaseCollectionArrayInput `pulumi:"collections"`
	MaxWildcardCollections pulumi.IntPtrInput                                           `pulumi:"maxWildcardCollections"`
	// Name of the Atlas Federated Database Instance.
	// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
	// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
	Name  pulumi.StringPtrInput                                  `pulumi:"name"`
	Views FederatedDatabaseInstanceStorageDatabaseViewArrayInput `pulumi:"views"`
}

func (FederatedDatabaseInstanceStorageDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabase)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageDatabaseArgs) ToFederatedDatabaseInstanceStorageDatabaseOutput() FederatedDatabaseInstanceStorageDatabaseOutput {
	return i.ToFederatedDatabaseInstanceStorageDatabaseOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageDatabaseArgs) ToFederatedDatabaseInstanceStorageDatabaseOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageDatabaseOutput)
}

func (i FederatedDatabaseInstanceStorageDatabaseArgs) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageDatabase] {
	return pulumix.Output[FederatedDatabaseInstanceStorageDatabase]{
		OutputState: i.ToFederatedDatabaseInstanceStorageDatabaseOutputWithContext(ctx).OutputState,
	}
}

// FederatedDatabaseInstanceStorageDatabaseArrayInput is an input type that accepts FederatedDatabaseInstanceStorageDatabaseArray and FederatedDatabaseInstanceStorageDatabaseArrayOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageDatabaseArrayInput` via:
//
//	FederatedDatabaseInstanceStorageDatabaseArray{ FederatedDatabaseInstanceStorageDatabaseArgs{...} }
type FederatedDatabaseInstanceStorageDatabaseArrayInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageDatabaseArrayOutput() FederatedDatabaseInstanceStorageDatabaseArrayOutput
	ToFederatedDatabaseInstanceStorageDatabaseArrayOutputWithContext(context.Context) FederatedDatabaseInstanceStorageDatabaseArrayOutput
}

type FederatedDatabaseInstanceStorageDatabaseArray []FederatedDatabaseInstanceStorageDatabaseInput

func (FederatedDatabaseInstanceStorageDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedDatabaseInstanceStorageDatabase)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageDatabaseArray) ToFederatedDatabaseInstanceStorageDatabaseArrayOutput() FederatedDatabaseInstanceStorageDatabaseArrayOutput {
	return i.ToFederatedDatabaseInstanceStorageDatabaseArrayOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageDatabaseArray) ToFederatedDatabaseInstanceStorageDatabaseArrayOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageDatabaseArrayOutput)
}

func (i FederatedDatabaseInstanceStorageDatabaseArray) ToOutput(ctx context.Context) pulumix.Output[[]FederatedDatabaseInstanceStorageDatabase] {
	return pulumix.Output[[]FederatedDatabaseInstanceStorageDatabase]{
		OutputState: i.ToFederatedDatabaseInstanceStorageDatabaseArrayOutputWithContext(ctx).OutputState,
	}
}

type FederatedDatabaseInstanceStorageDatabaseOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabase)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageDatabaseOutput) ToFederatedDatabaseInstanceStorageDatabaseOutput() FederatedDatabaseInstanceStorageDatabaseOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseOutput) ToFederatedDatabaseInstanceStorageDatabaseOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseOutput) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageDatabase] {
	return pulumix.Output[FederatedDatabaseInstanceStorageDatabase]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceStorageDatabaseOutput) Collections() FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabase) []FederatedDatabaseInstanceStorageDatabaseCollection {
		return v.Collections
	}).(FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput)
}

func (o FederatedDatabaseInstanceStorageDatabaseOutput) MaxWildcardCollections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabase) *int { return v.MaxWildcardCollections }).(pulumi.IntPtrOutput)
}

// Name of the Atlas Federated Database Instance.
// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
func (o FederatedDatabaseInstanceStorageDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageDatabaseOutput) Views() FederatedDatabaseInstanceStorageDatabaseViewArrayOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabase) []FederatedDatabaseInstanceStorageDatabaseView {
		return v.Views
	}).(FederatedDatabaseInstanceStorageDatabaseViewArrayOutput)
}

type FederatedDatabaseInstanceStorageDatabaseArrayOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedDatabaseInstanceStorageDatabase)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageDatabaseArrayOutput) ToFederatedDatabaseInstanceStorageDatabaseArrayOutput() FederatedDatabaseInstanceStorageDatabaseArrayOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseArrayOutput) ToFederatedDatabaseInstanceStorageDatabaseArrayOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseArrayOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FederatedDatabaseInstanceStorageDatabase] {
	return pulumix.Output[[]FederatedDatabaseInstanceStorageDatabase]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceStorageDatabaseArrayOutput) Index(i pulumi.IntInput) FederatedDatabaseInstanceStorageDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FederatedDatabaseInstanceStorageDatabase {
		return vs[0].([]FederatedDatabaseInstanceStorageDatabase)[vs[1].(int)]
	}).(FederatedDatabaseInstanceStorageDatabaseOutput)
}

type FederatedDatabaseInstanceStorageDatabaseCollection struct {
	DataSources []FederatedDatabaseInstanceStorageDatabaseCollectionDataSource `pulumi:"dataSources"`
	// Name of the Atlas Federated Database Instance.
	// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
	// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
	Name *string `pulumi:"name"`
}

// FederatedDatabaseInstanceStorageDatabaseCollectionInput is an input type that accepts FederatedDatabaseInstanceStorageDatabaseCollectionArgs and FederatedDatabaseInstanceStorageDatabaseCollectionOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageDatabaseCollectionInput` via:
//
//	FederatedDatabaseInstanceStorageDatabaseCollectionArgs{...}
type FederatedDatabaseInstanceStorageDatabaseCollectionInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageDatabaseCollectionOutput() FederatedDatabaseInstanceStorageDatabaseCollectionOutput
	ToFederatedDatabaseInstanceStorageDatabaseCollectionOutputWithContext(context.Context) FederatedDatabaseInstanceStorageDatabaseCollectionOutput
}

type FederatedDatabaseInstanceStorageDatabaseCollectionArgs struct {
	DataSources FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayInput `pulumi:"dataSources"`
	// Name of the Atlas Federated Database Instance.
	// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
	// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FederatedDatabaseInstanceStorageDatabaseCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabaseCollection)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageDatabaseCollectionArgs) ToFederatedDatabaseInstanceStorageDatabaseCollectionOutput() FederatedDatabaseInstanceStorageDatabaseCollectionOutput {
	return i.ToFederatedDatabaseInstanceStorageDatabaseCollectionOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageDatabaseCollectionArgs) ToFederatedDatabaseInstanceStorageDatabaseCollectionOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageDatabaseCollectionOutput)
}

func (i FederatedDatabaseInstanceStorageDatabaseCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageDatabaseCollection] {
	return pulumix.Output[FederatedDatabaseInstanceStorageDatabaseCollection]{
		OutputState: i.ToFederatedDatabaseInstanceStorageDatabaseCollectionOutputWithContext(ctx).OutputState,
	}
}

// FederatedDatabaseInstanceStorageDatabaseCollectionArrayInput is an input type that accepts FederatedDatabaseInstanceStorageDatabaseCollectionArray and FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageDatabaseCollectionArrayInput` via:
//
//	FederatedDatabaseInstanceStorageDatabaseCollectionArray{ FederatedDatabaseInstanceStorageDatabaseCollectionArgs{...} }
type FederatedDatabaseInstanceStorageDatabaseCollectionArrayInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput() FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput
	ToFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutputWithContext(context.Context) FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput
}

type FederatedDatabaseInstanceStorageDatabaseCollectionArray []FederatedDatabaseInstanceStorageDatabaseCollectionInput

func (FederatedDatabaseInstanceStorageDatabaseCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedDatabaseInstanceStorageDatabaseCollection)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageDatabaseCollectionArray) ToFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput() FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput {
	return i.ToFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageDatabaseCollectionArray) ToFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput)
}

func (i FederatedDatabaseInstanceStorageDatabaseCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]FederatedDatabaseInstanceStorageDatabaseCollection] {
	return pulumix.Output[[]FederatedDatabaseInstanceStorageDatabaseCollection]{
		OutputState: i.ToFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type FederatedDatabaseInstanceStorageDatabaseCollectionOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageDatabaseCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabaseCollection)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionOutput) ToFederatedDatabaseInstanceStorageDatabaseCollectionOutput() FederatedDatabaseInstanceStorageDatabaseCollectionOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionOutput) ToFederatedDatabaseInstanceStorageDatabaseCollectionOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseCollectionOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageDatabaseCollection] {
	return pulumix.Output[FederatedDatabaseInstanceStorageDatabaseCollection]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionOutput) DataSources() FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseCollection) []FederatedDatabaseInstanceStorageDatabaseCollectionDataSource {
		return v.DataSources
	}).(FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput)
}

// Name of the Atlas Federated Database Instance.
// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
func (o FederatedDatabaseInstanceStorageDatabaseCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedDatabaseInstanceStorageDatabaseCollection)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput) ToFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput() FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput) ToFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FederatedDatabaseInstanceStorageDatabaseCollection] {
	return pulumix.Output[[]FederatedDatabaseInstanceStorageDatabaseCollection]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput) Index(i pulumi.IntInput) FederatedDatabaseInstanceStorageDatabaseCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FederatedDatabaseInstanceStorageDatabaseCollection {
		return vs[0].([]FederatedDatabaseInstanceStorageDatabaseCollection)[vs[1].(int)]
	}).(FederatedDatabaseInstanceStorageDatabaseCollectionOutput)
}

type FederatedDatabaseInstanceStorageDatabaseCollectionDataSource struct {
	AllowInsecure       *bool    `pulumi:"allowInsecure"`
	Collection          *string  `pulumi:"collection"`
	CollectionRegex     *string  `pulumi:"collectionRegex"`
	Database            *string  `pulumi:"database"`
	DatabaseRegex       *string  `pulumi:"databaseRegex"`
	DatasetName         *string  `pulumi:"datasetName"`
	DefaultFormat       *string  `pulumi:"defaultFormat"`
	Path                *string  `pulumi:"path"`
	ProvenanceFieldName *string  `pulumi:"provenanceFieldName"`
	StoreName           *string  `pulumi:"storeName"`
	Urls                []string `pulumi:"urls"`
}

// FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceInput is an input type that accepts FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs and FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceInput` via:
//
//	FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs{...}
type FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput() FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput
	ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutputWithContext(context.Context) FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput
}

type FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs struct {
	AllowInsecure       pulumi.BoolPtrInput     `pulumi:"allowInsecure"`
	Collection          pulumi.StringPtrInput   `pulumi:"collection"`
	CollectionRegex     pulumi.StringPtrInput   `pulumi:"collectionRegex"`
	Database            pulumi.StringPtrInput   `pulumi:"database"`
	DatabaseRegex       pulumi.StringPtrInput   `pulumi:"databaseRegex"`
	DatasetName         pulumi.StringPtrInput   `pulumi:"datasetName"`
	DefaultFormat       pulumi.StringPtrInput   `pulumi:"defaultFormat"`
	Path                pulumi.StringPtrInput   `pulumi:"path"`
	ProvenanceFieldName pulumi.StringPtrInput   `pulumi:"provenanceFieldName"`
	StoreName           pulumi.StringPtrInput   `pulumi:"storeName"`
	Urls                pulumi.StringArrayInput `pulumi:"urls"`
}

func (FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs) ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput() FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput {
	return i.ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs) ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput)
}

func (i FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageDatabaseCollectionDataSource] {
	return pulumix.Output[FederatedDatabaseInstanceStorageDatabaseCollectionDataSource]{
		OutputState: i.ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutputWithContext(ctx).OutputState,
	}
}

// FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayInput is an input type that accepts FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray and FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayInput` via:
//
//	FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray{ FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs{...} }
type FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput() FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput
	ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Context) FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput
}

type FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray []FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceInput

func (FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedDatabaseInstanceStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray) ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput() FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput {
	return i.ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray) ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput)
}

func (i FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]FederatedDatabaseInstanceStorageDatabaseCollectionDataSource] {
	return pulumix.Output[[]FederatedDatabaseInstanceStorageDatabaseCollectionDataSource]{
		OutputState: i.ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput() FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageDatabaseCollectionDataSource] {
	return pulumix.Output[FederatedDatabaseInstanceStorageDatabaseCollectionDataSource]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseCollectionDataSource) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) Collection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseCollectionDataSource) *string { return v.Collection }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) CollectionRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseCollectionDataSource) *string { return v.CollectionRegex }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseCollectionDataSource) *string { return v.Database }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) DatabaseRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseCollectionDataSource) *string { return v.DatabaseRegex }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseCollectionDataSource) *string { return v.DatasetName }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) DefaultFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseCollectionDataSource) *string { return v.DefaultFormat }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseCollectionDataSource) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) ProvenanceFieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseCollectionDataSource) *string {
		return v.ProvenanceFieldName
	}).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) StoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseCollectionDataSource) *string { return v.StoreName }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseCollectionDataSource) []string { return v.Urls }).(pulumi.StringArrayOutput)
}

type FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedDatabaseInstanceStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput) ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput() FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput) ToFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FederatedDatabaseInstanceStorageDatabaseCollectionDataSource] {
	return pulumix.Output[[]FederatedDatabaseInstanceStorageDatabaseCollectionDataSource]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput) Index(i pulumi.IntInput) FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FederatedDatabaseInstanceStorageDatabaseCollectionDataSource {
		return vs[0].([]FederatedDatabaseInstanceStorageDatabaseCollectionDataSource)[vs[1].(int)]
	}).(FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput)
}

type FederatedDatabaseInstanceStorageDatabaseView struct {
	// Name of the Atlas Federated Database Instance.
	// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
	// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
	Name     *string `pulumi:"name"`
	Pipeline *string `pulumi:"pipeline"`
	Source   *string `pulumi:"source"`
}

// FederatedDatabaseInstanceStorageDatabaseViewInput is an input type that accepts FederatedDatabaseInstanceStorageDatabaseViewArgs and FederatedDatabaseInstanceStorageDatabaseViewOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageDatabaseViewInput` via:
//
//	FederatedDatabaseInstanceStorageDatabaseViewArgs{...}
type FederatedDatabaseInstanceStorageDatabaseViewInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageDatabaseViewOutput() FederatedDatabaseInstanceStorageDatabaseViewOutput
	ToFederatedDatabaseInstanceStorageDatabaseViewOutputWithContext(context.Context) FederatedDatabaseInstanceStorageDatabaseViewOutput
}

type FederatedDatabaseInstanceStorageDatabaseViewArgs struct {
	// Name of the Atlas Federated Database Instance.
	// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
	// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Pipeline pulumi.StringPtrInput `pulumi:"pipeline"`
	Source   pulumi.StringPtrInput `pulumi:"source"`
}

func (FederatedDatabaseInstanceStorageDatabaseViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabaseView)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageDatabaseViewArgs) ToFederatedDatabaseInstanceStorageDatabaseViewOutput() FederatedDatabaseInstanceStorageDatabaseViewOutput {
	return i.ToFederatedDatabaseInstanceStorageDatabaseViewOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageDatabaseViewArgs) ToFederatedDatabaseInstanceStorageDatabaseViewOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageDatabaseViewOutput)
}

func (i FederatedDatabaseInstanceStorageDatabaseViewArgs) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageDatabaseView] {
	return pulumix.Output[FederatedDatabaseInstanceStorageDatabaseView]{
		OutputState: i.ToFederatedDatabaseInstanceStorageDatabaseViewOutputWithContext(ctx).OutputState,
	}
}

// FederatedDatabaseInstanceStorageDatabaseViewArrayInput is an input type that accepts FederatedDatabaseInstanceStorageDatabaseViewArray and FederatedDatabaseInstanceStorageDatabaseViewArrayOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageDatabaseViewArrayInput` via:
//
//	FederatedDatabaseInstanceStorageDatabaseViewArray{ FederatedDatabaseInstanceStorageDatabaseViewArgs{...} }
type FederatedDatabaseInstanceStorageDatabaseViewArrayInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageDatabaseViewArrayOutput() FederatedDatabaseInstanceStorageDatabaseViewArrayOutput
	ToFederatedDatabaseInstanceStorageDatabaseViewArrayOutputWithContext(context.Context) FederatedDatabaseInstanceStorageDatabaseViewArrayOutput
}

type FederatedDatabaseInstanceStorageDatabaseViewArray []FederatedDatabaseInstanceStorageDatabaseViewInput

func (FederatedDatabaseInstanceStorageDatabaseViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedDatabaseInstanceStorageDatabaseView)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageDatabaseViewArray) ToFederatedDatabaseInstanceStorageDatabaseViewArrayOutput() FederatedDatabaseInstanceStorageDatabaseViewArrayOutput {
	return i.ToFederatedDatabaseInstanceStorageDatabaseViewArrayOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageDatabaseViewArray) ToFederatedDatabaseInstanceStorageDatabaseViewArrayOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageDatabaseViewArrayOutput)
}

func (i FederatedDatabaseInstanceStorageDatabaseViewArray) ToOutput(ctx context.Context) pulumix.Output[[]FederatedDatabaseInstanceStorageDatabaseView] {
	return pulumix.Output[[]FederatedDatabaseInstanceStorageDatabaseView]{
		OutputState: i.ToFederatedDatabaseInstanceStorageDatabaseViewArrayOutputWithContext(ctx).OutputState,
	}
}

type FederatedDatabaseInstanceStorageDatabaseViewOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageDatabaseViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabaseView)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageDatabaseViewOutput) ToFederatedDatabaseInstanceStorageDatabaseViewOutput() FederatedDatabaseInstanceStorageDatabaseViewOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseViewOutput) ToFederatedDatabaseInstanceStorageDatabaseViewOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseViewOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseViewOutput) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageDatabaseView] {
	return pulumix.Output[FederatedDatabaseInstanceStorageDatabaseView]{
		OutputState: o.OutputState,
	}
}

// Name of the Atlas Federated Database Instance.
// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
func (o FederatedDatabaseInstanceStorageDatabaseViewOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseView) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageDatabaseViewOutput) Pipeline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseView) *string { return v.Pipeline }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageDatabaseViewOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageDatabaseView) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type FederatedDatabaseInstanceStorageDatabaseViewArrayOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageDatabaseViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedDatabaseInstanceStorageDatabaseView)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageDatabaseViewArrayOutput) ToFederatedDatabaseInstanceStorageDatabaseViewArrayOutput() FederatedDatabaseInstanceStorageDatabaseViewArrayOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseViewArrayOutput) ToFederatedDatabaseInstanceStorageDatabaseViewArrayOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageDatabaseViewArrayOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageDatabaseViewArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FederatedDatabaseInstanceStorageDatabaseView] {
	return pulumix.Output[[]FederatedDatabaseInstanceStorageDatabaseView]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceStorageDatabaseViewArrayOutput) Index(i pulumi.IntInput) FederatedDatabaseInstanceStorageDatabaseViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FederatedDatabaseInstanceStorageDatabaseView {
		return vs[0].([]FederatedDatabaseInstanceStorageDatabaseView)[vs[1].(int)]
	}).(FederatedDatabaseInstanceStorageDatabaseViewOutput)
}

type FederatedDatabaseInstanceStorageStore struct {
	AdditionalStorageClasses []string `pulumi:"additionalStorageClasses"`
	AllowInsecure            *bool    `pulumi:"allowInsecure"`
	Bucket                   *string  `pulumi:"bucket"`
	// Deprecated: this parameter is deprecated and will be removed by September 2024
	ClusterId     *string `pulumi:"clusterId"`
	ClusterName   *string `pulumi:"clusterName"`
	DefaultFormat *string `pulumi:"defaultFormat"`
	Delimiter     *string `pulumi:"delimiter"`
	IncludeTags   *bool   `pulumi:"includeTags"`
	// Name of the Atlas Federated Database Instance.
	// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
	// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
	Name   *string `pulumi:"name"`
	Prefix *string `pulumi:"prefix"`
	// The unique ID for the project to create a Federated Database Instance.
	ProjectId      *string                                              `pulumi:"projectId"`
	Provider       *string                                              `pulumi:"provider"`
	Public         *string                                              `pulumi:"public"`
	ReadPreference *FederatedDatabaseInstanceStorageStoreReadPreference `pulumi:"readPreference"`
	// Name of the region to which the Federanted Instnace routes client connections for data processing. See the [documention](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Data-Federation/operation/createFederatedDatabase) for the available region.
	Region *string  `pulumi:"region"`
	Urls   []string `pulumi:"urls"`
}

// FederatedDatabaseInstanceStorageStoreInput is an input type that accepts FederatedDatabaseInstanceStorageStoreArgs and FederatedDatabaseInstanceStorageStoreOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageStoreInput` via:
//
//	FederatedDatabaseInstanceStorageStoreArgs{...}
type FederatedDatabaseInstanceStorageStoreInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageStoreOutput() FederatedDatabaseInstanceStorageStoreOutput
	ToFederatedDatabaseInstanceStorageStoreOutputWithContext(context.Context) FederatedDatabaseInstanceStorageStoreOutput
}

type FederatedDatabaseInstanceStorageStoreArgs struct {
	AdditionalStorageClasses pulumi.StringArrayInput `pulumi:"additionalStorageClasses"`
	AllowInsecure            pulumi.BoolPtrInput     `pulumi:"allowInsecure"`
	Bucket                   pulumi.StringPtrInput   `pulumi:"bucket"`
	// Deprecated: this parameter is deprecated and will be removed by September 2024
	ClusterId     pulumi.StringPtrInput `pulumi:"clusterId"`
	ClusterName   pulumi.StringPtrInput `pulumi:"clusterName"`
	DefaultFormat pulumi.StringPtrInput `pulumi:"defaultFormat"`
	Delimiter     pulumi.StringPtrInput `pulumi:"delimiter"`
	IncludeTags   pulumi.BoolPtrInput   `pulumi:"includeTags"`
	// Name of the Atlas Federated Database Instance.
	// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
	// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The unique ID for the project to create a Federated Database Instance.
	ProjectId      pulumi.StringPtrInput                                       `pulumi:"projectId"`
	Provider       pulumi.StringPtrInput                                       `pulumi:"provider"`
	Public         pulumi.StringPtrInput                                       `pulumi:"public"`
	ReadPreference FederatedDatabaseInstanceStorageStoreReadPreferencePtrInput `pulumi:"readPreference"`
	// Name of the region to which the Federanted Instnace routes client connections for data processing. See the [documention](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Data-Federation/operation/createFederatedDatabase) for the available region.
	Region pulumi.StringPtrInput   `pulumi:"region"`
	Urls   pulumi.StringArrayInput `pulumi:"urls"`
}

func (FederatedDatabaseInstanceStorageStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageStore)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageStoreArgs) ToFederatedDatabaseInstanceStorageStoreOutput() FederatedDatabaseInstanceStorageStoreOutput {
	return i.ToFederatedDatabaseInstanceStorageStoreOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageStoreArgs) ToFederatedDatabaseInstanceStorageStoreOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageStoreOutput)
}

func (i FederatedDatabaseInstanceStorageStoreArgs) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageStore] {
	return pulumix.Output[FederatedDatabaseInstanceStorageStore]{
		OutputState: i.ToFederatedDatabaseInstanceStorageStoreOutputWithContext(ctx).OutputState,
	}
}

// FederatedDatabaseInstanceStorageStoreArrayInput is an input type that accepts FederatedDatabaseInstanceStorageStoreArray and FederatedDatabaseInstanceStorageStoreArrayOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageStoreArrayInput` via:
//
//	FederatedDatabaseInstanceStorageStoreArray{ FederatedDatabaseInstanceStorageStoreArgs{...} }
type FederatedDatabaseInstanceStorageStoreArrayInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageStoreArrayOutput() FederatedDatabaseInstanceStorageStoreArrayOutput
	ToFederatedDatabaseInstanceStorageStoreArrayOutputWithContext(context.Context) FederatedDatabaseInstanceStorageStoreArrayOutput
}

type FederatedDatabaseInstanceStorageStoreArray []FederatedDatabaseInstanceStorageStoreInput

func (FederatedDatabaseInstanceStorageStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedDatabaseInstanceStorageStore)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageStoreArray) ToFederatedDatabaseInstanceStorageStoreArrayOutput() FederatedDatabaseInstanceStorageStoreArrayOutput {
	return i.ToFederatedDatabaseInstanceStorageStoreArrayOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageStoreArray) ToFederatedDatabaseInstanceStorageStoreArrayOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageStoreArrayOutput)
}

func (i FederatedDatabaseInstanceStorageStoreArray) ToOutput(ctx context.Context) pulumix.Output[[]FederatedDatabaseInstanceStorageStore] {
	return pulumix.Output[[]FederatedDatabaseInstanceStorageStore]{
		OutputState: i.ToFederatedDatabaseInstanceStorageStoreArrayOutputWithContext(ctx).OutputState,
	}
}

type FederatedDatabaseInstanceStorageStoreOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageStore)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageStoreOutput) ToFederatedDatabaseInstanceStorageStoreOutput() FederatedDatabaseInstanceStorageStoreOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreOutput) ToFederatedDatabaseInstanceStorageStoreOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreOutput) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageStore] {
	return pulumix.Output[FederatedDatabaseInstanceStorageStore]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceStorageStoreOutput) AdditionalStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) []string { return v.AdditionalStorageClasses }).(pulumi.StringArrayOutput)
}

func (o FederatedDatabaseInstanceStorageStoreOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// Deprecated: this parameter is deprecated and will be removed by September 2024
func (o FederatedDatabaseInstanceStorageStoreOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreOutput) DefaultFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) *string { return v.DefaultFormat }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreOutput) IncludeTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) *bool { return v.IncludeTags }).(pulumi.BoolPtrOutput)
}

// Name of the Atlas Federated Database Instance.
// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
func (o FederatedDatabaseInstanceStorageStoreOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The unique ID for the project to create a Federated Database Instance.
func (o FederatedDatabaseInstanceStorageStoreOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreOutput) Public() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) *string { return v.Public }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreOutput) ReadPreference() FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) *FederatedDatabaseInstanceStorageStoreReadPreference {
		return v.ReadPreference
	}).(FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput)
}

// Name of the region to which the Federanted Instnace routes client connections for data processing. See the [documention](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Data-Federation/operation/createFederatedDatabase) for the available region.
func (o FederatedDatabaseInstanceStorageStoreOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStore) []string { return v.Urls }).(pulumi.StringArrayOutput)
}

type FederatedDatabaseInstanceStorageStoreArrayOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedDatabaseInstanceStorageStore)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageStoreArrayOutput) ToFederatedDatabaseInstanceStorageStoreArrayOutput() FederatedDatabaseInstanceStorageStoreArrayOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreArrayOutput) ToFederatedDatabaseInstanceStorageStoreArrayOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreArrayOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FederatedDatabaseInstanceStorageStore] {
	return pulumix.Output[[]FederatedDatabaseInstanceStorageStore]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceStorageStoreArrayOutput) Index(i pulumi.IntInput) FederatedDatabaseInstanceStorageStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FederatedDatabaseInstanceStorageStore {
		return vs[0].([]FederatedDatabaseInstanceStorageStore)[vs[1].(int)]
	}).(FederatedDatabaseInstanceStorageStoreOutput)
}

type FederatedDatabaseInstanceStorageStoreReadPreference struct {
	MaxStalenessSeconds *int                                                        `pulumi:"maxStalenessSeconds"`
	Mode                *string                                                     `pulumi:"mode"`
	TagSets             []FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet `pulumi:"tagSets"`
}

// FederatedDatabaseInstanceStorageStoreReadPreferenceInput is an input type that accepts FederatedDatabaseInstanceStorageStoreReadPreferenceArgs and FederatedDatabaseInstanceStorageStoreReadPreferenceOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageStoreReadPreferenceInput` via:
//
//	FederatedDatabaseInstanceStorageStoreReadPreferenceArgs{...}
type FederatedDatabaseInstanceStorageStoreReadPreferenceInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageStoreReadPreferenceOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceOutput
	ToFederatedDatabaseInstanceStorageStoreReadPreferenceOutputWithContext(context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceOutput
}

type FederatedDatabaseInstanceStorageStoreReadPreferenceArgs struct {
	MaxStalenessSeconds pulumi.IntPtrInput                                                  `pulumi:"maxStalenessSeconds"`
	Mode                pulumi.StringPtrInput                                               `pulumi:"mode"`
	TagSets             FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayInput `pulumi:"tagSets"`
}

func (FederatedDatabaseInstanceStorageStoreReadPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageStoreReadPreference)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceArgs) ToFederatedDatabaseInstanceStorageStoreReadPreferenceOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceOutput {
	return i.ToFederatedDatabaseInstanceStorageStoreReadPreferenceOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceArgs) ToFederatedDatabaseInstanceStorageStoreReadPreferenceOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageStoreReadPreferenceOutput)
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceArgs) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageStoreReadPreference] {
	return pulumix.Output[FederatedDatabaseInstanceStorageStoreReadPreference]{
		OutputState: i.ToFederatedDatabaseInstanceStorageStoreReadPreferenceOutputWithContext(ctx).OutputState,
	}
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceArgs) ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput() FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput {
	return i.ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceArgs) ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageStoreReadPreferenceOutput).ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutputWithContext(ctx)
}

// FederatedDatabaseInstanceStorageStoreReadPreferencePtrInput is an input type that accepts FederatedDatabaseInstanceStorageStoreReadPreferenceArgs, FederatedDatabaseInstanceStorageStoreReadPreferencePtr and FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageStoreReadPreferencePtrInput` via:
//
//	        FederatedDatabaseInstanceStorageStoreReadPreferenceArgs{...}
//
//	or:
//
//	        nil
type FederatedDatabaseInstanceStorageStoreReadPreferencePtrInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput() FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput
	ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutputWithContext(context.Context) FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput
}

type federatedDatabaseInstanceStorageStoreReadPreferencePtrType FederatedDatabaseInstanceStorageStoreReadPreferenceArgs

func FederatedDatabaseInstanceStorageStoreReadPreferencePtr(v *FederatedDatabaseInstanceStorageStoreReadPreferenceArgs) FederatedDatabaseInstanceStorageStoreReadPreferencePtrInput {
	return (*federatedDatabaseInstanceStorageStoreReadPreferencePtrType)(v)
}

func (*federatedDatabaseInstanceStorageStoreReadPreferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FederatedDatabaseInstanceStorageStoreReadPreference)(nil)).Elem()
}

func (i *federatedDatabaseInstanceStorageStoreReadPreferencePtrType) ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput() FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput {
	return i.ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutputWithContext(context.Background())
}

func (i *federatedDatabaseInstanceStorageStoreReadPreferencePtrType) ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput)
}

func (i *federatedDatabaseInstanceStorageStoreReadPreferencePtrType) ToOutput(ctx context.Context) pulumix.Output[*FederatedDatabaseInstanceStorageStoreReadPreference] {
	return pulumix.Output[*FederatedDatabaseInstanceStorageStoreReadPreference]{
		OutputState: i.ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutputWithContext(ctx).OutputState,
	}
}

type FederatedDatabaseInstanceStorageStoreReadPreferenceOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageStoreReadPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageStoreReadPreference)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceOutput) ToFederatedDatabaseInstanceStorageStoreReadPreferenceOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceOutput) ToFederatedDatabaseInstanceStorageStoreReadPreferenceOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceOutput) ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput() FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput {
	return o.ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutputWithContext(context.Background())
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceOutput) ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FederatedDatabaseInstanceStorageStoreReadPreference) *FederatedDatabaseInstanceStorageStoreReadPreference {
		return &v
	}).(FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceOutput) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageStoreReadPreference] {
	return pulumix.Output[FederatedDatabaseInstanceStorageStoreReadPreference]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceOutput) MaxStalenessSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStoreReadPreference) *int { return v.MaxStalenessSeconds }).(pulumi.IntPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStoreReadPreference) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceOutput) TagSets() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStoreReadPreference) []FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet {
		return v.TagSets
	}).(FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput)
}

type FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FederatedDatabaseInstanceStorageStoreReadPreference)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput) ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput() FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput) ToFederatedDatabaseInstanceStorageStoreReadPreferencePtrOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FederatedDatabaseInstanceStorageStoreReadPreference] {
	return pulumix.Output[*FederatedDatabaseInstanceStorageStoreReadPreference]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput) Elem() FederatedDatabaseInstanceStorageStoreReadPreferenceOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceStorageStoreReadPreference) FederatedDatabaseInstanceStorageStoreReadPreference {
		if v != nil {
			return *v
		}
		var ret FederatedDatabaseInstanceStorageStoreReadPreference
		return ret
	}).(FederatedDatabaseInstanceStorageStoreReadPreferenceOutput)
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput) MaxStalenessSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceStorageStoreReadPreference) *int {
		if v == nil {
			return nil
		}
		return v.MaxStalenessSeconds
	}).(pulumi.IntPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceStorageStoreReadPreference) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput) TagSets() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput {
	return o.ApplyT(func(v *FederatedDatabaseInstanceStorageStoreReadPreference) []FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet {
		if v == nil {
			return nil
		}
		return v.TagSets
	}).(FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput)
}

type FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet struct {
	Tags []FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag `pulumi:"tags"`
}

// FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetInput is an input type that accepts FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs and FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetInput` via:
//
//	FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs{...}
type FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput
	ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutputWithContext(context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput
}

type FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs struct {
	Tags FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayInput `pulumi:"tags"`
}

func (FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput {
	return i.ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput)
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet] {
	return pulumix.Output[FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet]{
		OutputState: i.ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutputWithContext(ctx).OutputState,
	}
}

// FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayInput is an input type that accepts FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray and FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayInput` via:
//
//	FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray{ FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs{...} }
type FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput
	ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutputWithContext(context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput
}

type FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray []FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetInput

func (FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput {
	return i.ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput)
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray) ToOutput(ctx context.Context) pulumix.Output[[]FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet] {
	return pulumix.Output[[]FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet]{
		OutputState: i.ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutputWithContext(ctx).OutputState,
	}
}

type FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet] {
	return pulumix.Output[FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput) Tags() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet) []FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag {
		return v.Tags
	}).(FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput)
}

type FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet] {
	return pulumix.Output[[]FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput) Index(i pulumi.IntInput) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet {
		return vs[0].([]FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet)[vs[1].(int)]
	}).(FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput)
}

type FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag struct {
	// Name of the Atlas Federated Database Instance.
	// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
	// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagInput is an input type that accepts FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs and FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagInput` via:
//
//	FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs{...}
type FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput
	ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutputWithContext(context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput
}

type FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs struct {
	// Name of the Atlas Federated Database Instance.
	// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
	// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput {
	return i.ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput)
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag] {
	return pulumix.Output[FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag]{
		OutputState: i.ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutputWithContext(ctx).OutputState,
	}
}

// FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayInput is an input type that accepts FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray and FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput values.
// You can construct a concrete instance of `FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayInput` via:
//
//	FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray{ FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs{...} }
type FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayInput interface {
	pulumi.Input

	ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput
	ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput
}

type FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray []FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagInput

func (FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag)(nil)).Elem()
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput {
	return i.ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(context.Background())
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput)
}

func (i FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray) ToOutput(ctx context.Context) pulumix.Output[[]FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag] {
	return pulumix.Output[[]FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag]{
		OutputState: i.ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(ctx).OutputState,
	}
}

type FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput) ToOutput(ctx context.Context) pulumix.Output[FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag] {
	return pulumix.Output[FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag]{
		OutputState: o.OutputState,
	}
}

// Name of the Atlas Federated Database Instance.
// ### `cloudProviderConfig` - (Optional) Cloud provider linked to this data federated instance.
// #### `aws` - (Required) AWS provider of the cloud service where the Federated Database Instance can access the S3 Bucket. Note this parameter is only required if using `cloudProviderConfig` since AWS is currently the only supported Cloud vendor on this feature at this time.
func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput struct{ *pulumi.OutputState }

func (FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag)(nil)).Elem()
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput() FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput) ToFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(ctx context.Context) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput {
	return o
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag] {
	return pulumix.Output[[]FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag]{
		OutputState: o.OutputState,
	}
}

func (o FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput) Index(i pulumi.IntInput) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag {
		return vs[0].([]FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag)[vs[1].(int)]
	}).(FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput)
}

type FederatedSettingsOrgRoleMappingRoleAssignment struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId *string `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId *string `pulumi:"orgId"`
	// Specifies the Roles that are attached to the Role Mapping. Available role IDs can be found on [the User Roles
	// Reference](https://www.mongodb.com/docs/atlas/reference/user-roles/).
	Roles []string `pulumi:"roles"`
}

// FederatedSettingsOrgRoleMappingRoleAssignmentInput is an input type that accepts FederatedSettingsOrgRoleMappingRoleAssignmentArgs and FederatedSettingsOrgRoleMappingRoleAssignmentOutput values.
// You can construct a concrete instance of `FederatedSettingsOrgRoleMappingRoleAssignmentInput` via:
//
//	FederatedSettingsOrgRoleMappingRoleAssignmentArgs{...}
type FederatedSettingsOrgRoleMappingRoleAssignmentInput interface {
	pulumi.Input

	ToFederatedSettingsOrgRoleMappingRoleAssignmentOutput() FederatedSettingsOrgRoleMappingRoleAssignmentOutput
	ToFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(context.Context) FederatedSettingsOrgRoleMappingRoleAssignmentOutput
}

type FederatedSettingsOrgRoleMappingRoleAssignmentArgs struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Specifies the Roles that are attached to the Role Mapping. Available role IDs can be found on [the User Roles
	// Reference](https://www.mongodb.com/docs/atlas/reference/user-roles/).
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (FederatedSettingsOrgRoleMappingRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i FederatedSettingsOrgRoleMappingRoleAssignmentArgs) ToFederatedSettingsOrgRoleMappingRoleAssignmentOutput() FederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return i.ToFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(context.Background())
}

func (i FederatedSettingsOrgRoleMappingRoleAssignmentArgs) ToFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) FederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedSettingsOrgRoleMappingRoleAssignmentOutput)
}

func (i FederatedSettingsOrgRoleMappingRoleAssignmentArgs) ToOutput(ctx context.Context) pulumix.Output[FederatedSettingsOrgRoleMappingRoleAssignment] {
	return pulumix.Output[FederatedSettingsOrgRoleMappingRoleAssignment]{
		OutputState: i.ToFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(ctx).OutputState,
	}
}

// FederatedSettingsOrgRoleMappingRoleAssignmentArrayInput is an input type that accepts FederatedSettingsOrgRoleMappingRoleAssignmentArray and FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `FederatedSettingsOrgRoleMappingRoleAssignmentArrayInput` via:
//
//	FederatedSettingsOrgRoleMappingRoleAssignmentArray{ FederatedSettingsOrgRoleMappingRoleAssignmentArgs{...} }
type FederatedSettingsOrgRoleMappingRoleAssignmentArrayInput interface {
	pulumi.Input

	ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput() FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput
	ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Context) FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput
}

type FederatedSettingsOrgRoleMappingRoleAssignmentArray []FederatedSettingsOrgRoleMappingRoleAssignmentInput

func (FederatedSettingsOrgRoleMappingRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i FederatedSettingsOrgRoleMappingRoleAssignmentArray) ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput() FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return i.ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i FederatedSettingsOrgRoleMappingRoleAssignmentArray) ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput)
}

func (i FederatedSettingsOrgRoleMappingRoleAssignmentArray) ToOutput(ctx context.Context) pulumix.Output[[]FederatedSettingsOrgRoleMappingRoleAssignment] {
	return pulumix.Output[[]FederatedSettingsOrgRoleMappingRoleAssignment]{
		OutputState: i.ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx).OutputState,
	}
}

type FederatedSettingsOrgRoleMappingRoleAssignmentOutput struct{ *pulumi.OutputState }

func (FederatedSettingsOrgRoleMappingRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o FederatedSettingsOrgRoleMappingRoleAssignmentOutput) ToFederatedSettingsOrgRoleMappingRoleAssignmentOutput() FederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return o
}

func (o FederatedSettingsOrgRoleMappingRoleAssignmentOutput) ToFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) FederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return o
}

func (o FederatedSettingsOrgRoleMappingRoleAssignmentOutput) ToOutput(ctx context.Context) pulumix.Output[FederatedSettingsOrgRoleMappingRoleAssignment] {
	return pulumix.Output[FederatedSettingsOrgRoleMappingRoleAssignment]{
		OutputState: o.OutputState,
	}
}

// Unique identifier of the project to which you want the role mapping to apply.
func (o FederatedSettingsOrgRoleMappingRoleAssignmentOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedSettingsOrgRoleMappingRoleAssignment) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o FederatedSettingsOrgRoleMappingRoleAssignmentOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FederatedSettingsOrgRoleMappingRoleAssignment) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Specifies the Roles that are attached to the Role Mapping. Available role IDs can be found on [the User Roles
// Reference](https://www.mongodb.com/docs/atlas/reference/user-roles/).
func (o FederatedSettingsOrgRoleMappingRoleAssignmentOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FederatedSettingsOrgRoleMappingRoleAssignment) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput() FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) ToFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FederatedSettingsOrgRoleMappingRoleAssignment] {
	return pulumix.Output[[]FederatedSettingsOrgRoleMappingRoleAssignment]{
		OutputState: o.OutputState,
	}
}

func (o FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) Index(i pulumi.IntInput) FederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FederatedSettingsOrgRoleMappingRoleAssignment {
		return vs[0].([]FederatedSettingsOrgRoleMappingRoleAssignment)[vs[1].(int)]
	}).(FederatedSettingsOrgRoleMappingRoleAssignmentOutput)
}

type GlobalClusterConfigCustomZoneMapping struct {
	// The ISO location code to which you want to map a zone in your Global Cluster. You can find a list of all supported location codes [here](https://cloud.mongodb.com/static/atlas/country_iso_codes.txt).
	Location *string `pulumi:"location"`
	// The name of the zone in your Global Cluster that you want to map to location.
	Zone *string `pulumi:"zone"`
}

// GlobalClusterConfigCustomZoneMappingInput is an input type that accepts GlobalClusterConfigCustomZoneMappingArgs and GlobalClusterConfigCustomZoneMappingOutput values.
// You can construct a concrete instance of `GlobalClusterConfigCustomZoneMappingInput` via:
//
//	GlobalClusterConfigCustomZoneMappingArgs{...}
type GlobalClusterConfigCustomZoneMappingInput interface {
	pulumi.Input

	ToGlobalClusterConfigCustomZoneMappingOutput() GlobalClusterConfigCustomZoneMappingOutput
	ToGlobalClusterConfigCustomZoneMappingOutputWithContext(context.Context) GlobalClusterConfigCustomZoneMappingOutput
}

type GlobalClusterConfigCustomZoneMappingArgs struct {
	// The ISO location code to which you want to map a zone in your Global Cluster. You can find a list of all supported location codes [here](https://cloud.mongodb.com/static/atlas/country_iso_codes.txt).
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the zone in your Global Cluster that you want to map to location.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (GlobalClusterConfigCustomZoneMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (i GlobalClusterConfigCustomZoneMappingArgs) ToGlobalClusterConfigCustomZoneMappingOutput() GlobalClusterConfigCustomZoneMappingOutput {
	return i.ToGlobalClusterConfigCustomZoneMappingOutputWithContext(context.Background())
}

func (i GlobalClusterConfigCustomZoneMappingArgs) ToGlobalClusterConfigCustomZoneMappingOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigCustomZoneMappingOutput)
}

func (i GlobalClusterConfigCustomZoneMappingArgs) ToOutput(ctx context.Context) pulumix.Output[GlobalClusterConfigCustomZoneMapping] {
	return pulumix.Output[GlobalClusterConfigCustomZoneMapping]{
		OutputState: i.ToGlobalClusterConfigCustomZoneMappingOutputWithContext(ctx).OutputState,
	}
}

// GlobalClusterConfigCustomZoneMappingArrayInput is an input type that accepts GlobalClusterConfigCustomZoneMappingArray and GlobalClusterConfigCustomZoneMappingArrayOutput values.
// You can construct a concrete instance of `GlobalClusterConfigCustomZoneMappingArrayInput` via:
//
//	GlobalClusterConfigCustomZoneMappingArray{ GlobalClusterConfigCustomZoneMappingArgs{...} }
type GlobalClusterConfigCustomZoneMappingArrayInput interface {
	pulumi.Input

	ToGlobalClusterConfigCustomZoneMappingArrayOutput() GlobalClusterConfigCustomZoneMappingArrayOutput
	ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(context.Context) GlobalClusterConfigCustomZoneMappingArrayOutput
}

type GlobalClusterConfigCustomZoneMappingArray []GlobalClusterConfigCustomZoneMappingInput

func (GlobalClusterConfigCustomZoneMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (i GlobalClusterConfigCustomZoneMappingArray) ToGlobalClusterConfigCustomZoneMappingArrayOutput() GlobalClusterConfigCustomZoneMappingArrayOutput {
	return i.ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(context.Background())
}

func (i GlobalClusterConfigCustomZoneMappingArray) ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigCustomZoneMappingArrayOutput)
}

func (i GlobalClusterConfigCustomZoneMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]GlobalClusterConfigCustomZoneMapping] {
	return pulumix.Output[[]GlobalClusterConfigCustomZoneMapping]{
		OutputState: i.ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type GlobalClusterConfigCustomZoneMappingOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigCustomZoneMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (o GlobalClusterConfigCustomZoneMappingOutput) ToGlobalClusterConfigCustomZoneMappingOutput() GlobalClusterConfigCustomZoneMappingOutput {
	return o
}

func (o GlobalClusterConfigCustomZoneMappingOutput) ToGlobalClusterConfigCustomZoneMappingOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingOutput {
	return o
}

func (o GlobalClusterConfigCustomZoneMappingOutput) ToOutput(ctx context.Context) pulumix.Output[GlobalClusterConfigCustomZoneMapping] {
	return pulumix.Output[GlobalClusterConfigCustomZoneMapping]{
		OutputState: o.OutputState,
	}
}

// The ISO location code to which you want to map a zone in your Global Cluster. You can find a list of all supported location codes [here](https://cloud.mongodb.com/static/atlas/country_iso_codes.txt).
func (o GlobalClusterConfigCustomZoneMappingOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClusterConfigCustomZoneMapping) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the zone in your Global Cluster that you want to map to location.
func (o GlobalClusterConfigCustomZoneMappingOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClusterConfigCustomZoneMapping) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type GlobalClusterConfigCustomZoneMappingArrayOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigCustomZoneMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (o GlobalClusterConfigCustomZoneMappingArrayOutput) ToGlobalClusterConfigCustomZoneMappingArrayOutput() GlobalClusterConfigCustomZoneMappingArrayOutput {
	return o
}

func (o GlobalClusterConfigCustomZoneMappingArrayOutput) ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingArrayOutput {
	return o
}

func (o GlobalClusterConfigCustomZoneMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GlobalClusterConfigCustomZoneMapping] {
	return pulumix.Output[[]GlobalClusterConfigCustomZoneMapping]{
		OutputState: o.OutputState,
	}
}

func (o GlobalClusterConfigCustomZoneMappingArrayOutput) Index(i pulumi.IntInput) GlobalClusterConfigCustomZoneMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalClusterConfigCustomZoneMapping {
		return vs[0].([]GlobalClusterConfigCustomZoneMapping)[vs[1].(int)]
	}).(GlobalClusterConfigCustomZoneMappingOutput)
}

type GlobalClusterConfigManagedNamespace struct {
	// The name of the collection associated with the managed namespace.
	Collection string `pulumi:"collection"`
	// The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey string `pulumi:"customShardKey"`
	// The name of the database containing the collection.
	Db string `pulumi:"db"`
	// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
	IsCustomShardKeyHashed *bool `pulumi:"isCustomShardKeyHashed"`
	// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
	IsShardKeyUnique *bool `pulumi:"isShardKeyUnique"`
}

// GlobalClusterConfigManagedNamespaceInput is an input type that accepts GlobalClusterConfigManagedNamespaceArgs and GlobalClusterConfigManagedNamespaceOutput values.
// You can construct a concrete instance of `GlobalClusterConfigManagedNamespaceInput` via:
//
//	GlobalClusterConfigManagedNamespaceArgs{...}
type GlobalClusterConfigManagedNamespaceInput interface {
	pulumi.Input

	ToGlobalClusterConfigManagedNamespaceOutput() GlobalClusterConfigManagedNamespaceOutput
	ToGlobalClusterConfigManagedNamespaceOutputWithContext(context.Context) GlobalClusterConfigManagedNamespaceOutput
}

type GlobalClusterConfigManagedNamespaceArgs struct {
	// The name of the collection associated with the managed namespace.
	Collection pulumi.StringInput `pulumi:"collection"`
	// The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey pulumi.StringInput `pulumi:"customShardKey"`
	// The name of the database containing the collection.
	Db pulumi.StringInput `pulumi:"db"`
	// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
	IsCustomShardKeyHashed pulumi.BoolPtrInput `pulumi:"isCustomShardKeyHashed"`
	// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
	IsShardKeyUnique pulumi.BoolPtrInput `pulumi:"isShardKeyUnique"`
}

func (GlobalClusterConfigManagedNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GlobalClusterConfigManagedNamespaceArgs) ToGlobalClusterConfigManagedNamespaceOutput() GlobalClusterConfigManagedNamespaceOutput {
	return i.ToGlobalClusterConfigManagedNamespaceOutputWithContext(context.Background())
}

func (i GlobalClusterConfigManagedNamespaceArgs) ToGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigManagedNamespaceOutput)
}

func (i GlobalClusterConfigManagedNamespaceArgs) ToOutput(ctx context.Context) pulumix.Output[GlobalClusterConfigManagedNamespace] {
	return pulumix.Output[GlobalClusterConfigManagedNamespace]{
		OutputState: i.ToGlobalClusterConfigManagedNamespaceOutputWithContext(ctx).OutputState,
	}
}

// GlobalClusterConfigManagedNamespaceArrayInput is an input type that accepts GlobalClusterConfigManagedNamespaceArray and GlobalClusterConfigManagedNamespaceArrayOutput values.
// You can construct a concrete instance of `GlobalClusterConfigManagedNamespaceArrayInput` via:
//
//	GlobalClusterConfigManagedNamespaceArray{ GlobalClusterConfigManagedNamespaceArgs{...} }
type GlobalClusterConfigManagedNamespaceArrayInput interface {
	pulumi.Input

	ToGlobalClusterConfigManagedNamespaceArrayOutput() GlobalClusterConfigManagedNamespaceArrayOutput
	ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Context) GlobalClusterConfigManagedNamespaceArrayOutput
}

type GlobalClusterConfigManagedNamespaceArray []GlobalClusterConfigManagedNamespaceInput

func (GlobalClusterConfigManagedNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GlobalClusterConfigManagedNamespaceArray) ToGlobalClusterConfigManagedNamespaceArrayOutput() GlobalClusterConfigManagedNamespaceArrayOutput {
	return i.ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Background())
}

func (i GlobalClusterConfigManagedNamespaceArray) ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigManagedNamespaceArrayOutput)
}

func (i GlobalClusterConfigManagedNamespaceArray) ToOutput(ctx context.Context) pulumix.Output[[]GlobalClusterConfigManagedNamespace] {
	return pulumix.Output[[]GlobalClusterConfigManagedNamespace]{
		OutputState: i.ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx).OutputState,
	}
}

type GlobalClusterConfigManagedNamespaceOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigManagedNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GlobalClusterConfigManagedNamespaceOutput) ToGlobalClusterConfigManagedNamespaceOutput() GlobalClusterConfigManagedNamespaceOutput {
	return o
}

func (o GlobalClusterConfigManagedNamespaceOutput) ToGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceOutput {
	return o
}

func (o GlobalClusterConfigManagedNamespaceOutput) ToOutput(ctx context.Context) pulumix.Output[GlobalClusterConfigManagedNamespace] {
	return pulumix.Output[GlobalClusterConfigManagedNamespace]{
		OutputState: o.OutputState,
	}
}

// The name of the collection associated with the managed namespace.
func (o GlobalClusterConfigManagedNamespaceOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) string { return v.Collection }).(pulumi.StringOutput)
}

// The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
func (o GlobalClusterConfigManagedNamespaceOutput) CustomShardKey() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) string { return v.CustomShardKey }).(pulumi.StringOutput)
}

// The name of the database containing the collection.
func (o GlobalClusterConfigManagedNamespaceOutput) Db() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) string { return v.Db }).(pulumi.StringOutput)
}

// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
func (o GlobalClusterConfigManagedNamespaceOutput) IsCustomShardKeyHashed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) *bool { return v.IsCustomShardKeyHashed }).(pulumi.BoolPtrOutput)
}

// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
func (o GlobalClusterConfigManagedNamespaceOutput) IsShardKeyUnique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) *bool { return v.IsShardKeyUnique }).(pulumi.BoolPtrOutput)
}

type GlobalClusterConfigManagedNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigManagedNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GlobalClusterConfigManagedNamespaceArrayOutput) ToGlobalClusterConfigManagedNamespaceArrayOutput() GlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GlobalClusterConfigManagedNamespaceArrayOutput) ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GlobalClusterConfigManagedNamespaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GlobalClusterConfigManagedNamespace] {
	return pulumix.Output[[]GlobalClusterConfigManagedNamespace]{
		OutputState: o.OutputState,
	}
}

func (o GlobalClusterConfigManagedNamespaceArrayOutput) Index(i pulumi.IntInput) GlobalClusterConfigManagedNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalClusterConfigManagedNamespace {
		return vs[0].([]GlobalClusterConfigManagedNamespace)[vs[1].(int)]
	}).(GlobalClusterConfigManagedNamespaceOutput)
}

type LdapConfigurationUserToDnMapping struct {
	LdapQuery    *string `pulumi:"ldapQuery"`
	Match        *string `pulumi:"match"`
	Substitution *string `pulumi:"substitution"`
}

// LdapConfigurationUserToDnMappingInput is an input type that accepts LdapConfigurationUserToDnMappingArgs and LdapConfigurationUserToDnMappingOutput values.
// You can construct a concrete instance of `LdapConfigurationUserToDnMappingInput` via:
//
//	LdapConfigurationUserToDnMappingArgs{...}
type LdapConfigurationUserToDnMappingInput interface {
	pulumi.Input

	ToLdapConfigurationUserToDnMappingOutput() LdapConfigurationUserToDnMappingOutput
	ToLdapConfigurationUserToDnMappingOutputWithContext(context.Context) LdapConfigurationUserToDnMappingOutput
}

type LdapConfigurationUserToDnMappingArgs struct {
	LdapQuery    pulumi.StringPtrInput `pulumi:"ldapQuery"`
	Match        pulumi.StringPtrInput `pulumi:"match"`
	Substitution pulumi.StringPtrInput `pulumi:"substitution"`
}

func (LdapConfigurationUserToDnMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (i LdapConfigurationUserToDnMappingArgs) ToLdapConfigurationUserToDnMappingOutput() LdapConfigurationUserToDnMappingOutput {
	return i.ToLdapConfigurationUserToDnMappingOutputWithContext(context.Background())
}

func (i LdapConfigurationUserToDnMappingArgs) ToLdapConfigurationUserToDnMappingOutputWithContext(ctx context.Context) LdapConfigurationUserToDnMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapConfigurationUserToDnMappingOutput)
}

func (i LdapConfigurationUserToDnMappingArgs) ToOutput(ctx context.Context) pulumix.Output[LdapConfigurationUserToDnMapping] {
	return pulumix.Output[LdapConfigurationUserToDnMapping]{
		OutputState: i.ToLdapConfigurationUserToDnMappingOutputWithContext(ctx).OutputState,
	}
}

// LdapConfigurationUserToDnMappingArrayInput is an input type that accepts LdapConfigurationUserToDnMappingArray and LdapConfigurationUserToDnMappingArrayOutput values.
// You can construct a concrete instance of `LdapConfigurationUserToDnMappingArrayInput` via:
//
//	LdapConfigurationUserToDnMappingArray{ LdapConfigurationUserToDnMappingArgs{...} }
type LdapConfigurationUserToDnMappingArrayInput interface {
	pulumi.Input

	ToLdapConfigurationUserToDnMappingArrayOutput() LdapConfigurationUserToDnMappingArrayOutput
	ToLdapConfigurationUserToDnMappingArrayOutputWithContext(context.Context) LdapConfigurationUserToDnMappingArrayOutput
}

type LdapConfigurationUserToDnMappingArray []LdapConfigurationUserToDnMappingInput

func (LdapConfigurationUserToDnMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (i LdapConfigurationUserToDnMappingArray) ToLdapConfigurationUserToDnMappingArrayOutput() LdapConfigurationUserToDnMappingArrayOutput {
	return i.ToLdapConfigurationUserToDnMappingArrayOutputWithContext(context.Background())
}

func (i LdapConfigurationUserToDnMappingArray) ToLdapConfigurationUserToDnMappingArrayOutputWithContext(ctx context.Context) LdapConfigurationUserToDnMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapConfigurationUserToDnMappingArrayOutput)
}

func (i LdapConfigurationUserToDnMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]LdapConfigurationUserToDnMapping] {
	return pulumix.Output[[]LdapConfigurationUserToDnMapping]{
		OutputState: i.ToLdapConfigurationUserToDnMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type LdapConfigurationUserToDnMappingOutput struct{ *pulumi.OutputState }

func (LdapConfigurationUserToDnMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (o LdapConfigurationUserToDnMappingOutput) ToLdapConfigurationUserToDnMappingOutput() LdapConfigurationUserToDnMappingOutput {
	return o
}

func (o LdapConfigurationUserToDnMappingOutput) ToLdapConfigurationUserToDnMappingOutputWithContext(ctx context.Context) LdapConfigurationUserToDnMappingOutput {
	return o
}

func (o LdapConfigurationUserToDnMappingOutput) ToOutput(ctx context.Context) pulumix.Output[LdapConfigurationUserToDnMapping] {
	return pulumix.Output[LdapConfigurationUserToDnMapping]{
		OutputState: o.OutputState,
	}
}

func (o LdapConfigurationUserToDnMappingOutput) LdapQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapConfigurationUserToDnMapping) *string { return v.LdapQuery }).(pulumi.StringPtrOutput)
}

func (o LdapConfigurationUserToDnMappingOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapConfigurationUserToDnMapping) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o LdapConfigurationUserToDnMappingOutput) Substitution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapConfigurationUserToDnMapping) *string { return v.Substitution }).(pulumi.StringPtrOutput)
}

type LdapConfigurationUserToDnMappingArrayOutput struct{ *pulumi.OutputState }

func (LdapConfigurationUserToDnMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (o LdapConfigurationUserToDnMappingArrayOutput) ToLdapConfigurationUserToDnMappingArrayOutput() LdapConfigurationUserToDnMappingArrayOutput {
	return o
}

func (o LdapConfigurationUserToDnMappingArrayOutput) ToLdapConfigurationUserToDnMappingArrayOutputWithContext(ctx context.Context) LdapConfigurationUserToDnMappingArrayOutput {
	return o
}

func (o LdapConfigurationUserToDnMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LdapConfigurationUserToDnMapping] {
	return pulumix.Output[[]LdapConfigurationUserToDnMapping]{
		OutputState: o.OutputState,
	}
}

func (o LdapConfigurationUserToDnMappingArrayOutput) Index(i pulumi.IntInput) LdapConfigurationUserToDnMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LdapConfigurationUserToDnMapping {
		return vs[0].([]LdapConfigurationUserToDnMapping)[vs[1].(int)]
	}).(LdapConfigurationUserToDnMappingOutput)
}

type LdapVerifyLink struct {
	Href *string `pulumi:"href"`
	Rel  *string `pulumi:"rel"`
}

// LdapVerifyLinkInput is an input type that accepts LdapVerifyLinkArgs and LdapVerifyLinkOutput values.
// You can construct a concrete instance of `LdapVerifyLinkInput` via:
//
//	LdapVerifyLinkArgs{...}
type LdapVerifyLinkInput interface {
	pulumi.Input

	ToLdapVerifyLinkOutput() LdapVerifyLinkOutput
	ToLdapVerifyLinkOutputWithContext(context.Context) LdapVerifyLinkOutput
}

type LdapVerifyLinkArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
	Rel  pulumi.StringPtrInput `pulumi:"rel"`
}

func (LdapVerifyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapVerifyLink)(nil)).Elem()
}

func (i LdapVerifyLinkArgs) ToLdapVerifyLinkOutput() LdapVerifyLinkOutput {
	return i.ToLdapVerifyLinkOutputWithContext(context.Background())
}

func (i LdapVerifyLinkArgs) ToLdapVerifyLinkOutputWithContext(ctx context.Context) LdapVerifyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapVerifyLinkOutput)
}

func (i LdapVerifyLinkArgs) ToOutput(ctx context.Context) pulumix.Output[LdapVerifyLink] {
	return pulumix.Output[LdapVerifyLink]{
		OutputState: i.ToLdapVerifyLinkOutputWithContext(ctx).OutputState,
	}
}

// LdapVerifyLinkArrayInput is an input type that accepts LdapVerifyLinkArray and LdapVerifyLinkArrayOutput values.
// You can construct a concrete instance of `LdapVerifyLinkArrayInput` via:
//
//	LdapVerifyLinkArray{ LdapVerifyLinkArgs{...} }
type LdapVerifyLinkArrayInput interface {
	pulumi.Input

	ToLdapVerifyLinkArrayOutput() LdapVerifyLinkArrayOutput
	ToLdapVerifyLinkArrayOutputWithContext(context.Context) LdapVerifyLinkArrayOutput
}

type LdapVerifyLinkArray []LdapVerifyLinkInput

func (LdapVerifyLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapVerifyLink)(nil)).Elem()
}

func (i LdapVerifyLinkArray) ToLdapVerifyLinkArrayOutput() LdapVerifyLinkArrayOutput {
	return i.ToLdapVerifyLinkArrayOutputWithContext(context.Background())
}

func (i LdapVerifyLinkArray) ToLdapVerifyLinkArrayOutputWithContext(ctx context.Context) LdapVerifyLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapVerifyLinkArrayOutput)
}

func (i LdapVerifyLinkArray) ToOutput(ctx context.Context) pulumix.Output[[]LdapVerifyLink] {
	return pulumix.Output[[]LdapVerifyLink]{
		OutputState: i.ToLdapVerifyLinkArrayOutputWithContext(ctx).OutputState,
	}
}

type LdapVerifyLinkOutput struct{ *pulumi.OutputState }

func (LdapVerifyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapVerifyLink)(nil)).Elem()
}

func (o LdapVerifyLinkOutput) ToLdapVerifyLinkOutput() LdapVerifyLinkOutput {
	return o
}

func (o LdapVerifyLinkOutput) ToLdapVerifyLinkOutputWithContext(ctx context.Context) LdapVerifyLinkOutput {
	return o
}

func (o LdapVerifyLinkOutput) ToOutput(ctx context.Context) pulumix.Output[LdapVerifyLink] {
	return pulumix.Output[LdapVerifyLink]{
		OutputState: o.OutputState,
	}
}

func (o LdapVerifyLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapVerifyLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o LdapVerifyLinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapVerifyLink) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type LdapVerifyLinkArrayOutput struct{ *pulumi.OutputState }

func (LdapVerifyLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapVerifyLink)(nil)).Elem()
}

func (o LdapVerifyLinkArrayOutput) ToLdapVerifyLinkArrayOutput() LdapVerifyLinkArrayOutput {
	return o
}

func (o LdapVerifyLinkArrayOutput) ToLdapVerifyLinkArrayOutputWithContext(ctx context.Context) LdapVerifyLinkArrayOutput {
	return o
}

func (o LdapVerifyLinkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LdapVerifyLink] {
	return pulumix.Output[[]LdapVerifyLink]{
		OutputState: o.OutputState,
	}
}

func (o LdapVerifyLinkArrayOutput) Index(i pulumi.IntInput) LdapVerifyLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LdapVerifyLink {
		return vs[0].([]LdapVerifyLink)[vs[1].(int)]
	}).(LdapVerifyLinkOutput)
}

type LdapVerifyValidation struct {
	// The current status of the LDAP over TLS/SSL configuration. One of the following values: `PENDING`, `SUCCESS`, and `FAILED`.
	Status         *string `pulumi:"status"`
	ValidationType *string `pulumi:"validationType"`
}

// LdapVerifyValidationInput is an input type that accepts LdapVerifyValidationArgs and LdapVerifyValidationOutput values.
// You can construct a concrete instance of `LdapVerifyValidationInput` via:
//
//	LdapVerifyValidationArgs{...}
type LdapVerifyValidationInput interface {
	pulumi.Input

	ToLdapVerifyValidationOutput() LdapVerifyValidationOutput
	ToLdapVerifyValidationOutputWithContext(context.Context) LdapVerifyValidationOutput
}

type LdapVerifyValidationArgs struct {
	// The current status of the LDAP over TLS/SSL configuration. One of the following values: `PENDING`, `SUCCESS`, and `FAILED`.
	Status         pulumi.StringPtrInput `pulumi:"status"`
	ValidationType pulumi.StringPtrInput `pulumi:"validationType"`
}

func (LdapVerifyValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapVerifyValidation)(nil)).Elem()
}

func (i LdapVerifyValidationArgs) ToLdapVerifyValidationOutput() LdapVerifyValidationOutput {
	return i.ToLdapVerifyValidationOutputWithContext(context.Background())
}

func (i LdapVerifyValidationArgs) ToLdapVerifyValidationOutputWithContext(ctx context.Context) LdapVerifyValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapVerifyValidationOutput)
}

func (i LdapVerifyValidationArgs) ToOutput(ctx context.Context) pulumix.Output[LdapVerifyValidation] {
	return pulumix.Output[LdapVerifyValidation]{
		OutputState: i.ToLdapVerifyValidationOutputWithContext(ctx).OutputState,
	}
}

// LdapVerifyValidationArrayInput is an input type that accepts LdapVerifyValidationArray and LdapVerifyValidationArrayOutput values.
// You can construct a concrete instance of `LdapVerifyValidationArrayInput` via:
//
//	LdapVerifyValidationArray{ LdapVerifyValidationArgs{...} }
type LdapVerifyValidationArrayInput interface {
	pulumi.Input

	ToLdapVerifyValidationArrayOutput() LdapVerifyValidationArrayOutput
	ToLdapVerifyValidationArrayOutputWithContext(context.Context) LdapVerifyValidationArrayOutput
}

type LdapVerifyValidationArray []LdapVerifyValidationInput

func (LdapVerifyValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapVerifyValidation)(nil)).Elem()
}

func (i LdapVerifyValidationArray) ToLdapVerifyValidationArrayOutput() LdapVerifyValidationArrayOutput {
	return i.ToLdapVerifyValidationArrayOutputWithContext(context.Background())
}

func (i LdapVerifyValidationArray) ToLdapVerifyValidationArrayOutputWithContext(ctx context.Context) LdapVerifyValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapVerifyValidationArrayOutput)
}

func (i LdapVerifyValidationArray) ToOutput(ctx context.Context) pulumix.Output[[]LdapVerifyValidation] {
	return pulumix.Output[[]LdapVerifyValidation]{
		OutputState: i.ToLdapVerifyValidationArrayOutputWithContext(ctx).OutputState,
	}
}

type LdapVerifyValidationOutput struct{ *pulumi.OutputState }

func (LdapVerifyValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapVerifyValidation)(nil)).Elem()
}

func (o LdapVerifyValidationOutput) ToLdapVerifyValidationOutput() LdapVerifyValidationOutput {
	return o
}

func (o LdapVerifyValidationOutput) ToLdapVerifyValidationOutputWithContext(ctx context.Context) LdapVerifyValidationOutput {
	return o
}

func (o LdapVerifyValidationOutput) ToOutput(ctx context.Context) pulumix.Output[LdapVerifyValidation] {
	return pulumix.Output[LdapVerifyValidation]{
		OutputState: o.OutputState,
	}
}

// The current status of the LDAP over TLS/SSL configuration. One of the following values: `PENDING`, `SUCCESS`, and `FAILED`.
func (o LdapVerifyValidationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapVerifyValidation) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o LdapVerifyValidationOutput) ValidationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapVerifyValidation) *string { return v.ValidationType }).(pulumi.StringPtrOutput)
}

type LdapVerifyValidationArrayOutput struct{ *pulumi.OutputState }

func (LdapVerifyValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapVerifyValidation)(nil)).Elem()
}

func (o LdapVerifyValidationArrayOutput) ToLdapVerifyValidationArrayOutput() LdapVerifyValidationArrayOutput {
	return o
}

func (o LdapVerifyValidationArrayOutput) ToLdapVerifyValidationArrayOutputWithContext(ctx context.Context) LdapVerifyValidationArrayOutput {
	return o
}

func (o LdapVerifyValidationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LdapVerifyValidation] {
	return pulumix.Output[[]LdapVerifyValidation]{
		OutputState: o.OutputState,
	}
}

func (o LdapVerifyValidationArrayOutput) Index(i pulumi.IntInput) LdapVerifyValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LdapVerifyValidation {
		return vs[0].([]LdapVerifyValidation)[vs[1].(int)]
	}).(LdapVerifyValidationOutput)
}

type OnlineArchiveCriteria struct {
	// Indexed database parameter that stores the date that determines when data moves to the online archive. MongoDB Cloud archives the data when the current date exceeds the date in this database parameter plus the number of days specified through the expireAfterDays parameter.
	DateField *string `pulumi:"dateField"`
	// Syntax used to write the date after which data moves to the online archive. Date can be expressed as ISO 8601 or Epoch timestamps. The Epoch timestamp can be expressed as nanoseconds, milliseconds, or seconds. You must set `type` to `DATE` if `collectionType` is `TIMESERIES`. Valid values:  ISODATE (default), EPOCH_SECONDS, EPOCH_MILLIS, EPOCH_NANOSECONDS.
	DateFormat *string `pulumi:"dateFormat"`
	// Number of days after the value in the criteria.dateField when MongoDB Cloud archives data in the specified cluster.
	//
	// **_NOTE: if `DATE` is selected, the `partition_fields.field_name` must be completed with the `dateField` value_**
	//
	// The only field required for criteria type `CUSTOM`
	ExpireAfterDays *int `pulumi:"expireAfterDays"`
	// JSON query to use to select documents for archiving. Atlas uses the specified query with the db.collection.find(query) command. The empty document {} to return all documents is not supported.
	Query *string `pulumi:"query"`
	// Type of criteria (DATE, CUSTOM)
	//
	// The following fields are required for criteria type `DATE`
	Type string `pulumi:"type"`
}

// OnlineArchiveCriteriaInput is an input type that accepts OnlineArchiveCriteriaArgs and OnlineArchiveCriteriaOutput values.
// You can construct a concrete instance of `OnlineArchiveCriteriaInput` via:
//
//	OnlineArchiveCriteriaArgs{...}
type OnlineArchiveCriteriaInput interface {
	pulumi.Input

	ToOnlineArchiveCriteriaOutput() OnlineArchiveCriteriaOutput
	ToOnlineArchiveCriteriaOutputWithContext(context.Context) OnlineArchiveCriteriaOutput
}

type OnlineArchiveCriteriaArgs struct {
	// Indexed database parameter that stores the date that determines when data moves to the online archive. MongoDB Cloud archives the data when the current date exceeds the date in this database parameter plus the number of days specified through the expireAfterDays parameter.
	DateField pulumi.StringPtrInput `pulumi:"dateField"`
	// Syntax used to write the date after which data moves to the online archive. Date can be expressed as ISO 8601 or Epoch timestamps. The Epoch timestamp can be expressed as nanoseconds, milliseconds, or seconds. You must set `type` to `DATE` if `collectionType` is `TIMESERIES`. Valid values:  ISODATE (default), EPOCH_SECONDS, EPOCH_MILLIS, EPOCH_NANOSECONDS.
	DateFormat pulumi.StringPtrInput `pulumi:"dateFormat"`
	// Number of days after the value in the criteria.dateField when MongoDB Cloud archives data in the specified cluster.
	//
	// **_NOTE: if `DATE` is selected, the `partition_fields.field_name` must be completed with the `dateField` value_**
	//
	// The only field required for criteria type `CUSTOM`
	ExpireAfterDays pulumi.IntPtrInput `pulumi:"expireAfterDays"`
	// JSON query to use to select documents for archiving. Atlas uses the specified query with the db.collection.find(query) command. The empty document {} to return all documents is not supported.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Type of criteria (DATE, CUSTOM)
	//
	// The following fields are required for criteria type `DATE`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OnlineArchiveCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineArchiveCriteria)(nil)).Elem()
}

func (i OnlineArchiveCriteriaArgs) ToOnlineArchiveCriteriaOutput() OnlineArchiveCriteriaOutput {
	return i.ToOnlineArchiveCriteriaOutputWithContext(context.Background())
}

func (i OnlineArchiveCriteriaArgs) ToOnlineArchiveCriteriaOutputWithContext(ctx context.Context) OnlineArchiveCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchiveCriteriaOutput)
}

func (i OnlineArchiveCriteriaArgs) ToOutput(ctx context.Context) pulumix.Output[OnlineArchiveCriteria] {
	return pulumix.Output[OnlineArchiveCriteria]{
		OutputState: i.ToOnlineArchiveCriteriaOutputWithContext(ctx).OutputState,
	}
}

func (i OnlineArchiveCriteriaArgs) ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput {
	return i.ToOnlineArchiveCriteriaPtrOutputWithContext(context.Background())
}

func (i OnlineArchiveCriteriaArgs) ToOnlineArchiveCriteriaPtrOutputWithContext(ctx context.Context) OnlineArchiveCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchiveCriteriaOutput).ToOnlineArchiveCriteriaPtrOutputWithContext(ctx)
}

// OnlineArchiveCriteriaPtrInput is an input type that accepts OnlineArchiveCriteriaArgs, OnlineArchiveCriteriaPtr and OnlineArchiveCriteriaPtrOutput values.
// You can construct a concrete instance of `OnlineArchiveCriteriaPtrInput` via:
//
//	        OnlineArchiveCriteriaArgs{...}
//
//	or:
//
//	        nil
type OnlineArchiveCriteriaPtrInput interface {
	pulumi.Input

	ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput
	ToOnlineArchiveCriteriaPtrOutputWithContext(context.Context) OnlineArchiveCriteriaPtrOutput
}

type onlineArchiveCriteriaPtrType OnlineArchiveCriteriaArgs

func OnlineArchiveCriteriaPtr(v *OnlineArchiveCriteriaArgs) OnlineArchiveCriteriaPtrInput {
	return (*onlineArchiveCriteriaPtrType)(v)
}

func (*onlineArchiveCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineArchiveCriteria)(nil)).Elem()
}

func (i *onlineArchiveCriteriaPtrType) ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput {
	return i.ToOnlineArchiveCriteriaPtrOutputWithContext(context.Background())
}

func (i *onlineArchiveCriteriaPtrType) ToOnlineArchiveCriteriaPtrOutputWithContext(ctx context.Context) OnlineArchiveCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchiveCriteriaPtrOutput)
}

func (i *onlineArchiveCriteriaPtrType) ToOutput(ctx context.Context) pulumix.Output[*OnlineArchiveCriteria] {
	return pulumix.Output[*OnlineArchiveCriteria]{
		OutputState: i.ToOnlineArchiveCriteriaPtrOutputWithContext(ctx).OutputState,
	}
}

type OnlineArchiveCriteriaOutput struct{ *pulumi.OutputState }

func (OnlineArchiveCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineArchiveCriteria)(nil)).Elem()
}

func (o OnlineArchiveCriteriaOutput) ToOnlineArchiveCriteriaOutput() OnlineArchiveCriteriaOutput {
	return o
}

func (o OnlineArchiveCriteriaOutput) ToOnlineArchiveCriteriaOutputWithContext(ctx context.Context) OnlineArchiveCriteriaOutput {
	return o
}

func (o OnlineArchiveCriteriaOutput) ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput {
	return o.ToOnlineArchiveCriteriaPtrOutputWithContext(context.Background())
}

func (o OnlineArchiveCriteriaOutput) ToOnlineArchiveCriteriaPtrOutputWithContext(ctx context.Context) OnlineArchiveCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnlineArchiveCriteria) *OnlineArchiveCriteria {
		return &v
	}).(OnlineArchiveCriteriaPtrOutput)
}

func (o OnlineArchiveCriteriaOutput) ToOutput(ctx context.Context) pulumix.Output[OnlineArchiveCriteria] {
	return pulumix.Output[OnlineArchiveCriteria]{
		OutputState: o.OutputState,
	}
}

// Indexed database parameter that stores the date that determines when data moves to the online archive. MongoDB Cloud archives the data when the current date exceeds the date in this database parameter plus the number of days specified through the expireAfterDays parameter.
func (o OnlineArchiveCriteriaOutput) DateField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) *string { return v.DateField }).(pulumi.StringPtrOutput)
}

// Syntax used to write the date after which data moves to the online archive. Date can be expressed as ISO 8601 or Epoch timestamps. The Epoch timestamp can be expressed as nanoseconds, milliseconds, or seconds. You must set `type` to `DATE` if `collectionType` is `TIMESERIES`. Valid values:  ISODATE (default), EPOCH_SECONDS, EPOCH_MILLIS, EPOCH_NANOSECONDS.
func (o OnlineArchiveCriteriaOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) *string { return v.DateFormat }).(pulumi.StringPtrOutput)
}

// Number of days after the value in the criteria.dateField when MongoDB Cloud archives data in the specified cluster.
//
// **_NOTE: if `DATE` is selected, the `partition_fields.field_name` must be completed with the `dateField` value_**
//
// The only field required for criteria type `CUSTOM`
func (o OnlineArchiveCriteriaOutput) ExpireAfterDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) *int { return v.ExpireAfterDays }).(pulumi.IntPtrOutput)
}

// JSON query to use to select documents for archiving. Atlas uses the specified query with the db.collection.find(query) command. The empty document {} to return all documents is not supported.
func (o OnlineArchiveCriteriaOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Type of criteria (DATE, CUSTOM)
//
// The following fields are required for criteria type `DATE`
func (o OnlineArchiveCriteriaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) string { return v.Type }).(pulumi.StringOutput)
}

type OnlineArchiveCriteriaPtrOutput struct{ *pulumi.OutputState }

func (OnlineArchiveCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineArchiveCriteria)(nil)).Elem()
}

func (o OnlineArchiveCriteriaPtrOutput) ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput {
	return o
}

func (o OnlineArchiveCriteriaPtrOutput) ToOnlineArchiveCriteriaPtrOutputWithContext(ctx context.Context) OnlineArchiveCriteriaPtrOutput {
	return o
}

func (o OnlineArchiveCriteriaPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OnlineArchiveCriteria] {
	return pulumix.Output[*OnlineArchiveCriteria]{
		OutputState: o.OutputState,
	}
}

func (o OnlineArchiveCriteriaPtrOutput) Elem() OnlineArchiveCriteriaOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) OnlineArchiveCriteria {
		if v != nil {
			return *v
		}
		var ret OnlineArchiveCriteria
		return ret
	}).(OnlineArchiveCriteriaOutput)
}

// Indexed database parameter that stores the date that determines when data moves to the online archive. MongoDB Cloud archives the data when the current date exceeds the date in this database parameter plus the number of days specified through the expireAfterDays parameter.
func (o OnlineArchiveCriteriaPtrOutput) DateField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *string {
		if v == nil {
			return nil
		}
		return v.DateField
	}).(pulumi.StringPtrOutput)
}

// Syntax used to write the date after which data moves to the online archive. Date can be expressed as ISO 8601 or Epoch timestamps. The Epoch timestamp can be expressed as nanoseconds, milliseconds, or seconds. You must set `type` to `DATE` if `collectionType` is `TIMESERIES`. Valid values:  ISODATE (default), EPOCH_SECONDS, EPOCH_MILLIS, EPOCH_NANOSECONDS.
func (o OnlineArchiveCriteriaPtrOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *string {
		if v == nil {
			return nil
		}
		return v.DateFormat
	}).(pulumi.StringPtrOutput)
}

// Number of days after the value in the criteria.dateField when MongoDB Cloud archives data in the specified cluster.
//
// **_NOTE: if `DATE` is selected, the `partition_fields.field_name` must be completed with the `dateField` value_**
//
// The only field required for criteria type `CUSTOM`
func (o OnlineArchiveCriteriaPtrOutput) ExpireAfterDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *int {
		if v == nil {
			return nil
		}
		return v.ExpireAfterDays
	}).(pulumi.IntPtrOutput)
}

// JSON query to use to select documents for archiving. Atlas uses the specified query with the db.collection.find(query) command. The empty document {} to return all documents is not supported.
func (o OnlineArchiveCriteriaPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// Type of criteria (DATE, CUSTOM)
//
// The following fields are required for criteria type `DATE`
func (o OnlineArchiveCriteriaPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type OnlineArchivePartitionField struct {
	// Human-readable label that identifies the parameter that MongoDB Cloud uses to partition data. To specify a nested parameter, use the dot notation.
	FieldName string `pulumi:"fieldName"`
	// Data type of the parameter that that MongoDB Cloud uses to partition data. Partition parameters of type UUID must be of binary subtype 4. MongoDB Cloud skips partition parameters of type UUID with subtype 3. Valid values: `date`, `int`, `long`, `objectId`, `string`, `uuid`.
	FieldType *string `pulumi:"fieldType"`
	// Sequence in which MongoDB Cloud slices the collection data to create partitions. The resource expresses this sequence starting with zero. The value of the `criteria.dateField` parameter defaults as the first item in the partition sequence.
	Order int `pulumi:"order"`
}

// OnlineArchivePartitionFieldInput is an input type that accepts OnlineArchivePartitionFieldArgs and OnlineArchivePartitionFieldOutput values.
// You can construct a concrete instance of `OnlineArchivePartitionFieldInput` via:
//
//	OnlineArchivePartitionFieldArgs{...}
type OnlineArchivePartitionFieldInput interface {
	pulumi.Input

	ToOnlineArchivePartitionFieldOutput() OnlineArchivePartitionFieldOutput
	ToOnlineArchivePartitionFieldOutputWithContext(context.Context) OnlineArchivePartitionFieldOutput
}

type OnlineArchivePartitionFieldArgs struct {
	// Human-readable label that identifies the parameter that MongoDB Cloud uses to partition data. To specify a nested parameter, use the dot notation.
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	// Data type of the parameter that that MongoDB Cloud uses to partition data. Partition parameters of type UUID must be of binary subtype 4. MongoDB Cloud skips partition parameters of type UUID with subtype 3. Valid values: `date`, `int`, `long`, `objectId`, `string`, `uuid`.
	FieldType pulumi.StringPtrInput `pulumi:"fieldType"`
	// Sequence in which MongoDB Cloud slices the collection data to create partitions. The resource expresses this sequence starting with zero. The value of the `criteria.dateField` parameter defaults as the first item in the partition sequence.
	Order pulumi.IntInput `pulumi:"order"`
}

func (OnlineArchivePartitionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineArchivePartitionField)(nil)).Elem()
}

func (i OnlineArchivePartitionFieldArgs) ToOnlineArchivePartitionFieldOutput() OnlineArchivePartitionFieldOutput {
	return i.ToOnlineArchivePartitionFieldOutputWithContext(context.Background())
}

func (i OnlineArchivePartitionFieldArgs) ToOnlineArchivePartitionFieldOutputWithContext(ctx context.Context) OnlineArchivePartitionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchivePartitionFieldOutput)
}

func (i OnlineArchivePartitionFieldArgs) ToOutput(ctx context.Context) pulumix.Output[OnlineArchivePartitionField] {
	return pulumix.Output[OnlineArchivePartitionField]{
		OutputState: i.ToOnlineArchivePartitionFieldOutputWithContext(ctx).OutputState,
	}
}

// OnlineArchivePartitionFieldArrayInput is an input type that accepts OnlineArchivePartitionFieldArray and OnlineArchivePartitionFieldArrayOutput values.
// You can construct a concrete instance of `OnlineArchivePartitionFieldArrayInput` via:
//
//	OnlineArchivePartitionFieldArray{ OnlineArchivePartitionFieldArgs{...} }
type OnlineArchivePartitionFieldArrayInput interface {
	pulumi.Input

	ToOnlineArchivePartitionFieldArrayOutput() OnlineArchivePartitionFieldArrayOutput
	ToOnlineArchivePartitionFieldArrayOutputWithContext(context.Context) OnlineArchivePartitionFieldArrayOutput
}

type OnlineArchivePartitionFieldArray []OnlineArchivePartitionFieldInput

func (OnlineArchivePartitionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OnlineArchivePartitionField)(nil)).Elem()
}

func (i OnlineArchivePartitionFieldArray) ToOnlineArchivePartitionFieldArrayOutput() OnlineArchivePartitionFieldArrayOutput {
	return i.ToOnlineArchivePartitionFieldArrayOutputWithContext(context.Background())
}

func (i OnlineArchivePartitionFieldArray) ToOnlineArchivePartitionFieldArrayOutputWithContext(ctx context.Context) OnlineArchivePartitionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchivePartitionFieldArrayOutput)
}

func (i OnlineArchivePartitionFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]OnlineArchivePartitionField] {
	return pulumix.Output[[]OnlineArchivePartitionField]{
		OutputState: i.ToOnlineArchivePartitionFieldArrayOutputWithContext(ctx).OutputState,
	}
}

type OnlineArchivePartitionFieldOutput struct{ *pulumi.OutputState }

func (OnlineArchivePartitionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineArchivePartitionField)(nil)).Elem()
}

func (o OnlineArchivePartitionFieldOutput) ToOnlineArchivePartitionFieldOutput() OnlineArchivePartitionFieldOutput {
	return o
}

func (o OnlineArchivePartitionFieldOutput) ToOnlineArchivePartitionFieldOutputWithContext(ctx context.Context) OnlineArchivePartitionFieldOutput {
	return o
}

func (o OnlineArchivePartitionFieldOutput) ToOutput(ctx context.Context) pulumix.Output[OnlineArchivePartitionField] {
	return pulumix.Output[OnlineArchivePartitionField]{
		OutputState: o.OutputState,
	}
}

// Human-readable label that identifies the parameter that MongoDB Cloud uses to partition data. To specify a nested parameter, use the dot notation.
func (o OnlineArchivePartitionFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineArchivePartitionField) string { return v.FieldName }).(pulumi.StringOutput)
}

// Data type of the parameter that that MongoDB Cloud uses to partition data. Partition parameters of type UUID must be of binary subtype 4. MongoDB Cloud skips partition parameters of type UUID with subtype 3. Valid values: `date`, `int`, `long`, `objectId`, `string`, `uuid`.
func (o OnlineArchivePartitionFieldOutput) FieldType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineArchivePartitionField) *string { return v.FieldType }).(pulumi.StringPtrOutput)
}

// Sequence in which MongoDB Cloud slices the collection data to create partitions. The resource expresses this sequence starting with zero. The value of the `criteria.dateField` parameter defaults as the first item in the partition sequence.
func (o OnlineArchivePartitionFieldOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v OnlineArchivePartitionField) int { return v.Order }).(pulumi.IntOutput)
}

type OnlineArchivePartitionFieldArrayOutput struct{ *pulumi.OutputState }

func (OnlineArchivePartitionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OnlineArchivePartitionField)(nil)).Elem()
}

func (o OnlineArchivePartitionFieldArrayOutput) ToOnlineArchivePartitionFieldArrayOutput() OnlineArchivePartitionFieldArrayOutput {
	return o
}

func (o OnlineArchivePartitionFieldArrayOutput) ToOnlineArchivePartitionFieldArrayOutputWithContext(ctx context.Context) OnlineArchivePartitionFieldArrayOutput {
	return o
}

func (o OnlineArchivePartitionFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OnlineArchivePartitionField] {
	return pulumix.Output[[]OnlineArchivePartitionField]{
		OutputState: o.OutputState,
	}
}

func (o OnlineArchivePartitionFieldArrayOutput) Index(i pulumi.IntInput) OnlineArchivePartitionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OnlineArchivePartitionField {
		return vs[0].([]OnlineArchivePartitionField)[vs[1].(int)]
	}).(OnlineArchivePartitionFieldOutput)
}

type OnlineArchiveSchedule struct {
	// Day of the month when the scheduled archive starts. This field should be provided only when schedule `type` is `MONTHLY`.
	DayOfMonth *int `pulumi:"dayOfMonth"`
	// Day of the week when the scheduled archive starts. The week starts with Monday (1) and ends with Sunday (7). This field should be provided only when schedule `type` is `WEEKLY`.
	DayOfWeek *int `pulumi:"dayOfWeek"`
	// Hour of the day when the scheduled window to run one online archive ends.
	EndHour *int `pulumi:"endHour"`
	// Minute of the hour when the scheduled window to run one online archive ends.
	EndMinute *int `pulumi:"endMinute"`
	// Hour of the day when the when the scheduled window to run one online archive starts.
	StartHour *int `pulumi:"startHour"`
	// Minute of the hour when the scheduled window to run one online archive starts.
	StartMinute *int `pulumi:"startMinute"`
	// Type of schedule (``DAILY` ,  `MONTHLY` ,  `WEEKLY`).
	Type string `pulumi:"type"`
}

// OnlineArchiveScheduleInput is an input type that accepts OnlineArchiveScheduleArgs and OnlineArchiveScheduleOutput values.
// You can construct a concrete instance of `OnlineArchiveScheduleInput` via:
//
//	OnlineArchiveScheduleArgs{...}
type OnlineArchiveScheduleInput interface {
	pulumi.Input

	ToOnlineArchiveScheduleOutput() OnlineArchiveScheduleOutput
	ToOnlineArchiveScheduleOutputWithContext(context.Context) OnlineArchiveScheduleOutput
}

type OnlineArchiveScheduleArgs struct {
	// Day of the month when the scheduled archive starts. This field should be provided only when schedule `type` is `MONTHLY`.
	DayOfMonth pulumi.IntPtrInput `pulumi:"dayOfMonth"`
	// Day of the week when the scheduled archive starts. The week starts with Monday (1) and ends with Sunday (7). This field should be provided only when schedule `type` is `WEEKLY`.
	DayOfWeek pulumi.IntPtrInput `pulumi:"dayOfWeek"`
	// Hour of the day when the scheduled window to run one online archive ends.
	EndHour pulumi.IntPtrInput `pulumi:"endHour"`
	// Minute of the hour when the scheduled window to run one online archive ends.
	EndMinute pulumi.IntPtrInput `pulumi:"endMinute"`
	// Hour of the day when the when the scheduled window to run one online archive starts.
	StartHour pulumi.IntPtrInput `pulumi:"startHour"`
	// Minute of the hour when the scheduled window to run one online archive starts.
	StartMinute pulumi.IntPtrInput `pulumi:"startMinute"`
	// Type of schedule (``DAILY` ,  `MONTHLY` ,  `WEEKLY`).
	Type pulumi.StringInput `pulumi:"type"`
}

func (OnlineArchiveScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineArchiveSchedule)(nil)).Elem()
}

func (i OnlineArchiveScheduleArgs) ToOnlineArchiveScheduleOutput() OnlineArchiveScheduleOutput {
	return i.ToOnlineArchiveScheduleOutputWithContext(context.Background())
}

func (i OnlineArchiveScheduleArgs) ToOnlineArchiveScheduleOutputWithContext(ctx context.Context) OnlineArchiveScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchiveScheduleOutput)
}

func (i OnlineArchiveScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[OnlineArchiveSchedule] {
	return pulumix.Output[OnlineArchiveSchedule]{
		OutputState: i.ToOnlineArchiveScheduleOutputWithContext(ctx).OutputState,
	}
}

func (i OnlineArchiveScheduleArgs) ToOnlineArchiveSchedulePtrOutput() OnlineArchiveSchedulePtrOutput {
	return i.ToOnlineArchiveSchedulePtrOutputWithContext(context.Background())
}

func (i OnlineArchiveScheduleArgs) ToOnlineArchiveSchedulePtrOutputWithContext(ctx context.Context) OnlineArchiveSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchiveScheduleOutput).ToOnlineArchiveSchedulePtrOutputWithContext(ctx)
}

// OnlineArchiveSchedulePtrInput is an input type that accepts OnlineArchiveScheduleArgs, OnlineArchiveSchedulePtr and OnlineArchiveSchedulePtrOutput values.
// You can construct a concrete instance of `OnlineArchiveSchedulePtrInput` via:
//
//	        OnlineArchiveScheduleArgs{...}
//
//	or:
//
//	        nil
type OnlineArchiveSchedulePtrInput interface {
	pulumi.Input

	ToOnlineArchiveSchedulePtrOutput() OnlineArchiveSchedulePtrOutput
	ToOnlineArchiveSchedulePtrOutputWithContext(context.Context) OnlineArchiveSchedulePtrOutput
}

type onlineArchiveSchedulePtrType OnlineArchiveScheduleArgs

func OnlineArchiveSchedulePtr(v *OnlineArchiveScheduleArgs) OnlineArchiveSchedulePtrInput {
	return (*onlineArchiveSchedulePtrType)(v)
}

func (*onlineArchiveSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineArchiveSchedule)(nil)).Elem()
}

func (i *onlineArchiveSchedulePtrType) ToOnlineArchiveSchedulePtrOutput() OnlineArchiveSchedulePtrOutput {
	return i.ToOnlineArchiveSchedulePtrOutputWithContext(context.Background())
}

func (i *onlineArchiveSchedulePtrType) ToOnlineArchiveSchedulePtrOutputWithContext(ctx context.Context) OnlineArchiveSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchiveSchedulePtrOutput)
}

func (i *onlineArchiveSchedulePtrType) ToOutput(ctx context.Context) pulumix.Output[*OnlineArchiveSchedule] {
	return pulumix.Output[*OnlineArchiveSchedule]{
		OutputState: i.ToOnlineArchiveSchedulePtrOutputWithContext(ctx).OutputState,
	}
}

type OnlineArchiveScheduleOutput struct{ *pulumi.OutputState }

func (OnlineArchiveScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineArchiveSchedule)(nil)).Elem()
}

func (o OnlineArchiveScheduleOutput) ToOnlineArchiveScheduleOutput() OnlineArchiveScheduleOutput {
	return o
}

func (o OnlineArchiveScheduleOutput) ToOnlineArchiveScheduleOutputWithContext(ctx context.Context) OnlineArchiveScheduleOutput {
	return o
}

func (o OnlineArchiveScheduleOutput) ToOnlineArchiveSchedulePtrOutput() OnlineArchiveSchedulePtrOutput {
	return o.ToOnlineArchiveSchedulePtrOutputWithContext(context.Background())
}

func (o OnlineArchiveScheduleOutput) ToOnlineArchiveSchedulePtrOutputWithContext(ctx context.Context) OnlineArchiveSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnlineArchiveSchedule) *OnlineArchiveSchedule {
		return &v
	}).(OnlineArchiveSchedulePtrOutput)
}

func (o OnlineArchiveScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[OnlineArchiveSchedule] {
	return pulumix.Output[OnlineArchiveSchedule]{
		OutputState: o.OutputState,
	}
}

// Day of the month when the scheduled archive starts. This field should be provided only when schedule `type` is `MONTHLY`.
func (o OnlineArchiveScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnlineArchiveSchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

// Day of the week when the scheduled archive starts. The week starts with Monday (1) and ends with Sunday (7). This field should be provided only when schedule `type` is `WEEKLY`.
func (o OnlineArchiveScheduleOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnlineArchiveSchedule) *int { return v.DayOfWeek }).(pulumi.IntPtrOutput)
}

// Hour of the day when the scheduled window to run one online archive ends.
func (o OnlineArchiveScheduleOutput) EndHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnlineArchiveSchedule) *int { return v.EndHour }).(pulumi.IntPtrOutput)
}

// Minute of the hour when the scheduled window to run one online archive ends.
func (o OnlineArchiveScheduleOutput) EndMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnlineArchiveSchedule) *int { return v.EndMinute }).(pulumi.IntPtrOutput)
}

// Hour of the day when the when the scheduled window to run one online archive starts.
func (o OnlineArchiveScheduleOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnlineArchiveSchedule) *int { return v.StartHour }).(pulumi.IntPtrOutput)
}

// Minute of the hour when the scheduled window to run one online archive starts.
func (o OnlineArchiveScheduleOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnlineArchiveSchedule) *int { return v.StartMinute }).(pulumi.IntPtrOutput)
}

// Type of schedule (“DAILY` ,  `MONTHLY` ,  `WEEKLY`).
func (o OnlineArchiveScheduleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineArchiveSchedule) string { return v.Type }).(pulumi.StringOutput)
}

type OnlineArchiveSchedulePtrOutput struct{ *pulumi.OutputState }

func (OnlineArchiveSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineArchiveSchedule)(nil)).Elem()
}

func (o OnlineArchiveSchedulePtrOutput) ToOnlineArchiveSchedulePtrOutput() OnlineArchiveSchedulePtrOutput {
	return o
}

func (o OnlineArchiveSchedulePtrOutput) ToOnlineArchiveSchedulePtrOutputWithContext(ctx context.Context) OnlineArchiveSchedulePtrOutput {
	return o
}

func (o OnlineArchiveSchedulePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OnlineArchiveSchedule] {
	return pulumix.Output[*OnlineArchiveSchedule]{
		OutputState: o.OutputState,
	}
}

func (o OnlineArchiveSchedulePtrOutput) Elem() OnlineArchiveScheduleOutput {
	return o.ApplyT(func(v *OnlineArchiveSchedule) OnlineArchiveSchedule {
		if v != nil {
			return *v
		}
		var ret OnlineArchiveSchedule
		return ret
	}).(OnlineArchiveScheduleOutput)
}

// Day of the month when the scheduled archive starts. This field should be provided only when schedule `type` is `MONTHLY`.
func (o OnlineArchiveSchedulePtrOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveSchedule) *int {
		if v == nil {
			return nil
		}
		return v.DayOfMonth
	}).(pulumi.IntPtrOutput)
}

// Day of the week when the scheduled archive starts. The week starts with Monday (1) and ends with Sunday (7). This field should be provided only when schedule `type` is `WEEKLY`.
func (o OnlineArchiveSchedulePtrOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveSchedule) *int {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(pulumi.IntPtrOutput)
}

// Hour of the day when the scheduled window to run one online archive ends.
func (o OnlineArchiveSchedulePtrOutput) EndHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveSchedule) *int {
		if v == nil {
			return nil
		}
		return v.EndHour
	}).(pulumi.IntPtrOutput)
}

// Minute of the hour when the scheduled window to run one online archive ends.
func (o OnlineArchiveSchedulePtrOutput) EndMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveSchedule) *int {
		if v == nil {
			return nil
		}
		return v.EndMinute
	}).(pulumi.IntPtrOutput)
}

// Hour of the day when the when the scheduled window to run one online archive starts.
func (o OnlineArchiveSchedulePtrOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveSchedule) *int {
		if v == nil {
			return nil
		}
		return v.StartHour
	}).(pulumi.IntPtrOutput)
}

// Minute of the hour when the scheduled window to run one online archive starts.
func (o OnlineArchiveSchedulePtrOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveSchedule) *int {
		if v == nil {
			return nil
		}
		return v.StartMinute
	}).(pulumi.IntPtrOutput)
}

// Type of schedule (“DAILY` ,  `MONTHLY` ,  `WEEKLY`).
func (o OnlineArchiveSchedulePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkEndpointServiceEndpoint struct {
	// Forwarding rule that corresponds to the endpoint you created in GCP.
	EndpointName *string `pulumi:"endpointName"`
	// Private IP address of the endpoint you created in GCP.
	IpAddress *string `pulumi:"ipAddress"`
	// Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
	ServiceAttachmentName *string `pulumi:"serviceAttachmentName"`
	// Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
	Status *string `pulumi:"status"`
}

// PrivateLinkEndpointServiceEndpointInput is an input type that accepts PrivateLinkEndpointServiceEndpointArgs and PrivateLinkEndpointServiceEndpointOutput values.
// You can construct a concrete instance of `PrivateLinkEndpointServiceEndpointInput` via:
//
//	PrivateLinkEndpointServiceEndpointArgs{...}
type PrivateLinkEndpointServiceEndpointInput interface {
	pulumi.Input

	ToPrivateLinkEndpointServiceEndpointOutput() PrivateLinkEndpointServiceEndpointOutput
	ToPrivateLinkEndpointServiceEndpointOutputWithContext(context.Context) PrivateLinkEndpointServiceEndpointOutput
}

type PrivateLinkEndpointServiceEndpointArgs struct {
	// Forwarding rule that corresponds to the endpoint you created in GCP.
	EndpointName pulumi.StringPtrInput `pulumi:"endpointName"`
	// Private IP address of the endpoint you created in GCP.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
	ServiceAttachmentName pulumi.StringPtrInput `pulumi:"serviceAttachmentName"`
	// Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkEndpointServiceEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (i PrivateLinkEndpointServiceEndpointArgs) ToPrivateLinkEndpointServiceEndpointOutput() PrivateLinkEndpointServiceEndpointOutput {
	return i.ToPrivateLinkEndpointServiceEndpointOutputWithContext(context.Background())
}

func (i PrivateLinkEndpointServiceEndpointArgs) ToPrivateLinkEndpointServiceEndpointOutputWithContext(ctx context.Context) PrivateLinkEndpointServiceEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkEndpointServiceEndpointOutput)
}

func (i PrivateLinkEndpointServiceEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[PrivateLinkEndpointServiceEndpoint] {
	return pulumix.Output[PrivateLinkEndpointServiceEndpoint]{
		OutputState: i.ToPrivateLinkEndpointServiceEndpointOutputWithContext(ctx).OutputState,
	}
}

// PrivateLinkEndpointServiceEndpointArrayInput is an input type that accepts PrivateLinkEndpointServiceEndpointArray and PrivateLinkEndpointServiceEndpointArrayOutput values.
// You can construct a concrete instance of `PrivateLinkEndpointServiceEndpointArrayInput` via:
//
//	PrivateLinkEndpointServiceEndpointArray{ PrivateLinkEndpointServiceEndpointArgs{...} }
type PrivateLinkEndpointServiceEndpointArrayInput interface {
	pulumi.Input

	ToPrivateLinkEndpointServiceEndpointArrayOutput() PrivateLinkEndpointServiceEndpointArrayOutput
	ToPrivateLinkEndpointServiceEndpointArrayOutputWithContext(context.Context) PrivateLinkEndpointServiceEndpointArrayOutput
}

type PrivateLinkEndpointServiceEndpointArray []PrivateLinkEndpointServiceEndpointInput

func (PrivateLinkEndpointServiceEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (i PrivateLinkEndpointServiceEndpointArray) ToPrivateLinkEndpointServiceEndpointArrayOutput() PrivateLinkEndpointServiceEndpointArrayOutput {
	return i.ToPrivateLinkEndpointServiceEndpointArrayOutputWithContext(context.Background())
}

func (i PrivateLinkEndpointServiceEndpointArray) ToPrivateLinkEndpointServiceEndpointArrayOutputWithContext(ctx context.Context) PrivateLinkEndpointServiceEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkEndpointServiceEndpointArrayOutput)
}

func (i PrivateLinkEndpointServiceEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]PrivateLinkEndpointServiceEndpoint] {
	return pulumix.Output[[]PrivateLinkEndpointServiceEndpoint]{
		OutputState: i.ToPrivateLinkEndpointServiceEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type PrivateLinkEndpointServiceEndpointOutput struct{ *pulumi.OutputState }

func (PrivateLinkEndpointServiceEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (o PrivateLinkEndpointServiceEndpointOutput) ToPrivateLinkEndpointServiceEndpointOutput() PrivateLinkEndpointServiceEndpointOutput {
	return o
}

func (o PrivateLinkEndpointServiceEndpointOutput) ToPrivateLinkEndpointServiceEndpointOutputWithContext(ctx context.Context) PrivateLinkEndpointServiceEndpointOutput {
	return o
}

func (o PrivateLinkEndpointServiceEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[PrivateLinkEndpointServiceEndpoint] {
	return pulumix.Output[PrivateLinkEndpointServiceEndpoint]{
		OutputState: o.OutputState,
	}
}

// Forwarding rule that corresponds to the endpoint you created in GCP.
func (o PrivateLinkEndpointServiceEndpointOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkEndpointServiceEndpoint) *string { return v.EndpointName }).(pulumi.StringPtrOutput)
}

// Private IP address of the endpoint you created in GCP.
func (o PrivateLinkEndpointServiceEndpointOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkEndpointServiceEndpoint) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
func (o PrivateLinkEndpointServiceEndpointOutput) ServiceAttachmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkEndpointServiceEndpoint) *string { return v.ServiceAttachmentName }).(pulumi.StringPtrOutput)
}

// Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
func (o PrivateLinkEndpointServiceEndpointOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkEndpointServiceEndpoint) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkEndpointServiceEndpointArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkEndpointServiceEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (o PrivateLinkEndpointServiceEndpointArrayOutput) ToPrivateLinkEndpointServiceEndpointArrayOutput() PrivateLinkEndpointServiceEndpointArrayOutput {
	return o
}

func (o PrivateLinkEndpointServiceEndpointArrayOutput) ToPrivateLinkEndpointServiceEndpointArrayOutputWithContext(ctx context.Context) PrivateLinkEndpointServiceEndpointArrayOutput {
	return o
}

func (o PrivateLinkEndpointServiceEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]PrivateLinkEndpointServiceEndpoint] {
	return pulumix.Output[[]PrivateLinkEndpointServiceEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o PrivateLinkEndpointServiceEndpointArrayOutput) Index(i pulumi.IntInput) PrivateLinkEndpointServiceEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkEndpointServiceEndpoint {
		return vs[0].([]PrivateLinkEndpointServiceEndpoint)[vs[1].(int)]
	}).(PrivateLinkEndpointServiceEndpointOutput)
}

type ProjectApiKeyType struct {
	// The unique identifier of the Programmatic API key you want to associate with the Project.  The Programmatic API key and Project must share the same parent organization.  Note: this is not the `publicKey` of the Programmatic API key but the `id` of the key. See [Programmatic API Keys](https://docs.atlas.mongodb.com/reference/api/apiKeys/) for more.
	//
	// **WARNING:** The `apiKeys` parameter is deprecated and will be removed in v1.12.0 release from codebase. Use `ProjectApiKey`  resource instead.
	ApiKeyId string `pulumi:"apiKeyId"`
	// List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project.  You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
	RoleNames []string `pulumi:"roleNames"`
}

// ProjectApiKeyTypeInput is an input type that accepts ProjectApiKeyTypeArgs and ProjectApiKeyTypeOutput values.
// You can construct a concrete instance of `ProjectApiKeyTypeInput` via:
//
//	ProjectApiKeyTypeArgs{...}
type ProjectApiKeyTypeInput interface {
	pulumi.Input

	ToProjectApiKeyTypeOutput() ProjectApiKeyTypeOutput
	ToProjectApiKeyTypeOutputWithContext(context.Context) ProjectApiKeyTypeOutput
}

type ProjectApiKeyTypeArgs struct {
	// The unique identifier of the Programmatic API key you want to associate with the Project.  The Programmatic API key and Project must share the same parent organization.  Note: this is not the `publicKey` of the Programmatic API key but the `id` of the key. See [Programmatic API Keys](https://docs.atlas.mongodb.com/reference/api/apiKeys/) for more.
	//
	// **WARNING:** The `apiKeys` parameter is deprecated and will be removed in v1.12.0 release from codebase. Use `ProjectApiKey`  resource instead.
	ApiKeyId pulumi.StringInput `pulumi:"apiKeyId"`
	// List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project.  You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
}

func (ProjectApiKeyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectApiKeyType)(nil)).Elem()
}

func (i ProjectApiKeyTypeArgs) ToProjectApiKeyTypeOutput() ProjectApiKeyTypeOutput {
	return i.ToProjectApiKeyTypeOutputWithContext(context.Background())
}

func (i ProjectApiKeyTypeArgs) ToProjectApiKeyTypeOutputWithContext(ctx context.Context) ProjectApiKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectApiKeyTypeOutput)
}

func (i ProjectApiKeyTypeArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectApiKeyType] {
	return pulumix.Output[ProjectApiKeyType]{
		OutputState: i.ToProjectApiKeyTypeOutputWithContext(ctx).OutputState,
	}
}

// ProjectApiKeyTypeArrayInput is an input type that accepts ProjectApiKeyTypeArray and ProjectApiKeyTypeArrayOutput values.
// You can construct a concrete instance of `ProjectApiKeyTypeArrayInput` via:
//
//	ProjectApiKeyTypeArray{ ProjectApiKeyTypeArgs{...} }
type ProjectApiKeyTypeArrayInput interface {
	pulumi.Input

	ToProjectApiKeyTypeArrayOutput() ProjectApiKeyTypeArrayOutput
	ToProjectApiKeyTypeArrayOutputWithContext(context.Context) ProjectApiKeyTypeArrayOutput
}

type ProjectApiKeyTypeArray []ProjectApiKeyTypeInput

func (ProjectApiKeyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectApiKeyType)(nil)).Elem()
}

func (i ProjectApiKeyTypeArray) ToProjectApiKeyTypeArrayOutput() ProjectApiKeyTypeArrayOutput {
	return i.ToProjectApiKeyTypeArrayOutputWithContext(context.Background())
}

func (i ProjectApiKeyTypeArray) ToProjectApiKeyTypeArrayOutputWithContext(ctx context.Context) ProjectApiKeyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectApiKeyTypeArrayOutput)
}

func (i ProjectApiKeyTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]ProjectApiKeyType] {
	return pulumix.Output[[]ProjectApiKeyType]{
		OutputState: i.ToProjectApiKeyTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type ProjectApiKeyTypeOutput struct{ *pulumi.OutputState }

func (ProjectApiKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectApiKeyType)(nil)).Elem()
}

func (o ProjectApiKeyTypeOutput) ToProjectApiKeyTypeOutput() ProjectApiKeyTypeOutput {
	return o
}

func (o ProjectApiKeyTypeOutput) ToProjectApiKeyTypeOutputWithContext(ctx context.Context) ProjectApiKeyTypeOutput {
	return o
}

func (o ProjectApiKeyTypeOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectApiKeyType] {
	return pulumix.Output[ProjectApiKeyType]{
		OutputState: o.OutputState,
	}
}

// The unique identifier of the Programmatic API key you want to associate with the Project.  The Programmatic API key and Project must share the same parent organization.  Note: this is not the `publicKey` of the Programmatic API key but the `id` of the key. See [Programmatic API Keys](https://docs.atlas.mongodb.com/reference/api/apiKeys/) for more.
//
// **WARNING:** The `apiKeys` parameter is deprecated and will be removed in v1.12.0 release from codebase. Use `ProjectApiKey`  resource instead.
func (o ProjectApiKeyTypeOutput) ApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectApiKeyType) string { return v.ApiKeyId }).(pulumi.StringOutput)
}

// List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project.  You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
func (o ProjectApiKeyTypeOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectApiKeyType) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

type ProjectApiKeyTypeArrayOutput struct{ *pulumi.OutputState }

func (ProjectApiKeyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectApiKeyType)(nil)).Elem()
}

func (o ProjectApiKeyTypeArrayOutput) ToProjectApiKeyTypeArrayOutput() ProjectApiKeyTypeArrayOutput {
	return o
}

func (o ProjectApiKeyTypeArrayOutput) ToProjectApiKeyTypeArrayOutputWithContext(ctx context.Context) ProjectApiKeyTypeArrayOutput {
	return o
}

func (o ProjectApiKeyTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ProjectApiKeyType] {
	return pulumix.Output[[]ProjectApiKeyType]{
		OutputState: o.OutputState,
	}
}

func (o ProjectApiKeyTypeArrayOutput) Index(i pulumi.IntInput) ProjectApiKeyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectApiKeyType {
		return vs[0].([]ProjectApiKeyType)[vs[1].(int)]
	}).(ProjectApiKeyTypeOutput)
}

type ProjectApiKeyProjectAssignment struct {
	// Project ID to assign to Access Key
	ProjectId string `pulumi:"projectId"`
	// List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project. You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#project-roles) describes the valid roles that can be assigned.
	RoleNames []string `pulumi:"roleNames"`
}

// ProjectApiKeyProjectAssignmentInput is an input type that accepts ProjectApiKeyProjectAssignmentArgs and ProjectApiKeyProjectAssignmentOutput values.
// You can construct a concrete instance of `ProjectApiKeyProjectAssignmentInput` via:
//
//	ProjectApiKeyProjectAssignmentArgs{...}
type ProjectApiKeyProjectAssignmentInput interface {
	pulumi.Input

	ToProjectApiKeyProjectAssignmentOutput() ProjectApiKeyProjectAssignmentOutput
	ToProjectApiKeyProjectAssignmentOutputWithContext(context.Context) ProjectApiKeyProjectAssignmentOutput
}

type ProjectApiKeyProjectAssignmentArgs struct {
	// Project ID to assign to Access Key
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project. You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#project-roles) describes the valid roles that can be assigned.
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
}

func (ProjectApiKeyProjectAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectApiKeyProjectAssignment)(nil)).Elem()
}

func (i ProjectApiKeyProjectAssignmentArgs) ToProjectApiKeyProjectAssignmentOutput() ProjectApiKeyProjectAssignmentOutput {
	return i.ToProjectApiKeyProjectAssignmentOutputWithContext(context.Background())
}

func (i ProjectApiKeyProjectAssignmentArgs) ToProjectApiKeyProjectAssignmentOutputWithContext(ctx context.Context) ProjectApiKeyProjectAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectApiKeyProjectAssignmentOutput)
}

func (i ProjectApiKeyProjectAssignmentArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectApiKeyProjectAssignment] {
	return pulumix.Output[ProjectApiKeyProjectAssignment]{
		OutputState: i.ToProjectApiKeyProjectAssignmentOutputWithContext(ctx).OutputState,
	}
}

// ProjectApiKeyProjectAssignmentArrayInput is an input type that accepts ProjectApiKeyProjectAssignmentArray and ProjectApiKeyProjectAssignmentArrayOutput values.
// You can construct a concrete instance of `ProjectApiKeyProjectAssignmentArrayInput` via:
//
//	ProjectApiKeyProjectAssignmentArray{ ProjectApiKeyProjectAssignmentArgs{...} }
type ProjectApiKeyProjectAssignmentArrayInput interface {
	pulumi.Input

	ToProjectApiKeyProjectAssignmentArrayOutput() ProjectApiKeyProjectAssignmentArrayOutput
	ToProjectApiKeyProjectAssignmentArrayOutputWithContext(context.Context) ProjectApiKeyProjectAssignmentArrayOutput
}

type ProjectApiKeyProjectAssignmentArray []ProjectApiKeyProjectAssignmentInput

func (ProjectApiKeyProjectAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectApiKeyProjectAssignment)(nil)).Elem()
}

func (i ProjectApiKeyProjectAssignmentArray) ToProjectApiKeyProjectAssignmentArrayOutput() ProjectApiKeyProjectAssignmentArrayOutput {
	return i.ToProjectApiKeyProjectAssignmentArrayOutputWithContext(context.Background())
}

func (i ProjectApiKeyProjectAssignmentArray) ToProjectApiKeyProjectAssignmentArrayOutputWithContext(ctx context.Context) ProjectApiKeyProjectAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectApiKeyProjectAssignmentArrayOutput)
}

func (i ProjectApiKeyProjectAssignmentArray) ToOutput(ctx context.Context) pulumix.Output[[]ProjectApiKeyProjectAssignment] {
	return pulumix.Output[[]ProjectApiKeyProjectAssignment]{
		OutputState: i.ToProjectApiKeyProjectAssignmentArrayOutputWithContext(ctx).OutputState,
	}
}

type ProjectApiKeyProjectAssignmentOutput struct{ *pulumi.OutputState }

func (ProjectApiKeyProjectAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectApiKeyProjectAssignment)(nil)).Elem()
}

func (o ProjectApiKeyProjectAssignmentOutput) ToProjectApiKeyProjectAssignmentOutput() ProjectApiKeyProjectAssignmentOutput {
	return o
}

func (o ProjectApiKeyProjectAssignmentOutput) ToProjectApiKeyProjectAssignmentOutputWithContext(ctx context.Context) ProjectApiKeyProjectAssignmentOutput {
	return o
}

func (o ProjectApiKeyProjectAssignmentOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectApiKeyProjectAssignment] {
	return pulumix.Output[ProjectApiKeyProjectAssignment]{
		OutputState: o.OutputState,
	}
}

// Project ID to assign to Access Key
func (o ProjectApiKeyProjectAssignmentOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectApiKeyProjectAssignment) string { return v.ProjectId }).(pulumi.StringOutput)
}

// List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project. You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#project-roles) describes the valid roles that can be assigned.
func (o ProjectApiKeyProjectAssignmentOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectApiKeyProjectAssignment) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

type ProjectApiKeyProjectAssignmentArrayOutput struct{ *pulumi.OutputState }

func (ProjectApiKeyProjectAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectApiKeyProjectAssignment)(nil)).Elem()
}

func (o ProjectApiKeyProjectAssignmentArrayOutput) ToProjectApiKeyProjectAssignmentArrayOutput() ProjectApiKeyProjectAssignmentArrayOutput {
	return o
}

func (o ProjectApiKeyProjectAssignmentArrayOutput) ToProjectApiKeyProjectAssignmentArrayOutputWithContext(ctx context.Context) ProjectApiKeyProjectAssignmentArrayOutput {
	return o
}

func (o ProjectApiKeyProjectAssignmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ProjectApiKeyProjectAssignment] {
	return pulumix.Output[[]ProjectApiKeyProjectAssignment]{
		OutputState: o.OutputState,
	}
}

func (o ProjectApiKeyProjectAssignmentArrayOutput) Index(i pulumi.IntInput) ProjectApiKeyProjectAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectApiKeyProjectAssignment {
		return vs[0].([]ProjectApiKeyProjectAssignment)[vs[1].(int)]
	}).(ProjectApiKeyProjectAssignmentOutput)
}

type ProjectLimit struct {
	CurrentUsage *int `pulumi:"currentUsage"`
	DefaultLimit *int `pulumi:"defaultLimit"`
	MaximumLimit *int `pulumi:"maximumLimit"`
	// Human-readable label that identifies this project limit. See [Project Limit Documentation](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects/operation/setProjectLimit) under `limitName` parameter to find all the limits that can be defined.
	Name string `pulumi:"name"`
	// Amount to set the limit to. Use the [Project Limit Documentation](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects/operation/setProjectLimit) under `limitName` parameter to verify the override limits.
	Value int `pulumi:"value"`
}

// ProjectLimitInput is an input type that accepts ProjectLimitArgs and ProjectLimitOutput values.
// You can construct a concrete instance of `ProjectLimitInput` via:
//
//	ProjectLimitArgs{...}
type ProjectLimitInput interface {
	pulumi.Input

	ToProjectLimitOutput() ProjectLimitOutput
	ToProjectLimitOutputWithContext(context.Context) ProjectLimitOutput
}

type ProjectLimitArgs struct {
	CurrentUsage pulumi.IntPtrInput `pulumi:"currentUsage"`
	DefaultLimit pulumi.IntPtrInput `pulumi:"defaultLimit"`
	MaximumLimit pulumi.IntPtrInput `pulumi:"maximumLimit"`
	// Human-readable label that identifies this project limit. See [Project Limit Documentation](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects/operation/setProjectLimit) under `limitName` parameter to find all the limits that can be defined.
	Name pulumi.StringInput `pulumi:"name"`
	// Amount to set the limit to. Use the [Project Limit Documentation](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects/operation/setProjectLimit) under `limitName` parameter to verify the override limits.
	Value pulumi.IntInput `pulumi:"value"`
}

func (ProjectLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLimit)(nil)).Elem()
}

func (i ProjectLimitArgs) ToProjectLimitOutput() ProjectLimitOutput {
	return i.ToProjectLimitOutputWithContext(context.Background())
}

func (i ProjectLimitArgs) ToProjectLimitOutputWithContext(ctx context.Context) ProjectLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLimitOutput)
}

func (i ProjectLimitArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectLimit] {
	return pulumix.Output[ProjectLimit]{
		OutputState: i.ToProjectLimitOutputWithContext(ctx).OutputState,
	}
}

// ProjectLimitArrayInput is an input type that accepts ProjectLimitArray and ProjectLimitArrayOutput values.
// You can construct a concrete instance of `ProjectLimitArrayInput` via:
//
//	ProjectLimitArray{ ProjectLimitArgs{...} }
type ProjectLimitArrayInput interface {
	pulumi.Input

	ToProjectLimitArrayOutput() ProjectLimitArrayOutput
	ToProjectLimitArrayOutputWithContext(context.Context) ProjectLimitArrayOutput
}

type ProjectLimitArray []ProjectLimitInput

func (ProjectLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectLimit)(nil)).Elem()
}

func (i ProjectLimitArray) ToProjectLimitArrayOutput() ProjectLimitArrayOutput {
	return i.ToProjectLimitArrayOutputWithContext(context.Background())
}

func (i ProjectLimitArray) ToProjectLimitArrayOutputWithContext(ctx context.Context) ProjectLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLimitArrayOutput)
}

func (i ProjectLimitArray) ToOutput(ctx context.Context) pulumix.Output[[]ProjectLimit] {
	return pulumix.Output[[]ProjectLimit]{
		OutputState: i.ToProjectLimitArrayOutputWithContext(ctx).OutputState,
	}
}

type ProjectLimitOutput struct{ *pulumi.OutputState }

func (ProjectLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLimit)(nil)).Elem()
}

func (o ProjectLimitOutput) ToProjectLimitOutput() ProjectLimitOutput {
	return o
}

func (o ProjectLimitOutput) ToProjectLimitOutputWithContext(ctx context.Context) ProjectLimitOutput {
	return o
}

func (o ProjectLimitOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectLimit] {
	return pulumix.Output[ProjectLimit]{
		OutputState: o.OutputState,
	}
}

func (o ProjectLimitOutput) CurrentUsage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectLimit) *int { return v.CurrentUsage }).(pulumi.IntPtrOutput)
}

func (o ProjectLimitOutput) DefaultLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectLimit) *int { return v.DefaultLimit }).(pulumi.IntPtrOutput)
}

func (o ProjectLimitOutput) MaximumLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectLimit) *int { return v.MaximumLimit }).(pulumi.IntPtrOutput)
}

// Human-readable label that identifies this project limit. See [Project Limit Documentation](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects/operation/setProjectLimit) under `limitName` parameter to find all the limits that can be defined.
func (o ProjectLimitOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectLimit) string { return v.Name }).(pulumi.StringOutput)
}

// Amount to set the limit to. Use the [Project Limit Documentation](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects/operation/setProjectLimit) under `limitName` parameter to verify the override limits.
func (o ProjectLimitOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v ProjectLimit) int { return v.Value }).(pulumi.IntOutput)
}

type ProjectLimitArrayOutput struct{ *pulumi.OutputState }

func (ProjectLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectLimit)(nil)).Elem()
}

func (o ProjectLimitArrayOutput) ToProjectLimitArrayOutput() ProjectLimitArrayOutput {
	return o
}

func (o ProjectLimitArrayOutput) ToProjectLimitArrayOutputWithContext(ctx context.Context) ProjectLimitArrayOutput {
	return o
}

func (o ProjectLimitArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ProjectLimit] {
	return pulumix.Output[[]ProjectLimit]{
		OutputState: o.OutputState,
	}
}

func (o ProjectLimitArrayOutput) Index(i pulumi.IntInput) ProjectLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectLimit {
		return vs[0].([]ProjectLimit)[vs[1].(int)]
	}).(ProjectLimitOutput)
}

type ProjectTeam struct {
	// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
	//
	// > **NOTE:** Project created by API Keys must belong to an existing organization.
	RoleNames []string `pulumi:"roleNames"`
	// The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	TeamId string `pulumi:"teamId"`
}

// ProjectTeamInput is an input type that accepts ProjectTeamArgs and ProjectTeamOutput values.
// You can construct a concrete instance of `ProjectTeamInput` via:
//
//	ProjectTeamArgs{...}
type ProjectTeamInput interface {
	pulumi.Input

	ToProjectTeamOutput() ProjectTeamOutput
	ToProjectTeamOutputWithContext(context.Context) ProjectTeamOutput
}

type ProjectTeamArgs struct {
	// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
	//
	// > **NOTE:** Project created by API Keys must belong to an existing organization.
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	// The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	TeamId pulumi.StringInput `pulumi:"teamId"`
}

func (ProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTeam)(nil)).Elem()
}

func (i ProjectTeamArgs) ToProjectTeamOutput() ProjectTeamOutput {
	return i.ToProjectTeamOutputWithContext(context.Background())
}

func (i ProjectTeamArgs) ToProjectTeamOutputWithContext(ctx context.Context) ProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTeamOutput)
}

func (i ProjectTeamArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectTeam] {
	return pulumix.Output[ProjectTeam]{
		OutputState: i.ToProjectTeamOutputWithContext(ctx).OutputState,
	}
}

// ProjectTeamArrayInput is an input type that accepts ProjectTeamArray and ProjectTeamArrayOutput values.
// You can construct a concrete instance of `ProjectTeamArrayInput` via:
//
//	ProjectTeamArray{ ProjectTeamArgs{...} }
type ProjectTeamArrayInput interface {
	pulumi.Input

	ToProjectTeamArrayOutput() ProjectTeamArrayOutput
	ToProjectTeamArrayOutputWithContext(context.Context) ProjectTeamArrayOutput
}

type ProjectTeamArray []ProjectTeamInput

func (ProjectTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTeam)(nil)).Elem()
}

func (i ProjectTeamArray) ToProjectTeamArrayOutput() ProjectTeamArrayOutput {
	return i.ToProjectTeamArrayOutputWithContext(context.Background())
}

func (i ProjectTeamArray) ToProjectTeamArrayOutputWithContext(ctx context.Context) ProjectTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTeamArrayOutput)
}

func (i ProjectTeamArray) ToOutput(ctx context.Context) pulumix.Output[[]ProjectTeam] {
	return pulumix.Output[[]ProjectTeam]{
		OutputState: i.ToProjectTeamArrayOutputWithContext(ctx).OutputState,
	}
}

type ProjectTeamOutput struct{ *pulumi.OutputState }

func (ProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTeam)(nil)).Elem()
}

func (o ProjectTeamOutput) ToProjectTeamOutput() ProjectTeamOutput {
	return o
}

func (o ProjectTeamOutput) ToProjectTeamOutputWithContext(ctx context.Context) ProjectTeamOutput {
	return o
}

func (o ProjectTeamOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectTeam] {
	return pulumix.Output[ProjectTeam]{
		OutputState: o.OutputState,
	}
}

// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
//
// > **NOTE:** Project created by API Keys must belong to an existing organization.
func (o ProjectTeamOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectTeam) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

// The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
func (o ProjectTeamOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTeam) string { return v.TeamId }).(pulumi.StringOutput)
}

type ProjectTeamArrayOutput struct{ *pulumi.OutputState }

func (ProjectTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTeam)(nil)).Elem()
}

func (o ProjectTeamArrayOutput) ToProjectTeamArrayOutput() ProjectTeamArrayOutput {
	return o
}

func (o ProjectTeamArrayOutput) ToProjectTeamArrayOutputWithContext(ctx context.Context) ProjectTeamArrayOutput {
	return o
}

func (o ProjectTeamArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ProjectTeam] {
	return pulumix.Output[[]ProjectTeam]{
		OutputState: o.OutputState,
	}
}

func (o ProjectTeamArrayOutput) Index(i pulumi.IntInput) ProjectTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTeam {
		return vs[0].([]ProjectTeam)[vs[1].(int)]
	}).(ProjectTeamOutput)
}

type ProviderAssumeRole struct {
	Duration *string `pulumi:"duration"`
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to assume_role.duration
	DurationSeconds   *int              `pulumi:"durationSeconds"`
	ExternalId        *string           `pulumi:"externalId"`
	Policy            *string           `pulumi:"policy"`
	PolicyArns        []string          `pulumi:"policyArns"`
	RoleArn           *string           `pulumi:"roleArn"`
	SessionName       *string           `pulumi:"sessionName"`
	SourceIdentity    *string           `pulumi:"sourceIdentity"`
	Tags              map[string]string `pulumi:"tags"`
	TransitiveTagKeys []string          `pulumi:"transitiveTagKeys"`
}

// ProviderAssumeRoleInput is an input type that accepts ProviderAssumeRoleArgs and ProviderAssumeRoleOutput values.
// You can construct a concrete instance of `ProviderAssumeRoleInput` via:
//
//	ProviderAssumeRoleArgs{...}
type ProviderAssumeRoleInput interface {
	pulumi.Input

	ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput
	ToProviderAssumeRoleOutputWithContext(context.Context) ProviderAssumeRoleOutput
}

type ProviderAssumeRoleArgs struct {
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to assume_role.duration
	DurationSeconds   pulumi.IntPtrInput      `pulumi:"durationSeconds"`
	ExternalId        pulumi.StringPtrInput   `pulumi:"externalId"`
	Policy            pulumi.StringPtrInput   `pulumi:"policy"`
	PolicyArns        pulumi.StringArrayInput `pulumi:"policyArns"`
	RoleArn           pulumi.StringPtrInput   `pulumi:"roleArn"`
	SessionName       pulumi.StringPtrInput   `pulumi:"sessionName"`
	SourceIdentity    pulumi.StringPtrInput   `pulumi:"sourceIdentity"`
	Tags              pulumi.StringMapInput   `pulumi:"tags"`
	TransitiveTagKeys pulumi.StringArrayInput `pulumi:"transitiveTagKeys"`
}

func (ProviderAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return i.ToProviderAssumeRoleOutputWithContext(context.Background())
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRoleOutput)
}

func (i ProviderAssumeRoleArgs) ToOutput(ctx context.Context) pulumix.Output[ProviderAssumeRole] {
	return pulumix.Output[ProviderAssumeRole]{
		OutputState: i.ToProviderAssumeRoleOutputWithContext(ctx).OutputState,
	}
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return i.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRoleOutput).ToProviderAssumeRolePtrOutputWithContext(ctx)
}

// ProviderAssumeRolePtrInput is an input type that accepts ProviderAssumeRoleArgs, ProviderAssumeRolePtr and ProviderAssumeRolePtrOutput values.
// You can construct a concrete instance of `ProviderAssumeRolePtrInput` via:
//
//	        ProviderAssumeRoleArgs{...}
//
//	or:
//
//	        nil
type ProviderAssumeRolePtrInput interface {
	pulumi.Input

	ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput
	ToProviderAssumeRolePtrOutputWithContext(context.Context) ProviderAssumeRolePtrOutput
}

type providerAssumeRolePtrType ProviderAssumeRoleArgs

func ProviderAssumeRolePtr(v *ProviderAssumeRoleArgs) ProviderAssumeRolePtrInput {
	return (*providerAssumeRolePtrType)(v)
}

func (*providerAssumeRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAssumeRole)(nil)).Elem()
}

func (i *providerAssumeRolePtrType) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return i.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (i *providerAssumeRolePtrType) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRolePtrOutput)
}

func (i *providerAssumeRolePtrType) ToOutput(ctx context.Context) pulumix.Output[*ProviderAssumeRole] {
	return pulumix.Output[*ProviderAssumeRole]{
		OutputState: i.ToProviderAssumeRolePtrOutputWithContext(ctx).OutputState,
	}
}

type ProviderAssumeRoleOutput struct{ *pulumi.OutputState }

func (ProviderAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return o.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderAssumeRole) *ProviderAssumeRole {
		return &v
	}).(ProviderAssumeRolePtrOutput)
}

func (o ProviderAssumeRoleOutput) ToOutput(ctx context.Context) pulumix.Output[ProviderAssumeRole] {
	return pulumix.Output[ProviderAssumeRole]{
		OutputState: o.OutputState,
	}
}

func (o ProviderAssumeRoleOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to assume_role.duration
func (o ProviderAssumeRoleOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

func (o ProviderAssumeRoleOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRoleOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRoleOutput) PolicyArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderAssumeRole) []string { return v.PolicyArns }).(pulumi.StringArrayOutput)
}

func (o ProviderAssumeRoleOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRoleOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.SessionName }).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRoleOutput) SourceIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.SourceIdentity }).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRoleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProviderAssumeRole) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ProviderAssumeRoleOutput) TransitiveTagKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderAssumeRole) []string { return v.TransitiveTagKeys }).(pulumi.StringArrayOutput)
}

type ProviderAssumeRolePtrOutput struct{ *pulumi.OutputState }

func (ProviderAssumeRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAssumeRole)(nil)).Elem()
}

func (o ProviderAssumeRolePtrOutput) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return o
}

func (o ProviderAssumeRolePtrOutput) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return o
}

func (o ProviderAssumeRolePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ProviderAssumeRole] {
	return pulumix.Output[*ProviderAssumeRole]{
		OutputState: o.OutputState,
	}
}

func (o ProviderAssumeRolePtrOutput) Elem() ProviderAssumeRoleOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) ProviderAssumeRole {
		if v != nil {
			return *v
		}
		var ret ProviderAssumeRole
		return ret
	}).(ProviderAssumeRoleOutput)
}

func (o ProviderAssumeRolePtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to assume_role.duration
func (o ProviderAssumeRolePtrOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *int {
		if v == nil {
			return nil
		}
		return v.DurationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) PolicyArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) []string {
		if v == nil {
			return nil
		}
		return v.PolicyArns
	}).(pulumi.StringArrayOutput)
}

func (o ProviderAssumeRolePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.SessionName
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) SourceIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.SourceIdentity
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

func (o ProviderAssumeRolePtrOutput) TransitiveTagKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) []string {
		if v == nil {
			return nil
		}
		return v.TransitiveTagKeys
	}).(pulumi.StringArrayOutput)
}

type SearchIndexSynonym struct {
	// Name of the [analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use with this synonym mapping. Atlas Search doesn't support these [custom analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) tokenizers and token filters in [analyzers used in synonym mappings](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#options):
	// * [nGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-ngram-tokenizer-ref) Tokenizer
	// * [edgeGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-edgegram-tokenizer-ref) Tokenizers
	// * [daitchMokotoffSoundex](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-daitchmokotoffsoundex-tf-ref) token filter
	// * [nGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-ngram-tf-ref) token filter
	// * [edgeGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-edgegram-tf-ref) token filter
	// * [shingle](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-shingle-tf-ref) token filter
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	//
	// For more information see: [MongoDB Atlas API Reference.](https://docs.atlas.mongodb.com/atlas-search/) - [and MongoDB Atlas API - Search](https://docs.atlas.mongodb.com/reference/api/atlas-search/) Documentation for more information.
	Analyzer string `pulumi:"analyzer"`
	// Name of the [synonym mapping definition](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-ref). Name must be unique in this index definition and it can't be an empty string.
	Name string `pulumi:"name"`
	// Name of the source MongoDB collection for the synonyms. Documents in this collection must be in the format described in the [Synonyms Source Collection Documents](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-coll-spec).
	SourceCollection string `pulumi:"sourceCollection"`
}

// SearchIndexSynonymInput is an input type that accepts SearchIndexSynonymArgs and SearchIndexSynonymOutput values.
// You can construct a concrete instance of `SearchIndexSynonymInput` via:
//
//	SearchIndexSynonymArgs{...}
type SearchIndexSynonymInput interface {
	pulumi.Input

	ToSearchIndexSynonymOutput() SearchIndexSynonymOutput
	ToSearchIndexSynonymOutputWithContext(context.Context) SearchIndexSynonymOutput
}

type SearchIndexSynonymArgs struct {
	// Name of the [analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use with this synonym mapping. Atlas Search doesn't support these [custom analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) tokenizers and token filters in [analyzers used in synonym mappings](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#options):
	// * [nGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-ngram-tokenizer-ref) Tokenizer
	// * [edgeGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-edgegram-tokenizer-ref) Tokenizers
	// * [daitchMokotoffSoundex](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-daitchmokotoffsoundex-tf-ref) token filter
	// * [nGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-ngram-tf-ref) token filter
	// * [edgeGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-edgegram-tf-ref) token filter
	// * [shingle](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-shingle-tf-ref) token filter
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	//
	// For more information see: [MongoDB Atlas API Reference.](https://docs.atlas.mongodb.com/atlas-search/) - [and MongoDB Atlas API - Search](https://docs.atlas.mongodb.com/reference/api/atlas-search/) Documentation for more information.
	Analyzer pulumi.StringInput `pulumi:"analyzer"`
	// Name of the [synonym mapping definition](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-ref). Name must be unique in this index definition and it can't be an empty string.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the source MongoDB collection for the synonyms. Documents in this collection must be in the format described in the [Synonyms Source Collection Documents](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-coll-spec).
	SourceCollection pulumi.StringInput `pulumi:"sourceCollection"`
}

func (SearchIndexSynonymArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SearchIndexSynonym)(nil)).Elem()
}

func (i SearchIndexSynonymArgs) ToSearchIndexSynonymOutput() SearchIndexSynonymOutput {
	return i.ToSearchIndexSynonymOutputWithContext(context.Background())
}

func (i SearchIndexSynonymArgs) ToSearchIndexSynonymOutputWithContext(ctx context.Context) SearchIndexSynonymOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SearchIndexSynonymOutput)
}

func (i SearchIndexSynonymArgs) ToOutput(ctx context.Context) pulumix.Output[SearchIndexSynonym] {
	return pulumix.Output[SearchIndexSynonym]{
		OutputState: i.ToSearchIndexSynonymOutputWithContext(ctx).OutputState,
	}
}

// SearchIndexSynonymArrayInput is an input type that accepts SearchIndexSynonymArray and SearchIndexSynonymArrayOutput values.
// You can construct a concrete instance of `SearchIndexSynonymArrayInput` via:
//
//	SearchIndexSynonymArray{ SearchIndexSynonymArgs{...} }
type SearchIndexSynonymArrayInput interface {
	pulumi.Input

	ToSearchIndexSynonymArrayOutput() SearchIndexSynonymArrayOutput
	ToSearchIndexSynonymArrayOutputWithContext(context.Context) SearchIndexSynonymArrayOutput
}

type SearchIndexSynonymArray []SearchIndexSynonymInput

func (SearchIndexSynonymArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SearchIndexSynonym)(nil)).Elem()
}

func (i SearchIndexSynonymArray) ToSearchIndexSynonymArrayOutput() SearchIndexSynonymArrayOutput {
	return i.ToSearchIndexSynonymArrayOutputWithContext(context.Background())
}

func (i SearchIndexSynonymArray) ToSearchIndexSynonymArrayOutputWithContext(ctx context.Context) SearchIndexSynonymArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SearchIndexSynonymArrayOutput)
}

func (i SearchIndexSynonymArray) ToOutput(ctx context.Context) pulumix.Output[[]SearchIndexSynonym] {
	return pulumix.Output[[]SearchIndexSynonym]{
		OutputState: i.ToSearchIndexSynonymArrayOutputWithContext(ctx).OutputState,
	}
}

type SearchIndexSynonymOutput struct{ *pulumi.OutputState }

func (SearchIndexSynonymOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SearchIndexSynonym)(nil)).Elem()
}

func (o SearchIndexSynonymOutput) ToSearchIndexSynonymOutput() SearchIndexSynonymOutput {
	return o
}

func (o SearchIndexSynonymOutput) ToSearchIndexSynonymOutputWithContext(ctx context.Context) SearchIndexSynonymOutput {
	return o
}

func (o SearchIndexSynonymOutput) ToOutput(ctx context.Context) pulumix.Output[SearchIndexSynonym] {
	return pulumix.Output[SearchIndexSynonym]{
		OutputState: o.OutputState,
	}
}

// Name of the [analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use with this synonym mapping. Atlas Search doesn't support these [custom analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) tokenizers and token filters in [analyzers used in synonym mappings](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#options):
// * [nGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-ngram-tokenizer-ref) Tokenizer
// * [edgeGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-edgegram-tokenizer-ref) Tokenizers
// * [daitchMokotoffSoundex](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-daitchmokotoffsoundex-tf-ref) token filter
// * [nGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-ngram-tf-ref) token filter
// * [edgeGram](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-edgegram-tf-ref) token filter
// * [shingle](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-shingle-tf-ref) token filter
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
//
// For more information see: [MongoDB Atlas API Reference.](https://docs.atlas.mongodb.com/atlas-search/) - [and MongoDB Atlas API - Search](https://docs.atlas.mongodb.com/reference/api/atlas-search/) Documentation for more information.
func (o SearchIndexSynonymOutput) Analyzer() pulumi.StringOutput {
	return o.ApplyT(func(v SearchIndexSynonym) string { return v.Analyzer }).(pulumi.StringOutput)
}

// Name of the [synonym mapping definition](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-ref). Name must be unique in this index definition and it can't be an empty string.
func (o SearchIndexSynonymOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SearchIndexSynonym) string { return v.Name }).(pulumi.StringOutput)
}

// Name of the source MongoDB collection for the synonyms. Documents in this collection must be in the format described in the [Synonyms Source Collection Documents](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-coll-spec).
func (o SearchIndexSynonymOutput) SourceCollection() pulumi.StringOutput {
	return o.ApplyT(func(v SearchIndexSynonym) string { return v.SourceCollection }).(pulumi.StringOutput)
}

type SearchIndexSynonymArrayOutput struct{ *pulumi.OutputState }

func (SearchIndexSynonymArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SearchIndexSynonym)(nil)).Elem()
}

func (o SearchIndexSynonymArrayOutput) ToSearchIndexSynonymArrayOutput() SearchIndexSynonymArrayOutput {
	return o
}

func (o SearchIndexSynonymArrayOutput) ToSearchIndexSynonymArrayOutputWithContext(ctx context.Context) SearchIndexSynonymArrayOutput {
	return o
}

func (o SearchIndexSynonymArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SearchIndexSynonym] {
	return pulumix.Output[[]SearchIndexSynonym]{
		OutputState: o.OutputState,
	}
}

func (o SearchIndexSynonymArrayOutput) Index(i pulumi.IntInput) SearchIndexSynonymOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SearchIndexSynonym {
		return vs[0].([]SearchIndexSynonym)[vs[1].(int)]
	}).(SearchIndexSynonymOutput)
}

type ServerlessInstanceLink struct {
	Href *string `pulumi:"href"`
	Rel  *string `pulumi:"rel"`
}

// ServerlessInstanceLinkInput is an input type that accepts ServerlessInstanceLinkArgs and ServerlessInstanceLinkOutput values.
// You can construct a concrete instance of `ServerlessInstanceLinkInput` via:
//
//	ServerlessInstanceLinkArgs{...}
type ServerlessInstanceLinkInput interface {
	pulumi.Input

	ToServerlessInstanceLinkOutput() ServerlessInstanceLinkOutput
	ToServerlessInstanceLinkOutputWithContext(context.Context) ServerlessInstanceLinkOutput
}

type ServerlessInstanceLinkArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
	Rel  pulumi.StringPtrInput `pulumi:"rel"`
}

func (ServerlessInstanceLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessInstanceLink)(nil)).Elem()
}

func (i ServerlessInstanceLinkArgs) ToServerlessInstanceLinkOutput() ServerlessInstanceLinkOutput {
	return i.ToServerlessInstanceLinkOutputWithContext(context.Background())
}

func (i ServerlessInstanceLinkArgs) ToServerlessInstanceLinkOutputWithContext(ctx context.Context) ServerlessInstanceLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessInstanceLinkOutput)
}

func (i ServerlessInstanceLinkArgs) ToOutput(ctx context.Context) pulumix.Output[ServerlessInstanceLink] {
	return pulumix.Output[ServerlessInstanceLink]{
		OutputState: i.ToServerlessInstanceLinkOutputWithContext(ctx).OutputState,
	}
}

// ServerlessInstanceLinkArrayInput is an input type that accepts ServerlessInstanceLinkArray and ServerlessInstanceLinkArrayOutput values.
// You can construct a concrete instance of `ServerlessInstanceLinkArrayInput` via:
//
//	ServerlessInstanceLinkArray{ ServerlessInstanceLinkArgs{...} }
type ServerlessInstanceLinkArrayInput interface {
	pulumi.Input

	ToServerlessInstanceLinkArrayOutput() ServerlessInstanceLinkArrayOutput
	ToServerlessInstanceLinkArrayOutputWithContext(context.Context) ServerlessInstanceLinkArrayOutput
}

type ServerlessInstanceLinkArray []ServerlessInstanceLinkInput

func (ServerlessInstanceLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerlessInstanceLink)(nil)).Elem()
}

func (i ServerlessInstanceLinkArray) ToServerlessInstanceLinkArrayOutput() ServerlessInstanceLinkArrayOutput {
	return i.ToServerlessInstanceLinkArrayOutputWithContext(context.Background())
}

func (i ServerlessInstanceLinkArray) ToServerlessInstanceLinkArrayOutputWithContext(ctx context.Context) ServerlessInstanceLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessInstanceLinkArrayOutput)
}

func (i ServerlessInstanceLinkArray) ToOutput(ctx context.Context) pulumix.Output[[]ServerlessInstanceLink] {
	return pulumix.Output[[]ServerlessInstanceLink]{
		OutputState: i.ToServerlessInstanceLinkArrayOutputWithContext(ctx).OutputState,
	}
}

type ServerlessInstanceLinkOutput struct{ *pulumi.OutputState }

func (ServerlessInstanceLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessInstanceLink)(nil)).Elem()
}

func (o ServerlessInstanceLinkOutput) ToServerlessInstanceLinkOutput() ServerlessInstanceLinkOutput {
	return o
}

func (o ServerlessInstanceLinkOutput) ToServerlessInstanceLinkOutputWithContext(ctx context.Context) ServerlessInstanceLinkOutput {
	return o
}

func (o ServerlessInstanceLinkOutput) ToOutput(ctx context.Context) pulumix.Output[ServerlessInstanceLink] {
	return pulumix.Output[ServerlessInstanceLink]{
		OutputState: o.OutputState,
	}
}

func (o ServerlessInstanceLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerlessInstanceLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o ServerlessInstanceLinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerlessInstanceLink) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type ServerlessInstanceLinkArrayOutput struct{ *pulumi.OutputState }

func (ServerlessInstanceLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerlessInstanceLink)(nil)).Elem()
}

func (o ServerlessInstanceLinkArrayOutput) ToServerlessInstanceLinkArrayOutput() ServerlessInstanceLinkArrayOutput {
	return o
}

func (o ServerlessInstanceLinkArrayOutput) ToServerlessInstanceLinkArrayOutputWithContext(ctx context.Context) ServerlessInstanceLinkArrayOutput {
	return o
}

func (o ServerlessInstanceLinkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ServerlessInstanceLink] {
	return pulumix.Output[[]ServerlessInstanceLink]{
		OutputState: o.OutputState,
	}
}

func (o ServerlessInstanceLinkArrayOutput) Index(i pulumi.IntInput) ServerlessInstanceLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerlessInstanceLink {
		return vs[0].([]ServerlessInstanceLink)[vs[1].(int)]
	}).(ServerlessInstanceLinkOutput)
}

type X509AuthenticationDatabaseUserCertificate struct {
	CreatedAt *string `pulumi:"createdAt"`
	GroupId   *string `pulumi:"groupId"`
	Id        *int    `pulumi:"id"`
	NotAfter  *string `pulumi:"notAfter"`
	Subject   *string `pulumi:"subject"`
}

// X509AuthenticationDatabaseUserCertificateInput is an input type that accepts X509AuthenticationDatabaseUserCertificateArgs and X509AuthenticationDatabaseUserCertificateOutput values.
// You can construct a concrete instance of `X509AuthenticationDatabaseUserCertificateInput` via:
//
//	X509AuthenticationDatabaseUserCertificateArgs{...}
type X509AuthenticationDatabaseUserCertificateInput interface {
	pulumi.Input

	ToX509AuthenticationDatabaseUserCertificateOutput() X509AuthenticationDatabaseUserCertificateOutput
	ToX509AuthenticationDatabaseUserCertificateOutputWithContext(context.Context) X509AuthenticationDatabaseUserCertificateOutput
}

type X509AuthenticationDatabaseUserCertificateArgs struct {
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	GroupId   pulumi.StringPtrInput `pulumi:"groupId"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	NotAfter  pulumi.StringPtrInput `pulumi:"notAfter"`
	Subject   pulumi.StringPtrInput `pulumi:"subject"`
}

func (X509AuthenticationDatabaseUserCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i X509AuthenticationDatabaseUserCertificateArgs) ToX509AuthenticationDatabaseUserCertificateOutput() X509AuthenticationDatabaseUserCertificateOutput {
	return i.ToX509AuthenticationDatabaseUserCertificateOutputWithContext(context.Background())
}

func (i X509AuthenticationDatabaseUserCertificateArgs) ToX509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509AuthenticationDatabaseUserCertificateOutput)
}

func (i X509AuthenticationDatabaseUserCertificateArgs) ToOutput(ctx context.Context) pulumix.Output[X509AuthenticationDatabaseUserCertificate] {
	return pulumix.Output[X509AuthenticationDatabaseUserCertificate]{
		OutputState: i.ToX509AuthenticationDatabaseUserCertificateOutputWithContext(ctx).OutputState,
	}
}

// X509AuthenticationDatabaseUserCertificateArrayInput is an input type that accepts X509AuthenticationDatabaseUserCertificateArray and X509AuthenticationDatabaseUserCertificateArrayOutput values.
// You can construct a concrete instance of `X509AuthenticationDatabaseUserCertificateArrayInput` via:
//
//	X509AuthenticationDatabaseUserCertificateArray{ X509AuthenticationDatabaseUserCertificateArgs{...} }
type X509AuthenticationDatabaseUserCertificateArrayInput interface {
	pulumi.Input

	ToX509AuthenticationDatabaseUserCertificateArrayOutput() X509AuthenticationDatabaseUserCertificateArrayOutput
	ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Context) X509AuthenticationDatabaseUserCertificateArrayOutput
}

type X509AuthenticationDatabaseUserCertificateArray []X509AuthenticationDatabaseUserCertificateInput

func (X509AuthenticationDatabaseUserCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i X509AuthenticationDatabaseUserCertificateArray) ToX509AuthenticationDatabaseUserCertificateArrayOutput() X509AuthenticationDatabaseUserCertificateArrayOutput {
	return i.ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Background())
}

func (i X509AuthenticationDatabaseUserCertificateArray) ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509AuthenticationDatabaseUserCertificateArrayOutput)
}

func (i X509AuthenticationDatabaseUserCertificateArray) ToOutput(ctx context.Context) pulumix.Output[[]X509AuthenticationDatabaseUserCertificate] {
	return pulumix.Output[[]X509AuthenticationDatabaseUserCertificate]{
		OutputState: i.ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx).OutputState,
	}
}

type X509AuthenticationDatabaseUserCertificateOutput struct{ *pulumi.OutputState }

func (X509AuthenticationDatabaseUserCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o X509AuthenticationDatabaseUserCertificateOutput) ToX509AuthenticationDatabaseUserCertificateOutput() X509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateOutput) ToX509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateOutput) ToOutput(ctx context.Context) pulumix.Output[X509AuthenticationDatabaseUserCertificate] {
	return pulumix.Output[X509AuthenticationDatabaseUserCertificate]{
		OutputState: o.OutputState,
	}
}

func (o X509AuthenticationDatabaseUserCertificateOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) NotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.NotAfter }).(pulumi.StringPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

type X509AuthenticationDatabaseUserCertificateArrayOutput struct{ *pulumi.OutputState }

func (X509AuthenticationDatabaseUserCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o X509AuthenticationDatabaseUserCertificateArrayOutput) ToX509AuthenticationDatabaseUserCertificateArrayOutput() X509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateArrayOutput) ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]X509AuthenticationDatabaseUserCertificate] {
	return pulumix.Output[[]X509AuthenticationDatabaseUserCertificate]{
		OutputState: o.OutputState,
	}
}

func (o X509AuthenticationDatabaseUserCertificateArrayOutput) Index(i pulumi.IntInput) X509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) X509AuthenticationDatabaseUserCertificate {
		return vs[0].([]X509AuthenticationDatabaseUserCertificate)[vs[1].(int)]
	}).(X509AuthenticationDatabaseUserCertificateOutput)
}

type Get509AuthenticationDatabaseUserCertificate struct {
	CreatedAt string `pulumi:"createdAt"`
	GroupId   string `pulumi:"groupId"`
	Id        int    `pulumi:"id"`
	NotAfter  string `pulumi:"notAfter"`
	Subject   string `pulumi:"subject"`
}

// Get509AuthenticationDatabaseUserCertificateInput is an input type that accepts Get509AuthenticationDatabaseUserCertificateArgs and Get509AuthenticationDatabaseUserCertificateOutput values.
// You can construct a concrete instance of `Get509AuthenticationDatabaseUserCertificateInput` via:
//
//	Get509AuthenticationDatabaseUserCertificateArgs{...}
type Get509AuthenticationDatabaseUserCertificateInput interface {
	pulumi.Input

	ToGet509AuthenticationDatabaseUserCertificateOutput() Get509AuthenticationDatabaseUserCertificateOutput
	ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(context.Context) Get509AuthenticationDatabaseUserCertificateOutput
}

type Get509AuthenticationDatabaseUserCertificateArgs struct {
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	GroupId   pulumi.StringInput `pulumi:"groupId"`
	Id        pulumi.IntInput    `pulumi:"id"`
	NotAfter  pulumi.StringInput `pulumi:"notAfter"`
	Subject   pulumi.StringInput `pulumi:"subject"`
}

func (Get509AuthenticationDatabaseUserCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i Get509AuthenticationDatabaseUserCertificateArgs) ToGet509AuthenticationDatabaseUserCertificateOutput() Get509AuthenticationDatabaseUserCertificateOutput {
	return i.ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(context.Background())
}

func (i Get509AuthenticationDatabaseUserCertificateArgs) ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Get509AuthenticationDatabaseUserCertificateOutput)
}

func (i Get509AuthenticationDatabaseUserCertificateArgs) ToOutput(ctx context.Context) pulumix.Output[Get509AuthenticationDatabaseUserCertificate] {
	return pulumix.Output[Get509AuthenticationDatabaseUserCertificate]{
		OutputState: i.ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(ctx).OutputState,
	}
}

// Get509AuthenticationDatabaseUserCertificateArrayInput is an input type that accepts Get509AuthenticationDatabaseUserCertificateArray and Get509AuthenticationDatabaseUserCertificateArrayOutput values.
// You can construct a concrete instance of `Get509AuthenticationDatabaseUserCertificateArrayInput` via:
//
//	Get509AuthenticationDatabaseUserCertificateArray{ Get509AuthenticationDatabaseUserCertificateArgs{...} }
type Get509AuthenticationDatabaseUserCertificateArrayInput interface {
	pulumi.Input

	ToGet509AuthenticationDatabaseUserCertificateArrayOutput() Get509AuthenticationDatabaseUserCertificateArrayOutput
	ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Context) Get509AuthenticationDatabaseUserCertificateArrayOutput
}

type Get509AuthenticationDatabaseUserCertificateArray []Get509AuthenticationDatabaseUserCertificateInput

func (Get509AuthenticationDatabaseUserCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i Get509AuthenticationDatabaseUserCertificateArray) ToGet509AuthenticationDatabaseUserCertificateArrayOutput() Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return i.ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Background())
}

func (i Get509AuthenticationDatabaseUserCertificateArray) ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Get509AuthenticationDatabaseUserCertificateArrayOutput)
}

func (i Get509AuthenticationDatabaseUserCertificateArray) ToOutput(ctx context.Context) pulumix.Output[[]Get509AuthenticationDatabaseUserCertificate] {
	return pulumix.Output[[]Get509AuthenticationDatabaseUserCertificate]{
		OutputState: i.ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx).OutputState,
	}
}

type Get509AuthenticationDatabaseUserCertificateOutput struct{ *pulumi.OutputState }

func (Get509AuthenticationDatabaseUserCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) ToGet509AuthenticationDatabaseUserCertificateOutput() Get509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) ToOutput(ctx context.Context) pulumix.Output[Get509AuthenticationDatabaseUserCertificate] {
	return pulumix.Output[Get509AuthenticationDatabaseUserCertificate]{
		OutputState: o.OutputState,
	}
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.GroupId }).(pulumi.StringOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) int { return v.Id }).(pulumi.IntOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) NotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.NotAfter }).(pulumi.StringOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.Subject }).(pulumi.StringOutput)
}

type Get509AuthenticationDatabaseUserCertificateArrayOutput struct{ *pulumi.OutputState }

func (Get509AuthenticationDatabaseUserCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o Get509AuthenticationDatabaseUserCertificateArrayOutput) ToGet509AuthenticationDatabaseUserCertificateArrayOutput() Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateArrayOutput) ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]Get509AuthenticationDatabaseUserCertificate] {
	return pulumix.Output[[]Get509AuthenticationDatabaseUserCertificate]{
		OutputState: o.OutputState,
	}
}

func (o Get509AuthenticationDatabaseUserCertificateArrayOutput) Index(i pulumi.IntInput) Get509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Get509AuthenticationDatabaseUserCertificate {
		return vs[0].([]Get509AuthenticationDatabaseUserCertificate)[vs[1].(int)]
	}).(Get509AuthenticationDatabaseUserCertificateOutput)
}

type GetAccessListApiKeysResult struct {
	AccessCount int `pulumi:"accessCount"`
	// Range of IP addresses in CIDR notation to be added to the access list.
	CidrBlock string `pulumi:"cidrBlock"`
	Created   string `pulumi:"created"`
	// Single IP address to be added to the access list.
	IpAddress       string `pulumi:"ipAddress"`
	LastUsed        string `pulumi:"lastUsed"`
	LastUsedAddress string `pulumi:"lastUsedAddress"`
}

// GetAccessListApiKeysResultInput is an input type that accepts GetAccessListApiKeysResultArgs and GetAccessListApiKeysResultOutput values.
// You can construct a concrete instance of `GetAccessListApiKeysResultInput` via:
//
//	GetAccessListApiKeysResultArgs{...}
type GetAccessListApiKeysResultInput interface {
	pulumi.Input

	ToGetAccessListApiKeysResultOutput() GetAccessListApiKeysResultOutput
	ToGetAccessListApiKeysResultOutputWithContext(context.Context) GetAccessListApiKeysResultOutput
}

type GetAccessListApiKeysResultArgs struct {
	AccessCount pulumi.IntInput `pulumi:"accessCount"`
	// Range of IP addresses in CIDR notation to be added to the access list.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	Created   pulumi.StringInput `pulumi:"created"`
	// Single IP address to be added to the access list.
	IpAddress       pulumi.StringInput `pulumi:"ipAddress"`
	LastUsed        pulumi.StringInput `pulumi:"lastUsed"`
	LastUsedAddress pulumi.StringInput `pulumi:"lastUsedAddress"`
}

func (GetAccessListApiKeysResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessListApiKeysResult)(nil)).Elem()
}

func (i GetAccessListApiKeysResultArgs) ToGetAccessListApiKeysResultOutput() GetAccessListApiKeysResultOutput {
	return i.ToGetAccessListApiKeysResultOutputWithContext(context.Background())
}

func (i GetAccessListApiKeysResultArgs) ToGetAccessListApiKeysResultOutputWithContext(ctx context.Context) GetAccessListApiKeysResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessListApiKeysResultOutput)
}

func (i GetAccessListApiKeysResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetAccessListApiKeysResult] {
	return pulumix.Output[GetAccessListApiKeysResult]{
		OutputState: i.ToGetAccessListApiKeysResultOutputWithContext(ctx).OutputState,
	}
}

// GetAccessListApiKeysResultArrayInput is an input type that accepts GetAccessListApiKeysResultArray and GetAccessListApiKeysResultArrayOutput values.
// You can construct a concrete instance of `GetAccessListApiKeysResultArrayInput` via:
//
//	GetAccessListApiKeysResultArray{ GetAccessListApiKeysResultArgs{...} }
type GetAccessListApiKeysResultArrayInput interface {
	pulumi.Input

	ToGetAccessListApiKeysResultArrayOutput() GetAccessListApiKeysResultArrayOutput
	ToGetAccessListApiKeysResultArrayOutputWithContext(context.Context) GetAccessListApiKeysResultArrayOutput
}

type GetAccessListApiKeysResultArray []GetAccessListApiKeysResultInput

func (GetAccessListApiKeysResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessListApiKeysResult)(nil)).Elem()
}

func (i GetAccessListApiKeysResultArray) ToGetAccessListApiKeysResultArrayOutput() GetAccessListApiKeysResultArrayOutput {
	return i.ToGetAccessListApiKeysResultArrayOutputWithContext(context.Background())
}

func (i GetAccessListApiKeysResultArray) ToGetAccessListApiKeysResultArrayOutputWithContext(ctx context.Context) GetAccessListApiKeysResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessListApiKeysResultArrayOutput)
}

func (i GetAccessListApiKeysResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAccessListApiKeysResult] {
	return pulumix.Output[[]GetAccessListApiKeysResult]{
		OutputState: i.ToGetAccessListApiKeysResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAccessListApiKeysResultOutput struct{ *pulumi.OutputState }

func (GetAccessListApiKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessListApiKeysResult)(nil)).Elem()
}

func (o GetAccessListApiKeysResultOutput) ToGetAccessListApiKeysResultOutput() GetAccessListApiKeysResultOutput {
	return o
}

func (o GetAccessListApiKeysResultOutput) ToGetAccessListApiKeysResultOutputWithContext(ctx context.Context) GetAccessListApiKeysResultOutput {
	return o
}

func (o GetAccessListApiKeysResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetAccessListApiKeysResult] {
	return pulumix.Output[GetAccessListApiKeysResult]{
		OutputState: o.OutputState,
	}
}

func (o GetAccessListApiKeysResultOutput) AccessCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessListApiKeysResult) int { return v.AccessCount }).(pulumi.IntOutput)
}

// Range of IP addresses in CIDR notation to be added to the access list.
func (o GetAccessListApiKeysResultOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessListApiKeysResult) string { return v.CidrBlock }).(pulumi.StringOutput)
}

func (o GetAccessListApiKeysResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessListApiKeysResult) string { return v.Created }).(pulumi.StringOutput)
}

// Single IP address to be added to the access list.
func (o GetAccessListApiKeysResultOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessListApiKeysResult) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetAccessListApiKeysResultOutput) LastUsed() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessListApiKeysResult) string { return v.LastUsed }).(pulumi.StringOutput)
}

func (o GetAccessListApiKeysResultOutput) LastUsedAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessListApiKeysResult) string { return v.LastUsedAddress }).(pulumi.StringOutput)
}

type GetAccessListApiKeysResultArrayOutput struct{ *pulumi.OutputState }

func (GetAccessListApiKeysResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessListApiKeysResult)(nil)).Elem()
}

func (o GetAccessListApiKeysResultArrayOutput) ToGetAccessListApiKeysResultArrayOutput() GetAccessListApiKeysResultArrayOutput {
	return o
}

func (o GetAccessListApiKeysResultArrayOutput) ToGetAccessListApiKeysResultArrayOutputWithContext(ctx context.Context) GetAccessListApiKeysResultArrayOutput {
	return o
}

func (o GetAccessListApiKeysResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAccessListApiKeysResult] {
	return pulumix.Output[[]GetAccessListApiKeysResult]{
		OutputState: o.OutputState,
	}
}

func (o GetAccessListApiKeysResultArrayOutput) Index(i pulumi.IntInput) GetAccessListApiKeysResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessListApiKeysResult {
		return vs[0].([]GetAccessListApiKeysResult)[vs[1].(int)]
	}).(GetAccessListApiKeysResultOutput)
}

type GetAdvancedClusterAdvancedConfiguration struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern string `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern string `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong bool `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled bool `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol string `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan bool `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours int `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb int `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector int `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector int `pulumi:"sampleSizeBiConnector"`
	// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
	TransactionLifetimeLimitSeconds int `pulumi:"transactionLifetimeLimitSeconds"`
}

// GetAdvancedClusterAdvancedConfigurationInput is an input type that accepts GetAdvancedClusterAdvancedConfigurationArgs and GetAdvancedClusterAdvancedConfigurationOutput values.
// You can construct a concrete instance of `GetAdvancedClusterAdvancedConfigurationInput` via:
//
//	GetAdvancedClusterAdvancedConfigurationArgs{...}
type GetAdvancedClusterAdvancedConfigurationInput interface {
	pulumi.Input

	ToGetAdvancedClusterAdvancedConfigurationOutput() GetAdvancedClusterAdvancedConfigurationOutput
	ToGetAdvancedClusterAdvancedConfigurationOutputWithContext(context.Context) GetAdvancedClusterAdvancedConfigurationOutput
}

type GetAdvancedClusterAdvancedConfigurationArgs struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern pulumi.StringInput `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern pulumi.StringInput `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong pulumi.BoolInput `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled pulumi.BoolInput `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol pulumi.StringInput `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan pulumi.BoolInput `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours pulumi.IntInput `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb pulumi.IntInput `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector pulumi.IntInput `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector pulumi.IntInput `pulumi:"sampleSizeBiConnector"`
	// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
	TransactionLifetimeLimitSeconds pulumi.IntInput `pulumi:"transactionLifetimeLimitSeconds"`
}

func (GetAdvancedClusterAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (i GetAdvancedClusterAdvancedConfigurationArgs) ToGetAdvancedClusterAdvancedConfigurationOutput() GetAdvancedClusterAdvancedConfigurationOutput {
	return i.ToGetAdvancedClusterAdvancedConfigurationOutputWithContext(context.Background())
}

func (i GetAdvancedClusterAdvancedConfigurationArgs) ToGetAdvancedClusterAdvancedConfigurationOutputWithContext(ctx context.Context) GetAdvancedClusterAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterAdvancedConfigurationOutput)
}

func (i GetAdvancedClusterAdvancedConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterAdvancedConfiguration] {
	return pulumix.Output[GetAdvancedClusterAdvancedConfiguration]{
		OutputState: i.ToGetAdvancedClusterAdvancedConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClusterAdvancedConfigurationArrayInput is an input type that accepts GetAdvancedClusterAdvancedConfigurationArray and GetAdvancedClusterAdvancedConfigurationArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterAdvancedConfigurationArrayInput` via:
//
//	GetAdvancedClusterAdvancedConfigurationArray{ GetAdvancedClusterAdvancedConfigurationArgs{...} }
type GetAdvancedClusterAdvancedConfigurationArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterAdvancedConfigurationArrayOutput() GetAdvancedClusterAdvancedConfigurationArrayOutput
	ToGetAdvancedClusterAdvancedConfigurationArrayOutputWithContext(context.Context) GetAdvancedClusterAdvancedConfigurationArrayOutput
}

type GetAdvancedClusterAdvancedConfigurationArray []GetAdvancedClusterAdvancedConfigurationInput

func (GetAdvancedClusterAdvancedConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (i GetAdvancedClusterAdvancedConfigurationArray) ToGetAdvancedClusterAdvancedConfigurationArrayOutput() GetAdvancedClusterAdvancedConfigurationArrayOutput {
	return i.ToGetAdvancedClusterAdvancedConfigurationArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterAdvancedConfigurationArray) ToGetAdvancedClusterAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetAdvancedClusterAdvancedConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterAdvancedConfigurationArrayOutput)
}

func (i GetAdvancedClusterAdvancedConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterAdvancedConfiguration] {
	return pulumix.Output[[]GetAdvancedClusterAdvancedConfiguration]{
		OutputState: i.ToGetAdvancedClusterAdvancedConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClusterAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (o GetAdvancedClusterAdvancedConfigurationOutput) ToGetAdvancedClusterAdvancedConfigurationOutput() GetAdvancedClusterAdvancedConfigurationOutput {
	return o
}

func (o GetAdvancedClusterAdvancedConfigurationOutput) ToGetAdvancedClusterAdvancedConfigurationOutputWithContext(ctx context.Context) GetAdvancedClusterAdvancedConfigurationOutput {
	return o
}

func (o GetAdvancedClusterAdvancedConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterAdvancedConfiguration] {
	return pulumix.Output[GetAdvancedClusterAdvancedConfiguration]{
		OutputState: o.OutputState,
	}
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o GetAdvancedClusterAdvancedConfigurationOutput) DefaultReadConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) string { return v.DefaultReadConcern }).(pulumi.StringOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o GetAdvancedClusterAdvancedConfigurationOutput) DefaultWriteConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) string { return v.DefaultWriteConcern }).(pulumi.StringOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o GetAdvancedClusterAdvancedConfigurationOutput) FailIndexKeyTooLong() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) bool { return v.FailIndexKeyTooLong }).(pulumi.BoolOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o GetAdvancedClusterAdvancedConfigurationOutput) JavascriptEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) bool { return v.JavascriptEnabled }).(pulumi.BoolOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o GetAdvancedClusterAdvancedConfigurationOutput) MinimumEnabledTlsProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) string { return v.MinimumEnabledTlsProtocol }).(pulumi.StringOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o GetAdvancedClusterAdvancedConfigurationOutput) NoTableScan() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) bool { return v.NoTableScan }).(pulumi.BoolOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
func (o GetAdvancedClusterAdvancedConfigurationOutput) OplogMinRetentionHours() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) int { return v.OplogMinRetentionHours }).(pulumi.IntOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o GetAdvancedClusterAdvancedConfigurationOutput) OplogSizeMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) int { return v.OplogSizeMb }).(pulumi.IntOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetAdvancedClusterAdvancedConfigurationOutput) SampleRefreshIntervalBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) int { return v.SampleRefreshIntervalBiConnector }).(pulumi.IntOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetAdvancedClusterAdvancedConfigurationOutput) SampleSizeBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) int { return v.SampleSizeBiConnector }).(pulumi.IntOutput)
}

// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
func (o GetAdvancedClusterAdvancedConfigurationOutput) TransactionLifetimeLimitSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClusterAdvancedConfiguration) int { return v.TransactionLifetimeLimitSeconds }).(pulumi.IntOutput)
}

type GetAdvancedClusterAdvancedConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterAdvancedConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterAdvancedConfiguration)(nil)).Elem()
}

func (o GetAdvancedClusterAdvancedConfigurationArrayOutput) ToGetAdvancedClusterAdvancedConfigurationArrayOutput() GetAdvancedClusterAdvancedConfigurationArrayOutput {
	return o
}

func (o GetAdvancedClusterAdvancedConfigurationArrayOutput) ToGetAdvancedClusterAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetAdvancedClusterAdvancedConfigurationArrayOutput {
	return o
}

func (o GetAdvancedClusterAdvancedConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterAdvancedConfiguration] {
	return pulumix.Output[[]GetAdvancedClusterAdvancedConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterAdvancedConfigurationArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterAdvancedConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterAdvancedConfiguration {
		return vs[0].([]GetAdvancedClusterAdvancedConfiguration)[vs[1].(int)]
	}).(GetAdvancedClusterAdvancedConfigurationOutput)
}

type GetAdvancedClusterBiConnectorConfig struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	Enabled bool `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference string `pulumi:"readPreference"`
}

// GetAdvancedClusterBiConnectorConfigInput is an input type that accepts GetAdvancedClusterBiConnectorConfigArgs and GetAdvancedClusterBiConnectorConfigOutput values.
// You can construct a concrete instance of `GetAdvancedClusterBiConnectorConfigInput` via:
//
//	GetAdvancedClusterBiConnectorConfigArgs{...}
type GetAdvancedClusterBiConnectorConfigInput interface {
	pulumi.Input

	ToGetAdvancedClusterBiConnectorConfigOutput() GetAdvancedClusterBiConnectorConfigOutput
	ToGetAdvancedClusterBiConnectorConfigOutputWithContext(context.Context) GetAdvancedClusterBiConnectorConfigOutput
}

type GetAdvancedClusterBiConnectorConfigArgs struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringInput `pulumi:"readPreference"`
}

func (GetAdvancedClusterBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (i GetAdvancedClusterBiConnectorConfigArgs) ToGetAdvancedClusterBiConnectorConfigOutput() GetAdvancedClusterBiConnectorConfigOutput {
	return i.ToGetAdvancedClusterBiConnectorConfigOutputWithContext(context.Background())
}

func (i GetAdvancedClusterBiConnectorConfigArgs) ToGetAdvancedClusterBiConnectorConfigOutputWithContext(ctx context.Context) GetAdvancedClusterBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterBiConnectorConfigOutput)
}

func (i GetAdvancedClusterBiConnectorConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterBiConnectorConfig] {
	return pulumix.Output[GetAdvancedClusterBiConnectorConfig]{
		OutputState: i.ToGetAdvancedClusterBiConnectorConfigOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClusterBiConnectorConfigArrayInput is an input type that accepts GetAdvancedClusterBiConnectorConfigArray and GetAdvancedClusterBiConnectorConfigArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterBiConnectorConfigArrayInput` via:
//
//	GetAdvancedClusterBiConnectorConfigArray{ GetAdvancedClusterBiConnectorConfigArgs{...} }
type GetAdvancedClusterBiConnectorConfigArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterBiConnectorConfigArrayOutput() GetAdvancedClusterBiConnectorConfigArrayOutput
	ToGetAdvancedClusterBiConnectorConfigArrayOutputWithContext(context.Context) GetAdvancedClusterBiConnectorConfigArrayOutput
}

type GetAdvancedClusterBiConnectorConfigArray []GetAdvancedClusterBiConnectorConfigInput

func (GetAdvancedClusterBiConnectorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (i GetAdvancedClusterBiConnectorConfigArray) ToGetAdvancedClusterBiConnectorConfigArrayOutput() GetAdvancedClusterBiConnectorConfigArrayOutput {
	return i.ToGetAdvancedClusterBiConnectorConfigArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterBiConnectorConfigArray) ToGetAdvancedClusterBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClusterBiConnectorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterBiConnectorConfigArrayOutput)
}

func (i GetAdvancedClusterBiConnectorConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterBiConnectorConfig] {
	return pulumix.Output[[]GetAdvancedClusterBiConnectorConfig]{
		OutputState: i.ToGetAdvancedClusterBiConnectorConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClusterBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (o GetAdvancedClusterBiConnectorConfigOutput) ToGetAdvancedClusterBiConnectorConfigOutput() GetAdvancedClusterBiConnectorConfigOutput {
	return o
}

func (o GetAdvancedClusterBiConnectorConfigOutput) ToGetAdvancedClusterBiConnectorConfigOutputWithContext(ctx context.Context) GetAdvancedClusterBiConnectorConfigOutput {
	return o
}

func (o GetAdvancedClusterBiConnectorConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterBiConnectorConfig] {
	return pulumix.Output[GetAdvancedClusterBiConnectorConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
func (o GetAdvancedClusterBiConnectorConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterBiConnectorConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o GetAdvancedClusterBiConnectorConfigOutput) ReadPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterBiConnectorConfig) string { return v.ReadPreference }).(pulumi.StringOutput)
}

type GetAdvancedClusterBiConnectorConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterBiConnectorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterBiConnectorConfig)(nil)).Elem()
}

func (o GetAdvancedClusterBiConnectorConfigArrayOutput) ToGetAdvancedClusterBiConnectorConfigArrayOutput() GetAdvancedClusterBiConnectorConfigArrayOutput {
	return o
}

func (o GetAdvancedClusterBiConnectorConfigArrayOutput) ToGetAdvancedClusterBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClusterBiConnectorConfigArrayOutput {
	return o
}

func (o GetAdvancedClusterBiConnectorConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterBiConnectorConfig] {
	return pulumix.Output[[]GetAdvancedClusterBiConnectorConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterBiConnectorConfigArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterBiConnectorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterBiConnectorConfig {
		return vs[0].([]GetAdvancedClusterBiConnectorConfig)[vs[1].(int)]
	}).(GetAdvancedClusterBiConnectorConfigOutput)
}

type GetAdvancedClusterConnectionString struct {
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].connection_string
	AwsPrivateLink map[string]interface{} `pulumi:"awsPrivateLink"`
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].srv_connection_string
	AwsPrivateLinkSrv map[string]interface{}                              `pulumi:"awsPrivateLinkSrv"`
	Private           string                                              `pulumi:"private"`
	PrivateEndpoints  []GetAdvancedClusterConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        string                                              `pulumi:"privateSrv"`
	Standard          string                                              `pulumi:"standard"`
	StandardSrv       string                                              `pulumi:"standardSrv"`
}

// GetAdvancedClusterConnectionStringInput is an input type that accepts GetAdvancedClusterConnectionStringArgs and GetAdvancedClusterConnectionStringOutput values.
// You can construct a concrete instance of `GetAdvancedClusterConnectionStringInput` via:
//
//	GetAdvancedClusterConnectionStringArgs{...}
type GetAdvancedClusterConnectionStringInput interface {
	pulumi.Input

	ToGetAdvancedClusterConnectionStringOutput() GetAdvancedClusterConnectionStringOutput
	ToGetAdvancedClusterConnectionStringOutputWithContext(context.Context) GetAdvancedClusterConnectionStringOutput
}

type GetAdvancedClusterConnectionStringArgs struct {
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].connection_string
	AwsPrivateLink pulumi.MapInput `pulumi:"awsPrivateLink"`
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].srv_connection_string
	AwsPrivateLinkSrv pulumi.MapInput                                             `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringInput                                          `pulumi:"private"`
	PrivateEndpoints  GetAdvancedClusterConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringInput                                          `pulumi:"privateSrv"`
	Standard          pulumi.StringInput                                          `pulumi:"standard"`
	StandardSrv       pulumi.StringInput                                          `pulumi:"standardSrv"`
}

func (GetAdvancedClusterConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterConnectionString)(nil)).Elem()
}

func (i GetAdvancedClusterConnectionStringArgs) ToGetAdvancedClusterConnectionStringOutput() GetAdvancedClusterConnectionStringOutput {
	return i.ToGetAdvancedClusterConnectionStringOutputWithContext(context.Background())
}

func (i GetAdvancedClusterConnectionStringArgs) ToGetAdvancedClusterConnectionStringOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterConnectionStringOutput)
}

func (i GetAdvancedClusterConnectionStringArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterConnectionString] {
	return pulumix.Output[GetAdvancedClusterConnectionString]{
		OutputState: i.ToGetAdvancedClusterConnectionStringOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClusterConnectionStringArrayInput is an input type that accepts GetAdvancedClusterConnectionStringArray and GetAdvancedClusterConnectionStringArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterConnectionStringArrayInput` via:
//
//	GetAdvancedClusterConnectionStringArray{ GetAdvancedClusterConnectionStringArgs{...} }
type GetAdvancedClusterConnectionStringArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterConnectionStringArrayOutput() GetAdvancedClusterConnectionStringArrayOutput
	ToGetAdvancedClusterConnectionStringArrayOutputWithContext(context.Context) GetAdvancedClusterConnectionStringArrayOutput
}

type GetAdvancedClusterConnectionStringArray []GetAdvancedClusterConnectionStringInput

func (GetAdvancedClusterConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterConnectionString)(nil)).Elem()
}

func (i GetAdvancedClusterConnectionStringArray) ToGetAdvancedClusterConnectionStringArrayOutput() GetAdvancedClusterConnectionStringArrayOutput {
	return i.ToGetAdvancedClusterConnectionStringArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterConnectionStringArray) ToGetAdvancedClusterConnectionStringArrayOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterConnectionStringArrayOutput)
}

func (i GetAdvancedClusterConnectionStringArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterConnectionString] {
	return pulumix.Output[[]GetAdvancedClusterConnectionString]{
		OutputState: i.ToGetAdvancedClusterConnectionStringArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClusterConnectionStringOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterConnectionString)(nil)).Elem()
}

func (o GetAdvancedClusterConnectionStringOutput) ToGetAdvancedClusterConnectionStringOutput() GetAdvancedClusterConnectionStringOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringOutput) ToGetAdvancedClusterConnectionStringOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterConnectionString] {
	return pulumix.Output[GetAdvancedClusterConnectionString]{
		OutputState: o.OutputState,
	}
}

// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].connection_string
func (o GetAdvancedClusterConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].srv_connection_string
func (o GetAdvancedClusterConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o GetAdvancedClusterConnectionStringOutput) Private() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionString) string { return v.Private }).(pulumi.StringOutput)
}

func (o GetAdvancedClusterConnectionStringOutput) PrivateEndpoints() GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionString) []GetAdvancedClusterConnectionStringPrivateEndpoint {
		return v.PrivateEndpoints
	}).(GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput)
}

func (o GetAdvancedClusterConnectionStringOutput) PrivateSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionString) string { return v.PrivateSrv }).(pulumi.StringOutput)
}

func (o GetAdvancedClusterConnectionStringOutput) Standard() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionString) string { return v.Standard }).(pulumi.StringOutput)
}

func (o GetAdvancedClusterConnectionStringOutput) StandardSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionString) string { return v.StandardSrv }).(pulumi.StringOutput)
}

type GetAdvancedClusterConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterConnectionString)(nil)).Elem()
}

func (o GetAdvancedClusterConnectionStringArrayOutput) ToGetAdvancedClusterConnectionStringArrayOutput() GetAdvancedClusterConnectionStringArrayOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringArrayOutput) ToGetAdvancedClusterConnectionStringArrayOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringArrayOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterConnectionString] {
	return pulumix.Output[[]GetAdvancedClusterConnectionString]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterConnectionStringArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterConnectionString {
		return vs[0].([]GetAdvancedClusterConnectionString)[vs[1].(int)]
	}).(GetAdvancedClusterConnectionStringOutput)
}

type GetAdvancedClusterConnectionStringPrivateEndpoint struct {
	ConnectionString                  string                                                      `pulumi:"connectionString"`
	Endpoints                         []GetAdvancedClusterConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString               string                                                      `pulumi:"srvConnectionString"`
	SrvShardOptimizedConnectionString string                                                      `pulumi:"srvShardOptimizedConnectionString"`
	Type                              string                                                      `pulumi:"type"`
}

// GetAdvancedClusterConnectionStringPrivateEndpointInput is an input type that accepts GetAdvancedClusterConnectionStringPrivateEndpointArgs and GetAdvancedClusterConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `GetAdvancedClusterConnectionStringPrivateEndpointInput` via:
//
//	GetAdvancedClusterConnectionStringPrivateEndpointArgs{...}
type GetAdvancedClusterConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToGetAdvancedClusterConnectionStringPrivateEndpointOutput() GetAdvancedClusterConnectionStringPrivateEndpointOutput
	ToGetAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(context.Context) GetAdvancedClusterConnectionStringPrivateEndpointOutput
}

type GetAdvancedClusterConnectionStringPrivateEndpointArgs struct {
	ConnectionString                  pulumi.StringInput                                                  `pulumi:"connectionString"`
	Endpoints                         GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString               pulumi.StringInput                                                  `pulumi:"srvConnectionString"`
	SrvShardOptimizedConnectionString pulumi.StringInput                                                  `pulumi:"srvShardOptimizedConnectionString"`
	Type                              pulumi.StringInput                                                  `pulumi:"type"`
}

func (GetAdvancedClusterConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointArgs) ToGetAdvancedClusterConnectionStringPrivateEndpointOutput() GetAdvancedClusterConnectionStringPrivateEndpointOutput {
	return i.ToGetAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointArgs) ToGetAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterConnectionStringPrivateEndpointOutput)
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[GetAdvancedClusterConnectionStringPrivateEndpoint]{
		OutputState: i.ToGetAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClusterConnectionStringPrivateEndpointArrayInput is an input type that accepts GetAdvancedClusterConnectionStringPrivateEndpointArray and GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterConnectionStringPrivateEndpointArrayInput` via:
//
//	GetAdvancedClusterConnectionStringPrivateEndpointArray{ GetAdvancedClusterConnectionStringPrivateEndpointArgs{...} }
type GetAdvancedClusterConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutput() GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput
	ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput
}

type GetAdvancedClusterConnectionStringPrivateEndpointArray []GetAdvancedClusterConnectionStringPrivateEndpointInput

func (GetAdvancedClusterConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointArray) ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutput() GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return i.ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointArray) ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput)
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[[]GetAdvancedClusterConnectionStringPrivateEndpoint]{
		OutputState: i.ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClusterConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointOutput() GetAdvancedClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[GetAdvancedClusterConnectionStringPrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpoint) string { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointOutput) Endpoints() GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpoint) []GetAdvancedClusterConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpoint) string { return v.SrvConnectionString }).(pulumi.StringOutput)
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointOutput) SrvShardOptimizedConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpoint) string {
		return v.SrvShardOptimizedConnectionString
	}).(pulumi.StringOutput)
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

type GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutput() GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[[]GetAdvancedClusterConnectionStringPrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterConnectionStringPrivateEndpoint {
		return vs[0].([]GetAdvancedClusterConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(GetAdvancedClusterConnectionStringPrivateEndpointOutput)
}

type GetAdvancedClusterConnectionStringPrivateEndpointEndpoint struct {
	EndpointId string `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	Region       string `pulumi:"region"`
}

// GetAdvancedClusterConnectionStringPrivateEndpointEndpointInput is an input type that accepts GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs and GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `GetAdvancedClusterConnectionStringPrivateEndpointEndpointInput` via:
//
//	GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs{...}
type GetAdvancedClusterConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput() GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput
	ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput
}

type GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	Region       pulumi.StringInput `pulumi:"region"`
}

func (GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput() GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return i.ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput)
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[GetAdvancedClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: i.ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray and GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//	GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray{ GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs{...} }
type GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput
	ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput
}

type GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray []GetAdvancedClusterConnectionStringPrivateEndpointEndpointInput

func (GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (i GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[[]GetAdvancedClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: i.ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput() GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[GetAdvancedClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpointEndpoint) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Cloud service provider on which the servers are provisioned.
func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpointEndpoint) string { return v.ProviderName }).(pulumi.StringOutput)
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterConnectionStringPrivateEndpointEndpoint) string { return v.Region }).(pulumi.StringOutput)
}

type GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToGetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[[]GetAdvancedClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]GetAdvancedClusterConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput)
}

type GetAdvancedClusterLabel struct {
	// The key that you want to write.
	Key string `pulumi:"key"`
	// The value that you want to write.
	Value string `pulumi:"value"`
}

// GetAdvancedClusterLabelInput is an input type that accepts GetAdvancedClusterLabelArgs and GetAdvancedClusterLabelOutput values.
// You can construct a concrete instance of `GetAdvancedClusterLabelInput` via:
//
//	GetAdvancedClusterLabelArgs{...}
type GetAdvancedClusterLabelInput interface {
	pulumi.Input

	ToGetAdvancedClusterLabelOutput() GetAdvancedClusterLabelOutput
	ToGetAdvancedClusterLabelOutputWithContext(context.Context) GetAdvancedClusterLabelOutput
}

type GetAdvancedClusterLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAdvancedClusterLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterLabel)(nil)).Elem()
}

func (i GetAdvancedClusterLabelArgs) ToGetAdvancedClusterLabelOutput() GetAdvancedClusterLabelOutput {
	return i.ToGetAdvancedClusterLabelOutputWithContext(context.Background())
}

func (i GetAdvancedClusterLabelArgs) ToGetAdvancedClusterLabelOutputWithContext(ctx context.Context) GetAdvancedClusterLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterLabelOutput)
}

func (i GetAdvancedClusterLabelArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterLabel] {
	return pulumix.Output[GetAdvancedClusterLabel]{
		OutputState: i.ToGetAdvancedClusterLabelOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClusterLabelArrayInput is an input type that accepts GetAdvancedClusterLabelArray and GetAdvancedClusterLabelArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterLabelArrayInput` via:
//
//	GetAdvancedClusterLabelArray{ GetAdvancedClusterLabelArgs{...} }
type GetAdvancedClusterLabelArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterLabelArrayOutput() GetAdvancedClusterLabelArrayOutput
	ToGetAdvancedClusterLabelArrayOutputWithContext(context.Context) GetAdvancedClusterLabelArrayOutput
}

type GetAdvancedClusterLabelArray []GetAdvancedClusterLabelInput

func (GetAdvancedClusterLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterLabel)(nil)).Elem()
}

func (i GetAdvancedClusterLabelArray) ToGetAdvancedClusterLabelArrayOutput() GetAdvancedClusterLabelArrayOutput {
	return i.ToGetAdvancedClusterLabelArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterLabelArray) ToGetAdvancedClusterLabelArrayOutputWithContext(ctx context.Context) GetAdvancedClusterLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterLabelArrayOutput)
}

func (i GetAdvancedClusterLabelArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterLabel] {
	return pulumix.Output[[]GetAdvancedClusterLabel]{
		OutputState: i.ToGetAdvancedClusterLabelArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClusterLabelOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterLabel)(nil)).Elem()
}

func (o GetAdvancedClusterLabelOutput) ToGetAdvancedClusterLabelOutput() GetAdvancedClusterLabelOutput {
	return o
}

func (o GetAdvancedClusterLabelOutput) ToGetAdvancedClusterLabelOutputWithContext(ctx context.Context) GetAdvancedClusterLabelOutput {
	return o
}

func (o GetAdvancedClusterLabelOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterLabel] {
	return pulumix.Output[GetAdvancedClusterLabel]{
		OutputState: o.OutputState,
	}
}

// The key that you want to write.
func (o GetAdvancedClusterLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that you want to write.
func (o GetAdvancedClusterLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetAdvancedClusterLabelArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterLabel)(nil)).Elem()
}

func (o GetAdvancedClusterLabelArrayOutput) ToGetAdvancedClusterLabelArrayOutput() GetAdvancedClusterLabelArrayOutput {
	return o
}

func (o GetAdvancedClusterLabelArrayOutput) ToGetAdvancedClusterLabelArrayOutputWithContext(ctx context.Context) GetAdvancedClusterLabelArrayOutput {
	return o
}

func (o GetAdvancedClusterLabelArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterLabel] {
	return pulumix.Output[[]GetAdvancedClusterLabel]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterLabelArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterLabel {
		return vs[0].([]GetAdvancedClusterLabel)[vs[1].(int)]
	}).(GetAdvancedClusterLabelOutput)
}

type GetAdvancedClusterReplicationSpec struct {
	// A key-value map of the Network Peering Container ID(s) for the configuration specified in `regionConfigs`. The Container ID is the id of the container either created programmatically by the user before any clusters existed in a project or when the first cluster in the region (AWS/Azure) or project (GCP) was created.  The syntax is `"providerName:regionName" = "containerId"`. Example `AWS:US_EAST_1" = "61e0797dde08fb498ca11a71`.
	ContainerId map[string]string `pulumi:"containerId"`
	Id          string            `pulumi:"id"`
	// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED.
	NumShards int `pulumi:"numShards"`
	// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
	RegionConfigs []GetAdvancedClusterReplicationSpecRegionConfig `pulumi:"regionConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName string `pulumi:"zoneName"`
}

// GetAdvancedClusterReplicationSpecInput is an input type that accepts GetAdvancedClusterReplicationSpecArgs and GetAdvancedClusterReplicationSpecOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecInput` via:
//
//	GetAdvancedClusterReplicationSpecArgs{...}
type GetAdvancedClusterReplicationSpecInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecOutput() GetAdvancedClusterReplicationSpecOutput
	ToGetAdvancedClusterReplicationSpecOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecOutput
}

type GetAdvancedClusterReplicationSpecArgs struct {
	// A key-value map of the Network Peering Container ID(s) for the configuration specified in `regionConfigs`. The Container ID is the id of the container either created programmatically by the user before any clusters existed in a project or when the first cluster in the region (AWS/Azure) or project (GCP) was created.  The syntax is `"providerName:regionName" = "containerId"`. Example `AWS:US_EAST_1" = "61e0797dde08fb498ca11a71`.
	ContainerId pulumi.StringMapInput `pulumi:"containerId"`
	Id          pulumi.StringInput    `pulumi:"id"`
	// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
	RegionConfigs GetAdvancedClusterReplicationSpecRegionConfigArrayInput `pulumi:"regionConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetAdvancedClusterReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpec)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecArgs) ToGetAdvancedClusterReplicationSpecOutput() GetAdvancedClusterReplicationSpecOutput {
	return i.ToGetAdvancedClusterReplicationSpecOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecArgs) ToGetAdvancedClusterReplicationSpecOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecOutput)
}

func (i GetAdvancedClusterReplicationSpecArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterReplicationSpec] {
	return pulumix.Output[GetAdvancedClusterReplicationSpec]{
		OutputState: i.ToGetAdvancedClusterReplicationSpecOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClusterReplicationSpecArrayInput is an input type that accepts GetAdvancedClusterReplicationSpecArray and GetAdvancedClusterReplicationSpecArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecArrayInput` via:
//
//	GetAdvancedClusterReplicationSpecArray{ GetAdvancedClusterReplicationSpecArgs{...} }
type GetAdvancedClusterReplicationSpecArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecArrayOutput() GetAdvancedClusterReplicationSpecArrayOutput
	ToGetAdvancedClusterReplicationSpecArrayOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecArrayOutput
}

type GetAdvancedClusterReplicationSpecArray []GetAdvancedClusterReplicationSpecInput

func (GetAdvancedClusterReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpec)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecArray) ToGetAdvancedClusterReplicationSpecArrayOutput() GetAdvancedClusterReplicationSpecArrayOutput {
	return i.ToGetAdvancedClusterReplicationSpecArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecArray) ToGetAdvancedClusterReplicationSpecArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecArrayOutput)
}

func (i GetAdvancedClusterReplicationSpecArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterReplicationSpec] {
	return pulumix.Output[[]GetAdvancedClusterReplicationSpec]{
		OutputState: i.ToGetAdvancedClusterReplicationSpecArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClusterReplicationSpecOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpec)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecOutput) ToGetAdvancedClusterReplicationSpecOutput() GetAdvancedClusterReplicationSpecOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecOutput) ToGetAdvancedClusterReplicationSpecOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterReplicationSpec] {
	return pulumix.Output[GetAdvancedClusterReplicationSpec]{
		OutputState: o.OutputState,
	}
}

// A key-value map of the Network Peering Container ID(s) for the configuration specified in `regionConfigs`. The Container ID is the id of the container either created programmatically by the user before any clusters existed in a project or when the first cluster in the region (AWS/Azure) or project (GCP) was created.  The syntax is `"providerName:regionName" = "containerId"`. Example `AWS:US_EAST_1" = "61e0797dde08fb498ca11a71`.
func (o GetAdvancedClusterReplicationSpecOutput) ContainerId() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpec) map[string]string { return v.ContainerId }).(pulumi.StringMapOutput)
}

func (o GetAdvancedClusterReplicationSpecOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpec) string { return v.Id }).(pulumi.StringOutput)
}

// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED.
func (o GetAdvancedClusterReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
func (o GetAdvancedClusterReplicationSpecOutput) RegionConfigs() GetAdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpec) []GetAdvancedClusterReplicationSpecRegionConfig {
		return v.RegionConfigs
	}).(GetAdvancedClusterReplicationSpecRegionConfigArrayOutput)
}

// Name for the zone in a Global Cluster.
func (o GetAdvancedClusterReplicationSpecOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpec) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetAdvancedClusterReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpec)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecArrayOutput) ToGetAdvancedClusterReplicationSpecArrayOutput() GetAdvancedClusterReplicationSpecArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecArrayOutput) ToGetAdvancedClusterReplicationSpecArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterReplicationSpec] {
	return pulumix.Output[[]GetAdvancedClusterReplicationSpec]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterReplicationSpecArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterReplicationSpec {
		return vs[0].([]GetAdvancedClusterReplicationSpec)[vs[1].(int)]
	}).(GetAdvancedClusterReplicationSpecOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfig struct {
	// Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. See below
	AnalyticsAutoScalings []GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling `pulumi:"analyticsAutoScalings"`
	// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. See below
	AnalyticsSpecs *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs `pulumi:"analyticsSpecs"`
	// Configuration for the Collection of settings that configures auto-scaling information for the cluster. See below
	AutoScalings []GetAdvancedClusterReplicationSpecRegionConfigAutoScaling `pulumi:"autoScalings"`
	// Cloud service provider on which you provision the host for a multi-tenant cluster.
	BackingProviderName string `pulumi:"backingProviderName"`
	// Hardware specifications for electable nodes in the region.
	ElectableSpecs *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs `pulumi:"electableSpecs"`
	// Election priority of the region.
	Priority int `pulumi:"priority"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	// Hardware specifications for read-only nodes in the region. See below
	ReadOnlySpecs *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs `pulumi:"readOnlySpecs"`
	// Physical location of your MongoDB cluster.
	RegionName string `pulumi:"regionName"`
}

// GetAdvancedClusterReplicationSpecRegionConfigInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigArgs and GetAdvancedClusterReplicationSpecRegionConfigOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigArgs{...}
type GetAdvancedClusterReplicationSpecRegionConfigInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigOutput() GetAdvancedClusterReplicationSpecRegionConfigOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigArgs struct {
	// Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. See below
	AnalyticsAutoScalings GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput `pulumi:"analyticsAutoScalings"`
	// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. See below
	AnalyticsSpecs GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput `pulumi:"analyticsSpecs"`
	// Configuration for the Collection of settings that configures auto-scaling information for the cluster. See below
	AutoScalings GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayInput `pulumi:"autoScalings"`
	// Cloud service provider on which you provision the host for a multi-tenant cluster.
	BackingProviderName pulumi.StringInput `pulumi:"backingProviderName"`
	// Hardware specifications for electable nodes in the region.
	ElectableSpecs GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput `pulumi:"electableSpecs"`
	// Election priority of the region.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Hardware specifications for read-only nodes in the region. See below
	ReadOnlySpecs GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput `pulumi:"readOnlySpecs"`
	// Physical location of your MongoDB cluster.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetAdvancedClusterReplicationSpecRegionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigArgs) ToGetAdvancedClusterReplicationSpecRegionConfigOutput() GetAdvancedClusterReplicationSpecRegionConfigOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigArgs) ToGetAdvancedClusterReplicationSpecRegionConfigOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigOutput)
}

func (i GetAdvancedClusterReplicationSpecRegionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfig] {
	return pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfig]{
		OutputState: i.ToGetAdvancedClusterReplicationSpecRegionConfigOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClusterReplicationSpecRegionConfigArrayInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigArray and GetAdvancedClusterReplicationSpecRegionConfigArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigArrayInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigArray{ GetAdvancedClusterReplicationSpecRegionConfigArgs{...} }
type GetAdvancedClusterReplicationSpecRegionConfigArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigArrayOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigArrayOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigArray []GetAdvancedClusterReplicationSpecRegionConfigInput

func (GetAdvancedClusterReplicationSpecRegionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigArray) ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigArray) ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigArrayOutput)
}

func (i GetAdvancedClusterReplicationSpecRegionConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterReplicationSpecRegionConfig] {
	return pulumix.Output[[]GetAdvancedClusterReplicationSpecRegionConfig]{
		OutputState: i.ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClusterReplicationSpecRegionConfigOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) ToGetAdvancedClusterReplicationSpecRegionConfigOutput() GetAdvancedClusterReplicationSpecRegionConfigOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) ToGetAdvancedClusterReplicationSpecRegionConfigOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfig] {
	return pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfig]{
		OutputState: o.OutputState,
	}
}

// Configuration for the Collection of settings that configures analytics-auto-scaling information for the cluster. See below
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) AnalyticsAutoScalings() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) []GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling {
		return v.AnalyticsAutoScalings
	}).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput)
}

// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. See below
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) AnalyticsSpecs() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
		return v.AnalyticsSpecs
	}).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

// Configuration for the Collection of settings that configures auto-scaling information for the cluster. See below
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) AutoScalings() GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) []GetAdvancedClusterReplicationSpecRegionConfigAutoScaling {
		return v.AutoScalings
	}).(GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput)
}

// Cloud service provider on which you provision the host for a multi-tenant cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) BackingProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) string { return v.BackingProviderName }).(pulumi.StringOutput)
}

// Hardware specifications for electable nodes in the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) ElectableSpecs() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs {
		return v.ElectableSpecs
	}).(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

// Election priority of the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Cloud service provider on which the servers are provisioned.
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Hardware specifications for read-only nodes in the region. See below
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) ReadOnlySpecs() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
		return v.ReadOnlySpecs
	}).(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

// Physical location of your MongoDB cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpecRegionConfig)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigArrayOutput) ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigArrayOutput) ToGetAdvancedClusterReplicationSpecRegionConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterReplicationSpecRegionConfig] {
	return pulumix.Output[[]GetAdvancedClusterReplicationSpecRegionConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterReplicationSpecRegionConfigArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterReplicationSpecRegionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterReplicationSpecRegionConfig {
		return vs[0].([]GetAdvancedClusterReplicationSpecRegionConfig)[vs[1].(int)]
	}).(GetAdvancedClusterReplicationSpecRegionConfigOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled bool `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	// #### Advanced Configuration
	ComputeMaxInstanceSize string `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize string `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled bool `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled bool `pulumi:"diskGbEnabled"`
}

// GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs and GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs{...}
type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled pulumi.BoolInput `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	// #### Advanced Configuration
	ComputeMaxInstanceSize pulumi.StringInput `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize pulumi.StringInput `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled pulumi.BoolInput `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled pulumi.BoolInput `pulumi:"diskGbEnabled"`
}

func (GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput)
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling] {
	return pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling]{
		OutputState: i.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray and GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray{ GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs{...} }
type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray []GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput

func (GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput)
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling] {
	return pulumix.Output[[]GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling]{
		OutputState: i.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling] {
	return pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling]{
		OutputState: o.OutputState,
	}
}

// Flag that indicates whether instance size auto-scaling is enabled.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) bool {
		return v.ComputeEnabled
	}).(pulumi.BoolOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40).
// #### Advanced Configuration
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeMaxInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) string {
		return v.ComputeMaxInstanceSize
	}).(pulumi.StringOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10).
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeMinInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) string {
		return v.ComputeMinInstanceSize
	}).(pulumi.StringOutput)
}

// Flag that indicates whether the instance size may scale down.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeScaleDownEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) bool {
		return v.ComputeScaleDownEnabled
	}).(pulumi.BoolOutput)
}

// Flag that indicates whether this cluster enables disk auto-scaling.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput) DiskGbEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling) bool { return v.DiskGbEnabled }).(pulumi.BoolOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling] {
	return pulumix.Output[[]GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling {
		return vs[0].([]GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling)[vs[1].(int)]
	}).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs and GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{...}
type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput)
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs] {
	return pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs]{
		OutputState: i.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx).OutputState,
	}
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput).ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx)
}

// GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs, GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtr and GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput` via:
//
//	        GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{...}
//
//	or:
//
//	        nil
type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput
}

type getAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs

func GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtr(v *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput {
	return (*getAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType)(v)
}

func (*getAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (i *getAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (i *getAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

func (i *getAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs] {
	return pulumix.Output[*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs]{
		OutputState: i.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
		return &v
	}).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs] {
	return pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs]{
		OutputState: o.OutputState,
	}
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *string { return v.EbsVolumeType }).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) string { return v.InstanceSize }).(pulumi.StringOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs] {
	return pulumix.Output[*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) Elem() GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
		if v != nil {
			return *v
		}
		var ret GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs
		return ret
	}).(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAutoScaling struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled bool `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	// #### Advanced Configuration
	ComputeMaxInstanceSize string `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize string `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled bool `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled bool `pulumi:"diskGbEnabled"`
}

// GetAdvancedClusterReplicationSpecRegionConfigAutoScalingInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs and GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigAutoScalingInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs{...}
type GetAdvancedClusterReplicationSpecRegionConfigAutoScalingInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput() GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled pulumi.BoolInput `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	// #### Advanced Configuration
	ComputeMaxInstanceSize pulumi.StringInput `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize pulumi.StringInput `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled pulumi.BoolInput `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled pulumi.BoolInput `pulumi:"diskGbEnabled"`
}

func (GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput() GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput)
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigAutoScaling] {
	return pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigAutoScaling]{
		OutputState: i.ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray and GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray{ GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs{...} }
type GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray []GetAdvancedClusterReplicationSpecRegionConfigAutoScalingInput

func (GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput)
}

func (i GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterReplicationSpecRegionConfigAutoScaling] {
	return pulumix.Output[[]GetAdvancedClusterReplicationSpecRegionConfigAutoScaling]{
		OutputState: i.ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput() GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigAutoScaling] {
	return pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigAutoScaling]{
		OutputState: o.OutputState,
	}
}

// Flag that indicates whether instance size auto-scaling is enabled.
func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAutoScaling) bool { return v.ComputeEnabled }).(pulumi.BoolOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40).
// #### Advanced Configuration
func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeMaxInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAutoScaling) string {
		return v.ComputeMaxInstanceSize
	}).(pulumi.StringOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10).
func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeMinInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAutoScaling) string {
		return v.ComputeMinInstanceSize
	}).(pulumi.StringOutput)
}

// Flag that indicates whether the instance size may scale down.
func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) ComputeScaleDownEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAutoScaling) bool {
		return v.ComputeScaleDownEnabled
	}).(pulumi.BoolOutput)
}

// Flag that indicates whether this cluster enables disk auto-scaling.
func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput) DiskGbEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigAutoScaling) bool { return v.DiskGbEnabled }).(pulumi.BoolOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClusterReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput() GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput) ToGetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClusterReplicationSpecRegionConfigAutoScaling] {
	return pulumix.Output[[]GetAdvancedClusterReplicationSpecRegionConfigAutoScaling]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput) Index(i pulumi.IntInput) GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClusterReplicationSpecRegionConfigAutoScaling {
		return vs[0].([]GetAdvancedClusterReplicationSpecRegionConfigAutoScaling)[vs[1].(int)]
	}).(GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs and GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{...}
type GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput)
}

func (i GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs] {
	return pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs]{
		OutputState: i.ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx).OutputState,
	}
}

func (i GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput).ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx)
}

// GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs, GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtr and GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput` via:
//
//	        GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{...}
//
//	or:
//
//	        nil
type GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput
}

type getAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrType GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs

func GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtr(v *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput {
	return (*getAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrType)(v)
}

func (*getAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (i *getAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrType) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (i *getAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrType) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

func (i *getAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs] {
	return pulumix.Output[*GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs]{
		OutputState: i.ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs {
		return &v
	}).(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs] {
	return pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs]{
		OutputState: o.OutputState,
	}
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *string { return v.EbsVolumeType }).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) string { return v.InstanceSize }).(pulumi.StringOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) ToGetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs] {
	return pulumix.Output[*GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) Elem() GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs {
		if v != nil {
			return *v
		}
		var ret GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs
		return ret
	}).(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigElectableSpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs and GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput` via:
//
//	GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{...}
type GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput
}

type GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (i GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput)
}

func (i GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs] {
	return pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs]{
		OutputState: i.ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx).OutputState,
	}
}

func (i GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (i GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput).ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx)
}

// GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput is an input type that accepts GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs, GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtr and GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput values.
// You can construct a concrete instance of `GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput` via:
//
//	        GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{...}
//
//	or:
//
//	        nil
type GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput interface {
	pulumi.Input

	ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput
	ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput
}

type getAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs

func GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtr(v *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput {
	return (*getAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType)(v)
}

func (*getAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (i *getAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return i.ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (i *getAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

func (i *getAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs] {
	return pulumix.Output[*GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs]{
		OutputState: i.ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
		return &v
	}).(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs] {
	return pulumix.Output[GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs]{
		OutputState: o.OutputState,
	}
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *string { return v.EbsVolumeType }).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) string { return v.InstanceSize }).(pulumi.StringOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput struct{ *pulumi.OutputState }

func (GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToGetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs] {
	return pulumix.Output[*GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) Elem() GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
		if v != nil {
			return *v
		}
		var ret GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs
		return ret
	}).(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type GetAdvancedClustersResult struct {
	// Get the advanced configuration options. See Advanced Configuration below for more details.
	AdvancedConfigurations []GetAdvancedClustersResultAdvancedConfiguration `pulumi:"advancedConfigurations"`
	BackupEnabled          bool                                             `pulumi:"backupEnabled"`
	// Configuration settings applied to BI Connector for Atlas on this cluster. See below. **NOTE** Prior version of provider had parameter as `biConnector`
	BiConnectorConfigs []GetAdvancedClustersResultBiConnectorConfig `pulumi:"biConnectorConfigs"`
	// Type of the cluster that you want to create.
	ClusterType string `pulumi:"clusterType"`
	// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
	ConnectionStrings []GetAdvancedClustersResultConnectionString `pulumi:"connectionStrings"`
	CreateDate        string                                      `pulumi:"createDate"`
	// Capacity, in gigabytes, of the host's root volume.
	DiskSizeGb float64 `pulumi:"diskSizeGb"`
	// Possible values are AWS, GCP, AZURE or NONE.
	EncryptionAtRestProvider string `pulumi:"encryptionAtRestProvider"`
	// Configuration for the collection of key-value pairs that tag and categorize the cluster. See below.
	Labels []GetAdvancedClustersResultLabel `pulumi:"labels"`
	// Version of the cluster to deploy.
	MongoDbMajorVersion string `pulumi:"mongoDbMajorVersion"`
	// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
	MongoDbVersion string `pulumi:"mongoDbVersion"`
	Name           string `pulumi:"name"`
	// Flag that indicates whether the cluster is paused or not.
	Paused bool `pulumi:"paused"`
	// Flag that indicates if the cluster uses Continuous Cloud Backup.
	PitEnabled bool `pulumi:"pitEnabled"`
	// Configuration for cluster regions and the hardware provisioned in them. See below
	ReplicationSpecs []GetAdvancedClustersResultReplicationSpec `pulumi:"replicationSpecs"`
	// Certificate Authority that MongoDB Atlas clusters use.
	RootCertType string `pulumi:"rootCertType"`
	// Current state of the cluster. The possible states are:
	StateName string `pulumi:"stateName"`
	// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled bool `pulumi:"terminationProtectionEnabled"`
	// Release cadence that Atlas uses for this cluster.
	VersionReleaseSystem string `pulumi:"versionReleaseSystem"`
}

// GetAdvancedClustersResultInput is an input type that accepts GetAdvancedClustersResultArgs and GetAdvancedClustersResultOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultInput` via:
//
//	GetAdvancedClustersResultArgs{...}
type GetAdvancedClustersResultInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultOutput() GetAdvancedClustersResultOutput
	ToGetAdvancedClustersResultOutputWithContext(context.Context) GetAdvancedClustersResultOutput
}

type GetAdvancedClustersResultArgs struct {
	// Get the advanced configuration options. See Advanced Configuration below for more details.
	AdvancedConfigurations GetAdvancedClustersResultAdvancedConfigurationArrayInput `pulumi:"advancedConfigurations"`
	BackupEnabled          pulumi.BoolInput                                         `pulumi:"backupEnabled"`
	// Configuration settings applied to BI Connector for Atlas on this cluster. See below. **NOTE** Prior version of provider had parameter as `biConnector`
	BiConnectorConfigs GetAdvancedClustersResultBiConnectorConfigArrayInput `pulumi:"biConnectorConfigs"`
	// Type of the cluster that you want to create.
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
	// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
	ConnectionStrings GetAdvancedClustersResultConnectionStringArrayInput `pulumi:"connectionStrings"`
	CreateDate        pulumi.StringInput                                  `pulumi:"createDate"`
	// Capacity, in gigabytes, of the host's root volume.
	DiskSizeGb pulumi.Float64Input `pulumi:"diskSizeGb"`
	// Possible values are AWS, GCP, AZURE or NONE.
	EncryptionAtRestProvider pulumi.StringInput `pulumi:"encryptionAtRestProvider"`
	// Configuration for the collection of key-value pairs that tag and categorize the cluster. See below.
	Labels GetAdvancedClustersResultLabelArrayInput `pulumi:"labels"`
	// Version of the cluster to deploy.
	MongoDbMajorVersion pulumi.StringInput `pulumi:"mongoDbMajorVersion"`
	// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
	MongoDbVersion pulumi.StringInput `pulumi:"mongoDbVersion"`
	Name           pulumi.StringInput `pulumi:"name"`
	// Flag that indicates whether the cluster is paused or not.
	Paused pulumi.BoolInput `pulumi:"paused"`
	// Flag that indicates if the cluster uses Continuous Cloud Backup.
	PitEnabled pulumi.BoolInput `pulumi:"pitEnabled"`
	// Configuration for cluster regions and the hardware provisioned in them. See below
	ReplicationSpecs GetAdvancedClustersResultReplicationSpecArrayInput `pulumi:"replicationSpecs"`
	// Certificate Authority that MongoDB Atlas clusters use.
	RootCertType pulumi.StringInput `pulumi:"rootCertType"`
	// Current state of the cluster. The possible states are:
	StateName pulumi.StringInput `pulumi:"stateName"`
	// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled pulumi.BoolInput `pulumi:"terminationProtectionEnabled"`
	// Release cadence that Atlas uses for this cluster.
	VersionReleaseSystem pulumi.StringInput `pulumi:"versionReleaseSystem"`
}

func (GetAdvancedClustersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResult)(nil)).Elem()
}

func (i GetAdvancedClustersResultArgs) ToGetAdvancedClustersResultOutput() GetAdvancedClustersResultOutput {
	return i.ToGetAdvancedClustersResultOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultArgs) ToGetAdvancedClustersResultOutputWithContext(ctx context.Context) GetAdvancedClustersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultOutput)
}

func (i GetAdvancedClustersResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResult] {
	return pulumix.Output[GetAdvancedClustersResult]{
		OutputState: i.ToGetAdvancedClustersResultOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClustersResultArrayInput is an input type that accepts GetAdvancedClustersResultArray and GetAdvancedClustersResultArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultArrayInput` via:
//
//	GetAdvancedClustersResultArray{ GetAdvancedClustersResultArgs{...} }
type GetAdvancedClustersResultArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultArrayOutput() GetAdvancedClustersResultArrayOutput
	ToGetAdvancedClustersResultArrayOutputWithContext(context.Context) GetAdvancedClustersResultArrayOutput
}

type GetAdvancedClustersResultArray []GetAdvancedClustersResultInput

func (GetAdvancedClustersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResult)(nil)).Elem()
}

func (i GetAdvancedClustersResultArray) ToGetAdvancedClustersResultArrayOutput() GetAdvancedClustersResultArrayOutput {
	return i.ToGetAdvancedClustersResultArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultArray) ToGetAdvancedClustersResultArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultArrayOutput)
}

func (i GetAdvancedClustersResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResult] {
	return pulumix.Output[[]GetAdvancedClustersResult]{
		OutputState: i.ToGetAdvancedClustersResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClustersResultOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResult)(nil)).Elem()
}

func (o GetAdvancedClustersResultOutput) ToGetAdvancedClustersResultOutput() GetAdvancedClustersResultOutput {
	return o
}

func (o GetAdvancedClustersResultOutput) ToGetAdvancedClustersResultOutputWithContext(ctx context.Context) GetAdvancedClustersResultOutput {
	return o
}

func (o GetAdvancedClustersResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResult] {
	return pulumix.Output[GetAdvancedClustersResult]{
		OutputState: o.OutputState,
	}
}

// Get the advanced configuration options. See Advanced Configuration below for more details.
func (o GetAdvancedClustersResultOutput) AdvancedConfigurations() GetAdvancedClustersResultAdvancedConfigurationArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) []GetAdvancedClustersResultAdvancedConfiguration {
		return v.AdvancedConfigurations
	}).(GetAdvancedClustersResultAdvancedConfigurationArrayOutput)
}

func (o GetAdvancedClustersResultOutput) BackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) bool { return v.BackupEnabled }).(pulumi.BoolOutput)
}

// Configuration settings applied to BI Connector for Atlas on this cluster. See below. **NOTE** Prior version of provider had parameter as `biConnector`
func (o GetAdvancedClustersResultOutput) BiConnectorConfigs() GetAdvancedClustersResultBiConnectorConfigArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) []GetAdvancedClustersResultBiConnectorConfig {
		return v.BiConnectorConfigs
	}).(GetAdvancedClustersResultBiConnectorConfigArrayOutput)
}

// Type of the cluster that you want to create.
func (o GetAdvancedClustersResultOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
func (o GetAdvancedClustersResultOutput) ConnectionStrings() GetAdvancedClustersResultConnectionStringArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) []GetAdvancedClustersResultConnectionString {
		return v.ConnectionStrings
	}).(GetAdvancedClustersResultConnectionStringArrayOutput)
}

func (o GetAdvancedClustersResultOutput) CreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.CreateDate }).(pulumi.StringOutput)
}

// Capacity, in gigabytes, of the host's root volume.
func (o GetAdvancedClustersResultOutput) DiskSizeGb() pulumi.Float64Output {
	return o.ApplyT(func(v GetAdvancedClustersResult) float64 { return v.DiskSizeGb }).(pulumi.Float64Output)
}

// Possible values are AWS, GCP, AZURE or NONE.
func (o GetAdvancedClustersResultOutput) EncryptionAtRestProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.EncryptionAtRestProvider }).(pulumi.StringOutput)
}

// Configuration for the collection of key-value pairs that tag and categorize the cluster. See below.
func (o GetAdvancedClustersResultOutput) Labels() GetAdvancedClustersResultLabelArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) []GetAdvancedClustersResultLabel { return v.Labels }).(GetAdvancedClustersResultLabelArrayOutput)
}

// Version of the cluster to deploy.
func (o GetAdvancedClustersResultOutput) MongoDbMajorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.MongoDbMajorVersion }).(pulumi.StringOutput)
}

// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
func (o GetAdvancedClustersResultOutput) MongoDbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.MongoDbVersion }).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.Name }).(pulumi.StringOutput)
}

// Flag that indicates whether the cluster is paused or not.
func (o GetAdvancedClustersResultOutput) Paused() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) bool { return v.Paused }).(pulumi.BoolOutput)
}

// Flag that indicates if the cluster uses Continuous Cloud Backup.
func (o GetAdvancedClustersResultOutput) PitEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) bool { return v.PitEnabled }).(pulumi.BoolOutput)
}

// Configuration for cluster regions and the hardware provisioned in them. See below
func (o GetAdvancedClustersResultOutput) ReplicationSpecs() GetAdvancedClustersResultReplicationSpecArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) []GetAdvancedClustersResultReplicationSpec {
		return v.ReplicationSpecs
	}).(GetAdvancedClustersResultReplicationSpecArrayOutput)
}

// Certificate Authority that MongoDB Atlas clusters use.
func (o GetAdvancedClustersResultOutput) RootCertType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.RootCertType }).(pulumi.StringOutput)
}

// Current state of the cluster. The possible states are:
func (o GetAdvancedClustersResultOutput) StateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.StateName }).(pulumi.StringOutput)
}

// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
func (o GetAdvancedClustersResultOutput) TerminationProtectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) bool { return v.TerminationProtectionEnabled }).(pulumi.BoolOutput)
}

// Release cadence that Atlas uses for this cluster.
func (o GetAdvancedClustersResultOutput) VersionReleaseSystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResult) string { return v.VersionReleaseSystem }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResult)(nil)).Elem()
}

func (o GetAdvancedClustersResultArrayOutput) ToGetAdvancedClustersResultArrayOutput() GetAdvancedClustersResultArrayOutput {
	return o
}

func (o GetAdvancedClustersResultArrayOutput) ToGetAdvancedClustersResultArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultArrayOutput {
	return o
}

func (o GetAdvancedClustersResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResult] {
	return pulumix.Output[[]GetAdvancedClustersResult]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResult {
		return vs[0].([]GetAdvancedClustersResult)[vs[1].(int)]
	}).(GetAdvancedClustersResultOutput)
}

type GetAdvancedClustersResultAdvancedConfiguration struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern string `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern string `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong bool `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled bool `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol string `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan bool `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours int `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb int `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector int `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector           int `pulumi:"sampleSizeBiConnector"`
	TransactionLifetimeLimitSeconds int `pulumi:"transactionLifetimeLimitSeconds"`
}

// GetAdvancedClustersResultAdvancedConfigurationInput is an input type that accepts GetAdvancedClustersResultAdvancedConfigurationArgs and GetAdvancedClustersResultAdvancedConfigurationOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultAdvancedConfigurationInput` via:
//
//	GetAdvancedClustersResultAdvancedConfigurationArgs{...}
type GetAdvancedClustersResultAdvancedConfigurationInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultAdvancedConfigurationOutput() GetAdvancedClustersResultAdvancedConfigurationOutput
	ToGetAdvancedClustersResultAdvancedConfigurationOutputWithContext(context.Context) GetAdvancedClustersResultAdvancedConfigurationOutput
}

type GetAdvancedClustersResultAdvancedConfigurationArgs struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern pulumi.StringInput `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern pulumi.StringInput `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong pulumi.BoolInput `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled pulumi.BoolInput `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol pulumi.StringInput `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan pulumi.BoolInput `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours pulumi.IntInput `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb pulumi.IntInput `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector pulumi.IntInput `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector           pulumi.IntInput `pulumi:"sampleSizeBiConnector"`
	TransactionLifetimeLimitSeconds pulumi.IntInput `pulumi:"transactionLifetimeLimitSeconds"`
}

func (GetAdvancedClustersResultAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (i GetAdvancedClustersResultAdvancedConfigurationArgs) ToGetAdvancedClustersResultAdvancedConfigurationOutput() GetAdvancedClustersResultAdvancedConfigurationOutput {
	return i.ToGetAdvancedClustersResultAdvancedConfigurationOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultAdvancedConfigurationArgs) ToGetAdvancedClustersResultAdvancedConfigurationOutputWithContext(ctx context.Context) GetAdvancedClustersResultAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultAdvancedConfigurationOutput)
}

func (i GetAdvancedClustersResultAdvancedConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultAdvancedConfiguration] {
	return pulumix.Output[GetAdvancedClustersResultAdvancedConfiguration]{
		OutputState: i.ToGetAdvancedClustersResultAdvancedConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClustersResultAdvancedConfigurationArrayInput is an input type that accepts GetAdvancedClustersResultAdvancedConfigurationArray and GetAdvancedClustersResultAdvancedConfigurationArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultAdvancedConfigurationArrayInput` via:
//
//	GetAdvancedClustersResultAdvancedConfigurationArray{ GetAdvancedClustersResultAdvancedConfigurationArgs{...} }
type GetAdvancedClustersResultAdvancedConfigurationArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultAdvancedConfigurationArrayOutput() GetAdvancedClustersResultAdvancedConfigurationArrayOutput
	ToGetAdvancedClustersResultAdvancedConfigurationArrayOutputWithContext(context.Context) GetAdvancedClustersResultAdvancedConfigurationArrayOutput
}

type GetAdvancedClustersResultAdvancedConfigurationArray []GetAdvancedClustersResultAdvancedConfigurationInput

func (GetAdvancedClustersResultAdvancedConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (i GetAdvancedClustersResultAdvancedConfigurationArray) ToGetAdvancedClustersResultAdvancedConfigurationArrayOutput() GetAdvancedClustersResultAdvancedConfigurationArrayOutput {
	return i.ToGetAdvancedClustersResultAdvancedConfigurationArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultAdvancedConfigurationArray) ToGetAdvancedClustersResultAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultAdvancedConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultAdvancedConfigurationArrayOutput)
}

func (i GetAdvancedClustersResultAdvancedConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultAdvancedConfiguration] {
	return pulumix.Output[[]GetAdvancedClustersResultAdvancedConfiguration]{
		OutputState: i.ToGetAdvancedClustersResultAdvancedConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClustersResultAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (o GetAdvancedClustersResultAdvancedConfigurationOutput) ToGetAdvancedClustersResultAdvancedConfigurationOutput() GetAdvancedClustersResultAdvancedConfigurationOutput {
	return o
}

func (o GetAdvancedClustersResultAdvancedConfigurationOutput) ToGetAdvancedClustersResultAdvancedConfigurationOutputWithContext(ctx context.Context) GetAdvancedClustersResultAdvancedConfigurationOutput {
	return o
}

func (o GetAdvancedClustersResultAdvancedConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultAdvancedConfiguration] {
	return pulumix.Output[GetAdvancedClustersResultAdvancedConfiguration]{
		OutputState: o.OutputState,
	}
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) DefaultReadConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) string { return v.DefaultReadConcern }).(pulumi.StringOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) DefaultWriteConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) string { return v.DefaultWriteConcern }).(pulumi.StringOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) FailIndexKeyTooLong() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) bool { return v.FailIndexKeyTooLong }).(pulumi.BoolOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) JavascriptEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) bool { return v.JavascriptEnabled }).(pulumi.BoolOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) MinimumEnabledTlsProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) string { return v.MinimumEnabledTlsProtocol }).(pulumi.StringOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) NoTableScan() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) bool { return v.NoTableScan }).(pulumi.BoolOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) OplogMinRetentionHours() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) int { return v.OplogMinRetentionHours }).(pulumi.IntOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) OplogSizeMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) int { return v.OplogSizeMb }).(pulumi.IntOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) SampleRefreshIntervalBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) int { return v.SampleRefreshIntervalBiConnector }).(pulumi.IntOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetAdvancedClustersResultAdvancedConfigurationOutput) SampleSizeBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) int { return v.SampleSizeBiConnector }).(pulumi.IntOutput)
}

func (o GetAdvancedClustersResultAdvancedConfigurationOutput) TransactionLifetimeLimitSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultAdvancedConfiguration) int { return v.TransactionLifetimeLimitSeconds }).(pulumi.IntOutput)
}

type GetAdvancedClustersResultAdvancedConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultAdvancedConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (o GetAdvancedClustersResultAdvancedConfigurationArrayOutput) ToGetAdvancedClustersResultAdvancedConfigurationArrayOutput() GetAdvancedClustersResultAdvancedConfigurationArrayOutput {
	return o
}

func (o GetAdvancedClustersResultAdvancedConfigurationArrayOutput) ToGetAdvancedClustersResultAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultAdvancedConfigurationArrayOutput {
	return o
}

func (o GetAdvancedClustersResultAdvancedConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultAdvancedConfiguration] {
	return pulumix.Output[[]GetAdvancedClustersResultAdvancedConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultAdvancedConfigurationArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultAdvancedConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultAdvancedConfiguration {
		return vs[0].([]GetAdvancedClustersResultAdvancedConfiguration)[vs[1].(int)]
	}).(GetAdvancedClustersResultAdvancedConfigurationOutput)
}

type GetAdvancedClustersResultBiConnectorConfig struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	Enabled bool `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference string `pulumi:"readPreference"`
}

// GetAdvancedClustersResultBiConnectorConfigInput is an input type that accepts GetAdvancedClustersResultBiConnectorConfigArgs and GetAdvancedClustersResultBiConnectorConfigOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultBiConnectorConfigInput` via:
//
//	GetAdvancedClustersResultBiConnectorConfigArgs{...}
type GetAdvancedClustersResultBiConnectorConfigInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultBiConnectorConfigOutput() GetAdvancedClustersResultBiConnectorConfigOutput
	ToGetAdvancedClustersResultBiConnectorConfigOutputWithContext(context.Context) GetAdvancedClustersResultBiConnectorConfigOutput
}

type GetAdvancedClustersResultBiConnectorConfigArgs struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringInput `pulumi:"readPreference"`
}

func (GetAdvancedClustersResultBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultBiConnectorConfig)(nil)).Elem()
}

func (i GetAdvancedClustersResultBiConnectorConfigArgs) ToGetAdvancedClustersResultBiConnectorConfigOutput() GetAdvancedClustersResultBiConnectorConfigOutput {
	return i.ToGetAdvancedClustersResultBiConnectorConfigOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultBiConnectorConfigArgs) ToGetAdvancedClustersResultBiConnectorConfigOutputWithContext(ctx context.Context) GetAdvancedClustersResultBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultBiConnectorConfigOutput)
}

func (i GetAdvancedClustersResultBiConnectorConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultBiConnectorConfig] {
	return pulumix.Output[GetAdvancedClustersResultBiConnectorConfig]{
		OutputState: i.ToGetAdvancedClustersResultBiConnectorConfigOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClustersResultBiConnectorConfigArrayInput is an input type that accepts GetAdvancedClustersResultBiConnectorConfigArray and GetAdvancedClustersResultBiConnectorConfigArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultBiConnectorConfigArrayInput` via:
//
//	GetAdvancedClustersResultBiConnectorConfigArray{ GetAdvancedClustersResultBiConnectorConfigArgs{...} }
type GetAdvancedClustersResultBiConnectorConfigArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultBiConnectorConfigArrayOutput() GetAdvancedClustersResultBiConnectorConfigArrayOutput
	ToGetAdvancedClustersResultBiConnectorConfigArrayOutputWithContext(context.Context) GetAdvancedClustersResultBiConnectorConfigArrayOutput
}

type GetAdvancedClustersResultBiConnectorConfigArray []GetAdvancedClustersResultBiConnectorConfigInput

func (GetAdvancedClustersResultBiConnectorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultBiConnectorConfig)(nil)).Elem()
}

func (i GetAdvancedClustersResultBiConnectorConfigArray) ToGetAdvancedClustersResultBiConnectorConfigArrayOutput() GetAdvancedClustersResultBiConnectorConfigArrayOutput {
	return i.ToGetAdvancedClustersResultBiConnectorConfigArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultBiConnectorConfigArray) ToGetAdvancedClustersResultBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultBiConnectorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultBiConnectorConfigArrayOutput)
}

func (i GetAdvancedClustersResultBiConnectorConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultBiConnectorConfig] {
	return pulumix.Output[[]GetAdvancedClustersResultBiConnectorConfig]{
		OutputState: i.ToGetAdvancedClustersResultBiConnectorConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClustersResultBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultBiConnectorConfig)(nil)).Elem()
}

func (o GetAdvancedClustersResultBiConnectorConfigOutput) ToGetAdvancedClustersResultBiConnectorConfigOutput() GetAdvancedClustersResultBiConnectorConfigOutput {
	return o
}

func (o GetAdvancedClustersResultBiConnectorConfigOutput) ToGetAdvancedClustersResultBiConnectorConfigOutputWithContext(ctx context.Context) GetAdvancedClustersResultBiConnectorConfigOutput {
	return o
}

func (o GetAdvancedClustersResultBiConnectorConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultBiConnectorConfig] {
	return pulumix.Output[GetAdvancedClustersResultBiConnectorConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
func (o GetAdvancedClustersResultBiConnectorConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultBiConnectorConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o GetAdvancedClustersResultBiConnectorConfigOutput) ReadPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultBiConnectorConfig) string { return v.ReadPreference }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultBiConnectorConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultBiConnectorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultBiConnectorConfig)(nil)).Elem()
}

func (o GetAdvancedClustersResultBiConnectorConfigArrayOutput) ToGetAdvancedClustersResultBiConnectorConfigArrayOutput() GetAdvancedClustersResultBiConnectorConfigArrayOutput {
	return o
}

func (o GetAdvancedClustersResultBiConnectorConfigArrayOutput) ToGetAdvancedClustersResultBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultBiConnectorConfigArrayOutput {
	return o
}

func (o GetAdvancedClustersResultBiConnectorConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultBiConnectorConfig] {
	return pulumix.Output[[]GetAdvancedClustersResultBiConnectorConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultBiConnectorConfigArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultBiConnectorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultBiConnectorConfig {
		return vs[0].([]GetAdvancedClustersResultBiConnectorConfig)[vs[1].(int)]
	}).(GetAdvancedClustersResultBiConnectorConfigOutput)
}

type GetAdvancedClustersResultConnectionString struct {
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].connection_string
	AwsPrivateLink map[string]interface{} `pulumi:"awsPrivateLink"`
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].srv_connection_string
	AwsPrivateLinkSrv map[string]interface{}                                     `pulumi:"awsPrivateLinkSrv"`
	Private           string                                                     `pulumi:"private"`
	PrivateEndpoints  []GetAdvancedClustersResultConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        string                                                     `pulumi:"privateSrv"`
	Standard          string                                                     `pulumi:"standard"`
	StandardSrv       string                                                     `pulumi:"standardSrv"`
}

// GetAdvancedClustersResultConnectionStringInput is an input type that accepts GetAdvancedClustersResultConnectionStringArgs and GetAdvancedClustersResultConnectionStringOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultConnectionStringInput` via:
//
//	GetAdvancedClustersResultConnectionStringArgs{...}
type GetAdvancedClustersResultConnectionStringInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultConnectionStringOutput() GetAdvancedClustersResultConnectionStringOutput
	ToGetAdvancedClustersResultConnectionStringOutputWithContext(context.Context) GetAdvancedClustersResultConnectionStringOutput
}

type GetAdvancedClustersResultConnectionStringArgs struct {
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].connection_string
	AwsPrivateLink pulumi.MapInput `pulumi:"awsPrivateLink"`
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].srv_connection_string
	AwsPrivateLinkSrv pulumi.MapInput                                                    `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringInput                                                 `pulumi:"private"`
	PrivateEndpoints  GetAdvancedClustersResultConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringInput                                                 `pulumi:"privateSrv"`
	Standard          pulumi.StringInput                                                 `pulumi:"standard"`
	StandardSrv       pulumi.StringInput                                                 `pulumi:"standardSrv"`
}

func (GetAdvancedClustersResultConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultConnectionString)(nil)).Elem()
}

func (i GetAdvancedClustersResultConnectionStringArgs) ToGetAdvancedClustersResultConnectionStringOutput() GetAdvancedClustersResultConnectionStringOutput {
	return i.ToGetAdvancedClustersResultConnectionStringOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultConnectionStringArgs) ToGetAdvancedClustersResultConnectionStringOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultConnectionStringOutput)
}

func (i GetAdvancedClustersResultConnectionStringArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultConnectionString] {
	return pulumix.Output[GetAdvancedClustersResultConnectionString]{
		OutputState: i.ToGetAdvancedClustersResultConnectionStringOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClustersResultConnectionStringArrayInput is an input type that accepts GetAdvancedClustersResultConnectionStringArray and GetAdvancedClustersResultConnectionStringArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultConnectionStringArrayInput` via:
//
//	GetAdvancedClustersResultConnectionStringArray{ GetAdvancedClustersResultConnectionStringArgs{...} }
type GetAdvancedClustersResultConnectionStringArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultConnectionStringArrayOutput() GetAdvancedClustersResultConnectionStringArrayOutput
	ToGetAdvancedClustersResultConnectionStringArrayOutputWithContext(context.Context) GetAdvancedClustersResultConnectionStringArrayOutput
}

type GetAdvancedClustersResultConnectionStringArray []GetAdvancedClustersResultConnectionStringInput

func (GetAdvancedClustersResultConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultConnectionString)(nil)).Elem()
}

func (i GetAdvancedClustersResultConnectionStringArray) ToGetAdvancedClustersResultConnectionStringArrayOutput() GetAdvancedClustersResultConnectionStringArrayOutput {
	return i.ToGetAdvancedClustersResultConnectionStringArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultConnectionStringArray) ToGetAdvancedClustersResultConnectionStringArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultConnectionStringArrayOutput)
}

func (i GetAdvancedClustersResultConnectionStringArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultConnectionString] {
	return pulumix.Output[[]GetAdvancedClustersResultConnectionString]{
		OutputState: i.ToGetAdvancedClustersResultConnectionStringArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClustersResultConnectionStringOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultConnectionString)(nil)).Elem()
}

func (o GetAdvancedClustersResultConnectionStringOutput) ToGetAdvancedClustersResultConnectionStringOutput() GetAdvancedClustersResultConnectionStringOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringOutput) ToGetAdvancedClustersResultConnectionStringOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultConnectionString] {
	return pulumix.Output[GetAdvancedClustersResultConnectionString]{
		OutputState: o.OutputState,
	}
}

// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].connection_string
func (o GetAdvancedClustersResultConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to connection_strings.private_endpoint[n].srv_connection_string
func (o GetAdvancedClustersResultConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o GetAdvancedClustersResultConnectionStringOutput) Private() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionString) string { return v.Private }).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultConnectionStringOutput) PrivateEndpoints() GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionString) []GetAdvancedClustersResultConnectionStringPrivateEndpoint {
		return v.PrivateEndpoints
	}).(GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput)
}

func (o GetAdvancedClustersResultConnectionStringOutput) PrivateSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionString) string { return v.PrivateSrv }).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultConnectionStringOutput) Standard() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionString) string { return v.Standard }).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultConnectionStringOutput) StandardSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionString) string { return v.StandardSrv }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultConnectionString)(nil)).Elem()
}

func (o GetAdvancedClustersResultConnectionStringArrayOutput) ToGetAdvancedClustersResultConnectionStringArrayOutput() GetAdvancedClustersResultConnectionStringArrayOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringArrayOutput) ToGetAdvancedClustersResultConnectionStringArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringArrayOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultConnectionString] {
	return pulumix.Output[[]GetAdvancedClustersResultConnectionString]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultConnectionStringArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultConnectionString {
		return vs[0].([]GetAdvancedClustersResultConnectionString)[vs[1].(int)]
	}).(GetAdvancedClustersResultConnectionStringOutput)
}

type GetAdvancedClustersResultConnectionStringPrivateEndpoint struct {
	ConnectionString                  string                                                             `pulumi:"connectionString"`
	Endpoints                         []GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString               string                                                             `pulumi:"srvConnectionString"`
	SrvShardOptimizedConnectionString string                                                             `pulumi:"srvShardOptimizedConnectionString"`
	Type                              string                                                             `pulumi:"type"`
}

// GetAdvancedClustersResultConnectionStringPrivateEndpointInput is an input type that accepts GetAdvancedClustersResultConnectionStringPrivateEndpointArgs and GetAdvancedClustersResultConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultConnectionStringPrivateEndpointInput` via:
//
//	GetAdvancedClustersResultConnectionStringPrivateEndpointArgs{...}
type GetAdvancedClustersResultConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointOutput
	ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutputWithContext(context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointOutput
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointArgs struct {
	ConnectionString                  pulumi.StringInput                                                         `pulumi:"connectionString"`
	Endpoints                         GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString               pulumi.StringInput                                                         `pulumi:"srvConnectionString"`
	SrvShardOptimizedConnectionString pulumi.StringInput                                                         `pulumi:"srvShardOptimizedConnectionString"`
	Type                              pulumi.StringInput                                                         `pulumi:"type"`
}

func (GetAdvancedClustersResultConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointArgs) ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointOutput {
	return i.ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointArgs) ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultConnectionStringPrivateEndpointOutput)
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultConnectionStringPrivateEndpoint] {
	return pulumix.Output[GetAdvancedClustersResultConnectionStringPrivateEndpoint]{
		OutputState: i.ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClustersResultConnectionStringPrivateEndpointArrayInput is an input type that accepts GetAdvancedClustersResultConnectionStringPrivateEndpointArray and GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultConnectionStringPrivateEndpointArrayInput` via:
//
//	GetAdvancedClustersResultConnectionStringPrivateEndpointArray{ GetAdvancedClustersResultConnectionStringPrivateEndpointArgs{...} }
type GetAdvancedClustersResultConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput
	ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointArray []GetAdvancedClustersResultConnectionStringPrivateEndpointInput

func (GetAdvancedClustersResultConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointArray) ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput {
	return i.ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointArray) ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput)
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultConnectionStringPrivateEndpoint] {
	return pulumix.Output[[]GetAdvancedClustersResultConnectionStringPrivateEndpoint]{
		OutputState: i.ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultConnectionStringPrivateEndpoint] {
	return pulumix.Output[GetAdvancedClustersResultConnectionStringPrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpoint) string { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) Endpoints() GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpoint) []GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpoint) string { return v.SrvConnectionString }).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) SrvShardOptimizedConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpoint) string {
		return v.SrvShardOptimizedConnectionString
	}).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultConnectionStringPrivateEndpoint] {
	return pulumix.Output[[]GetAdvancedClustersResultConnectionStringPrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultConnectionStringPrivateEndpoint {
		return vs[0].([]GetAdvancedClustersResultConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(GetAdvancedClustersResultConnectionStringPrivateEndpointOutput)
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint struct {
	EndpointId string `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	Region       string `pulumi:"region"`
}

// GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointInput is an input type that accepts GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs and GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointInput` via:
//
//	GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs{...}
type GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput
	ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	Region       pulumi.StringInput `pulumi:"region"`
}

func (GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return i.ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput)
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint]{
		OutputState: i.ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray and GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//	GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray{ GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs{...} }
type GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput
	ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray []GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointInput

func (GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (i GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[[]GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint]{
		OutputState: i.ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Cloud service provider on which the servers are provisioned.
func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.ProviderName }).(pulumi.StringOutput)
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.Region }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ToGetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[[]GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]GetAdvancedClustersResultConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput)
}

type GetAdvancedClustersResultLabel struct {
	// The key that you want to write.
	Key string `pulumi:"key"`
	// The value that you want to write.
	Value string `pulumi:"value"`
}

// GetAdvancedClustersResultLabelInput is an input type that accepts GetAdvancedClustersResultLabelArgs and GetAdvancedClustersResultLabelOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultLabelInput` via:
//
//	GetAdvancedClustersResultLabelArgs{...}
type GetAdvancedClustersResultLabelInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultLabelOutput() GetAdvancedClustersResultLabelOutput
	ToGetAdvancedClustersResultLabelOutputWithContext(context.Context) GetAdvancedClustersResultLabelOutput
}

type GetAdvancedClustersResultLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAdvancedClustersResultLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultLabel)(nil)).Elem()
}

func (i GetAdvancedClustersResultLabelArgs) ToGetAdvancedClustersResultLabelOutput() GetAdvancedClustersResultLabelOutput {
	return i.ToGetAdvancedClustersResultLabelOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultLabelArgs) ToGetAdvancedClustersResultLabelOutputWithContext(ctx context.Context) GetAdvancedClustersResultLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultLabelOutput)
}

func (i GetAdvancedClustersResultLabelArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultLabel] {
	return pulumix.Output[GetAdvancedClustersResultLabel]{
		OutputState: i.ToGetAdvancedClustersResultLabelOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClustersResultLabelArrayInput is an input type that accepts GetAdvancedClustersResultLabelArray and GetAdvancedClustersResultLabelArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultLabelArrayInput` via:
//
//	GetAdvancedClustersResultLabelArray{ GetAdvancedClustersResultLabelArgs{...} }
type GetAdvancedClustersResultLabelArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultLabelArrayOutput() GetAdvancedClustersResultLabelArrayOutput
	ToGetAdvancedClustersResultLabelArrayOutputWithContext(context.Context) GetAdvancedClustersResultLabelArrayOutput
}

type GetAdvancedClustersResultLabelArray []GetAdvancedClustersResultLabelInput

func (GetAdvancedClustersResultLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultLabel)(nil)).Elem()
}

func (i GetAdvancedClustersResultLabelArray) ToGetAdvancedClustersResultLabelArrayOutput() GetAdvancedClustersResultLabelArrayOutput {
	return i.ToGetAdvancedClustersResultLabelArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultLabelArray) ToGetAdvancedClustersResultLabelArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultLabelArrayOutput)
}

func (i GetAdvancedClustersResultLabelArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultLabel] {
	return pulumix.Output[[]GetAdvancedClustersResultLabel]{
		OutputState: i.ToGetAdvancedClustersResultLabelArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClustersResultLabelOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultLabel)(nil)).Elem()
}

func (o GetAdvancedClustersResultLabelOutput) ToGetAdvancedClustersResultLabelOutput() GetAdvancedClustersResultLabelOutput {
	return o
}

func (o GetAdvancedClustersResultLabelOutput) ToGetAdvancedClustersResultLabelOutputWithContext(ctx context.Context) GetAdvancedClustersResultLabelOutput {
	return o
}

func (o GetAdvancedClustersResultLabelOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultLabel] {
	return pulumix.Output[GetAdvancedClustersResultLabel]{
		OutputState: o.OutputState,
	}
}

// The key that you want to write.
func (o GetAdvancedClustersResultLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that you want to write.
func (o GetAdvancedClustersResultLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultLabelArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultLabel)(nil)).Elem()
}

func (o GetAdvancedClustersResultLabelArrayOutput) ToGetAdvancedClustersResultLabelArrayOutput() GetAdvancedClustersResultLabelArrayOutput {
	return o
}

func (o GetAdvancedClustersResultLabelArrayOutput) ToGetAdvancedClustersResultLabelArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultLabelArrayOutput {
	return o
}

func (o GetAdvancedClustersResultLabelArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultLabel] {
	return pulumix.Output[[]GetAdvancedClustersResultLabel]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultLabelArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultLabel {
		return vs[0].([]GetAdvancedClustersResultLabel)[vs[1].(int)]
	}).(GetAdvancedClustersResultLabelOutput)
}

type GetAdvancedClustersResultReplicationSpec struct {
	// A key-value map of the Network Peering Container ID(s) for the configuration specified in `regionConfigs`. The Container ID is the id of the container either created programmatically by the user before any clusters existed in a project or when the first cluster in the region (AWS/Azure) or project (GCP) was created.  The syntax is `"providerName:regionName" = "containerId"`. Example `AWS:US_EAST_1" = "61e0797dde08fb498ca11a71`.
	ContainerId map[string]string `pulumi:"containerId"`
	Id          string            `pulumi:"id"`
	// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED.
	NumShards int `pulumi:"numShards"`
	// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
	RegionConfigs []GetAdvancedClustersResultReplicationSpecRegionConfig `pulumi:"regionConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName string `pulumi:"zoneName"`
}

// GetAdvancedClustersResultReplicationSpecInput is an input type that accepts GetAdvancedClustersResultReplicationSpecArgs and GetAdvancedClustersResultReplicationSpecOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecInput` via:
//
//	GetAdvancedClustersResultReplicationSpecArgs{...}
type GetAdvancedClustersResultReplicationSpecInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecOutput() GetAdvancedClustersResultReplicationSpecOutput
	ToGetAdvancedClustersResultReplicationSpecOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecOutput
}

type GetAdvancedClustersResultReplicationSpecArgs struct {
	// A key-value map of the Network Peering Container ID(s) for the configuration specified in `regionConfigs`. The Container ID is the id of the container either created programmatically by the user before any clusters existed in a project or when the first cluster in the region (AWS/Azure) or project (GCP) was created.  The syntax is `"providerName:regionName" = "containerId"`. Example `AWS:US_EAST_1" = "61e0797dde08fb498ca11a71`.
	ContainerId pulumi.StringMapInput `pulumi:"containerId"`
	Id          pulumi.StringInput    `pulumi:"id"`
	// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
	RegionConfigs GetAdvancedClustersResultReplicationSpecRegionConfigArrayInput `pulumi:"regionConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetAdvancedClustersResultReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpec)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecArgs) ToGetAdvancedClustersResultReplicationSpecOutput() GetAdvancedClustersResultReplicationSpecOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecArgs) ToGetAdvancedClustersResultReplicationSpecOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecOutput)
}

func (i GetAdvancedClustersResultReplicationSpecArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultReplicationSpec] {
	return pulumix.Output[GetAdvancedClustersResultReplicationSpec]{
		OutputState: i.ToGetAdvancedClustersResultReplicationSpecOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClustersResultReplicationSpecArrayInput is an input type that accepts GetAdvancedClustersResultReplicationSpecArray and GetAdvancedClustersResultReplicationSpecArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecArrayInput` via:
//
//	GetAdvancedClustersResultReplicationSpecArray{ GetAdvancedClustersResultReplicationSpecArgs{...} }
type GetAdvancedClustersResultReplicationSpecArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecArrayOutput() GetAdvancedClustersResultReplicationSpecArrayOutput
	ToGetAdvancedClustersResultReplicationSpecArrayOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecArrayOutput
}

type GetAdvancedClustersResultReplicationSpecArray []GetAdvancedClustersResultReplicationSpecInput

func (GetAdvancedClustersResultReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpec)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecArray) ToGetAdvancedClustersResultReplicationSpecArrayOutput() GetAdvancedClustersResultReplicationSpecArrayOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecArray) ToGetAdvancedClustersResultReplicationSpecArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecArrayOutput)
}

func (i GetAdvancedClustersResultReplicationSpecArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultReplicationSpec] {
	return pulumix.Output[[]GetAdvancedClustersResultReplicationSpec]{
		OutputState: i.ToGetAdvancedClustersResultReplicationSpecArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClustersResultReplicationSpecOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpec)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecOutput) ToGetAdvancedClustersResultReplicationSpecOutput() GetAdvancedClustersResultReplicationSpecOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecOutput) ToGetAdvancedClustersResultReplicationSpecOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultReplicationSpec] {
	return pulumix.Output[GetAdvancedClustersResultReplicationSpec]{
		OutputState: o.OutputState,
	}
}

// A key-value map of the Network Peering Container ID(s) for the configuration specified in `regionConfigs`. The Container ID is the id of the container either created programmatically by the user before any clusters existed in a project or when the first cluster in the region (AWS/Azure) or project (GCP) was created.  The syntax is `"providerName:regionName" = "containerId"`. Example `AWS:US_EAST_1" = "61e0797dde08fb498ca11a71`.
func (o GetAdvancedClustersResultReplicationSpecOutput) ContainerId() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpec) map[string]string { return v.ContainerId }).(pulumi.StringMapOutput)
}

func (o GetAdvancedClustersResultReplicationSpecOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpec) string { return v.Id }).(pulumi.StringOutput)
}

// Provide this value if you set a `clusterType` of SHARDED or GEOSHARDED.
func (o GetAdvancedClustersResultReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Configuration for the hardware specifications for nodes set for a given regionEach `regionConfigs` object describes the region's priority in elections and the number and type of MongoDB nodes that Atlas deploys to the region. Each `regionConfigs` object must have either an `analyticsSpecs` object, `electableSpecs` object, or `readOnlySpecs` object. See below
func (o GetAdvancedClustersResultReplicationSpecOutput) RegionConfigs() GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpec) []GetAdvancedClustersResultReplicationSpecRegionConfig {
		return v.RegionConfigs
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput)
}

// Name for the zone in a Global Cluster.
func (o GetAdvancedClustersResultReplicationSpecOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpec) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpec)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecArrayOutput) ToGetAdvancedClustersResultReplicationSpecArrayOutput() GetAdvancedClustersResultReplicationSpecArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecArrayOutput) ToGetAdvancedClustersResultReplicationSpecArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultReplicationSpec] {
	return pulumix.Output[[]GetAdvancedClustersResultReplicationSpec]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultReplicationSpecArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultReplicationSpec {
		return vs[0].([]GetAdvancedClustersResultReplicationSpec)[vs[1].(int)]
	}).(GetAdvancedClustersResultReplicationSpecOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfig struct {
	// Configuration for the Collection of settings that configures analytis-auto-scaling information for the cluster. See below
	AnalyticsAutoScalings []GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling `pulumi:"analyticsAutoScalings"`
	// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. See below
	AnalyticsSpecs *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs `pulumi:"analyticsSpecs"`
	// Configuration for the Collection of settings that configures auto-scaling information for the cluster. See below
	AutoScalings []GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling `pulumi:"autoScalings"`
	// Cloud service provider on which you provision the host for a multi-tenant cluster.
	BackingProviderName string `pulumi:"backingProviderName"`
	// Hardware specifications for electable nodes in the region.
	ElectableSpecs *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs `pulumi:"electableSpecs"`
	// Election priority of the region.
	Priority int `pulumi:"priority"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	// Hardware specifications for read-only nodes in the region. See below
	ReadOnlySpecs *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs `pulumi:"readOnlySpecs"`
	// Physical location of your MongoDB cluster.
	RegionName string `pulumi:"regionName"`
}

// GetAdvancedClustersResultReplicationSpecRegionConfigInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigArgs and GetAdvancedClustersResultReplicationSpecRegionConfigOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigArgs{...}
type GetAdvancedClustersResultReplicationSpecRegionConfigInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigOutput() GetAdvancedClustersResultReplicationSpecRegionConfigOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigArgs struct {
	// Configuration for the Collection of settings that configures analytis-auto-scaling information for the cluster. See below
	AnalyticsAutoScalings GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput `pulumi:"analyticsAutoScalings"`
	// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. See below
	AnalyticsSpecs GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrInput `pulumi:"analyticsSpecs"`
	// Configuration for the Collection of settings that configures auto-scaling information for the cluster. See below
	AutoScalings GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayInput `pulumi:"autoScalings"`
	// Cloud service provider on which you provision the host for a multi-tenant cluster.
	BackingProviderName pulumi.StringInput `pulumi:"backingProviderName"`
	// Hardware specifications for electable nodes in the region.
	ElectableSpecs GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrInput `pulumi:"electableSpecs"`
	// Election priority of the region.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Hardware specifications for read-only nodes in the region. See below
	ReadOnlySpecs GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrInput `pulumi:"readOnlySpecs"`
	// Physical location of your MongoDB cluster.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetAdvancedClustersResultReplicationSpecRegionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfig)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigOutput() GetAdvancedClustersResultReplicationSpecRegionConfigOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigOutput)
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfig] {
	return pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfig]{
		OutputState: i.ToGetAdvancedClustersResultReplicationSpecRegionConfigOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClustersResultReplicationSpecRegionConfigArrayInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigArray and GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigArrayInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigArray{ GetAdvancedClustersResultReplicationSpecRegionConfigArgs{...} }
type GetAdvancedClustersResultReplicationSpecRegionConfigArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigArray []GetAdvancedClustersResultReplicationSpecRegionConfigInput

func (GetAdvancedClustersResultReplicationSpecRegionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpecRegionConfig)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigArray) ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigArray) ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput)
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultReplicationSpecRegionConfig] {
	return pulumix.Output[[]GetAdvancedClustersResultReplicationSpecRegionConfig]{
		OutputState: i.ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClustersResultReplicationSpecRegionConfigOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfig)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigOutput() GetAdvancedClustersResultReplicationSpecRegionConfigOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfig] {
	return pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfig]{
		OutputState: o.OutputState,
	}
}

// Configuration for the Collection of settings that configures analytis-auto-scaling information for the cluster. See below
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) AnalyticsAutoScalings() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) []GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling {
		return v.AnalyticsAutoScalings
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput)
}

// Hardware specifications for [analytics nodes](https://docs.atlas.mongodb.com/reference/faq/deployment/#std-label-analytics-nodes-overview) needed in the region. See below
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) AnalyticsSpecs() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs {
		return v.AnalyticsSpecs
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

// Configuration for the Collection of settings that configures auto-scaling information for the cluster. See below
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) AutoScalings() GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) []GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling {
		return v.AutoScalings
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput)
}

// Cloud service provider on which you provision the host for a multi-tenant cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) BackingProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) string { return v.BackingProviderName }).(pulumi.StringOutput)
}

// Hardware specifications for electable nodes in the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) ElectableSpecs() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs {
		return v.ElectableSpecs
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

// Election priority of the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Cloud service provider on which the servers are provisioned.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Hardware specifications for read-only nodes in the region. See below
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) ReadOnlySpecs() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs {
		return v.ReadOnlySpecs
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

// Physical location of your MongoDB cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpecRegionConfig)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultReplicationSpecRegionConfig] {
	return pulumix.Output[[]GetAdvancedClustersResultReplicationSpecRegionConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultReplicationSpecRegionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultReplicationSpecRegionConfig {
		return vs[0].([]GetAdvancedClustersResultReplicationSpecRegionConfig)[vs[1].(int)]
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled bool `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	ComputeMaxInstanceSize string `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize string `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled bool `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled bool `pulumi:"diskGbEnabled"`
}

// GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs and GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs{...}
type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled pulumi.BoolInput `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	ComputeMaxInstanceSize pulumi.StringInput `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize pulumi.StringInput `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled pulumi.BoolInput `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled pulumi.BoolInput `pulumi:"diskGbEnabled"`
}

func (GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput)
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling] {
	return pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling]{
		OutputState: i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray and GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray{ GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs{...} }
type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray []GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingInput

func (GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput)
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling] {
	return pulumix.Output[[]GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling]{
		OutputState: i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling] {
	return pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling]{
		OutputState: o.OutputState,
	}
}

// Flag that indicates whether instance size auto-scaling is enabled.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling) bool {
		return v.ComputeEnabled
	}).(pulumi.BoolOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40).
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeMaxInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling) string {
		return v.ComputeMaxInstanceSize
	}).(pulumi.StringOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10).
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeMinInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling) string {
		return v.ComputeMinInstanceSize
	}).(pulumi.StringOutput)
}

// Flag that indicates whether the instance size may scale down.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) ComputeScaleDownEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling) bool {
		return v.ComputeScaleDownEnabled
	}).(pulumi.BoolOutput)
}

// Flag that indicates whether this cluster enables disk auto-scaling.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput) DiskGbEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling) bool {
		return v.DiskGbEnabled
	}).(pulumi.BoolOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling] {
	return pulumix.Output[[]GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling {
		return vs[0].([]GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScaling)[vs[1].(int)]
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs and GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs{...}
type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput)
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs] {
	return pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs]{
		OutputState: i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx).OutputState,
	}
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput).ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx)
}

// GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs, GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtr and GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrInput` via:
//
//	        GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs{...}
//
//	or:
//
//	        nil
type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput
}

type getAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrType GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs

func GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtr(v *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrInput {
	return (*getAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrType)(v)
}

func (*getAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs] {
	return pulumix.Output[*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs]{
		OutputState: i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(context.Background())
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs {
		return &v
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput)
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs] {
	return pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs]{
		OutputState: o.OutputState,
	}
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *string {
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) string {
		return v.InstanceSize
	}).(pulumi.StringOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs] {
	return pulumix.Output[*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) Elem() GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs {
		if v != nil {
			return *v
		}
		var ret GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs
		return ret
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled bool `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	ComputeMaxInstanceSize string `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize string `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled bool `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled bool `pulumi:"diskGbEnabled"`
}

// GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs and GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs{...}
type GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs struct {
	// Flag that indicates whether instance size auto-scaling is enabled.
	ComputeEnabled pulumi.BoolInput `pulumi:"computeEnabled"`
	// Maximum instance size to which your cluster can automatically scale (such as M40).
	ComputeMaxInstanceSize pulumi.StringInput `pulumi:"computeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale (such as M10).
	ComputeMinInstanceSize pulumi.StringInput `pulumi:"computeMinInstanceSize"`
	// Flag that indicates whether the instance size may scale down.
	ComputeScaleDownEnabled pulumi.BoolInput `pulumi:"computeScaleDownEnabled"`
	// Flag that indicates whether this cluster enables disk auto-scaling.
	DiskGbEnabled pulumi.BoolInput `pulumi:"diskGbEnabled"`
}

func (GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput)
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling] {
	return pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling]{
		OutputState: i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx).OutputState,
	}
}

// GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray and GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray{ GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs{...} }
type GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray []GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingInput

func (GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput)
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling] {
	return pulumix.Output[[]GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling]{
		OutputState: i.ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling] {
	return pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling]{
		OutputState: o.OutputState,
	}
}

// Flag that indicates whether instance size auto-scaling is enabled.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ComputeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling) bool { return v.ComputeEnabled }).(pulumi.BoolOutput)
}

// Maximum instance size to which your cluster can automatically scale (such as M40).
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ComputeMaxInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling) string {
		return v.ComputeMaxInstanceSize
	}).(pulumi.StringOutput)
}

// Minimum instance size to which your cluster can automatically scale (such as M10).
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ComputeMinInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling) string {
		return v.ComputeMinInstanceSize
	}).(pulumi.StringOutput)
}

// Flag that indicates whether the instance size may scale down.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) ComputeScaleDownEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling) bool {
		return v.ComputeScaleDownEnabled
	}).(pulumi.BoolOutput)
}

// Flag that indicates whether this cluster enables disk auto-scaling.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput) DiskGbEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling) bool { return v.DiskGbEnabled }).(pulumi.BoolOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput() GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling] {
	return pulumix.Output[[]GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput) Index(i pulumi.IntInput) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling {
		return vs[0].([]GetAdvancedClustersResultReplicationSpecRegionConfigAutoScaling)[vs[1].(int)]
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs and GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs{...}
type GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput)
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs] {
	return pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs]{
		OutputState: i.ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx).OutputState,
	}
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput).ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx)
}

// GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs, GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtr and GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrInput` via:
//
//	        GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs{...}
//
//	or:
//
//	        nil
type GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput
}

type getAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrType GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs

func GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtr(v *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrInput {
	return (*getAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrType)(v)
}

func (*getAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrType) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrType) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs] {
	return pulumix.Output[*GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs]{
		OutputState: i.ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(context.Background())
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs {
		return &v
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput)
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs] {
	return pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs]{
		OutputState: o.OutputState,
	}
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *string {
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) string {
		return v.InstanceSize
	}).(pulumi.StringOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs] {
	return pulumix.Output[*GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) Elem() GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs {
		if v != nil {
			return *v
		}
		var ret GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs
		return ret
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops *int `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType *string `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize string `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount *int `pulumi:"nodeCount"`
}

// GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs and GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsInput` via:
//
//	GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs{...}
type GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput
}

type GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs struct {
	// Target throughput (IOPS) desired for AWS storage attached to your cluster.
	DiskIops pulumi.IntPtrInput `pulumi:"diskIops"`
	// Type of storage you want to attach to your AWS-provisioned cluster.
	EbsVolumeType pulumi.StringPtrInput `pulumi:"ebsVolumeType"`
	// Hardware specification for the instance sizes in this region.
	InstanceSize pulumi.StringInput `pulumi:"instanceSize"`
	// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput)
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs] {
	return pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs]{
		OutputState: i.ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx).OutputState,
	}
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (i GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput).ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx)
}

// GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrInput is an input type that accepts GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs, GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtr and GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput values.
// You can construct a concrete instance of `GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrInput` via:
//
//	        GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs{...}
//
//	or:
//
//	        nil
type GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrInput interface {
	pulumi.Input

	ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput
	ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput
}

type getAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrType GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs

func GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtr(v *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrInput {
	return (*getAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrType)(v)
}

func (*getAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrType) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return i.ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrType) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

func (i *getAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs] {
	return pulumix.Output[*GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs]{
		OutputState: i.ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx).OutputState,
	}
}

type GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(context.Background())
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs {
		return &v
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput)
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) ToOutput(ctx context.Context) pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs] {
	return pulumix.Output[GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs]{
		OutputState: o.OutputState,
	}
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *int { return v.DiskIops }).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *string {
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) string {
		return v.InstanceSize
	}).(pulumi.StringOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput struct{ *pulumi.OutputState }

func (GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs)(nil)).Elem()
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToGetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutputWithContext(ctx context.Context) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput {
	return o
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs] {
	return pulumix.Output[*GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs]{
		OutputState: o.OutputState,
	}
}

func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) Elem() GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs {
		if v != nil {
			return *v
		}
		var ret GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs
		return ret
	}).(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput)
}

// Target throughput (IOPS) desired for AWS storage attached to your cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) DiskIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *int {
		if v == nil {
			return nil
		}
		return v.DiskIops
	}).(pulumi.IntPtrOutput)
}

// Type of storage you want to attach to your AWS-provisioned cluster.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) EbsVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *string {
		if v == nil {
			return nil
		}
		return v.EbsVolumeType
	}).(pulumi.StringPtrOutput)
}

// Hardware specification for the instance sizes in this region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) InstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceSize
	}).(pulumi.StringPtrOutput)
}

// Number of nodes of the given type for MongoDB Atlas to deploy to the region.
func (o GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecs) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

type GetAlertConfigurationMatcher struct {
	// Name of the field in the target object to match on.
	FieldName string `pulumi:"fieldName"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	Operator string `pulumi:"operator"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	Value string `pulumi:"value"`
}

// GetAlertConfigurationMatcherInput is an input type that accepts GetAlertConfigurationMatcherArgs and GetAlertConfigurationMatcherOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMatcherInput` via:
//
//	GetAlertConfigurationMatcherArgs{...}
type GetAlertConfigurationMatcherInput interface {
	pulumi.Input

	ToGetAlertConfigurationMatcherOutput() GetAlertConfigurationMatcherOutput
	ToGetAlertConfigurationMatcherOutputWithContext(context.Context) GetAlertConfigurationMatcherOutput
}

type GetAlertConfigurationMatcherArgs struct {
	// Name of the field in the target object to match on.
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	Operator pulumi.StringInput `pulumi:"operator"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAlertConfigurationMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMatcher)(nil)).Elem()
}

func (i GetAlertConfigurationMatcherArgs) ToGetAlertConfigurationMatcherOutput() GetAlertConfigurationMatcherOutput {
	return i.ToGetAlertConfigurationMatcherOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMatcherArgs) ToGetAlertConfigurationMatcherOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMatcherOutput)
}

func (i GetAlertConfigurationMatcherArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationMatcher] {
	return pulumix.Output[GetAlertConfigurationMatcher]{
		OutputState: i.ToGetAlertConfigurationMatcherOutputWithContext(ctx).OutputState,
	}
}

// GetAlertConfigurationMatcherArrayInput is an input type that accepts GetAlertConfigurationMatcherArray and GetAlertConfigurationMatcherArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMatcherArrayInput` via:
//
//	GetAlertConfigurationMatcherArray{ GetAlertConfigurationMatcherArgs{...} }
type GetAlertConfigurationMatcherArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationMatcherArrayOutput() GetAlertConfigurationMatcherArrayOutput
	ToGetAlertConfigurationMatcherArrayOutputWithContext(context.Context) GetAlertConfigurationMatcherArrayOutput
}

type GetAlertConfigurationMatcherArray []GetAlertConfigurationMatcherInput

func (GetAlertConfigurationMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationMatcher)(nil)).Elem()
}

func (i GetAlertConfigurationMatcherArray) ToGetAlertConfigurationMatcherArrayOutput() GetAlertConfigurationMatcherArrayOutput {
	return i.ToGetAlertConfigurationMatcherArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMatcherArray) ToGetAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMatcherArrayOutput)
}

func (i GetAlertConfigurationMatcherArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationMatcher] {
	return pulumix.Output[[]GetAlertConfigurationMatcher]{
		OutputState: i.ToGetAlertConfigurationMatcherArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertConfigurationMatcherOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMatcher)(nil)).Elem()
}

func (o GetAlertConfigurationMatcherOutput) ToGetAlertConfigurationMatcherOutput() GetAlertConfigurationMatcherOutput {
	return o
}

func (o GetAlertConfigurationMatcherOutput) ToGetAlertConfigurationMatcherOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherOutput {
	return o
}

func (o GetAlertConfigurationMatcherOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationMatcher] {
	return pulumix.Output[GetAlertConfigurationMatcher]{
		OutputState: o.OutputState,
	}
}

// Name of the field in the target object to match on.
func (o GetAlertConfigurationMatcherOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMatcher) string { return v.FieldName }).(pulumi.StringOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
func (o GetAlertConfigurationMatcherOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMatcher) string { return v.Operator }).(pulumi.StringOutput)
}

// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
func (o GetAlertConfigurationMatcherOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMatcher) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertConfigurationMatcherArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationMatcher)(nil)).Elem()
}

func (o GetAlertConfigurationMatcherArrayOutput) ToGetAlertConfigurationMatcherArrayOutput() GetAlertConfigurationMatcherArrayOutput {
	return o
}

func (o GetAlertConfigurationMatcherArrayOutput) ToGetAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherArrayOutput {
	return o
}

func (o GetAlertConfigurationMatcherArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationMatcher] {
	return pulumix.Output[[]GetAlertConfigurationMatcher]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationMatcherArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationMatcherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationMatcher {
		return vs[0].([]GetAlertConfigurationMatcher)[vs[1].(int)]
	}).(GetAlertConfigurationMatcherOutput)
}

type GetAlertConfigurationMetricThresholdConfig struct {
	// Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
	MetricName string `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode string `pulumi:"mode"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	Operator string `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold float64 `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units string `pulumi:"units"`
}

// GetAlertConfigurationMetricThresholdConfigInput is an input type that accepts GetAlertConfigurationMetricThresholdConfigArgs and GetAlertConfigurationMetricThresholdConfigOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMetricThresholdConfigInput` via:
//
//	GetAlertConfigurationMetricThresholdConfigArgs{...}
type GetAlertConfigurationMetricThresholdConfigInput interface {
	pulumi.Input

	ToGetAlertConfigurationMetricThresholdConfigOutput() GetAlertConfigurationMetricThresholdConfigOutput
	ToGetAlertConfigurationMetricThresholdConfigOutputWithContext(context.Context) GetAlertConfigurationMetricThresholdConfigOutput
}

type GetAlertConfigurationMetricThresholdConfigArgs struct {
	// Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	Operator pulumi.StringInput `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units pulumi.StringInput `pulumi:"units"`
}

func (GetAlertConfigurationMetricThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationMetricThresholdConfigArgs) ToGetAlertConfigurationMetricThresholdConfigOutput() GetAlertConfigurationMetricThresholdConfigOutput {
	return i.ToGetAlertConfigurationMetricThresholdConfigOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMetricThresholdConfigArgs) ToGetAlertConfigurationMetricThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationMetricThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMetricThresholdConfigOutput)
}

func (i GetAlertConfigurationMetricThresholdConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationMetricThresholdConfig] {
	return pulumix.Output[GetAlertConfigurationMetricThresholdConfig]{
		OutputState: i.ToGetAlertConfigurationMetricThresholdConfigOutputWithContext(ctx).OutputState,
	}
}

// GetAlertConfigurationMetricThresholdConfigArrayInput is an input type that accepts GetAlertConfigurationMetricThresholdConfigArray and GetAlertConfigurationMetricThresholdConfigArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMetricThresholdConfigArrayInput` via:
//
//	GetAlertConfigurationMetricThresholdConfigArray{ GetAlertConfigurationMetricThresholdConfigArgs{...} }
type GetAlertConfigurationMetricThresholdConfigArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationMetricThresholdConfigArrayOutput() GetAlertConfigurationMetricThresholdConfigArrayOutput
	ToGetAlertConfigurationMetricThresholdConfigArrayOutputWithContext(context.Context) GetAlertConfigurationMetricThresholdConfigArrayOutput
}

type GetAlertConfigurationMetricThresholdConfigArray []GetAlertConfigurationMetricThresholdConfigInput

func (GetAlertConfigurationMetricThresholdConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationMetricThresholdConfigArray) ToGetAlertConfigurationMetricThresholdConfigArrayOutput() GetAlertConfigurationMetricThresholdConfigArrayOutput {
	return i.ToGetAlertConfigurationMetricThresholdConfigArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMetricThresholdConfigArray) ToGetAlertConfigurationMetricThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationMetricThresholdConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMetricThresholdConfigArrayOutput)
}

func (i GetAlertConfigurationMetricThresholdConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationMetricThresholdConfig] {
	return pulumix.Output[[]GetAlertConfigurationMetricThresholdConfig]{
		OutputState: i.ToGetAlertConfigurationMetricThresholdConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertConfigurationMetricThresholdConfigOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMetricThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationMetricThresholdConfigOutput) ToGetAlertConfigurationMetricThresholdConfigOutput() GetAlertConfigurationMetricThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationMetricThresholdConfigOutput) ToGetAlertConfigurationMetricThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationMetricThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationMetricThresholdConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationMetricThresholdConfig] {
	return pulumix.Output[GetAlertConfigurationMetricThresholdConfig]{
		OutputState: o.OutputState,
	}
}

// Name of the metric to check. The full list being quite large, please refer to atlas docs [here for general metrics](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types) and [here for serverless metrics](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-create-config/#serverless-measurements)
func (o GetAlertConfigurationMetricThresholdConfigOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) string { return v.MetricName }).(pulumi.StringOutput)
}

// This must be set to AVERAGE. Atlas computes the current metric value as an average.
func (o GetAlertConfigurationMetricThresholdConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) string { return v.Mode }).(pulumi.StringOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
func (o GetAlertConfigurationMetricThresholdConfigOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o GetAlertConfigurationMetricThresholdConfigOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) float64 { return v.Threshold }).(pulumi.Float64Output)
}

// The units for the threshold value. Depends on the type of metric.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
func (o GetAlertConfigurationMetricThresholdConfigOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) string { return v.Units }).(pulumi.StringOutput)
}

type GetAlertConfigurationMetricThresholdConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMetricThresholdConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationMetricThresholdConfigArrayOutput) ToGetAlertConfigurationMetricThresholdConfigArrayOutput() GetAlertConfigurationMetricThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationMetricThresholdConfigArrayOutput) ToGetAlertConfigurationMetricThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationMetricThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationMetricThresholdConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationMetricThresholdConfig] {
	return pulumix.Output[[]GetAlertConfigurationMetricThresholdConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationMetricThresholdConfigArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationMetricThresholdConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationMetricThresholdConfig {
		return vs[0].([]GetAlertConfigurationMetricThresholdConfig)[vs[1].(int)]
	}).(GetAlertConfigurationMetricThresholdConfigOutput)
}

type GetAlertConfigurationNotification struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken string `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName string `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey string `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion string `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin int `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress string `pulumi:"emailAddress"`
	// Flag indicating email notifications should be sent. Atlas returns this value if `typeName` is set  to `ORG`, `GROUP`, or `USER`.
	EmailEnabled bool `pulumi:"emailEnabled"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
	IntervalMin int `pulumi:"intervalMin"`
	// Microsoft Teams channel incoming webhook URL. Required for the `MICROSOFT_TEAMS` notifications type.
	MicrosoftTeamsWebhookUrl *string `pulumi:"microsoftTeamsWebhookUrl"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber string `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey string `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion string `pulumi:"opsGenieRegion"`
	// Atlas role in current Project or Organization. Atlas returns this value if you set `typeName` to `ORG` or `GROUP`.
	Roles []string `pulumi:"roles"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey string `pulumi:"serviceKey"`
	// Flag indicating text notifications should be sent. Atlas returns this value if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	SmsEnabled bool `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId string `pulumi:"teamId"`
	// Label for the team that receives this notification.
	TeamName string `pulumi:"teamName"`
	// Type of alert notification.
	// Accepted values are:
	TypeName string `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username string `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey string `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey string `pulumi:"victorOpsRoutingKey"`
	// Authentication secret for the `WEBHOOK` notifications type.
	WebhookSecret *string `pulumi:"webhookSecret"`
	// Target URL  for the `WEBHOOK` notifications type.
	WebhookUrl *string `pulumi:"webhookUrl"`
}

// GetAlertConfigurationNotificationInput is an input type that accepts GetAlertConfigurationNotificationArgs and GetAlertConfigurationNotificationOutput values.
// You can construct a concrete instance of `GetAlertConfigurationNotificationInput` via:
//
//	GetAlertConfigurationNotificationArgs{...}
type GetAlertConfigurationNotificationInput interface {
	pulumi.Input

	ToGetAlertConfigurationNotificationOutput() GetAlertConfigurationNotificationOutput
	ToGetAlertConfigurationNotificationOutputWithContext(context.Context) GetAlertConfigurationNotificationOutput
}

type GetAlertConfigurationNotificationArgs struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken pulumi.StringInput `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey pulumi.StringInput `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion pulumi.StringInput `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin pulumi.IntInput `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// Flag indicating email notifications should be sent. Atlas returns this value if `typeName` is set  to `ORG`, `GROUP`, or `USER`.
	EmailEnabled pulumi.BoolInput `pulumi:"emailEnabled"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
	IntervalMin pulumi.IntInput `pulumi:"intervalMin"`
	// Microsoft Teams channel incoming webhook URL. Required for the `MICROSOFT_TEAMS` notifications type.
	MicrosoftTeamsWebhookUrl pulumi.StringPtrInput `pulumi:"microsoftTeamsWebhookUrl"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber pulumi.StringInput `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey pulumi.StringInput `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion pulumi.StringInput `pulumi:"opsGenieRegion"`
	// Atlas role in current Project or Organization. Atlas returns this value if you set `typeName` to `ORG` or `GROUP`.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey pulumi.StringInput `pulumi:"serviceKey"`
	// Flag indicating text notifications should be sent. Atlas returns this value if `typeName` is set to `ORG`, `GROUP`, or `USER`.
	SmsEnabled pulumi.BoolInput `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId pulumi.StringInput `pulumi:"teamId"`
	// Label for the team that receives this notification.
	TeamName pulumi.StringInput `pulumi:"teamName"`
	// Type of alert notification.
	// Accepted values are:
	TypeName pulumi.StringInput `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username pulumi.StringInput `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey pulumi.StringInput `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey pulumi.StringInput `pulumi:"victorOpsRoutingKey"`
	// Authentication secret for the `WEBHOOK` notifications type.
	WebhookSecret pulumi.StringPtrInput `pulumi:"webhookSecret"`
	// Target URL  for the `WEBHOOK` notifications type.
	WebhookUrl pulumi.StringPtrInput `pulumi:"webhookUrl"`
}

func (GetAlertConfigurationNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationNotification)(nil)).Elem()
}

func (i GetAlertConfigurationNotificationArgs) ToGetAlertConfigurationNotificationOutput() GetAlertConfigurationNotificationOutput {
	return i.ToGetAlertConfigurationNotificationOutputWithContext(context.Background())
}

func (i GetAlertConfigurationNotificationArgs) ToGetAlertConfigurationNotificationOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationNotificationOutput)
}

func (i GetAlertConfigurationNotificationArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationNotification] {
	return pulumix.Output[GetAlertConfigurationNotification]{
		OutputState: i.ToGetAlertConfigurationNotificationOutputWithContext(ctx).OutputState,
	}
}

// GetAlertConfigurationNotificationArrayInput is an input type that accepts GetAlertConfigurationNotificationArray and GetAlertConfigurationNotificationArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationNotificationArrayInput` via:
//
//	GetAlertConfigurationNotificationArray{ GetAlertConfigurationNotificationArgs{...} }
type GetAlertConfigurationNotificationArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationNotificationArrayOutput() GetAlertConfigurationNotificationArrayOutput
	ToGetAlertConfigurationNotificationArrayOutputWithContext(context.Context) GetAlertConfigurationNotificationArrayOutput
}

type GetAlertConfigurationNotificationArray []GetAlertConfigurationNotificationInput

func (GetAlertConfigurationNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationNotification)(nil)).Elem()
}

func (i GetAlertConfigurationNotificationArray) ToGetAlertConfigurationNotificationArrayOutput() GetAlertConfigurationNotificationArrayOutput {
	return i.ToGetAlertConfigurationNotificationArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationNotificationArray) ToGetAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationNotificationArrayOutput)
}

func (i GetAlertConfigurationNotificationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationNotification] {
	return pulumix.Output[[]GetAlertConfigurationNotification]{
		OutputState: i.ToGetAlertConfigurationNotificationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertConfigurationNotificationOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationNotification)(nil)).Elem()
}

func (o GetAlertConfigurationNotificationOutput) ToGetAlertConfigurationNotificationOutput() GetAlertConfigurationNotificationOutput {
	return o
}

func (o GetAlertConfigurationNotificationOutput) ToGetAlertConfigurationNotificationOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationOutput {
	return o
}

func (o GetAlertConfigurationNotificationOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationNotification] {
	return pulumix.Output[GetAlertConfigurationNotification]{
		OutputState: o.OutputState,
	}
}

// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o GetAlertConfigurationNotificationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.ApiToken }).(pulumi.StringOutput)
}

// Slack channel name. Required for the SLACK notifications type.
func (o GetAlertConfigurationNotificationOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
func (o GetAlertConfigurationNotificationOutput) DatadogApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.DatadogApiKey }).(pulumi.StringOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
func (o GetAlertConfigurationNotificationOutput) DatadogRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.DatadogRegion }).(pulumi.StringOutput)
}

// Number of minutes to wait after an alert condition is detected before sending out the first notification.
func (o GetAlertConfigurationNotificationOutput) DelayMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) int { return v.DelayMin }).(pulumi.IntOutput)
}

// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
func (o GetAlertConfigurationNotificationOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// Flag indicating email notifications should be sent. Atlas returns this value if `typeName` is set  to `ORG`, `GROUP`, or `USER`.
func (o GetAlertConfigurationNotificationOutput) EmailEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) bool { return v.EmailEnabled }).(pulumi.BoolOutput)
}

// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
func (o GetAlertConfigurationNotificationOutput) IntervalMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) int { return v.IntervalMin }).(pulumi.IntOutput)
}

// Microsoft Teams channel incoming webhook URL. Required for the `MICROSOFT_TEAMS` notifications type.
func (o GetAlertConfigurationNotificationOutput) MicrosoftTeamsWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) *string { return v.MicrosoftTeamsWebhookUrl }).(pulumi.StringPtrOutput)
}

// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
func (o GetAlertConfigurationNotificationOutput) MobileNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.MobileNumber }).(pulumi.StringOutput)
}

// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o GetAlertConfigurationNotificationOutput) OpsGenieApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.OpsGenieApiKey }).(pulumi.StringOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
func (o GetAlertConfigurationNotificationOutput) OpsGenieRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.OpsGenieRegion }).(pulumi.StringOutput)
}

// Atlas role in current Project or Organization. Atlas returns this value if you set `typeName` to `ORG` or `GROUP`.
func (o GetAlertConfigurationNotificationOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o GetAlertConfigurationNotificationOutput) ServiceKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.ServiceKey }).(pulumi.StringOutput)
}

// Flag indicating text notifications should be sent. Atlas returns this value if `typeName` is set to `ORG`, `GROUP`, or `USER`.
func (o GetAlertConfigurationNotificationOutput) SmsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) bool { return v.SmsEnabled }).(pulumi.BoolOutput)
}

// Unique identifier of a team.
func (o GetAlertConfigurationNotificationOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.TeamId }).(pulumi.StringOutput)
}

// Label for the team that receives this notification.
func (o GetAlertConfigurationNotificationOutput) TeamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.TeamName }).(pulumi.StringOutput)
}

// Type of alert notification.
// Accepted values are:
func (o GetAlertConfigurationNotificationOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.TypeName }).(pulumi.StringOutput)
}

// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
func (o GetAlertConfigurationNotificationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.Username }).(pulumi.StringOutput)
}

// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o GetAlertConfigurationNotificationOutput) VictorOpsApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.VictorOpsApiKey }).(pulumi.StringOutput)
}

// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o GetAlertConfigurationNotificationOutput) VictorOpsRoutingKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.VictorOpsRoutingKey }).(pulumi.StringOutput)
}

// Authentication secret for the `WEBHOOK` notifications type.
func (o GetAlertConfigurationNotificationOutput) WebhookSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) *string { return v.WebhookSecret }).(pulumi.StringPtrOutput)
}

// Target URL  for the `WEBHOOK` notifications type.
func (o GetAlertConfigurationNotificationOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) *string { return v.WebhookUrl }).(pulumi.StringPtrOutput)
}

type GetAlertConfigurationNotificationArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationNotification)(nil)).Elem()
}

func (o GetAlertConfigurationNotificationArrayOutput) ToGetAlertConfigurationNotificationArrayOutput() GetAlertConfigurationNotificationArrayOutput {
	return o
}

func (o GetAlertConfigurationNotificationArrayOutput) ToGetAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationArrayOutput {
	return o
}

func (o GetAlertConfigurationNotificationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationNotification] {
	return pulumix.Output[[]GetAlertConfigurationNotification]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationNotificationArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationNotification {
		return vs[0].([]GetAlertConfigurationNotification)[vs[1].(int)]
	}).(GetAlertConfigurationNotificationOutput)
}

type GetAlertConfigurationOutput struct {
	Label *string `pulumi:"label"`
	Type  string  `pulumi:"type"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	Value string `pulumi:"value"`
}

// GetAlertConfigurationOutputInput is an input type that accepts GetAlertConfigurationOutputArgs and GetAlertConfigurationOutputOutput values.
// You can construct a concrete instance of `GetAlertConfigurationOutputInput` via:
//
//	GetAlertConfigurationOutputArgs{...}
type GetAlertConfigurationOutputInput interface {
	pulumi.Input

	ToGetAlertConfigurationOutputOutput() GetAlertConfigurationOutputOutput
	ToGetAlertConfigurationOutputOutputWithContext(context.Context) GetAlertConfigurationOutputOutput
}

type GetAlertConfigurationOutputArgs struct {
	Label pulumi.StringPtrInput `pulumi:"label"`
	Type  pulumi.StringInput    `pulumi:"type"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAlertConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationOutput)(nil)).Elem()
}

func (i GetAlertConfigurationOutputArgs) ToGetAlertConfigurationOutputOutput() GetAlertConfigurationOutputOutput {
	return i.ToGetAlertConfigurationOutputOutputWithContext(context.Background())
}

func (i GetAlertConfigurationOutputArgs) ToGetAlertConfigurationOutputOutputWithContext(ctx context.Context) GetAlertConfigurationOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationOutputOutput)
}

func (i GetAlertConfigurationOutputArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationOutput] {
	return pulumix.Output[GetAlertConfigurationOutput]{
		OutputState: i.ToGetAlertConfigurationOutputOutputWithContext(ctx).OutputState,
	}
}

// GetAlertConfigurationOutputArrayInput is an input type that accepts GetAlertConfigurationOutputArray and GetAlertConfigurationOutputArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationOutputArrayInput` via:
//
//	GetAlertConfigurationOutputArray{ GetAlertConfigurationOutputArgs{...} }
type GetAlertConfigurationOutputArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationOutputArrayOutput() GetAlertConfigurationOutputArrayOutput
	ToGetAlertConfigurationOutputArrayOutputWithContext(context.Context) GetAlertConfigurationOutputArrayOutput
}

type GetAlertConfigurationOutputArray []GetAlertConfigurationOutputInput

func (GetAlertConfigurationOutputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationOutput)(nil)).Elem()
}

func (i GetAlertConfigurationOutputArray) ToGetAlertConfigurationOutputArrayOutput() GetAlertConfigurationOutputArrayOutput {
	return i.ToGetAlertConfigurationOutputArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationOutputArray) ToGetAlertConfigurationOutputArrayOutputWithContext(ctx context.Context) GetAlertConfigurationOutputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationOutputArrayOutput)
}

func (i GetAlertConfigurationOutputArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationOutput] {
	return pulumix.Output[[]GetAlertConfigurationOutput]{
		OutputState: i.ToGetAlertConfigurationOutputArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertConfigurationOutputOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationOutput)(nil)).Elem()
}

func (o GetAlertConfigurationOutputOutput) ToGetAlertConfigurationOutputOutput() GetAlertConfigurationOutputOutput {
	return o
}

func (o GetAlertConfigurationOutputOutput) ToGetAlertConfigurationOutputOutputWithContext(ctx context.Context) GetAlertConfigurationOutputOutput {
	return o
}

func (o GetAlertConfigurationOutputOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationOutput] {
	return pulumix.Output[GetAlertConfigurationOutput]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationOutputOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationOutput) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o GetAlertConfigurationOutputOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationOutput) string { return v.Type }).(pulumi.StringOutput)
}

// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
func (o GetAlertConfigurationOutputOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationOutput) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertConfigurationOutputArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationOutputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationOutput)(nil)).Elem()
}

func (o GetAlertConfigurationOutputArrayOutput) ToGetAlertConfigurationOutputArrayOutput() GetAlertConfigurationOutputArrayOutput {
	return o
}

func (o GetAlertConfigurationOutputArrayOutput) ToGetAlertConfigurationOutputArrayOutputWithContext(ctx context.Context) GetAlertConfigurationOutputArrayOutput {
	return o
}

func (o GetAlertConfigurationOutputArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationOutput] {
	return pulumix.Output[[]GetAlertConfigurationOutput]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationOutputArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationOutputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationOutput {
		return vs[0].([]GetAlertConfigurationOutput)[vs[1].(int)]
	}).(GetAlertConfigurationOutputOutput)
}

type GetAlertConfigurationThresholdConfig struct {
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	Operator string `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold float64 `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units string `pulumi:"units"`
}

// GetAlertConfigurationThresholdConfigInput is an input type that accepts GetAlertConfigurationThresholdConfigArgs and GetAlertConfigurationThresholdConfigOutput values.
// You can construct a concrete instance of `GetAlertConfigurationThresholdConfigInput` via:
//
//	GetAlertConfigurationThresholdConfigArgs{...}
type GetAlertConfigurationThresholdConfigInput interface {
	pulumi.Input

	ToGetAlertConfigurationThresholdConfigOutput() GetAlertConfigurationThresholdConfigOutput
	ToGetAlertConfigurationThresholdConfigOutputWithContext(context.Context) GetAlertConfigurationThresholdConfigOutput
}

type GetAlertConfigurationThresholdConfigArgs struct {
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	Operator pulumi.StringInput `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
	Units pulumi.StringInput `pulumi:"units"`
}

func (GetAlertConfigurationThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationThresholdConfigArgs) ToGetAlertConfigurationThresholdConfigOutput() GetAlertConfigurationThresholdConfigOutput {
	return i.ToGetAlertConfigurationThresholdConfigOutputWithContext(context.Background())
}

func (i GetAlertConfigurationThresholdConfigArgs) ToGetAlertConfigurationThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationThresholdConfigOutput)
}

func (i GetAlertConfigurationThresholdConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationThresholdConfig] {
	return pulumix.Output[GetAlertConfigurationThresholdConfig]{
		OutputState: i.ToGetAlertConfigurationThresholdConfigOutputWithContext(ctx).OutputState,
	}
}

// GetAlertConfigurationThresholdConfigArrayInput is an input type that accepts GetAlertConfigurationThresholdConfigArray and GetAlertConfigurationThresholdConfigArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationThresholdConfigArrayInput` via:
//
//	GetAlertConfigurationThresholdConfigArray{ GetAlertConfigurationThresholdConfigArgs{...} }
type GetAlertConfigurationThresholdConfigArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationThresholdConfigArrayOutput() GetAlertConfigurationThresholdConfigArrayOutput
	ToGetAlertConfigurationThresholdConfigArrayOutputWithContext(context.Context) GetAlertConfigurationThresholdConfigArrayOutput
}

type GetAlertConfigurationThresholdConfigArray []GetAlertConfigurationThresholdConfigInput

func (GetAlertConfigurationThresholdConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationThresholdConfigArray) ToGetAlertConfigurationThresholdConfigArrayOutput() GetAlertConfigurationThresholdConfigArrayOutput {
	return i.ToGetAlertConfigurationThresholdConfigArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationThresholdConfigArray) ToGetAlertConfigurationThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationThresholdConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationThresholdConfigArrayOutput)
}

func (i GetAlertConfigurationThresholdConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationThresholdConfig] {
	return pulumix.Output[[]GetAlertConfigurationThresholdConfig]{
		OutputState: i.ToGetAlertConfigurationThresholdConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertConfigurationThresholdConfigOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationThresholdConfigOutput) ToGetAlertConfigurationThresholdConfigOutput() GetAlertConfigurationThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationThresholdConfigOutput) ToGetAlertConfigurationThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationThresholdConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationThresholdConfig] {
	return pulumix.Output[GetAlertConfigurationThresholdConfig]{
		OutputState: o.OutputState,
	}
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
func (o GetAlertConfigurationThresholdConfigOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationThresholdConfig) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o GetAlertConfigurationThresholdConfigOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetAlertConfigurationThresholdConfig) float64 { return v.Threshold }).(pulumi.Float64Output)
}

// The units for the threshold value. Depends on the type of metric.
// Refer to the [MongoDB API Alert Configuration documentation](https://www.mongodb.com/docs/atlas/reference/api/alert-configurations-get-config/#request-body-parameters) for a list of accepted values.
func (o GetAlertConfigurationThresholdConfigOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationThresholdConfig) string { return v.Units }).(pulumi.StringOutput)
}

type GetAlertConfigurationThresholdConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationThresholdConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationThresholdConfigArrayOutput) ToGetAlertConfigurationThresholdConfigArrayOutput() GetAlertConfigurationThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationThresholdConfigArrayOutput) ToGetAlertConfigurationThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationThresholdConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationThresholdConfig] {
	return pulumix.Output[[]GetAlertConfigurationThresholdConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationThresholdConfigArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationThresholdConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationThresholdConfig {
		return vs[0].([]GetAlertConfigurationThresholdConfig)[vs[1].(int)]
	}).(GetAlertConfigurationThresholdConfigOutput)
}

type GetAlertConfigurationsListOption struct {
	IncludeCount *bool `pulumi:"includeCount"`
	ItemsPerPage *int  `pulumi:"itemsPerPage"`
	PageNum      *int  `pulumi:"pageNum"`
}

// GetAlertConfigurationsListOptionInput is an input type that accepts GetAlertConfigurationsListOptionArgs and GetAlertConfigurationsListOptionOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsListOptionInput` via:
//
//	GetAlertConfigurationsListOptionArgs{...}
type GetAlertConfigurationsListOptionInput interface {
	pulumi.Input

	ToGetAlertConfigurationsListOptionOutput() GetAlertConfigurationsListOptionOutput
	ToGetAlertConfigurationsListOptionOutputWithContext(context.Context) GetAlertConfigurationsListOptionOutput
}

type GetAlertConfigurationsListOptionArgs struct {
	IncludeCount pulumi.BoolPtrInput `pulumi:"includeCount"`
	ItemsPerPage pulumi.IntPtrInput  `pulumi:"itemsPerPage"`
	PageNum      pulumi.IntPtrInput  `pulumi:"pageNum"`
}

func (GetAlertConfigurationsListOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsListOption)(nil)).Elem()
}

func (i GetAlertConfigurationsListOptionArgs) ToGetAlertConfigurationsListOptionOutput() GetAlertConfigurationsListOptionOutput {
	return i.ToGetAlertConfigurationsListOptionOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsListOptionArgs) ToGetAlertConfigurationsListOptionOutputWithContext(ctx context.Context) GetAlertConfigurationsListOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsListOptionOutput)
}

func (i GetAlertConfigurationsListOptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationsListOption] {
	return pulumix.Output[GetAlertConfigurationsListOption]{
		OutputState: i.ToGetAlertConfigurationsListOptionOutputWithContext(ctx).OutputState,
	}
}

// GetAlertConfigurationsListOptionArrayInput is an input type that accepts GetAlertConfigurationsListOptionArray and GetAlertConfigurationsListOptionArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsListOptionArrayInput` via:
//
//	GetAlertConfigurationsListOptionArray{ GetAlertConfigurationsListOptionArgs{...} }
type GetAlertConfigurationsListOptionArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationsListOptionArrayOutput() GetAlertConfigurationsListOptionArrayOutput
	ToGetAlertConfigurationsListOptionArrayOutputWithContext(context.Context) GetAlertConfigurationsListOptionArrayOutput
}

type GetAlertConfigurationsListOptionArray []GetAlertConfigurationsListOptionInput

func (GetAlertConfigurationsListOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsListOption)(nil)).Elem()
}

func (i GetAlertConfigurationsListOptionArray) ToGetAlertConfigurationsListOptionArrayOutput() GetAlertConfigurationsListOptionArrayOutput {
	return i.ToGetAlertConfigurationsListOptionArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsListOptionArray) ToGetAlertConfigurationsListOptionArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsListOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsListOptionArrayOutput)
}

func (i GetAlertConfigurationsListOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationsListOption] {
	return pulumix.Output[[]GetAlertConfigurationsListOption]{
		OutputState: i.ToGetAlertConfigurationsListOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertConfigurationsListOptionOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsListOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsListOption)(nil)).Elem()
}

func (o GetAlertConfigurationsListOptionOutput) ToGetAlertConfigurationsListOptionOutput() GetAlertConfigurationsListOptionOutput {
	return o
}

func (o GetAlertConfigurationsListOptionOutput) ToGetAlertConfigurationsListOptionOutputWithContext(ctx context.Context) GetAlertConfigurationsListOptionOutput {
	return o
}

func (o GetAlertConfigurationsListOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationsListOption] {
	return pulumix.Output[GetAlertConfigurationsListOption]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationsListOptionOutput) IncludeCount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationsListOption) *bool { return v.IncludeCount }).(pulumi.BoolPtrOutput)
}

func (o GetAlertConfigurationsListOptionOutput) ItemsPerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationsListOption) *int { return v.ItemsPerPage }).(pulumi.IntPtrOutput)
}

func (o GetAlertConfigurationsListOptionOutput) PageNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationsListOption) *int { return v.PageNum }).(pulumi.IntPtrOutput)
}

type GetAlertConfigurationsListOptionArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsListOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsListOption)(nil)).Elem()
}

func (o GetAlertConfigurationsListOptionArrayOutput) ToGetAlertConfigurationsListOptionArrayOutput() GetAlertConfigurationsListOptionArrayOutput {
	return o
}

func (o GetAlertConfigurationsListOptionArrayOutput) ToGetAlertConfigurationsListOptionArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsListOptionArrayOutput {
	return o
}

func (o GetAlertConfigurationsListOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationsListOption] {
	return pulumix.Output[[]GetAlertConfigurationsListOption]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationsListOptionArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationsListOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationsListOption {
		return vs[0].([]GetAlertConfigurationsListOption)[vs[1].(int)]
	}).(GetAlertConfigurationsListOptionOutput)
}

type GetAlertConfigurationsResult struct {
	// The ID of the alert configuration
	AlertConfigurationId string `pulumi:"alertConfigurationId"`
	// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was created.
	Created string `pulumi:"created"`
	// If set to true, the alert configuration is enabled. If enabled is not exported it is set to false.
	Enabled bool `pulumi:"enabled"`
	// The type of event that will trigger an alert.
	EventType string `pulumi:"eventType"`
	// Rules to apply when matching an object against this alert configuration
	Matchers        []GetAlertConfigurationsResultMatcher `pulumi:"matchers"`
	MetricThreshold map[string]string                     `pulumi:"metricThreshold"`
	// The threshold that causes an alert to be triggered. Required if `eventTypeName` : `OUTSIDE_METRIC_THRESHOLD` or `OUTSIDE_SERVERLESS_METRIC_THRESHOLD`
	MetricThresholdConfigs []GetAlertConfigurationsResultMetricThresholdConfig `pulumi:"metricThresholdConfigs"`
	Notifications          []GetAlertConfigurationsResultNotification          `pulumi:"notifications"`
	// Requested output string format for the alert configuration
	Outputs []GetAlertConfigurationsResultOutputType `pulumi:"outputs"`
	// The unique ID for the project to get the alert configurations.
	ProjectId string            `pulumi:"projectId"`
	Threshold map[string]string `pulumi:"threshold"`
	// Threshold that triggers an alert. Required if `eventTypeName` is any value other than `OUTSIDE_METRIC_THRESHOLD` or `OUTSIDE_SERVERLESS_METRIC_THRESHOLD`.
	ThresholdConfigs []GetAlertConfigurationsResultThresholdConfig `pulumi:"thresholdConfigs"`
	// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was last updated.
	Updated string `pulumi:"updated"`
}

// GetAlertConfigurationsResultInput is an input type that accepts GetAlertConfigurationsResultArgs and GetAlertConfigurationsResultOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultInput` via:
//
//	GetAlertConfigurationsResultArgs{...}
type GetAlertConfigurationsResultInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultOutput() GetAlertConfigurationsResultOutput
	ToGetAlertConfigurationsResultOutputWithContext(context.Context) GetAlertConfigurationsResultOutput
}

type GetAlertConfigurationsResultArgs struct {
	// The ID of the alert configuration
	AlertConfigurationId pulumi.StringInput `pulumi:"alertConfigurationId"`
	// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was created.
	Created pulumi.StringInput `pulumi:"created"`
	// If set to true, the alert configuration is enabled. If enabled is not exported it is set to false.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The type of event that will trigger an alert.
	EventType pulumi.StringInput `pulumi:"eventType"`
	// Rules to apply when matching an object against this alert configuration
	Matchers        GetAlertConfigurationsResultMatcherArrayInput `pulumi:"matchers"`
	MetricThreshold pulumi.StringMapInput                         `pulumi:"metricThreshold"`
	// The threshold that causes an alert to be triggered. Required if `eventTypeName` : `OUTSIDE_METRIC_THRESHOLD` or `OUTSIDE_SERVERLESS_METRIC_THRESHOLD`
	MetricThresholdConfigs GetAlertConfigurationsResultMetricThresholdConfigArrayInput `pulumi:"metricThresholdConfigs"`
	Notifications          GetAlertConfigurationsResultNotificationArrayInput          `pulumi:"notifications"`
	// Requested output string format for the alert configuration
	Outputs GetAlertConfigurationsResultOutputTypeArrayInput `pulumi:"outputs"`
	// The unique ID for the project to get the alert configurations.
	ProjectId pulumi.StringInput    `pulumi:"projectId"`
	Threshold pulumi.StringMapInput `pulumi:"threshold"`
	// Threshold that triggers an alert. Required if `eventTypeName` is any value other than `OUTSIDE_METRIC_THRESHOLD` or `OUTSIDE_SERVERLESS_METRIC_THRESHOLD`.
	ThresholdConfigs GetAlertConfigurationsResultThresholdConfigArrayInput `pulumi:"thresholdConfigs"`
	// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was last updated.
	Updated pulumi.StringInput `pulumi:"updated"`
}

func (GetAlertConfigurationsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResult)(nil)).Elem()
}

func (i GetAlertConfigurationsResultArgs) ToGetAlertConfigurationsResultOutput() GetAlertConfigurationsResultOutput {
	return i.ToGetAlertConfigurationsResultOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultArgs) ToGetAlertConfigurationsResultOutputWithContext(ctx context.Context) GetAlertConfigurationsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultOutput)
}

func (i GetAlertConfigurationsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationsResult] {
	return pulumix.Output[GetAlertConfigurationsResult]{
		OutputState: i.ToGetAlertConfigurationsResultOutputWithContext(ctx).OutputState,
	}
}

// GetAlertConfigurationsResultArrayInput is an input type that accepts GetAlertConfigurationsResultArray and GetAlertConfigurationsResultArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultArrayInput` via:
//
//	GetAlertConfigurationsResultArray{ GetAlertConfigurationsResultArgs{...} }
type GetAlertConfigurationsResultArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultArrayOutput() GetAlertConfigurationsResultArrayOutput
	ToGetAlertConfigurationsResultArrayOutputWithContext(context.Context) GetAlertConfigurationsResultArrayOutput
}

type GetAlertConfigurationsResultArray []GetAlertConfigurationsResultInput

func (GetAlertConfigurationsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResult)(nil)).Elem()
}

func (i GetAlertConfigurationsResultArray) ToGetAlertConfigurationsResultArrayOutput() GetAlertConfigurationsResultArrayOutput {
	return i.ToGetAlertConfigurationsResultArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultArray) ToGetAlertConfigurationsResultArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultArrayOutput)
}

func (i GetAlertConfigurationsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationsResult] {
	return pulumix.Output[[]GetAlertConfigurationsResult]{
		OutputState: i.ToGetAlertConfigurationsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertConfigurationsResultOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResult)(nil)).Elem()
}

func (o GetAlertConfigurationsResultOutput) ToGetAlertConfigurationsResultOutput() GetAlertConfigurationsResultOutput {
	return o
}

func (o GetAlertConfigurationsResultOutput) ToGetAlertConfigurationsResultOutputWithContext(ctx context.Context) GetAlertConfigurationsResultOutput {
	return o
}

func (o GetAlertConfigurationsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationsResult] {
	return pulumix.Output[GetAlertConfigurationsResult]{
		OutputState: o.OutputState,
	}
}

// The ID of the alert configuration
func (o GetAlertConfigurationsResultOutput) AlertConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) string { return v.AlertConfigurationId }).(pulumi.StringOutput)
}

// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was created.
func (o GetAlertConfigurationsResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) string { return v.Created }).(pulumi.StringOutput)
}

// If set to true, the alert configuration is enabled. If enabled is not exported it is set to false.
func (o GetAlertConfigurationsResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The type of event that will trigger an alert.
func (o GetAlertConfigurationsResultOutput) EventType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) string { return v.EventType }).(pulumi.StringOutput)
}

// Rules to apply when matching an object against this alert configuration
func (o GetAlertConfigurationsResultOutput) Matchers() GetAlertConfigurationsResultMatcherArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) []GetAlertConfigurationsResultMatcher { return v.Matchers }).(GetAlertConfigurationsResultMatcherArrayOutput)
}

func (o GetAlertConfigurationsResultOutput) MetricThreshold() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) map[string]string { return v.MetricThreshold }).(pulumi.StringMapOutput)
}

// The threshold that causes an alert to be triggered. Required if `eventTypeName` : `OUTSIDE_METRIC_THRESHOLD` or `OUTSIDE_SERVERLESS_METRIC_THRESHOLD`
func (o GetAlertConfigurationsResultOutput) MetricThresholdConfigs() GetAlertConfigurationsResultMetricThresholdConfigArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) []GetAlertConfigurationsResultMetricThresholdConfig {
		return v.MetricThresholdConfigs
	}).(GetAlertConfigurationsResultMetricThresholdConfigArrayOutput)
}

func (o GetAlertConfigurationsResultOutput) Notifications() GetAlertConfigurationsResultNotificationArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) []GetAlertConfigurationsResultNotification {
		return v.Notifications
	}).(GetAlertConfigurationsResultNotificationArrayOutput)
}

// Requested output string format for the alert configuration
func (o GetAlertConfigurationsResultOutput) Outputs() GetAlertConfigurationsResultOutputTypeArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) []GetAlertConfigurationsResultOutputType { return v.Outputs }).(GetAlertConfigurationsResultOutputTypeArrayOutput)
}

// The unique ID for the project to get the alert configurations.
func (o GetAlertConfigurationsResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultOutput) Threshold() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) map[string]string { return v.Threshold }).(pulumi.StringMapOutput)
}

// Threshold that triggers an alert. Required if `eventTypeName` is any value other than `OUTSIDE_METRIC_THRESHOLD` or `OUTSIDE_SERVERLESS_METRIC_THRESHOLD`.
func (o GetAlertConfigurationsResultOutput) ThresholdConfigs() GetAlertConfigurationsResultThresholdConfigArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) []GetAlertConfigurationsResultThresholdConfig {
		return v.ThresholdConfigs
	}).(GetAlertConfigurationsResultThresholdConfigArrayOutput)
}

// Timestamp in ISO 8601 date and time format in UTC when this alert configuration was last updated.
func (o GetAlertConfigurationsResultOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResult) string { return v.Updated }).(pulumi.StringOutput)
}

type GetAlertConfigurationsResultArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResult)(nil)).Elem()
}

func (o GetAlertConfigurationsResultArrayOutput) ToGetAlertConfigurationsResultArrayOutput() GetAlertConfigurationsResultArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultArrayOutput) ToGetAlertConfigurationsResultArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationsResult] {
	return pulumix.Output[[]GetAlertConfigurationsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationsResultArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationsResult {
		return vs[0].([]GetAlertConfigurationsResult)[vs[1].(int)]
	}).(GetAlertConfigurationsResultOutput)
}

type GetAlertConfigurationsResultMatcher struct {
	FieldName string `pulumi:"fieldName"`
	Operator  string `pulumi:"operator"`
	Value     string `pulumi:"value"`
}

// GetAlertConfigurationsResultMatcherInput is an input type that accepts GetAlertConfigurationsResultMatcherArgs and GetAlertConfigurationsResultMatcherOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultMatcherInput` via:
//
//	GetAlertConfigurationsResultMatcherArgs{...}
type GetAlertConfigurationsResultMatcherInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultMatcherOutput() GetAlertConfigurationsResultMatcherOutput
	ToGetAlertConfigurationsResultMatcherOutputWithContext(context.Context) GetAlertConfigurationsResultMatcherOutput
}

type GetAlertConfigurationsResultMatcherArgs struct {
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	Operator  pulumi.StringInput `pulumi:"operator"`
	Value     pulumi.StringInput `pulumi:"value"`
}

func (GetAlertConfigurationsResultMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultMatcher)(nil)).Elem()
}

func (i GetAlertConfigurationsResultMatcherArgs) ToGetAlertConfigurationsResultMatcherOutput() GetAlertConfigurationsResultMatcherOutput {
	return i.ToGetAlertConfigurationsResultMatcherOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultMatcherArgs) ToGetAlertConfigurationsResultMatcherOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultMatcherOutput)
}

func (i GetAlertConfigurationsResultMatcherArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationsResultMatcher] {
	return pulumix.Output[GetAlertConfigurationsResultMatcher]{
		OutputState: i.ToGetAlertConfigurationsResultMatcherOutputWithContext(ctx).OutputState,
	}
}

// GetAlertConfigurationsResultMatcherArrayInput is an input type that accepts GetAlertConfigurationsResultMatcherArray and GetAlertConfigurationsResultMatcherArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultMatcherArrayInput` via:
//
//	GetAlertConfigurationsResultMatcherArray{ GetAlertConfigurationsResultMatcherArgs{...} }
type GetAlertConfigurationsResultMatcherArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultMatcherArrayOutput() GetAlertConfigurationsResultMatcherArrayOutput
	ToGetAlertConfigurationsResultMatcherArrayOutputWithContext(context.Context) GetAlertConfigurationsResultMatcherArrayOutput
}

type GetAlertConfigurationsResultMatcherArray []GetAlertConfigurationsResultMatcherInput

func (GetAlertConfigurationsResultMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultMatcher)(nil)).Elem()
}

func (i GetAlertConfigurationsResultMatcherArray) ToGetAlertConfigurationsResultMatcherArrayOutput() GetAlertConfigurationsResultMatcherArrayOutput {
	return i.ToGetAlertConfigurationsResultMatcherArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultMatcherArray) ToGetAlertConfigurationsResultMatcherArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultMatcherArrayOutput)
}

func (i GetAlertConfigurationsResultMatcherArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationsResultMatcher] {
	return pulumix.Output[[]GetAlertConfigurationsResultMatcher]{
		OutputState: i.ToGetAlertConfigurationsResultMatcherArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertConfigurationsResultMatcherOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultMatcher)(nil)).Elem()
}

func (o GetAlertConfigurationsResultMatcherOutput) ToGetAlertConfigurationsResultMatcherOutput() GetAlertConfigurationsResultMatcherOutput {
	return o
}

func (o GetAlertConfigurationsResultMatcherOutput) ToGetAlertConfigurationsResultMatcherOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMatcherOutput {
	return o
}

func (o GetAlertConfigurationsResultMatcherOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationsResultMatcher] {
	return pulumix.Output[GetAlertConfigurationsResultMatcher]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationsResultMatcherOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultMatcher) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultMatcherOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultMatcher) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultMatcherOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultMatcher) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertConfigurationsResultMatcherArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultMatcher)(nil)).Elem()
}

func (o GetAlertConfigurationsResultMatcherArrayOutput) ToGetAlertConfigurationsResultMatcherArrayOutput() GetAlertConfigurationsResultMatcherArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultMatcherArrayOutput) ToGetAlertConfigurationsResultMatcherArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMatcherArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultMatcherArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationsResultMatcher] {
	return pulumix.Output[[]GetAlertConfigurationsResultMatcher]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationsResultMatcherArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationsResultMatcherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationsResultMatcher {
		return vs[0].([]GetAlertConfigurationsResultMatcher)[vs[1].(int)]
	}).(GetAlertConfigurationsResultMatcherOutput)
}

type GetAlertConfigurationsResultMetricThresholdConfig struct {
	MetricName string  `pulumi:"metricName"`
	Mode       string  `pulumi:"mode"`
	Operator   string  `pulumi:"operator"`
	Threshold  float64 `pulumi:"threshold"`
	Units      string  `pulumi:"units"`
}

// GetAlertConfigurationsResultMetricThresholdConfigInput is an input type that accepts GetAlertConfigurationsResultMetricThresholdConfigArgs and GetAlertConfigurationsResultMetricThresholdConfigOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultMetricThresholdConfigInput` via:
//
//	GetAlertConfigurationsResultMetricThresholdConfigArgs{...}
type GetAlertConfigurationsResultMetricThresholdConfigInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultMetricThresholdConfigOutput() GetAlertConfigurationsResultMetricThresholdConfigOutput
	ToGetAlertConfigurationsResultMetricThresholdConfigOutputWithContext(context.Context) GetAlertConfigurationsResultMetricThresholdConfigOutput
}

type GetAlertConfigurationsResultMetricThresholdConfigArgs struct {
	MetricName pulumi.StringInput  `pulumi:"metricName"`
	Mode       pulumi.StringInput  `pulumi:"mode"`
	Operator   pulumi.StringInput  `pulumi:"operator"`
	Threshold  pulumi.Float64Input `pulumi:"threshold"`
	Units      pulumi.StringInput  `pulumi:"units"`
}

func (GetAlertConfigurationsResultMetricThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultMetricThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationsResultMetricThresholdConfigArgs) ToGetAlertConfigurationsResultMetricThresholdConfigOutput() GetAlertConfigurationsResultMetricThresholdConfigOutput {
	return i.ToGetAlertConfigurationsResultMetricThresholdConfigOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultMetricThresholdConfigArgs) ToGetAlertConfigurationsResultMetricThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMetricThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultMetricThresholdConfigOutput)
}

func (i GetAlertConfigurationsResultMetricThresholdConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationsResultMetricThresholdConfig] {
	return pulumix.Output[GetAlertConfigurationsResultMetricThresholdConfig]{
		OutputState: i.ToGetAlertConfigurationsResultMetricThresholdConfigOutputWithContext(ctx).OutputState,
	}
}

// GetAlertConfigurationsResultMetricThresholdConfigArrayInput is an input type that accepts GetAlertConfigurationsResultMetricThresholdConfigArray and GetAlertConfigurationsResultMetricThresholdConfigArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultMetricThresholdConfigArrayInput` via:
//
//	GetAlertConfigurationsResultMetricThresholdConfigArray{ GetAlertConfigurationsResultMetricThresholdConfigArgs{...} }
type GetAlertConfigurationsResultMetricThresholdConfigArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutput() GetAlertConfigurationsResultMetricThresholdConfigArrayOutput
	ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutputWithContext(context.Context) GetAlertConfigurationsResultMetricThresholdConfigArrayOutput
}

type GetAlertConfigurationsResultMetricThresholdConfigArray []GetAlertConfigurationsResultMetricThresholdConfigInput

func (GetAlertConfigurationsResultMetricThresholdConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultMetricThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationsResultMetricThresholdConfigArray) ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutput() GetAlertConfigurationsResultMetricThresholdConfigArrayOutput {
	return i.ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultMetricThresholdConfigArray) ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMetricThresholdConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultMetricThresholdConfigArrayOutput)
}

func (i GetAlertConfigurationsResultMetricThresholdConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationsResultMetricThresholdConfig] {
	return pulumix.Output[[]GetAlertConfigurationsResultMetricThresholdConfig]{
		OutputState: i.ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertConfigurationsResultMetricThresholdConfigOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultMetricThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultMetricThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) ToGetAlertConfigurationsResultMetricThresholdConfigOutput() GetAlertConfigurationsResultMetricThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) ToGetAlertConfigurationsResultMetricThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMetricThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationsResultMetricThresholdConfig] {
	return pulumix.Output[GetAlertConfigurationsResultMetricThresholdConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultMetricThresholdConfig) string { return v.MetricName }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultMetricThresholdConfig) string { return v.Mode }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultMetricThresholdConfig) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetAlertConfigurationsResultMetricThresholdConfig) float64 { return v.Threshold }).(pulumi.Float64Output)
}

func (o GetAlertConfigurationsResultMetricThresholdConfigOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultMetricThresholdConfig) string { return v.Units }).(pulumi.StringOutput)
}

type GetAlertConfigurationsResultMetricThresholdConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultMetricThresholdConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultMetricThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationsResultMetricThresholdConfigArrayOutput) ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutput() GetAlertConfigurationsResultMetricThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultMetricThresholdConfigArrayOutput) ToGetAlertConfigurationsResultMetricThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultMetricThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultMetricThresholdConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationsResultMetricThresholdConfig] {
	return pulumix.Output[[]GetAlertConfigurationsResultMetricThresholdConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationsResultMetricThresholdConfigArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationsResultMetricThresholdConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationsResultMetricThresholdConfig {
		return vs[0].([]GetAlertConfigurationsResultMetricThresholdConfig)[vs[1].(int)]
	}).(GetAlertConfigurationsResultMetricThresholdConfigOutput)
}

type GetAlertConfigurationsResultNotification struct {
	ApiToken                 string   `pulumi:"apiToken"`
	ChannelName              string   `pulumi:"channelName"`
	DatadogApiKey            string   `pulumi:"datadogApiKey"`
	DatadogRegion            string   `pulumi:"datadogRegion"`
	DelayMin                 int      `pulumi:"delayMin"`
	EmailAddress             string   `pulumi:"emailAddress"`
	EmailEnabled             bool     `pulumi:"emailEnabled"`
	IntervalMin              int      `pulumi:"intervalMin"`
	MicrosoftTeamsWebhookUrl *string  `pulumi:"microsoftTeamsWebhookUrl"`
	MobileNumber             string   `pulumi:"mobileNumber"`
	OpsGenieApiKey           string   `pulumi:"opsGenieApiKey"`
	OpsGenieRegion           string   `pulumi:"opsGenieRegion"`
	Roles                    []string `pulumi:"roles"`
	ServiceKey               string   `pulumi:"serviceKey"`
	SmsEnabled               bool     `pulumi:"smsEnabled"`
	TeamId                   string   `pulumi:"teamId"`
	TeamName                 string   `pulumi:"teamName"`
	TypeName                 string   `pulumi:"typeName"`
	Username                 string   `pulumi:"username"`
	VictorOpsApiKey          string   `pulumi:"victorOpsApiKey"`
	VictorOpsRoutingKey      string   `pulumi:"victorOpsRoutingKey"`
	WebhookSecret            *string  `pulumi:"webhookSecret"`
	WebhookUrl               *string  `pulumi:"webhookUrl"`
}

// GetAlertConfigurationsResultNotificationInput is an input type that accepts GetAlertConfigurationsResultNotificationArgs and GetAlertConfigurationsResultNotificationOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultNotificationInput` via:
//
//	GetAlertConfigurationsResultNotificationArgs{...}
type GetAlertConfigurationsResultNotificationInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultNotificationOutput() GetAlertConfigurationsResultNotificationOutput
	ToGetAlertConfigurationsResultNotificationOutputWithContext(context.Context) GetAlertConfigurationsResultNotificationOutput
}

type GetAlertConfigurationsResultNotificationArgs struct {
	ApiToken                 pulumi.StringInput      `pulumi:"apiToken"`
	ChannelName              pulumi.StringInput      `pulumi:"channelName"`
	DatadogApiKey            pulumi.StringInput      `pulumi:"datadogApiKey"`
	DatadogRegion            pulumi.StringInput      `pulumi:"datadogRegion"`
	DelayMin                 pulumi.IntInput         `pulumi:"delayMin"`
	EmailAddress             pulumi.StringInput      `pulumi:"emailAddress"`
	EmailEnabled             pulumi.BoolInput        `pulumi:"emailEnabled"`
	IntervalMin              pulumi.IntInput         `pulumi:"intervalMin"`
	MicrosoftTeamsWebhookUrl pulumi.StringPtrInput   `pulumi:"microsoftTeamsWebhookUrl"`
	MobileNumber             pulumi.StringInput      `pulumi:"mobileNumber"`
	OpsGenieApiKey           pulumi.StringInput      `pulumi:"opsGenieApiKey"`
	OpsGenieRegion           pulumi.StringInput      `pulumi:"opsGenieRegion"`
	Roles                    pulumi.StringArrayInput `pulumi:"roles"`
	ServiceKey               pulumi.StringInput      `pulumi:"serviceKey"`
	SmsEnabled               pulumi.BoolInput        `pulumi:"smsEnabled"`
	TeamId                   pulumi.StringInput      `pulumi:"teamId"`
	TeamName                 pulumi.StringInput      `pulumi:"teamName"`
	TypeName                 pulumi.StringInput      `pulumi:"typeName"`
	Username                 pulumi.StringInput      `pulumi:"username"`
	VictorOpsApiKey          pulumi.StringInput      `pulumi:"victorOpsApiKey"`
	VictorOpsRoutingKey      pulumi.StringInput      `pulumi:"victorOpsRoutingKey"`
	WebhookSecret            pulumi.StringPtrInput   `pulumi:"webhookSecret"`
	WebhookUrl               pulumi.StringPtrInput   `pulumi:"webhookUrl"`
}

func (GetAlertConfigurationsResultNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultNotification)(nil)).Elem()
}

func (i GetAlertConfigurationsResultNotificationArgs) ToGetAlertConfigurationsResultNotificationOutput() GetAlertConfigurationsResultNotificationOutput {
	return i.ToGetAlertConfigurationsResultNotificationOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultNotificationArgs) ToGetAlertConfigurationsResultNotificationOutputWithContext(ctx context.Context) GetAlertConfigurationsResultNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultNotificationOutput)
}

func (i GetAlertConfigurationsResultNotificationArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationsResultNotification] {
	return pulumix.Output[GetAlertConfigurationsResultNotification]{
		OutputState: i.ToGetAlertConfigurationsResultNotificationOutputWithContext(ctx).OutputState,
	}
}

// GetAlertConfigurationsResultNotificationArrayInput is an input type that accepts GetAlertConfigurationsResultNotificationArray and GetAlertConfigurationsResultNotificationArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultNotificationArrayInput` via:
//
//	GetAlertConfigurationsResultNotificationArray{ GetAlertConfigurationsResultNotificationArgs{...} }
type GetAlertConfigurationsResultNotificationArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultNotificationArrayOutput() GetAlertConfigurationsResultNotificationArrayOutput
	ToGetAlertConfigurationsResultNotificationArrayOutputWithContext(context.Context) GetAlertConfigurationsResultNotificationArrayOutput
}

type GetAlertConfigurationsResultNotificationArray []GetAlertConfigurationsResultNotificationInput

func (GetAlertConfigurationsResultNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultNotification)(nil)).Elem()
}

func (i GetAlertConfigurationsResultNotificationArray) ToGetAlertConfigurationsResultNotificationArrayOutput() GetAlertConfigurationsResultNotificationArrayOutput {
	return i.ToGetAlertConfigurationsResultNotificationArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultNotificationArray) ToGetAlertConfigurationsResultNotificationArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultNotificationArrayOutput)
}

func (i GetAlertConfigurationsResultNotificationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationsResultNotification] {
	return pulumix.Output[[]GetAlertConfigurationsResultNotification]{
		OutputState: i.ToGetAlertConfigurationsResultNotificationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertConfigurationsResultNotificationOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultNotification)(nil)).Elem()
}

func (o GetAlertConfigurationsResultNotificationOutput) ToGetAlertConfigurationsResultNotificationOutput() GetAlertConfigurationsResultNotificationOutput {
	return o
}

func (o GetAlertConfigurationsResultNotificationOutput) ToGetAlertConfigurationsResultNotificationOutputWithContext(ctx context.Context) GetAlertConfigurationsResultNotificationOutput {
	return o
}

func (o GetAlertConfigurationsResultNotificationOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationsResultNotification] {
	return pulumix.Output[GetAlertConfigurationsResultNotification]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationsResultNotificationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.ApiToken }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.ChannelName }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) DatadogApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.DatadogApiKey }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) DatadogRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.DatadogRegion }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) DelayMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) int { return v.DelayMin }).(pulumi.IntOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.EmailAddress }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) EmailEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) bool { return v.EmailEnabled }).(pulumi.BoolOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) IntervalMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) int { return v.IntervalMin }).(pulumi.IntOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) MicrosoftTeamsWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) *string { return v.MicrosoftTeamsWebhookUrl }).(pulumi.StringPtrOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) MobileNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.MobileNumber }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) OpsGenieApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.OpsGenieApiKey }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) OpsGenieRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.OpsGenieRegion }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) ServiceKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.ServiceKey }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) SmsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) bool { return v.SmsEnabled }).(pulumi.BoolOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.TeamId }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) TeamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.TeamName }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.TypeName }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) VictorOpsApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.VictorOpsApiKey }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) VictorOpsRoutingKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) string { return v.VictorOpsRoutingKey }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) WebhookSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) *string { return v.WebhookSecret }).(pulumi.StringPtrOutput)
}

func (o GetAlertConfigurationsResultNotificationOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultNotification) *string { return v.WebhookUrl }).(pulumi.StringPtrOutput)
}

type GetAlertConfigurationsResultNotificationArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultNotification)(nil)).Elem()
}

func (o GetAlertConfigurationsResultNotificationArrayOutput) ToGetAlertConfigurationsResultNotificationArrayOutput() GetAlertConfigurationsResultNotificationArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultNotificationArrayOutput) ToGetAlertConfigurationsResultNotificationArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultNotificationArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultNotificationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationsResultNotification] {
	return pulumix.Output[[]GetAlertConfigurationsResultNotification]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationsResultNotificationArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationsResultNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationsResultNotification {
		return vs[0].([]GetAlertConfigurationsResultNotification)[vs[1].(int)]
	}).(GetAlertConfigurationsResultNotificationOutput)
}

type GetAlertConfigurationsResultOutputType struct {
	Label *string `pulumi:"label"`
	Type  string  `pulumi:"type"`
	Value string  `pulumi:"value"`
}

// GetAlertConfigurationsResultOutputTypeInput is an input type that accepts GetAlertConfigurationsResultOutputTypeArgs and GetAlertConfigurationsResultOutputTypeOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultOutputTypeInput` via:
//
//	GetAlertConfigurationsResultOutputTypeArgs{...}
type GetAlertConfigurationsResultOutputTypeInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultOutputTypeOutput() GetAlertConfigurationsResultOutputTypeOutput
	ToGetAlertConfigurationsResultOutputTypeOutputWithContext(context.Context) GetAlertConfigurationsResultOutputTypeOutput
}

type GetAlertConfigurationsResultOutputTypeArgs struct {
	Label pulumi.StringPtrInput `pulumi:"label"`
	Type  pulumi.StringInput    `pulumi:"type"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (GetAlertConfigurationsResultOutputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultOutputType)(nil)).Elem()
}

func (i GetAlertConfigurationsResultOutputTypeArgs) ToGetAlertConfigurationsResultOutputTypeOutput() GetAlertConfigurationsResultOutputTypeOutput {
	return i.ToGetAlertConfigurationsResultOutputTypeOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultOutputTypeArgs) ToGetAlertConfigurationsResultOutputTypeOutputWithContext(ctx context.Context) GetAlertConfigurationsResultOutputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultOutputTypeOutput)
}

func (i GetAlertConfigurationsResultOutputTypeArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationsResultOutputType] {
	return pulumix.Output[GetAlertConfigurationsResultOutputType]{
		OutputState: i.ToGetAlertConfigurationsResultOutputTypeOutputWithContext(ctx).OutputState,
	}
}

// GetAlertConfigurationsResultOutputTypeArrayInput is an input type that accepts GetAlertConfigurationsResultOutputTypeArray and GetAlertConfigurationsResultOutputTypeArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultOutputTypeArrayInput` via:
//
//	GetAlertConfigurationsResultOutputTypeArray{ GetAlertConfigurationsResultOutputTypeArgs{...} }
type GetAlertConfigurationsResultOutputTypeArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultOutputTypeArrayOutput() GetAlertConfigurationsResultOutputTypeArrayOutput
	ToGetAlertConfigurationsResultOutputTypeArrayOutputWithContext(context.Context) GetAlertConfigurationsResultOutputTypeArrayOutput
}

type GetAlertConfigurationsResultOutputTypeArray []GetAlertConfigurationsResultOutputTypeInput

func (GetAlertConfigurationsResultOutputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultOutputType)(nil)).Elem()
}

func (i GetAlertConfigurationsResultOutputTypeArray) ToGetAlertConfigurationsResultOutputTypeArrayOutput() GetAlertConfigurationsResultOutputTypeArrayOutput {
	return i.ToGetAlertConfigurationsResultOutputTypeArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultOutputTypeArray) ToGetAlertConfigurationsResultOutputTypeArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultOutputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultOutputTypeArrayOutput)
}

func (i GetAlertConfigurationsResultOutputTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationsResultOutputType] {
	return pulumix.Output[[]GetAlertConfigurationsResultOutputType]{
		OutputState: i.ToGetAlertConfigurationsResultOutputTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertConfigurationsResultOutputTypeOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultOutputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultOutputType)(nil)).Elem()
}

func (o GetAlertConfigurationsResultOutputTypeOutput) ToGetAlertConfigurationsResultOutputTypeOutput() GetAlertConfigurationsResultOutputTypeOutput {
	return o
}

func (o GetAlertConfigurationsResultOutputTypeOutput) ToGetAlertConfigurationsResultOutputTypeOutputWithContext(ctx context.Context) GetAlertConfigurationsResultOutputTypeOutput {
	return o
}

func (o GetAlertConfigurationsResultOutputTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationsResultOutputType] {
	return pulumix.Output[GetAlertConfigurationsResultOutputType]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationsResultOutputTypeOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultOutputType) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o GetAlertConfigurationsResultOutputTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultOutputType) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultOutputTypeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultOutputType) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertConfigurationsResultOutputTypeArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultOutputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultOutputType)(nil)).Elem()
}

func (o GetAlertConfigurationsResultOutputTypeArrayOutput) ToGetAlertConfigurationsResultOutputTypeArrayOutput() GetAlertConfigurationsResultOutputTypeArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultOutputTypeArrayOutput) ToGetAlertConfigurationsResultOutputTypeArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultOutputTypeArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultOutputTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationsResultOutputType] {
	return pulumix.Output[[]GetAlertConfigurationsResultOutputType]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationsResultOutputTypeArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationsResultOutputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationsResultOutputType {
		return vs[0].([]GetAlertConfigurationsResultOutputType)[vs[1].(int)]
	}).(GetAlertConfigurationsResultOutputTypeOutput)
}

type GetAlertConfigurationsResultThresholdConfig struct {
	Operator  string  `pulumi:"operator"`
	Threshold float64 `pulumi:"threshold"`
	Units     string  `pulumi:"units"`
}

// GetAlertConfigurationsResultThresholdConfigInput is an input type that accepts GetAlertConfigurationsResultThresholdConfigArgs and GetAlertConfigurationsResultThresholdConfigOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultThresholdConfigInput` via:
//
//	GetAlertConfigurationsResultThresholdConfigArgs{...}
type GetAlertConfigurationsResultThresholdConfigInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultThresholdConfigOutput() GetAlertConfigurationsResultThresholdConfigOutput
	ToGetAlertConfigurationsResultThresholdConfigOutputWithContext(context.Context) GetAlertConfigurationsResultThresholdConfigOutput
}

type GetAlertConfigurationsResultThresholdConfigArgs struct {
	Operator  pulumi.StringInput  `pulumi:"operator"`
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	Units     pulumi.StringInput  `pulumi:"units"`
}

func (GetAlertConfigurationsResultThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationsResultThresholdConfigArgs) ToGetAlertConfigurationsResultThresholdConfigOutput() GetAlertConfigurationsResultThresholdConfigOutput {
	return i.ToGetAlertConfigurationsResultThresholdConfigOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultThresholdConfigArgs) ToGetAlertConfigurationsResultThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationsResultThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultThresholdConfigOutput)
}

func (i GetAlertConfigurationsResultThresholdConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationsResultThresholdConfig] {
	return pulumix.Output[GetAlertConfigurationsResultThresholdConfig]{
		OutputState: i.ToGetAlertConfigurationsResultThresholdConfigOutputWithContext(ctx).OutputState,
	}
}

// GetAlertConfigurationsResultThresholdConfigArrayInput is an input type that accepts GetAlertConfigurationsResultThresholdConfigArray and GetAlertConfigurationsResultThresholdConfigArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationsResultThresholdConfigArrayInput` via:
//
//	GetAlertConfigurationsResultThresholdConfigArray{ GetAlertConfigurationsResultThresholdConfigArgs{...} }
type GetAlertConfigurationsResultThresholdConfigArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationsResultThresholdConfigArrayOutput() GetAlertConfigurationsResultThresholdConfigArrayOutput
	ToGetAlertConfigurationsResultThresholdConfigArrayOutputWithContext(context.Context) GetAlertConfigurationsResultThresholdConfigArrayOutput
}

type GetAlertConfigurationsResultThresholdConfigArray []GetAlertConfigurationsResultThresholdConfigInput

func (GetAlertConfigurationsResultThresholdConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationsResultThresholdConfigArray) ToGetAlertConfigurationsResultThresholdConfigArrayOutput() GetAlertConfigurationsResultThresholdConfigArrayOutput {
	return i.ToGetAlertConfigurationsResultThresholdConfigArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationsResultThresholdConfigArray) ToGetAlertConfigurationsResultThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultThresholdConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationsResultThresholdConfigArrayOutput)
}

func (i GetAlertConfigurationsResultThresholdConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationsResultThresholdConfig] {
	return pulumix.Output[[]GetAlertConfigurationsResultThresholdConfig]{
		OutputState: i.ToGetAlertConfigurationsResultThresholdConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertConfigurationsResultThresholdConfigOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationsResultThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationsResultThresholdConfigOutput) ToGetAlertConfigurationsResultThresholdConfigOutput() GetAlertConfigurationsResultThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationsResultThresholdConfigOutput) ToGetAlertConfigurationsResultThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationsResultThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationsResultThresholdConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertConfigurationsResultThresholdConfig] {
	return pulumix.Output[GetAlertConfigurationsResultThresholdConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationsResultThresholdConfigOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultThresholdConfig) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationsResultThresholdConfigOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetAlertConfigurationsResultThresholdConfig) float64 { return v.Threshold }).(pulumi.Float64Output)
}

func (o GetAlertConfigurationsResultThresholdConfigOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationsResultThresholdConfig) string { return v.Units }).(pulumi.StringOutput)
}

type GetAlertConfigurationsResultThresholdConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationsResultThresholdConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationsResultThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationsResultThresholdConfigArrayOutput) ToGetAlertConfigurationsResultThresholdConfigArrayOutput() GetAlertConfigurationsResultThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultThresholdConfigArrayOutput) ToGetAlertConfigurationsResultThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationsResultThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationsResultThresholdConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertConfigurationsResultThresholdConfig] {
	return pulumix.Output[[]GetAlertConfigurationsResultThresholdConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertConfigurationsResultThresholdConfigArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationsResultThresholdConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationsResultThresholdConfig {
		return vs[0].([]GetAlertConfigurationsResultThresholdConfig)[vs[1].(int)]
	}).(GetAlertConfigurationsResultThresholdConfigOutput)
}

type GetApiKeysResult struct {
	// Unique identifier for the API key you want to update. Use the /orgs/{ORG-ID}/apiKeys endpoint to retrieve all API keys to which the authenticated user has access for the specified organization.
	ApiKeyId string `pulumi:"apiKeyId"`
	// Description of this Organization API key.
	Description string `pulumi:"description"`
	PublicKey   string `pulumi:"publicKey"`
	// Name of the role. This resource returns all the roles the user has in Atlas.
	//
	// The following are valid roles:
	RoleNames []string `pulumi:"roleNames"`
}

// GetApiKeysResultInput is an input type that accepts GetApiKeysResultArgs and GetApiKeysResultOutput values.
// You can construct a concrete instance of `GetApiKeysResultInput` via:
//
//	GetApiKeysResultArgs{...}
type GetApiKeysResultInput interface {
	pulumi.Input

	ToGetApiKeysResultOutput() GetApiKeysResultOutput
	ToGetApiKeysResultOutputWithContext(context.Context) GetApiKeysResultOutput
}

type GetApiKeysResultArgs struct {
	// Unique identifier for the API key you want to update. Use the /orgs/{ORG-ID}/apiKeys endpoint to retrieve all API keys to which the authenticated user has access for the specified organization.
	ApiKeyId pulumi.StringInput `pulumi:"apiKeyId"`
	// Description of this Organization API key.
	Description pulumi.StringInput `pulumi:"description"`
	PublicKey   pulumi.StringInput `pulumi:"publicKey"`
	// Name of the role. This resource returns all the roles the user has in Atlas.
	//
	// The following are valid roles:
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
}

func (GetApiKeysResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiKeysResult)(nil)).Elem()
}

func (i GetApiKeysResultArgs) ToGetApiKeysResultOutput() GetApiKeysResultOutput {
	return i.ToGetApiKeysResultOutputWithContext(context.Background())
}

func (i GetApiKeysResultArgs) ToGetApiKeysResultOutputWithContext(ctx context.Context) GetApiKeysResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiKeysResultOutput)
}

func (i GetApiKeysResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetApiKeysResult] {
	return pulumix.Output[GetApiKeysResult]{
		OutputState: i.ToGetApiKeysResultOutputWithContext(ctx).OutputState,
	}
}

// GetApiKeysResultArrayInput is an input type that accepts GetApiKeysResultArray and GetApiKeysResultArrayOutput values.
// You can construct a concrete instance of `GetApiKeysResultArrayInput` via:
//
//	GetApiKeysResultArray{ GetApiKeysResultArgs{...} }
type GetApiKeysResultArrayInput interface {
	pulumi.Input

	ToGetApiKeysResultArrayOutput() GetApiKeysResultArrayOutput
	ToGetApiKeysResultArrayOutputWithContext(context.Context) GetApiKeysResultArrayOutput
}

type GetApiKeysResultArray []GetApiKeysResultInput

func (GetApiKeysResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiKeysResult)(nil)).Elem()
}

func (i GetApiKeysResultArray) ToGetApiKeysResultArrayOutput() GetApiKeysResultArrayOutput {
	return i.ToGetApiKeysResultArrayOutputWithContext(context.Background())
}

func (i GetApiKeysResultArray) ToGetApiKeysResultArrayOutputWithContext(ctx context.Context) GetApiKeysResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiKeysResultArrayOutput)
}

func (i GetApiKeysResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetApiKeysResult] {
	return pulumix.Output[[]GetApiKeysResult]{
		OutputState: i.ToGetApiKeysResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetApiKeysResultOutput struct{ *pulumi.OutputState }

func (GetApiKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiKeysResult)(nil)).Elem()
}

func (o GetApiKeysResultOutput) ToGetApiKeysResultOutput() GetApiKeysResultOutput {
	return o
}

func (o GetApiKeysResultOutput) ToGetApiKeysResultOutputWithContext(ctx context.Context) GetApiKeysResultOutput {
	return o
}

func (o GetApiKeysResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetApiKeysResult] {
	return pulumix.Output[GetApiKeysResult]{
		OutputState: o.OutputState,
	}
}

// Unique identifier for the API key you want to update. Use the /orgs/{ORG-ID}/apiKeys endpoint to retrieve all API keys to which the authenticated user has access for the specified organization.
func (o GetApiKeysResultOutput) ApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiKeysResult) string { return v.ApiKeyId }).(pulumi.StringOutput)
}

// Description of this Organization API key.
func (o GetApiKeysResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiKeysResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetApiKeysResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiKeysResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

// Name of the role. This resource returns all the roles the user has in Atlas.
//
// The following are valid roles:
func (o GetApiKeysResultOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApiKeysResult) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

type GetApiKeysResultArrayOutput struct{ *pulumi.OutputState }

func (GetApiKeysResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiKeysResult)(nil)).Elem()
}

func (o GetApiKeysResultArrayOutput) ToGetApiKeysResultArrayOutput() GetApiKeysResultArrayOutput {
	return o
}

func (o GetApiKeysResultArrayOutput) ToGetApiKeysResultArrayOutputWithContext(ctx context.Context) GetApiKeysResultArrayOutput {
	return o
}

func (o GetApiKeysResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetApiKeysResult] {
	return pulumix.Output[[]GetApiKeysResult]{
		OutputState: o.OutputState,
	}
}

func (o GetApiKeysResultArrayOutput) Index(i pulumi.IntInput) GetApiKeysResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApiKeysResult {
		return vs[0].([]GetApiKeysResult)[vs[1].(int)]
	}).(GetApiKeysResultOutput)
}

type GetBackupCompliancePolicyOnDemandPolicyItem struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetBackupCompliancePolicyOnDemandPolicyItemInput is an input type that accepts GetBackupCompliancePolicyOnDemandPolicyItemArgs and GetBackupCompliancePolicyOnDemandPolicyItemOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyOnDemandPolicyItemInput` via:
//
//	GetBackupCompliancePolicyOnDemandPolicyItemArgs{...}
type GetBackupCompliancePolicyOnDemandPolicyItemInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyOnDemandPolicyItemOutput() GetBackupCompliancePolicyOnDemandPolicyItemOutput
	ToGetBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(context.Context) GetBackupCompliancePolicyOnDemandPolicyItemOutput
}

type GetBackupCompliancePolicyOnDemandPolicyItemArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetBackupCompliancePolicyOnDemandPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (i GetBackupCompliancePolicyOnDemandPolicyItemArgs) ToGetBackupCompliancePolicyOnDemandPolicyItemOutput() GetBackupCompliancePolicyOnDemandPolicyItemOutput {
	return i.ToGetBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyOnDemandPolicyItemArgs) ToGetBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(ctx context.Context) GetBackupCompliancePolicyOnDemandPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyOnDemandPolicyItemOutput)
}

func (i GetBackupCompliancePolicyOnDemandPolicyItemArgs) ToOutput(ctx context.Context) pulumix.Output[GetBackupCompliancePolicyOnDemandPolicyItem] {
	return pulumix.Output[GetBackupCompliancePolicyOnDemandPolicyItem]{
		OutputState: i.ToGetBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(ctx).OutputState,
	}
}

func (i GetBackupCompliancePolicyOnDemandPolicyItemArgs) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutput() GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return i.ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyOnDemandPolicyItemArgs) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyOnDemandPolicyItemOutput).ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx)
}

// GetBackupCompliancePolicyOnDemandPolicyItemPtrInput is an input type that accepts GetBackupCompliancePolicyOnDemandPolicyItemArgs, GetBackupCompliancePolicyOnDemandPolicyItemPtr and GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyOnDemandPolicyItemPtrInput` via:
//
//	        GetBackupCompliancePolicyOnDemandPolicyItemArgs{...}
//
//	or:
//
//	        nil
type GetBackupCompliancePolicyOnDemandPolicyItemPtrInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutput() GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput
	ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Context) GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput
}

type getBackupCompliancePolicyOnDemandPolicyItemPtrType GetBackupCompliancePolicyOnDemandPolicyItemArgs

func GetBackupCompliancePolicyOnDemandPolicyItemPtr(v *GetBackupCompliancePolicyOnDemandPolicyItemArgs) GetBackupCompliancePolicyOnDemandPolicyItemPtrInput {
	return (*getBackupCompliancePolicyOnDemandPolicyItemPtrType)(v)
}

func (*getBackupCompliancePolicyOnDemandPolicyItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (i *getBackupCompliancePolicyOnDemandPolicyItemPtrType) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutput() GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return i.ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Background())
}

func (i *getBackupCompliancePolicyOnDemandPolicyItemPtrType) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput)
}

func (i *getBackupCompliancePolicyOnDemandPolicyItemPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetBackupCompliancePolicyOnDemandPolicyItem] {
	return pulumix.Output[*GetBackupCompliancePolicyOnDemandPolicyItem]{
		OutputState: i.ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx).OutputState,
	}
}

type GetBackupCompliancePolicyOnDemandPolicyItemOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyOnDemandPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) ToGetBackupCompliancePolicyOnDemandPolicyItemOutput() GetBackupCompliancePolicyOnDemandPolicyItemOutput {
	return o
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) ToGetBackupCompliancePolicyOnDemandPolicyItemOutputWithContext(ctx context.Context) GetBackupCompliancePolicyOnDemandPolicyItemOutput {
	return o
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutput() GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o.ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(context.Background())
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetBackupCompliancePolicyOnDemandPolicyItem) *GetBackupCompliancePolicyOnDemandPolicyItem {
		return &v
	}).(GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput)
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetBackupCompliancePolicyOnDemandPolicyItem] {
	return pulumix.Output[GetBackupCompliancePolicyOnDemandPolicyItem]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyOnDemandPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyOnDemandPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyOnDemandPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyOnDemandPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyOnDemandPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyOnDemandPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBackupCompliancePolicyOnDemandPolicyItem)(nil)).Elem()
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutput() GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) ToGetBackupCompliancePolicyOnDemandPolicyItemPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput {
	return o
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetBackupCompliancePolicyOnDemandPolicyItem] {
	return pulumix.Output[*GetBackupCompliancePolicyOnDemandPolicyItem]{
		OutputState: o.OutputState,
	}
}

func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) Elem() GetBackupCompliancePolicyOnDemandPolicyItemOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyOnDemandPolicyItem) GetBackupCompliancePolicyOnDemandPolicyItem {
		if v != nil {
			return *v
		}
		var ret GetBackupCompliancePolicyOnDemandPolicyItem
		return ret
	}).(GetBackupCompliancePolicyOnDemandPolicyItemOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyOnDemandPolicyItem) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyOnDemandPolicyItem) *string {
		if v == nil {
			return nil
		}
		return &v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyOnDemandPolicyItem) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyOnDemandPolicyItem) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyOnDemandPolicyItem) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type GetBackupCompliancePolicyPolicyItemDaily struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetBackupCompliancePolicyPolicyItemDailyInput is an input type that accepts GetBackupCompliancePolicyPolicyItemDailyArgs and GetBackupCompliancePolicyPolicyItemDailyOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemDailyInput` via:
//
//	GetBackupCompliancePolicyPolicyItemDailyArgs{...}
type GetBackupCompliancePolicyPolicyItemDailyInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemDailyOutput() GetBackupCompliancePolicyPolicyItemDailyOutput
	ToGetBackupCompliancePolicyPolicyItemDailyOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemDailyOutput
}

type GetBackupCompliancePolicyPolicyItemDailyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetBackupCompliancePolicyPolicyItemDailyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (i GetBackupCompliancePolicyPolicyItemDailyArgs) ToGetBackupCompliancePolicyPolicyItemDailyOutput() GetBackupCompliancePolicyPolicyItemDailyOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemDailyOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemDailyArgs) ToGetBackupCompliancePolicyPolicyItemDailyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemDailyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemDailyOutput)
}

func (i GetBackupCompliancePolicyPolicyItemDailyArgs) ToOutput(ctx context.Context) pulumix.Output[GetBackupCompliancePolicyPolicyItemDaily] {
	return pulumix.Output[GetBackupCompliancePolicyPolicyItemDaily]{
		OutputState: i.ToGetBackupCompliancePolicyPolicyItemDailyOutputWithContext(ctx).OutputState,
	}
}

func (i GetBackupCompliancePolicyPolicyItemDailyArgs) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutput() GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemDailyArgs) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemDailyOutput).ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx)
}

// GetBackupCompliancePolicyPolicyItemDailyPtrInput is an input type that accepts GetBackupCompliancePolicyPolicyItemDailyArgs, GetBackupCompliancePolicyPolicyItemDailyPtr and GetBackupCompliancePolicyPolicyItemDailyPtrOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemDailyPtrInput` via:
//
//	        GetBackupCompliancePolicyPolicyItemDailyArgs{...}
//
//	or:
//
//	        nil
type GetBackupCompliancePolicyPolicyItemDailyPtrInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemDailyPtrOutput() GetBackupCompliancePolicyPolicyItemDailyPtrOutput
	ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemDailyPtrOutput
}

type getBackupCompliancePolicyPolicyItemDailyPtrType GetBackupCompliancePolicyPolicyItemDailyArgs

func GetBackupCompliancePolicyPolicyItemDailyPtr(v *GetBackupCompliancePolicyPolicyItemDailyArgs) GetBackupCompliancePolicyPolicyItemDailyPtrInput {
	return (*getBackupCompliancePolicyPolicyItemDailyPtrType)(v)
}

func (*getBackupCompliancePolicyPolicyItemDailyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (i *getBackupCompliancePolicyPolicyItemDailyPtrType) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutput() GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Background())
}

func (i *getBackupCompliancePolicyPolicyItemDailyPtrType) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemDailyPtrOutput)
}

func (i *getBackupCompliancePolicyPolicyItemDailyPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetBackupCompliancePolicyPolicyItemDaily] {
	return pulumix.Output[*GetBackupCompliancePolicyPolicyItemDaily]{
		OutputState: i.ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx).OutputState,
	}
}

type GetBackupCompliancePolicyPolicyItemDailyOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemDailyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemDailyOutput) ToGetBackupCompliancePolicyPolicyItemDailyOutput() GetBackupCompliancePolicyPolicyItemDailyOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemDailyOutput) ToGetBackupCompliancePolicyPolicyItemDailyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemDailyOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemDailyOutput) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutput() GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o.ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(context.Background())
}

func (o GetBackupCompliancePolicyPolicyItemDailyOutput) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetBackupCompliancePolicyPolicyItemDaily) *GetBackupCompliancePolicyPolicyItemDaily {
		return &v
	}).(GetBackupCompliancePolicyPolicyItemDailyPtrOutput)
}

func (o GetBackupCompliancePolicyPolicyItemDailyOutput) ToOutput(ctx context.Context) pulumix.Output[GetBackupCompliancePolicyPolicyItemDaily] {
	return pulumix.Output[GetBackupCompliancePolicyPolicyItemDaily]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyPolicyItemDailyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemDaily) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyPolicyItemDailyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemDaily) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyPolicyItemDailyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemDaily) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyPolicyItemDailyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemDaily) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyPolicyItemDailyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemDaily) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetBackupCompliancePolicyPolicyItemDailyPtrOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemDailyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBackupCompliancePolicyPolicyItemDaily)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutput() GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) ToGetBackupCompliancePolicyPolicyItemDailyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemDailyPtrOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetBackupCompliancePolicyPolicyItemDaily] {
	return pulumix.Output[*GetBackupCompliancePolicyPolicyItemDaily]{
		OutputState: o.OutputState,
	}
}

func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) Elem() GetBackupCompliancePolicyPolicyItemDailyOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemDaily) GetBackupCompliancePolicyPolicyItemDaily {
		if v != nil {
			return *v
		}
		var ret GetBackupCompliancePolicyPolicyItemDaily
		return ret
	}).(GetBackupCompliancePolicyPolicyItemDailyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemDaily) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return &v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyPolicyItemDailyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemDaily) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type GetBackupCompliancePolicyPolicyItemHourly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetBackupCompliancePolicyPolicyItemHourlyInput is an input type that accepts GetBackupCompliancePolicyPolicyItemHourlyArgs and GetBackupCompliancePolicyPolicyItemHourlyOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemHourlyInput` via:
//
//	GetBackupCompliancePolicyPolicyItemHourlyArgs{...}
type GetBackupCompliancePolicyPolicyItemHourlyInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemHourlyOutput() GetBackupCompliancePolicyPolicyItemHourlyOutput
	ToGetBackupCompliancePolicyPolicyItemHourlyOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemHourlyOutput
}

type GetBackupCompliancePolicyPolicyItemHourlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetBackupCompliancePolicyPolicyItemHourlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (i GetBackupCompliancePolicyPolicyItemHourlyArgs) ToGetBackupCompliancePolicyPolicyItemHourlyOutput() GetBackupCompliancePolicyPolicyItemHourlyOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemHourlyOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemHourlyArgs) ToGetBackupCompliancePolicyPolicyItemHourlyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemHourlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemHourlyOutput)
}

func (i GetBackupCompliancePolicyPolicyItemHourlyArgs) ToOutput(ctx context.Context) pulumix.Output[GetBackupCompliancePolicyPolicyItemHourly] {
	return pulumix.Output[GetBackupCompliancePolicyPolicyItemHourly]{
		OutputState: i.ToGetBackupCompliancePolicyPolicyItemHourlyOutputWithContext(ctx).OutputState,
	}
}

func (i GetBackupCompliancePolicyPolicyItemHourlyArgs) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutput() GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemHourlyArgs) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemHourlyOutput).ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx)
}

// GetBackupCompliancePolicyPolicyItemHourlyPtrInput is an input type that accepts GetBackupCompliancePolicyPolicyItemHourlyArgs, GetBackupCompliancePolicyPolicyItemHourlyPtr and GetBackupCompliancePolicyPolicyItemHourlyPtrOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemHourlyPtrInput` via:
//
//	        GetBackupCompliancePolicyPolicyItemHourlyArgs{...}
//
//	or:
//
//	        nil
type GetBackupCompliancePolicyPolicyItemHourlyPtrInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutput() GetBackupCompliancePolicyPolicyItemHourlyPtrOutput
	ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemHourlyPtrOutput
}

type getBackupCompliancePolicyPolicyItemHourlyPtrType GetBackupCompliancePolicyPolicyItemHourlyArgs

func GetBackupCompliancePolicyPolicyItemHourlyPtr(v *GetBackupCompliancePolicyPolicyItemHourlyArgs) GetBackupCompliancePolicyPolicyItemHourlyPtrInput {
	return (*getBackupCompliancePolicyPolicyItemHourlyPtrType)(v)
}

func (*getBackupCompliancePolicyPolicyItemHourlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (i *getBackupCompliancePolicyPolicyItemHourlyPtrType) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutput() GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (i *getBackupCompliancePolicyPolicyItemHourlyPtrType) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemHourlyPtrOutput)
}

func (i *getBackupCompliancePolicyPolicyItemHourlyPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetBackupCompliancePolicyPolicyItemHourly] {
	return pulumix.Output[*GetBackupCompliancePolicyPolicyItemHourly]{
		OutputState: i.ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx).OutputState,
	}
}

type GetBackupCompliancePolicyPolicyItemHourlyOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemHourlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) ToGetBackupCompliancePolicyPolicyItemHourlyOutput() GetBackupCompliancePolicyPolicyItemHourlyOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) ToGetBackupCompliancePolicyPolicyItemHourlyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemHourlyOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutput() GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o.ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetBackupCompliancePolicyPolicyItemHourly) *GetBackupCompliancePolicyPolicyItemHourly {
		return &v
	}).(GetBackupCompliancePolicyPolicyItemHourlyPtrOutput)
}

func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) ToOutput(ctx context.Context) pulumix.Output[GetBackupCompliancePolicyPolicyItemHourly] {
	return pulumix.Output[GetBackupCompliancePolicyPolicyItemHourly]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemHourly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemHourly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemHourly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemHourly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyPolicyItemHourlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemHourly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetBackupCompliancePolicyPolicyItemHourlyPtrOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBackupCompliancePolicyPolicyItemHourly)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutput() GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) ToGetBackupCompliancePolicyPolicyItemHourlyPtrOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemHourlyPtrOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetBackupCompliancePolicyPolicyItemHourly] {
	return pulumix.Output[*GetBackupCompliancePolicyPolicyItemHourly]{
		OutputState: o.OutputState,
	}
}

func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) Elem() GetBackupCompliancePolicyPolicyItemHourlyOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemHourly) GetBackupCompliancePolicyPolicyItemHourly {
		if v != nil {
			return *v
		}
		var ret GetBackupCompliancePolicyPolicyItemHourly
		return ret
	}).(GetBackupCompliancePolicyPolicyItemHourlyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemHourly) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return &v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyPolicyItemHourlyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetBackupCompliancePolicyPolicyItemHourly) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type GetBackupCompliancePolicyPolicyItemMonthly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetBackupCompliancePolicyPolicyItemMonthlyInput is an input type that accepts GetBackupCompliancePolicyPolicyItemMonthlyArgs and GetBackupCompliancePolicyPolicyItemMonthlyOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemMonthlyInput` via:
//
//	GetBackupCompliancePolicyPolicyItemMonthlyArgs{...}
type GetBackupCompliancePolicyPolicyItemMonthlyInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemMonthlyOutput() GetBackupCompliancePolicyPolicyItemMonthlyOutput
	ToGetBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemMonthlyOutput
}

type GetBackupCompliancePolicyPolicyItemMonthlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetBackupCompliancePolicyPolicyItemMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (i GetBackupCompliancePolicyPolicyItemMonthlyArgs) ToGetBackupCompliancePolicyPolicyItemMonthlyOutput() GetBackupCompliancePolicyPolicyItemMonthlyOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemMonthlyArgs) ToGetBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemMonthlyOutput)
}

func (i GetBackupCompliancePolicyPolicyItemMonthlyArgs) ToOutput(ctx context.Context) pulumix.Output[GetBackupCompliancePolicyPolicyItemMonthly] {
	return pulumix.Output[GetBackupCompliancePolicyPolicyItemMonthly]{
		OutputState: i.ToGetBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(ctx).OutputState,
	}
}

// GetBackupCompliancePolicyPolicyItemMonthlyArrayInput is an input type that accepts GetBackupCompliancePolicyPolicyItemMonthlyArray and GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemMonthlyArrayInput` via:
//
//	GetBackupCompliancePolicyPolicyItemMonthlyArray{ GetBackupCompliancePolicyPolicyItemMonthlyArgs{...} }
type GetBackupCompliancePolicyPolicyItemMonthlyArrayInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutput() GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput
	ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput
}

type GetBackupCompliancePolicyPolicyItemMonthlyArray []GetBackupCompliancePolicyPolicyItemMonthlyInput

func (GetBackupCompliancePolicyPolicyItemMonthlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (i GetBackupCompliancePolicyPolicyItemMonthlyArray) ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutput() GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemMonthlyArray) ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput)
}

func (i GetBackupCompliancePolicyPolicyItemMonthlyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBackupCompliancePolicyPolicyItemMonthly] {
	return pulumix.Output[[]GetBackupCompliancePolicyPolicyItemMonthly]{
		OutputState: i.ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBackupCompliancePolicyPolicyItemMonthlyOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) ToGetBackupCompliancePolicyPolicyItemMonthlyOutput() GetBackupCompliancePolicyPolicyItemMonthlyOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) ToGetBackupCompliancePolicyPolicyItemMonthlyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemMonthlyOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) ToOutput(ctx context.Context) pulumix.Output[GetBackupCompliancePolicyPolicyItemMonthly] {
	return pulumix.Output[GetBackupCompliancePolicyPolicyItemMonthly]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemMonthly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemMonthly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemMonthly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemMonthly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyPolicyItemMonthlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemMonthly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupCompliancePolicyPolicyItemMonthly)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput) ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutput() GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput) ToGetBackupCompliancePolicyPolicyItemMonthlyArrayOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBackupCompliancePolicyPolicyItemMonthly] {
	return pulumix.Output[[]GetBackupCompliancePolicyPolicyItemMonthly]{
		OutputState: o.OutputState,
	}
}

func (o GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput) Index(i pulumi.IntInput) GetBackupCompliancePolicyPolicyItemMonthlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupCompliancePolicyPolicyItemMonthly {
		return vs[0].([]GetBackupCompliancePolicyPolicyItemMonthly)[vs[1].(int)]
	}).(GetBackupCompliancePolicyPolicyItemMonthlyOutput)
}

type GetBackupCompliancePolicyPolicyItemWeekly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetBackupCompliancePolicyPolicyItemWeeklyInput is an input type that accepts GetBackupCompliancePolicyPolicyItemWeeklyArgs and GetBackupCompliancePolicyPolicyItemWeeklyOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemWeeklyInput` via:
//
//	GetBackupCompliancePolicyPolicyItemWeeklyArgs{...}
type GetBackupCompliancePolicyPolicyItemWeeklyInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemWeeklyOutput() GetBackupCompliancePolicyPolicyItemWeeklyOutput
	ToGetBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemWeeklyOutput
}

type GetBackupCompliancePolicyPolicyItemWeeklyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetBackupCompliancePolicyPolicyItemWeeklyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (i GetBackupCompliancePolicyPolicyItemWeeklyArgs) ToGetBackupCompliancePolicyPolicyItemWeeklyOutput() GetBackupCompliancePolicyPolicyItemWeeklyOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemWeeklyArgs) ToGetBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemWeeklyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemWeeklyOutput)
}

func (i GetBackupCompliancePolicyPolicyItemWeeklyArgs) ToOutput(ctx context.Context) pulumix.Output[GetBackupCompliancePolicyPolicyItemWeekly] {
	return pulumix.Output[GetBackupCompliancePolicyPolicyItemWeekly]{
		OutputState: i.ToGetBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(ctx).OutputState,
	}
}

// GetBackupCompliancePolicyPolicyItemWeeklyArrayInput is an input type that accepts GetBackupCompliancePolicyPolicyItemWeeklyArray and GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput values.
// You can construct a concrete instance of `GetBackupCompliancePolicyPolicyItemWeeklyArrayInput` via:
//
//	GetBackupCompliancePolicyPolicyItemWeeklyArray{ GetBackupCompliancePolicyPolicyItemWeeklyArgs{...} }
type GetBackupCompliancePolicyPolicyItemWeeklyArrayInput interface {
	pulumi.Input

	ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutput() GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput
	ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(context.Context) GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput
}

type GetBackupCompliancePolicyPolicyItemWeeklyArray []GetBackupCompliancePolicyPolicyItemWeeklyInput

func (GetBackupCompliancePolicyPolicyItemWeeklyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (i GetBackupCompliancePolicyPolicyItemWeeklyArray) ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutput() GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return i.ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(context.Background())
}

func (i GetBackupCompliancePolicyPolicyItemWeeklyArray) ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput)
}

func (i GetBackupCompliancePolicyPolicyItemWeeklyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBackupCompliancePolicyPolicyItemWeekly] {
	return pulumix.Output[[]GetBackupCompliancePolicyPolicyItemWeekly]{
		OutputState: i.ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBackupCompliancePolicyPolicyItemWeeklyOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemWeeklyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) ToGetBackupCompliancePolicyPolicyItemWeeklyOutput() GetBackupCompliancePolicyPolicyItemWeeklyOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) ToGetBackupCompliancePolicyPolicyItemWeeklyOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemWeeklyOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) ToOutput(ctx context.Context) pulumix.Output[GetBackupCompliancePolicyPolicyItemWeekly] {
	return pulumix.Output[GetBackupCompliancePolicyPolicyItemWeekly]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemWeekly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemWeekly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemWeekly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemWeekly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetBackupCompliancePolicyPolicyItemWeeklyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupCompliancePolicyPolicyItemWeekly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput struct{ *pulumi.OutputState }

func (GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupCompliancePolicyPolicyItemWeekly)(nil)).Elem()
}

func (o GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput) ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutput() GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput) ToGetBackupCompliancePolicyPolicyItemWeeklyArrayOutputWithContext(ctx context.Context) GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput {
	return o
}

func (o GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBackupCompliancePolicyPolicyItemWeekly] {
	return pulumix.Output[[]GetBackupCompliancePolicyPolicyItemWeekly]{
		OutputState: o.OutputState,
	}
}

func (o GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput) Index(i pulumi.IntInput) GetBackupCompliancePolicyPolicyItemWeeklyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupCompliancePolicyPolicyItemWeekly {
		return vs[0].([]GetBackupCompliancePolicyPolicyItemWeekly)[vs[1].(int)]
	}).(GetBackupCompliancePolicyPolicyItemWeeklyOutput)
}

type GetCloudBackupScheduleCopySetting struct {
	// Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. "AWS" "AZURE" "GCP"
	CloudProvider string `pulumi:"cloudProvider"`
	// List that describes which types of snapshots to copy. i.e. "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "ON_DEMAND"
	Frequencies []string `pulumi:"frequencies"`
	// Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under https://www.mongodb.com/docs/atlas/reference/cloud-providers/ 'regions' link
	RegionName string `pulumi:"regionName"`
	// Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, consult the replicationSpecs array returned from [Return One Multi-Cloud Cluster in One Project](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/getCluster).
	ReplicationSpecId string `pulumi:"replicationSpecId"`
	// Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
	ShouldCopyOplogs bool `pulumi:"shouldCopyOplogs"`
}

// GetCloudBackupScheduleCopySettingInput is an input type that accepts GetCloudBackupScheduleCopySettingArgs and GetCloudBackupScheduleCopySettingOutput values.
// You can construct a concrete instance of `GetCloudBackupScheduleCopySettingInput` via:
//
//	GetCloudBackupScheduleCopySettingArgs{...}
type GetCloudBackupScheduleCopySettingInput interface {
	pulumi.Input

	ToGetCloudBackupScheduleCopySettingOutput() GetCloudBackupScheduleCopySettingOutput
	ToGetCloudBackupScheduleCopySettingOutputWithContext(context.Context) GetCloudBackupScheduleCopySettingOutput
}

type GetCloudBackupScheduleCopySettingArgs struct {
	// Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. "AWS" "AZURE" "GCP"
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// List that describes which types of snapshots to copy. i.e. "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "ON_DEMAND"
	Frequencies pulumi.StringArrayInput `pulumi:"frequencies"`
	// Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under https://www.mongodb.com/docs/atlas/reference/cloud-providers/ 'regions' link
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, consult the replicationSpecs array returned from [Return One Multi-Cloud Cluster in One Project](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/getCluster).
	ReplicationSpecId pulumi.StringInput `pulumi:"replicationSpecId"`
	// Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
	ShouldCopyOplogs pulumi.BoolInput `pulumi:"shouldCopyOplogs"`
}

func (GetCloudBackupScheduleCopySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupScheduleCopySetting)(nil)).Elem()
}

func (i GetCloudBackupScheduleCopySettingArgs) ToGetCloudBackupScheduleCopySettingOutput() GetCloudBackupScheduleCopySettingOutput {
	return i.ToGetCloudBackupScheduleCopySettingOutputWithContext(context.Background())
}

func (i GetCloudBackupScheduleCopySettingArgs) ToGetCloudBackupScheduleCopySettingOutputWithContext(ctx context.Context) GetCloudBackupScheduleCopySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupScheduleCopySettingOutput)
}

func (i GetCloudBackupScheduleCopySettingArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupScheduleCopySetting] {
	return pulumix.Output[GetCloudBackupScheduleCopySetting]{
		OutputState: i.ToGetCloudBackupScheduleCopySettingOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupScheduleCopySettingArrayInput is an input type that accepts GetCloudBackupScheduleCopySettingArray and GetCloudBackupScheduleCopySettingArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupScheduleCopySettingArrayInput` via:
//
//	GetCloudBackupScheduleCopySettingArray{ GetCloudBackupScheduleCopySettingArgs{...} }
type GetCloudBackupScheduleCopySettingArrayInput interface {
	pulumi.Input

	ToGetCloudBackupScheduleCopySettingArrayOutput() GetCloudBackupScheduleCopySettingArrayOutput
	ToGetCloudBackupScheduleCopySettingArrayOutputWithContext(context.Context) GetCloudBackupScheduleCopySettingArrayOutput
}

type GetCloudBackupScheduleCopySettingArray []GetCloudBackupScheduleCopySettingInput

func (GetCloudBackupScheduleCopySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupScheduleCopySetting)(nil)).Elem()
}

func (i GetCloudBackupScheduleCopySettingArray) ToGetCloudBackupScheduleCopySettingArrayOutput() GetCloudBackupScheduleCopySettingArrayOutput {
	return i.ToGetCloudBackupScheduleCopySettingArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupScheduleCopySettingArray) ToGetCloudBackupScheduleCopySettingArrayOutputWithContext(ctx context.Context) GetCloudBackupScheduleCopySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupScheduleCopySettingArrayOutput)
}

func (i GetCloudBackupScheduleCopySettingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupScheduleCopySetting] {
	return pulumix.Output[[]GetCloudBackupScheduleCopySetting]{
		OutputState: i.ToGetCloudBackupScheduleCopySettingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupScheduleCopySettingOutput struct{ *pulumi.OutputState }

func (GetCloudBackupScheduleCopySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupScheduleCopySetting)(nil)).Elem()
}

func (o GetCloudBackupScheduleCopySettingOutput) ToGetCloudBackupScheduleCopySettingOutput() GetCloudBackupScheduleCopySettingOutput {
	return o
}

func (o GetCloudBackupScheduleCopySettingOutput) ToGetCloudBackupScheduleCopySettingOutputWithContext(ctx context.Context) GetCloudBackupScheduleCopySettingOutput {
	return o
}

func (o GetCloudBackupScheduleCopySettingOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupScheduleCopySetting] {
	return pulumix.Output[GetCloudBackupScheduleCopySetting]{
		OutputState: o.OutputState,
	}
}

// Human-readable label that identifies the cloud provider that stores the snapshot copy. i.e. "AWS" "AZURE" "GCP"
func (o GetCloudBackupScheduleCopySettingOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupScheduleCopySetting) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// List that describes which types of snapshots to copy. i.e. "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "ON_DEMAND"
func (o GetCloudBackupScheduleCopySettingOutput) Frequencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudBackupScheduleCopySetting) []string { return v.Frequencies }).(pulumi.StringArrayOutput)
}

// Target region to copy snapshots belonging to replicationSpecId to. Please supply the 'Atlas Region' which can be found under https://www.mongodb.com/docs/atlas/reference/cloud-providers/ 'regions' link
func (o GetCloudBackupScheduleCopySettingOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupScheduleCopySetting) string { return v.RegionName }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the replication object for a zone in a cluster. For global clusters, there can be multiple zones to choose from. For sharded clusters and replica set clusters, there is only one zone in the cluster. To find the Replication Spec Id, consult the replicationSpecs array returned from [Return One Multi-Cloud Cluster in One Project](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/getCluster).
func (o GetCloudBackupScheduleCopySettingOutput) ReplicationSpecId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupScheduleCopySetting) string { return v.ReplicationSpecId }).(pulumi.StringOutput)
}

// Flag that indicates whether to copy the oplogs to the target region. You can use the oplogs to perform point-in-time restores.
func (o GetCloudBackupScheduleCopySettingOutput) ShouldCopyOplogs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudBackupScheduleCopySetting) bool { return v.ShouldCopyOplogs }).(pulumi.BoolOutput)
}

type GetCloudBackupScheduleCopySettingArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupScheduleCopySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupScheduleCopySetting)(nil)).Elem()
}

func (o GetCloudBackupScheduleCopySettingArrayOutput) ToGetCloudBackupScheduleCopySettingArrayOutput() GetCloudBackupScheduleCopySettingArrayOutput {
	return o
}

func (o GetCloudBackupScheduleCopySettingArrayOutput) ToGetCloudBackupScheduleCopySettingArrayOutputWithContext(ctx context.Context) GetCloudBackupScheduleCopySettingArrayOutput {
	return o
}

func (o GetCloudBackupScheduleCopySettingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupScheduleCopySetting] {
	return pulumix.Output[[]GetCloudBackupScheduleCopySetting]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupScheduleCopySettingArrayOutput) Index(i pulumi.IntInput) GetCloudBackupScheduleCopySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupScheduleCopySetting {
		return vs[0].([]GetCloudBackupScheduleCopySetting)[vs[1].(int)]
	}).(GetCloudBackupScheduleCopySettingOutput)
}

type GetCloudBackupScheduleExport struct {
	// Unique identifier of the CloudBackupSnapshotExportBucket export_bucket_id value.
	ExportBucketId string `pulumi:"exportBucketId"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
}

// GetCloudBackupScheduleExportInput is an input type that accepts GetCloudBackupScheduleExportArgs and GetCloudBackupScheduleExportOutput values.
// You can construct a concrete instance of `GetCloudBackupScheduleExportInput` via:
//
//	GetCloudBackupScheduleExportArgs{...}
type GetCloudBackupScheduleExportInput interface {
	pulumi.Input

	ToGetCloudBackupScheduleExportOutput() GetCloudBackupScheduleExportOutput
	ToGetCloudBackupScheduleExportOutputWithContext(context.Context) GetCloudBackupScheduleExportOutput
}

type GetCloudBackupScheduleExportArgs struct {
	// Unique identifier of the CloudBackupSnapshotExportBucket export_bucket_id value.
	ExportBucketId pulumi.StringInput `pulumi:"exportBucketId"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
}

func (GetCloudBackupScheduleExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupScheduleExport)(nil)).Elem()
}

func (i GetCloudBackupScheduleExportArgs) ToGetCloudBackupScheduleExportOutput() GetCloudBackupScheduleExportOutput {
	return i.ToGetCloudBackupScheduleExportOutputWithContext(context.Background())
}

func (i GetCloudBackupScheduleExportArgs) ToGetCloudBackupScheduleExportOutputWithContext(ctx context.Context) GetCloudBackupScheduleExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupScheduleExportOutput)
}

func (i GetCloudBackupScheduleExportArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupScheduleExport] {
	return pulumix.Output[GetCloudBackupScheduleExport]{
		OutputState: i.ToGetCloudBackupScheduleExportOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupScheduleExportArrayInput is an input type that accepts GetCloudBackupScheduleExportArray and GetCloudBackupScheduleExportArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupScheduleExportArrayInput` via:
//
//	GetCloudBackupScheduleExportArray{ GetCloudBackupScheduleExportArgs{...} }
type GetCloudBackupScheduleExportArrayInput interface {
	pulumi.Input

	ToGetCloudBackupScheduleExportArrayOutput() GetCloudBackupScheduleExportArrayOutput
	ToGetCloudBackupScheduleExportArrayOutputWithContext(context.Context) GetCloudBackupScheduleExportArrayOutput
}

type GetCloudBackupScheduleExportArray []GetCloudBackupScheduleExportInput

func (GetCloudBackupScheduleExportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupScheduleExport)(nil)).Elem()
}

func (i GetCloudBackupScheduleExportArray) ToGetCloudBackupScheduleExportArrayOutput() GetCloudBackupScheduleExportArrayOutput {
	return i.ToGetCloudBackupScheduleExportArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupScheduleExportArray) ToGetCloudBackupScheduleExportArrayOutputWithContext(ctx context.Context) GetCloudBackupScheduleExportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupScheduleExportArrayOutput)
}

func (i GetCloudBackupScheduleExportArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupScheduleExport] {
	return pulumix.Output[[]GetCloudBackupScheduleExport]{
		OutputState: i.ToGetCloudBackupScheduleExportArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupScheduleExportOutput struct{ *pulumi.OutputState }

func (GetCloudBackupScheduleExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupScheduleExport)(nil)).Elem()
}

func (o GetCloudBackupScheduleExportOutput) ToGetCloudBackupScheduleExportOutput() GetCloudBackupScheduleExportOutput {
	return o
}

func (o GetCloudBackupScheduleExportOutput) ToGetCloudBackupScheduleExportOutputWithContext(ctx context.Context) GetCloudBackupScheduleExportOutput {
	return o
}

func (o GetCloudBackupScheduleExportOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupScheduleExport] {
	return pulumix.Output[GetCloudBackupScheduleExport]{
		OutputState: o.OutputState,
	}
}

// Unique identifier of the CloudBackupSnapshotExportBucket export_bucket_id value.
func (o GetCloudBackupScheduleExportOutput) ExportBucketId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupScheduleExport) string { return v.ExportBucketId }).(pulumi.StringOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetCloudBackupScheduleExportOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupScheduleExport) string { return v.FrequencyType }).(pulumi.StringOutput)
}

type GetCloudBackupScheduleExportArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupScheduleExportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupScheduleExport)(nil)).Elem()
}

func (o GetCloudBackupScheduleExportArrayOutput) ToGetCloudBackupScheduleExportArrayOutput() GetCloudBackupScheduleExportArrayOutput {
	return o
}

func (o GetCloudBackupScheduleExportArrayOutput) ToGetCloudBackupScheduleExportArrayOutputWithContext(ctx context.Context) GetCloudBackupScheduleExportArrayOutput {
	return o
}

func (o GetCloudBackupScheduleExportArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupScheduleExport] {
	return pulumix.Output[[]GetCloudBackupScheduleExport]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupScheduleExportArrayOutput) Index(i pulumi.IntInput) GetCloudBackupScheduleExportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupScheduleExport {
		return vs[0].([]GetCloudBackupScheduleExport)[vs[1].(int)]
	}).(GetCloudBackupScheduleExportOutput)
}

type GetCloudBackupSchedulePolicyItemDaily struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetCloudBackupSchedulePolicyItemDailyInput is an input type that accepts GetCloudBackupSchedulePolicyItemDailyArgs and GetCloudBackupSchedulePolicyItemDailyOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemDailyInput` via:
//
//	GetCloudBackupSchedulePolicyItemDailyArgs{...}
type GetCloudBackupSchedulePolicyItemDailyInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemDailyOutput() GetCloudBackupSchedulePolicyItemDailyOutput
	ToGetCloudBackupSchedulePolicyItemDailyOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemDailyOutput
}

type GetCloudBackupSchedulePolicyItemDailyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetCloudBackupSchedulePolicyItemDailyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemDailyArgs) ToGetCloudBackupSchedulePolicyItemDailyOutput() GetCloudBackupSchedulePolicyItemDailyOutput {
	return i.ToGetCloudBackupSchedulePolicyItemDailyOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemDailyArgs) ToGetCloudBackupSchedulePolicyItemDailyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemDailyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemDailyOutput)
}

func (i GetCloudBackupSchedulePolicyItemDailyArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSchedulePolicyItemDaily] {
	return pulumix.Output[GetCloudBackupSchedulePolicyItemDaily]{
		OutputState: i.ToGetCloudBackupSchedulePolicyItemDailyOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupSchedulePolicyItemDailyArrayInput is an input type that accepts GetCloudBackupSchedulePolicyItemDailyArray and GetCloudBackupSchedulePolicyItemDailyArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemDailyArrayInput` via:
//
//	GetCloudBackupSchedulePolicyItemDailyArray{ GetCloudBackupSchedulePolicyItemDailyArgs{...} }
type GetCloudBackupSchedulePolicyItemDailyArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemDailyArrayOutput() GetCloudBackupSchedulePolicyItemDailyArrayOutput
	ToGetCloudBackupSchedulePolicyItemDailyArrayOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemDailyArrayOutput
}

type GetCloudBackupSchedulePolicyItemDailyArray []GetCloudBackupSchedulePolicyItemDailyInput

func (GetCloudBackupSchedulePolicyItemDailyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemDailyArray) ToGetCloudBackupSchedulePolicyItemDailyArrayOutput() GetCloudBackupSchedulePolicyItemDailyArrayOutput {
	return i.ToGetCloudBackupSchedulePolicyItemDailyArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemDailyArray) ToGetCloudBackupSchedulePolicyItemDailyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemDailyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemDailyArrayOutput)
}

func (i GetCloudBackupSchedulePolicyItemDailyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSchedulePolicyItemDaily] {
	return pulumix.Output[[]GetCloudBackupSchedulePolicyItemDaily]{
		OutputState: i.ToGetCloudBackupSchedulePolicyItemDailyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupSchedulePolicyItemDailyOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemDailyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemDailyOutput) ToGetCloudBackupSchedulePolicyItemDailyOutput() GetCloudBackupSchedulePolicyItemDailyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemDailyOutput) ToGetCloudBackupSchedulePolicyItemDailyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemDailyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemDailyOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSchedulePolicyItemDaily] {
	return pulumix.Output[GetCloudBackupSchedulePolicyItemDaily]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetCloudBackupSchedulePolicyItemDailyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetCloudBackupSchedulePolicyItemDailyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetCloudBackupSchedulePolicyItemDailyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetCloudBackupSchedulePolicyItemDailyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetCloudBackupSchedulePolicyItemDailyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudBackupSchedulePolicyItemDailyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemDailyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemDailyArrayOutput) ToGetCloudBackupSchedulePolicyItemDailyArrayOutput() GetCloudBackupSchedulePolicyItemDailyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemDailyArrayOutput) ToGetCloudBackupSchedulePolicyItemDailyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemDailyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemDailyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSchedulePolicyItemDaily] {
	return pulumix.Output[[]GetCloudBackupSchedulePolicyItemDaily]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupSchedulePolicyItemDailyArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSchedulePolicyItemDailyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSchedulePolicyItemDaily {
		return vs[0].([]GetCloudBackupSchedulePolicyItemDaily)[vs[1].(int)]
	}).(GetCloudBackupSchedulePolicyItemDailyOutput)
}

type GetCloudBackupSchedulePolicyItemHourly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetCloudBackupSchedulePolicyItemHourlyInput is an input type that accepts GetCloudBackupSchedulePolicyItemHourlyArgs and GetCloudBackupSchedulePolicyItemHourlyOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemHourlyInput` via:
//
//	GetCloudBackupSchedulePolicyItemHourlyArgs{...}
type GetCloudBackupSchedulePolicyItemHourlyInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemHourlyOutput() GetCloudBackupSchedulePolicyItemHourlyOutput
	ToGetCloudBackupSchedulePolicyItemHourlyOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemHourlyOutput
}

type GetCloudBackupSchedulePolicyItemHourlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetCloudBackupSchedulePolicyItemHourlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemHourlyArgs) ToGetCloudBackupSchedulePolicyItemHourlyOutput() GetCloudBackupSchedulePolicyItemHourlyOutput {
	return i.ToGetCloudBackupSchedulePolicyItemHourlyOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemHourlyArgs) ToGetCloudBackupSchedulePolicyItemHourlyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemHourlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemHourlyOutput)
}

func (i GetCloudBackupSchedulePolicyItemHourlyArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSchedulePolicyItemHourly] {
	return pulumix.Output[GetCloudBackupSchedulePolicyItemHourly]{
		OutputState: i.ToGetCloudBackupSchedulePolicyItemHourlyOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupSchedulePolicyItemHourlyArrayInput is an input type that accepts GetCloudBackupSchedulePolicyItemHourlyArray and GetCloudBackupSchedulePolicyItemHourlyArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemHourlyArrayInput` via:
//
//	GetCloudBackupSchedulePolicyItemHourlyArray{ GetCloudBackupSchedulePolicyItemHourlyArgs{...} }
type GetCloudBackupSchedulePolicyItemHourlyArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemHourlyArrayOutput() GetCloudBackupSchedulePolicyItemHourlyArrayOutput
	ToGetCloudBackupSchedulePolicyItemHourlyArrayOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemHourlyArrayOutput
}

type GetCloudBackupSchedulePolicyItemHourlyArray []GetCloudBackupSchedulePolicyItemHourlyInput

func (GetCloudBackupSchedulePolicyItemHourlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemHourlyArray) ToGetCloudBackupSchedulePolicyItemHourlyArrayOutput() GetCloudBackupSchedulePolicyItemHourlyArrayOutput {
	return i.ToGetCloudBackupSchedulePolicyItemHourlyArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemHourlyArray) ToGetCloudBackupSchedulePolicyItemHourlyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemHourlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemHourlyArrayOutput)
}

func (i GetCloudBackupSchedulePolicyItemHourlyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSchedulePolicyItemHourly] {
	return pulumix.Output[[]GetCloudBackupSchedulePolicyItemHourly]{
		OutputState: i.ToGetCloudBackupSchedulePolicyItemHourlyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupSchedulePolicyItemHourlyOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemHourlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemHourlyOutput) ToGetCloudBackupSchedulePolicyItemHourlyOutput() GetCloudBackupSchedulePolicyItemHourlyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemHourlyOutput) ToGetCloudBackupSchedulePolicyItemHourlyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemHourlyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemHourlyOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSchedulePolicyItemHourly] {
	return pulumix.Output[GetCloudBackupSchedulePolicyItemHourly]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudBackupSchedulePolicyItemHourlyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemHourlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemHourlyArrayOutput) ToGetCloudBackupSchedulePolicyItemHourlyArrayOutput() GetCloudBackupSchedulePolicyItemHourlyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemHourlyArrayOutput) ToGetCloudBackupSchedulePolicyItemHourlyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemHourlyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemHourlyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSchedulePolicyItemHourly] {
	return pulumix.Output[[]GetCloudBackupSchedulePolicyItemHourly]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupSchedulePolicyItemHourlyArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSchedulePolicyItemHourlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSchedulePolicyItemHourly {
		return vs[0].([]GetCloudBackupSchedulePolicyItemHourly)[vs[1].(int)]
	}).(GetCloudBackupSchedulePolicyItemHourlyOutput)
}

type GetCloudBackupSchedulePolicyItemMonthly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetCloudBackupSchedulePolicyItemMonthlyInput is an input type that accepts GetCloudBackupSchedulePolicyItemMonthlyArgs and GetCloudBackupSchedulePolicyItemMonthlyOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemMonthlyInput` via:
//
//	GetCloudBackupSchedulePolicyItemMonthlyArgs{...}
type GetCloudBackupSchedulePolicyItemMonthlyInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemMonthlyOutput() GetCloudBackupSchedulePolicyItemMonthlyOutput
	ToGetCloudBackupSchedulePolicyItemMonthlyOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemMonthlyOutput
}

type GetCloudBackupSchedulePolicyItemMonthlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetCloudBackupSchedulePolicyItemMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemMonthlyArgs) ToGetCloudBackupSchedulePolicyItemMonthlyOutput() GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return i.ToGetCloudBackupSchedulePolicyItemMonthlyOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemMonthlyArgs) ToGetCloudBackupSchedulePolicyItemMonthlyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemMonthlyOutput)
}

func (i GetCloudBackupSchedulePolicyItemMonthlyArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSchedulePolicyItemMonthly] {
	return pulumix.Output[GetCloudBackupSchedulePolicyItemMonthly]{
		OutputState: i.ToGetCloudBackupSchedulePolicyItemMonthlyOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupSchedulePolicyItemMonthlyArrayInput is an input type that accepts GetCloudBackupSchedulePolicyItemMonthlyArray and GetCloudBackupSchedulePolicyItemMonthlyArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemMonthlyArrayInput` via:
//
//	GetCloudBackupSchedulePolicyItemMonthlyArray{ GetCloudBackupSchedulePolicyItemMonthlyArgs{...} }
type GetCloudBackupSchedulePolicyItemMonthlyArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutput() GetCloudBackupSchedulePolicyItemMonthlyArrayOutput
	ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemMonthlyArrayOutput
}

type GetCloudBackupSchedulePolicyItemMonthlyArray []GetCloudBackupSchedulePolicyItemMonthlyInput

func (GetCloudBackupSchedulePolicyItemMonthlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemMonthlyArray) ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutput() GetCloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return i.ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemMonthlyArray) ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemMonthlyArrayOutput)
}

func (i GetCloudBackupSchedulePolicyItemMonthlyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSchedulePolicyItemMonthly] {
	return pulumix.Output[[]GetCloudBackupSchedulePolicyItemMonthly]{
		OutputState: i.ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupSchedulePolicyItemMonthlyOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) ToGetCloudBackupSchedulePolicyItemMonthlyOutput() GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) ToGetCloudBackupSchedulePolicyItemMonthlyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSchedulePolicyItemMonthly] {
	return pulumix.Output[GetCloudBackupSchedulePolicyItemMonthly]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudBackupSchedulePolicyItemMonthlyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemMonthlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemMonthlyArrayOutput) ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutput() GetCloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemMonthlyArrayOutput) ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemMonthlyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSchedulePolicyItemMonthly] {
	return pulumix.Output[[]GetCloudBackupSchedulePolicyItemMonthly]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupSchedulePolicyItemMonthlyArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSchedulePolicyItemMonthly {
		return vs[0].([]GetCloudBackupSchedulePolicyItemMonthly)[vs[1].(int)]
	}).(GetCloudBackupSchedulePolicyItemMonthlyOutput)
}

type GetCloudBackupSchedulePolicyItemWeekly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetCloudBackupSchedulePolicyItemWeeklyInput is an input type that accepts GetCloudBackupSchedulePolicyItemWeeklyArgs and GetCloudBackupSchedulePolicyItemWeeklyOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemWeeklyInput` via:
//
//	GetCloudBackupSchedulePolicyItemWeeklyArgs{...}
type GetCloudBackupSchedulePolicyItemWeeklyInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemWeeklyOutput() GetCloudBackupSchedulePolicyItemWeeklyOutput
	ToGetCloudBackupSchedulePolicyItemWeeklyOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemWeeklyOutput
}

type GetCloudBackupSchedulePolicyItemWeeklyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: `days`, `weeks`, or `months`.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetCloudBackupSchedulePolicyItemWeeklyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemWeeklyArgs) ToGetCloudBackupSchedulePolicyItemWeeklyOutput() GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return i.ToGetCloudBackupSchedulePolicyItemWeeklyOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemWeeklyArgs) ToGetCloudBackupSchedulePolicyItemWeeklyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemWeeklyOutput)
}

func (i GetCloudBackupSchedulePolicyItemWeeklyArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSchedulePolicyItemWeekly] {
	return pulumix.Output[GetCloudBackupSchedulePolicyItemWeekly]{
		OutputState: i.ToGetCloudBackupSchedulePolicyItemWeeklyOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupSchedulePolicyItemWeeklyArrayInput is an input type that accepts GetCloudBackupSchedulePolicyItemWeeklyArray and GetCloudBackupSchedulePolicyItemWeeklyArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemWeeklyArrayInput` via:
//
//	GetCloudBackupSchedulePolicyItemWeeklyArray{ GetCloudBackupSchedulePolicyItemWeeklyArgs{...} }
type GetCloudBackupSchedulePolicyItemWeeklyArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutput() GetCloudBackupSchedulePolicyItemWeeklyArrayOutput
	ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemWeeklyArrayOutput
}

type GetCloudBackupSchedulePolicyItemWeeklyArray []GetCloudBackupSchedulePolicyItemWeeklyInput

func (GetCloudBackupSchedulePolicyItemWeeklyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemWeeklyArray) ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutput() GetCloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return i.ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemWeeklyArray) ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemWeeklyArrayOutput)
}

func (i GetCloudBackupSchedulePolicyItemWeeklyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSchedulePolicyItemWeekly] {
	return pulumix.Output[[]GetCloudBackupSchedulePolicyItemWeekly]{
		OutputState: i.ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupSchedulePolicyItemWeeklyOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemWeeklyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) ToGetCloudBackupSchedulePolicyItemWeeklyOutput() GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) ToGetCloudBackupSchedulePolicyItemWeeklyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSchedulePolicyItemWeekly] {
	return pulumix.Output[GetCloudBackupSchedulePolicyItemWeekly]{
		OutputState: o.OutputState,
	}
}

// Desired frequency of the new backup policy item specified by `frequencyType` (monthly in this case). The supported values for weekly policies are
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item. For monthly policies, the frequency type is defined as `monthly`. Note that this is a read-only value and not required in plan files - its value is implied from the policy resource type.
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: `days`, `weeks`, or `months`.
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`. Monthly policy must have retention days of at least 31 days or 5 weeks or 1 month. Note that for less frequent policy items, Atlas requires that you specify a retention period greater than or equal to the retention period specified for more frequent policy items. For example: If the weekly policy item specifies a retention of two weeks, the montly retention policy must specify two weeks or greater.
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudBackupSchedulePolicyItemWeeklyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemWeeklyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemWeeklyArrayOutput) ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutput() GetCloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemWeeklyArrayOutput) ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemWeeklyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSchedulePolicyItemWeekly] {
	return pulumix.Output[[]GetCloudBackupSchedulePolicyItemWeekly]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupSchedulePolicyItemWeeklyArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSchedulePolicyItemWeekly {
		return vs[0].([]GetCloudBackupSchedulePolicyItemWeekly)[vs[1].(int)]
	}).(GetCloudBackupSchedulePolicyItemWeeklyOutput)
}

type GetCloudBackupSnapshotExportBucketsResult struct {
	// Name of the bucket that the provided role ID is authorized to access. You must also specify the `iamRoleId`.
	BucketName string `pulumi:"bucketName"`
	// Name of the provider of the cloud service where Atlas can access the S3 bucket. Atlas only supports `AWS`.
	CloudProvider string `pulumi:"cloudProvider"`
	// Unique identifier of the snapshot bucket id.
	ExportBucketId string `pulumi:"exportBucketId"`
	// Unique identifier of the role that Atlas can use to access the bucket. You must also specify the `bucketName`.
	IamRoleId string `pulumi:"iamRoleId"`
}

// GetCloudBackupSnapshotExportBucketsResultInput is an input type that accepts GetCloudBackupSnapshotExportBucketsResultArgs and GetCloudBackupSnapshotExportBucketsResultOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportBucketsResultInput` via:
//
//	GetCloudBackupSnapshotExportBucketsResultArgs{...}
type GetCloudBackupSnapshotExportBucketsResultInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportBucketsResultOutput() GetCloudBackupSnapshotExportBucketsResultOutput
	ToGetCloudBackupSnapshotExportBucketsResultOutputWithContext(context.Context) GetCloudBackupSnapshotExportBucketsResultOutput
}

type GetCloudBackupSnapshotExportBucketsResultArgs struct {
	// Name of the bucket that the provided role ID is authorized to access. You must also specify the `iamRoleId`.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Name of the provider of the cloud service where Atlas can access the S3 bucket. Atlas only supports `AWS`.
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// Unique identifier of the snapshot bucket id.
	ExportBucketId pulumi.StringInput `pulumi:"exportBucketId"`
	// Unique identifier of the role that Atlas can use to access the bucket. You must also specify the `bucketName`.
	IamRoleId pulumi.StringInput `pulumi:"iamRoleId"`
}

func (GetCloudBackupSnapshotExportBucketsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportBucketsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportBucketsResultArgs) ToGetCloudBackupSnapshotExportBucketsResultOutput() GetCloudBackupSnapshotExportBucketsResultOutput {
	return i.ToGetCloudBackupSnapshotExportBucketsResultOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportBucketsResultArgs) ToGetCloudBackupSnapshotExportBucketsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportBucketsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportBucketsResultOutput)
}

func (i GetCloudBackupSnapshotExportBucketsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotExportBucketsResult] {
	return pulumix.Output[GetCloudBackupSnapshotExportBucketsResult]{
		OutputState: i.ToGetCloudBackupSnapshotExportBucketsResultOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupSnapshotExportBucketsResultArrayInput is an input type that accepts GetCloudBackupSnapshotExportBucketsResultArray and GetCloudBackupSnapshotExportBucketsResultArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportBucketsResultArrayInput` via:
//
//	GetCloudBackupSnapshotExportBucketsResultArray{ GetCloudBackupSnapshotExportBucketsResultArgs{...} }
type GetCloudBackupSnapshotExportBucketsResultArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportBucketsResultArrayOutput() GetCloudBackupSnapshotExportBucketsResultArrayOutput
	ToGetCloudBackupSnapshotExportBucketsResultArrayOutputWithContext(context.Context) GetCloudBackupSnapshotExportBucketsResultArrayOutput
}

type GetCloudBackupSnapshotExportBucketsResultArray []GetCloudBackupSnapshotExportBucketsResultInput

func (GetCloudBackupSnapshotExportBucketsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportBucketsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportBucketsResultArray) ToGetCloudBackupSnapshotExportBucketsResultArrayOutput() GetCloudBackupSnapshotExportBucketsResultArrayOutput {
	return i.ToGetCloudBackupSnapshotExportBucketsResultArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportBucketsResultArray) ToGetCloudBackupSnapshotExportBucketsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportBucketsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportBucketsResultArrayOutput)
}

func (i GetCloudBackupSnapshotExportBucketsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotExportBucketsResult] {
	return pulumix.Output[[]GetCloudBackupSnapshotExportBucketsResult]{
		OutputState: i.ToGetCloudBackupSnapshotExportBucketsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupSnapshotExportBucketsResultOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportBucketsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportBucketsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportBucketsResultOutput) ToGetCloudBackupSnapshotExportBucketsResultOutput() GetCloudBackupSnapshotExportBucketsResultOutput {
	return o
}

func (o GetCloudBackupSnapshotExportBucketsResultOutput) ToGetCloudBackupSnapshotExportBucketsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportBucketsResultOutput {
	return o
}

func (o GetCloudBackupSnapshotExportBucketsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotExportBucketsResult] {
	return pulumix.Output[GetCloudBackupSnapshotExportBucketsResult]{
		OutputState: o.OutputState,
	}
}

// Name of the bucket that the provided role ID is authorized to access. You must also specify the `iamRoleId`.
func (o GetCloudBackupSnapshotExportBucketsResultOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportBucketsResult) string { return v.BucketName }).(pulumi.StringOutput)
}

// Name of the provider of the cloud service where Atlas can access the S3 bucket. Atlas only supports `AWS`.
func (o GetCloudBackupSnapshotExportBucketsResultOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportBucketsResult) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// Unique identifier of the snapshot bucket id.
func (o GetCloudBackupSnapshotExportBucketsResultOutput) ExportBucketId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportBucketsResult) string { return v.ExportBucketId }).(pulumi.StringOutput)
}

// Unique identifier of the role that Atlas can use to access the bucket. You must also specify the `bucketName`.
func (o GetCloudBackupSnapshotExportBucketsResultOutput) IamRoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportBucketsResult) string { return v.IamRoleId }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotExportBucketsResultArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportBucketsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportBucketsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportBucketsResultArrayOutput) ToGetCloudBackupSnapshotExportBucketsResultArrayOutput() GetCloudBackupSnapshotExportBucketsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportBucketsResultArrayOutput) ToGetCloudBackupSnapshotExportBucketsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportBucketsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportBucketsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotExportBucketsResult] {
	return pulumix.Output[[]GetCloudBackupSnapshotExportBucketsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupSnapshotExportBucketsResultArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotExportBucketsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotExportBucketsResult {
		return vs[0].([]GetCloudBackupSnapshotExportBucketsResult)[vs[1].(int)]
	}).(GetCloudBackupSnapshotExportBucketsResultOutput)
}

type GetCloudBackupSnapshotExportJobComponent struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	ExportId string `pulumi:"exportId"`
	// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
	ReplicaSetName string `pulumi:"replicaSetName"`
}

// GetCloudBackupSnapshotExportJobComponentInput is an input type that accepts GetCloudBackupSnapshotExportJobComponentArgs and GetCloudBackupSnapshotExportJobComponentOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobComponentInput` via:
//
//	GetCloudBackupSnapshotExportJobComponentArgs{...}
type GetCloudBackupSnapshotExportJobComponentInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobComponentOutput() GetCloudBackupSnapshotExportJobComponentOutput
	ToGetCloudBackupSnapshotExportJobComponentOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobComponentOutput
}

type GetCloudBackupSnapshotExportJobComponentArgs struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	ExportId pulumi.StringInput `pulumi:"exportId"`
	// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
	ReplicaSetName pulumi.StringInput `pulumi:"replicaSetName"`
}

func (GetCloudBackupSnapshotExportJobComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobComponentArgs) ToGetCloudBackupSnapshotExportJobComponentOutput() GetCloudBackupSnapshotExportJobComponentOutput {
	return i.ToGetCloudBackupSnapshotExportJobComponentOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobComponentArgs) ToGetCloudBackupSnapshotExportJobComponentOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobComponentOutput)
}

func (i GetCloudBackupSnapshotExportJobComponentArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotExportJobComponent] {
	return pulumix.Output[GetCloudBackupSnapshotExportJobComponent]{
		OutputState: i.ToGetCloudBackupSnapshotExportJobComponentOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupSnapshotExportJobComponentArrayInput is an input type that accepts GetCloudBackupSnapshotExportJobComponentArray and GetCloudBackupSnapshotExportJobComponentArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobComponentArrayInput` via:
//
//	GetCloudBackupSnapshotExportJobComponentArray{ GetCloudBackupSnapshotExportJobComponentArgs{...} }
type GetCloudBackupSnapshotExportJobComponentArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobComponentArrayOutput() GetCloudBackupSnapshotExportJobComponentArrayOutput
	ToGetCloudBackupSnapshotExportJobComponentArrayOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobComponentArrayOutput
}

type GetCloudBackupSnapshotExportJobComponentArray []GetCloudBackupSnapshotExportJobComponentInput

func (GetCloudBackupSnapshotExportJobComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobComponentArray) ToGetCloudBackupSnapshotExportJobComponentArrayOutput() GetCloudBackupSnapshotExportJobComponentArrayOutput {
	return i.ToGetCloudBackupSnapshotExportJobComponentArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobComponentArray) ToGetCloudBackupSnapshotExportJobComponentArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobComponentArrayOutput)
}

func (i GetCloudBackupSnapshotExportJobComponentArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotExportJobComponent] {
	return pulumix.Output[[]GetCloudBackupSnapshotExportJobComponent]{
		OutputState: i.ToGetCloudBackupSnapshotExportJobComponentArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupSnapshotExportJobComponentOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobComponentOutput) ToGetCloudBackupSnapshotExportJobComponentOutput() GetCloudBackupSnapshotExportJobComponentOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobComponentOutput) ToGetCloudBackupSnapshotExportJobComponentOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobComponentOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobComponentOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotExportJobComponent] {
	return pulumix.Output[GetCloudBackupSnapshotExportJobComponent]{
		OutputState: o.OutputState,
	}
}

// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
func (o GetCloudBackupSnapshotExportJobComponentOutput) ExportId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobComponent) string { return v.ExportId }).(pulumi.StringOutput)
}

// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
func (o GetCloudBackupSnapshotExportJobComponentOutput) ReplicaSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobComponent) string { return v.ReplicaSetName }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotExportJobComponentArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobComponent)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobComponentArrayOutput) ToGetCloudBackupSnapshotExportJobComponentArrayOutput() GetCloudBackupSnapshotExportJobComponentArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobComponentArrayOutput) ToGetCloudBackupSnapshotExportJobComponentArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobComponentArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobComponentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotExportJobComponent] {
	return pulumix.Output[[]GetCloudBackupSnapshotExportJobComponent]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupSnapshotExportJobComponentArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotExportJobComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotExportJobComponent {
		return vs[0].([]GetCloudBackupSnapshotExportJobComponent)[vs[1].(int)]
	}).(GetCloudBackupSnapshotExportJobComponentOutput)
}

type GetCloudBackupSnapshotExportJobCustomData struct {
	// Custom data specified as key in the key and value pair.
	Key string `pulumi:"key"`
	// Value for the key specified using `key`.
	Value string `pulumi:"value"`
}

// GetCloudBackupSnapshotExportJobCustomDataInput is an input type that accepts GetCloudBackupSnapshotExportJobCustomDataArgs and GetCloudBackupSnapshotExportJobCustomDataOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobCustomDataInput` via:
//
//	GetCloudBackupSnapshotExportJobCustomDataArgs{...}
type GetCloudBackupSnapshotExportJobCustomDataInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobCustomDataOutput() GetCloudBackupSnapshotExportJobCustomDataOutput
	ToGetCloudBackupSnapshotExportJobCustomDataOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobCustomDataOutput
}

type GetCloudBackupSnapshotExportJobCustomDataArgs struct {
	// Custom data specified as key in the key and value pair.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for the key specified using `key`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCloudBackupSnapshotExportJobCustomDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobCustomDataArgs) ToGetCloudBackupSnapshotExportJobCustomDataOutput() GetCloudBackupSnapshotExportJobCustomDataOutput {
	return i.ToGetCloudBackupSnapshotExportJobCustomDataOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobCustomDataArgs) ToGetCloudBackupSnapshotExportJobCustomDataOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobCustomDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobCustomDataOutput)
}

func (i GetCloudBackupSnapshotExportJobCustomDataArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotExportJobCustomData] {
	return pulumix.Output[GetCloudBackupSnapshotExportJobCustomData]{
		OutputState: i.ToGetCloudBackupSnapshotExportJobCustomDataOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupSnapshotExportJobCustomDataArrayInput is an input type that accepts GetCloudBackupSnapshotExportJobCustomDataArray and GetCloudBackupSnapshotExportJobCustomDataArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobCustomDataArrayInput` via:
//
//	GetCloudBackupSnapshotExportJobCustomDataArray{ GetCloudBackupSnapshotExportJobCustomDataArgs{...} }
type GetCloudBackupSnapshotExportJobCustomDataArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobCustomDataArrayOutput() GetCloudBackupSnapshotExportJobCustomDataArrayOutput
	ToGetCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobCustomDataArrayOutput
}

type GetCloudBackupSnapshotExportJobCustomDataArray []GetCloudBackupSnapshotExportJobCustomDataInput

func (GetCloudBackupSnapshotExportJobCustomDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobCustomDataArray) ToGetCloudBackupSnapshotExportJobCustomDataArrayOutput() GetCloudBackupSnapshotExportJobCustomDataArrayOutput {
	return i.ToGetCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobCustomDataArray) ToGetCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobCustomDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobCustomDataArrayOutput)
}

func (i GetCloudBackupSnapshotExportJobCustomDataArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotExportJobCustomData] {
	return pulumix.Output[[]GetCloudBackupSnapshotExportJobCustomData]{
		OutputState: i.ToGetCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupSnapshotExportJobCustomDataOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobCustomDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobCustomDataOutput) ToGetCloudBackupSnapshotExportJobCustomDataOutput() GetCloudBackupSnapshotExportJobCustomDataOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobCustomDataOutput) ToGetCloudBackupSnapshotExportJobCustomDataOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobCustomDataOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobCustomDataOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotExportJobCustomData] {
	return pulumix.Output[GetCloudBackupSnapshotExportJobCustomData]{
		OutputState: o.OutputState,
	}
}

// Custom data specified as key in the key and value pair.
func (o GetCloudBackupSnapshotExportJobCustomDataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobCustomData) string { return v.Key }).(pulumi.StringOutput)
}

// Value for the key specified using `key`.
func (o GetCloudBackupSnapshotExportJobCustomDataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobCustomData) string { return v.Value }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotExportJobCustomDataArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobCustomDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobCustomData)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobCustomDataArrayOutput) ToGetCloudBackupSnapshotExportJobCustomDataArrayOutput() GetCloudBackupSnapshotExportJobCustomDataArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobCustomDataArrayOutput) ToGetCloudBackupSnapshotExportJobCustomDataArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobCustomDataArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobCustomDataArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotExportJobCustomData] {
	return pulumix.Output[[]GetCloudBackupSnapshotExportJobCustomData]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupSnapshotExportJobCustomDataArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotExportJobCustomDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotExportJobCustomData {
		return vs[0].([]GetCloudBackupSnapshotExportJobCustomData)[vs[1].(int)]
	}).(GetCloudBackupSnapshotExportJobCustomDataOutput)
}

type GetCloudBackupSnapshotExportJobsResult struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	Components []GetCloudBackupSnapshotExportJobsResultComponent `pulumi:"components"`
	// Timestamp in ISO 8601 date and time format in UTC when the export job was created.
	CreatedAt string `pulumi:"createdAt"`
	// Custom data to include in the metadata file named `.complete` that Atlas uploads to the bucket when the export job finishes. Custom data can be specified as key and value pairs.
	CustomDatas []GetCloudBackupSnapshotExportJobsResultCustomData `pulumi:"customDatas"`
	// Error message, only if the export job failed.
	ErrMsg string `pulumi:"errMsg"`
	// Unique identifier of the AWS bucket to export the Cloud Backup snapshot to.
	ExportBucketId string `pulumi:"exportBucketId"`
	// Unique identifier of the export job.
	// * ` prefix  ` - Full path on the cloud provider bucket to the folder where the snapshot is exported. The path is in the following format:`/exported_snapshots/{ORG-NAME}/{PROJECT-NAME}/{CLUSTER-NAME}/{SNAPSHOT-INITIATION-DATE}/{TIMESTAMP}`
	ExportJobId                     string `pulumi:"exportJobId"`
	ExportStatusExportedCollections int    `pulumi:"exportStatusExportedCollections"`
	ExportStatusTotalCollections    int    `pulumi:"exportStatusTotalCollections"`
	// Timestamp in ISO 8601 date and time format in UTC when the export job completes.
	FinishedAt string `pulumi:"finishedAt"`
	Prefix     string `pulumi:"prefix"`
	// Unique identifier of the Cloud Backup snapshot to export.
	SnapshotId string `pulumi:"snapshotId"`
	// Status of the export job. Value can be one of the following:
	State string `pulumi:"state"`
}

// GetCloudBackupSnapshotExportJobsResultInput is an input type that accepts GetCloudBackupSnapshotExportJobsResultArgs and GetCloudBackupSnapshotExportJobsResultOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobsResultInput` via:
//
//	GetCloudBackupSnapshotExportJobsResultArgs{...}
type GetCloudBackupSnapshotExportJobsResultInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobsResultOutput() GetCloudBackupSnapshotExportJobsResultOutput
	ToGetCloudBackupSnapshotExportJobsResultOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobsResultOutput
}

type GetCloudBackupSnapshotExportJobsResultArgs struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	Components GetCloudBackupSnapshotExportJobsResultComponentArrayInput `pulumi:"components"`
	// Timestamp in ISO 8601 date and time format in UTC when the export job was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Custom data to include in the metadata file named `.complete` that Atlas uploads to the bucket when the export job finishes. Custom data can be specified as key and value pairs.
	CustomDatas GetCloudBackupSnapshotExportJobsResultCustomDataArrayInput `pulumi:"customDatas"`
	// Error message, only if the export job failed.
	ErrMsg pulumi.StringInput `pulumi:"errMsg"`
	// Unique identifier of the AWS bucket to export the Cloud Backup snapshot to.
	ExportBucketId pulumi.StringInput `pulumi:"exportBucketId"`
	// Unique identifier of the export job.
	// * ` prefix  ` - Full path on the cloud provider bucket to the folder where the snapshot is exported. The path is in the following format:`/exported_snapshots/{ORG-NAME}/{PROJECT-NAME}/{CLUSTER-NAME}/{SNAPSHOT-INITIATION-DATE}/{TIMESTAMP}`
	ExportJobId                     pulumi.StringInput `pulumi:"exportJobId"`
	ExportStatusExportedCollections pulumi.IntInput    `pulumi:"exportStatusExportedCollections"`
	ExportStatusTotalCollections    pulumi.IntInput    `pulumi:"exportStatusTotalCollections"`
	// Timestamp in ISO 8601 date and time format in UTC when the export job completes.
	FinishedAt pulumi.StringInput `pulumi:"finishedAt"`
	Prefix     pulumi.StringInput `pulumi:"prefix"`
	// Unique identifier of the Cloud Backup snapshot to export.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Status of the export job. Value can be one of the following:
	State pulumi.StringInput `pulumi:"state"`
}

func (GetCloudBackupSnapshotExportJobsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobsResultArgs) ToGetCloudBackupSnapshotExportJobsResultOutput() GetCloudBackupSnapshotExportJobsResultOutput {
	return i.ToGetCloudBackupSnapshotExportJobsResultOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobsResultArgs) ToGetCloudBackupSnapshotExportJobsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobsResultOutput)
}

func (i GetCloudBackupSnapshotExportJobsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotExportJobsResult] {
	return pulumix.Output[GetCloudBackupSnapshotExportJobsResult]{
		OutputState: i.ToGetCloudBackupSnapshotExportJobsResultOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupSnapshotExportJobsResultArrayInput is an input type that accepts GetCloudBackupSnapshotExportJobsResultArray and GetCloudBackupSnapshotExportJobsResultArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobsResultArrayInput` via:
//
//	GetCloudBackupSnapshotExportJobsResultArray{ GetCloudBackupSnapshotExportJobsResultArgs{...} }
type GetCloudBackupSnapshotExportJobsResultArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobsResultArrayOutput() GetCloudBackupSnapshotExportJobsResultArrayOutput
	ToGetCloudBackupSnapshotExportJobsResultArrayOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobsResultArrayOutput
}

type GetCloudBackupSnapshotExportJobsResultArray []GetCloudBackupSnapshotExportJobsResultInput

func (GetCloudBackupSnapshotExportJobsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobsResultArray) ToGetCloudBackupSnapshotExportJobsResultArrayOutput() GetCloudBackupSnapshotExportJobsResultArrayOutput {
	return i.ToGetCloudBackupSnapshotExportJobsResultArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobsResultArray) ToGetCloudBackupSnapshotExportJobsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobsResultArrayOutput)
}

func (i GetCloudBackupSnapshotExportJobsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotExportJobsResult] {
	return pulumix.Output[[]GetCloudBackupSnapshotExportJobsResult]{
		OutputState: i.ToGetCloudBackupSnapshotExportJobsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupSnapshotExportJobsResultOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobsResultOutput) ToGetCloudBackupSnapshotExportJobsResultOutput() GetCloudBackupSnapshotExportJobsResultOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultOutput) ToGetCloudBackupSnapshotExportJobsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotExportJobsResult] {
	return pulumix.Output[GetCloudBackupSnapshotExportJobsResult]{
		OutputState: o.OutputState,
	}
}

// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
func (o GetCloudBackupSnapshotExportJobsResultOutput) Components() GetCloudBackupSnapshotExportJobsResultComponentArrayOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) []GetCloudBackupSnapshotExportJobsResultComponent {
		return v.Components
	}).(GetCloudBackupSnapshotExportJobsResultComponentArrayOutput)
}

// Timestamp in ISO 8601 date and time format in UTC when the export job was created.
func (o GetCloudBackupSnapshotExportJobsResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Custom data to include in the metadata file named `.complete` that Atlas uploads to the bucket when the export job finishes. Custom data can be specified as key and value pairs.
func (o GetCloudBackupSnapshotExportJobsResultOutput) CustomDatas() GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) []GetCloudBackupSnapshotExportJobsResultCustomData {
		return v.CustomDatas
	}).(GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput)
}

// Error message, only if the export job failed.
func (o GetCloudBackupSnapshotExportJobsResultOutput) ErrMsg() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.ErrMsg }).(pulumi.StringOutput)
}

// Unique identifier of the AWS bucket to export the Cloud Backup snapshot to.
func (o GetCloudBackupSnapshotExportJobsResultOutput) ExportBucketId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.ExportBucketId }).(pulumi.StringOutput)
}

// Unique identifier of the export job.
// * ` prefix  ` - Full path on the cloud provider bucket to the folder where the snapshot is exported. The path is in the following format:`/exported_snapshots/{ORG-NAME}/{PROJECT-NAME}/{CLUSTER-NAME}/{SNAPSHOT-INITIATION-DATE}/{TIMESTAMP}`
func (o GetCloudBackupSnapshotExportJobsResultOutput) ExportJobId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.ExportJobId }).(pulumi.StringOutput)
}

func (o GetCloudBackupSnapshotExportJobsResultOutput) ExportStatusExportedCollections() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) int { return v.ExportStatusExportedCollections }).(pulumi.IntOutput)
}

func (o GetCloudBackupSnapshotExportJobsResultOutput) ExportStatusTotalCollections() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) int { return v.ExportStatusTotalCollections }).(pulumi.IntOutput)
}

// Timestamp in ISO 8601 date and time format in UTC when the export job completes.
func (o GetCloudBackupSnapshotExportJobsResultOutput) FinishedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.FinishedAt }).(pulumi.StringOutput)
}

func (o GetCloudBackupSnapshotExportJobsResultOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.Prefix }).(pulumi.StringOutput)
}

// Unique identifier of the Cloud Backup snapshot to export.
func (o GetCloudBackupSnapshotExportJobsResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Status of the export job. Value can be one of the following:
func (o GetCloudBackupSnapshotExportJobsResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResult) string { return v.State }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotExportJobsResultArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobsResultArrayOutput) ToGetCloudBackupSnapshotExportJobsResultArrayOutput() GetCloudBackupSnapshotExportJobsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultArrayOutput) ToGetCloudBackupSnapshotExportJobsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotExportJobsResult] {
	return pulumix.Output[[]GetCloudBackupSnapshotExportJobsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupSnapshotExportJobsResultArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotExportJobsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotExportJobsResult {
		return vs[0].([]GetCloudBackupSnapshotExportJobsResult)[vs[1].(int)]
	}).(GetCloudBackupSnapshotExportJobsResultOutput)
}

type GetCloudBackupSnapshotExportJobsResultComponent struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	ExportId string `pulumi:"exportId"`
	// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
	ReplicaSetName string `pulumi:"replicaSetName"`
}

// GetCloudBackupSnapshotExportJobsResultComponentInput is an input type that accepts GetCloudBackupSnapshotExportJobsResultComponentArgs and GetCloudBackupSnapshotExportJobsResultComponentOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobsResultComponentInput` via:
//
//	GetCloudBackupSnapshotExportJobsResultComponentArgs{...}
type GetCloudBackupSnapshotExportJobsResultComponentInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobsResultComponentOutput() GetCloudBackupSnapshotExportJobsResultComponentOutput
	ToGetCloudBackupSnapshotExportJobsResultComponentOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobsResultComponentOutput
}

type GetCloudBackupSnapshotExportJobsResultComponentArgs struct {
	// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
	ExportId pulumi.StringInput `pulumi:"exportId"`
	// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
	ReplicaSetName pulumi.StringInput `pulumi:"replicaSetName"`
}

func (GetCloudBackupSnapshotExportJobsResultComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultComponent)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobsResultComponentArgs) ToGetCloudBackupSnapshotExportJobsResultComponentOutput() GetCloudBackupSnapshotExportJobsResultComponentOutput {
	return i.ToGetCloudBackupSnapshotExportJobsResultComponentOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobsResultComponentArgs) ToGetCloudBackupSnapshotExportJobsResultComponentOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobsResultComponentOutput)
}

func (i GetCloudBackupSnapshotExportJobsResultComponentArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotExportJobsResultComponent] {
	return pulumix.Output[GetCloudBackupSnapshotExportJobsResultComponent]{
		OutputState: i.ToGetCloudBackupSnapshotExportJobsResultComponentOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupSnapshotExportJobsResultComponentArrayInput is an input type that accepts GetCloudBackupSnapshotExportJobsResultComponentArray and GetCloudBackupSnapshotExportJobsResultComponentArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobsResultComponentArrayInput` via:
//
//	GetCloudBackupSnapshotExportJobsResultComponentArray{ GetCloudBackupSnapshotExportJobsResultComponentArgs{...} }
type GetCloudBackupSnapshotExportJobsResultComponentArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutput() GetCloudBackupSnapshotExportJobsResultComponentArrayOutput
	ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobsResultComponentArrayOutput
}

type GetCloudBackupSnapshotExportJobsResultComponentArray []GetCloudBackupSnapshotExportJobsResultComponentInput

func (GetCloudBackupSnapshotExportJobsResultComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobsResultComponent)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobsResultComponentArray) ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutput() GetCloudBackupSnapshotExportJobsResultComponentArrayOutput {
	return i.ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobsResultComponentArray) ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobsResultComponentArrayOutput)
}

func (i GetCloudBackupSnapshotExportJobsResultComponentArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotExportJobsResultComponent] {
	return pulumix.Output[[]GetCloudBackupSnapshotExportJobsResultComponent]{
		OutputState: i.ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupSnapshotExportJobsResultComponentOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobsResultComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultComponent)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobsResultComponentOutput) ToGetCloudBackupSnapshotExportJobsResultComponentOutput() GetCloudBackupSnapshotExportJobsResultComponentOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultComponentOutput) ToGetCloudBackupSnapshotExportJobsResultComponentOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultComponentOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultComponentOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotExportJobsResultComponent] {
	return pulumix.Output[GetCloudBackupSnapshotExportJobsResultComponent]{
		OutputState: o.OutputState,
	}
}

// _Returned for sharded clusters only._ Export job details for each replica set in the sharded cluster.
func (o GetCloudBackupSnapshotExportJobsResultComponentOutput) ExportId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResultComponent) string { return v.ExportId }).(pulumi.StringOutput)
}

// _Returned for sharded clusters only._ Unique identifier of the export job for the replica set.
func (o GetCloudBackupSnapshotExportJobsResultComponentOutput) ReplicaSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResultComponent) string { return v.ReplicaSetName }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotExportJobsResultComponentArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobsResultComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobsResultComponent)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobsResultComponentArrayOutput) ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutput() GetCloudBackupSnapshotExportJobsResultComponentArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultComponentArrayOutput) ToGetCloudBackupSnapshotExportJobsResultComponentArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultComponentArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultComponentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotExportJobsResultComponent] {
	return pulumix.Output[[]GetCloudBackupSnapshotExportJobsResultComponent]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupSnapshotExportJobsResultComponentArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotExportJobsResultComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotExportJobsResultComponent {
		return vs[0].([]GetCloudBackupSnapshotExportJobsResultComponent)[vs[1].(int)]
	}).(GetCloudBackupSnapshotExportJobsResultComponentOutput)
}

type GetCloudBackupSnapshotExportJobsResultCustomData struct {
	// Custom data specified as key in the key and value pair.
	Key string `pulumi:"key"`
	// Value for the key specified using `key`.
	Value string `pulumi:"value"`
}

// GetCloudBackupSnapshotExportJobsResultCustomDataInput is an input type that accepts GetCloudBackupSnapshotExportJobsResultCustomDataArgs and GetCloudBackupSnapshotExportJobsResultCustomDataOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobsResultCustomDataInput` via:
//
//	GetCloudBackupSnapshotExportJobsResultCustomDataArgs{...}
type GetCloudBackupSnapshotExportJobsResultCustomDataInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobsResultCustomDataOutput() GetCloudBackupSnapshotExportJobsResultCustomDataOutput
	ToGetCloudBackupSnapshotExportJobsResultCustomDataOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobsResultCustomDataOutput
}

type GetCloudBackupSnapshotExportJobsResultCustomDataArgs struct {
	// Custom data specified as key in the key and value pair.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for the key specified using `key`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCloudBackupSnapshotExportJobsResultCustomDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultCustomData)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobsResultCustomDataArgs) ToGetCloudBackupSnapshotExportJobsResultCustomDataOutput() GetCloudBackupSnapshotExportJobsResultCustomDataOutput {
	return i.ToGetCloudBackupSnapshotExportJobsResultCustomDataOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobsResultCustomDataArgs) ToGetCloudBackupSnapshotExportJobsResultCustomDataOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultCustomDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobsResultCustomDataOutput)
}

func (i GetCloudBackupSnapshotExportJobsResultCustomDataArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotExportJobsResultCustomData] {
	return pulumix.Output[GetCloudBackupSnapshotExportJobsResultCustomData]{
		OutputState: i.ToGetCloudBackupSnapshotExportJobsResultCustomDataOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupSnapshotExportJobsResultCustomDataArrayInput is an input type that accepts GetCloudBackupSnapshotExportJobsResultCustomDataArray and GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotExportJobsResultCustomDataArrayInput` via:
//
//	GetCloudBackupSnapshotExportJobsResultCustomDataArray{ GetCloudBackupSnapshotExportJobsResultCustomDataArgs{...} }
type GetCloudBackupSnapshotExportJobsResultCustomDataArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput() GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput
	ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutputWithContext(context.Context) GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput
}

type GetCloudBackupSnapshotExportJobsResultCustomDataArray []GetCloudBackupSnapshotExportJobsResultCustomDataInput

func (GetCloudBackupSnapshotExportJobsResultCustomDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobsResultCustomData)(nil)).Elem()
}

func (i GetCloudBackupSnapshotExportJobsResultCustomDataArray) ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput() GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput {
	return i.ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotExportJobsResultCustomDataArray) ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput)
}

func (i GetCloudBackupSnapshotExportJobsResultCustomDataArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotExportJobsResultCustomData] {
	return pulumix.Output[[]GetCloudBackupSnapshotExportJobsResultCustomData]{
		OutputState: i.ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupSnapshotExportJobsResultCustomDataOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobsResultCustomDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultCustomData)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobsResultCustomDataOutput) ToGetCloudBackupSnapshotExportJobsResultCustomDataOutput() GetCloudBackupSnapshotExportJobsResultCustomDataOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultCustomDataOutput) ToGetCloudBackupSnapshotExportJobsResultCustomDataOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultCustomDataOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultCustomDataOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotExportJobsResultCustomData] {
	return pulumix.Output[GetCloudBackupSnapshotExportJobsResultCustomData]{
		OutputState: o.OutputState,
	}
}

// Custom data specified as key in the key and value pair.
func (o GetCloudBackupSnapshotExportJobsResultCustomDataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResultCustomData) string { return v.Key }).(pulumi.StringOutput)
}

// Value for the key specified using `key`.
func (o GetCloudBackupSnapshotExportJobsResultCustomDataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotExportJobsResultCustomData) string { return v.Value }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotExportJobsResultCustomData)(nil)).Elem()
}

func (o GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput) ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput() GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput) ToGetCloudBackupSnapshotExportJobsResultCustomDataArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotExportJobsResultCustomData] {
	return pulumix.Output[[]GetCloudBackupSnapshotExportJobsResultCustomData]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotExportJobsResultCustomDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotExportJobsResultCustomData {
		return vs[0].([]GetCloudBackupSnapshotExportJobsResultCustomData)[vs[1].(int)]
	}).(GetCloudBackupSnapshotExportJobsResultCustomDataOutput)
}

type GetCloudBackupSnapshotMember struct {
	// Cloud provider that stores this snapshot.
	CloudProvider string `pulumi:"cloudProvider"`
	// Unique identifier for the sharded cluster snapshot.
	Id string `pulumi:"id"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName string `pulumi:"replicaSetName"`
}

// GetCloudBackupSnapshotMemberInput is an input type that accepts GetCloudBackupSnapshotMemberArgs and GetCloudBackupSnapshotMemberOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotMemberInput` via:
//
//	GetCloudBackupSnapshotMemberArgs{...}
type GetCloudBackupSnapshotMemberInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotMemberOutput() GetCloudBackupSnapshotMemberOutput
	ToGetCloudBackupSnapshotMemberOutputWithContext(context.Context) GetCloudBackupSnapshotMemberOutput
}

type GetCloudBackupSnapshotMemberArgs struct {
	// Cloud provider that stores this snapshot.
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// Unique identifier for the sharded cluster snapshot.
	Id pulumi.StringInput `pulumi:"id"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName pulumi.StringInput `pulumi:"replicaSetName"`
}

func (GetCloudBackupSnapshotMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotMember)(nil)).Elem()
}

func (i GetCloudBackupSnapshotMemberArgs) ToGetCloudBackupSnapshotMemberOutput() GetCloudBackupSnapshotMemberOutput {
	return i.ToGetCloudBackupSnapshotMemberOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotMemberArgs) ToGetCloudBackupSnapshotMemberOutputWithContext(ctx context.Context) GetCloudBackupSnapshotMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotMemberOutput)
}

func (i GetCloudBackupSnapshotMemberArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotMember] {
	return pulumix.Output[GetCloudBackupSnapshotMember]{
		OutputState: i.ToGetCloudBackupSnapshotMemberOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupSnapshotMemberArrayInput is an input type that accepts GetCloudBackupSnapshotMemberArray and GetCloudBackupSnapshotMemberArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotMemberArrayInput` via:
//
//	GetCloudBackupSnapshotMemberArray{ GetCloudBackupSnapshotMemberArgs{...} }
type GetCloudBackupSnapshotMemberArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotMemberArrayOutput() GetCloudBackupSnapshotMemberArrayOutput
	ToGetCloudBackupSnapshotMemberArrayOutputWithContext(context.Context) GetCloudBackupSnapshotMemberArrayOutput
}

type GetCloudBackupSnapshotMemberArray []GetCloudBackupSnapshotMemberInput

func (GetCloudBackupSnapshotMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotMember)(nil)).Elem()
}

func (i GetCloudBackupSnapshotMemberArray) ToGetCloudBackupSnapshotMemberArrayOutput() GetCloudBackupSnapshotMemberArrayOutput {
	return i.ToGetCloudBackupSnapshotMemberArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotMemberArray) ToGetCloudBackupSnapshotMemberArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotMemberArrayOutput)
}

func (i GetCloudBackupSnapshotMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotMember] {
	return pulumix.Output[[]GetCloudBackupSnapshotMember]{
		OutputState: i.ToGetCloudBackupSnapshotMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupSnapshotMemberOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotMember)(nil)).Elem()
}

func (o GetCloudBackupSnapshotMemberOutput) ToGetCloudBackupSnapshotMemberOutput() GetCloudBackupSnapshotMemberOutput {
	return o
}

func (o GetCloudBackupSnapshotMemberOutput) ToGetCloudBackupSnapshotMemberOutputWithContext(ctx context.Context) GetCloudBackupSnapshotMemberOutput {
	return o
}

func (o GetCloudBackupSnapshotMemberOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotMember] {
	return pulumix.Output[GetCloudBackupSnapshotMember]{
		OutputState: o.OutputState,
	}
}

// Cloud provider that stores this snapshot.
func (o GetCloudBackupSnapshotMemberOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotMember) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// Unique identifier for the sharded cluster snapshot.
func (o GetCloudBackupSnapshotMemberOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotMember) string { return v.Id }).(pulumi.StringOutput)
}

// Label given to a shard or config server from which Atlas took this snapshot.
func (o GetCloudBackupSnapshotMemberOutput) ReplicaSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotMember) string { return v.ReplicaSetName }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotMemberArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotMember)(nil)).Elem()
}

func (o GetCloudBackupSnapshotMemberArrayOutput) ToGetCloudBackupSnapshotMemberArrayOutput() GetCloudBackupSnapshotMemberArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotMemberArrayOutput) ToGetCloudBackupSnapshotMemberArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotMemberArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotMember] {
	return pulumix.Output[[]GetCloudBackupSnapshotMember]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupSnapshotMemberArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotMember {
		return vs[0].([]GetCloudBackupSnapshotMember)[vs[1].(int)]
	}).(GetCloudBackupSnapshotMemberOutput)
}

type GetCloudBackupSnapshotRestoreJobsResult struct {
	// Indicates whether the restore job was canceled.
	Cancelled bool `pulumi:"cancelled"`
	// UTC ISO 8601 formatted point in time when Atlas created the restore job.
	CreatedAt string `pulumi:"createdAt"`
	// Type of restore job to create. Possible values are: automated and download.
	DeliveryType string `pulumi:"deliveryType"`
	// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
	DeliveryUrls []string `pulumi:"deliveryUrls"`
	// Indicates whether the restore job expired.
	Expired bool `pulumi:"expired"`
	// UTC ISO 8601 formatted point in time when the restore job expires.
	ExpiresAt string `pulumi:"expiresAt"`
	// UTC ISO 8601 formatted point in time when the restore job completed.
	FinishedAt string `pulumi:"finishedAt"`
	// The unique identifier of the restore job.
	Id                    string `pulumi:"id"`
	OplogInc              int    `pulumi:"oplogInc"`
	OplogTs               int    `pulumi:"oplogTs"`
	PointInTimeUtcSeconds int    `pulumi:"pointInTimeUtcSeconds"`
	// Unique identifier of the source snapshot ID of the restore job.
	SnapshotId string `pulumi:"snapshotId"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
	TargetClusterName string `pulumi:"targetClusterName"`
	// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
	TargetProjectId string `pulumi:"targetProjectId"`
	// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
	Timestamp string `pulumi:"timestamp"`
}

// GetCloudBackupSnapshotRestoreJobsResultInput is an input type that accepts GetCloudBackupSnapshotRestoreJobsResultArgs and GetCloudBackupSnapshotRestoreJobsResultOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotRestoreJobsResultInput` via:
//
//	GetCloudBackupSnapshotRestoreJobsResultArgs{...}
type GetCloudBackupSnapshotRestoreJobsResultInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotRestoreJobsResultOutput() GetCloudBackupSnapshotRestoreJobsResultOutput
	ToGetCloudBackupSnapshotRestoreJobsResultOutputWithContext(context.Context) GetCloudBackupSnapshotRestoreJobsResultOutput
}

type GetCloudBackupSnapshotRestoreJobsResultArgs struct {
	// Indicates whether the restore job was canceled.
	Cancelled pulumi.BoolInput `pulumi:"cancelled"`
	// UTC ISO 8601 formatted point in time when Atlas created the restore job.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Type of restore job to create. Possible values are: automated and download.
	DeliveryType pulumi.StringInput `pulumi:"deliveryType"`
	// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
	DeliveryUrls pulumi.StringArrayInput `pulumi:"deliveryUrls"`
	// Indicates whether the restore job expired.
	Expired pulumi.BoolInput `pulumi:"expired"`
	// UTC ISO 8601 formatted point in time when the restore job expires.
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// UTC ISO 8601 formatted point in time when the restore job completed.
	FinishedAt pulumi.StringInput `pulumi:"finishedAt"`
	// The unique identifier of the restore job.
	Id                    pulumi.StringInput `pulumi:"id"`
	OplogInc              pulumi.IntInput    `pulumi:"oplogInc"`
	OplogTs               pulumi.IntInput    `pulumi:"oplogTs"`
	PointInTimeUtcSeconds pulumi.IntInput    `pulumi:"pointInTimeUtcSeconds"`
	// Unique identifier of the source snapshot ID of the restore job.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
	TargetClusterName pulumi.StringInput `pulumi:"targetClusterName"`
	// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
	TargetProjectId pulumi.StringInput `pulumi:"targetProjectId"`
	// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
}

func (GetCloudBackupSnapshotRestoreJobsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotRestoreJobsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotRestoreJobsResultArgs) ToGetCloudBackupSnapshotRestoreJobsResultOutput() GetCloudBackupSnapshotRestoreJobsResultOutput {
	return i.ToGetCloudBackupSnapshotRestoreJobsResultOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotRestoreJobsResultArgs) ToGetCloudBackupSnapshotRestoreJobsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotRestoreJobsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotRestoreJobsResultOutput)
}

func (i GetCloudBackupSnapshotRestoreJobsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotRestoreJobsResult] {
	return pulumix.Output[GetCloudBackupSnapshotRestoreJobsResult]{
		OutputState: i.ToGetCloudBackupSnapshotRestoreJobsResultOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupSnapshotRestoreJobsResultArrayInput is an input type that accepts GetCloudBackupSnapshotRestoreJobsResultArray and GetCloudBackupSnapshotRestoreJobsResultArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotRestoreJobsResultArrayInput` via:
//
//	GetCloudBackupSnapshotRestoreJobsResultArray{ GetCloudBackupSnapshotRestoreJobsResultArgs{...} }
type GetCloudBackupSnapshotRestoreJobsResultArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotRestoreJobsResultArrayOutput() GetCloudBackupSnapshotRestoreJobsResultArrayOutput
	ToGetCloudBackupSnapshotRestoreJobsResultArrayOutputWithContext(context.Context) GetCloudBackupSnapshotRestoreJobsResultArrayOutput
}

type GetCloudBackupSnapshotRestoreJobsResultArray []GetCloudBackupSnapshotRestoreJobsResultInput

func (GetCloudBackupSnapshotRestoreJobsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotRestoreJobsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotRestoreJobsResultArray) ToGetCloudBackupSnapshotRestoreJobsResultArrayOutput() GetCloudBackupSnapshotRestoreJobsResultArrayOutput {
	return i.ToGetCloudBackupSnapshotRestoreJobsResultArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotRestoreJobsResultArray) ToGetCloudBackupSnapshotRestoreJobsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotRestoreJobsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotRestoreJobsResultArrayOutput)
}

func (i GetCloudBackupSnapshotRestoreJobsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotRestoreJobsResult] {
	return pulumix.Output[[]GetCloudBackupSnapshotRestoreJobsResult]{
		OutputState: i.ToGetCloudBackupSnapshotRestoreJobsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupSnapshotRestoreJobsResultOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotRestoreJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotRestoreJobsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotRestoreJobsResultOutput) ToGetCloudBackupSnapshotRestoreJobsResultOutput() GetCloudBackupSnapshotRestoreJobsResultOutput {
	return o
}

func (o GetCloudBackupSnapshotRestoreJobsResultOutput) ToGetCloudBackupSnapshotRestoreJobsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotRestoreJobsResultOutput {
	return o
}

func (o GetCloudBackupSnapshotRestoreJobsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotRestoreJobsResult] {
	return pulumix.Output[GetCloudBackupSnapshotRestoreJobsResult]{
		OutputState: o.OutputState,
	}
}

// Indicates whether the restore job was canceled.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) Cancelled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) bool { return v.Cancelled }).(pulumi.BoolOutput)
}

// UTC ISO 8601 formatted point in time when Atlas created the restore job.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Type of restore job to create. Possible values are: automated and download.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) DeliveryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.DeliveryType }).(pulumi.StringOutput)
}

// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) DeliveryUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) []string { return v.DeliveryUrls }).(pulumi.StringArrayOutput)
}

// Indicates whether the restore job expired.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) Expired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) bool { return v.Expired }).(pulumi.BoolOutput)
}

// UTC ISO 8601 formatted point in time when the restore job expires.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// UTC ISO 8601 formatted point in time when the restore job completed.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) FinishedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.FinishedAt }).(pulumi.StringOutput)
}

// The unique identifier of the restore job.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudBackupSnapshotRestoreJobsResultOutput) OplogInc() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) int { return v.OplogInc }).(pulumi.IntOutput)
}

func (o GetCloudBackupSnapshotRestoreJobsResultOutput) OplogTs() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) int { return v.OplogTs }).(pulumi.IntOutput)
}

func (o GetCloudBackupSnapshotRestoreJobsResultOutput) PointInTimeUtcSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) int { return v.PointInTimeUtcSeconds }).(pulumi.IntOutput)
}

// Unique identifier of the source snapshot ID of the restore job.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) TargetClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.TargetClusterName }).(pulumi.StringOutput)
}

// Name of the target Atlas project of the restore job. Only visible if deliveryType is automated.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) TargetProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.TargetProjectId }).(pulumi.StringOutput)
}

// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
func (o GetCloudBackupSnapshotRestoreJobsResultOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotRestoreJobsResult) string { return v.Timestamp }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotRestoreJobsResultArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotRestoreJobsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotRestoreJobsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotRestoreJobsResultArrayOutput) ToGetCloudBackupSnapshotRestoreJobsResultArrayOutput() GetCloudBackupSnapshotRestoreJobsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotRestoreJobsResultArrayOutput) ToGetCloudBackupSnapshotRestoreJobsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotRestoreJobsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotRestoreJobsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotRestoreJobsResult] {
	return pulumix.Output[[]GetCloudBackupSnapshotRestoreJobsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupSnapshotRestoreJobsResultArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotRestoreJobsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotRestoreJobsResult {
		return vs[0].([]GetCloudBackupSnapshotRestoreJobsResult)[vs[1].(int)]
	}).(GetCloudBackupSnapshotRestoreJobsResultOutput)
}

type GetCloudBackupSnapshotsResult struct {
	// Cloud provider that stores this snapshot.
	CloudProvider string `pulumi:"cloudProvider"`
	// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
	CreatedAt string `pulumi:"createdAt"`
	// UDescription of the snapshot. Only present for on-demand snapshots.
	Description string `pulumi:"description"`
	// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
	ExpiresAt string `pulumi:"expiresAt"`
	// Unique identifier for the sharded cluster snapshot.
	Id string `pulumi:"id"`
	// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
	MasterKeyUuid string `pulumi:"masterKeyUuid"`
	// Block of List of snapshots and the cloud provider where the snapshots are stored. See below
	Members []GetCloudBackupSnapshotsResultMember `pulumi:"members"`
	// Version of the MongoDB server.
	MongodVersion string `pulumi:"mongodVersion"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName string `pulumi:"replicaSetName"`
	// Unique identifiers of the snapshots created for the shards and config server for a sharded cluster.
	SnapshotIds []string `pulumi:"snapshotIds"`
	// Specified the type of snapshot. Valid values are onDemand and scheduled.
	SnapshotType string `pulumi:"snapshotType"`
	// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
	Status string `pulumi:"status"`
	// Specifies the size of the snapshot in bytes.
	StorageSizeBytes int `pulumi:"storageSizeBytes"`
	// Specifies the type of cluster: replicaSet or shardedCluster.
	Type string `pulumi:"type"`
}

// GetCloudBackupSnapshotsResultInput is an input type that accepts GetCloudBackupSnapshotsResultArgs and GetCloudBackupSnapshotsResultOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotsResultInput` via:
//
//	GetCloudBackupSnapshotsResultArgs{...}
type GetCloudBackupSnapshotsResultInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotsResultOutput() GetCloudBackupSnapshotsResultOutput
	ToGetCloudBackupSnapshotsResultOutputWithContext(context.Context) GetCloudBackupSnapshotsResultOutput
}

type GetCloudBackupSnapshotsResultArgs struct {
	// Cloud provider that stores this snapshot.
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// UDescription of the snapshot. Only present for on-demand snapshots.
	Description pulumi.StringInput `pulumi:"description"`
	// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// Unique identifier for the sharded cluster snapshot.
	Id pulumi.StringInput `pulumi:"id"`
	// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
	MasterKeyUuid pulumi.StringInput `pulumi:"masterKeyUuid"`
	// Block of List of snapshots and the cloud provider where the snapshots are stored. See below
	Members GetCloudBackupSnapshotsResultMemberArrayInput `pulumi:"members"`
	// Version of the MongoDB server.
	MongodVersion pulumi.StringInput `pulumi:"mongodVersion"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName pulumi.StringInput `pulumi:"replicaSetName"`
	// Unique identifiers of the snapshots created for the shards and config server for a sharded cluster.
	SnapshotIds pulumi.StringArrayInput `pulumi:"snapshotIds"`
	// Specified the type of snapshot. Valid values are onDemand and scheduled.
	SnapshotType pulumi.StringInput `pulumi:"snapshotType"`
	// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
	Status pulumi.StringInput `pulumi:"status"`
	// Specifies the size of the snapshot in bytes.
	StorageSizeBytes pulumi.IntInput `pulumi:"storageSizeBytes"`
	// Specifies the type of cluster: replicaSet or shardedCluster.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCloudBackupSnapshotsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotsResultArgs) ToGetCloudBackupSnapshotsResultOutput() GetCloudBackupSnapshotsResultOutput {
	return i.ToGetCloudBackupSnapshotsResultOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotsResultArgs) ToGetCloudBackupSnapshotsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotsResultOutput)
}

func (i GetCloudBackupSnapshotsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotsResult] {
	return pulumix.Output[GetCloudBackupSnapshotsResult]{
		OutputState: i.ToGetCloudBackupSnapshotsResultOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupSnapshotsResultArrayInput is an input type that accepts GetCloudBackupSnapshotsResultArray and GetCloudBackupSnapshotsResultArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotsResultArrayInput` via:
//
//	GetCloudBackupSnapshotsResultArray{ GetCloudBackupSnapshotsResultArgs{...} }
type GetCloudBackupSnapshotsResultArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotsResultArrayOutput() GetCloudBackupSnapshotsResultArrayOutput
	ToGetCloudBackupSnapshotsResultArrayOutputWithContext(context.Context) GetCloudBackupSnapshotsResultArrayOutput
}

type GetCloudBackupSnapshotsResultArray []GetCloudBackupSnapshotsResultInput

func (GetCloudBackupSnapshotsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotsResult)(nil)).Elem()
}

func (i GetCloudBackupSnapshotsResultArray) ToGetCloudBackupSnapshotsResultArrayOutput() GetCloudBackupSnapshotsResultArrayOutput {
	return i.ToGetCloudBackupSnapshotsResultArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotsResultArray) ToGetCloudBackupSnapshotsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotsResultArrayOutput)
}

func (i GetCloudBackupSnapshotsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotsResult] {
	return pulumix.Output[[]GetCloudBackupSnapshotsResult]{
		OutputState: i.ToGetCloudBackupSnapshotsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupSnapshotsResultOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotsResultOutput) ToGetCloudBackupSnapshotsResultOutput() GetCloudBackupSnapshotsResultOutput {
	return o
}

func (o GetCloudBackupSnapshotsResultOutput) ToGetCloudBackupSnapshotsResultOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultOutput {
	return o
}

func (o GetCloudBackupSnapshotsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotsResult] {
	return pulumix.Output[GetCloudBackupSnapshotsResult]{
		OutputState: o.OutputState,
	}
}

// Cloud provider that stores this snapshot.
func (o GetCloudBackupSnapshotsResultOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
func (o GetCloudBackupSnapshotsResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// UDescription of the snapshot. Only present for on-demand snapshots.
func (o GetCloudBackupSnapshotsResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.Description }).(pulumi.StringOutput)
}

// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
func (o GetCloudBackupSnapshotsResultOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// Unique identifier for the sharded cluster snapshot.
func (o GetCloudBackupSnapshotsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
func (o GetCloudBackupSnapshotsResultOutput) MasterKeyUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.MasterKeyUuid }).(pulumi.StringOutput)
}

// Block of List of snapshots and the cloud provider where the snapshots are stored. See below
func (o GetCloudBackupSnapshotsResultOutput) Members() GetCloudBackupSnapshotsResultMemberArrayOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) []GetCloudBackupSnapshotsResultMember { return v.Members }).(GetCloudBackupSnapshotsResultMemberArrayOutput)
}

// Version of the MongoDB server.
func (o GetCloudBackupSnapshotsResultOutput) MongodVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.MongodVersion }).(pulumi.StringOutput)
}

// Label given to a shard or config server from which Atlas took this snapshot.
func (o GetCloudBackupSnapshotsResultOutput) ReplicaSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.ReplicaSetName }).(pulumi.StringOutput)
}

// Unique identifiers of the snapshots created for the shards and config server for a sharded cluster.
func (o GetCloudBackupSnapshotsResultOutput) SnapshotIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) []string { return v.SnapshotIds }).(pulumi.StringArrayOutput)
}

// Specified the type of snapshot. Valid values are onDemand and scheduled.
func (o GetCloudBackupSnapshotsResultOutput) SnapshotType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.SnapshotType }).(pulumi.StringOutput)
}

// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
func (o GetCloudBackupSnapshotsResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.Status }).(pulumi.StringOutput)
}

// Specifies the size of the snapshot in bytes.
func (o GetCloudBackupSnapshotsResultOutput) StorageSizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) int { return v.StorageSizeBytes }).(pulumi.IntOutput)
}

// Specifies the type of cluster: replicaSet or shardedCluster.
func (o GetCloudBackupSnapshotsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResult) string { return v.Type }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotsResultArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotsResult)(nil)).Elem()
}

func (o GetCloudBackupSnapshotsResultArrayOutput) ToGetCloudBackupSnapshotsResultArrayOutput() GetCloudBackupSnapshotsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotsResultArrayOutput) ToGetCloudBackupSnapshotsResultArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotsResult] {
	return pulumix.Output[[]GetCloudBackupSnapshotsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupSnapshotsResultArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotsResult {
		return vs[0].([]GetCloudBackupSnapshotsResult)[vs[1].(int)]
	}).(GetCloudBackupSnapshotsResultOutput)
}

type GetCloudBackupSnapshotsResultMember struct {
	// Cloud provider that stores this snapshot.
	CloudProvider string `pulumi:"cloudProvider"`
	// Unique identifier for the sharded cluster snapshot.
	Id string `pulumi:"id"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName string `pulumi:"replicaSetName"`
}

// GetCloudBackupSnapshotsResultMemberInput is an input type that accepts GetCloudBackupSnapshotsResultMemberArgs and GetCloudBackupSnapshotsResultMemberOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotsResultMemberInput` via:
//
//	GetCloudBackupSnapshotsResultMemberArgs{...}
type GetCloudBackupSnapshotsResultMemberInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotsResultMemberOutput() GetCloudBackupSnapshotsResultMemberOutput
	ToGetCloudBackupSnapshotsResultMemberOutputWithContext(context.Context) GetCloudBackupSnapshotsResultMemberOutput
}

type GetCloudBackupSnapshotsResultMemberArgs struct {
	// Cloud provider that stores this snapshot.
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// Unique identifier for the sharded cluster snapshot.
	Id pulumi.StringInput `pulumi:"id"`
	// Label given to a shard or config server from which Atlas took this snapshot.
	ReplicaSetName pulumi.StringInput `pulumi:"replicaSetName"`
}

func (GetCloudBackupSnapshotsResultMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotsResultMember)(nil)).Elem()
}

func (i GetCloudBackupSnapshotsResultMemberArgs) ToGetCloudBackupSnapshotsResultMemberOutput() GetCloudBackupSnapshotsResultMemberOutput {
	return i.ToGetCloudBackupSnapshotsResultMemberOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotsResultMemberArgs) ToGetCloudBackupSnapshotsResultMemberOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotsResultMemberOutput)
}

func (i GetCloudBackupSnapshotsResultMemberArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotsResultMember] {
	return pulumix.Output[GetCloudBackupSnapshotsResultMember]{
		OutputState: i.ToGetCloudBackupSnapshotsResultMemberOutputWithContext(ctx).OutputState,
	}
}

// GetCloudBackupSnapshotsResultMemberArrayInput is an input type that accepts GetCloudBackupSnapshotsResultMemberArray and GetCloudBackupSnapshotsResultMemberArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSnapshotsResultMemberArrayInput` via:
//
//	GetCloudBackupSnapshotsResultMemberArray{ GetCloudBackupSnapshotsResultMemberArgs{...} }
type GetCloudBackupSnapshotsResultMemberArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSnapshotsResultMemberArrayOutput() GetCloudBackupSnapshotsResultMemberArrayOutput
	ToGetCloudBackupSnapshotsResultMemberArrayOutputWithContext(context.Context) GetCloudBackupSnapshotsResultMemberArrayOutput
}

type GetCloudBackupSnapshotsResultMemberArray []GetCloudBackupSnapshotsResultMemberInput

func (GetCloudBackupSnapshotsResultMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotsResultMember)(nil)).Elem()
}

func (i GetCloudBackupSnapshotsResultMemberArray) ToGetCloudBackupSnapshotsResultMemberArrayOutput() GetCloudBackupSnapshotsResultMemberArrayOutput {
	return i.ToGetCloudBackupSnapshotsResultMemberArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSnapshotsResultMemberArray) ToGetCloudBackupSnapshotsResultMemberArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSnapshotsResultMemberArrayOutput)
}

func (i GetCloudBackupSnapshotsResultMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotsResultMember] {
	return pulumix.Output[[]GetCloudBackupSnapshotsResultMember]{
		OutputState: i.ToGetCloudBackupSnapshotsResultMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudBackupSnapshotsResultMemberOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotsResultMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSnapshotsResultMember)(nil)).Elem()
}

func (o GetCloudBackupSnapshotsResultMemberOutput) ToGetCloudBackupSnapshotsResultMemberOutput() GetCloudBackupSnapshotsResultMemberOutput {
	return o
}

func (o GetCloudBackupSnapshotsResultMemberOutput) ToGetCloudBackupSnapshotsResultMemberOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultMemberOutput {
	return o
}

func (o GetCloudBackupSnapshotsResultMemberOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudBackupSnapshotsResultMember] {
	return pulumix.Output[GetCloudBackupSnapshotsResultMember]{
		OutputState: o.OutputState,
	}
}

// Cloud provider that stores this snapshot.
func (o GetCloudBackupSnapshotsResultMemberOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResultMember) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// Unique identifier for the sharded cluster snapshot.
func (o GetCloudBackupSnapshotsResultMemberOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResultMember) string { return v.Id }).(pulumi.StringOutput)
}

// Label given to a shard or config server from which Atlas took this snapshot.
func (o GetCloudBackupSnapshotsResultMemberOutput) ReplicaSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSnapshotsResultMember) string { return v.ReplicaSetName }).(pulumi.StringOutput)
}

type GetCloudBackupSnapshotsResultMemberArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSnapshotsResultMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSnapshotsResultMember)(nil)).Elem()
}

func (o GetCloudBackupSnapshotsResultMemberArrayOutput) ToGetCloudBackupSnapshotsResultMemberArrayOutput() GetCloudBackupSnapshotsResultMemberArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotsResultMemberArrayOutput) ToGetCloudBackupSnapshotsResultMemberArrayOutputWithContext(ctx context.Context) GetCloudBackupSnapshotsResultMemberArrayOutput {
	return o
}

func (o GetCloudBackupSnapshotsResultMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudBackupSnapshotsResultMember] {
	return pulumix.Output[[]GetCloudBackupSnapshotsResultMember]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudBackupSnapshotsResultMemberArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSnapshotsResultMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSnapshotsResultMember {
		return vs[0].([]GetCloudBackupSnapshotsResultMember)[vs[1].(int)]
	}).(GetCloudBackupSnapshotsResultMemberOutput)
}

type GetCloudProviderAccessAwsIamRole struct {
	// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
	AtlasAssumedRoleExternalId string `pulumi:"atlasAssumedRoleExternalId"`
	// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
	AtlasAwsAccountArn string `pulumi:"atlasAwsAccountArn"`
	// Date on which this role was authorized.
	AuthorizedDate string `pulumi:"authorizedDate"`
	// Date on which this role was created.
	CreatedDate string `pulumi:"createdDate"`
	// Atlas features this AWS IAM role is linked to.
	FeatureUsages []GetCloudProviderAccessAwsIamRoleFeatureUsage `pulumi:"featureUsages"`
	// ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account.
	IamAssumedRoleArn string `pulumi:"iamAssumedRoleArn"`
	// Name of the cloud provider. Currently limited to AWS.
	ProviderName string `pulumi:"providerName"`
	// Unique ID of this role.
	RoleId string `pulumi:"roleId"`
}

// GetCloudProviderAccessAwsIamRoleInput is an input type that accepts GetCloudProviderAccessAwsIamRoleArgs and GetCloudProviderAccessAwsIamRoleOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessAwsIamRoleInput` via:
//
//	GetCloudProviderAccessAwsIamRoleArgs{...}
type GetCloudProviderAccessAwsIamRoleInput interface {
	pulumi.Input

	ToGetCloudProviderAccessAwsIamRoleOutput() GetCloudProviderAccessAwsIamRoleOutput
	ToGetCloudProviderAccessAwsIamRoleOutputWithContext(context.Context) GetCloudProviderAccessAwsIamRoleOutput
}

type GetCloudProviderAccessAwsIamRoleArgs struct {
	// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
	AtlasAssumedRoleExternalId pulumi.StringInput `pulumi:"atlasAssumedRoleExternalId"`
	// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
	AtlasAwsAccountArn pulumi.StringInput `pulumi:"atlasAwsAccountArn"`
	// Date on which this role was authorized.
	AuthorizedDate pulumi.StringInput `pulumi:"authorizedDate"`
	// Date on which this role was created.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// Atlas features this AWS IAM role is linked to.
	FeatureUsages GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput `pulumi:"featureUsages"`
	// ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account.
	IamAssumedRoleArn pulumi.StringInput `pulumi:"iamAssumedRoleArn"`
	// Name of the cloud provider. Currently limited to AWS.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Unique ID of this role.
	RoleId pulumi.StringInput `pulumi:"roleId"`
}

func (GetCloudProviderAccessAwsIamRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessAwsIamRole)(nil)).Elem()
}

func (i GetCloudProviderAccessAwsIamRoleArgs) ToGetCloudProviderAccessAwsIamRoleOutput() GetCloudProviderAccessAwsIamRoleOutput {
	return i.ToGetCloudProviderAccessAwsIamRoleOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessAwsIamRoleArgs) ToGetCloudProviderAccessAwsIamRoleOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessAwsIamRoleOutput)
}

func (i GetCloudProviderAccessAwsIamRoleArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudProviderAccessAwsIamRole] {
	return pulumix.Output[GetCloudProviderAccessAwsIamRole]{
		OutputState: i.ToGetCloudProviderAccessAwsIamRoleOutputWithContext(ctx).OutputState,
	}
}

// GetCloudProviderAccessAwsIamRoleArrayInput is an input type that accepts GetCloudProviderAccessAwsIamRoleArray and GetCloudProviderAccessAwsIamRoleArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessAwsIamRoleArrayInput` via:
//
//	GetCloudProviderAccessAwsIamRoleArray{ GetCloudProviderAccessAwsIamRoleArgs{...} }
type GetCloudProviderAccessAwsIamRoleArrayInput interface {
	pulumi.Input

	ToGetCloudProviderAccessAwsIamRoleArrayOutput() GetCloudProviderAccessAwsIamRoleArrayOutput
	ToGetCloudProviderAccessAwsIamRoleArrayOutputWithContext(context.Context) GetCloudProviderAccessAwsIamRoleArrayOutput
}

type GetCloudProviderAccessAwsIamRoleArray []GetCloudProviderAccessAwsIamRoleInput

func (GetCloudProviderAccessAwsIamRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessAwsIamRole)(nil)).Elem()
}

func (i GetCloudProviderAccessAwsIamRoleArray) ToGetCloudProviderAccessAwsIamRoleArrayOutput() GetCloudProviderAccessAwsIamRoleArrayOutput {
	return i.ToGetCloudProviderAccessAwsIamRoleArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessAwsIamRoleArray) ToGetCloudProviderAccessAwsIamRoleArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessAwsIamRoleArrayOutput)
}

func (i GetCloudProviderAccessAwsIamRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudProviderAccessAwsIamRole] {
	return pulumix.Output[[]GetCloudProviderAccessAwsIamRole]{
		OutputState: i.ToGetCloudProviderAccessAwsIamRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudProviderAccessAwsIamRoleOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessAwsIamRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessAwsIamRole)(nil)).Elem()
}

func (o GetCloudProviderAccessAwsIamRoleOutput) ToGetCloudProviderAccessAwsIamRoleOutput() GetCloudProviderAccessAwsIamRoleOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleOutput) ToGetCloudProviderAccessAwsIamRoleOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudProviderAccessAwsIamRole] {
	return pulumix.Output[GetCloudProviderAccessAwsIamRole]{
		OutputState: o.OutputState,
	}
}

// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
func (o GetCloudProviderAccessAwsIamRoleOutput) AtlasAssumedRoleExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.AtlasAssumedRoleExternalId }).(pulumi.StringOutput)
}

// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
func (o GetCloudProviderAccessAwsIamRoleOutput) AtlasAwsAccountArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.AtlasAwsAccountArn }).(pulumi.StringOutput)
}

// Date on which this role was authorized.
func (o GetCloudProviderAccessAwsIamRoleOutput) AuthorizedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.AuthorizedDate }).(pulumi.StringOutput)
}

// Date on which this role was created.
func (o GetCloudProviderAccessAwsIamRoleOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// Atlas features this AWS IAM role is linked to.
func (o GetCloudProviderAccessAwsIamRoleOutput) FeatureUsages() GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) []GetCloudProviderAccessAwsIamRoleFeatureUsage {
		return v.FeatureUsages
	}).(GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput)
}

// ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account.
func (o GetCloudProviderAccessAwsIamRoleOutput) IamAssumedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.IamAssumedRoleArn }).(pulumi.StringOutput)
}

// Name of the cloud provider. Currently limited to AWS.
func (o GetCloudProviderAccessAwsIamRoleOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Unique ID of this role.
func (o GetCloudProviderAccessAwsIamRoleOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.RoleId }).(pulumi.StringOutput)
}

type GetCloudProviderAccessAwsIamRoleArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessAwsIamRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessAwsIamRole)(nil)).Elem()
}

func (o GetCloudProviderAccessAwsIamRoleArrayOutput) ToGetCloudProviderAccessAwsIamRoleArrayOutput() GetCloudProviderAccessAwsIamRoleArrayOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleArrayOutput) ToGetCloudProviderAccessAwsIamRoleArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleArrayOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudProviderAccessAwsIamRole] {
	return pulumix.Output[[]GetCloudProviderAccessAwsIamRole]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudProviderAccessAwsIamRoleArrayOutput) Index(i pulumi.IntInput) GetCloudProviderAccessAwsIamRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderAccessAwsIamRole {
		return vs[0].([]GetCloudProviderAccessAwsIamRole)[vs[1].(int)]
	}).(GetCloudProviderAccessAwsIamRoleOutput)
}

type GetCloudProviderAccessAwsIamRoleFeatureUsage struct {
	FeatureId   map[string]interface{} `pulumi:"featureId"`
	FeatureType string                 `pulumi:"featureType"`
}

// GetCloudProviderAccessAwsIamRoleFeatureUsageInput is an input type that accepts GetCloudProviderAccessAwsIamRoleFeatureUsageArgs and GetCloudProviderAccessAwsIamRoleFeatureUsageOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessAwsIamRoleFeatureUsageInput` via:
//
//	GetCloudProviderAccessAwsIamRoleFeatureUsageArgs{...}
type GetCloudProviderAccessAwsIamRoleFeatureUsageInput interface {
	pulumi.Input

	ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageOutput
	ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutputWithContext(context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageOutput
}

type GetCloudProviderAccessAwsIamRoleFeatureUsageArgs struct {
	FeatureId   pulumi.MapInput    `pulumi:"featureId"`
	FeatureType pulumi.StringInput `pulumi:"featureType"`
}

func (GetCloudProviderAccessAwsIamRoleFeatureUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleFeatureUsage)(nil)).Elem()
}

func (i GetCloudProviderAccessAwsIamRoleFeatureUsageArgs) ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return i.ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessAwsIamRoleFeatureUsageArgs) ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessAwsIamRoleFeatureUsageOutput)
}

func (i GetCloudProviderAccessAwsIamRoleFeatureUsageArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudProviderAccessAwsIamRoleFeatureUsage] {
	return pulumix.Output[GetCloudProviderAccessAwsIamRoleFeatureUsage]{
		OutputState: i.ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutputWithContext(ctx).OutputState,
	}
}

// GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput is an input type that accepts GetCloudProviderAccessAwsIamRoleFeatureUsageArray and GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput` via:
//
//	GetCloudProviderAccessAwsIamRoleFeatureUsageArray{ GetCloudProviderAccessAwsIamRoleFeatureUsageArgs{...} }
type GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput interface {
	pulumi.Input

	ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput
	ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutputWithContext(context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput
}

type GetCloudProviderAccessAwsIamRoleFeatureUsageArray []GetCloudProviderAccessAwsIamRoleFeatureUsageInput

func (GetCloudProviderAccessAwsIamRoleFeatureUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessAwsIamRoleFeatureUsage)(nil)).Elem()
}

func (i GetCloudProviderAccessAwsIamRoleFeatureUsageArray) ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return i.ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessAwsIamRoleFeatureUsageArray) ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput)
}

func (i GetCloudProviderAccessAwsIamRoleFeatureUsageArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudProviderAccessAwsIamRoleFeatureUsage] {
	return pulumix.Output[[]GetCloudProviderAccessAwsIamRoleFeatureUsage]{
		OutputState: i.ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudProviderAccessAwsIamRoleFeatureUsageOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleFeatureUsage)(nil)).Elem()
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudProviderAccessAwsIamRoleFeatureUsage] {
	return pulumix.Output[GetCloudProviderAccessAwsIamRoleFeatureUsage]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) FeatureId() pulumi.MapOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRoleFeatureUsage) map[string]interface{} { return v.FeatureId }).(pulumi.MapOutput)
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) FeatureType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRoleFeatureUsage) string { return v.FeatureType }).(pulumi.StringOutput)
}

type GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessAwsIamRoleFeatureUsage)(nil)).Elem()
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput) ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput) ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudProviderAccessAwsIamRoleFeatureUsage] {
	return pulumix.Output[[]GetCloudProviderAccessAwsIamRoleFeatureUsage]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput) Index(i pulumi.IntInput) GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderAccessAwsIamRoleFeatureUsage {
		return vs[0].([]GetCloudProviderAccessAwsIamRoleFeatureUsage)[vs[1].(int)]
	}).(GetCloudProviderAccessAwsIamRoleFeatureUsageOutput)
}

type GetCloudProviderAccessSetupAwsConfig struct {
	// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
	AtlasAssumedRoleExternalId string `pulumi:"atlasAssumedRoleExternalId"`
	// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
	AtlasAwsAccountArn string `pulumi:"atlasAwsAccountArn"`
}

// GetCloudProviderAccessSetupAwsConfigInput is an input type that accepts GetCloudProviderAccessSetupAwsConfigArgs and GetCloudProviderAccessSetupAwsConfigOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessSetupAwsConfigInput` via:
//
//	GetCloudProviderAccessSetupAwsConfigArgs{...}
type GetCloudProviderAccessSetupAwsConfigInput interface {
	pulumi.Input

	ToGetCloudProviderAccessSetupAwsConfigOutput() GetCloudProviderAccessSetupAwsConfigOutput
	ToGetCloudProviderAccessSetupAwsConfigOutputWithContext(context.Context) GetCloudProviderAccessSetupAwsConfigOutput
}

type GetCloudProviderAccessSetupAwsConfigArgs struct {
	// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
	AtlasAssumedRoleExternalId pulumi.StringInput `pulumi:"atlasAssumedRoleExternalId"`
	// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
	AtlasAwsAccountArn pulumi.StringInput `pulumi:"atlasAwsAccountArn"`
}

func (GetCloudProviderAccessSetupAwsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (i GetCloudProviderAccessSetupAwsConfigArgs) ToGetCloudProviderAccessSetupAwsConfigOutput() GetCloudProviderAccessSetupAwsConfigOutput {
	return i.ToGetCloudProviderAccessSetupAwsConfigOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessSetupAwsConfigArgs) ToGetCloudProviderAccessSetupAwsConfigOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAwsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessSetupAwsConfigOutput)
}

func (i GetCloudProviderAccessSetupAwsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudProviderAccessSetupAwsConfig] {
	return pulumix.Output[GetCloudProviderAccessSetupAwsConfig]{
		OutputState: i.ToGetCloudProviderAccessSetupAwsConfigOutputWithContext(ctx).OutputState,
	}
}

// GetCloudProviderAccessSetupAwsConfigArrayInput is an input type that accepts GetCloudProviderAccessSetupAwsConfigArray and GetCloudProviderAccessSetupAwsConfigArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessSetupAwsConfigArrayInput` via:
//
//	GetCloudProviderAccessSetupAwsConfigArray{ GetCloudProviderAccessSetupAwsConfigArgs{...} }
type GetCloudProviderAccessSetupAwsConfigArrayInput interface {
	pulumi.Input

	ToGetCloudProviderAccessSetupAwsConfigArrayOutput() GetCloudProviderAccessSetupAwsConfigArrayOutput
	ToGetCloudProviderAccessSetupAwsConfigArrayOutputWithContext(context.Context) GetCloudProviderAccessSetupAwsConfigArrayOutput
}

type GetCloudProviderAccessSetupAwsConfigArray []GetCloudProviderAccessSetupAwsConfigInput

func (GetCloudProviderAccessSetupAwsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (i GetCloudProviderAccessSetupAwsConfigArray) ToGetCloudProviderAccessSetupAwsConfigArrayOutput() GetCloudProviderAccessSetupAwsConfigArrayOutput {
	return i.ToGetCloudProviderAccessSetupAwsConfigArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessSetupAwsConfigArray) ToGetCloudProviderAccessSetupAwsConfigArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAwsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessSetupAwsConfigArrayOutput)
}

func (i GetCloudProviderAccessSetupAwsConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudProviderAccessSetupAwsConfig] {
	return pulumix.Output[[]GetCloudProviderAccessSetupAwsConfig]{
		OutputState: i.ToGetCloudProviderAccessSetupAwsConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudProviderAccessSetupAwsConfigOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessSetupAwsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (o GetCloudProviderAccessSetupAwsConfigOutput) ToGetCloudProviderAccessSetupAwsConfigOutput() GetCloudProviderAccessSetupAwsConfigOutput {
	return o
}

func (o GetCloudProviderAccessSetupAwsConfigOutput) ToGetCloudProviderAccessSetupAwsConfigOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAwsConfigOutput {
	return o
}

func (o GetCloudProviderAccessSetupAwsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudProviderAccessSetupAwsConfig] {
	return pulumix.Output[GetCloudProviderAccessSetupAwsConfig]{
		OutputState: o.OutputState,
	}
}

// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
func (o GetCloudProviderAccessSetupAwsConfigOutput) AtlasAssumedRoleExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessSetupAwsConfig) string { return v.AtlasAssumedRoleExternalId }).(pulumi.StringOutput)
}

// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
func (o GetCloudProviderAccessSetupAwsConfigOutput) AtlasAwsAccountArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessSetupAwsConfig) string { return v.AtlasAwsAccountArn }).(pulumi.StringOutput)
}

type GetCloudProviderAccessSetupAwsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessSetupAwsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (o GetCloudProviderAccessSetupAwsConfigArrayOutput) ToGetCloudProviderAccessSetupAwsConfigArrayOutput() GetCloudProviderAccessSetupAwsConfigArrayOutput {
	return o
}

func (o GetCloudProviderAccessSetupAwsConfigArrayOutput) ToGetCloudProviderAccessSetupAwsConfigArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAwsConfigArrayOutput {
	return o
}

func (o GetCloudProviderAccessSetupAwsConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudProviderAccessSetupAwsConfig] {
	return pulumix.Output[[]GetCloudProviderAccessSetupAwsConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudProviderAccessSetupAwsConfigArrayOutput) Index(i pulumi.IntInput) GetCloudProviderAccessSetupAwsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderAccessSetupAwsConfig {
		return vs[0].([]GetCloudProviderAccessSetupAwsConfig)[vs[1].(int)]
	}).(GetCloudProviderAccessSetupAwsConfigOutput)
}

type GetCloudProviderAccessSetupAzureConfig struct {
	// Azure Active Directory Application ID of Atlas.
	AtlasAzureAppId string `pulumi:"atlasAzureAppId"`
	// UUID string that identifies the Azure Service Principal.
	ServicePrincipalId string `pulumi:"servicePrincipalId"`
	// UUID String that identifies the Azure Active Directory Tenant ID.
	TenantId string `pulumi:"tenantId"`
}

// GetCloudProviderAccessSetupAzureConfigInput is an input type that accepts GetCloudProviderAccessSetupAzureConfigArgs and GetCloudProviderAccessSetupAzureConfigOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessSetupAzureConfigInput` via:
//
//	GetCloudProviderAccessSetupAzureConfigArgs{...}
type GetCloudProviderAccessSetupAzureConfigInput interface {
	pulumi.Input

	ToGetCloudProviderAccessSetupAzureConfigOutput() GetCloudProviderAccessSetupAzureConfigOutput
	ToGetCloudProviderAccessSetupAzureConfigOutputWithContext(context.Context) GetCloudProviderAccessSetupAzureConfigOutput
}

type GetCloudProviderAccessSetupAzureConfigArgs struct {
	// Azure Active Directory Application ID of Atlas.
	AtlasAzureAppId pulumi.StringInput `pulumi:"atlasAzureAppId"`
	// UUID string that identifies the Azure Service Principal.
	ServicePrincipalId pulumi.StringInput `pulumi:"servicePrincipalId"`
	// UUID String that identifies the Azure Active Directory Tenant ID.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetCloudProviderAccessSetupAzureConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessSetupAzureConfig)(nil)).Elem()
}

func (i GetCloudProviderAccessSetupAzureConfigArgs) ToGetCloudProviderAccessSetupAzureConfigOutput() GetCloudProviderAccessSetupAzureConfigOutput {
	return i.ToGetCloudProviderAccessSetupAzureConfigOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessSetupAzureConfigArgs) ToGetCloudProviderAccessSetupAzureConfigOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAzureConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessSetupAzureConfigOutput)
}

func (i GetCloudProviderAccessSetupAzureConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetCloudProviderAccessSetupAzureConfig] {
	return pulumix.Output[GetCloudProviderAccessSetupAzureConfig]{
		OutputState: i.ToGetCloudProviderAccessSetupAzureConfigOutputWithContext(ctx).OutputState,
	}
}

// GetCloudProviderAccessSetupAzureConfigArrayInput is an input type that accepts GetCloudProviderAccessSetupAzureConfigArray and GetCloudProviderAccessSetupAzureConfigArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessSetupAzureConfigArrayInput` via:
//
//	GetCloudProviderAccessSetupAzureConfigArray{ GetCloudProviderAccessSetupAzureConfigArgs{...} }
type GetCloudProviderAccessSetupAzureConfigArrayInput interface {
	pulumi.Input

	ToGetCloudProviderAccessSetupAzureConfigArrayOutput() GetCloudProviderAccessSetupAzureConfigArrayOutput
	ToGetCloudProviderAccessSetupAzureConfigArrayOutputWithContext(context.Context) GetCloudProviderAccessSetupAzureConfigArrayOutput
}

type GetCloudProviderAccessSetupAzureConfigArray []GetCloudProviderAccessSetupAzureConfigInput

func (GetCloudProviderAccessSetupAzureConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessSetupAzureConfig)(nil)).Elem()
}

func (i GetCloudProviderAccessSetupAzureConfigArray) ToGetCloudProviderAccessSetupAzureConfigArrayOutput() GetCloudProviderAccessSetupAzureConfigArrayOutput {
	return i.ToGetCloudProviderAccessSetupAzureConfigArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessSetupAzureConfigArray) ToGetCloudProviderAccessSetupAzureConfigArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAzureConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessSetupAzureConfigArrayOutput)
}

func (i GetCloudProviderAccessSetupAzureConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudProviderAccessSetupAzureConfig] {
	return pulumix.Output[[]GetCloudProviderAccessSetupAzureConfig]{
		OutputState: i.ToGetCloudProviderAccessSetupAzureConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCloudProviderAccessSetupAzureConfigOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessSetupAzureConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessSetupAzureConfig)(nil)).Elem()
}

func (o GetCloudProviderAccessSetupAzureConfigOutput) ToGetCloudProviderAccessSetupAzureConfigOutput() GetCloudProviderAccessSetupAzureConfigOutput {
	return o
}

func (o GetCloudProviderAccessSetupAzureConfigOutput) ToGetCloudProviderAccessSetupAzureConfigOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAzureConfigOutput {
	return o
}

func (o GetCloudProviderAccessSetupAzureConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetCloudProviderAccessSetupAzureConfig] {
	return pulumix.Output[GetCloudProviderAccessSetupAzureConfig]{
		OutputState: o.OutputState,
	}
}

// Azure Active Directory Application ID of Atlas.
func (o GetCloudProviderAccessSetupAzureConfigOutput) AtlasAzureAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessSetupAzureConfig) string { return v.AtlasAzureAppId }).(pulumi.StringOutput)
}

// UUID string that identifies the Azure Service Principal.
func (o GetCloudProviderAccessSetupAzureConfigOutput) ServicePrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessSetupAzureConfig) string { return v.ServicePrincipalId }).(pulumi.StringOutput)
}

// UUID String that identifies the Azure Active Directory Tenant ID.
func (o GetCloudProviderAccessSetupAzureConfigOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessSetupAzureConfig) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetCloudProviderAccessSetupAzureConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessSetupAzureConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessSetupAzureConfig)(nil)).Elem()
}

func (o GetCloudProviderAccessSetupAzureConfigArrayOutput) ToGetCloudProviderAccessSetupAzureConfigArrayOutput() GetCloudProviderAccessSetupAzureConfigArrayOutput {
	return o
}

func (o GetCloudProviderAccessSetupAzureConfigArrayOutput) ToGetCloudProviderAccessSetupAzureConfigArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAzureConfigArrayOutput {
	return o
}

func (o GetCloudProviderAccessSetupAzureConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCloudProviderAccessSetupAzureConfig] {
	return pulumix.Output[[]GetCloudProviderAccessSetupAzureConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetCloudProviderAccessSetupAzureConfigArrayOutput) Index(i pulumi.IntInput) GetCloudProviderAccessSetupAzureConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderAccessSetupAzureConfig {
		return vs[0].([]GetCloudProviderAccessSetupAzureConfig)[vs[1].(int)]
	}).(GetCloudProviderAccessSetupAzureConfigOutput)
}

type GetClusterAdvancedConfiguration struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern string `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern string `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong bool `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled bool `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol string `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan bool `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours int `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb int `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector int `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector int `pulumi:"sampleSizeBiConnector"`
	// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
	TransactionLifetimeLimitSeconds int `pulumi:"transactionLifetimeLimitSeconds"`
}

// GetClusterAdvancedConfigurationInput is an input type that accepts GetClusterAdvancedConfigurationArgs and GetClusterAdvancedConfigurationOutput values.
// You can construct a concrete instance of `GetClusterAdvancedConfigurationInput` via:
//
//	GetClusterAdvancedConfigurationArgs{...}
type GetClusterAdvancedConfigurationInput interface {
	pulumi.Input

	ToGetClusterAdvancedConfigurationOutput() GetClusterAdvancedConfigurationOutput
	ToGetClusterAdvancedConfigurationOutputWithContext(context.Context) GetClusterAdvancedConfigurationOutput
}

type GetClusterAdvancedConfigurationArgs struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern pulumi.StringInput `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern pulumi.StringInput `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong pulumi.BoolInput `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled pulumi.BoolInput `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol pulumi.StringInput `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan pulumi.BoolInput `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours pulumi.IntInput `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb pulumi.IntInput `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector pulumi.IntInput `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector pulumi.IntInput `pulumi:"sampleSizeBiConnector"`
	// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
	TransactionLifetimeLimitSeconds pulumi.IntInput `pulumi:"transactionLifetimeLimitSeconds"`
}

func (GetClusterAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAdvancedConfiguration)(nil)).Elem()
}

func (i GetClusterAdvancedConfigurationArgs) ToGetClusterAdvancedConfigurationOutput() GetClusterAdvancedConfigurationOutput {
	return i.ToGetClusterAdvancedConfigurationOutputWithContext(context.Background())
}

func (i GetClusterAdvancedConfigurationArgs) ToGetClusterAdvancedConfigurationOutputWithContext(ctx context.Context) GetClusterAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAdvancedConfigurationOutput)
}

func (i GetClusterAdvancedConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetClusterAdvancedConfiguration] {
	return pulumix.Output[GetClusterAdvancedConfiguration]{
		OutputState: i.ToGetClusterAdvancedConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GetClusterAdvancedConfigurationArrayInput is an input type that accepts GetClusterAdvancedConfigurationArray and GetClusterAdvancedConfigurationArrayOutput values.
// You can construct a concrete instance of `GetClusterAdvancedConfigurationArrayInput` via:
//
//	GetClusterAdvancedConfigurationArray{ GetClusterAdvancedConfigurationArgs{...} }
type GetClusterAdvancedConfigurationArrayInput interface {
	pulumi.Input

	ToGetClusterAdvancedConfigurationArrayOutput() GetClusterAdvancedConfigurationArrayOutput
	ToGetClusterAdvancedConfigurationArrayOutputWithContext(context.Context) GetClusterAdvancedConfigurationArrayOutput
}

type GetClusterAdvancedConfigurationArray []GetClusterAdvancedConfigurationInput

func (GetClusterAdvancedConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAdvancedConfiguration)(nil)).Elem()
}

func (i GetClusterAdvancedConfigurationArray) ToGetClusterAdvancedConfigurationArrayOutput() GetClusterAdvancedConfigurationArrayOutput {
	return i.ToGetClusterAdvancedConfigurationArrayOutputWithContext(context.Background())
}

func (i GetClusterAdvancedConfigurationArray) ToGetClusterAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetClusterAdvancedConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAdvancedConfigurationArrayOutput)
}

func (i GetClusterAdvancedConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterAdvancedConfiguration] {
	return pulumix.Output[[]GetClusterAdvancedConfiguration]{
		OutputState: i.ToGetClusterAdvancedConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClusterAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (GetClusterAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAdvancedConfiguration)(nil)).Elem()
}

func (o GetClusterAdvancedConfigurationOutput) ToGetClusterAdvancedConfigurationOutput() GetClusterAdvancedConfigurationOutput {
	return o
}

func (o GetClusterAdvancedConfigurationOutput) ToGetClusterAdvancedConfigurationOutputWithContext(ctx context.Context) GetClusterAdvancedConfigurationOutput {
	return o
}

func (o GetClusterAdvancedConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetClusterAdvancedConfiguration] {
	return pulumix.Output[GetClusterAdvancedConfiguration]{
		OutputState: o.OutputState,
	}
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o GetClusterAdvancedConfigurationOutput) DefaultReadConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) string { return v.DefaultReadConcern }).(pulumi.StringOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o GetClusterAdvancedConfigurationOutput) DefaultWriteConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) string { return v.DefaultWriteConcern }).(pulumi.StringOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o GetClusterAdvancedConfigurationOutput) FailIndexKeyTooLong() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) bool { return v.FailIndexKeyTooLong }).(pulumi.BoolOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o GetClusterAdvancedConfigurationOutput) JavascriptEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) bool { return v.JavascriptEnabled }).(pulumi.BoolOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o GetClusterAdvancedConfigurationOutput) MinimumEnabledTlsProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) string { return v.MinimumEnabledTlsProtocol }).(pulumi.StringOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o GetClusterAdvancedConfigurationOutput) NoTableScan() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) bool { return v.NoTableScan }).(pulumi.BoolOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
func (o GetClusterAdvancedConfigurationOutput) OplogMinRetentionHours() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) int { return v.OplogMinRetentionHours }).(pulumi.IntOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o GetClusterAdvancedConfigurationOutput) OplogSizeMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) int { return v.OplogSizeMb }).(pulumi.IntOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetClusterAdvancedConfigurationOutput) SampleRefreshIntervalBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) int { return v.SampleRefreshIntervalBiConnector }).(pulumi.IntOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetClusterAdvancedConfigurationOutput) SampleSizeBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) int { return v.SampleSizeBiConnector }).(pulumi.IntOutput)
}

// Lifetime, in seconds, of multi-document transactions. Defaults to 60 seconds.
func (o GetClusterAdvancedConfigurationOutput) TransactionLifetimeLimitSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterAdvancedConfiguration) int { return v.TransactionLifetimeLimitSeconds }).(pulumi.IntOutput)
}

type GetClusterAdvancedConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAdvancedConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAdvancedConfiguration)(nil)).Elem()
}

func (o GetClusterAdvancedConfigurationArrayOutput) ToGetClusterAdvancedConfigurationArrayOutput() GetClusterAdvancedConfigurationArrayOutput {
	return o
}

func (o GetClusterAdvancedConfigurationArrayOutput) ToGetClusterAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetClusterAdvancedConfigurationArrayOutput {
	return o
}

func (o GetClusterAdvancedConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterAdvancedConfiguration] {
	return pulumix.Output[[]GetClusterAdvancedConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterAdvancedConfigurationArrayOutput) Index(i pulumi.IntInput) GetClusterAdvancedConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAdvancedConfiguration {
		return vs[0].([]GetClusterAdvancedConfiguration)[vs[1].(int)]
	}).(GetClusterAdvancedConfigurationOutput)
}

type GetClusterBiConnectorConfig struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled bool `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference string `pulumi:"readPreference"`
}

// GetClusterBiConnectorConfigInput is an input type that accepts GetClusterBiConnectorConfigArgs and GetClusterBiConnectorConfigOutput values.
// You can construct a concrete instance of `GetClusterBiConnectorConfigInput` via:
//
//	GetClusterBiConnectorConfigArgs{...}
type GetClusterBiConnectorConfigInput interface {
	pulumi.Input

	ToGetClusterBiConnectorConfigOutput() GetClusterBiConnectorConfigOutput
	ToGetClusterBiConnectorConfigOutputWithContext(context.Context) GetClusterBiConnectorConfigOutput
}

type GetClusterBiConnectorConfigArgs struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringInput `pulumi:"readPreference"`
}

func (GetClusterBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBiConnectorConfig)(nil)).Elem()
}

func (i GetClusterBiConnectorConfigArgs) ToGetClusterBiConnectorConfigOutput() GetClusterBiConnectorConfigOutput {
	return i.ToGetClusterBiConnectorConfigOutputWithContext(context.Background())
}

func (i GetClusterBiConnectorConfigArgs) ToGetClusterBiConnectorConfigOutputWithContext(ctx context.Context) GetClusterBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBiConnectorConfigOutput)
}

func (i GetClusterBiConnectorConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetClusterBiConnectorConfig] {
	return pulumix.Output[GetClusterBiConnectorConfig]{
		OutputState: i.ToGetClusterBiConnectorConfigOutputWithContext(ctx).OutputState,
	}
}

// GetClusterBiConnectorConfigArrayInput is an input type that accepts GetClusterBiConnectorConfigArray and GetClusterBiConnectorConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterBiConnectorConfigArrayInput` via:
//
//	GetClusterBiConnectorConfigArray{ GetClusterBiConnectorConfigArgs{...} }
type GetClusterBiConnectorConfigArrayInput interface {
	pulumi.Input

	ToGetClusterBiConnectorConfigArrayOutput() GetClusterBiConnectorConfigArrayOutput
	ToGetClusterBiConnectorConfigArrayOutputWithContext(context.Context) GetClusterBiConnectorConfigArrayOutput
}

type GetClusterBiConnectorConfigArray []GetClusterBiConnectorConfigInput

func (GetClusterBiConnectorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBiConnectorConfig)(nil)).Elem()
}

func (i GetClusterBiConnectorConfigArray) ToGetClusterBiConnectorConfigArrayOutput() GetClusterBiConnectorConfigArrayOutput {
	return i.ToGetClusterBiConnectorConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterBiConnectorConfigArray) ToGetClusterBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetClusterBiConnectorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBiConnectorConfigArrayOutput)
}

func (i GetClusterBiConnectorConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterBiConnectorConfig] {
	return pulumix.Output[[]GetClusterBiConnectorConfig]{
		OutputState: i.ToGetClusterBiConnectorConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClusterBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (GetClusterBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBiConnectorConfig)(nil)).Elem()
}

func (o GetClusterBiConnectorConfigOutput) ToGetClusterBiConnectorConfigOutput() GetClusterBiConnectorConfigOutput {
	return o
}

func (o GetClusterBiConnectorConfigOutput) ToGetClusterBiConnectorConfigOutputWithContext(ctx context.Context) GetClusterBiConnectorConfigOutput {
	return o
}

func (o GetClusterBiConnectorConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetClusterBiConnectorConfig] {
	return pulumix.Output[GetClusterBiConnectorConfig]{
		OutputState: o.OutputState,
	}
}

// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
func (o GetClusterBiConnectorConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterBiConnectorConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o GetClusterBiConnectorConfigOutput) ReadPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterBiConnectorConfig) string { return v.ReadPreference }).(pulumi.StringOutput)
}

type GetClusterBiConnectorConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterBiConnectorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBiConnectorConfig)(nil)).Elem()
}

func (o GetClusterBiConnectorConfigArrayOutput) ToGetClusterBiConnectorConfigArrayOutput() GetClusterBiConnectorConfigArrayOutput {
	return o
}

func (o GetClusterBiConnectorConfigArrayOutput) ToGetClusterBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetClusterBiConnectorConfigArrayOutput {
	return o
}

func (o GetClusterBiConnectorConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterBiConnectorConfig] {
	return pulumix.Output[[]GetClusterBiConnectorConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterBiConnectorConfigArrayOutput) Index(i pulumi.IntInput) GetClusterBiConnectorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterBiConnectorConfig {
		return vs[0].([]GetClusterBiConnectorConfig)[vs[1].(int)]
	}).(GetClusterBiConnectorConfigOutput)
}

type GetClusterConnectionString struct {
	AwsPrivateLink    map[string]interface{}                      `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv map[string]interface{}                      `pulumi:"awsPrivateLinkSrv"`
	Private           string                                      `pulumi:"private"`
	PrivateEndpoints  []GetClusterConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        string                                      `pulumi:"privateSrv"`
	Standard          string                                      `pulumi:"standard"`
	StandardSrv       string                                      `pulumi:"standardSrv"`
}

// GetClusterConnectionStringInput is an input type that accepts GetClusterConnectionStringArgs and GetClusterConnectionStringOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringInput` via:
//
//	GetClusterConnectionStringArgs{...}
type GetClusterConnectionStringInput interface {
	pulumi.Input

	ToGetClusterConnectionStringOutput() GetClusterConnectionStringOutput
	ToGetClusterConnectionStringOutputWithContext(context.Context) GetClusterConnectionStringOutput
}

type GetClusterConnectionStringArgs struct {
	AwsPrivateLink    pulumi.MapInput                                     `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv pulumi.MapInput                                     `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringInput                                  `pulumi:"private"`
	PrivateEndpoints  GetClusterConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringInput                                  `pulumi:"privateSrv"`
	Standard          pulumi.StringInput                                  `pulumi:"standard"`
	StandardSrv       pulumi.StringInput                                  `pulumi:"standardSrv"`
}

func (GetClusterConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionString)(nil)).Elem()
}

func (i GetClusterConnectionStringArgs) ToGetClusterConnectionStringOutput() GetClusterConnectionStringOutput {
	return i.ToGetClusterConnectionStringOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringArgs) ToGetClusterConnectionStringOutputWithContext(ctx context.Context) GetClusterConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringOutput)
}

func (i GetClusterConnectionStringArgs) ToOutput(ctx context.Context) pulumix.Output[GetClusterConnectionString] {
	return pulumix.Output[GetClusterConnectionString]{
		OutputState: i.ToGetClusterConnectionStringOutputWithContext(ctx).OutputState,
	}
}

// GetClusterConnectionStringArrayInput is an input type that accepts GetClusterConnectionStringArray and GetClusterConnectionStringArrayOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringArrayInput` via:
//
//	GetClusterConnectionStringArray{ GetClusterConnectionStringArgs{...} }
type GetClusterConnectionStringArrayInput interface {
	pulumi.Input

	ToGetClusterConnectionStringArrayOutput() GetClusterConnectionStringArrayOutput
	ToGetClusterConnectionStringArrayOutputWithContext(context.Context) GetClusterConnectionStringArrayOutput
}

type GetClusterConnectionStringArray []GetClusterConnectionStringInput

func (GetClusterConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionString)(nil)).Elem()
}

func (i GetClusterConnectionStringArray) ToGetClusterConnectionStringArrayOutput() GetClusterConnectionStringArrayOutput {
	return i.ToGetClusterConnectionStringArrayOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringArray) ToGetClusterConnectionStringArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringArrayOutput)
}

func (i GetClusterConnectionStringArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterConnectionString] {
	return pulumix.Output[[]GetClusterConnectionString]{
		OutputState: i.ToGetClusterConnectionStringArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClusterConnectionStringOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionString)(nil)).Elem()
}

func (o GetClusterConnectionStringOutput) ToGetClusterConnectionStringOutput() GetClusterConnectionStringOutput {
	return o
}

func (o GetClusterConnectionStringOutput) ToGetClusterConnectionStringOutputWithContext(ctx context.Context) GetClusterConnectionStringOutput {
	return o
}

func (o GetClusterConnectionStringOutput) ToOutput(ctx context.Context) pulumix.Output[GetClusterConnectionString] {
	return pulumix.Output[GetClusterConnectionString]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v GetClusterConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

func (o GetClusterConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v GetClusterConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o GetClusterConnectionStringOutput) Private() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionString) string { return v.Private }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringOutput) PrivateEndpoints() GetClusterConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v GetClusterConnectionString) []GetClusterConnectionStringPrivateEndpoint {
		return v.PrivateEndpoints
	}).(GetClusterConnectionStringPrivateEndpointArrayOutput)
}

func (o GetClusterConnectionStringOutput) PrivateSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionString) string { return v.PrivateSrv }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringOutput) Standard() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionString) string { return v.Standard }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringOutput) StandardSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionString) string { return v.StandardSrv }).(pulumi.StringOutput)
}

type GetClusterConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionString)(nil)).Elem()
}

func (o GetClusterConnectionStringArrayOutput) ToGetClusterConnectionStringArrayOutput() GetClusterConnectionStringArrayOutput {
	return o
}

func (o GetClusterConnectionStringArrayOutput) ToGetClusterConnectionStringArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringArrayOutput {
	return o
}

func (o GetClusterConnectionStringArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterConnectionString] {
	return pulumix.Output[[]GetClusterConnectionString]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterConnectionStringArrayOutput) Index(i pulumi.IntInput) GetClusterConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterConnectionString {
		return vs[0].([]GetClusterConnectionString)[vs[1].(int)]
	}).(GetClusterConnectionStringOutput)
}

type GetClusterConnectionStringPrivateEndpoint struct {
	ConnectionString                  string                                              `pulumi:"connectionString"`
	Endpoints                         []GetClusterConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString               string                                              `pulumi:"srvConnectionString"`
	SrvShardOptimizedConnectionString string                                              `pulumi:"srvShardOptimizedConnectionString"`
	Type                              string                                              `pulumi:"type"`
}

// GetClusterConnectionStringPrivateEndpointInput is an input type that accepts GetClusterConnectionStringPrivateEndpointArgs and GetClusterConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringPrivateEndpointInput` via:
//
//	GetClusterConnectionStringPrivateEndpointArgs{...}
type GetClusterConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToGetClusterConnectionStringPrivateEndpointOutput() GetClusterConnectionStringPrivateEndpointOutput
	ToGetClusterConnectionStringPrivateEndpointOutputWithContext(context.Context) GetClusterConnectionStringPrivateEndpointOutput
}

type GetClusterConnectionStringPrivateEndpointArgs struct {
	ConnectionString                  pulumi.StringInput                                          `pulumi:"connectionString"`
	Endpoints                         GetClusterConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString               pulumi.StringInput                                          `pulumi:"srvConnectionString"`
	SrvShardOptimizedConnectionString pulumi.StringInput                                          `pulumi:"srvShardOptimizedConnectionString"`
	Type                              pulumi.StringInput                                          `pulumi:"type"`
}

func (GetClusterConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetClusterConnectionStringPrivateEndpointArgs) ToGetClusterConnectionStringPrivateEndpointOutput() GetClusterConnectionStringPrivateEndpointOutput {
	return i.ToGetClusterConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringPrivateEndpointArgs) ToGetClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringPrivateEndpointOutput)
}

func (i GetClusterConnectionStringPrivateEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[GetClusterConnectionStringPrivateEndpoint]{
		OutputState: i.ToGetClusterConnectionStringPrivateEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetClusterConnectionStringPrivateEndpointArrayInput is an input type that accepts GetClusterConnectionStringPrivateEndpointArray and GetClusterConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringPrivateEndpointArrayInput` via:
//
//	GetClusterConnectionStringPrivateEndpointArray{ GetClusterConnectionStringPrivateEndpointArgs{...} }
type GetClusterConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToGetClusterConnectionStringPrivateEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointArrayOutput
	ToGetClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) GetClusterConnectionStringPrivateEndpointArrayOutput
}

type GetClusterConnectionStringPrivateEndpointArray []GetClusterConnectionStringPrivateEndpointInput

func (GetClusterConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetClusterConnectionStringPrivateEndpointArray) ToGetClusterConnectionStringPrivateEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointArrayOutput {
	return i.ToGetClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringPrivateEndpointArray) ToGetClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringPrivateEndpointArrayOutput)
}

func (i GetClusterConnectionStringPrivateEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[[]GetClusterConnectionStringPrivateEndpoint]{
		OutputState: i.ToGetClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClusterConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetClusterConnectionStringPrivateEndpointOutput) ToGetClusterConnectionStringPrivateEndpointOutput() GetClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointOutput) ToGetClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[GetClusterConnectionStringPrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpoint) string { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringPrivateEndpointOutput) Endpoints() GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpoint) []GetClusterConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(GetClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o GetClusterConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpoint) string { return v.SrvConnectionString }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringPrivateEndpointOutput) SrvShardOptimizedConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpoint) string { return v.SrvShardOptimizedConnectionString }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringPrivateEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

type GetClusterConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetClusterConnectionStringPrivateEndpointArrayOutput) ToGetClusterConnectionStringPrivateEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointArrayOutput) ToGetClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterConnectionStringPrivateEndpoint] {
	return pulumix.Output[[]GetClusterConnectionStringPrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) GetClusterConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterConnectionStringPrivateEndpoint {
		return vs[0].([]GetClusterConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(GetClusterConnectionStringPrivateEndpointOutput)
}

type GetClusterConnectionStringPrivateEndpointEndpoint struct {
	EndpointId string `pulumi:"endpointId"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	Region       string `pulumi:"region"`
}

// GetClusterConnectionStringPrivateEndpointEndpointInput is an input type that accepts GetClusterConnectionStringPrivateEndpointEndpointArgs and GetClusterConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringPrivateEndpointEndpointInput` via:
//
//	GetClusterConnectionStringPrivateEndpointEndpointArgs{...}
type GetClusterConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToGetClusterConnectionStringPrivateEndpointEndpointOutput() GetClusterConnectionStringPrivateEndpointEndpointOutput
	ToGetClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) GetClusterConnectionStringPrivateEndpointEndpointOutput
}

type GetClusterConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	Region       pulumi.StringInput `pulumi:"region"`
}

func (GetClusterConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetClusterConnectionStringPrivateEndpointEndpointArgs) ToGetClusterConnectionStringPrivateEndpointEndpointOutput() GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return i.ToGetClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringPrivateEndpointEndpointArgs) ToGetClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringPrivateEndpointEndpointOutput)
}

func (i GetClusterConnectionStringPrivateEndpointEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[GetClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: i.ToGetClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetClusterConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts GetClusterConnectionStringPrivateEndpointEndpointArray and GetClusterConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//	GetClusterConnectionStringPrivateEndpointEndpointArray{ GetClusterConnectionStringPrivateEndpointEndpointArgs{...} }
type GetClusterConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointEndpointArrayOutput
	ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) GetClusterConnectionStringPrivateEndpointEndpointArrayOutput
}

type GetClusterConnectionStringPrivateEndpointEndpointArray []GetClusterConnectionStringPrivateEndpointEndpointInput

func (GetClusterConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetClusterConnectionStringPrivateEndpointEndpointArray) ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringPrivateEndpointEndpointArray) ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (i GetClusterConnectionStringPrivateEndpointEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[[]GetClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: i.ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClusterConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) ToGetClusterConnectionStringPrivateEndpointEndpointOutput() GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) ToGetClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[GetClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpointEndpoint) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Indicates the cloud service provider on which the servers are provisioned.
func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpointEndpoint) string { return v.ProviderName }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpointEndpoint) string { return v.Region }).(pulumi.StringOutput)
}

type GetClusterConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[[]GetClusterConnectionStringPrivateEndpointEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]GetClusterConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(GetClusterConnectionStringPrivateEndpointEndpointOutput)
}

type GetClusterLabel struct {
	// The key that you want to write.
	Key string `pulumi:"key"`
	// The value that you want to write.
	Value string `pulumi:"value"`
}

// GetClusterLabelInput is an input type that accepts GetClusterLabelArgs and GetClusterLabelOutput values.
// You can construct a concrete instance of `GetClusterLabelInput` via:
//
//	GetClusterLabelArgs{...}
type GetClusterLabelInput interface {
	pulumi.Input

	ToGetClusterLabelOutput() GetClusterLabelOutput
	ToGetClusterLabelOutputWithContext(context.Context) GetClusterLabelOutput
}

type GetClusterLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClusterLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLabel)(nil)).Elem()
}

func (i GetClusterLabelArgs) ToGetClusterLabelOutput() GetClusterLabelOutput {
	return i.ToGetClusterLabelOutputWithContext(context.Background())
}

func (i GetClusterLabelArgs) ToGetClusterLabelOutputWithContext(ctx context.Context) GetClusterLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLabelOutput)
}

func (i GetClusterLabelArgs) ToOutput(ctx context.Context) pulumix.Output[GetClusterLabel] {
	return pulumix.Output[GetClusterLabel]{
		OutputState: i.ToGetClusterLabelOutputWithContext(ctx).OutputState,
	}
}

// GetClusterLabelArrayInput is an input type that accepts GetClusterLabelArray and GetClusterLabelArrayOutput values.
// You can construct a concrete instance of `GetClusterLabelArrayInput` via:
//
//	GetClusterLabelArray{ GetClusterLabelArgs{...} }
type GetClusterLabelArrayInput interface {
	pulumi.Input

	ToGetClusterLabelArrayOutput() GetClusterLabelArrayOutput
	ToGetClusterLabelArrayOutputWithContext(context.Context) GetClusterLabelArrayOutput
}

type GetClusterLabelArray []GetClusterLabelInput

func (GetClusterLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterLabel)(nil)).Elem()
}

func (i GetClusterLabelArray) ToGetClusterLabelArrayOutput() GetClusterLabelArrayOutput {
	return i.ToGetClusterLabelArrayOutputWithContext(context.Background())
}

func (i GetClusterLabelArray) ToGetClusterLabelArrayOutputWithContext(ctx context.Context) GetClusterLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLabelArrayOutput)
}

func (i GetClusterLabelArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterLabel] {
	return pulumix.Output[[]GetClusterLabel]{
		OutputState: i.ToGetClusterLabelArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClusterLabelOutput struct{ *pulumi.OutputState }

func (GetClusterLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLabel)(nil)).Elem()
}

func (o GetClusterLabelOutput) ToGetClusterLabelOutput() GetClusterLabelOutput {
	return o
}

func (o GetClusterLabelOutput) ToGetClusterLabelOutputWithContext(ctx context.Context) GetClusterLabelOutput {
	return o
}

func (o GetClusterLabelOutput) ToOutput(ctx context.Context) pulumix.Output[GetClusterLabel] {
	return pulumix.Output[GetClusterLabel]{
		OutputState: o.OutputState,
	}
}

// The key that you want to write.
func (o GetClusterLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that you want to write.
func (o GetClusterLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetClusterLabelArrayOutput struct{ *pulumi.OutputState }

func (GetClusterLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterLabel)(nil)).Elem()
}

func (o GetClusterLabelArrayOutput) ToGetClusterLabelArrayOutput() GetClusterLabelArrayOutput {
	return o
}

func (o GetClusterLabelArrayOutput) ToGetClusterLabelArrayOutputWithContext(ctx context.Context) GetClusterLabelArrayOutput {
	return o
}

func (o GetClusterLabelArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterLabel] {
	return pulumix.Output[[]GetClusterLabel]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterLabelArrayOutput) Index(i pulumi.IntInput) GetClusterLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterLabel {
		return vs[0].([]GetClusterLabel)[vs[1].(int)]
	}).(GetClusterLabelOutput)
}

type GetClusterOutageSimulationOutageFilter struct {
	// The cloud provider of the region that undergoes the outage simulation. Following values are supported:
	CloudProvider string `pulumi:"cloudProvider"`
	// The Atlas name of the region undergoing an outage simulation.
	RegionName string `pulumi:"regionName"`
	// The type of cluster outage simulation. Following values are supported:
	Type string `pulumi:"type"`
}

// GetClusterOutageSimulationOutageFilterInput is an input type that accepts GetClusterOutageSimulationOutageFilterArgs and GetClusterOutageSimulationOutageFilterOutput values.
// You can construct a concrete instance of `GetClusterOutageSimulationOutageFilterInput` via:
//
//	GetClusterOutageSimulationOutageFilterArgs{...}
type GetClusterOutageSimulationOutageFilterInput interface {
	pulumi.Input

	ToGetClusterOutageSimulationOutageFilterOutput() GetClusterOutageSimulationOutageFilterOutput
	ToGetClusterOutageSimulationOutageFilterOutputWithContext(context.Context) GetClusterOutageSimulationOutageFilterOutput
}

type GetClusterOutageSimulationOutageFilterArgs struct {
	// The cloud provider of the region that undergoes the outage simulation. Following values are supported:
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// The Atlas name of the region undergoing an outage simulation.
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// The type of cluster outage simulation. Following values are supported:
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetClusterOutageSimulationOutageFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterOutageSimulationOutageFilter)(nil)).Elem()
}

func (i GetClusterOutageSimulationOutageFilterArgs) ToGetClusterOutageSimulationOutageFilterOutput() GetClusterOutageSimulationOutageFilterOutput {
	return i.ToGetClusterOutageSimulationOutageFilterOutputWithContext(context.Background())
}

func (i GetClusterOutageSimulationOutageFilterArgs) ToGetClusterOutageSimulationOutageFilterOutputWithContext(ctx context.Context) GetClusterOutageSimulationOutageFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterOutageSimulationOutageFilterOutput)
}

func (i GetClusterOutageSimulationOutageFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetClusterOutageSimulationOutageFilter] {
	return pulumix.Output[GetClusterOutageSimulationOutageFilter]{
		OutputState: i.ToGetClusterOutageSimulationOutageFilterOutputWithContext(ctx).OutputState,
	}
}

// GetClusterOutageSimulationOutageFilterArrayInput is an input type that accepts GetClusterOutageSimulationOutageFilterArray and GetClusterOutageSimulationOutageFilterArrayOutput values.
// You can construct a concrete instance of `GetClusterOutageSimulationOutageFilterArrayInput` via:
//
//	GetClusterOutageSimulationOutageFilterArray{ GetClusterOutageSimulationOutageFilterArgs{...} }
type GetClusterOutageSimulationOutageFilterArrayInput interface {
	pulumi.Input

	ToGetClusterOutageSimulationOutageFilterArrayOutput() GetClusterOutageSimulationOutageFilterArrayOutput
	ToGetClusterOutageSimulationOutageFilterArrayOutputWithContext(context.Context) GetClusterOutageSimulationOutageFilterArrayOutput
}

type GetClusterOutageSimulationOutageFilterArray []GetClusterOutageSimulationOutageFilterInput

func (GetClusterOutageSimulationOutageFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterOutageSimulationOutageFilter)(nil)).Elem()
}

func (i GetClusterOutageSimulationOutageFilterArray) ToGetClusterOutageSimulationOutageFilterArrayOutput() GetClusterOutageSimulationOutageFilterArrayOutput {
	return i.ToGetClusterOutageSimulationOutageFilterArrayOutputWithContext(context.Background())
}

func (i GetClusterOutageSimulationOutageFilterArray) ToGetClusterOutageSimulationOutageFilterArrayOutputWithContext(ctx context.Context) GetClusterOutageSimulationOutageFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterOutageSimulationOutageFilterArrayOutput)
}

func (i GetClusterOutageSimulationOutageFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterOutageSimulationOutageFilter] {
	return pulumix.Output[[]GetClusterOutageSimulationOutageFilter]{
		OutputState: i.ToGetClusterOutageSimulationOutageFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClusterOutageSimulationOutageFilterOutput struct{ *pulumi.OutputState }

func (GetClusterOutageSimulationOutageFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterOutageSimulationOutageFilter)(nil)).Elem()
}

func (o GetClusterOutageSimulationOutageFilterOutput) ToGetClusterOutageSimulationOutageFilterOutput() GetClusterOutageSimulationOutageFilterOutput {
	return o
}

func (o GetClusterOutageSimulationOutageFilterOutput) ToGetClusterOutageSimulationOutageFilterOutputWithContext(ctx context.Context) GetClusterOutageSimulationOutageFilterOutput {
	return o
}

func (o GetClusterOutageSimulationOutageFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetClusterOutageSimulationOutageFilter] {
	return pulumix.Output[GetClusterOutageSimulationOutageFilter]{
		OutputState: o.OutputState,
	}
}

// The cloud provider of the region that undergoes the outage simulation. Following values are supported:
func (o GetClusterOutageSimulationOutageFilterOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterOutageSimulationOutageFilter) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// The Atlas name of the region undergoing an outage simulation.
func (o GetClusterOutageSimulationOutageFilterOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterOutageSimulationOutageFilter) string { return v.RegionName }).(pulumi.StringOutput)
}

// The type of cluster outage simulation. Following values are supported:
func (o GetClusterOutageSimulationOutageFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterOutageSimulationOutageFilter) string { return v.Type }).(pulumi.StringOutput)
}

type GetClusterOutageSimulationOutageFilterArrayOutput struct{ *pulumi.OutputState }

func (GetClusterOutageSimulationOutageFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterOutageSimulationOutageFilter)(nil)).Elem()
}

func (o GetClusterOutageSimulationOutageFilterArrayOutput) ToGetClusterOutageSimulationOutageFilterArrayOutput() GetClusterOutageSimulationOutageFilterArrayOutput {
	return o
}

func (o GetClusterOutageSimulationOutageFilterArrayOutput) ToGetClusterOutageSimulationOutageFilterArrayOutputWithContext(ctx context.Context) GetClusterOutageSimulationOutageFilterArrayOutput {
	return o
}

func (o GetClusterOutageSimulationOutageFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterOutageSimulationOutageFilter] {
	return pulumix.Output[[]GetClusterOutageSimulationOutageFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterOutageSimulationOutageFilterArrayOutput) Index(i pulumi.IntInput) GetClusterOutageSimulationOutageFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterOutageSimulationOutageFilter {
		return vs[0].([]GetClusterOutageSimulationOutageFilter)[vs[1].(int)]
	}).(GetClusterOutageSimulationOutageFilterOutput)
}

type GetClusterReplicationSpec struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id string `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards int `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs []GetClusterReplicationSpecRegionsConfig `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName string `pulumi:"zoneName"`
}

// GetClusterReplicationSpecInput is an input type that accepts GetClusterReplicationSpecArgs and GetClusterReplicationSpecOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecInput` via:
//
//	GetClusterReplicationSpecArgs{...}
type GetClusterReplicationSpecInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecOutput() GetClusterReplicationSpecOutput
	ToGetClusterReplicationSpecOutputWithContext(context.Context) GetClusterReplicationSpecOutput
}

type GetClusterReplicationSpecArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs GetClusterReplicationSpecRegionsConfigArrayInput `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetClusterReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpec)(nil)).Elem()
}

func (i GetClusterReplicationSpecArgs) ToGetClusterReplicationSpecOutput() GetClusterReplicationSpecOutput {
	return i.ToGetClusterReplicationSpecOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecArgs) ToGetClusterReplicationSpecOutputWithContext(ctx context.Context) GetClusterReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecOutput)
}

func (i GetClusterReplicationSpecArgs) ToOutput(ctx context.Context) pulumix.Output[GetClusterReplicationSpec] {
	return pulumix.Output[GetClusterReplicationSpec]{
		OutputState: i.ToGetClusterReplicationSpecOutputWithContext(ctx).OutputState,
	}
}

// GetClusterReplicationSpecArrayInput is an input type that accepts GetClusterReplicationSpecArray and GetClusterReplicationSpecArrayOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecArrayInput` via:
//
//	GetClusterReplicationSpecArray{ GetClusterReplicationSpecArgs{...} }
type GetClusterReplicationSpecArrayInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecArrayOutput() GetClusterReplicationSpecArrayOutput
	ToGetClusterReplicationSpecArrayOutputWithContext(context.Context) GetClusterReplicationSpecArrayOutput
}

type GetClusterReplicationSpecArray []GetClusterReplicationSpecInput

func (GetClusterReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpec)(nil)).Elem()
}

func (i GetClusterReplicationSpecArray) ToGetClusterReplicationSpecArrayOutput() GetClusterReplicationSpecArrayOutput {
	return i.ToGetClusterReplicationSpecArrayOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecArray) ToGetClusterReplicationSpecArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecArrayOutput)
}

func (i GetClusterReplicationSpecArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterReplicationSpec] {
	return pulumix.Output[[]GetClusterReplicationSpec]{
		OutputState: i.ToGetClusterReplicationSpecArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClusterReplicationSpecOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpec)(nil)).Elem()
}

func (o GetClusterReplicationSpecOutput) ToGetClusterReplicationSpecOutput() GetClusterReplicationSpecOutput {
	return o
}

func (o GetClusterReplicationSpecOutput) ToGetClusterReplicationSpecOutputWithContext(ctx context.Context) GetClusterReplicationSpecOutput {
	return o
}

func (o GetClusterReplicationSpecOutput) ToOutput(ctx context.Context) pulumix.Output[GetClusterReplicationSpec] {
	return pulumix.Output[GetClusterReplicationSpec]{
		OutputState: o.OutputState,
	}
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClusterReplicationSpecOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) string { return v.Id }).(pulumi.StringOutput)
}

// Number of shards to deploy in the specified zone.
func (o GetClusterReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
func (o GetClusterReplicationSpecOutput) RegionsConfigs() GetClusterReplicationSpecRegionsConfigArrayOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) []GetClusterReplicationSpecRegionsConfig { return v.RegionsConfigs }).(GetClusterReplicationSpecRegionsConfigArrayOutput)
}

// Indicates the n ame for the zone in a Global Cluster.
func (o GetClusterReplicationSpecOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetClusterReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpec)(nil)).Elem()
}

func (o GetClusterReplicationSpecArrayOutput) ToGetClusterReplicationSpecArrayOutput() GetClusterReplicationSpecArrayOutput {
	return o
}

func (o GetClusterReplicationSpecArrayOutput) ToGetClusterReplicationSpecArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecArrayOutput {
	return o
}

func (o GetClusterReplicationSpecArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterReplicationSpec] {
	return pulumix.Output[[]GetClusterReplicationSpec]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterReplicationSpecArrayOutput) Index(i pulumi.IntInput) GetClusterReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterReplicationSpec {
		return vs[0].([]GetClusterReplicationSpec)[vs[1].(int)]
	}).(GetClusterReplicationSpecOutput)
}

type GetClusterReplicationSpecRegionsConfig struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes int `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes int `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority int `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes int `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName string `pulumi:"regionName"`
}

// GetClusterReplicationSpecRegionsConfigInput is an input type that accepts GetClusterReplicationSpecRegionsConfigArgs and GetClusterReplicationSpecRegionsConfigOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecRegionsConfigInput` via:
//
//	GetClusterReplicationSpecRegionsConfigArgs{...}
type GetClusterReplicationSpecRegionsConfigInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecRegionsConfigOutput() GetClusterReplicationSpecRegionsConfigOutput
	ToGetClusterReplicationSpecRegionsConfigOutputWithContext(context.Context) GetClusterReplicationSpecRegionsConfigOutput
}

type GetClusterReplicationSpecRegionsConfigArgs struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes pulumi.IntInput `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes pulumi.IntInput `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes pulumi.IntInput `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetClusterReplicationSpecRegionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClusterReplicationSpecRegionsConfigArgs) ToGetClusterReplicationSpecRegionsConfigOutput() GetClusterReplicationSpecRegionsConfigOutput {
	return i.ToGetClusterReplicationSpecRegionsConfigOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecRegionsConfigArgs) ToGetClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecRegionsConfigOutput)
}

func (i GetClusterReplicationSpecRegionsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetClusterReplicationSpecRegionsConfig] {
	return pulumix.Output[GetClusterReplicationSpecRegionsConfig]{
		OutputState: i.ToGetClusterReplicationSpecRegionsConfigOutputWithContext(ctx).OutputState,
	}
}

// GetClusterReplicationSpecRegionsConfigArrayInput is an input type that accepts GetClusterReplicationSpecRegionsConfigArray and GetClusterReplicationSpecRegionsConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecRegionsConfigArrayInput` via:
//
//	GetClusterReplicationSpecRegionsConfigArray{ GetClusterReplicationSpecRegionsConfigArgs{...} }
type GetClusterReplicationSpecRegionsConfigArrayInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecRegionsConfigArrayOutput() GetClusterReplicationSpecRegionsConfigArrayOutput
	ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Context) GetClusterReplicationSpecRegionsConfigArrayOutput
}

type GetClusterReplicationSpecRegionsConfigArray []GetClusterReplicationSpecRegionsConfigInput

func (GetClusterReplicationSpecRegionsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClusterReplicationSpecRegionsConfigArray) ToGetClusterReplicationSpecRegionsConfigArrayOutput() GetClusterReplicationSpecRegionsConfigArrayOutput {
	return i.ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecRegionsConfigArray) ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecRegionsConfigArrayOutput)
}

func (i GetClusterReplicationSpecRegionsConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterReplicationSpecRegionsConfig] {
	return pulumix.Output[[]GetClusterReplicationSpecRegionsConfig]{
		OutputState: i.ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClusterReplicationSpecRegionsConfigOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecRegionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClusterReplicationSpecRegionsConfigOutput) ToGetClusterReplicationSpecRegionsConfigOutput() GetClusterReplicationSpecRegionsConfigOutput {
	return o
}

func (o GetClusterReplicationSpecRegionsConfigOutput) ToGetClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigOutput {
	return o
}

func (o GetClusterReplicationSpecRegionsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetClusterReplicationSpecRegionsConfig] {
	return pulumix.Output[GetClusterReplicationSpecRegionsConfig]{
		OutputState: o.OutputState,
	}
}

// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
func (o GetClusterReplicationSpecRegionsConfigOutput) AnalyticsNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.AnalyticsNodes }).(pulumi.IntOutput)
}

// Number of electable nodes for Atlas to deploy to the region.
func (o GetClusterReplicationSpecRegionsConfigOutput) ElectableNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.ElectableNodes }).(pulumi.IntOutput)
}

// Election priority of the region. For regions with only read-only nodes, set this value to 0.
func (o GetClusterReplicationSpecRegionsConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
func (o GetClusterReplicationSpecRegionsConfigOutput) ReadOnlyNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.ReadOnlyNodes }).(pulumi.IntOutput)
}

// Name for the region specified.
func (o GetClusterReplicationSpecRegionsConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetClusterReplicationSpecRegionsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecRegionsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClusterReplicationSpecRegionsConfigArrayOutput) ToGetClusterReplicationSpecRegionsConfigArrayOutput() GetClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClusterReplicationSpecRegionsConfigArrayOutput) ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClusterReplicationSpecRegionsConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterReplicationSpecRegionsConfig] {
	return pulumix.Output[[]GetClusterReplicationSpecRegionsConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterReplicationSpecRegionsConfigArrayOutput) Index(i pulumi.IntInput) GetClusterReplicationSpecRegionsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterReplicationSpecRegionsConfig {
		return vs[0].([]GetClusterReplicationSpecRegionsConfig)[vs[1].(int)]
	}).(GetClusterReplicationSpecRegionsConfigOutput)
}

type GetClusterSnapshotBackupPolicy struct {
	ClusterId             string                                 `pulumi:"clusterId"`
	ClusterName           string                                 `pulumi:"clusterName"`
	NextSnapshot          string                                 `pulumi:"nextSnapshot"`
	Policies              []GetClusterSnapshotBackupPolicyPolicy `pulumi:"policies"`
	ReferenceHourOfDay    int                                    `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour int                                    `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     int                                    `pulumi:"restoreWindowDays"`
	UpdateSnapshots       bool                                   `pulumi:"updateSnapshots"`
}

// GetClusterSnapshotBackupPolicyInput is an input type that accepts GetClusterSnapshotBackupPolicyArgs and GetClusterSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyInput` via:
//
//	GetClusterSnapshotBackupPolicyArgs{...}
type GetClusterSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyOutput() GetClusterSnapshotBackupPolicyOutput
	ToGetClusterSnapshotBackupPolicyOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyOutput
}

type GetClusterSnapshotBackupPolicyArgs struct {
	ClusterId             pulumi.StringInput                             `pulumi:"clusterId"`
	ClusterName           pulumi.StringInput                             `pulumi:"clusterName"`
	NextSnapshot          pulumi.StringInput                             `pulumi:"nextSnapshot"`
	Policies              GetClusterSnapshotBackupPolicyPolicyArrayInput `pulumi:"policies"`
	ReferenceHourOfDay    pulumi.IntInput                                `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour pulumi.IntInput                                `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     pulumi.IntInput                                `pulumi:"restoreWindowDays"`
	UpdateSnapshots       pulumi.BoolInput                               `pulumi:"updateSnapshots"`
}

func (GetClusterSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyArgs) ToGetClusterSnapshotBackupPolicyOutput() GetClusterSnapshotBackupPolicyOutput {
	return i.ToGetClusterSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyArgs) ToGetClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyOutput)
}

func (i GetClusterSnapshotBackupPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[GetClusterSnapshotBackupPolicy] {
	return pulumix.Output[GetClusterSnapshotBackupPolicy]{
		OutputState: i.ToGetClusterSnapshotBackupPolicyOutputWithContext(ctx).OutputState,
	}
}

// GetClusterSnapshotBackupPolicyArrayInput is an input type that accepts GetClusterSnapshotBackupPolicyArray and GetClusterSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyArrayInput` via:
//
//	GetClusterSnapshotBackupPolicyArray{ GetClusterSnapshotBackupPolicyArgs{...} }
type GetClusterSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyArrayOutput() GetClusterSnapshotBackupPolicyArrayOutput
	ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyArrayOutput
}

type GetClusterSnapshotBackupPolicyArray []GetClusterSnapshotBackupPolicyInput

func (GetClusterSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyArray) ToGetClusterSnapshotBackupPolicyArrayOutput() GetClusterSnapshotBackupPolicyArrayOutput {
	return i.ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyArray) ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyArrayOutput)
}

func (i GetClusterSnapshotBackupPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterSnapshotBackupPolicy] {
	return pulumix.Output[[]GetClusterSnapshotBackupPolicy]{
		OutputState: i.ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClusterSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyOutput) ToGetClusterSnapshotBackupPolicyOutput() GetClusterSnapshotBackupPolicyOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyOutput) ToGetClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[GetClusterSnapshotBackupPolicy] {
	return pulumix.Output[GetClusterSnapshotBackupPolicy]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterSnapshotBackupPolicyOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) NextSnapshot() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) string { return v.NextSnapshot }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) Policies() GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) []GetClusterSnapshotBackupPolicyPolicy { return v.Policies }).(GetClusterSnapshotBackupPolicyPolicyArrayOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) ReferenceHourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) int { return v.ReferenceHourOfDay }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) ReferenceMinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) int { return v.ReferenceMinuteOfHour }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) RestoreWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) int { return v.RestoreWindowDays }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) UpdateSnapshots() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) bool { return v.UpdateSnapshots }).(pulumi.BoolOutput)
}

type GetClusterSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyArrayOutput() GetClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterSnapshotBackupPolicy] {
	return pulumix.Output[[]GetClusterSnapshotBackupPolicy]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterSnapshotBackupPolicy {
		return vs[0].([]GetClusterSnapshotBackupPolicy)[vs[1].(int)]
	}).(GetClusterSnapshotBackupPolicyOutput)
}

type GetClusterSnapshotBackupPolicyPolicy struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          string                                           `pulumi:"id"`
	PolicyItems []GetClusterSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// GetClusterSnapshotBackupPolicyPolicyInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyArgs and GetClusterSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyInput` via:
//
//	GetClusterSnapshotBackupPolicyPolicyArgs{...}
type GetClusterSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyOutput() GetClusterSnapshotBackupPolicyPolicyOutput
	ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyOutput
}

type GetClusterSnapshotBackupPolicyPolicyArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          pulumi.StringInput                                       `pulumi:"id"`
	PolicyItems GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (GetClusterSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyArgs) ToGetClusterSnapshotBackupPolicyPolicyOutput() GetClusterSnapshotBackupPolicyPolicyOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyArgs) ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyOutput)
}

func (i GetClusterSnapshotBackupPolicyPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[GetClusterSnapshotBackupPolicyPolicy] {
	return pulumix.Output[GetClusterSnapshotBackupPolicyPolicy]{
		OutputState: i.ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx).OutputState,
	}
}

// GetClusterSnapshotBackupPolicyPolicyArrayInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyArray and GetClusterSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyArrayInput` via:
//
//	GetClusterSnapshotBackupPolicyPolicyArray{ GetClusterSnapshotBackupPolicyPolicyArgs{...} }
type GetClusterSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyArrayOutput() GetClusterSnapshotBackupPolicyPolicyArrayOutput
	ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyArrayOutput
}

type GetClusterSnapshotBackupPolicyPolicyArray []GetClusterSnapshotBackupPolicyPolicyInput

func (GetClusterSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyArray) ToGetClusterSnapshotBackupPolicyPolicyArrayOutput() GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyArray) ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyArrayOutput)
}

func (i GetClusterSnapshotBackupPolicyPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterSnapshotBackupPolicyPolicy] {
	return pulumix.Output[[]GetClusterSnapshotBackupPolicyPolicy]{
		OutputState: i.ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClusterSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyOutput) ToGetClusterSnapshotBackupPolicyPolicyOutput() GetClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyOutput) ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[GetClusterSnapshotBackupPolicyPolicy] {
	return pulumix.Output[GetClusterSnapshotBackupPolicyPolicy]{
		OutputState: o.OutputState,
	}
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClusterSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyOutput) PolicyItems() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicy) []GetClusterSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetClusterSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyArrayOutput() GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterSnapshotBackupPolicyPolicy] {
	return pulumix.Output[[]GetClusterSnapshotBackupPolicyPolicy]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterSnapshotBackupPolicyPolicy {
		return vs[0].([]GetClusterSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(GetClusterSnapshotBackupPolicyPolicyOutput)
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             string `pulumi:"id"`
	RetentionUnit  string `pulumi:"retentionUnit"`
	RetentionValue int    `pulumi:"retentionValue"`
}

// GetClusterSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs and GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//	GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type GetClusterSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput
	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             pulumi.StringInput `pulumi:"id"`
	RetentionUnit  pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue pulumi.IntInput    `pulumi:"retentionValue"`
}

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToOutput(ctx context.Context) pulumix.Output[GetClusterSnapshotBackupPolicyPolicyPolicyItem] {
	return pulumix.Output[GetClusterSnapshotBackupPolicyPolicyPolicyItem]{
		OutputState: i.ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx).OutputState,
	}
}

// GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyPolicyItemArray and GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//	GetClusterSnapshotBackupPolicyPolicyPolicyItemArray{ GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemArray []GetClusterSnapshotBackupPolicyPolicyPolicyItemInput

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterSnapshotBackupPolicyPolicyPolicyItem] {
	return pulumix.Output[[]GetClusterSnapshotBackupPolicyPolicyPolicyItem]{
		OutputState: i.ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetClusterSnapshotBackupPolicyPolicyPolicyItem] {
	return pulumix.Output[GetClusterSnapshotBackupPolicyPolicyPolicyItem]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClusterSnapshotBackupPolicyPolicyPolicyItem] {
	return pulumix.Output[[]GetClusterSnapshotBackupPolicyPolicyPolicyItem]{
		OutputState: o.OutputState,
	}
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]GetClusterSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type GetClustersResult struct {
	// Get the advanced configuration options. See Advanced Configuration below for more details.
	AdvancedConfigurations []GetClustersResultAdvancedConfiguration `pulumi:"advancedConfigurations"`
	// Specifies whether cluster tier auto-scaling is enabled. The default is false.
	AutoScalingComputeEnabled bool `pulumi:"autoScalingComputeEnabled"`
	// * `autoScalingComputeScaleDownEnabled` - Specifies whether cluster tier auto-down-scaling is enabled.
	AutoScalingComputeScaleDownEnabled bool `pulumi:"autoScalingComputeScaleDownEnabled"`
	// Indicates whether disk auto-scaling is enabled.
	AutoScalingDiskGbEnabled bool `pulumi:"autoScalingDiskGbEnabled"`
	// Indicates Cloud service provider on which the server for a multi-tenant cluster is provisioned.
	BackingProviderName string `pulumi:"backingProviderName"`
	// Legacy Option, Indicates whether Atlas continuous backups are enabled for the cluster.
	BackupEnabled bool `pulumi:"backupEnabled"`
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details. **DEPRECATED** Use `biConnectorConfig` instead.
	//
	// Deprecated: use bi_connector_config instead
	BiConnector map[string]string `pulumi:"biConnector"`
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
	BiConnectorConfigs []GetClustersResultBiConnectorConfig `pulumi:"biConnectorConfigs"`
	// Indicates the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
	ClusterType string `pulumi:"clusterType"`
	// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
	// - `connection_strings.standard` -   Public mongodb:// connection string for this cluster.
	// - `connection_strings.standard_srv` - Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.standard.
	// - `connection_strings.aws_private_link` -  [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. **DEPRECATED** Use `connection_strings.private_endpoint[n].connection_string` instead.
	// - `connection_strings.aws_private_link_srv` - [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.awsPrivateLink. **DEPRECATED** `connection_strings.private_endpoint[n].srv_connection_string` instead.
	// - `connection_strings.private` -   [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	// - `connection_strings.private_srv` -  [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	// - `connection_strings.private_endpoint.#.connection_string` - Private-endpoint-aware `mongodb://`connection string for this private endpoint.
	// - `connection_strings.private_endpoint.#.srv_connection_string` - Private-endpoint-aware `mongodb+srv://` connection string for this private endpoint.
	// - `connection_strings.private_endpoint.#.srv_shard_optimized_connection_string` - Private endpoint-aware connection string optimized for sharded clusters that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint.
	// - `connection_strings.private_endpoint.#.type` - Type of MongoDB process that you connect to with the connection strings. Atlas returns `MONGOD` for replica sets, or `MONGOS` for sharded clusters.
	// - `connection_strings.private_endpoint.#.endpoints` - Private endpoint through which you connect to Atlas when you use `connection_strings.private_endpoint[n].connection_string` or `connection_strings.private_endpoint[n].srv_connection_string`
	// - `connection_strings.private_endpoint.#.endpoints.#.endpoint_id` - Unique identifier of the private endpoint.
	// - `connection_strings.private_endpoint.#.endpoints.#.provider_name` - Cloud provider to which you deployed the private endpoint. Atlas returns `AWS` or `AZURE`.
	// - `connection_strings.private_endpoint.#.endpoints.#.region` - Region to which you deployed the private endpoint.
	ConnectionStrings []GetClustersResultConnectionString `pulumi:"connectionStrings"`
	// The Network Peering Container ID.
	ContainerId string `pulumi:"containerId"`
	// Indicates the size in gigabytes of the server’s root volume (AWS/GCP Only).
	DiskSizeGb float64 `pulumi:"diskSizeGb"`
	// Indicates whether Encryption at Rest is enabled or disabled.
	EncryptionAtRestProvider string                   `pulumi:"encryptionAtRestProvider"`
	Labels                   []GetClustersResultLabel `pulumi:"labels"`
	// Indicates the version of the cluster to deploy.
	MongoDbMajorVersion string `pulumi:"mongoDbMajorVersion"`
	// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
	MongoDbVersion string `pulumi:"mongoDbVersion"`
	// Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
	MongoUri string `pulumi:"mongoUri"`
	// Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
	MongoUriUpdated string `pulumi:"mongoUriUpdated"`
	// Describes connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
	MongoUriWithOptions string `pulumi:"mongoUriWithOptions"`
	// The name of the current plugin
	Name string `pulumi:"name"`
	// Number of shards to deploy in the specified zone.
	NumShards int `pulumi:"numShards"`
	// Flag that indicates whether the cluster is paused or not.
	Paused bool `pulumi:"paused"`
	// Flag that indicates if the cluster uses Continuous Cloud Backup.
	PitEnabled bool `pulumi:"pitEnabled"`
	// Maximum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMaxInstanceSize string `pulumi:"providerAutoScalingComputeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMinInstanceSize string `pulumi:"providerAutoScalingComputeMinInstanceSize"`
	// Flag indicating if the cluster uses Cloud Backup Snapshots for backups. **DEPRECATED** Use `cloudBackup` instead.
	ProviderBackupEnabled bool `pulumi:"providerBackupEnabled"`
	// Indicates the maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected providerSettings.instanceSizeName and diskSizeGB.
	ProviderDiskIops int `pulumi:"providerDiskIops"`
	// Describes Azure disk type of the server’s root volume (Azure Only).
	ProviderDiskTypeName string `pulumi:"providerDiskTypeName"`
	// **(DEPRECATED)** Indicates whether the Amazon EBS encryption is enabled. This feature encrypts the server’s root volume for both data at rest within the volume and data moving between the volume and the instance. By default this attribute is always enabled, per deprecation process showing the real value at `providerEncryptEbsVolumeFlag` computed attribute.
	ProviderEncryptEbsVolume bool `pulumi:"providerEncryptEbsVolume"`
	// Atlas provides different instance sizes, each with a default storage capacity and RAM size.
	ProviderInstanceSizeName string `pulumi:"providerInstanceSizeName"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	// Indicates Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. Requires the Atlas Region name, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	ProviderRegionName string `pulumi:"providerRegionName"`
	// Indicates the type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.
	// > **NOTE:** `STANDARD` is not available for NVME clusters.
	ProviderVolumeType string `pulumi:"providerVolumeType"`
	// (Deprecated) Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
	ReplicationFactor int `pulumi:"replicationFactor"`
	// Configuration for cluster regions.  See Replication Spec below for more details.
	ReplicationSpecs []GetClustersResultReplicationSpec `pulumi:"replicationSpecs"`
	// current snapshot schedule and retention settings for the cluster.
	SnapshotBackupPolicies []GetClustersResultSnapshotBackupPolicy `pulumi:"snapshotBackupPolicies"`
	// Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
	SrvAddress string `pulumi:"srvAddress"`
	// Indicates the current state of the cluster. The possible states are:
	// - IDLE
	// - CREATING
	// - UPDATING
	// - DELETING
	// - DELETED
	// - REPAIRING
	StateName string `pulumi:"stateName"`
	// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled bool `pulumi:"terminationProtectionEnabled"`
	// Release cadence that Atlas uses for this cluster.
	VersionReleaseSystem string `pulumi:"versionReleaseSystem"`
}

// GetClustersResultInput is an input type that accepts GetClustersResultArgs and GetClustersResultOutput values.
// You can construct a concrete instance of `GetClustersResultInput` via:
//
//	GetClustersResultArgs{...}
type GetClustersResultInput interface {
	pulumi.Input

	ToGetClustersResultOutput() GetClustersResultOutput
	ToGetClustersResultOutputWithContext(context.Context) GetClustersResultOutput
}

type GetClustersResultArgs struct {
	// Get the advanced configuration options. See Advanced Configuration below for more details.
	AdvancedConfigurations GetClustersResultAdvancedConfigurationArrayInput `pulumi:"advancedConfigurations"`
	// Specifies whether cluster tier auto-scaling is enabled. The default is false.
	AutoScalingComputeEnabled pulumi.BoolInput `pulumi:"autoScalingComputeEnabled"`
	// * `autoScalingComputeScaleDownEnabled` - Specifies whether cluster tier auto-down-scaling is enabled.
	AutoScalingComputeScaleDownEnabled pulumi.BoolInput `pulumi:"autoScalingComputeScaleDownEnabled"`
	// Indicates whether disk auto-scaling is enabled.
	AutoScalingDiskGbEnabled pulumi.BoolInput `pulumi:"autoScalingDiskGbEnabled"`
	// Indicates Cloud service provider on which the server for a multi-tenant cluster is provisioned.
	BackingProviderName pulumi.StringInput `pulumi:"backingProviderName"`
	// Legacy Option, Indicates whether Atlas continuous backups are enabled for the cluster.
	BackupEnabled pulumi.BoolInput `pulumi:"backupEnabled"`
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details. **DEPRECATED** Use `biConnectorConfig` instead.
	//
	// Deprecated: use bi_connector_config instead
	BiConnector pulumi.StringMapInput `pulumi:"biConnector"`
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
	BiConnectorConfigs GetClustersResultBiConnectorConfigArrayInput `pulumi:"biConnectorConfigs"`
	// Indicates the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
	// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
	// - `connection_strings.standard` -   Public mongodb:// connection string for this cluster.
	// - `connection_strings.standard_srv` - Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.standard.
	// - `connection_strings.aws_private_link` -  [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. **DEPRECATED** Use `connection_strings.private_endpoint[n].connection_string` instead.
	// - `connection_strings.aws_private_link_srv` - [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.awsPrivateLink. **DEPRECATED** `connection_strings.private_endpoint[n].srv_connection_string` instead.
	// - `connection_strings.private` -   [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	// - `connection_strings.private_srv` -  [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	// - `connection_strings.private_endpoint.#.connection_string` - Private-endpoint-aware `mongodb://`connection string for this private endpoint.
	// - `connection_strings.private_endpoint.#.srv_connection_string` - Private-endpoint-aware `mongodb+srv://` connection string for this private endpoint.
	// - `connection_strings.private_endpoint.#.srv_shard_optimized_connection_string` - Private endpoint-aware connection string optimized for sharded clusters that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint.
	// - `connection_strings.private_endpoint.#.type` - Type of MongoDB process that you connect to with the connection strings. Atlas returns `MONGOD` for replica sets, or `MONGOS` for sharded clusters.
	// - `connection_strings.private_endpoint.#.endpoints` - Private endpoint through which you connect to Atlas when you use `connection_strings.private_endpoint[n].connection_string` or `connection_strings.private_endpoint[n].srv_connection_string`
	// - `connection_strings.private_endpoint.#.endpoints.#.endpoint_id` - Unique identifier of the private endpoint.
	// - `connection_strings.private_endpoint.#.endpoints.#.provider_name` - Cloud provider to which you deployed the private endpoint. Atlas returns `AWS` or `AZURE`.
	// - `connection_strings.private_endpoint.#.endpoints.#.region` - Region to which you deployed the private endpoint.
	ConnectionStrings GetClustersResultConnectionStringArrayInput `pulumi:"connectionStrings"`
	// The Network Peering Container ID.
	ContainerId pulumi.StringInput `pulumi:"containerId"`
	// Indicates the size in gigabytes of the server’s root volume (AWS/GCP Only).
	DiskSizeGb pulumi.Float64Input `pulumi:"diskSizeGb"`
	// Indicates whether Encryption at Rest is enabled or disabled.
	EncryptionAtRestProvider pulumi.StringInput               `pulumi:"encryptionAtRestProvider"`
	Labels                   GetClustersResultLabelArrayInput `pulumi:"labels"`
	// Indicates the version of the cluster to deploy.
	MongoDbMajorVersion pulumi.StringInput `pulumi:"mongoDbMajorVersion"`
	// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
	MongoDbVersion pulumi.StringInput `pulumi:"mongoDbVersion"`
	// Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
	MongoUri pulumi.StringInput `pulumi:"mongoUri"`
	// Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
	MongoUriUpdated pulumi.StringInput `pulumi:"mongoUriUpdated"`
	// Describes connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
	MongoUriWithOptions pulumi.StringInput `pulumi:"mongoUriWithOptions"`
	// The name of the current plugin
	Name pulumi.StringInput `pulumi:"name"`
	// Number of shards to deploy in the specified zone.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Flag that indicates whether the cluster is paused or not.
	Paused pulumi.BoolInput `pulumi:"paused"`
	// Flag that indicates if the cluster uses Continuous Cloud Backup.
	PitEnabled pulumi.BoolInput `pulumi:"pitEnabled"`
	// Maximum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMaxInstanceSize pulumi.StringInput `pulumi:"providerAutoScalingComputeMaxInstanceSize"`
	// Minimum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMinInstanceSize pulumi.StringInput `pulumi:"providerAutoScalingComputeMinInstanceSize"`
	// Flag indicating if the cluster uses Cloud Backup Snapshots for backups. **DEPRECATED** Use `cloudBackup` instead.
	ProviderBackupEnabled pulumi.BoolInput `pulumi:"providerBackupEnabled"`
	// Indicates the maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected providerSettings.instanceSizeName and diskSizeGB.
	ProviderDiskIops pulumi.IntInput `pulumi:"providerDiskIops"`
	// Describes Azure disk type of the server’s root volume (Azure Only).
	ProviderDiskTypeName pulumi.StringInput `pulumi:"providerDiskTypeName"`
	// **(DEPRECATED)** Indicates whether the Amazon EBS encryption is enabled. This feature encrypts the server’s root volume for both data at rest within the volume and data moving between the volume and the instance. By default this attribute is always enabled, per deprecation process showing the real value at `providerEncryptEbsVolumeFlag` computed attribute.
	ProviderEncryptEbsVolume pulumi.BoolInput `pulumi:"providerEncryptEbsVolume"`
	// Atlas provides different instance sizes, each with a default storage capacity and RAM size.
	ProviderInstanceSizeName pulumi.StringInput `pulumi:"providerInstanceSizeName"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Indicates Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. Requires the Atlas Region name, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	ProviderRegionName pulumi.StringInput `pulumi:"providerRegionName"`
	// Indicates the type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.
	// > **NOTE:** `STANDARD` is not available for NVME clusters.
	ProviderVolumeType pulumi.StringInput `pulumi:"providerVolumeType"`
	// (Deprecated) Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
	ReplicationFactor pulumi.IntInput `pulumi:"replicationFactor"`
	// Configuration for cluster regions.  See Replication Spec below for more details.
	ReplicationSpecs GetClustersResultReplicationSpecArrayInput `pulumi:"replicationSpecs"`
	// current snapshot schedule and retention settings for the cluster.
	SnapshotBackupPolicies GetClustersResultSnapshotBackupPolicyArrayInput `pulumi:"snapshotBackupPolicies"`
	// Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
	SrvAddress pulumi.StringInput `pulumi:"srvAddress"`
	// Indicates the current state of the cluster. The possible states are:
	// - IDLE
	// - CREATING
	// - UPDATING
	// - DELETING
	// - DELETED
	// - REPAIRING
	StateName pulumi.StringInput `pulumi:"stateName"`
	// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled pulumi.BoolInput `pulumi:"terminationProtectionEnabled"`
	// Release cadence that Atlas uses for this cluster.
	VersionReleaseSystem pulumi.StringInput `pulumi:"versionReleaseSystem"`
}

func (GetClustersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResult)(nil)).Elem()
}

func (i GetClustersResultArgs) ToGetClustersResultOutput() GetClustersResultOutput {
	return i.ToGetClustersResultOutputWithContext(context.Background())
}

func (i GetClustersResultArgs) ToGetClustersResultOutputWithContext(ctx context.Context) GetClustersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultOutput)
}

func (i GetClustersResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetClustersResult] {
	return pulumix.Output[GetClustersResult]{
		OutputState: i.ToGetClustersResultOutputWithContext(ctx).OutputState,
	}
}

// GetClustersResultArrayInput is an input type that accepts GetClustersResultArray and GetClustersResultArrayOutput values.
// You can construct a concrete instance of `GetClustersResultArrayInput` via:
//
//	GetClustersResultArray{ GetClustersResultArgs{...} }
type GetClustersResultArrayInput interface {
	pulumi.Input

	ToGetClustersResultArrayOutput() GetClustersResultArrayOutput
	ToGetClustersResultArrayOutputWithContext(context.Context) GetClustersResultArrayOutput
}

type GetClustersResultArray []GetClustersResultInput

func (GetClustersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResult)(nil)).Elem()
}

func (i GetClustersResultArray) ToGetClustersResultArrayOutput() GetClustersResultArrayOutput {
	return i.ToGetClustersResultArrayOutputWithContext(context.Background())
}

func (i GetClustersResultArray) ToGetClustersResultArrayOutputWithContext(ctx context.Context) GetClustersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultArrayOutput)
}

func (i GetClustersResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResult] {
	return pulumix.Output[[]GetClustersResult]{
		OutputState: i.ToGetClustersResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClustersResultOutput struct{ *pulumi.OutputState }

func (GetClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResult)(nil)).Elem()
}

func (o GetClustersResultOutput) ToGetClustersResultOutput() GetClustersResultOutput {
	return o
}

func (o GetClustersResultOutput) ToGetClustersResultOutputWithContext(ctx context.Context) GetClustersResultOutput {
	return o
}

func (o GetClustersResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetClustersResult] {
	return pulumix.Output[GetClustersResult]{
		OutputState: o.OutputState,
	}
}

// Get the advanced configuration options. See Advanced Configuration below for more details.
func (o GetClustersResultOutput) AdvancedConfigurations() GetClustersResultAdvancedConfigurationArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultAdvancedConfiguration { return v.AdvancedConfigurations }).(GetClustersResultAdvancedConfigurationArrayOutput)
}

// Specifies whether cluster tier auto-scaling is enabled. The default is false.
func (o GetClustersResultOutput) AutoScalingComputeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.AutoScalingComputeEnabled }).(pulumi.BoolOutput)
}

// * `autoScalingComputeScaleDownEnabled` - Specifies whether cluster tier auto-down-scaling is enabled.
func (o GetClustersResultOutput) AutoScalingComputeScaleDownEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.AutoScalingComputeScaleDownEnabled }).(pulumi.BoolOutput)
}

// Indicates whether disk auto-scaling is enabled.
func (o GetClustersResultOutput) AutoScalingDiskGbEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.AutoScalingDiskGbEnabled }).(pulumi.BoolOutput)
}

// Indicates Cloud service provider on which the server for a multi-tenant cluster is provisioned.
func (o GetClustersResultOutput) BackingProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.BackingProviderName }).(pulumi.StringOutput)
}

// Legacy Option, Indicates whether Atlas continuous backups are enabled for the cluster.
func (o GetClustersResultOutput) BackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.BackupEnabled }).(pulumi.BoolOutput)
}

// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details. **DEPRECATED** Use `biConnectorConfig` instead.
//
// Deprecated: use bi_connector_config instead
func (o GetClustersResultOutput) BiConnector() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClustersResult) map[string]string { return v.BiConnector }).(pulumi.StringMapOutput)
}

// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
func (o GetClustersResultOutput) BiConnectorConfigs() GetClustersResultBiConnectorConfigArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultBiConnectorConfig { return v.BiConnectorConfigs }).(GetClustersResultBiConnectorConfigArrayOutput)
}

// Indicates the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
func (o GetClustersResultOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
// - `connection_strings.standard` -   Public mongodb:// connection string for this cluster.
// - `connection_strings.standard_srv` - Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.standard.
// - `connection_strings.aws_private_link` -  [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. **DEPRECATED** Use `connection_strings.private_endpoint[n].connection_string` instead.
// - `connection_strings.aws_private_link_srv` - [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.awsPrivateLink. **DEPRECATED** `connection_strings.private_endpoint[n].srv_connection_string` instead.
// - `connection_strings.private` -   [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
// - `connection_strings.private_srv` -  [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
// - `connection_strings.private_endpoint.#.connection_string` - Private-endpoint-aware `mongodb://`connection string for this private endpoint.
// - `connection_strings.private_endpoint.#.srv_connection_string` - Private-endpoint-aware `mongodb+srv://` connection string for this private endpoint.
// - `connection_strings.private_endpoint.#.srv_shard_optimized_connection_string` - Private endpoint-aware connection string optimized for sharded clusters that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint.
// - `connection_strings.private_endpoint.#.type` - Type of MongoDB process that you connect to with the connection strings. Atlas returns `MONGOD` for replica sets, or `MONGOS` for sharded clusters.
// - `connection_strings.private_endpoint.#.endpoints` - Private endpoint through which you connect to Atlas when you use `connection_strings.private_endpoint[n].connection_string` or `connection_strings.private_endpoint[n].srv_connection_string`
// - `connection_strings.private_endpoint.#.endpoints.#.endpoint_id` - Unique identifier of the private endpoint.
// - `connection_strings.private_endpoint.#.endpoints.#.provider_name` - Cloud provider to which you deployed the private endpoint. Atlas returns `AWS` or `AZURE`.
// - `connection_strings.private_endpoint.#.endpoints.#.region` - Region to which you deployed the private endpoint.
func (o GetClustersResultOutput) ConnectionStrings() GetClustersResultConnectionStringArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultConnectionString { return v.ConnectionStrings }).(GetClustersResultConnectionStringArrayOutput)
}

// The Network Peering Container ID.
func (o GetClustersResultOutput) ContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ContainerId }).(pulumi.StringOutput)
}

// Indicates the size in gigabytes of the server’s root volume (AWS/GCP Only).
func (o GetClustersResultOutput) DiskSizeGb() pulumi.Float64Output {
	return o.ApplyT(func(v GetClustersResult) float64 { return v.DiskSizeGb }).(pulumi.Float64Output)
}

// Indicates whether Encryption at Rest is enabled or disabled.
func (o GetClustersResultOutput) EncryptionAtRestProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.EncryptionAtRestProvider }).(pulumi.StringOutput)
}

func (o GetClustersResultOutput) Labels() GetClustersResultLabelArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultLabel { return v.Labels }).(GetClustersResultLabelArrayOutput)
}

// Indicates the version of the cluster to deploy.
func (o GetClustersResultOutput) MongoDbMajorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoDbMajorVersion }).(pulumi.StringOutput)
}

// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
func (o GetClustersResultOutput) MongoDbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoDbVersion }).(pulumi.StringOutput)
}

// Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
func (o GetClustersResultOutput) MongoUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoUri }).(pulumi.StringOutput)
}

// Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
func (o GetClustersResultOutput) MongoUriUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoUriUpdated }).(pulumi.StringOutput)
}

// Describes connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
func (o GetClustersResultOutput) MongoUriWithOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoUriWithOptions }).(pulumi.StringOutput)
}

// The name of the current plugin
func (o GetClustersResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.Name }).(pulumi.StringOutput)
}

// Number of shards to deploy in the specified zone.
func (o GetClustersResultOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResult) int { return v.NumShards }).(pulumi.IntOutput)
}

// Flag that indicates whether the cluster is paused or not.
func (o GetClustersResultOutput) Paused() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.Paused }).(pulumi.BoolOutput)
}

// Flag that indicates if the cluster uses Continuous Cloud Backup.
func (o GetClustersResultOutput) PitEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.PitEnabled }).(pulumi.BoolOutput)
}

// Maximum instance size to which your cluster can automatically scale.
func (o GetClustersResultOutput) ProviderAutoScalingComputeMaxInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderAutoScalingComputeMaxInstanceSize }).(pulumi.StringOutput)
}

// Minimum instance size to which your cluster can automatically scale.
func (o GetClustersResultOutput) ProviderAutoScalingComputeMinInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderAutoScalingComputeMinInstanceSize }).(pulumi.StringOutput)
}

// Flag indicating if the cluster uses Cloud Backup Snapshots for backups. **DEPRECATED** Use `cloudBackup` instead.
func (o GetClustersResultOutput) ProviderBackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.ProviderBackupEnabled }).(pulumi.BoolOutput)
}

// Indicates the maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected providerSettings.instanceSizeName and diskSizeGB.
func (o GetClustersResultOutput) ProviderDiskIops() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResult) int { return v.ProviderDiskIops }).(pulumi.IntOutput)
}

// Describes Azure disk type of the server’s root volume (Azure Only).
func (o GetClustersResultOutput) ProviderDiskTypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderDiskTypeName }).(pulumi.StringOutput)
}

// **(DEPRECATED)** Indicates whether the Amazon EBS encryption is enabled. This feature encrypts the server’s root volume for both data at rest within the volume and data moving between the volume and the instance. By default this attribute is always enabled, per deprecation process showing the real value at `providerEncryptEbsVolumeFlag` computed attribute.
func (o GetClustersResultOutput) ProviderEncryptEbsVolume() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.ProviderEncryptEbsVolume }).(pulumi.BoolOutput)
}

// Atlas provides different instance sizes, each with a default storage capacity and RAM size.
func (o GetClustersResultOutput) ProviderInstanceSizeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderInstanceSizeName }).(pulumi.StringOutput)
}

// Indicates the cloud service provider on which the servers are provisioned.
func (o GetClustersResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Indicates Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. Requires the Atlas Region name, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
func (o GetClustersResultOutput) ProviderRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderRegionName }).(pulumi.StringOutput)
}

// Indicates the type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.
// > **NOTE:** `STANDARD` is not available for NVME clusters.
func (o GetClustersResultOutput) ProviderVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderVolumeType }).(pulumi.StringOutput)
}

// (Deprecated) Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
func (o GetClustersResultOutput) ReplicationFactor() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResult) int { return v.ReplicationFactor }).(pulumi.IntOutput)
}

// Configuration for cluster regions.  See Replication Spec below for more details.
func (o GetClustersResultOutput) ReplicationSpecs() GetClustersResultReplicationSpecArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultReplicationSpec { return v.ReplicationSpecs }).(GetClustersResultReplicationSpecArrayOutput)
}

// current snapshot schedule and retention settings for the cluster.
func (o GetClustersResultOutput) SnapshotBackupPolicies() GetClustersResultSnapshotBackupPolicyArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultSnapshotBackupPolicy { return v.SnapshotBackupPolicies }).(GetClustersResultSnapshotBackupPolicyArrayOutput)
}

// Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
func (o GetClustersResultOutput) SrvAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.SrvAddress }).(pulumi.StringOutput)
}

// Indicates the current state of the cluster. The possible states are:
// - IDLE
// - CREATING
// - UPDATING
// - DELETING
// - DELETED
// - REPAIRING
func (o GetClustersResultOutput) StateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.StateName }).(pulumi.StringOutput)
}

// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
func (o GetClustersResultOutput) TerminationProtectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.TerminationProtectionEnabled }).(pulumi.BoolOutput)
}

// Release cadence that Atlas uses for this cluster.
func (o GetClustersResultOutput) VersionReleaseSystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.VersionReleaseSystem }).(pulumi.StringOutput)
}

type GetClustersResultArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResult)(nil)).Elem()
}

func (o GetClustersResultArrayOutput) ToGetClustersResultArrayOutput() GetClustersResultArrayOutput {
	return o
}

func (o GetClustersResultArrayOutput) ToGetClustersResultArrayOutputWithContext(ctx context.Context) GetClustersResultArrayOutput {
	return o
}

func (o GetClustersResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResult] {
	return pulumix.Output[[]GetClustersResult]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultArrayOutput) Index(i pulumi.IntInput) GetClustersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResult {
		return vs[0].([]GetClustersResult)[vs[1].(int)]
	}).(GetClustersResultOutput)
}

type GetClustersResultAdvancedConfiguration struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern string `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern string `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong bool `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled bool `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol string `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan bool `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours int `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb int `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector int `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector           int `pulumi:"sampleSizeBiConnector"`
	TransactionLifetimeLimitSeconds int `pulumi:"transactionLifetimeLimitSeconds"`
}

// GetClustersResultAdvancedConfigurationInput is an input type that accepts GetClustersResultAdvancedConfigurationArgs and GetClustersResultAdvancedConfigurationOutput values.
// You can construct a concrete instance of `GetClustersResultAdvancedConfigurationInput` via:
//
//	GetClustersResultAdvancedConfigurationArgs{...}
type GetClustersResultAdvancedConfigurationInput interface {
	pulumi.Input

	ToGetClustersResultAdvancedConfigurationOutput() GetClustersResultAdvancedConfigurationOutput
	ToGetClustersResultAdvancedConfigurationOutputWithContext(context.Context) GetClustersResultAdvancedConfigurationOutput
}

type GetClustersResultAdvancedConfigurationArgs struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern pulumi.StringInput `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern pulumi.StringInput `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong pulumi.BoolInput `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled pulumi.BoolInput `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol pulumi.StringInput `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan pulumi.BoolInput `pulumi:"noTableScan"`
	// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
	OplogMinRetentionHours pulumi.IntInput `pulumi:"oplogMinRetentionHours"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb pulumi.IntInput `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector pulumi.IntInput `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector           pulumi.IntInput `pulumi:"sampleSizeBiConnector"`
	TransactionLifetimeLimitSeconds pulumi.IntInput `pulumi:"transactionLifetimeLimitSeconds"`
}

func (GetClustersResultAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (i GetClustersResultAdvancedConfigurationArgs) ToGetClustersResultAdvancedConfigurationOutput() GetClustersResultAdvancedConfigurationOutput {
	return i.ToGetClustersResultAdvancedConfigurationOutputWithContext(context.Background())
}

func (i GetClustersResultAdvancedConfigurationArgs) ToGetClustersResultAdvancedConfigurationOutputWithContext(ctx context.Context) GetClustersResultAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultAdvancedConfigurationOutput)
}

func (i GetClustersResultAdvancedConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultAdvancedConfiguration] {
	return pulumix.Output[GetClustersResultAdvancedConfiguration]{
		OutputState: i.ToGetClustersResultAdvancedConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GetClustersResultAdvancedConfigurationArrayInput is an input type that accepts GetClustersResultAdvancedConfigurationArray and GetClustersResultAdvancedConfigurationArrayOutput values.
// You can construct a concrete instance of `GetClustersResultAdvancedConfigurationArrayInput` via:
//
//	GetClustersResultAdvancedConfigurationArray{ GetClustersResultAdvancedConfigurationArgs{...} }
type GetClustersResultAdvancedConfigurationArrayInput interface {
	pulumi.Input

	ToGetClustersResultAdvancedConfigurationArrayOutput() GetClustersResultAdvancedConfigurationArrayOutput
	ToGetClustersResultAdvancedConfigurationArrayOutputWithContext(context.Context) GetClustersResultAdvancedConfigurationArrayOutput
}

type GetClustersResultAdvancedConfigurationArray []GetClustersResultAdvancedConfigurationInput

func (GetClustersResultAdvancedConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (i GetClustersResultAdvancedConfigurationArray) ToGetClustersResultAdvancedConfigurationArrayOutput() GetClustersResultAdvancedConfigurationArrayOutput {
	return i.ToGetClustersResultAdvancedConfigurationArrayOutputWithContext(context.Background())
}

func (i GetClustersResultAdvancedConfigurationArray) ToGetClustersResultAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetClustersResultAdvancedConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultAdvancedConfigurationArrayOutput)
}

func (i GetClustersResultAdvancedConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultAdvancedConfiguration] {
	return pulumix.Output[[]GetClustersResultAdvancedConfiguration]{
		OutputState: i.ToGetClustersResultAdvancedConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClustersResultAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (GetClustersResultAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (o GetClustersResultAdvancedConfigurationOutput) ToGetClustersResultAdvancedConfigurationOutput() GetClustersResultAdvancedConfigurationOutput {
	return o
}

func (o GetClustersResultAdvancedConfigurationOutput) ToGetClustersResultAdvancedConfigurationOutputWithContext(ctx context.Context) GetClustersResultAdvancedConfigurationOutput {
	return o
}

func (o GetClustersResultAdvancedConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultAdvancedConfiguration] {
	return pulumix.Output[GetClustersResultAdvancedConfiguration]{
		OutputState: o.OutputState,
	}
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o GetClustersResultAdvancedConfigurationOutput) DefaultReadConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) string { return v.DefaultReadConcern }).(pulumi.StringOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o GetClustersResultAdvancedConfigurationOutput) DefaultWriteConcern() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) string { return v.DefaultWriteConcern }).(pulumi.StringOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o GetClustersResultAdvancedConfigurationOutput) FailIndexKeyTooLong() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) bool { return v.FailIndexKeyTooLong }).(pulumi.BoolOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o GetClustersResultAdvancedConfigurationOutput) JavascriptEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) bool { return v.JavascriptEnabled }).(pulumi.BoolOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o GetClustersResultAdvancedConfigurationOutput) MinimumEnabledTlsProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) string { return v.MinimumEnabledTlsProtocol }).(pulumi.StringOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o GetClustersResultAdvancedConfigurationOutput) NoTableScan() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) bool { return v.NoTableScan }).(pulumi.BoolOutput)
}

// Minimum retention window for cluster's oplog expressed in hours. A value of null indicates that the cluster uses the default minimum oplog window that MongoDB Cloud calculates.
func (o GetClustersResultAdvancedConfigurationOutput) OplogMinRetentionHours() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) int { return v.OplogMinRetentionHours }).(pulumi.IntOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o GetClustersResultAdvancedConfigurationOutput) OplogSizeMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) int { return v.OplogSizeMb }).(pulumi.IntOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetClustersResultAdvancedConfigurationOutput) SampleRefreshIntervalBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) int { return v.SampleRefreshIntervalBiConnector }).(pulumi.IntOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o GetClustersResultAdvancedConfigurationOutput) SampleSizeBiConnector() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) int { return v.SampleSizeBiConnector }).(pulumi.IntOutput)
}

func (o GetClustersResultAdvancedConfigurationOutput) TransactionLifetimeLimitSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultAdvancedConfiguration) int { return v.TransactionLifetimeLimitSeconds }).(pulumi.IntOutput)
}

type GetClustersResultAdvancedConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultAdvancedConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultAdvancedConfiguration)(nil)).Elem()
}

func (o GetClustersResultAdvancedConfigurationArrayOutput) ToGetClustersResultAdvancedConfigurationArrayOutput() GetClustersResultAdvancedConfigurationArrayOutput {
	return o
}

func (o GetClustersResultAdvancedConfigurationArrayOutput) ToGetClustersResultAdvancedConfigurationArrayOutputWithContext(ctx context.Context) GetClustersResultAdvancedConfigurationArrayOutput {
	return o
}

func (o GetClustersResultAdvancedConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultAdvancedConfiguration] {
	return pulumix.Output[[]GetClustersResultAdvancedConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultAdvancedConfigurationArrayOutput) Index(i pulumi.IntInput) GetClustersResultAdvancedConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultAdvancedConfiguration {
		return vs[0].([]GetClustersResultAdvancedConfiguration)[vs[1].(int)]
	}).(GetClustersResultAdvancedConfigurationOutput)
}

type GetClustersResultBiConnectorConfig struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled bool `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference string `pulumi:"readPreference"`
}

// GetClustersResultBiConnectorConfigInput is an input type that accepts GetClustersResultBiConnectorConfigArgs and GetClustersResultBiConnectorConfigOutput values.
// You can construct a concrete instance of `GetClustersResultBiConnectorConfigInput` via:
//
//	GetClustersResultBiConnectorConfigArgs{...}
type GetClustersResultBiConnectorConfigInput interface {
	pulumi.Input

	ToGetClustersResultBiConnectorConfigOutput() GetClustersResultBiConnectorConfigOutput
	ToGetClustersResultBiConnectorConfigOutputWithContext(context.Context) GetClustersResultBiConnectorConfigOutput
}

type GetClustersResultBiConnectorConfigArgs struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringInput `pulumi:"readPreference"`
}

func (GetClustersResultBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultBiConnectorConfig)(nil)).Elem()
}

func (i GetClustersResultBiConnectorConfigArgs) ToGetClustersResultBiConnectorConfigOutput() GetClustersResultBiConnectorConfigOutput {
	return i.ToGetClustersResultBiConnectorConfigOutputWithContext(context.Background())
}

func (i GetClustersResultBiConnectorConfigArgs) ToGetClustersResultBiConnectorConfigOutputWithContext(ctx context.Context) GetClustersResultBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultBiConnectorConfigOutput)
}

func (i GetClustersResultBiConnectorConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultBiConnectorConfig] {
	return pulumix.Output[GetClustersResultBiConnectorConfig]{
		OutputState: i.ToGetClustersResultBiConnectorConfigOutputWithContext(ctx).OutputState,
	}
}

// GetClustersResultBiConnectorConfigArrayInput is an input type that accepts GetClustersResultBiConnectorConfigArray and GetClustersResultBiConnectorConfigArrayOutput values.
// You can construct a concrete instance of `GetClustersResultBiConnectorConfigArrayInput` via:
//
//	GetClustersResultBiConnectorConfigArray{ GetClustersResultBiConnectorConfigArgs{...} }
type GetClustersResultBiConnectorConfigArrayInput interface {
	pulumi.Input

	ToGetClustersResultBiConnectorConfigArrayOutput() GetClustersResultBiConnectorConfigArrayOutput
	ToGetClustersResultBiConnectorConfigArrayOutputWithContext(context.Context) GetClustersResultBiConnectorConfigArrayOutput
}

type GetClustersResultBiConnectorConfigArray []GetClustersResultBiConnectorConfigInput

func (GetClustersResultBiConnectorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultBiConnectorConfig)(nil)).Elem()
}

func (i GetClustersResultBiConnectorConfigArray) ToGetClustersResultBiConnectorConfigArrayOutput() GetClustersResultBiConnectorConfigArrayOutput {
	return i.ToGetClustersResultBiConnectorConfigArrayOutputWithContext(context.Background())
}

func (i GetClustersResultBiConnectorConfigArray) ToGetClustersResultBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetClustersResultBiConnectorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultBiConnectorConfigArrayOutput)
}

func (i GetClustersResultBiConnectorConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultBiConnectorConfig] {
	return pulumix.Output[[]GetClustersResultBiConnectorConfig]{
		OutputState: i.ToGetClustersResultBiConnectorConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClustersResultBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (GetClustersResultBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultBiConnectorConfig)(nil)).Elem()
}

func (o GetClustersResultBiConnectorConfigOutput) ToGetClustersResultBiConnectorConfigOutput() GetClustersResultBiConnectorConfigOutput {
	return o
}

func (o GetClustersResultBiConnectorConfigOutput) ToGetClustersResultBiConnectorConfigOutputWithContext(ctx context.Context) GetClustersResultBiConnectorConfigOutput {
	return o
}

func (o GetClustersResultBiConnectorConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultBiConnectorConfig] {
	return pulumix.Output[GetClustersResultBiConnectorConfig]{
		OutputState: o.OutputState,
	}
}

// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
func (o GetClustersResultBiConnectorConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultBiConnectorConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o GetClustersResultBiConnectorConfigOutput) ReadPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultBiConnectorConfig) string { return v.ReadPreference }).(pulumi.StringOutput)
}

type GetClustersResultBiConnectorConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultBiConnectorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultBiConnectorConfig)(nil)).Elem()
}

func (o GetClustersResultBiConnectorConfigArrayOutput) ToGetClustersResultBiConnectorConfigArrayOutput() GetClustersResultBiConnectorConfigArrayOutput {
	return o
}

func (o GetClustersResultBiConnectorConfigArrayOutput) ToGetClustersResultBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetClustersResultBiConnectorConfigArrayOutput {
	return o
}

func (o GetClustersResultBiConnectorConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultBiConnectorConfig] {
	return pulumix.Output[[]GetClustersResultBiConnectorConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultBiConnectorConfigArrayOutput) Index(i pulumi.IntInput) GetClustersResultBiConnectorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultBiConnectorConfig {
		return vs[0].([]GetClustersResultBiConnectorConfig)[vs[1].(int)]
	}).(GetClustersResultBiConnectorConfigOutput)
}

type GetClustersResultConnectionString struct {
	AwsPrivateLink    map[string]interface{}                             `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv map[string]interface{}                             `pulumi:"awsPrivateLinkSrv"`
	Private           string                                             `pulumi:"private"`
	PrivateEndpoints  []GetClustersResultConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        string                                             `pulumi:"privateSrv"`
	Standard          string                                             `pulumi:"standard"`
	StandardSrv       string                                             `pulumi:"standardSrv"`
}

// GetClustersResultConnectionStringInput is an input type that accepts GetClustersResultConnectionStringArgs and GetClustersResultConnectionStringOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringInput` via:
//
//	GetClustersResultConnectionStringArgs{...}
type GetClustersResultConnectionStringInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringOutput() GetClustersResultConnectionStringOutput
	ToGetClustersResultConnectionStringOutputWithContext(context.Context) GetClustersResultConnectionStringOutput
}

type GetClustersResultConnectionStringArgs struct {
	AwsPrivateLink    pulumi.MapInput                                            `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv pulumi.MapInput                                            `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringInput                                         `pulumi:"private"`
	PrivateEndpoints  GetClustersResultConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringInput                                         `pulumi:"privateSrv"`
	Standard          pulumi.StringInput                                         `pulumi:"standard"`
	StandardSrv       pulumi.StringInput                                         `pulumi:"standardSrv"`
}

func (GetClustersResultConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionString)(nil)).Elem()
}

func (i GetClustersResultConnectionStringArgs) ToGetClustersResultConnectionStringOutput() GetClustersResultConnectionStringOutput {
	return i.ToGetClustersResultConnectionStringOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringArgs) ToGetClustersResultConnectionStringOutputWithContext(ctx context.Context) GetClustersResultConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringOutput)
}

func (i GetClustersResultConnectionStringArgs) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultConnectionString] {
	return pulumix.Output[GetClustersResultConnectionString]{
		OutputState: i.ToGetClustersResultConnectionStringOutputWithContext(ctx).OutputState,
	}
}

// GetClustersResultConnectionStringArrayInput is an input type that accepts GetClustersResultConnectionStringArray and GetClustersResultConnectionStringArrayOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringArrayInput` via:
//
//	GetClustersResultConnectionStringArray{ GetClustersResultConnectionStringArgs{...} }
type GetClustersResultConnectionStringArrayInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringArrayOutput() GetClustersResultConnectionStringArrayOutput
	ToGetClustersResultConnectionStringArrayOutputWithContext(context.Context) GetClustersResultConnectionStringArrayOutput
}

type GetClustersResultConnectionStringArray []GetClustersResultConnectionStringInput

func (GetClustersResultConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionString)(nil)).Elem()
}

func (i GetClustersResultConnectionStringArray) ToGetClustersResultConnectionStringArrayOutput() GetClustersResultConnectionStringArrayOutput {
	return i.ToGetClustersResultConnectionStringArrayOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringArray) ToGetClustersResultConnectionStringArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringArrayOutput)
}

func (i GetClustersResultConnectionStringArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultConnectionString] {
	return pulumix.Output[[]GetClustersResultConnectionString]{
		OutputState: i.ToGetClustersResultConnectionStringArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClustersResultConnectionStringOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionString)(nil)).Elem()
}

func (o GetClustersResultConnectionStringOutput) ToGetClustersResultConnectionStringOutput() GetClustersResultConnectionStringOutput {
	return o
}

func (o GetClustersResultConnectionStringOutput) ToGetClustersResultConnectionStringOutputWithContext(ctx context.Context) GetClustersResultConnectionStringOutput {
	return o
}

func (o GetClustersResultConnectionStringOutput) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultConnectionString] {
	return pulumix.Output[GetClustersResultConnectionString]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

func (o GetClustersResultConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o GetClustersResultConnectionStringOutput) Private() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) string { return v.Private }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringOutput) PrivateEndpoints() GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) []GetClustersResultConnectionStringPrivateEndpoint {
		return v.PrivateEndpoints
	}).(GetClustersResultConnectionStringPrivateEndpointArrayOutput)
}

func (o GetClustersResultConnectionStringOutput) PrivateSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) string { return v.PrivateSrv }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringOutput) Standard() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) string { return v.Standard }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringOutput) StandardSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) string { return v.StandardSrv }).(pulumi.StringOutput)
}

type GetClustersResultConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionString)(nil)).Elem()
}

func (o GetClustersResultConnectionStringArrayOutput) ToGetClustersResultConnectionStringArrayOutput() GetClustersResultConnectionStringArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringArrayOutput) ToGetClustersResultConnectionStringArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultConnectionString] {
	return pulumix.Output[[]GetClustersResultConnectionString]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultConnectionStringArrayOutput) Index(i pulumi.IntInput) GetClustersResultConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultConnectionString {
		return vs[0].([]GetClustersResultConnectionString)[vs[1].(int)]
	}).(GetClustersResultConnectionStringOutput)
}

type GetClustersResultConnectionStringPrivateEndpoint struct {
	ConnectionString                  string                                                     `pulumi:"connectionString"`
	Endpoints                         []GetClustersResultConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString               string                                                     `pulumi:"srvConnectionString"`
	SrvShardOptimizedConnectionString string                                                     `pulumi:"srvShardOptimizedConnectionString"`
	Type                              string                                                     `pulumi:"type"`
}

// GetClustersResultConnectionStringPrivateEndpointInput is an input type that accepts GetClustersResultConnectionStringPrivateEndpointArgs and GetClustersResultConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringPrivateEndpointInput` via:
//
//	GetClustersResultConnectionStringPrivateEndpointArgs{...}
type GetClustersResultConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringPrivateEndpointOutput() GetClustersResultConnectionStringPrivateEndpointOutput
	ToGetClustersResultConnectionStringPrivateEndpointOutputWithContext(context.Context) GetClustersResultConnectionStringPrivateEndpointOutput
}

type GetClustersResultConnectionStringPrivateEndpointArgs struct {
	ConnectionString                  pulumi.StringInput                                                 `pulumi:"connectionString"`
	Endpoints                         GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString               pulumi.StringInput                                                 `pulumi:"srvConnectionString"`
	SrvShardOptimizedConnectionString pulumi.StringInput                                                 `pulumi:"srvShardOptimizedConnectionString"`
	Type                              pulumi.StringInput                                                 `pulumi:"type"`
}

func (GetClustersResultConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetClustersResultConnectionStringPrivateEndpointArgs) ToGetClustersResultConnectionStringPrivateEndpointOutput() GetClustersResultConnectionStringPrivateEndpointOutput {
	return i.ToGetClustersResultConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringPrivateEndpointArgs) ToGetClustersResultConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringPrivateEndpointOutput)
}

func (i GetClustersResultConnectionStringPrivateEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultConnectionStringPrivateEndpoint] {
	return pulumix.Output[GetClustersResultConnectionStringPrivateEndpoint]{
		OutputState: i.ToGetClustersResultConnectionStringPrivateEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetClustersResultConnectionStringPrivateEndpointArrayInput is an input type that accepts GetClustersResultConnectionStringPrivateEndpointArray and GetClustersResultConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringPrivateEndpointArrayInput` via:
//
//	GetClustersResultConnectionStringPrivateEndpointArray{ GetClustersResultConnectionStringPrivateEndpointArgs{...} }
type GetClustersResultConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringPrivateEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointArrayOutput
	ToGetClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) GetClustersResultConnectionStringPrivateEndpointArrayOutput
}

type GetClustersResultConnectionStringPrivateEndpointArray []GetClustersResultConnectionStringPrivateEndpointInput

func (GetClustersResultConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetClustersResultConnectionStringPrivateEndpointArray) ToGetClustersResultConnectionStringPrivateEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return i.ToGetClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringPrivateEndpointArray) ToGetClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringPrivateEndpointArrayOutput)
}

func (i GetClustersResultConnectionStringPrivateEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultConnectionStringPrivateEndpoint] {
	return pulumix.Output[[]GetClustersResultConnectionStringPrivateEndpoint]{
		OutputState: i.ToGetClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClustersResultConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) ToGetClustersResultConnectionStringPrivateEndpointOutput() GetClustersResultConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) ToGetClustersResultConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultConnectionStringPrivateEndpoint] {
	return pulumix.Output[GetClustersResultConnectionStringPrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpoint) string { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) Endpoints() GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpoint) []GetClustersResultConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpoint) string { return v.SrvConnectionString }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) SrvShardOptimizedConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpoint) string {
		return v.SrvShardOptimizedConnectionString
	}).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

type GetClustersResultConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetClustersResultConnectionStringPrivateEndpointArrayOutput) ToGetClustersResultConnectionStringPrivateEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointArrayOutput) ToGetClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultConnectionStringPrivateEndpoint] {
	return pulumix.Output[[]GetClustersResultConnectionStringPrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) GetClustersResultConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultConnectionStringPrivateEndpoint {
		return vs[0].([]GetClustersResultConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(GetClustersResultConnectionStringPrivateEndpointOutput)
}

type GetClustersResultConnectionStringPrivateEndpointEndpoint struct {
	EndpointId string `pulumi:"endpointId"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	Region       string `pulumi:"region"`
}

// GetClustersResultConnectionStringPrivateEndpointEndpointInput is an input type that accepts GetClustersResultConnectionStringPrivateEndpointEndpointArgs and GetClustersResultConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringPrivateEndpointEndpointInput` via:
//
//	GetClustersResultConnectionStringPrivateEndpointEndpointArgs{...}
type GetClustersResultConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringPrivateEndpointEndpointOutput() GetClustersResultConnectionStringPrivateEndpointEndpointOutput
	ToGetClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointOutput
}

type GetClustersResultConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	Region       pulumi.StringInput `pulumi:"region"`
}

func (GetClustersResultConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetClustersResultConnectionStringPrivateEndpointEndpointArgs) ToGetClustersResultConnectionStringPrivateEndpointEndpointOutput() GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return i.ToGetClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringPrivateEndpointEndpointArgs) ToGetClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringPrivateEndpointEndpointOutput)
}

func (i GetClustersResultConnectionStringPrivateEndpointEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[GetClustersResultConnectionStringPrivateEndpointEndpoint]{
		OutputState: i.ToGetClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts GetClustersResultConnectionStringPrivateEndpointEndpointArray and GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//	GetClustersResultConnectionStringPrivateEndpointEndpointArray{ GetClustersResultConnectionStringPrivateEndpointEndpointArgs{...} }
type GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput
	ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput
}

type GetClustersResultConnectionStringPrivateEndpointEndpointArray []GetClustersResultConnectionStringPrivateEndpointEndpointInput

func (GetClustersResultConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetClustersResultConnectionStringPrivateEndpointEndpointArray) ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringPrivateEndpointEndpointArray) ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (i GetClustersResultConnectionStringPrivateEndpointEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[[]GetClustersResultConnectionStringPrivateEndpointEndpoint]{
		OutputState: i.ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClustersResultConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) ToGetClustersResultConnectionStringPrivateEndpointEndpointOutput() GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) ToGetClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[GetClustersResultConnectionStringPrivateEndpointEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Indicates the cloud service provider on which the servers are provisioned.
func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.ProviderName }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.Region }).(pulumi.StringOutput)
}

type GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultConnectionStringPrivateEndpointEndpoint] {
	return pulumix.Output[[]GetClustersResultConnectionStringPrivateEndpointEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]GetClustersResultConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(GetClustersResultConnectionStringPrivateEndpointEndpointOutput)
}

type GetClustersResultLabel struct {
	// The key that you want to write.
	Key string `pulumi:"key"`
	// The value that you want to write.
	Value string `pulumi:"value"`
}

// GetClustersResultLabelInput is an input type that accepts GetClustersResultLabelArgs and GetClustersResultLabelOutput values.
// You can construct a concrete instance of `GetClustersResultLabelInput` via:
//
//	GetClustersResultLabelArgs{...}
type GetClustersResultLabelInput interface {
	pulumi.Input

	ToGetClustersResultLabelOutput() GetClustersResultLabelOutput
	ToGetClustersResultLabelOutputWithContext(context.Context) GetClustersResultLabelOutput
}

type GetClustersResultLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClustersResultLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultLabel)(nil)).Elem()
}

func (i GetClustersResultLabelArgs) ToGetClustersResultLabelOutput() GetClustersResultLabelOutput {
	return i.ToGetClustersResultLabelOutputWithContext(context.Background())
}

func (i GetClustersResultLabelArgs) ToGetClustersResultLabelOutputWithContext(ctx context.Context) GetClustersResultLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultLabelOutput)
}

func (i GetClustersResultLabelArgs) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultLabel] {
	return pulumix.Output[GetClustersResultLabel]{
		OutputState: i.ToGetClustersResultLabelOutputWithContext(ctx).OutputState,
	}
}

// GetClustersResultLabelArrayInput is an input type that accepts GetClustersResultLabelArray and GetClustersResultLabelArrayOutput values.
// You can construct a concrete instance of `GetClustersResultLabelArrayInput` via:
//
//	GetClustersResultLabelArray{ GetClustersResultLabelArgs{...} }
type GetClustersResultLabelArrayInput interface {
	pulumi.Input

	ToGetClustersResultLabelArrayOutput() GetClustersResultLabelArrayOutput
	ToGetClustersResultLabelArrayOutputWithContext(context.Context) GetClustersResultLabelArrayOutput
}

type GetClustersResultLabelArray []GetClustersResultLabelInput

func (GetClustersResultLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultLabel)(nil)).Elem()
}

func (i GetClustersResultLabelArray) ToGetClustersResultLabelArrayOutput() GetClustersResultLabelArrayOutput {
	return i.ToGetClustersResultLabelArrayOutputWithContext(context.Background())
}

func (i GetClustersResultLabelArray) ToGetClustersResultLabelArrayOutputWithContext(ctx context.Context) GetClustersResultLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultLabelArrayOutput)
}

func (i GetClustersResultLabelArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultLabel] {
	return pulumix.Output[[]GetClustersResultLabel]{
		OutputState: i.ToGetClustersResultLabelArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClustersResultLabelOutput struct{ *pulumi.OutputState }

func (GetClustersResultLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultLabel)(nil)).Elem()
}

func (o GetClustersResultLabelOutput) ToGetClustersResultLabelOutput() GetClustersResultLabelOutput {
	return o
}

func (o GetClustersResultLabelOutput) ToGetClustersResultLabelOutputWithContext(ctx context.Context) GetClustersResultLabelOutput {
	return o
}

func (o GetClustersResultLabelOutput) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultLabel] {
	return pulumix.Output[GetClustersResultLabel]{
		OutputState: o.OutputState,
	}
}

// The key that you want to write.
func (o GetClustersResultLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that you want to write.
func (o GetClustersResultLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetClustersResultLabelArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultLabel)(nil)).Elem()
}

func (o GetClustersResultLabelArrayOutput) ToGetClustersResultLabelArrayOutput() GetClustersResultLabelArrayOutput {
	return o
}

func (o GetClustersResultLabelArrayOutput) ToGetClustersResultLabelArrayOutputWithContext(ctx context.Context) GetClustersResultLabelArrayOutput {
	return o
}

func (o GetClustersResultLabelArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultLabel] {
	return pulumix.Output[[]GetClustersResultLabel]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultLabelArrayOutput) Index(i pulumi.IntInput) GetClustersResultLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultLabel {
		return vs[0].([]GetClustersResultLabel)[vs[1].(int)]
	}).(GetClustersResultLabelOutput)
}

type GetClustersResultReplicationSpec struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id string `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards int `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs []GetClustersResultReplicationSpecRegionsConfig `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName string `pulumi:"zoneName"`
}

// GetClustersResultReplicationSpecInput is an input type that accepts GetClustersResultReplicationSpecArgs and GetClustersResultReplicationSpecOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecInput` via:
//
//	GetClustersResultReplicationSpecArgs{...}
type GetClustersResultReplicationSpecInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecOutput() GetClustersResultReplicationSpecOutput
	ToGetClustersResultReplicationSpecOutputWithContext(context.Context) GetClustersResultReplicationSpecOutput
}

type GetClustersResultReplicationSpecArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs GetClustersResultReplicationSpecRegionsConfigArrayInput `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetClustersResultReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpec)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecArgs) ToGetClustersResultReplicationSpecOutput() GetClustersResultReplicationSpecOutput {
	return i.ToGetClustersResultReplicationSpecOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecArgs) ToGetClustersResultReplicationSpecOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecOutput)
}

func (i GetClustersResultReplicationSpecArgs) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultReplicationSpec] {
	return pulumix.Output[GetClustersResultReplicationSpec]{
		OutputState: i.ToGetClustersResultReplicationSpecOutputWithContext(ctx).OutputState,
	}
}

// GetClustersResultReplicationSpecArrayInput is an input type that accepts GetClustersResultReplicationSpecArray and GetClustersResultReplicationSpecArrayOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecArrayInput` via:
//
//	GetClustersResultReplicationSpecArray{ GetClustersResultReplicationSpecArgs{...} }
type GetClustersResultReplicationSpecArrayInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecArrayOutput() GetClustersResultReplicationSpecArrayOutput
	ToGetClustersResultReplicationSpecArrayOutputWithContext(context.Context) GetClustersResultReplicationSpecArrayOutput
}

type GetClustersResultReplicationSpecArray []GetClustersResultReplicationSpecInput

func (GetClustersResultReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpec)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecArray) ToGetClustersResultReplicationSpecArrayOutput() GetClustersResultReplicationSpecArrayOutput {
	return i.ToGetClustersResultReplicationSpecArrayOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecArray) ToGetClustersResultReplicationSpecArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecArrayOutput)
}

func (i GetClustersResultReplicationSpecArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultReplicationSpec] {
	return pulumix.Output[[]GetClustersResultReplicationSpec]{
		OutputState: i.ToGetClustersResultReplicationSpecArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClustersResultReplicationSpecOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpec)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecOutput) ToGetClustersResultReplicationSpecOutput() GetClustersResultReplicationSpecOutput {
	return o
}

func (o GetClustersResultReplicationSpecOutput) ToGetClustersResultReplicationSpecOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecOutput {
	return o
}

func (o GetClustersResultReplicationSpecOutput) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultReplicationSpec] {
	return pulumix.Output[GetClustersResultReplicationSpec]{
		OutputState: o.OutputState,
	}
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClustersResultReplicationSpecOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) string { return v.Id }).(pulumi.StringOutput)
}

// Number of shards to deploy in the specified zone.
func (o GetClustersResultReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
func (o GetClustersResultReplicationSpecOutput) RegionsConfigs() GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) []GetClustersResultReplicationSpecRegionsConfig {
		return v.RegionsConfigs
	}).(GetClustersResultReplicationSpecRegionsConfigArrayOutput)
}

// Indicates the n ame for the zone in a Global Cluster.
func (o GetClustersResultReplicationSpecOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetClustersResultReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpec)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecArrayOutput) ToGetClustersResultReplicationSpecArrayOutput() GetClustersResultReplicationSpecArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecArrayOutput) ToGetClustersResultReplicationSpecArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultReplicationSpec] {
	return pulumix.Output[[]GetClustersResultReplicationSpec]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultReplicationSpecArrayOutput) Index(i pulumi.IntInput) GetClustersResultReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultReplicationSpec {
		return vs[0].([]GetClustersResultReplicationSpec)[vs[1].(int)]
	}).(GetClustersResultReplicationSpecOutput)
}

type GetClustersResultReplicationSpecRegionsConfig struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes int `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes int `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority int `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes int `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName string `pulumi:"regionName"`
}

// GetClustersResultReplicationSpecRegionsConfigInput is an input type that accepts GetClustersResultReplicationSpecRegionsConfigArgs and GetClustersResultReplicationSpecRegionsConfigOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecRegionsConfigInput` via:
//
//	GetClustersResultReplicationSpecRegionsConfigArgs{...}
type GetClustersResultReplicationSpecRegionsConfigInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecRegionsConfigOutput() GetClustersResultReplicationSpecRegionsConfigOutput
	ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(context.Context) GetClustersResultReplicationSpecRegionsConfigOutput
}

type GetClustersResultReplicationSpecRegionsConfigArgs struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes pulumi.IntInput `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes pulumi.IntInput `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes pulumi.IntInput `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetClustersResultReplicationSpecRegionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecRegionsConfigArgs) ToGetClustersResultReplicationSpecRegionsConfigOutput() GetClustersResultReplicationSpecRegionsConfigOutput {
	return i.ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecRegionsConfigArgs) ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecRegionsConfigOutput)
}

func (i GetClustersResultReplicationSpecRegionsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultReplicationSpecRegionsConfig] {
	return pulumix.Output[GetClustersResultReplicationSpecRegionsConfig]{
		OutputState: i.ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(ctx).OutputState,
	}
}

// GetClustersResultReplicationSpecRegionsConfigArrayInput is an input type that accepts GetClustersResultReplicationSpecRegionsConfigArray and GetClustersResultReplicationSpecRegionsConfigArrayOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecRegionsConfigArrayInput` via:
//
//	GetClustersResultReplicationSpecRegionsConfigArray{ GetClustersResultReplicationSpecRegionsConfigArgs{...} }
type GetClustersResultReplicationSpecRegionsConfigArrayInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecRegionsConfigArrayOutput() GetClustersResultReplicationSpecRegionsConfigArrayOutput
	ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(context.Context) GetClustersResultReplicationSpecRegionsConfigArrayOutput
}

type GetClustersResultReplicationSpecRegionsConfigArray []GetClustersResultReplicationSpecRegionsConfigInput

func (GetClustersResultReplicationSpecRegionsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecRegionsConfigArray) ToGetClustersResultReplicationSpecRegionsConfigArrayOutput() GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return i.ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecRegionsConfigArray) ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecRegionsConfigArrayOutput)
}

func (i GetClustersResultReplicationSpecRegionsConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultReplicationSpecRegionsConfig] {
	return pulumix.Output[[]GetClustersResultReplicationSpecRegionsConfig]{
		OutputState: i.ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClustersResultReplicationSpecRegionsConfigOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecRegionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecRegionsConfigOutput) ToGetClustersResultReplicationSpecRegionsConfigOutput() GetClustersResultReplicationSpecRegionsConfigOutput {
	return o
}

func (o GetClustersResultReplicationSpecRegionsConfigOutput) ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigOutput {
	return o
}

func (o GetClustersResultReplicationSpecRegionsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultReplicationSpecRegionsConfig] {
	return pulumix.Output[GetClustersResultReplicationSpecRegionsConfig]{
		OutputState: o.OutputState,
	}
}

// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) AnalyticsNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.AnalyticsNodes }).(pulumi.IntOutput)
}

// Number of electable nodes for Atlas to deploy to the region.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) ElectableNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.ElectableNodes }).(pulumi.IntOutput)
}

// Election priority of the region. For regions with only read-only nodes, set this value to 0.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) ReadOnlyNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.ReadOnlyNodes }).(pulumi.IntOutput)
}

// Name for the region specified.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetClustersResultReplicationSpecRegionsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecRegionsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecRegionsConfigArrayOutput) ToGetClustersResultReplicationSpecRegionsConfigArrayOutput() GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecRegionsConfigArrayOutput) ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecRegionsConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultReplicationSpecRegionsConfig] {
	return pulumix.Output[[]GetClustersResultReplicationSpecRegionsConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultReplicationSpecRegionsConfigArrayOutput) Index(i pulumi.IntInput) GetClustersResultReplicationSpecRegionsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultReplicationSpecRegionsConfig {
		return vs[0].([]GetClustersResultReplicationSpecRegionsConfig)[vs[1].(int)]
	}).(GetClustersResultReplicationSpecRegionsConfigOutput)
}

type GetClustersResultSnapshotBackupPolicy struct {
	ClusterId             string                                        `pulumi:"clusterId"`
	ClusterName           string                                        `pulumi:"clusterName"`
	NextSnapshot          string                                        `pulumi:"nextSnapshot"`
	Policies              []GetClustersResultSnapshotBackupPolicyPolicy `pulumi:"policies"`
	ReferenceHourOfDay    int                                           `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour int                                           `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     int                                           `pulumi:"restoreWindowDays"`
	UpdateSnapshots       bool                                          `pulumi:"updateSnapshots"`
}

// GetClustersResultSnapshotBackupPolicyInput is an input type that accepts GetClustersResultSnapshotBackupPolicyArgs and GetClustersResultSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyInput` via:
//
//	GetClustersResultSnapshotBackupPolicyArgs{...}
type GetClustersResultSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyOutput() GetClustersResultSnapshotBackupPolicyOutput
	ToGetClustersResultSnapshotBackupPolicyOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyOutput
}

type GetClustersResultSnapshotBackupPolicyArgs struct {
	ClusterId             pulumi.StringInput                                    `pulumi:"clusterId"`
	ClusterName           pulumi.StringInput                                    `pulumi:"clusterName"`
	NextSnapshot          pulumi.StringInput                                    `pulumi:"nextSnapshot"`
	Policies              GetClustersResultSnapshotBackupPolicyPolicyArrayInput `pulumi:"policies"`
	ReferenceHourOfDay    pulumi.IntInput                                       `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour pulumi.IntInput                                       `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     pulumi.IntInput                                       `pulumi:"restoreWindowDays"`
	UpdateSnapshots       pulumi.BoolInput                                      `pulumi:"updateSnapshots"`
}

func (GetClustersResultSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyArgs) ToGetClustersResultSnapshotBackupPolicyOutput() GetClustersResultSnapshotBackupPolicyOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyArgs) ToGetClustersResultSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyOutput)
}

func (i GetClustersResultSnapshotBackupPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultSnapshotBackupPolicy] {
	return pulumix.Output[GetClustersResultSnapshotBackupPolicy]{
		OutputState: i.ToGetClustersResultSnapshotBackupPolicyOutputWithContext(ctx).OutputState,
	}
}

// GetClustersResultSnapshotBackupPolicyArrayInput is an input type that accepts GetClustersResultSnapshotBackupPolicyArray and GetClustersResultSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyArrayInput` via:
//
//	GetClustersResultSnapshotBackupPolicyArray{ GetClustersResultSnapshotBackupPolicyArgs{...} }
type GetClustersResultSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyArrayOutput
	ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyArrayOutput
}

type GetClustersResultSnapshotBackupPolicyArray []GetClustersResultSnapshotBackupPolicyInput

func (GetClustersResultSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyArray) ToGetClustersResultSnapshotBackupPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyArrayOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyArray) ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyArrayOutput)
}

func (i GetClustersResultSnapshotBackupPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultSnapshotBackupPolicy] {
	return pulumix.Output[[]GetClustersResultSnapshotBackupPolicy]{
		OutputState: i.ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClustersResultSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ToGetClustersResultSnapshotBackupPolicyOutput() GetClustersResultSnapshotBackupPolicyOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ToGetClustersResultSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultSnapshotBackupPolicy] {
	return pulumix.Output[GetClustersResultSnapshotBackupPolicy]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) NextSnapshot() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) string { return v.NextSnapshot }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) Policies() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) []GetClustersResultSnapshotBackupPolicyPolicy {
		return v.Policies
	}).(GetClustersResultSnapshotBackupPolicyPolicyArrayOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ReferenceHourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) int { return v.ReferenceHourOfDay }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ReferenceMinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) int { return v.ReferenceMinuteOfHour }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) RestoreWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) int { return v.RestoreWindowDays }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) UpdateSnapshots() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) bool { return v.UpdateSnapshots }).(pulumi.BoolOutput)
}

type GetClustersResultSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultSnapshotBackupPolicy] {
	return pulumix.Output[[]GetClustersResultSnapshotBackupPolicy]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetClustersResultSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultSnapshotBackupPolicy {
		return vs[0].([]GetClustersResultSnapshotBackupPolicy)[vs[1].(int)]
	}).(GetClustersResultSnapshotBackupPolicyOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicy struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          string                                                  `pulumi:"id"`
	PolicyItems []GetClustersResultSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// GetClustersResultSnapshotBackupPolicyPolicyInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyArgs and GetClustersResultSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyInput` via:
//
//	GetClustersResultSnapshotBackupPolicyPolicyArgs{...}
type GetClustersResultSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyOutput() GetClustersResultSnapshotBackupPolicyPolicyOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          pulumi.StringInput                                              `pulumi:"id"`
	PolicyItems GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (GetClustersResultSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArgs) ToGetClustersResultSnapshotBackupPolicyPolicyOutput() GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArgs) ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyOutput)
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultSnapshotBackupPolicyPolicy] {
	return pulumix.Output[GetClustersResultSnapshotBackupPolicyPolicy]{
		OutputState: i.ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(ctx).OutputState,
	}
}

// GetClustersResultSnapshotBackupPolicyPolicyArrayInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyArray and GetClustersResultSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyArrayInput` via:
//
//	GetClustersResultSnapshotBackupPolicyPolicyArray{ GetClustersResultSnapshotBackupPolicyPolicyArgs{...} }
type GetClustersResultSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyArrayOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyArray []GetClustersResultSnapshotBackupPolicyPolicyInput

func (GetClustersResultSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArray) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArray) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyArrayOutput)
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultSnapshotBackupPolicyPolicy] {
	return pulumix.Output[[]GetClustersResultSnapshotBackupPolicyPolicy]{
		OutputState: i.ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClustersResultSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) ToGetClustersResultSnapshotBackupPolicyPolicyOutput() GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultSnapshotBackupPolicyPolicy] {
	return pulumix.Output[GetClustersResultSnapshotBackupPolicyPolicy]{
		OutputState: o.OutputState,
	}
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) PolicyItems() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicy) []GetClustersResultSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultSnapshotBackupPolicyPolicy] {
	return pulumix.Output[[]GetClustersResultSnapshotBackupPolicyPolicy]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultSnapshotBackupPolicyPolicy {
		return vs[0].([]GetClustersResultSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(GetClustersResultSnapshotBackupPolicyPolicyOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             string `pulumi:"id"`
	RetentionUnit  string `pulumi:"retentionUnit"`
	RetentionValue int    `pulumi:"retentionValue"`
}

// GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs and GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//	GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             pulumi.StringInput `pulumi:"id"`
	RetentionUnit  pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue pulumi.IntInput    `pulumi:"retentionValue"`
}

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput)
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultSnapshotBackupPolicyPolicyPolicyItem] {
	return pulumix.Output[GetClustersResultSnapshotBackupPolicyPolicyPolicyItem]{
		OutputState: i.ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx).OutputState,
	}
}

// GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray and GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//	GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray{ GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray []GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem] {
	return pulumix.Output[[]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem]{
		OutputState: i.ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetClustersResultSnapshotBackupPolicyPolicyPolicyItem] {
	return pulumix.Output[GetClustersResultSnapshotBackupPolicyPolicyPolicyItem]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem] {
	return pulumix.Output[[]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem]{
		OutputState: o.OutputState,
	}
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type GetCustomDbRoleAction struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action string `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources []GetCustomDbRoleActionResource `pulumi:"resources"`
}

// GetCustomDbRoleActionInput is an input type that accepts GetCustomDbRoleActionArgs and GetCustomDbRoleActionOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionInput` via:
//
//	GetCustomDbRoleActionArgs{...}
type GetCustomDbRoleActionInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionOutput() GetCustomDbRoleActionOutput
	ToGetCustomDbRoleActionOutputWithContext(context.Context) GetCustomDbRoleActionOutput
}

type GetCustomDbRoleActionArgs struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action pulumi.StringInput `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources GetCustomDbRoleActionResourceArrayInput `pulumi:"resources"`
}

func (GetCustomDbRoleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleAction)(nil)).Elem()
}

func (i GetCustomDbRoleActionArgs) ToGetCustomDbRoleActionOutput() GetCustomDbRoleActionOutput {
	return i.ToGetCustomDbRoleActionOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionArgs) ToGetCustomDbRoleActionOutputWithContext(ctx context.Context) GetCustomDbRoleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionOutput)
}

func (i GetCustomDbRoleActionArgs) ToOutput(ctx context.Context) pulumix.Output[GetCustomDbRoleAction] {
	return pulumix.Output[GetCustomDbRoleAction]{
		OutputState: i.ToGetCustomDbRoleActionOutputWithContext(ctx).OutputState,
	}
}

// GetCustomDbRoleActionArrayInput is an input type that accepts GetCustomDbRoleActionArray and GetCustomDbRoleActionArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionArrayInput` via:
//
//	GetCustomDbRoleActionArray{ GetCustomDbRoleActionArgs{...} }
type GetCustomDbRoleActionArrayInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionArrayOutput() GetCustomDbRoleActionArrayOutput
	ToGetCustomDbRoleActionArrayOutputWithContext(context.Context) GetCustomDbRoleActionArrayOutput
}

type GetCustomDbRoleActionArray []GetCustomDbRoleActionInput

func (GetCustomDbRoleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleAction)(nil)).Elem()
}

func (i GetCustomDbRoleActionArray) ToGetCustomDbRoleActionArrayOutput() GetCustomDbRoleActionArrayOutput {
	return i.ToGetCustomDbRoleActionArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionArray) ToGetCustomDbRoleActionArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionArrayOutput)
}

func (i GetCustomDbRoleActionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDbRoleAction] {
	return pulumix.Output[[]GetCustomDbRoleAction]{
		OutputState: i.ToGetCustomDbRoleActionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCustomDbRoleActionOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleAction)(nil)).Elem()
}

func (o GetCustomDbRoleActionOutput) ToGetCustomDbRoleActionOutput() GetCustomDbRoleActionOutput {
	return o
}

func (o GetCustomDbRoleActionOutput) ToGetCustomDbRoleActionOutputWithContext(ctx context.Context) GetCustomDbRoleActionOutput {
	return o
}

func (o GetCustomDbRoleActionOutput) ToOutput(ctx context.Context) pulumix.Output[GetCustomDbRoleAction] {
	return pulumix.Output[GetCustomDbRoleAction]{
		OutputState: o.OutputState,
	}
}

// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
func (o GetCustomDbRoleActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleAction) string { return v.Action }).(pulumi.StringOutput)
}

// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
func (o GetCustomDbRoleActionOutput) Resources() GetCustomDbRoleActionResourceArrayOutput {
	return o.ApplyT(func(v GetCustomDbRoleAction) []GetCustomDbRoleActionResource { return v.Resources }).(GetCustomDbRoleActionResourceArrayOutput)
}

type GetCustomDbRoleActionArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleAction)(nil)).Elem()
}

func (o GetCustomDbRoleActionArrayOutput) ToGetCustomDbRoleActionArrayOutput() GetCustomDbRoleActionArrayOutput {
	return o
}

func (o GetCustomDbRoleActionArrayOutput) ToGetCustomDbRoleActionArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionArrayOutput {
	return o
}

func (o GetCustomDbRoleActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDbRoleAction] {
	return pulumix.Output[[]GetCustomDbRoleAction]{
		OutputState: o.OutputState,
	}
}

func (o GetCustomDbRoleActionArrayOutput) Index(i pulumi.IntInput) GetCustomDbRoleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRoleAction {
		return vs[0].([]GetCustomDbRoleAction)[vs[1].(int)]
	}).(GetCustomDbRoleActionOutput)
}

type GetCustomDbRoleActionResource struct {
	Cluster        bool   `pulumi:"cluster"`
	CollectionName string `pulumi:"collectionName"`
	// (Required) Database on which the inherited role is granted.
	DatabaseName string `pulumi:"databaseName"`
}

// GetCustomDbRoleActionResourceInput is an input type that accepts GetCustomDbRoleActionResourceArgs and GetCustomDbRoleActionResourceOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionResourceInput` via:
//
//	GetCustomDbRoleActionResourceArgs{...}
type GetCustomDbRoleActionResourceInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionResourceOutput() GetCustomDbRoleActionResourceOutput
	ToGetCustomDbRoleActionResourceOutputWithContext(context.Context) GetCustomDbRoleActionResourceOutput
}

type GetCustomDbRoleActionResourceArgs struct {
	Cluster        pulumi.BoolInput   `pulumi:"cluster"`
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// (Required) Database on which the inherited role is granted.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (GetCustomDbRoleActionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleActionResource)(nil)).Elem()
}

func (i GetCustomDbRoleActionResourceArgs) ToGetCustomDbRoleActionResourceOutput() GetCustomDbRoleActionResourceOutput {
	return i.ToGetCustomDbRoleActionResourceOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionResourceArgs) ToGetCustomDbRoleActionResourceOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionResourceOutput)
}

func (i GetCustomDbRoleActionResourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetCustomDbRoleActionResource] {
	return pulumix.Output[GetCustomDbRoleActionResource]{
		OutputState: i.ToGetCustomDbRoleActionResourceOutputWithContext(ctx).OutputState,
	}
}

// GetCustomDbRoleActionResourceArrayInput is an input type that accepts GetCustomDbRoleActionResourceArray and GetCustomDbRoleActionResourceArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionResourceArrayInput` via:
//
//	GetCustomDbRoleActionResourceArray{ GetCustomDbRoleActionResourceArgs{...} }
type GetCustomDbRoleActionResourceArrayInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionResourceArrayOutput() GetCustomDbRoleActionResourceArrayOutput
	ToGetCustomDbRoleActionResourceArrayOutputWithContext(context.Context) GetCustomDbRoleActionResourceArrayOutput
}

type GetCustomDbRoleActionResourceArray []GetCustomDbRoleActionResourceInput

func (GetCustomDbRoleActionResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleActionResource)(nil)).Elem()
}

func (i GetCustomDbRoleActionResourceArray) ToGetCustomDbRoleActionResourceArrayOutput() GetCustomDbRoleActionResourceArrayOutput {
	return i.ToGetCustomDbRoleActionResourceArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionResourceArray) ToGetCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionResourceArrayOutput)
}

func (i GetCustomDbRoleActionResourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDbRoleActionResource] {
	return pulumix.Output[[]GetCustomDbRoleActionResource]{
		OutputState: i.ToGetCustomDbRoleActionResourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCustomDbRoleActionResourceOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleActionResource)(nil)).Elem()
}

func (o GetCustomDbRoleActionResourceOutput) ToGetCustomDbRoleActionResourceOutput() GetCustomDbRoleActionResourceOutput {
	return o
}

func (o GetCustomDbRoleActionResourceOutput) ToGetCustomDbRoleActionResourceOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceOutput {
	return o
}

func (o GetCustomDbRoleActionResourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetCustomDbRoleActionResource] {
	return pulumix.Output[GetCustomDbRoleActionResource]{
		OutputState: o.OutputState,
	}
}

func (o GetCustomDbRoleActionResourceOutput) Cluster() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCustomDbRoleActionResource) bool { return v.Cluster }).(pulumi.BoolOutput)
}

func (o GetCustomDbRoleActionResourceOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleActionResource) string { return v.CollectionName }).(pulumi.StringOutput)
}

// (Required) Database on which the inherited role is granted.
func (o GetCustomDbRoleActionResourceOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleActionResource) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type GetCustomDbRoleActionResourceArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleActionResource)(nil)).Elem()
}

func (o GetCustomDbRoleActionResourceArrayOutput) ToGetCustomDbRoleActionResourceArrayOutput() GetCustomDbRoleActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRoleActionResourceArrayOutput) ToGetCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRoleActionResourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDbRoleActionResource] {
	return pulumix.Output[[]GetCustomDbRoleActionResource]{
		OutputState: o.OutputState,
	}
}

func (o GetCustomDbRoleActionResourceArrayOutput) Index(i pulumi.IntInput) GetCustomDbRoleActionResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRoleActionResource {
		return vs[0].([]GetCustomDbRoleActionResource)[vs[1].(int)]
	}).(GetCustomDbRoleActionResourceOutput)
}

type GetCustomDbRoleInheritedRole struct {
	// (Required) Database on which the inherited role is granted.
	DatabaseName string `pulumi:"databaseName"`
	// Name of the custom role.
	RoleName string `pulumi:"roleName"`
}

// GetCustomDbRoleInheritedRoleInput is an input type that accepts GetCustomDbRoleInheritedRoleArgs and GetCustomDbRoleInheritedRoleOutput values.
// You can construct a concrete instance of `GetCustomDbRoleInheritedRoleInput` via:
//
//	GetCustomDbRoleInheritedRoleArgs{...}
type GetCustomDbRoleInheritedRoleInput interface {
	pulumi.Input

	ToGetCustomDbRoleInheritedRoleOutput() GetCustomDbRoleInheritedRoleOutput
	ToGetCustomDbRoleInheritedRoleOutputWithContext(context.Context) GetCustomDbRoleInheritedRoleOutput
}

type GetCustomDbRoleInheritedRoleArgs struct {
	// (Required) Database on which the inherited role is granted.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Name of the custom role.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (GetCustomDbRoleInheritedRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRoleInheritedRoleArgs) ToGetCustomDbRoleInheritedRoleOutput() GetCustomDbRoleInheritedRoleOutput {
	return i.ToGetCustomDbRoleInheritedRoleOutputWithContext(context.Background())
}

func (i GetCustomDbRoleInheritedRoleArgs) ToGetCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleInheritedRoleOutput)
}

func (i GetCustomDbRoleInheritedRoleArgs) ToOutput(ctx context.Context) pulumix.Output[GetCustomDbRoleInheritedRole] {
	return pulumix.Output[GetCustomDbRoleInheritedRole]{
		OutputState: i.ToGetCustomDbRoleInheritedRoleOutputWithContext(ctx).OutputState,
	}
}

// GetCustomDbRoleInheritedRoleArrayInput is an input type that accepts GetCustomDbRoleInheritedRoleArray and GetCustomDbRoleInheritedRoleArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRoleInheritedRoleArrayInput` via:
//
//	GetCustomDbRoleInheritedRoleArray{ GetCustomDbRoleInheritedRoleArgs{...} }
type GetCustomDbRoleInheritedRoleArrayInput interface {
	pulumi.Input

	ToGetCustomDbRoleInheritedRoleArrayOutput() GetCustomDbRoleInheritedRoleArrayOutput
	ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(context.Context) GetCustomDbRoleInheritedRoleArrayOutput
}

type GetCustomDbRoleInheritedRoleArray []GetCustomDbRoleInheritedRoleInput

func (GetCustomDbRoleInheritedRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRoleInheritedRoleArray) ToGetCustomDbRoleInheritedRoleArrayOutput() GetCustomDbRoleInheritedRoleArrayOutput {
	return i.ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRoleInheritedRoleArray) ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleInheritedRoleArrayOutput)
}

func (i GetCustomDbRoleInheritedRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDbRoleInheritedRole] {
	return pulumix.Output[[]GetCustomDbRoleInheritedRole]{
		OutputState: i.ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCustomDbRoleInheritedRoleOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleInheritedRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRoleInheritedRoleOutput) ToGetCustomDbRoleInheritedRoleOutput() GetCustomDbRoleInheritedRoleOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleOutput) ToGetCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleOutput) ToOutput(ctx context.Context) pulumix.Output[GetCustomDbRoleInheritedRole] {
	return pulumix.Output[GetCustomDbRoleInheritedRole]{
		OutputState: o.OutputState,
	}
}

// (Required) Database on which the inherited role is granted.
func (o GetCustomDbRoleInheritedRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleInheritedRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Name of the custom role.
func (o GetCustomDbRoleInheritedRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleInheritedRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetCustomDbRoleInheritedRoleArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleInheritedRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRoleInheritedRoleArrayOutput) ToGetCustomDbRoleInheritedRoleArrayOutput() GetCustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleArrayOutput) ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDbRoleInheritedRole] {
	return pulumix.Output[[]GetCustomDbRoleInheritedRole]{
		OutputState: o.OutputState,
	}
}

func (o GetCustomDbRoleInheritedRoleArrayOutput) Index(i pulumi.IntInput) GetCustomDbRoleInheritedRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRoleInheritedRole {
		return vs[0].([]GetCustomDbRoleInheritedRole)[vs[1].(int)]
	}).(GetCustomDbRoleInheritedRoleOutput)
}

type GetCustomDbRolesResult struct {
	Actions        []GetCustomDbRolesResultAction        `pulumi:"actions"`
	InheritedRoles []GetCustomDbRolesResultInheritedRole `pulumi:"inheritedRoles"`
	// (Required) Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName string `pulumi:"roleName"`
}

// GetCustomDbRolesResultInput is an input type that accepts GetCustomDbRolesResultArgs and GetCustomDbRolesResultOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultInput` via:
//
//	GetCustomDbRolesResultArgs{...}
type GetCustomDbRolesResultInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultOutput() GetCustomDbRolesResultOutput
	ToGetCustomDbRolesResultOutputWithContext(context.Context) GetCustomDbRolesResultOutput
}

type GetCustomDbRolesResultArgs struct {
	Actions        GetCustomDbRolesResultActionArrayInput        `pulumi:"actions"`
	InheritedRoles GetCustomDbRolesResultInheritedRoleArrayInput `pulumi:"inheritedRoles"`
	// (Required) Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (GetCustomDbRolesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResult)(nil)).Elem()
}

func (i GetCustomDbRolesResultArgs) ToGetCustomDbRolesResultOutput() GetCustomDbRolesResultOutput {
	return i.ToGetCustomDbRolesResultOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultArgs) ToGetCustomDbRolesResultOutputWithContext(ctx context.Context) GetCustomDbRolesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultOutput)
}

func (i GetCustomDbRolesResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetCustomDbRolesResult] {
	return pulumix.Output[GetCustomDbRolesResult]{
		OutputState: i.ToGetCustomDbRolesResultOutputWithContext(ctx).OutputState,
	}
}

// GetCustomDbRolesResultArrayInput is an input type that accepts GetCustomDbRolesResultArray and GetCustomDbRolesResultArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultArrayInput` via:
//
//	GetCustomDbRolesResultArray{ GetCustomDbRolesResultArgs{...} }
type GetCustomDbRolesResultArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultArrayOutput() GetCustomDbRolesResultArrayOutput
	ToGetCustomDbRolesResultArrayOutputWithContext(context.Context) GetCustomDbRolesResultArrayOutput
}

type GetCustomDbRolesResultArray []GetCustomDbRolesResultInput

func (GetCustomDbRolesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResult)(nil)).Elem()
}

func (i GetCustomDbRolesResultArray) ToGetCustomDbRolesResultArrayOutput() GetCustomDbRolesResultArrayOutput {
	return i.ToGetCustomDbRolesResultArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultArray) ToGetCustomDbRolesResultArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultArrayOutput)
}

func (i GetCustomDbRolesResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDbRolesResult] {
	return pulumix.Output[[]GetCustomDbRolesResult]{
		OutputState: i.ToGetCustomDbRolesResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCustomDbRolesResultOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResult)(nil)).Elem()
}

func (o GetCustomDbRolesResultOutput) ToGetCustomDbRolesResultOutput() GetCustomDbRolesResultOutput {
	return o
}

func (o GetCustomDbRolesResultOutput) ToGetCustomDbRolesResultOutputWithContext(ctx context.Context) GetCustomDbRolesResultOutput {
	return o
}

func (o GetCustomDbRolesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetCustomDbRolesResult] {
	return pulumix.Output[GetCustomDbRolesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetCustomDbRolesResultOutput) Actions() GetCustomDbRolesResultActionArrayOutput {
	return o.ApplyT(func(v GetCustomDbRolesResult) []GetCustomDbRolesResultAction { return v.Actions }).(GetCustomDbRolesResultActionArrayOutput)
}

func (o GetCustomDbRolesResultOutput) InheritedRoles() GetCustomDbRolesResultInheritedRoleArrayOutput {
	return o.ApplyT(func(v GetCustomDbRolesResult) []GetCustomDbRolesResultInheritedRole { return v.InheritedRoles }).(GetCustomDbRolesResultInheritedRoleArrayOutput)
}

// (Required) Name of the inherited role. This can either be another custom role or a built-in role.
func (o GetCustomDbRolesResultOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResult) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetCustomDbRolesResultArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResult)(nil)).Elem()
}

func (o GetCustomDbRolesResultArrayOutput) ToGetCustomDbRolesResultArrayOutput() GetCustomDbRolesResultArrayOutput {
	return o
}

func (o GetCustomDbRolesResultArrayOutput) ToGetCustomDbRolesResultArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultArrayOutput {
	return o
}

func (o GetCustomDbRolesResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDbRolesResult] {
	return pulumix.Output[[]GetCustomDbRolesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetCustomDbRolesResultArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResult {
		return vs[0].([]GetCustomDbRolesResult)[vs[1].(int)]
	}).(GetCustomDbRolesResultOutput)
}

type GetCustomDbRolesResultAction struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action string `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources []GetCustomDbRolesResultActionResource `pulumi:"resources"`
}

// GetCustomDbRolesResultActionInput is an input type that accepts GetCustomDbRolesResultActionArgs and GetCustomDbRolesResultActionOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionInput` via:
//
//	GetCustomDbRolesResultActionArgs{...}
type GetCustomDbRolesResultActionInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionOutput() GetCustomDbRolesResultActionOutput
	ToGetCustomDbRolesResultActionOutputWithContext(context.Context) GetCustomDbRolesResultActionOutput
}

type GetCustomDbRolesResultActionArgs struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action pulumi.StringInput `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources GetCustomDbRolesResultActionResourceArrayInput `pulumi:"resources"`
}

func (GetCustomDbRolesResultActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultAction)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionArgs) ToGetCustomDbRolesResultActionOutput() GetCustomDbRolesResultActionOutput {
	return i.ToGetCustomDbRolesResultActionOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionArgs) ToGetCustomDbRolesResultActionOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionOutput)
}

func (i GetCustomDbRolesResultActionArgs) ToOutput(ctx context.Context) pulumix.Output[GetCustomDbRolesResultAction] {
	return pulumix.Output[GetCustomDbRolesResultAction]{
		OutputState: i.ToGetCustomDbRolesResultActionOutputWithContext(ctx).OutputState,
	}
}

// GetCustomDbRolesResultActionArrayInput is an input type that accepts GetCustomDbRolesResultActionArray and GetCustomDbRolesResultActionArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionArrayInput` via:
//
//	GetCustomDbRolesResultActionArray{ GetCustomDbRolesResultActionArgs{...} }
type GetCustomDbRolesResultActionArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionArrayOutput() GetCustomDbRolesResultActionArrayOutput
	ToGetCustomDbRolesResultActionArrayOutputWithContext(context.Context) GetCustomDbRolesResultActionArrayOutput
}

type GetCustomDbRolesResultActionArray []GetCustomDbRolesResultActionInput

func (GetCustomDbRolesResultActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultAction)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionArray) ToGetCustomDbRolesResultActionArrayOutput() GetCustomDbRolesResultActionArrayOutput {
	return i.ToGetCustomDbRolesResultActionArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionArray) ToGetCustomDbRolesResultActionArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionArrayOutput)
}

func (i GetCustomDbRolesResultActionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDbRolesResultAction] {
	return pulumix.Output[[]GetCustomDbRolesResultAction]{
		OutputState: i.ToGetCustomDbRolesResultActionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCustomDbRolesResultActionOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultAction)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionOutput) ToGetCustomDbRolesResultActionOutput() GetCustomDbRolesResultActionOutput {
	return o
}

func (o GetCustomDbRolesResultActionOutput) ToGetCustomDbRolesResultActionOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionOutput {
	return o
}

func (o GetCustomDbRolesResultActionOutput) ToOutput(ctx context.Context) pulumix.Output[GetCustomDbRolesResultAction] {
	return pulumix.Output[GetCustomDbRolesResultAction]{
		OutputState: o.OutputState,
	}
}

// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
func (o GetCustomDbRolesResultActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultAction) string { return v.Action }).(pulumi.StringOutput)
}

// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
func (o GetCustomDbRolesResultActionOutput) Resources() GetCustomDbRolesResultActionResourceArrayOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultAction) []GetCustomDbRolesResultActionResource { return v.Resources }).(GetCustomDbRolesResultActionResourceArrayOutput)
}

type GetCustomDbRolesResultActionArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultAction)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionArrayOutput) ToGetCustomDbRolesResultActionArrayOutput() GetCustomDbRolesResultActionArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionArrayOutput) ToGetCustomDbRolesResultActionArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDbRolesResultAction] {
	return pulumix.Output[[]GetCustomDbRolesResultAction]{
		OutputState: o.OutputState,
	}
}

func (o GetCustomDbRolesResultActionArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResultAction {
		return vs[0].([]GetCustomDbRolesResultAction)[vs[1].(int)]
	}).(GetCustomDbRolesResultActionOutput)
}

type GetCustomDbRolesResultActionResource struct {
	Cluster        bool   `pulumi:"cluster"`
	CollectionName string `pulumi:"collectionName"`
	// (Required) Database on which the inherited role is granted.
	DatabaseName string `pulumi:"databaseName"`
}

// GetCustomDbRolesResultActionResourceInput is an input type that accepts GetCustomDbRolesResultActionResourceArgs and GetCustomDbRolesResultActionResourceOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionResourceInput` via:
//
//	GetCustomDbRolesResultActionResourceArgs{...}
type GetCustomDbRolesResultActionResourceInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionResourceOutput() GetCustomDbRolesResultActionResourceOutput
	ToGetCustomDbRolesResultActionResourceOutputWithContext(context.Context) GetCustomDbRolesResultActionResourceOutput
}

type GetCustomDbRolesResultActionResourceArgs struct {
	Cluster        pulumi.BoolInput   `pulumi:"cluster"`
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// (Required) Database on which the inherited role is granted.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (GetCustomDbRolesResultActionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionResourceArgs) ToGetCustomDbRolesResultActionResourceOutput() GetCustomDbRolesResultActionResourceOutput {
	return i.ToGetCustomDbRolesResultActionResourceOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionResourceArgs) ToGetCustomDbRolesResultActionResourceOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionResourceOutput)
}

func (i GetCustomDbRolesResultActionResourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetCustomDbRolesResultActionResource] {
	return pulumix.Output[GetCustomDbRolesResultActionResource]{
		OutputState: i.ToGetCustomDbRolesResultActionResourceOutputWithContext(ctx).OutputState,
	}
}

// GetCustomDbRolesResultActionResourceArrayInput is an input type that accepts GetCustomDbRolesResultActionResourceArray and GetCustomDbRolesResultActionResourceArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionResourceArrayInput` via:
//
//	GetCustomDbRolesResultActionResourceArray{ GetCustomDbRolesResultActionResourceArgs{...} }
type GetCustomDbRolesResultActionResourceArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionResourceArrayOutput() GetCustomDbRolesResultActionResourceArrayOutput
	ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(context.Context) GetCustomDbRolesResultActionResourceArrayOutput
}

type GetCustomDbRolesResultActionResourceArray []GetCustomDbRolesResultActionResourceInput

func (GetCustomDbRolesResultActionResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionResourceArray) ToGetCustomDbRolesResultActionResourceArrayOutput() GetCustomDbRolesResultActionResourceArrayOutput {
	return i.ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionResourceArray) ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionResourceArrayOutput)
}

func (i GetCustomDbRolesResultActionResourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDbRolesResultActionResource] {
	return pulumix.Output[[]GetCustomDbRolesResultActionResource]{
		OutputState: i.ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCustomDbRolesResultActionResourceOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionResourceOutput) ToGetCustomDbRolesResultActionResourceOutput() GetCustomDbRolesResultActionResourceOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceOutput) ToGetCustomDbRolesResultActionResourceOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetCustomDbRolesResultActionResource] {
	return pulumix.Output[GetCustomDbRolesResultActionResource]{
		OutputState: o.OutputState,
	}
}

func (o GetCustomDbRolesResultActionResourceOutput) Cluster() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultActionResource) bool { return v.Cluster }).(pulumi.BoolOutput)
}

func (o GetCustomDbRolesResultActionResourceOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultActionResource) string { return v.CollectionName }).(pulumi.StringOutput)
}

// (Required) Database on which the inherited role is granted.
func (o GetCustomDbRolesResultActionResourceOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultActionResource) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type GetCustomDbRolesResultActionResourceArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionResourceArrayOutput) ToGetCustomDbRolesResultActionResourceArrayOutput() GetCustomDbRolesResultActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceArrayOutput) ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDbRolesResultActionResource] {
	return pulumix.Output[[]GetCustomDbRolesResultActionResource]{
		OutputState: o.OutputState,
	}
}

func (o GetCustomDbRolesResultActionResourceArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultActionResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResultActionResource {
		return vs[0].([]GetCustomDbRolesResultActionResource)[vs[1].(int)]
	}).(GetCustomDbRolesResultActionResourceOutput)
}

type GetCustomDbRolesResultInheritedRole struct {
	// (Required) Database on which the inherited role is granted.
	DatabaseName string `pulumi:"databaseName"`
	// (Required) Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName string `pulumi:"roleName"`
}

// GetCustomDbRolesResultInheritedRoleInput is an input type that accepts GetCustomDbRolesResultInheritedRoleArgs and GetCustomDbRolesResultInheritedRoleOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultInheritedRoleInput` via:
//
//	GetCustomDbRolesResultInheritedRoleArgs{...}
type GetCustomDbRolesResultInheritedRoleInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultInheritedRoleOutput() GetCustomDbRolesResultInheritedRoleOutput
	ToGetCustomDbRolesResultInheritedRoleOutputWithContext(context.Context) GetCustomDbRolesResultInheritedRoleOutput
}

type GetCustomDbRolesResultInheritedRoleArgs struct {
	// (Required) Database on which the inherited role is granted.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// (Required) Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (GetCustomDbRolesResultInheritedRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRolesResultInheritedRoleArgs) ToGetCustomDbRolesResultInheritedRoleOutput() GetCustomDbRolesResultInheritedRoleOutput {
	return i.ToGetCustomDbRolesResultInheritedRoleOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultInheritedRoleArgs) ToGetCustomDbRolesResultInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultInheritedRoleOutput)
}

func (i GetCustomDbRolesResultInheritedRoleArgs) ToOutput(ctx context.Context) pulumix.Output[GetCustomDbRolesResultInheritedRole] {
	return pulumix.Output[GetCustomDbRolesResultInheritedRole]{
		OutputState: i.ToGetCustomDbRolesResultInheritedRoleOutputWithContext(ctx).OutputState,
	}
}

// GetCustomDbRolesResultInheritedRoleArrayInput is an input type that accepts GetCustomDbRolesResultInheritedRoleArray and GetCustomDbRolesResultInheritedRoleArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultInheritedRoleArrayInput` via:
//
//	GetCustomDbRolesResultInheritedRoleArray{ GetCustomDbRolesResultInheritedRoleArgs{...} }
type GetCustomDbRolesResultInheritedRoleArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultInheritedRoleArrayOutput() GetCustomDbRolesResultInheritedRoleArrayOutput
	ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(context.Context) GetCustomDbRolesResultInheritedRoleArrayOutput
}

type GetCustomDbRolesResultInheritedRoleArray []GetCustomDbRolesResultInheritedRoleInput

func (GetCustomDbRolesResultInheritedRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRolesResultInheritedRoleArray) ToGetCustomDbRolesResultInheritedRoleArrayOutput() GetCustomDbRolesResultInheritedRoleArrayOutput {
	return i.ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultInheritedRoleArray) ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultInheritedRoleArrayOutput)
}

func (i GetCustomDbRolesResultInheritedRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDbRolesResultInheritedRole] {
	return pulumix.Output[[]GetCustomDbRolesResultInheritedRole]{
		OutputState: i.ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCustomDbRolesResultInheritedRoleOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultInheritedRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRolesResultInheritedRoleOutput) ToGetCustomDbRolesResultInheritedRoleOutput() GetCustomDbRolesResultInheritedRoleOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleOutput) ToGetCustomDbRolesResultInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleOutput) ToOutput(ctx context.Context) pulumix.Output[GetCustomDbRolesResultInheritedRole] {
	return pulumix.Output[GetCustomDbRolesResultInheritedRole]{
		OutputState: o.OutputState,
	}
}

// (Required) Database on which the inherited role is granted.
func (o GetCustomDbRolesResultInheritedRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultInheritedRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// (Required) Name of the inherited role. This can either be another custom role or a built-in role.
func (o GetCustomDbRolesResultInheritedRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultInheritedRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetCustomDbRolesResultInheritedRoleArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultInheritedRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRolesResultInheritedRoleArrayOutput) ToGetCustomDbRolesResultInheritedRoleArrayOutput() GetCustomDbRolesResultInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleArrayOutput) ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDbRolesResultInheritedRole] {
	return pulumix.Output[[]GetCustomDbRolesResultInheritedRole]{
		OutputState: o.OutputState,
	}
}

func (o GetCustomDbRolesResultInheritedRoleArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultInheritedRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResultInheritedRole {
		return vs[0].([]GetCustomDbRolesResultInheritedRole)[vs[1].(int)]
	}).(GetCustomDbRolesResultInheritedRoleOutput)
}

type GetDataLakeAw struct {
	ExternalId        string `pulumi:"externalId"`
	IamAssumedRoleArn string `pulumi:"iamAssumedRoleArn"`
	IamUserArn        string `pulumi:"iamUserArn"`
	RoleId            string `pulumi:"roleId"`
	TestS3Bucket      string `pulumi:"testS3Bucket"`
}

// GetDataLakeAwInput is an input type that accepts GetDataLakeAwArgs and GetDataLakeAwOutput values.
// You can construct a concrete instance of `GetDataLakeAwInput` via:
//
//	GetDataLakeAwArgs{...}
type GetDataLakeAwInput interface {
	pulumi.Input

	ToGetDataLakeAwOutput() GetDataLakeAwOutput
	ToGetDataLakeAwOutputWithContext(context.Context) GetDataLakeAwOutput
}

type GetDataLakeAwArgs struct {
	ExternalId        pulumi.StringInput `pulumi:"externalId"`
	IamAssumedRoleArn pulumi.StringInput `pulumi:"iamAssumedRoleArn"`
	IamUserArn        pulumi.StringInput `pulumi:"iamUserArn"`
	RoleId            pulumi.StringInput `pulumi:"roleId"`
	TestS3Bucket      pulumi.StringInput `pulumi:"testS3Bucket"`
}

func (GetDataLakeAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeAw)(nil)).Elem()
}

func (i GetDataLakeAwArgs) ToGetDataLakeAwOutput() GetDataLakeAwOutput {
	return i.ToGetDataLakeAwOutputWithContext(context.Background())
}

func (i GetDataLakeAwArgs) ToGetDataLakeAwOutputWithContext(ctx context.Context) GetDataLakeAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeAwOutput)
}

func (i GetDataLakeAwArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakeAw] {
	return pulumix.Output[GetDataLakeAw]{
		OutputState: i.ToGetDataLakeAwOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakeAwArrayInput is an input type that accepts GetDataLakeAwArray and GetDataLakeAwArrayOutput values.
// You can construct a concrete instance of `GetDataLakeAwArrayInput` via:
//
//	GetDataLakeAwArray{ GetDataLakeAwArgs{...} }
type GetDataLakeAwArrayInput interface {
	pulumi.Input

	ToGetDataLakeAwArrayOutput() GetDataLakeAwArrayOutput
	ToGetDataLakeAwArrayOutputWithContext(context.Context) GetDataLakeAwArrayOutput
}

type GetDataLakeAwArray []GetDataLakeAwInput

func (GetDataLakeAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeAw)(nil)).Elem()
}

func (i GetDataLakeAwArray) ToGetDataLakeAwArrayOutput() GetDataLakeAwArrayOutput {
	return i.ToGetDataLakeAwArrayOutputWithContext(context.Background())
}

func (i GetDataLakeAwArray) ToGetDataLakeAwArrayOutputWithContext(ctx context.Context) GetDataLakeAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeAwArrayOutput)
}

func (i GetDataLakeAwArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakeAw] {
	return pulumix.Output[[]GetDataLakeAw]{
		OutputState: i.ToGetDataLakeAwArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakeAwOutput struct{ *pulumi.OutputState }

func (GetDataLakeAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeAw)(nil)).Elem()
}

func (o GetDataLakeAwOutput) ToGetDataLakeAwOutput() GetDataLakeAwOutput {
	return o
}

func (o GetDataLakeAwOutput) ToGetDataLakeAwOutputWithContext(ctx context.Context) GetDataLakeAwOutput {
	return o
}

func (o GetDataLakeAwOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakeAw] {
	return pulumix.Output[GetDataLakeAw]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakeAwOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetDataLakeAwOutput) IamAssumedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.IamAssumedRoleArn }).(pulumi.StringOutput)
}

func (o GetDataLakeAwOutput) IamUserArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.IamUserArn }).(pulumi.StringOutput)
}

func (o GetDataLakeAwOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o GetDataLakeAwOutput) TestS3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.TestS3Bucket }).(pulumi.StringOutput)
}

type GetDataLakeAwArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeAw)(nil)).Elem()
}

func (o GetDataLakeAwArrayOutput) ToGetDataLakeAwArrayOutput() GetDataLakeAwArrayOutput {
	return o
}

func (o GetDataLakeAwArrayOutput) ToGetDataLakeAwArrayOutputWithContext(ctx context.Context) GetDataLakeAwArrayOutput {
	return o
}

func (o GetDataLakeAwArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakeAw] {
	return pulumix.Output[[]GetDataLakeAw]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakeAwArrayOutput) Index(i pulumi.IntInput) GetDataLakeAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeAw {
		return vs[0].([]GetDataLakeAw)[vs[1].(int)]
	}).(GetDataLakeAwOutput)
}

type GetDataLakeDataProcessRegion struct {
	CloudProvider string `pulumi:"cloudProvider"`
	Region        string `pulumi:"region"`
}

// GetDataLakeDataProcessRegionInput is an input type that accepts GetDataLakeDataProcessRegionArgs and GetDataLakeDataProcessRegionOutput values.
// You can construct a concrete instance of `GetDataLakeDataProcessRegionInput` via:
//
//	GetDataLakeDataProcessRegionArgs{...}
type GetDataLakeDataProcessRegionInput interface {
	pulumi.Input

	ToGetDataLakeDataProcessRegionOutput() GetDataLakeDataProcessRegionOutput
	ToGetDataLakeDataProcessRegionOutputWithContext(context.Context) GetDataLakeDataProcessRegionOutput
}

type GetDataLakeDataProcessRegionArgs struct {
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	Region        pulumi.StringInput `pulumi:"region"`
}

func (GetDataLakeDataProcessRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeDataProcessRegion)(nil)).Elem()
}

func (i GetDataLakeDataProcessRegionArgs) ToGetDataLakeDataProcessRegionOutput() GetDataLakeDataProcessRegionOutput {
	return i.ToGetDataLakeDataProcessRegionOutputWithContext(context.Background())
}

func (i GetDataLakeDataProcessRegionArgs) ToGetDataLakeDataProcessRegionOutputWithContext(ctx context.Context) GetDataLakeDataProcessRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeDataProcessRegionOutput)
}

func (i GetDataLakeDataProcessRegionArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakeDataProcessRegion] {
	return pulumix.Output[GetDataLakeDataProcessRegion]{
		OutputState: i.ToGetDataLakeDataProcessRegionOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakeDataProcessRegionArrayInput is an input type that accepts GetDataLakeDataProcessRegionArray and GetDataLakeDataProcessRegionArrayOutput values.
// You can construct a concrete instance of `GetDataLakeDataProcessRegionArrayInput` via:
//
//	GetDataLakeDataProcessRegionArray{ GetDataLakeDataProcessRegionArgs{...} }
type GetDataLakeDataProcessRegionArrayInput interface {
	pulumi.Input

	ToGetDataLakeDataProcessRegionArrayOutput() GetDataLakeDataProcessRegionArrayOutput
	ToGetDataLakeDataProcessRegionArrayOutputWithContext(context.Context) GetDataLakeDataProcessRegionArrayOutput
}

type GetDataLakeDataProcessRegionArray []GetDataLakeDataProcessRegionInput

func (GetDataLakeDataProcessRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeDataProcessRegion)(nil)).Elem()
}

func (i GetDataLakeDataProcessRegionArray) ToGetDataLakeDataProcessRegionArrayOutput() GetDataLakeDataProcessRegionArrayOutput {
	return i.ToGetDataLakeDataProcessRegionArrayOutputWithContext(context.Background())
}

func (i GetDataLakeDataProcessRegionArray) ToGetDataLakeDataProcessRegionArrayOutputWithContext(ctx context.Context) GetDataLakeDataProcessRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeDataProcessRegionArrayOutput)
}

func (i GetDataLakeDataProcessRegionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakeDataProcessRegion] {
	return pulumix.Output[[]GetDataLakeDataProcessRegion]{
		OutputState: i.ToGetDataLakeDataProcessRegionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakeDataProcessRegionOutput struct{ *pulumi.OutputState }

func (GetDataLakeDataProcessRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeDataProcessRegion)(nil)).Elem()
}

func (o GetDataLakeDataProcessRegionOutput) ToGetDataLakeDataProcessRegionOutput() GetDataLakeDataProcessRegionOutput {
	return o
}

func (o GetDataLakeDataProcessRegionOutput) ToGetDataLakeDataProcessRegionOutputWithContext(ctx context.Context) GetDataLakeDataProcessRegionOutput {
	return o
}

func (o GetDataLakeDataProcessRegionOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakeDataProcessRegion] {
	return pulumix.Output[GetDataLakeDataProcessRegion]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakeDataProcessRegionOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeDataProcessRegion) string { return v.CloudProvider }).(pulumi.StringOutput)
}

func (o GetDataLakeDataProcessRegionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeDataProcessRegion) string { return v.Region }).(pulumi.StringOutput)
}

type GetDataLakeDataProcessRegionArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeDataProcessRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeDataProcessRegion)(nil)).Elem()
}

func (o GetDataLakeDataProcessRegionArrayOutput) ToGetDataLakeDataProcessRegionArrayOutput() GetDataLakeDataProcessRegionArrayOutput {
	return o
}

func (o GetDataLakeDataProcessRegionArrayOutput) ToGetDataLakeDataProcessRegionArrayOutputWithContext(ctx context.Context) GetDataLakeDataProcessRegionArrayOutput {
	return o
}

func (o GetDataLakeDataProcessRegionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakeDataProcessRegion] {
	return pulumix.Output[[]GetDataLakeDataProcessRegion]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakeDataProcessRegionArrayOutput) Index(i pulumi.IntInput) GetDataLakeDataProcessRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeDataProcessRegion {
		return vs[0].([]GetDataLakeDataProcessRegion)[vs[1].(int)]
	}).(GetDataLakeDataProcessRegionOutput)
}

type GetDataLakePipelineIngestionSchedule struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
	Id             string `pulumi:"id"`
	RetentionUnit  string `pulumi:"retentionUnit"`
	RetentionValue int    `pulumi:"retentionValue"`
}

// GetDataLakePipelineIngestionScheduleInput is an input type that accepts GetDataLakePipelineIngestionScheduleArgs and GetDataLakePipelineIngestionScheduleOutput values.
// You can construct a concrete instance of `GetDataLakePipelineIngestionScheduleInput` via:
//
//	GetDataLakePipelineIngestionScheduleArgs{...}
type GetDataLakePipelineIngestionScheduleInput interface {
	pulumi.Input

	ToGetDataLakePipelineIngestionScheduleOutput() GetDataLakePipelineIngestionScheduleOutput
	ToGetDataLakePipelineIngestionScheduleOutputWithContext(context.Context) GetDataLakePipelineIngestionScheduleOutput
}

type GetDataLakePipelineIngestionScheduleArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
	Id             pulumi.StringInput `pulumi:"id"`
	RetentionUnit  pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue pulumi.IntInput    `pulumi:"retentionValue"`
}

func (GetDataLakePipelineIngestionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineIngestionSchedule)(nil)).Elem()
}

func (i GetDataLakePipelineIngestionScheduleArgs) ToGetDataLakePipelineIngestionScheduleOutput() GetDataLakePipelineIngestionScheduleOutput {
	return i.ToGetDataLakePipelineIngestionScheduleOutputWithContext(context.Background())
}

func (i GetDataLakePipelineIngestionScheduleArgs) ToGetDataLakePipelineIngestionScheduleOutputWithContext(ctx context.Context) GetDataLakePipelineIngestionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineIngestionScheduleOutput)
}

func (i GetDataLakePipelineIngestionScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineIngestionSchedule] {
	return pulumix.Output[GetDataLakePipelineIngestionSchedule]{
		OutputState: i.ToGetDataLakePipelineIngestionScheduleOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakePipelineIngestionScheduleArrayInput is an input type that accepts GetDataLakePipelineIngestionScheduleArray and GetDataLakePipelineIngestionScheduleArrayOutput values.
// You can construct a concrete instance of `GetDataLakePipelineIngestionScheduleArrayInput` via:
//
//	GetDataLakePipelineIngestionScheduleArray{ GetDataLakePipelineIngestionScheduleArgs{...} }
type GetDataLakePipelineIngestionScheduleArrayInput interface {
	pulumi.Input

	ToGetDataLakePipelineIngestionScheduleArrayOutput() GetDataLakePipelineIngestionScheduleArrayOutput
	ToGetDataLakePipelineIngestionScheduleArrayOutputWithContext(context.Context) GetDataLakePipelineIngestionScheduleArrayOutput
}

type GetDataLakePipelineIngestionScheduleArray []GetDataLakePipelineIngestionScheduleInput

func (GetDataLakePipelineIngestionScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineIngestionSchedule)(nil)).Elem()
}

func (i GetDataLakePipelineIngestionScheduleArray) ToGetDataLakePipelineIngestionScheduleArrayOutput() GetDataLakePipelineIngestionScheduleArrayOutput {
	return i.ToGetDataLakePipelineIngestionScheduleArrayOutputWithContext(context.Background())
}

func (i GetDataLakePipelineIngestionScheduleArray) ToGetDataLakePipelineIngestionScheduleArrayOutputWithContext(ctx context.Context) GetDataLakePipelineIngestionScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineIngestionScheduleArrayOutput)
}

func (i GetDataLakePipelineIngestionScheduleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineIngestionSchedule] {
	return pulumix.Output[[]GetDataLakePipelineIngestionSchedule]{
		OutputState: i.ToGetDataLakePipelineIngestionScheduleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakePipelineIngestionScheduleOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineIngestionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineIngestionSchedule)(nil)).Elem()
}

func (o GetDataLakePipelineIngestionScheduleOutput) ToGetDataLakePipelineIngestionScheduleOutput() GetDataLakePipelineIngestionScheduleOutput {
	return o
}

func (o GetDataLakePipelineIngestionScheduleOutput) ToGetDataLakePipelineIngestionScheduleOutputWithContext(ctx context.Context) GetDataLakePipelineIngestionScheduleOutput {
	return o
}

func (o GetDataLakePipelineIngestionScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineIngestionSchedule] {
	return pulumix.Output[GetDataLakePipelineIngestionSchedule]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelineIngestionScheduleOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakePipelineIngestionSchedule) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o GetDataLakePipelineIngestionScheduleOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineIngestionSchedule) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
func (o GetDataLakePipelineIngestionScheduleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineIngestionSchedule) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDataLakePipelineIngestionScheduleOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineIngestionSchedule) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o GetDataLakePipelineIngestionScheduleOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakePipelineIngestionSchedule) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetDataLakePipelineIngestionScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineIngestionScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineIngestionSchedule)(nil)).Elem()
}

func (o GetDataLakePipelineIngestionScheduleArrayOutput) ToGetDataLakePipelineIngestionScheduleArrayOutput() GetDataLakePipelineIngestionScheduleArrayOutput {
	return o
}

func (o GetDataLakePipelineIngestionScheduleArrayOutput) ToGetDataLakePipelineIngestionScheduleArrayOutputWithContext(ctx context.Context) GetDataLakePipelineIngestionScheduleArrayOutput {
	return o
}

func (o GetDataLakePipelineIngestionScheduleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineIngestionSchedule] {
	return pulumix.Output[[]GetDataLakePipelineIngestionSchedule]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelineIngestionScheduleArrayOutput) Index(i pulumi.IntInput) GetDataLakePipelineIngestionScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakePipelineIngestionSchedule {
		return vs[0].([]GetDataLakePipelineIngestionSchedule)[vs[1].(int)]
	}).(GetDataLakePipelineIngestionScheduleOutput)
}

type GetDataLakePipelineRunStat struct {
	// Total data size in bytes exported for this pipeline run.
	BytesExported int `pulumi:"bytesExported"`
	// Number of docs ingested for a this pipeline run.
	NumDocs int `pulumi:"numDocs"`
}

// GetDataLakePipelineRunStatInput is an input type that accepts GetDataLakePipelineRunStatArgs and GetDataLakePipelineRunStatOutput values.
// You can construct a concrete instance of `GetDataLakePipelineRunStatInput` via:
//
//	GetDataLakePipelineRunStatArgs{...}
type GetDataLakePipelineRunStatInput interface {
	pulumi.Input

	ToGetDataLakePipelineRunStatOutput() GetDataLakePipelineRunStatOutput
	ToGetDataLakePipelineRunStatOutputWithContext(context.Context) GetDataLakePipelineRunStatOutput
}

type GetDataLakePipelineRunStatArgs struct {
	// Total data size in bytes exported for this pipeline run.
	BytesExported pulumi.IntInput `pulumi:"bytesExported"`
	// Number of docs ingested for a this pipeline run.
	NumDocs pulumi.IntInput `pulumi:"numDocs"`
}

func (GetDataLakePipelineRunStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineRunStat)(nil)).Elem()
}

func (i GetDataLakePipelineRunStatArgs) ToGetDataLakePipelineRunStatOutput() GetDataLakePipelineRunStatOutput {
	return i.ToGetDataLakePipelineRunStatOutputWithContext(context.Background())
}

func (i GetDataLakePipelineRunStatArgs) ToGetDataLakePipelineRunStatOutputWithContext(ctx context.Context) GetDataLakePipelineRunStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineRunStatOutput)
}

func (i GetDataLakePipelineRunStatArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineRunStat] {
	return pulumix.Output[GetDataLakePipelineRunStat]{
		OutputState: i.ToGetDataLakePipelineRunStatOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakePipelineRunStatArrayInput is an input type that accepts GetDataLakePipelineRunStatArray and GetDataLakePipelineRunStatArrayOutput values.
// You can construct a concrete instance of `GetDataLakePipelineRunStatArrayInput` via:
//
//	GetDataLakePipelineRunStatArray{ GetDataLakePipelineRunStatArgs{...} }
type GetDataLakePipelineRunStatArrayInput interface {
	pulumi.Input

	ToGetDataLakePipelineRunStatArrayOutput() GetDataLakePipelineRunStatArrayOutput
	ToGetDataLakePipelineRunStatArrayOutputWithContext(context.Context) GetDataLakePipelineRunStatArrayOutput
}

type GetDataLakePipelineRunStatArray []GetDataLakePipelineRunStatInput

func (GetDataLakePipelineRunStatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineRunStat)(nil)).Elem()
}

func (i GetDataLakePipelineRunStatArray) ToGetDataLakePipelineRunStatArrayOutput() GetDataLakePipelineRunStatArrayOutput {
	return i.ToGetDataLakePipelineRunStatArrayOutputWithContext(context.Background())
}

func (i GetDataLakePipelineRunStatArray) ToGetDataLakePipelineRunStatArrayOutputWithContext(ctx context.Context) GetDataLakePipelineRunStatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineRunStatArrayOutput)
}

func (i GetDataLakePipelineRunStatArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineRunStat] {
	return pulumix.Output[[]GetDataLakePipelineRunStat]{
		OutputState: i.ToGetDataLakePipelineRunStatArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakePipelineRunStatOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineRunStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineRunStat)(nil)).Elem()
}

func (o GetDataLakePipelineRunStatOutput) ToGetDataLakePipelineRunStatOutput() GetDataLakePipelineRunStatOutput {
	return o
}

func (o GetDataLakePipelineRunStatOutput) ToGetDataLakePipelineRunStatOutputWithContext(ctx context.Context) GetDataLakePipelineRunStatOutput {
	return o
}

func (o GetDataLakePipelineRunStatOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineRunStat] {
	return pulumix.Output[GetDataLakePipelineRunStat]{
		OutputState: o.OutputState,
	}
}

// Total data size in bytes exported for this pipeline run.
func (o GetDataLakePipelineRunStatOutput) BytesExported() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakePipelineRunStat) int { return v.BytesExported }).(pulumi.IntOutput)
}

// Number of docs ingested for a this pipeline run.
func (o GetDataLakePipelineRunStatOutput) NumDocs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakePipelineRunStat) int { return v.NumDocs }).(pulumi.IntOutput)
}

type GetDataLakePipelineRunStatArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineRunStatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineRunStat)(nil)).Elem()
}

func (o GetDataLakePipelineRunStatArrayOutput) ToGetDataLakePipelineRunStatArrayOutput() GetDataLakePipelineRunStatArrayOutput {
	return o
}

func (o GetDataLakePipelineRunStatArrayOutput) ToGetDataLakePipelineRunStatArrayOutputWithContext(ctx context.Context) GetDataLakePipelineRunStatArrayOutput {
	return o
}

func (o GetDataLakePipelineRunStatArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineRunStat] {
	return pulumix.Output[[]GetDataLakePipelineRunStat]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelineRunStatArrayOutput) Index(i pulumi.IntInput) GetDataLakePipelineRunStatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakePipelineRunStat {
		return vs[0].([]GetDataLakePipelineRunStat)[vs[1].(int)]
	}).(GetDataLakePipelineRunStatOutput)
}

type GetDataLakePipelineRunsResult struct {
	// Backup schedule interval of the Data Lake Pipeline.
	BackupFrequencyType string `pulumi:"backupFrequencyType"`
	// Timestamp that indicates when the pipeline run was created.
	CreatedDate string `pulumi:"createdDate"`
	// Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.
	Id string `pulumi:"id"`
	// Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.
	LastUpdatedDate string `pulumi:"lastUpdatedDate"`
	// Processing phase of the Data Lake Pipeline.
	Phase string `pulumi:"phase"`
	// Unique 24-hexadecimal character string that identifies a Data Lake Pipeline.
	PipelineId string `pulumi:"pipelineId"`
	// Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.
	PipelineRunId string `pulumi:"pipelineRunId"`
	// Unique 24-hexadecimal character string that identifies the snapshot of a cluster.
	SnapshotId string `pulumi:"snapshotId"`
	// State of the pipeline run.
	State string `pulumi:"state"`
	// Runtime statistics for this Data Lake Pipeline run.
	Stats []GetDataLakePipelineRunsResultStat `pulumi:"stats"`
}

// GetDataLakePipelineRunsResultInput is an input type that accepts GetDataLakePipelineRunsResultArgs and GetDataLakePipelineRunsResultOutput values.
// You can construct a concrete instance of `GetDataLakePipelineRunsResultInput` via:
//
//	GetDataLakePipelineRunsResultArgs{...}
type GetDataLakePipelineRunsResultInput interface {
	pulumi.Input

	ToGetDataLakePipelineRunsResultOutput() GetDataLakePipelineRunsResultOutput
	ToGetDataLakePipelineRunsResultOutputWithContext(context.Context) GetDataLakePipelineRunsResultOutput
}

type GetDataLakePipelineRunsResultArgs struct {
	// Backup schedule interval of the Data Lake Pipeline.
	BackupFrequencyType pulumi.StringInput `pulumi:"backupFrequencyType"`
	// Timestamp that indicates when the pipeline run was created.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.
	Id pulumi.StringInput `pulumi:"id"`
	// Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.
	LastUpdatedDate pulumi.StringInput `pulumi:"lastUpdatedDate"`
	// Processing phase of the Data Lake Pipeline.
	Phase pulumi.StringInput `pulumi:"phase"`
	// Unique 24-hexadecimal character string that identifies a Data Lake Pipeline.
	PipelineId pulumi.StringInput `pulumi:"pipelineId"`
	// Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.
	PipelineRunId pulumi.StringInput `pulumi:"pipelineRunId"`
	// Unique 24-hexadecimal character string that identifies the snapshot of a cluster.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// State of the pipeline run.
	State pulumi.StringInput `pulumi:"state"`
	// Runtime statistics for this Data Lake Pipeline run.
	Stats GetDataLakePipelineRunsResultStatArrayInput `pulumi:"stats"`
}

func (GetDataLakePipelineRunsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineRunsResult)(nil)).Elem()
}

func (i GetDataLakePipelineRunsResultArgs) ToGetDataLakePipelineRunsResultOutput() GetDataLakePipelineRunsResultOutput {
	return i.ToGetDataLakePipelineRunsResultOutputWithContext(context.Background())
}

func (i GetDataLakePipelineRunsResultArgs) ToGetDataLakePipelineRunsResultOutputWithContext(ctx context.Context) GetDataLakePipelineRunsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineRunsResultOutput)
}

func (i GetDataLakePipelineRunsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineRunsResult] {
	return pulumix.Output[GetDataLakePipelineRunsResult]{
		OutputState: i.ToGetDataLakePipelineRunsResultOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakePipelineRunsResultArrayInput is an input type that accepts GetDataLakePipelineRunsResultArray and GetDataLakePipelineRunsResultArrayOutput values.
// You can construct a concrete instance of `GetDataLakePipelineRunsResultArrayInput` via:
//
//	GetDataLakePipelineRunsResultArray{ GetDataLakePipelineRunsResultArgs{...} }
type GetDataLakePipelineRunsResultArrayInput interface {
	pulumi.Input

	ToGetDataLakePipelineRunsResultArrayOutput() GetDataLakePipelineRunsResultArrayOutput
	ToGetDataLakePipelineRunsResultArrayOutputWithContext(context.Context) GetDataLakePipelineRunsResultArrayOutput
}

type GetDataLakePipelineRunsResultArray []GetDataLakePipelineRunsResultInput

func (GetDataLakePipelineRunsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineRunsResult)(nil)).Elem()
}

func (i GetDataLakePipelineRunsResultArray) ToGetDataLakePipelineRunsResultArrayOutput() GetDataLakePipelineRunsResultArrayOutput {
	return i.ToGetDataLakePipelineRunsResultArrayOutputWithContext(context.Background())
}

func (i GetDataLakePipelineRunsResultArray) ToGetDataLakePipelineRunsResultArrayOutputWithContext(ctx context.Context) GetDataLakePipelineRunsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineRunsResultArrayOutput)
}

func (i GetDataLakePipelineRunsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineRunsResult] {
	return pulumix.Output[[]GetDataLakePipelineRunsResult]{
		OutputState: i.ToGetDataLakePipelineRunsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakePipelineRunsResultOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineRunsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineRunsResult)(nil)).Elem()
}

func (o GetDataLakePipelineRunsResultOutput) ToGetDataLakePipelineRunsResultOutput() GetDataLakePipelineRunsResultOutput {
	return o
}

func (o GetDataLakePipelineRunsResultOutput) ToGetDataLakePipelineRunsResultOutputWithContext(ctx context.Context) GetDataLakePipelineRunsResultOutput {
	return o
}

func (o GetDataLakePipelineRunsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineRunsResult] {
	return pulumix.Output[GetDataLakePipelineRunsResult]{
		OutputState: o.OutputState,
	}
}

// Backup schedule interval of the Data Lake Pipeline.
func (o GetDataLakePipelineRunsResultOutput) BackupFrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineRunsResult) string { return v.BackupFrequencyType }).(pulumi.StringOutput)
}

// Timestamp that indicates when the pipeline run was created.
func (o GetDataLakePipelineRunsResultOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineRunsResult) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.
func (o GetDataLakePipelineRunsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineRunsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.
func (o GetDataLakePipelineRunsResultOutput) LastUpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineRunsResult) string { return v.LastUpdatedDate }).(pulumi.StringOutput)
}

// Processing phase of the Data Lake Pipeline.
func (o GetDataLakePipelineRunsResultOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineRunsResult) string { return v.Phase }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal character string that identifies a Data Lake Pipeline.
func (o GetDataLakePipelineRunsResultOutput) PipelineId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineRunsResult) string { return v.PipelineId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.
func (o GetDataLakePipelineRunsResultOutput) PipelineRunId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineRunsResult) string { return v.PipelineRunId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal character string that identifies the snapshot of a cluster.
func (o GetDataLakePipelineRunsResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineRunsResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// State of the pipeline run.
func (o GetDataLakePipelineRunsResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineRunsResult) string { return v.State }).(pulumi.StringOutput)
}

// Runtime statistics for this Data Lake Pipeline run.
func (o GetDataLakePipelineRunsResultOutput) Stats() GetDataLakePipelineRunsResultStatArrayOutput {
	return o.ApplyT(func(v GetDataLakePipelineRunsResult) []GetDataLakePipelineRunsResultStat { return v.Stats }).(GetDataLakePipelineRunsResultStatArrayOutput)
}

type GetDataLakePipelineRunsResultArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineRunsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineRunsResult)(nil)).Elem()
}

func (o GetDataLakePipelineRunsResultArrayOutput) ToGetDataLakePipelineRunsResultArrayOutput() GetDataLakePipelineRunsResultArrayOutput {
	return o
}

func (o GetDataLakePipelineRunsResultArrayOutput) ToGetDataLakePipelineRunsResultArrayOutputWithContext(ctx context.Context) GetDataLakePipelineRunsResultArrayOutput {
	return o
}

func (o GetDataLakePipelineRunsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineRunsResult] {
	return pulumix.Output[[]GetDataLakePipelineRunsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelineRunsResultArrayOutput) Index(i pulumi.IntInput) GetDataLakePipelineRunsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakePipelineRunsResult {
		return vs[0].([]GetDataLakePipelineRunsResult)[vs[1].(int)]
	}).(GetDataLakePipelineRunsResultOutput)
}

type GetDataLakePipelineRunsResultStat struct {
	// Total data size in bytes exported for this pipeline run.
	BytesExported int `pulumi:"bytesExported"`
	// Number of docs ingested for a this pipeline run.
	NumDocs int `pulumi:"numDocs"`
}

// GetDataLakePipelineRunsResultStatInput is an input type that accepts GetDataLakePipelineRunsResultStatArgs and GetDataLakePipelineRunsResultStatOutput values.
// You can construct a concrete instance of `GetDataLakePipelineRunsResultStatInput` via:
//
//	GetDataLakePipelineRunsResultStatArgs{...}
type GetDataLakePipelineRunsResultStatInput interface {
	pulumi.Input

	ToGetDataLakePipelineRunsResultStatOutput() GetDataLakePipelineRunsResultStatOutput
	ToGetDataLakePipelineRunsResultStatOutputWithContext(context.Context) GetDataLakePipelineRunsResultStatOutput
}

type GetDataLakePipelineRunsResultStatArgs struct {
	// Total data size in bytes exported for this pipeline run.
	BytesExported pulumi.IntInput `pulumi:"bytesExported"`
	// Number of docs ingested for a this pipeline run.
	NumDocs pulumi.IntInput `pulumi:"numDocs"`
}

func (GetDataLakePipelineRunsResultStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineRunsResultStat)(nil)).Elem()
}

func (i GetDataLakePipelineRunsResultStatArgs) ToGetDataLakePipelineRunsResultStatOutput() GetDataLakePipelineRunsResultStatOutput {
	return i.ToGetDataLakePipelineRunsResultStatOutputWithContext(context.Background())
}

func (i GetDataLakePipelineRunsResultStatArgs) ToGetDataLakePipelineRunsResultStatOutputWithContext(ctx context.Context) GetDataLakePipelineRunsResultStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineRunsResultStatOutput)
}

func (i GetDataLakePipelineRunsResultStatArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineRunsResultStat] {
	return pulumix.Output[GetDataLakePipelineRunsResultStat]{
		OutputState: i.ToGetDataLakePipelineRunsResultStatOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakePipelineRunsResultStatArrayInput is an input type that accepts GetDataLakePipelineRunsResultStatArray and GetDataLakePipelineRunsResultStatArrayOutput values.
// You can construct a concrete instance of `GetDataLakePipelineRunsResultStatArrayInput` via:
//
//	GetDataLakePipelineRunsResultStatArray{ GetDataLakePipelineRunsResultStatArgs{...} }
type GetDataLakePipelineRunsResultStatArrayInput interface {
	pulumi.Input

	ToGetDataLakePipelineRunsResultStatArrayOutput() GetDataLakePipelineRunsResultStatArrayOutput
	ToGetDataLakePipelineRunsResultStatArrayOutputWithContext(context.Context) GetDataLakePipelineRunsResultStatArrayOutput
}

type GetDataLakePipelineRunsResultStatArray []GetDataLakePipelineRunsResultStatInput

func (GetDataLakePipelineRunsResultStatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineRunsResultStat)(nil)).Elem()
}

func (i GetDataLakePipelineRunsResultStatArray) ToGetDataLakePipelineRunsResultStatArrayOutput() GetDataLakePipelineRunsResultStatArrayOutput {
	return i.ToGetDataLakePipelineRunsResultStatArrayOutputWithContext(context.Background())
}

func (i GetDataLakePipelineRunsResultStatArray) ToGetDataLakePipelineRunsResultStatArrayOutputWithContext(ctx context.Context) GetDataLakePipelineRunsResultStatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineRunsResultStatArrayOutput)
}

func (i GetDataLakePipelineRunsResultStatArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineRunsResultStat] {
	return pulumix.Output[[]GetDataLakePipelineRunsResultStat]{
		OutputState: i.ToGetDataLakePipelineRunsResultStatArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakePipelineRunsResultStatOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineRunsResultStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineRunsResultStat)(nil)).Elem()
}

func (o GetDataLakePipelineRunsResultStatOutput) ToGetDataLakePipelineRunsResultStatOutput() GetDataLakePipelineRunsResultStatOutput {
	return o
}

func (o GetDataLakePipelineRunsResultStatOutput) ToGetDataLakePipelineRunsResultStatOutputWithContext(ctx context.Context) GetDataLakePipelineRunsResultStatOutput {
	return o
}

func (o GetDataLakePipelineRunsResultStatOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineRunsResultStat] {
	return pulumix.Output[GetDataLakePipelineRunsResultStat]{
		OutputState: o.OutputState,
	}
}

// Total data size in bytes exported for this pipeline run.
func (o GetDataLakePipelineRunsResultStatOutput) BytesExported() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakePipelineRunsResultStat) int { return v.BytesExported }).(pulumi.IntOutput)
}

// Number of docs ingested for a this pipeline run.
func (o GetDataLakePipelineRunsResultStatOutput) NumDocs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakePipelineRunsResultStat) int { return v.NumDocs }).(pulumi.IntOutput)
}

type GetDataLakePipelineRunsResultStatArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineRunsResultStatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineRunsResultStat)(nil)).Elem()
}

func (o GetDataLakePipelineRunsResultStatArrayOutput) ToGetDataLakePipelineRunsResultStatArrayOutput() GetDataLakePipelineRunsResultStatArrayOutput {
	return o
}

func (o GetDataLakePipelineRunsResultStatArrayOutput) ToGetDataLakePipelineRunsResultStatArrayOutputWithContext(ctx context.Context) GetDataLakePipelineRunsResultStatArrayOutput {
	return o
}

func (o GetDataLakePipelineRunsResultStatArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineRunsResultStat] {
	return pulumix.Output[[]GetDataLakePipelineRunsResultStat]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelineRunsResultStatArrayOutput) Index(i pulumi.IntInput) GetDataLakePipelineRunsResultStatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakePipelineRunsResultStat {
		return vs[0].([]GetDataLakePipelineRunsResultStat)[vs[1].(int)]
	}).(GetDataLakePipelineRunsResultStatOutput)
}

type GetDataLakePipelineSink struct {
	// Ordered fields used to physically organize data in the destination.
	// * `partition_fields.#.field_name` - Human-readable label that identifies the field name used to partition data.
	// * `partition_fields.#.order` - Sequence in which MongoDB Atlas slices the collection data to create partitions. The resource expresses this sequence starting with zero.
	PartitionFields []GetDataLakePipelineSinkPartitionField `pulumi:"partitionFields"`
	// Target cloud provider for this Data Lake Pipeline.
	Provider string `pulumi:"provider"`
	// Target cloud provider region for this Data Lake Pipeline. [Supported cloud provider regions](https://www.mongodb.com/docs/datalake/limitations).
	Region string `pulumi:"region"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type string `pulumi:"type"`
}

// GetDataLakePipelineSinkInput is an input type that accepts GetDataLakePipelineSinkArgs and GetDataLakePipelineSinkOutput values.
// You can construct a concrete instance of `GetDataLakePipelineSinkInput` via:
//
//	GetDataLakePipelineSinkArgs{...}
type GetDataLakePipelineSinkInput interface {
	pulumi.Input

	ToGetDataLakePipelineSinkOutput() GetDataLakePipelineSinkOutput
	ToGetDataLakePipelineSinkOutputWithContext(context.Context) GetDataLakePipelineSinkOutput
}

type GetDataLakePipelineSinkArgs struct {
	// Ordered fields used to physically organize data in the destination.
	// * `partition_fields.#.field_name` - Human-readable label that identifies the field name used to partition data.
	// * `partition_fields.#.order` - Sequence in which MongoDB Atlas slices the collection data to create partitions. The resource expresses this sequence starting with zero.
	PartitionFields GetDataLakePipelineSinkPartitionFieldArrayInput `pulumi:"partitionFields"`
	// Target cloud provider for this Data Lake Pipeline.
	Provider pulumi.StringInput `pulumi:"provider"`
	// Target cloud provider region for this Data Lake Pipeline. [Supported cloud provider regions](https://www.mongodb.com/docs/datalake/limitations).
	Region pulumi.StringInput `pulumi:"region"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDataLakePipelineSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineSink)(nil)).Elem()
}

func (i GetDataLakePipelineSinkArgs) ToGetDataLakePipelineSinkOutput() GetDataLakePipelineSinkOutput {
	return i.ToGetDataLakePipelineSinkOutputWithContext(context.Background())
}

func (i GetDataLakePipelineSinkArgs) ToGetDataLakePipelineSinkOutputWithContext(ctx context.Context) GetDataLakePipelineSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineSinkOutput)
}

func (i GetDataLakePipelineSinkArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineSink] {
	return pulumix.Output[GetDataLakePipelineSink]{
		OutputState: i.ToGetDataLakePipelineSinkOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakePipelineSinkArrayInput is an input type that accepts GetDataLakePipelineSinkArray and GetDataLakePipelineSinkArrayOutput values.
// You can construct a concrete instance of `GetDataLakePipelineSinkArrayInput` via:
//
//	GetDataLakePipelineSinkArray{ GetDataLakePipelineSinkArgs{...} }
type GetDataLakePipelineSinkArrayInput interface {
	pulumi.Input

	ToGetDataLakePipelineSinkArrayOutput() GetDataLakePipelineSinkArrayOutput
	ToGetDataLakePipelineSinkArrayOutputWithContext(context.Context) GetDataLakePipelineSinkArrayOutput
}

type GetDataLakePipelineSinkArray []GetDataLakePipelineSinkInput

func (GetDataLakePipelineSinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineSink)(nil)).Elem()
}

func (i GetDataLakePipelineSinkArray) ToGetDataLakePipelineSinkArrayOutput() GetDataLakePipelineSinkArrayOutput {
	return i.ToGetDataLakePipelineSinkArrayOutputWithContext(context.Background())
}

func (i GetDataLakePipelineSinkArray) ToGetDataLakePipelineSinkArrayOutputWithContext(ctx context.Context) GetDataLakePipelineSinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineSinkArrayOutput)
}

func (i GetDataLakePipelineSinkArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineSink] {
	return pulumix.Output[[]GetDataLakePipelineSink]{
		OutputState: i.ToGetDataLakePipelineSinkArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakePipelineSinkOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineSink)(nil)).Elem()
}

func (o GetDataLakePipelineSinkOutput) ToGetDataLakePipelineSinkOutput() GetDataLakePipelineSinkOutput {
	return o
}

func (o GetDataLakePipelineSinkOutput) ToGetDataLakePipelineSinkOutputWithContext(ctx context.Context) GetDataLakePipelineSinkOutput {
	return o
}

func (o GetDataLakePipelineSinkOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineSink] {
	return pulumix.Output[GetDataLakePipelineSink]{
		OutputState: o.OutputState,
	}
}

// Ordered fields used to physically organize data in the destination.
// * `partition_fields.#.field_name` - Human-readable label that identifies the field name used to partition data.
// * `partition_fields.#.order` - Sequence in which MongoDB Atlas slices the collection data to create partitions. The resource expresses this sequence starting with zero.
func (o GetDataLakePipelineSinkOutput) PartitionFields() GetDataLakePipelineSinkPartitionFieldArrayOutput {
	return o.ApplyT(func(v GetDataLakePipelineSink) []GetDataLakePipelineSinkPartitionField { return v.PartitionFields }).(GetDataLakePipelineSinkPartitionFieldArrayOutput)
}

// Target cloud provider for this Data Lake Pipeline.
func (o GetDataLakePipelineSinkOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSink) string { return v.Provider }).(pulumi.StringOutput)
}

// Target cloud provider region for this Data Lake Pipeline. [Supported cloud provider regions](https://www.mongodb.com/docs/datalake/limitations).
func (o GetDataLakePipelineSinkOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSink) string { return v.Region }).(pulumi.StringOutput)
}

// Type of ingestion source of this Data Lake Pipeline.
func (o GetDataLakePipelineSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSink) string { return v.Type }).(pulumi.StringOutput)
}

type GetDataLakePipelineSinkArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineSinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineSink)(nil)).Elem()
}

func (o GetDataLakePipelineSinkArrayOutput) ToGetDataLakePipelineSinkArrayOutput() GetDataLakePipelineSinkArrayOutput {
	return o
}

func (o GetDataLakePipelineSinkArrayOutput) ToGetDataLakePipelineSinkArrayOutputWithContext(ctx context.Context) GetDataLakePipelineSinkArrayOutput {
	return o
}

func (o GetDataLakePipelineSinkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineSink] {
	return pulumix.Output[[]GetDataLakePipelineSink]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelineSinkArrayOutput) Index(i pulumi.IntInput) GetDataLakePipelineSinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakePipelineSink {
		return vs[0].([]GetDataLakePipelineSink)[vs[1].(int)]
	}).(GetDataLakePipelineSinkOutput)
}

type GetDataLakePipelineSinkPartitionField struct {
	FieldName string `pulumi:"fieldName"`
	Order     int    `pulumi:"order"`
}

// GetDataLakePipelineSinkPartitionFieldInput is an input type that accepts GetDataLakePipelineSinkPartitionFieldArgs and GetDataLakePipelineSinkPartitionFieldOutput values.
// You can construct a concrete instance of `GetDataLakePipelineSinkPartitionFieldInput` via:
//
//	GetDataLakePipelineSinkPartitionFieldArgs{...}
type GetDataLakePipelineSinkPartitionFieldInput interface {
	pulumi.Input

	ToGetDataLakePipelineSinkPartitionFieldOutput() GetDataLakePipelineSinkPartitionFieldOutput
	ToGetDataLakePipelineSinkPartitionFieldOutputWithContext(context.Context) GetDataLakePipelineSinkPartitionFieldOutput
}

type GetDataLakePipelineSinkPartitionFieldArgs struct {
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	Order     pulumi.IntInput    `pulumi:"order"`
}

func (GetDataLakePipelineSinkPartitionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineSinkPartitionField)(nil)).Elem()
}

func (i GetDataLakePipelineSinkPartitionFieldArgs) ToGetDataLakePipelineSinkPartitionFieldOutput() GetDataLakePipelineSinkPartitionFieldOutput {
	return i.ToGetDataLakePipelineSinkPartitionFieldOutputWithContext(context.Background())
}

func (i GetDataLakePipelineSinkPartitionFieldArgs) ToGetDataLakePipelineSinkPartitionFieldOutputWithContext(ctx context.Context) GetDataLakePipelineSinkPartitionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineSinkPartitionFieldOutput)
}

func (i GetDataLakePipelineSinkPartitionFieldArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineSinkPartitionField] {
	return pulumix.Output[GetDataLakePipelineSinkPartitionField]{
		OutputState: i.ToGetDataLakePipelineSinkPartitionFieldOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakePipelineSinkPartitionFieldArrayInput is an input type that accepts GetDataLakePipelineSinkPartitionFieldArray and GetDataLakePipelineSinkPartitionFieldArrayOutput values.
// You can construct a concrete instance of `GetDataLakePipelineSinkPartitionFieldArrayInput` via:
//
//	GetDataLakePipelineSinkPartitionFieldArray{ GetDataLakePipelineSinkPartitionFieldArgs{...} }
type GetDataLakePipelineSinkPartitionFieldArrayInput interface {
	pulumi.Input

	ToGetDataLakePipelineSinkPartitionFieldArrayOutput() GetDataLakePipelineSinkPartitionFieldArrayOutput
	ToGetDataLakePipelineSinkPartitionFieldArrayOutputWithContext(context.Context) GetDataLakePipelineSinkPartitionFieldArrayOutput
}

type GetDataLakePipelineSinkPartitionFieldArray []GetDataLakePipelineSinkPartitionFieldInput

func (GetDataLakePipelineSinkPartitionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineSinkPartitionField)(nil)).Elem()
}

func (i GetDataLakePipelineSinkPartitionFieldArray) ToGetDataLakePipelineSinkPartitionFieldArrayOutput() GetDataLakePipelineSinkPartitionFieldArrayOutput {
	return i.ToGetDataLakePipelineSinkPartitionFieldArrayOutputWithContext(context.Background())
}

func (i GetDataLakePipelineSinkPartitionFieldArray) ToGetDataLakePipelineSinkPartitionFieldArrayOutputWithContext(ctx context.Context) GetDataLakePipelineSinkPartitionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineSinkPartitionFieldArrayOutput)
}

func (i GetDataLakePipelineSinkPartitionFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineSinkPartitionField] {
	return pulumix.Output[[]GetDataLakePipelineSinkPartitionField]{
		OutputState: i.ToGetDataLakePipelineSinkPartitionFieldArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakePipelineSinkPartitionFieldOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineSinkPartitionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineSinkPartitionField)(nil)).Elem()
}

func (o GetDataLakePipelineSinkPartitionFieldOutput) ToGetDataLakePipelineSinkPartitionFieldOutput() GetDataLakePipelineSinkPartitionFieldOutput {
	return o
}

func (o GetDataLakePipelineSinkPartitionFieldOutput) ToGetDataLakePipelineSinkPartitionFieldOutputWithContext(ctx context.Context) GetDataLakePipelineSinkPartitionFieldOutput {
	return o
}

func (o GetDataLakePipelineSinkPartitionFieldOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineSinkPartitionField] {
	return pulumix.Output[GetDataLakePipelineSinkPartitionField]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelineSinkPartitionFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSinkPartitionField) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o GetDataLakePipelineSinkPartitionFieldOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakePipelineSinkPartitionField) int { return v.Order }).(pulumi.IntOutput)
}

type GetDataLakePipelineSinkPartitionFieldArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineSinkPartitionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineSinkPartitionField)(nil)).Elem()
}

func (o GetDataLakePipelineSinkPartitionFieldArrayOutput) ToGetDataLakePipelineSinkPartitionFieldArrayOutput() GetDataLakePipelineSinkPartitionFieldArrayOutput {
	return o
}

func (o GetDataLakePipelineSinkPartitionFieldArrayOutput) ToGetDataLakePipelineSinkPartitionFieldArrayOutputWithContext(ctx context.Context) GetDataLakePipelineSinkPartitionFieldArrayOutput {
	return o
}

func (o GetDataLakePipelineSinkPartitionFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineSinkPartitionField] {
	return pulumix.Output[[]GetDataLakePipelineSinkPartitionField]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelineSinkPartitionFieldArrayOutput) Index(i pulumi.IntInput) GetDataLakePipelineSinkPartitionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakePipelineSinkPartitionField {
		return vs[0].([]GetDataLakePipelineSinkPartitionField)[vs[1].(int)]
	}).(GetDataLakePipelineSinkPartitionFieldOutput)
}

type GetDataLakePipelineSnapshot struct {
	CopyRegion    string `pulumi:"copyRegion"`
	CreatedAt     string `pulumi:"createdAt"`
	ExpiresAt     string `pulumi:"expiresAt"`
	FrequencyYype string `pulumi:"frequencyYype"`
	// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
	Id            string   `pulumi:"id"`
	MasterKey     string   `pulumi:"masterKey"`
	MongodVersion string   `pulumi:"mongodVersion"`
	Policies      []string `pulumi:"policies"`
	// Target cloud provider for this Data Lake Pipeline.
	Provider       string `pulumi:"provider"`
	ReplicaSetName string `pulumi:"replicaSetName"`
	Size           int    `pulumi:"size"`
	Status         string `pulumi:"status"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type string `pulumi:"type"`
}

// GetDataLakePipelineSnapshotInput is an input type that accepts GetDataLakePipelineSnapshotArgs and GetDataLakePipelineSnapshotOutput values.
// You can construct a concrete instance of `GetDataLakePipelineSnapshotInput` via:
//
//	GetDataLakePipelineSnapshotArgs{...}
type GetDataLakePipelineSnapshotInput interface {
	pulumi.Input

	ToGetDataLakePipelineSnapshotOutput() GetDataLakePipelineSnapshotOutput
	ToGetDataLakePipelineSnapshotOutputWithContext(context.Context) GetDataLakePipelineSnapshotOutput
}

type GetDataLakePipelineSnapshotArgs struct {
	CopyRegion    pulumi.StringInput `pulumi:"copyRegion"`
	CreatedAt     pulumi.StringInput `pulumi:"createdAt"`
	ExpiresAt     pulumi.StringInput `pulumi:"expiresAt"`
	FrequencyYype pulumi.StringInput `pulumi:"frequencyYype"`
	// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
	Id            pulumi.StringInput      `pulumi:"id"`
	MasterKey     pulumi.StringInput      `pulumi:"masterKey"`
	MongodVersion pulumi.StringInput      `pulumi:"mongodVersion"`
	Policies      pulumi.StringArrayInput `pulumi:"policies"`
	// Target cloud provider for this Data Lake Pipeline.
	Provider       pulumi.StringInput `pulumi:"provider"`
	ReplicaSetName pulumi.StringInput `pulumi:"replicaSetName"`
	Size           pulumi.IntInput    `pulumi:"size"`
	Status         pulumi.StringInput `pulumi:"status"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDataLakePipelineSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineSnapshot)(nil)).Elem()
}

func (i GetDataLakePipelineSnapshotArgs) ToGetDataLakePipelineSnapshotOutput() GetDataLakePipelineSnapshotOutput {
	return i.ToGetDataLakePipelineSnapshotOutputWithContext(context.Background())
}

func (i GetDataLakePipelineSnapshotArgs) ToGetDataLakePipelineSnapshotOutputWithContext(ctx context.Context) GetDataLakePipelineSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineSnapshotOutput)
}

func (i GetDataLakePipelineSnapshotArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineSnapshot] {
	return pulumix.Output[GetDataLakePipelineSnapshot]{
		OutputState: i.ToGetDataLakePipelineSnapshotOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakePipelineSnapshotArrayInput is an input type that accepts GetDataLakePipelineSnapshotArray and GetDataLakePipelineSnapshotArrayOutput values.
// You can construct a concrete instance of `GetDataLakePipelineSnapshotArrayInput` via:
//
//	GetDataLakePipelineSnapshotArray{ GetDataLakePipelineSnapshotArgs{...} }
type GetDataLakePipelineSnapshotArrayInput interface {
	pulumi.Input

	ToGetDataLakePipelineSnapshotArrayOutput() GetDataLakePipelineSnapshotArrayOutput
	ToGetDataLakePipelineSnapshotArrayOutputWithContext(context.Context) GetDataLakePipelineSnapshotArrayOutput
}

type GetDataLakePipelineSnapshotArray []GetDataLakePipelineSnapshotInput

func (GetDataLakePipelineSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineSnapshot)(nil)).Elem()
}

func (i GetDataLakePipelineSnapshotArray) ToGetDataLakePipelineSnapshotArrayOutput() GetDataLakePipelineSnapshotArrayOutput {
	return i.ToGetDataLakePipelineSnapshotArrayOutputWithContext(context.Background())
}

func (i GetDataLakePipelineSnapshotArray) ToGetDataLakePipelineSnapshotArrayOutputWithContext(ctx context.Context) GetDataLakePipelineSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineSnapshotArrayOutput)
}

func (i GetDataLakePipelineSnapshotArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineSnapshot] {
	return pulumix.Output[[]GetDataLakePipelineSnapshot]{
		OutputState: i.ToGetDataLakePipelineSnapshotArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakePipelineSnapshotOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineSnapshot)(nil)).Elem()
}

func (o GetDataLakePipelineSnapshotOutput) ToGetDataLakePipelineSnapshotOutput() GetDataLakePipelineSnapshotOutput {
	return o
}

func (o GetDataLakePipelineSnapshotOutput) ToGetDataLakePipelineSnapshotOutputWithContext(ctx context.Context) GetDataLakePipelineSnapshotOutput {
	return o
}

func (o GetDataLakePipelineSnapshotOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineSnapshot] {
	return pulumix.Output[GetDataLakePipelineSnapshot]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelineSnapshotOutput) CopyRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSnapshot) string { return v.CopyRegion }).(pulumi.StringOutput)
}

func (o GetDataLakePipelineSnapshotOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSnapshot) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetDataLakePipelineSnapshotOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSnapshot) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

func (o GetDataLakePipelineSnapshotOutput) FrequencyYype() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSnapshot) string { return v.FrequencyYype }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
func (o GetDataLakePipelineSnapshotOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSnapshot) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDataLakePipelineSnapshotOutput) MasterKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSnapshot) string { return v.MasterKey }).(pulumi.StringOutput)
}

func (o GetDataLakePipelineSnapshotOutput) MongodVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSnapshot) string { return v.MongodVersion }).(pulumi.StringOutput)
}

func (o GetDataLakePipelineSnapshotOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataLakePipelineSnapshot) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Target cloud provider for this Data Lake Pipeline.
func (o GetDataLakePipelineSnapshotOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSnapshot) string { return v.Provider }).(pulumi.StringOutput)
}

func (o GetDataLakePipelineSnapshotOutput) ReplicaSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSnapshot) string { return v.ReplicaSetName }).(pulumi.StringOutput)
}

func (o GetDataLakePipelineSnapshotOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakePipelineSnapshot) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetDataLakePipelineSnapshotOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSnapshot) string { return v.Status }).(pulumi.StringOutput)
}

// Type of ingestion source of this Data Lake Pipeline.
func (o GetDataLakePipelineSnapshotOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSnapshot) string { return v.Type }).(pulumi.StringOutput)
}

type GetDataLakePipelineSnapshotArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineSnapshot)(nil)).Elem()
}

func (o GetDataLakePipelineSnapshotArrayOutput) ToGetDataLakePipelineSnapshotArrayOutput() GetDataLakePipelineSnapshotArrayOutput {
	return o
}

func (o GetDataLakePipelineSnapshotArrayOutput) ToGetDataLakePipelineSnapshotArrayOutputWithContext(ctx context.Context) GetDataLakePipelineSnapshotArrayOutput {
	return o
}

func (o GetDataLakePipelineSnapshotArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineSnapshot] {
	return pulumix.Output[[]GetDataLakePipelineSnapshot]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelineSnapshotArrayOutput) Index(i pulumi.IntInput) GetDataLakePipelineSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakePipelineSnapshot {
		return vs[0].([]GetDataLakePipelineSnapshot)[vs[1].(int)]
	}).(GetDataLakePipelineSnapshotOutput)
}

type GetDataLakePipelineSource struct {
	// Human-readable name that identifies the cluster.
	ClusterName string `pulumi:"clusterName"`
	// Human-readable name that identifies the collection.
	CollectionName string `pulumi:"collectionName"`
	// Human-readable name that identifies the database.
	DatabaseName string `pulumi:"databaseName"`
	// The unique ID for the project to create a Data Lake Pipeline.
	ProjectId string `pulumi:"projectId"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type string `pulumi:"type"`
}

// GetDataLakePipelineSourceInput is an input type that accepts GetDataLakePipelineSourceArgs and GetDataLakePipelineSourceOutput values.
// You can construct a concrete instance of `GetDataLakePipelineSourceInput` via:
//
//	GetDataLakePipelineSourceArgs{...}
type GetDataLakePipelineSourceInput interface {
	pulumi.Input

	ToGetDataLakePipelineSourceOutput() GetDataLakePipelineSourceOutput
	ToGetDataLakePipelineSourceOutputWithContext(context.Context) GetDataLakePipelineSourceOutput
}

type GetDataLakePipelineSourceArgs struct {
	// Human-readable name that identifies the cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Human-readable name that identifies the collection.
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// Human-readable name that identifies the database.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// The unique ID for the project to create a Data Lake Pipeline.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDataLakePipelineSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineSource)(nil)).Elem()
}

func (i GetDataLakePipelineSourceArgs) ToGetDataLakePipelineSourceOutput() GetDataLakePipelineSourceOutput {
	return i.ToGetDataLakePipelineSourceOutputWithContext(context.Background())
}

func (i GetDataLakePipelineSourceArgs) ToGetDataLakePipelineSourceOutputWithContext(ctx context.Context) GetDataLakePipelineSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineSourceOutput)
}

func (i GetDataLakePipelineSourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineSource] {
	return pulumix.Output[GetDataLakePipelineSource]{
		OutputState: i.ToGetDataLakePipelineSourceOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakePipelineSourceArrayInput is an input type that accepts GetDataLakePipelineSourceArray and GetDataLakePipelineSourceArrayOutput values.
// You can construct a concrete instance of `GetDataLakePipelineSourceArrayInput` via:
//
//	GetDataLakePipelineSourceArray{ GetDataLakePipelineSourceArgs{...} }
type GetDataLakePipelineSourceArrayInput interface {
	pulumi.Input

	ToGetDataLakePipelineSourceArrayOutput() GetDataLakePipelineSourceArrayOutput
	ToGetDataLakePipelineSourceArrayOutputWithContext(context.Context) GetDataLakePipelineSourceArrayOutput
}

type GetDataLakePipelineSourceArray []GetDataLakePipelineSourceInput

func (GetDataLakePipelineSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineSource)(nil)).Elem()
}

func (i GetDataLakePipelineSourceArray) ToGetDataLakePipelineSourceArrayOutput() GetDataLakePipelineSourceArrayOutput {
	return i.ToGetDataLakePipelineSourceArrayOutputWithContext(context.Background())
}

func (i GetDataLakePipelineSourceArray) ToGetDataLakePipelineSourceArrayOutputWithContext(ctx context.Context) GetDataLakePipelineSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineSourceArrayOutput)
}

func (i GetDataLakePipelineSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineSource] {
	return pulumix.Output[[]GetDataLakePipelineSource]{
		OutputState: i.ToGetDataLakePipelineSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakePipelineSourceOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineSource)(nil)).Elem()
}

func (o GetDataLakePipelineSourceOutput) ToGetDataLakePipelineSourceOutput() GetDataLakePipelineSourceOutput {
	return o
}

func (o GetDataLakePipelineSourceOutput) ToGetDataLakePipelineSourceOutputWithContext(ctx context.Context) GetDataLakePipelineSourceOutput {
	return o
}

func (o GetDataLakePipelineSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineSource] {
	return pulumix.Output[GetDataLakePipelineSource]{
		OutputState: o.OutputState,
	}
}

// Human-readable name that identifies the cluster.
func (o GetDataLakePipelineSourceOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSource) string { return v.ClusterName }).(pulumi.StringOutput)
}

// Human-readable name that identifies the collection.
func (o GetDataLakePipelineSourceOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSource) string { return v.CollectionName }).(pulumi.StringOutput)
}

// Human-readable name that identifies the database.
func (o GetDataLakePipelineSourceOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSource) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// The unique ID for the project to create a Data Lake Pipeline.
func (o GetDataLakePipelineSourceOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSource) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Type of ingestion source of this Data Lake Pipeline.
func (o GetDataLakePipelineSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineSource) string { return v.Type }).(pulumi.StringOutput)
}

type GetDataLakePipelineSourceArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineSource)(nil)).Elem()
}

func (o GetDataLakePipelineSourceArrayOutput) ToGetDataLakePipelineSourceArrayOutput() GetDataLakePipelineSourceArrayOutput {
	return o
}

func (o GetDataLakePipelineSourceArrayOutput) ToGetDataLakePipelineSourceArrayOutputWithContext(ctx context.Context) GetDataLakePipelineSourceArrayOutput {
	return o
}

func (o GetDataLakePipelineSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineSource] {
	return pulumix.Output[[]GetDataLakePipelineSource]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelineSourceArrayOutput) Index(i pulumi.IntInput) GetDataLakePipelineSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakePipelineSource {
		return vs[0].([]GetDataLakePipelineSource)[vs[1].(int)]
	}).(GetDataLakePipelineSourceOutput)
}

type GetDataLakePipelineTransformation struct {
	Field string `pulumi:"field"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type string `pulumi:"type"`
}

// GetDataLakePipelineTransformationInput is an input type that accepts GetDataLakePipelineTransformationArgs and GetDataLakePipelineTransformationOutput values.
// You can construct a concrete instance of `GetDataLakePipelineTransformationInput` via:
//
//	GetDataLakePipelineTransformationArgs{...}
type GetDataLakePipelineTransformationInput interface {
	pulumi.Input

	ToGetDataLakePipelineTransformationOutput() GetDataLakePipelineTransformationOutput
	ToGetDataLakePipelineTransformationOutputWithContext(context.Context) GetDataLakePipelineTransformationOutput
}

type GetDataLakePipelineTransformationArgs struct {
	Field pulumi.StringInput `pulumi:"field"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDataLakePipelineTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineTransformation)(nil)).Elem()
}

func (i GetDataLakePipelineTransformationArgs) ToGetDataLakePipelineTransformationOutput() GetDataLakePipelineTransformationOutput {
	return i.ToGetDataLakePipelineTransformationOutputWithContext(context.Background())
}

func (i GetDataLakePipelineTransformationArgs) ToGetDataLakePipelineTransformationOutputWithContext(ctx context.Context) GetDataLakePipelineTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineTransformationOutput)
}

func (i GetDataLakePipelineTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineTransformation] {
	return pulumix.Output[GetDataLakePipelineTransformation]{
		OutputState: i.ToGetDataLakePipelineTransformationOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakePipelineTransformationArrayInput is an input type that accepts GetDataLakePipelineTransformationArray and GetDataLakePipelineTransformationArrayOutput values.
// You can construct a concrete instance of `GetDataLakePipelineTransformationArrayInput` via:
//
//	GetDataLakePipelineTransformationArray{ GetDataLakePipelineTransformationArgs{...} }
type GetDataLakePipelineTransformationArrayInput interface {
	pulumi.Input

	ToGetDataLakePipelineTransformationArrayOutput() GetDataLakePipelineTransformationArrayOutput
	ToGetDataLakePipelineTransformationArrayOutputWithContext(context.Context) GetDataLakePipelineTransformationArrayOutput
}

type GetDataLakePipelineTransformationArray []GetDataLakePipelineTransformationInput

func (GetDataLakePipelineTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineTransformation)(nil)).Elem()
}

func (i GetDataLakePipelineTransformationArray) ToGetDataLakePipelineTransformationArrayOutput() GetDataLakePipelineTransformationArrayOutput {
	return i.ToGetDataLakePipelineTransformationArrayOutputWithContext(context.Background())
}

func (i GetDataLakePipelineTransformationArray) ToGetDataLakePipelineTransformationArrayOutputWithContext(ctx context.Context) GetDataLakePipelineTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelineTransformationArrayOutput)
}

func (i GetDataLakePipelineTransformationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineTransformation] {
	return pulumix.Output[[]GetDataLakePipelineTransformation]{
		OutputState: i.ToGetDataLakePipelineTransformationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakePipelineTransformationOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelineTransformation)(nil)).Elem()
}

func (o GetDataLakePipelineTransformationOutput) ToGetDataLakePipelineTransformationOutput() GetDataLakePipelineTransformationOutput {
	return o
}

func (o GetDataLakePipelineTransformationOutput) ToGetDataLakePipelineTransformationOutputWithContext(ctx context.Context) GetDataLakePipelineTransformationOutput {
	return o
}

func (o GetDataLakePipelineTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelineTransformation] {
	return pulumix.Output[GetDataLakePipelineTransformation]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelineTransformationOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineTransformation) string { return v.Field }).(pulumi.StringOutput)
}

// Type of ingestion source of this Data Lake Pipeline.
func (o GetDataLakePipelineTransformationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelineTransformation) string { return v.Type }).(pulumi.StringOutput)
}

type GetDataLakePipelineTransformationArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelineTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelineTransformation)(nil)).Elem()
}

func (o GetDataLakePipelineTransformationArrayOutput) ToGetDataLakePipelineTransformationArrayOutput() GetDataLakePipelineTransformationArrayOutput {
	return o
}

func (o GetDataLakePipelineTransformationArrayOutput) ToGetDataLakePipelineTransformationArrayOutputWithContext(ctx context.Context) GetDataLakePipelineTransformationArrayOutput {
	return o
}

func (o GetDataLakePipelineTransformationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelineTransformation] {
	return pulumix.Output[[]GetDataLakePipelineTransformation]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelineTransformationArrayOutput) Index(i pulumi.IntInput) GetDataLakePipelineTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakePipelineTransformation {
		return vs[0].([]GetDataLakePipelineTransformation)[vs[1].(int)]
	}).(GetDataLakePipelineTransformationOutput)
}

type GetDataLakePipelinesResult struct {
	// Timestamp that indicates when the Data Lake Pipeline was created.
	CreatedDate string `pulumi:"createdDate"`
	// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
	Id string `pulumi:"id"`
	// Timestamp that indicates the last time that the Data Lake Pipeline was updated.
	LastUpdatedDate string `pulumi:"lastUpdatedDate"`
	Name            string `pulumi:"name"`
	// The unique ID for the project to create a data lake pipeline.
	ProjectId string                             `pulumi:"projectId"`
	Sinks     []GetDataLakePipelinesResultSink   `pulumi:"sinks"`
	Sources   []GetDataLakePipelinesResultSource `pulumi:"sources"`
	// State of this Data Lake Pipeline.
	State string `pulumi:"state"`
	// Fields to be excluded for this Data Lake Pipeline.
	// * `transformations.#.field` - Key in the document.
	// * `transformations.#.type` - Type of transformation applied during the export of the namespace in a Data Lake Pipeline.
	Transformations []GetDataLakePipelinesResultTransformation `pulumi:"transformations"`
}

// GetDataLakePipelinesResultInput is an input type that accepts GetDataLakePipelinesResultArgs and GetDataLakePipelinesResultOutput values.
// You can construct a concrete instance of `GetDataLakePipelinesResultInput` via:
//
//	GetDataLakePipelinesResultArgs{...}
type GetDataLakePipelinesResultInput interface {
	pulumi.Input

	ToGetDataLakePipelinesResultOutput() GetDataLakePipelinesResultOutput
	ToGetDataLakePipelinesResultOutputWithContext(context.Context) GetDataLakePipelinesResultOutput
}

type GetDataLakePipelinesResultArgs struct {
	// Timestamp that indicates when the Data Lake Pipeline was created.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
	Id pulumi.StringInput `pulumi:"id"`
	// Timestamp that indicates the last time that the Data Lake Pipeline was updated.
	LastUpdatedDate pulumi.StringInput `pulumi:"lastUpdatedDate"`
	Name            pulumi.StringInput `pulumi:"name"`
	// The unique ID for the project to create a data lake pipeline.
	ProjectId pulumi.StringInput                         `pulumi:"projectId"`
	Sinks     GetDataLakePipelinesResultSinkArrayInput   `pulumi:"sinks"`
	Sources   GetDataLakePipelinesResultSourceArrayInput `pulumi:"sources"`
	// State of this Data Lake Pipeline.
	State pulumi.StringInput `pulumi:"state"`
	// Fields to be excluded for this Data Lake Pipeline.
	// * `transformations.#.field` - Key in the document.
	// * `transformations.#.type` - Type of transformation applied during the export of the namespace in a Data Lake Pipeline.
	Transformations GetDataLakePipelinesResultTransformationArrayInput `pulumi:"transformations"`
}

func (GetDataLakePipelinesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelinesResult)(nil)).Elem()
}

func (i GetDataLakePipelinesResultArgs) ToGetDataLakePipelinesResultOutput() GetDataLakePipelinesResultOutput {
	return i.ToGetDataLakePipelinesResultOutputWithContext(context.Background())
}

func (i GetDataLakePipelinesResultArgs) ToGetDataLakePipelinesResultOutputWithContext(ctx context.Context) GetDataLakePipelinesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelinesResultOutput)
}

func (i GetDataLakePipelinesResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelinesResult] {
	return pulumix.Output[GetDataLakePipelinesResult]{
		OutputState: i.ToGetDataLakePipelinesResultOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakePipelinesResultArrayInput is an input type that accepts GetDataLakePipelinesResultArray and GetDataLakePipelinesResultArrayOutput values.
// You can construct a concrete instance of `GetDataLakePipelinesResultArrayInput` via:
//
//	GetDataLakePipelinesResultArray{ GetDataLakePipelinesResultArgs{...} }
type GetDataLakePipelinesResultArrayInput interface {
	pulumi.Input

	ToGetDataLakePipelinesResultArrayOutput() GetDataLakePipelinesResultArrayOutput
	ToGetDataLakePipelinesResultArrayOutputWithContext(context.Context) GetDataLakePipelinesResultArrayOutput
}

type GetDataLakePipelinesResultArray []GetDataLakePipelinesResultInput

func (GetDataLakePipelinesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelinesResult)(nil)).Elem()
}

func (i GetDataLakePipelinesResultArray) ToGetDataLakePipelinesResultArrayOutput() GetDataLakePipelinesResultArrayOutput {
	return i.ToGetDataLakePipelinesResultArrayOutputWithContext(context.Background())
}

func (i GetDataLakePipelinesResultArray) ToGetDataLakePipelinesResultArrayOutputWithContext(ctx context.Context) GetDataLakePipelinesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelinesResultArrayOutput)
}

func (i GetDataLakePipelinesResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelinesResult] {
	return pulumix.Output[[]GetDataLakePipelinesResult]{
		OutputState: i.ToGetDataLakePipelinesResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakePipelinesResultOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelinesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelinesResult)(nil)).Elem()
}

func (o GetDataLakePipelinesResultOutput) ToGetDataLakePipelinesResultOutput() GetDataLakePipelinesResultOutput {
	return o
}

func (o GetDataLakePipelinesResultOutput) ToGetDataLakePipelinesResultOutputWithContext(ctx context.Context) GetDataLakePipelinesResultOutput {
	return o
}

func (o GetDataLakePipelinesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelinesResult] {
	return pulumix.Output[GetDataLakePipelinesResult]{
		OutputState: o.OutputState,
	}
}

// Timestamp that indicates when the Data Lake Pipeline was created.
func (o GetDataLakePipelinesResultOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResult) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the Data Lake Pipeline.
func (o GetDataLakePipelinesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Timestamp that indicates the last time that the Data Lake Pipeline was updated.
func (o GetDataLakePipelinesResultOutput) LastUpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResult) string { return v.LastUpdatedDate }).(pulumi.StringOutput)
}

func (o GetDataLakePipelinesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResult) string { return v.Name }).(pulumi.StringOutput)
}

// The unique ID for the project to create a data lake pipeline.
func (o GetDataLakePipelinesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetDataLakePipelinesResultOutput) Sinks() GetDataLakePipelinesResultSinkArrayOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResult) []GetDataLakePipelinesResultSink { return v.Sinks }).(GetDataLakePipelinesResultSinkArrayOutput)
}

func (o GetDataLakePipelinesResultOutput) Sources() GetDataLakePipelinesResultSourceArrayOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResult) []GetDataLakePipelinesResultSource { return v.Sources }).(GetDataLakePipelinesResultSourceArrayOutput)
}

// State of this Data Lake Pipeline.
func (o GetDataLakePipelinesResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResult) string { return v.State }).(pulumi.StringOutput)
}

// Fields to be excluded for this Data Lake Pipeline.
// * `transformations.#.field` - Key in the document.
// * `transformations.#.type` - Type of transformation applied during the export of the namespace in a Data Lake Pipeline.
func (o GetDataLakePipelinesResultOutput) Transformations() GetDataLakePipelinesResultTransformationArrayOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResult) []GetDataLakePipelinesResultTransformation {
		return v.Transformations
	}).(GetDataLakePipelinesResultTransformationArrayOutput)
}

type GetDataLakePipelinesResultArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelinesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelinesResult)(nil)).Elem()
}

func (o GetDataLakePipelinesResultArrayOutput) ToGetDataLakePipelinesResultArrayOutput() GetDataLakePipelinesResultArrayOutput {
	return o
}

func (o GetDataLakePipelinesResultArrayOutput) ToGetDataLakePipelinesResultArrayOutputWithContext(ctx context.Context) GetDataLakePipelinesResultArrayOutput {
	return o
}

func (o GetDataLakePipelinesResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelinesResult] {
	return pulumix.Output[[]GetDataLakePipelinesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelinesResultArrayOutput) Index(i pulumi.IntInput) GetDataLakePipelinesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakePipelinesResult {
		return vs[0].([]GetDataLakePipelinesResult)[vs[1].(int)]
	}).(GetDataLakePipelinesResultOutput)
}

type GetDataLakePipelinesResultSink struct {
	// Ordered fields used to physically organize data in the destination.
	// * `partition_fields.#.field_name` - Human-readable label that identifies the field name used to partition data.
	// * `partition_fields.#.order` - Sequence in which MongoDB Atlas slices the collection data to create partitions. The resource expresses this sequence starting with zero.
	PartitionFields []GetDataLakePipelinesResultSinkPartitionField `pulumi:"partitionFields"`
	// Target cloud provider for this Data Lake Pipeline.
	Provider string `pulumi:"provider"`
	// Target cloud provider region for this Data Lake Pipeline. [Supported cloud provider regions](https://www.mongodb.com/docs/datalake/limitations).
	Region string `pulumi:"region"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type string `pulumi:"type"`
}

// GetDataLakePipelinesResultSinkInput is an input type that accepts GetDataLakePipelinesResultSinkArgs and GetDataLakePipelinesResultSinkOutput values.
// You can construct a concrete instance of `GetDataLakePipelinesResultSinkInput` via:
//
//	GetDataLakePipelinesResultSinkArgs{...}
type GetDataLakePipelinesResultSinkInput interface {
	pulumi.Input

	ToGetDataLakePipelinesResultSinkOutput() GetDataLakePipelinesResultSinkOutput
	ToGetDataLakePipelinesResultSinkOutputWithContext(context.Context) GetDataLakePipelinesResultSinkOutput
}

type GetDataLakePipelinesResultSinkArgs struct {
	// Ordered fields used to physically organize data in the destination.
	// * `partition_fields.#.field_name` - Human-readable label that identifies the field name used to partition data.
	// * `partition_fields.#.order` - Sequence in which MongoDB Atlas slices the collection data to create partitions. The resource expresses this sequence starting with zero.
	PartitionFields GetDataLakePipelinesResultSinkPartitionFieldArrayInput `pulumi:"partitionFields"`
	// Target cloud provider for this Data Lake Pipeline.
	Provider pulumi.StringInput `pulumi:"provider"`
	// Target cloud provider region for this Data Lake Pipeline. [Supported cloud provider regions](https://www.mongodb.com/docs/datalake/limitations).
	Region pulumi.StringInput `pulumi:"region"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDataLakePipelinesResultSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelinesResultSink)(nil)).Elem()
}

func (i GetDataLakePipelinesResultSinkArgs) ToGetDataLakePipelinesResultSinkOutput() GetDataLakePipelinesResultSinkOutput {
	return i.ToGetDataLakePipelinesResultSinkOutputWithContext(context.Background())
}

func (i GetDataLakePipelinesResultSinkArgs) ToGetDataLakePipelinesResultSinkOutputWithContext(ctx context.Context) GetDataLakePipelinesResultSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelinesResultSinkOutput)
}

func (i GetDataLakePipelinesResultSinkArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelinesResultSink] {
	return pulumix.Output[GetDataLakePipelinesResultSink]{
		OutputState: i.ToGetDataLakePipelinesResultSinkOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakePipelinesResultSinkArrayInput is an input type that accepts GetDataLakePipelinesResultSinkArray and GetDataLakePipelinesResultSinkArrayOutput values.
// You can construct a concrete instance of `GetDataLakePipelinesResultSinkArrayInput` via:
//
//	GetDataLakePipelinesResultSinkArray{ GetDataLakePipelinesResultSinkArgs{...} }
type GetDataLakePipelinesResultSinkArrayInput interface {
	pulumi.Input

	ToGetDataLakePipelinesResultSinkArrayOutput() GetDataLakePipelinesResultSinkArrayOutput
	ToGetDataLakePipelinesResultSinkArrayOutputWithContext(context.Context) GetDataLakePipelinesResultSinkArrayOutput
}

type GetDataLakePipelinesResultSinkArray []GetDataLakePipelinesResultSinkInput

func (GetDataLakePipelinesResultSinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelinesResultSink)(nil)).Elem()
}

func (i GetDataLakePipelinesResultSinkArray) ToGetDataLakePipelinesResultSinkArrayOutput() GetDataLakePipelinesResultSinkArrayOutput {
	return i.ToGetDataLakePipelinesResultSinkArrayOutputWithContext(context.Background())
}

func (i GetDataLakePipelinesResultSinkArray) ToGetDataLakePipelinesResultSinkArrayOutputWithContext(ctx context.Context) GetDataLakePipelinesResultSinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelinesResultSinkArrayOutput)
}

func (i GetDataLakePipelinesResultSinkArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelinesResultSink] {
	return pulumix.Output[[]GetDataLakePipelinesResultSink]{
		OutputState: i.ToGetDataLakePipelinesResultSinkArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakePipelinesResultSinkOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelinesResultSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelinesResultSink)(nil)).Elem()
}

func (o GetDataLakePipelinesResultSinkOutput) ToGetDataLakePipelinesResultSinkOutput() GetDataLakePipelinesResultSinkOutput {
	return o
}

func (o GetDataLakePipelinesResultSinkOutput) ToGetDataLakePipelinesResultSinkOutputWithContext(ctx context.Context) GetDataLakePipelinesResultSinkOutput {
	return o
}

func (o GetDataLakePipelinesResultSinkOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelinesResultSink] {
	return pulumix.Output[GetDataLakePipelinesResultSink]{
		OutputState: o.OutputState,
	}
}

// Ordered fields used to physically organize data in the destination.
// * `partition_fields.#.field_name` - Human-readable label that identifies the field name used to partition data.
// * `partition_fields.#.order` - Sequence in which MongoDB Atlas slices the collection data to create partitions. The resource expresses this sequence starting with zero.
func (o GetDataLakePipelinesResultSinkOutput) PartitionFields() GetDataLakePipelinesResultSinkPartitionFieldArrayOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResultSink) []GetDataLakePipelinesResultSinkPartitionField {
		return v.PartitionFields
	}).(GetDataLakePipelinesResultSinkPartitionFieldArrayOutput)
}

// Target cloud provider for this Data Lake Pipeline.
func (o GetDataLakePipelinesResultSinkOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResultSink) string { return v.Provider }).(pulumi.StringOutput)
}

// Target cloud provider region for this Data Lake Pipeline. [Supported cloud provider regions](https://www.mongodb.com/docs/datalake/limitations).
func (o GetDataLakePipelinesResultSinkOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResultSink) string { return v.Region }).(pulumi.StringOutput)
}

// Type of ingestion source of this Data Lake Pipeline.
func (o GetDataLakePipelinesResultSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResultSink) string { return v.Type }).(pulumi.StringOutput)
}

type GetDataLakePipelinesResultSinkArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelinesResultSinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelinesResultSink)(nil)).Elem()
}

func (o GetDataLakePipelinesResultSinkArrayOutput) ToGetDataLakePipelinesResultSinkArrayOutput() GetDataLakePipelinesResultSinkArrayOutput {
	return o
}

func (o GetDataLakePipelinesResultSinkArrayOutput) ToGetDataLakePipelinesResultSinkArrayOutputWithContext(ctx context.Context) GetDataLakePipelinesResultSinkArrayOutput {
	return o
}

func (o GetDataLakePipelinesResultSinkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelinesResultSink] {
	return pulumix.Output[[]GetDataLakePipelinesResultSink]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelinesResultSinkArrayOutput) Index(i pulumi.IntInput) GetDataLakePipelinesResultSinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakePipelinesResultSink {
		return vs[0].([]GetDataLakePipelinesResultSink)[vs[1].(int)]
	}).(GetDataLakePipelinesResultSinkOutput)
}

type GetDataLakePipelinesResultSinkPartitionField struct {
	FieldName string `pulumi:"fieldName"`
	Order     int    `pulumi:"order"`
}

// GetDataLakePipelinesResultSinkPartitionFieldInput is an input type that accepts GetDataLakePipelinesResultSinkPartitionFieldArgs and GetDataLakePipelinesResultSinkPartitionFieldOutput values.
// You can construct a concrete instance of `GetDataLakePipelinesResultSinkPartitionFieldInput` via:
//
//	GetDataLakePipelinesResultSinkPartitionFieldArgs{...}
type GetDataLakePipelinesResultSinkPartitionFieldInput interface {
	pulumi.Input

	ToGetDataLakePipelinesResultSinkPartitionFieldOutput() GetDataLakePipelinesResultSinkPartitionFieldOutput
	ToGetDataLakePipelinesResultSinkPartitionFieldOutputWithContext(context.Context) GetDataLakePipelinesResultSinkPartitionFieldOutput
}

type GetDataLakePipelinesResultSinkPartitionFieldArgs struct {
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	Order     pulumi.IntInput    `pulumi:"order"`
}

func (GetDataLakePipelinesResultSinkPartitionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelinesResultSinkPartitionField)(nil)).Elem()
}

func (i GetDataLakePipelinesResultSinkPartitionFieldArgs) ToGetDataLakePipelinesResultSinkPartitionFieldOutput() GetDataLakePipelinesResultSinkPartitionFieldOutput {
	return i.ToGetDataLakePipelinesResultSinkPartitionFieldOutputWithContext(context.Background())
}

func (i GetDataLakePipelinesResultSinkPartitionFieldArgs) ToGetDataLakePipelinesResultSinkPartitionFieldOutputWithContext(ctx context.Context) GetDataLakePipelinesResultSinkPartitionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelinesResultSinkPartitionFieldOutput)
}

func (i GetDataLakePipelinesResultSinkPartitionFieldArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelinesResultSinkPartitionField] {
	return pulumix.Output[GetDataLakePipelinesResultSinkPartitionField]{
		OutputState: i.ToGetDataLakePipelinesResultSinkPartitionFieldOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakePipelinesResultSinkPartitionFieldArrayInput is an input type that accepts GetDataLakePipelinesResultSinkPartitionFieldArray and GetDataLakePipelinesResultSinkPartitionFieldArrayOutput values.
// You can construct a concrete instance of `GetDataLakePipelinesResultSinkPartitionFieldArrayInput` via:
//
//	GetDataLakePipelinesResultSinkPartitionFieldArray{ GetDataLakePipelinesResultSinkPartitionFieldArgs{...} }
type GetDataLakePipelinesResultSinkPartitionFieldArrayInput interface {
	pulumi.Input

	ToGetDataLakePipelinesResultSinkPartitionFieldArrayOutput() GetDataLakePipelinesResultSinkPartitionFieldArrayOutput
	ToGetDataLakePipelinesResultSinkPartitionFieldArrayOutputWithContext(context.Context) GetDataLakePipelinesResultSinkPartitionFieldArrayOutput
}

type GetDataLakePipelinesResultSinkPartitionFieldArray []GetDataLakePipelinesResultSinkPartitionFieldInput

func (GetDataLakePipelinesResultSinkPartitionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelinesResultSinkPartitionField)(nil)).Elem()
}

func (i GetDataLakePipelinesResultSinkPartitionFieldArray) ToGetDataLakePipelinesResultSinkPartitionFieldArrayOutput() GetDataLakePipelinesResultSinkPartitionFieldArrayOutput {
	return i.ToGetDataLakePipelinesResultSinkPartitionFieldArrayOutputWithContext(context.Background())
}

func (i GetDataLakePipelinesResultSinkPartitionFieldArray) ToGetDataLakePipelinesResultSinkPartitionFieldArrayOutputWithContext(ctx context.Context) GetDataLakePipelinesResultSinkPartitionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelinesResultSinkPartitionFieldArrayOutput)
}

func (i GetDataLakePipelinesResultSinkPartitionFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelinesResultSinkPartitionField] {
	return pulumix.Output[[]GetDataLakePipelinesResultSinkPartitionField]{
		OutputState: i.ToGetDataLakePipelinesResultSinkPartitionFieldArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakePipelinesResultSinkPartitionFieldOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelinesResultSinkPartitionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelinesResultSinkPartitionField)(nil)).Elem()
}

func (o GetDataLakePipelinesResultSinkPartitionFieldOutput) ToGetDataLakePipelinesResultSinkPartitionFieldOutput() GetDataLakePipelinesResultSinkPartitionFieldOutput {
	return o
}

func (o GetDataLakePipelinesResultSinkPartitionFieldOutput) ToGetDataLakePipelinesResultSinkPartitionFieldOutputWithContext(ctx context.Context) GetDataLakePipelinesResultSinkPartitionFieldOutput {
	return o
}

func (o GetDataLakePipelinesResultSinkPartitionFieldOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelinesResultSinkPartitionField] {
	return pulumix.Output[GetDataLakePipelinesResultSinkPartitionField]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelinesResultSinkPartitionFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResultSinkPartitionField) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o GetDataLakePipelinesResultSinkPartitionFieldOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResultSinkPartitionField) int { return v.Order }).(pulumi.IntOutput)
}

type GetDataLakePipelinesResultSinkPartitionFieldArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelinesResultSinkPartitionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelinesResultSinkPartitionField)(nil)).Elem()
}

func (o GetDataLakePipelinesResultSinkPartitionFieldArrayOutput) ToGetDataLakePipelinesResultSinkPartitionFieldArrayOutput() GetDataLakePipelinesResultSinkPartitionFieldArrayOutput {
	return o
}

func (o GetDataLakePipelinesResultSinkPartitionFieldArrayOutput) ToGetDataLakePipelinesResultSinkPartitionFieldArrayOutputWithContext(ctx context.Context) GetDataLakePipelinesResultSinkPartitionFieldArrayOutput {
	return o
}

func (o GetDataLakePipelinesResultSinkPartitionFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelinesResultSinkPartitionField] {
	return pulumix.Output[[]GetDataLakePipelinesResultSinkPartitionField]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelinesResultSinkPartitionFieldArrayOutput) Index(i pulumi.IntInput) GetDataLakePipelinesResultSinkPartitionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakePipelinesResultSinkPartitionField {
		return vs[0].([]GetDataLakePipelinesResultSinkPartitionField)[vs[1].(int)]
	}).(GetDataLakePipelinesResultSinkPartitionFieldOutput)
}

type GetDataLakePipelinesResultSource struct {
	// Human-readable name that identifies the cluster.
	ClusterName string `pulumi:"clusterName"`
	// Human-readable name that identifies the collection.
	CollectionName string `pulumi:"collectionName"`
	// Human-readable name that identifies the database.
	DatabaseName string `pulumi:"databaseName"`
	// The unique ID for the project to create a data lake pipeline.
	ProjectId string `pulumi:"projectId"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type string `pulumi:"type"`
}

// GetDataLakePipelinesResultSourceInput is an input type that accepts GetDataLakePipelinesResultSourceArgs and GetDataLakePipelinesResultSourceOutput values.
// You can construct a concrete instance of `GetDataLakePipelinesResultSourceInput` via:
//
//	GetDataLakePipelinesResultSourceArgs{...}
type GetDataLakePipelinesResultSourceInput interface {
	pulumi.Input

	ToGetDataLakePipelinesResultSourceOutput() GetDataLakePipelinesResultSourceOutput
	ToGetDataLakePipelinesResultSourceOutputWithContext(context.Context) GetDataLakePipelinesResultSourceOutput
}

type GetDataLakePipelinesResultSourceArgs struct {
	// Human-readable name that identifies the cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Human-readable name that identifies the collection.
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// Human-readable name that identifies the database.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// The unique ID for the project to create a data lake pipeline.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDataLakePipelinesResultSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelinesResultSource)(nil)).Elem()
}

func (i GetDataLakePipelinesResultSourceArgs) ToGetDataLakePipelinesResultSourceOutput() GetDataLakePipelinesResultSourceOutput {
	return i.ToGetDataLakePipelinesResultSourceOutputWithContext(context.Background())
}

func (i GetDataLakePipelinesResultSourceArgs) ToGetDataLakePipelinesResultSourceOutputWithContext(ctx context.Context) GetDataLakePipelinesResultSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelinesResultSourceOutput)
}

func (i GetDataLakePipelinesResultSourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelinesResultSource] {
	return pulumix.Output[GetDataLakePipelinesResultSource]{
		OutputState: i.ToGetDataLakePipelinesResultSourceOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakePipelinesResultSourceArrayInput is an input type that accepts GetDataLakePipelinesResultSourceArray and GetDataLakePipelinesResultSourceArrayOutput values.
// You can construct a concrete instance of `GetDataLakePipelinesResultSourceArrayInput` via:
//
//	GetDataLakePipelinesResultSourceArray{ GetDataLakePipelinesResultSourceArgs{...} }
type GetDataLakePipelinesResultSourceArrayInput interface {
	pulumi.Input

	ToGetDataLakePipelinesResultSourceArrayOutput() GetDataLakePipelinesResultSourceArrayOutput
	ToGetDataLakePipelinesResultSourceArrayOutputWithContext(context.Context) GetDataLakePipelinesResultSourceArrayOutput
}

type GetDataLakePipelinesResultSourceArray []GetDataLakePipelinesResultSourceInput

func (GetDataLakePipelinesResultSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelinesResultSource)(nil)).Elem()
}

func (i GetDataLakePipelinesResultSourceArray) ToGetDataLakePipelinesResultSourceArrayOutput() GetDataLakePipelinesResultSourceArrayOutput {
	return i.ToGetDataLakePipelinesResultSourceArrayOutputWithContext(context.Background())
}

func (i GetDataLakePipelinesResultSourceArray) ToGetDataLakePipelinesResultSourceArrayOutputWithContext(ctx context.Context) GetDataLakePipelinesResultSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelinesResultSourceArrayOutput)
}

func (i GetDataLakePipelinesResultSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelinesResultSource] {
	return pulumix.Output[[]GetDataLakePipelinesResultSource]{
		OutputState: i.ToGetDataLakePipelinesResultSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakePipelinesResultSourceOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelinesResultSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelinesResultSource)(nil)).Elem()
}

func (o GetDataLakePipelinesResultSourceOutput) ToGetDataLakePipelinesResultSourceOutput() GetDataLakePipelinesResultSourceOutput {
	return o
}

func (o GetDataLakePipelinesResultSourceOutput) ToGetDataLakePipelinesResultSourceOutputWithContext(ctx context.Context) GetDataLakePipelinesResultSourceOutput {
	return o
}

func (o GetDataLakePipelinesResultSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelinesResultSource] {
	return pulumix.Output[GetDataLakePipelinesResultSource]{
		OutputState: o.OutputState,
	}
}

// Human-readable name that identifies the cluster.
func (o GetDataLakePipelinesResultSourceOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResultSource) string { return v.ClusterName }).(pulumi.StringOutput)
}

// Human-readable name that identifies the collection.
func (o GetDataLakePipelinesResultSourceOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResultSource) string { return v.CollectionName }).(pulumi.StringOutput)
}

// Human-readable name that identifies the database.
func (o GetDataLakePipelinesResultSourceOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResultSource) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// The unique ID for the project to create a data lake pipeline.
func (o GetDataLakePipelinesResultSourceOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResultSource) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Type of ingestion source of this Data Lake Pipeline.
func (o GetDataLakePipelinesResultSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResultSource) string { return v.Type }).(pulumi.StringOutput)
}

type GetDataLakePipelinesResultSourceArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelinesResultSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelinesResultSource)(nil)).Elem()
}

func (o GetDataLakePipelinesResultSourceArrayOutput) ToGetDataLakePipelinesResultSourceArrayOutput() GetDataLakePipelinesResultSourceArrayOutput {
	return o
}

func (o GetDataLakePipelinesResultSourceArrayOutput) ToGetDataLakePipelinesResultSourceArrayOutputWithContext(ctx context.Context) GetDataLakePipelinesResultSourceArrayOutput {
	return o
}

func (o GetDataLakePipelinesResultSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelinesResultSource] {
	return pulumix.Output[[]GetDataLakePipelinesResultSource]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelinesResultSourceArrayOutput) Index(i pulumi.IntInput) GetDataLakePipelinesResultSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakePipelinesResultSource {
		return vs[0].([]GetDataLakePipelinesResultSource)[vs[1].(int)]
	}).(GetDataLakePipelinesResultSourceOutput)
}

type GetDataLakePipelinesResultTransformation struct {
	Field string `pulumi:"field"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type string `pulumi:"type"`
}

// GetDataLakePipelinesResultTransformationInput is an input type that accepts GetDataLakePipelinesResultTransformationArgs and GetDataLakePipelinesResultTransformationOutput values.
// You can construct a concrete instance of `GetDataLakePipelinesResultTransformationInput` via:
//
//	GetDataLakePipelinesResultTransformationArgs{...}
type GetDataLakePipelinesResultTransformationInput interface {
	pulumi.Input

	ToGetDataLakePipelinesResultTransformationOutput() GetDataLakePipelinesResultTransformationOutput
	ToGetDataLakePipelinesResultTransformationOutputWithContext(context.Context) GetDataLakePipelinesResultTransformationOutput
}

type GetDataLakePipelinesResultTransformationArgs struct {
	Field pulumi.StringInput `pulumi:"field"`
	// Type of ingestion source of this Data Lake Pipeline.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDataLakePipelinesResultTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelinesResultTransformation)(nil)).Elem()
}

func (i GetDataLakePipelinesResultTransformationArgs) ToGetDataLakePipelinesResultTransformationOutput() GetDataLakePipelinesResultTransformationOutput {
	return i.ToGetDataLakePipelinesResultTransformationOutputWithContext(context.Background())
}

func (i GetDataLakePipelinesResultTransformationArgs) ToGetDataLakePipelinesResultTransformationOutputWithContext(ctx context.Context) GetDataLakePipelinesResultTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelinesResultTransformationOutput)
}

func (i GetDataLakePipelinesResultTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelinesResultTransformation] {
	return pulumix.Output[GetDataLakePipelinesResultTransformation]{
		OutputState: i.ToGetDataLakePipelinesResultTransformationOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakePipelinesResultTransformationArrayInput is an input type that accepts GetDataLakePipelinesResultTransformationArray and GetDataLakePipelinesResultTransformationArrayOutput values.
// You can construct a concrete instance of `GetDataLakePipelinesResultTransformationArrayInput` via:
//
//	GetDataLakePipelinesResultTransformationArray{ GetDataLakePipelinesResultTransformationArgs{...} }
type GetDataLakePipelinesResultTransformationArrayInput interface {
	pulumi.Input

	ToGetDataLakePipelinesResultTransformationArrayOutput() GetDataLakePipelinesResultTransformationArrayOutput
	ToGetDataLakePipelinesResultTransformationArrayOutputWithContext(context.Context) GetDataLakePipelinesResultTransformationArrayOutput
}

type GetDataLakePipelinesResultTransformationArray []GetDataLakePipelinesResultTransformationInput

func (GetDataLakePipelinesResultTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelinesResultTransformation)(nil)).Elem()
}

func (i GetDataLakePipelinesResultTransformationArray) ToGetDataLakePipelinesResultTransformationArrayOutput() GetDataLakePipelinesResultTransformationArrayOutput {
	return i.ToGetDataLakePipelinesResultTransformationArrayOutputWithContext(context.Background())
}

func (i GetDataLakePipelinesResultTransformationArray) ToGetDataLakePipelinesResultTransformationArrayOutputWithContext(ctx context.Context) GetDataLakePipelinesResultTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakePipelinesResultTransformationArrayOutput)
}

func (i GetDataLakePipelinesResultTransformationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelinesResultTransformation] {
	return pulumix.Output[[]GetDataLakePipelinesResultTransformation]{
		OutputState: i.ToGetDataLakePipelinesResultTransformationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakePipelinesResultTransformationOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelinesResultTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakePipelinesResultTransformation)(nil)).Elem()
}

func (o GetDataLakePipelinesResultTransformationOutput) ToGetDataLakePipelinesResultTransformationOutput() GetDataLakePipelinesResultTransformationOutput {
	return o
}

func (o GetDataLakePipelinesResultTransformationOutput) ToGetDataLakePipelinesResultTransformationOutputWithContext(ctx context.Context) GetDataLakePipelinesResultTransformationOutput {
	return o
}

func (o GetDataLakePipelinesResultTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakePipelinesResultTransformation] {
	return pulumix.Output[GetDataLakePipelinesResultTransformation]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelinesResultTransformationOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResultTransformation) string { return v.Field }).(pulumi.StringOutput)
}

// Type of ingestion source of this Data Lake Pipeline.
func (o GetDataLakePipelinesResultTransformationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakePipelinesResultTransformation) string { return v.Type }).(pulumi.StringOutput)
}

type GetDataLakePipelinesResultTransformationArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakePipelinesResultTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakePipelinesResultTransformation)(nil)).Elem()
}

func (o GetDataLakePipelinesResultTransformationArrayOutput) ToGetDataLakePipelinesResultTransformationArrayOutput() GetDataLakePipelinesResultTransformationArrayOutput {
	return o
}

func (o GetDataLakePipelinesResultTransformationArrayOutput) ToGetDataLakePipelinesResultTransformationArrayOutputWithContext(ctx context.Context) GetDataLakePipelinesResultTransformationArrayOutput {
	return o
}

func (o GetDataLakePipelinesResultTransformationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakePipelinesResultTransformation] {
	return pulumix.Output[[]GetDataLakePipelinesResultTransformation]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakePipelinesResultTransformationArrayOutput) Index(i pulumi.IntInput) GetDataLakePipelinesResultTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakePipelinesResultTransformation {
		return vs[0].([]GetDataLakePipelinesResultTransformation)[vs[1].(int)]
	}).(GetDataLakePipelinesResultTransformationOutput)
}

type GetDataLakeStorageDatabase struct {
	Collections            []GetDataLakeStorageDatabaseCollection `pulumi:"collections"`
	MaxWildcardCollections int                                    `pulumi:"maxWildcardCollections"`
	// Name of the data lake.
	Name  string                           `pulumi:"name"`
	Views []GetDataLakeStorageDatabaseView `pulumi:"views"`
}

// GetDataLakeStorageDatabaseInput is an input type that accepts GetDataLakeStorageDatabaseArgs and GetDataLakeStorageDatabaseOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseInput` via:
//
//	GetDataLakeStorageDatabaseArgs{...}
type GetDataLakeStorageDatabaseInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseOutput() GetDataLakeStorageDatabaseOutput
	ToGetDataLakeStorageDatabaseOutputWithContext(context.Context) GetDataLakeStorageDatabaseOutput
}

type GetDataLakeStorageDatabaseArgs struct {
	Collections            GetDataLakeStorageDatabaseCollectionArrayInput `pulumi:"collections"`
	MaxWildcardCollections pulumi.IntInput                                `pulumi:"maxWildcardCollections"`
	// Name of the data lake.
	Name  pulumi.StringInput                       `pulumi:"name"`
	Views GetDataLakeStorageDatabaseViewArrayInput `pulumi:"views"`
}

func (GetDataLakeStorageDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabase)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseArgs) ToGetDataLakeStorageDatabaseOutput() GetDataLakeStorageDatabaseOutput {
	return i.ToGetDataLakeStorageDatabaseOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseArgs) ToGetDataLakeStorageDatabaseOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseOutput)
}

func (i GetDataLakeStorageDatabaseArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakeStorageDatabase] {
	return pulumix.Output[GetDataLakeStorageDatabase]{
		OutputState: i.ToGetDataLakeStorageDatabaseOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakeStorageDatabaseArrayInput is an input type that accepts GetDataLakeStorageDatabaseArray and GetDataLakeStorageDatabaseArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseArrayInput` via:
//
//	GetDataLakeStorageDatabaseArray{ GetDataLakeStorageDatabaseArgs{...} }
type GetDataLakeStorageDatabaseArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseArrayOutput() GetDataLakeStorageDatabaseArrayOutput
	ToGetDataLakeStorageDatabaseArrayOutputWithContext(context.Context) GetDataLakeStorageDatabaseArrayOutput
}

type GetDataLakeStorageDatabaseArray []GetDataLakeStorageDatabaseInput

func (GetDataLakeStorageDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabase)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseArray) ToGetDataLakeStorageDatabaseArrayOutput() GetDataLakeStorageDatabaseArrayOutput {
	return i.ToGetDataLakeStorageDatabaseArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseArray) ToGetDataLakeStorageDatabaseArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseArrayOutput)
}

func (i GetDataLakeStorageDatabaseArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakeStorageDatabase] {
	return pulumix.Output[[]GetDataLakeStorageDatabase]{
		OutputState: i.ToGetDataLakeStorageDatabaseArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakeStorageDatabaseOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabase)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseOutput) ToGetDataLakeStorageDatabaseOutput() GetDataLakeStorageDatabaseOutput {
	return o
}

func (o GetDataLakeStorageDatabaseOutput) ToGetDataLakeStorageDatabaseOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseOutput {
	return o
}

func (o GetDataLakeStorageDatabaseOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakeStorageDatabase] {
	return pulumix.Output[GetDataLakeStorageDatabase]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakeStorageDatabaseOutput) Collections() GetDataLakeStorageDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabase) []GetDataLakeStorageDatabaseCollection { return v.Collections }).(GetDataLakeStorageDatabaseCollectionArrayOutput)
}

func (o GetDataLakeStorageDatabaseOutput) MaxWildcardCollections() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabase) int { return v.MaxWildcardCollections }).(pulumi.IntOutput)
}

// Name of the data lake.
func (o GetDataLakeStorageDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabase) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseOutput) Views() GetDataLakeStorageDatabaseViewArrayOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabase) []GetDataLakeStorageDatabaseView { return v.Views }).(GetDataLakeStorageDatabaseViewArrayOutput)
}

type GetDataLakeStorageDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabase)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseArrayOutput) ToGetDataLakeStorageDatabaseArrayOutput() GetDataLakeStorageDatabaseArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseArrayOutput) ToGetDataLakeStorageDatabaseArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakeStorageDatabase] {
	return pulumix.Output[[]GetDataLakeStorageDatabase]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakeStorageDatabaseArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageDatabase {
		return vs[0].([]GetDataLakeStorageDatabase)[vs[1].(int)]
	}).(GetDataLakeStorageDatabaseOutput)
}

type GetDataLakeStorageDatabaseCollection struct {
	DataSources []GetDataLakeStorageDatabaseCollectionDataSource `pulumi:"dataSources"`
	// Name of the data lake.
	Name string `pulumi:"name"`
}

// GetDataLakeStorageDatabaseCollectionInput is an input type that accepts GetDataLakeStorageDatabaseCollectionArgs and GetDataLakeStorageDatabaseCollectionOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseCollectionInput` via:
//
//	GetDataLakeStorageDatabaseCollectionArgs{...}
type GetDataLakeStorageDatabaseCollectionInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseCollectionOutput() GetDataLakeStorageDatabaseCollectionOutput
	ToGetDataLakeStorageDatabaseCollectionOutputWithContext(context.Context) GetDataLakeStorageDatabaseCollectionOutput
}

type GetDataLakeStorageDatabaseCollectionArgs struct {
	DataSources GetDataLakeStorageDatabaseCollectionDataSourceArrayInput `pulumi:"dataSources"`
	// Name of the data lake.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDataLakeStorageDatabaseCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseCollectionArgs) ToGetDataLakeStorageDatabaseCollectionOutput() GetDataLakeStorageDatabaseCollectionOutput {
	return i.ToGetDataLakeStorageDatabaseCollectionOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseCollectionArgs) ToGetDataLakeStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseCollectionOutput)
}

func (i GetDataLakeStorageDatabaseCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakeStorageDatabaseCollection] {
	return pulumix.Output[GetDataLakeStorageDatabaseCollection]{
		OutputState: i.ToGetDataLakeStorageDatabaseCollectionOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakeStorageDatabaseCollectionArrayInput is an input type that accepts GetDataLakeStorageDatabaseCollectionArray and GetDataLakeStorageDatabaseCollectionArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseCollectionArrayInput` via:
//
//	GetDataLakeStorageDatabaseCollectionArray{ GetDataLakeStorageDatabaseCollectionArgs{...} }
type GetDataLakeStorageDatabaseCollectionArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseCollectionArrayOutput() GetDataLakeStorageDatabaseCollectionArrayOutput
	ToGetDataLakeStorageDatabaseCollectionArrayOutputWithContext(context.Context) GetDataLakeStorageDatabaseCollectionArrayOutput
}

type GetDataLakeStorageDatabaseCollectionArray []GetDataLakeStorageDatabaseCollectionInput

func (GetDataLakeStorageDatabaseCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseCollectionArray) ToGetDataLakeStorageDatabaseCollectionArrayOutput() GetDataLakeStorageDatabaseCollectionArrayOutput {
	return i.ToGetDataLakeStorageDatabaseCollectionArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseCollectionArray) ToGetDataLakeStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseCollectionArrayOutput)
}

func (i GetDataLakeStorageDatabaseCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakeStorageDatabaseCollection] {
	return pulumix.Output[[]GetDataLakeStorageDatabaseCollection]{
		OutputState: i.ToGetDataLakeStorageDatabaseCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakeStorageDatabaseCollectionOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseCollectionOutput) ToGetDataLakeStorageDatabaseCollectionOutput() GetDataLakeStorageDatabaseCollectionOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionOutput) ToGetDataLakeStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakeStorageDatabaseCollection] {
	return pulumix.Output[GetDataLakeStorageDatabaseCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakeStorageDatabaseCollectionOutput) DataSources() GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollection) []GetDataLakeStorageDatabaseCollectionDataSource {
		return v.DataSources
	}).(GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput)
}

// Name of the data lake.
func (o GetDataLakeStorageDatabaseCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollection) string { return v.Name }).(pulumi.StringOutput)
}

type GetDataLakeStorageDatabaseCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseCollectionArrayOutput) ToGetDataLakeStorageDatabaseCollectionArrayOutput() GetDataLakeStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionArrayOutput) ToGetDataLakeStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakeStorageDatabaseCollection] {
	return pulumix.Output[[]GetDataLakeStorageDatabaseCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakeStorageDatabaseCollectionArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageDatabaseCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageDatabaseCollection {
		return vs[0].([]GetDataLakeStorageDatabaseCollection)[vs[1].(int)]
	}).(GetDataLakeStorageDatabaseCollectionOutput)
}

type GetDataLakeStorageDatabaseCollectionDataSource struct {
	DefaultFormat string `pulumi:"defaultFormat"`
	Path          string `pulumi:"path"`
	StoreName     string `pulumi:"storeName"`
}

// GetDataLakeStorageDatabaseCollectionDataSourceInput is an input type that accepts GetDataLakeStorageDatabaseCollectionDataSourceArgs and GetDataLakeStorageDatabaseCollectionDataSourceOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseCollectionDataSourceInput` via:
//
//	GetDataLakeStorageDatabaseCollectionDataSourceArgs{...}
type GetDataLakeStorageDatabaseCollectionDataSourceInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseCollectionDataSourceOutput() GetDataLakeStorageDatabaseCollectionDataSourceOutput
	ToGetDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(context.Context) GetDataLakeStorageDatabaseCollectionDataSourceOutput
}

type GetDataLakeStorageDatabaseCollectionDataSourceArgs struct {
	DefaultFormat pulumi.StringInput `pulumi:"defaultFormat"`
	Path          pulumi.StringInput `pulumi:"path"`
	StoreName     pulumi.StringInput `pulumi:"storeName"`
}

func (GetDataLakeStorageDatabaseCollectionDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseCollectionDataSourceArgs) ToGetDataLakeStorageDatabaseCollectionDataSourceOutput() GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return i.ToGetDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseCollectionDataSourceArgs) ToGetDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseCollectionDataSourceOutput)
}

func (i GetDataLakeStorageDatabaseCollectionDataSourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakeStorageDatabaseCollectionDataSource] {
	return pulumix.Output[GetDataLakeStorageDatabaseCollectionDataSource]{
		OutputState: i.ToGetDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakeStorageDatabaseCollectionDataSourceArrayInput is an input type that accepts GetDataLakeStorageDatabaseCollectionDataSourceArray and GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseCollectionDataSourceArrayInput` via:
//
//	GetDataLakeStorageDatabaseCollectionDataSourceArray{ GetDataLakeStorageDatabaseCollectionDataSourceArgs{...} }
type GetDataLakeStorageDatabaseCollectionDataSourceArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput
	ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Context) GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput
}

type GetDataLakeStorageDatabaseCollectionDataSourceArray []GetDataLakeStorageDatabaseCollectionDataSourceInput

func (GetDataLakeStorageDatabaseCollectionDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseCollectionDataSourceArray) ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return i.ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseCollectionDataSourceArray) ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput)
}

func (i GetDataLakeStorageDatabaseCollectionDataSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakeStorageDatabaseCollectionDataSource] {
	return pulumix.Output[[]GetDataLakeStorageDatabaseCollectionDataSource]{
		OutputState: i.ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakeStorageDatabaseCollectionDataSourceOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseCollectionDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) ToGetDataLakeStorageDatabaseCollectionDataSourceOutput() GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) ToGetDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakeStorageDatabaseCollectionDataSource] {
	return pulumix.Output[GetDataLakeStorageDatabaseCollectionDataSource]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) DefaultFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollectionDataSource) string { return v.DefaultFormat }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollectionDataSource) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollectionDataSource) string { return v.StoreName }).(pulumi.StringOutput)
}

type GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput) ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput) ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakeStorageDatabaseCollectionDataSource] {
	return pulumix.Output[[]GetDataLakeStorageDatabaseCollectionDataSource]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageDatabaseCollectionDataSource {
		return vs[0].([]GetDataLakeStorageDatabaseCollectionDataSource)[vs[1].(int)]
	}).(GetDataLakeStorageDatabaseCollectionDataSourceOutput)
}

type GetDataLakeStorageDatabaseView struct {
	// Name of the data lake.
	Name     string `pulumi:"name"`
	Pipeline string `pulumi:"pipeline"`
	Source   string `pulumi:"source"`
}

// GetDataLakeStorageDatabaseViewInput is an input type that accepts GetDataLakeStorageDatabaseViewArgs and GetDataLakeStorageDatabaseViewOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseViewInput` via:
//
//	GetDataLakeStorageDatabaseViewArgs{...}
type GetDataLakeStorageDatabaseViewInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseViewOutput() GetDataLakeStorageDatabaseViewOutput
	ToGetDataLakeStorageDatabaseViewOutputWithContext(context.Context) GetDataLakeStorageDatabaseViewOutput
}

type GetDataLakeStorageDatabaseViewArgs struct {
	// Name of the data lake.
	Name     pulumi.StringInput `pulumi:"name"`
	Pipeline pulumi.StringInput `pulumi:"pipeline"`
	Source   pulumi.StringInput `pulumi:"source"`
}

func (GetDataLakeStorageDatabaseViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseView)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseViewArgs) ToGetDataLakeStorageDatabaseViewOutput() GetDataLakeStorageDatabaseViewOutput {
	return i.ToGetDataLakeStorageDatabaseViewOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseViewArgs) ToGetDataLakeStorageDatabaseViewOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseViewOutput)
}

func (i GetDataLakeStorageDatabaseViewArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakeStorageDatabaseView] {
	return pulumix.Output[GetDataLakeStorageDatabaseView]{
		OutputState: i.ToGetDataLakeStorageDatabaseViewOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakeStorageDatabaseViewArrayInput is an input type that accepts GetDataLakeStorageDatabaseViewArray and GetDataLakeStorageDatabaseViewArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseViewArrayInput` via:
//
//	GetDataLakeStorageDatabaseViewArray{ GetDataLakeStorageDatabaseViewArgs{...} }
type GetDataLakeStorageDatabaseViewArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseViewArrayOutput() GetDataLakeStorageDatabaseViewArrayOutput
	ToGetDataLakeStorageDatabaseViewArrayOutputWithContext(context.Context) GetDataLakeStorageDatabaseViewArrayOutput
}

type GetDataLakeStorageDatabaseViewArray []GetDataLakeStorageDatabaseViewInput

func (GetDataLakeStorageDatabaseViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseView)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseViewArray) ToGetDataLakeStorageDatabaseViewArrayOutput() GetDataLakeStorageDatabaseViewArrayOutput {
	return i.ToGetDataLakeStorageDatabaseViewArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseViewArray) ToGetDataLakeStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseViewArrayOutput)
}

func (i GetDataLakeStorageDatabaseViewArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakeStorageDatabaseView] {
	return pulumix.Output[[]GetDataLakeStorageDatabaseView]{
		OutputState: i.ToGetDataLakeStorageDatabaseViewArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakeStorageDatabaseViewOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseView)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseViewOutput) ToGetDataLakeStorageDatabaseViewOutput() GetDataLakeStorageDatabaseViewOutput {
	return o
}

func (o GetDataLakeStorageDatabaseViewOutput) ToGetDataLakeStorageDatabaseViewOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseViewOutput {
	return o
}

func (o GetDataLakeStorageDatabaseViewOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakeStorageDatabaseView] {
	return pulumix.Output[GetDataLakeStorageDatabaseView]{
		OutputState: o.OutputState,
	}
}

// Name of the data lake.
func (o GetDataLakeStorageDatabaseViewOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseView) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseViewOutput) Pipeline() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseView) string { return v.Pipeline }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseViewOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseView) string { return v.Source }).(pulumi.StringOutput)
}

type GetDataLakeStorageDatabaseViewArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseView)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseViewArrayOutput) ToGetDataLakeStorageDatabaseViewArrayOutput() GetDataLakeStorageDatabaseViewArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseViewArrayOutput) ToGetDataLakeStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseViewArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseViewArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakeStorageDatabaseView] {
	return pulumix.Output[[]GetDataLakeStorageDatabaseView]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakeStorageDatabaseViewArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageDatabaseViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageDatabaseView {
		return vs[0].([]GetDataLakeStorageDatabaseView)[vs[1].(int)]
	}).(GetDataLakeStorageDatabaseViewOutput)
}

type GetDataLakeStorageStore struct {
	AdditionalStorageClasses []string `pulumi:"additionalStorageClasses"`
	Bucket                   string   `pulumi:"bucket"`
	Delimiter                string   `pulumi:"delimiter"`
	IncludeTags              bool     `pulumi:"includeTags"`
	// Name of the data lake.
	Name     string `pulumi:"name"`
	Prefix   string `pulumi:"prefix"`
	Provider string `pulumi:"provider"`
	Region   string `pulumi:"region"`
}

// GetDataLakeStorageStoreInput is an input type that accepts GetDataLakeStorageStoreArgs and GetDataLakeStorageStoreOutput values.
// You can construct a concrete instance of `GetDataLakeStorageStoreInput` via:
//
//	GetDataLakeStorageStoreArgs{...}
type GetDataLakeStorageStoreInput interface {
	pulumi.Input

	ToGetDataLakeStorageStoreOutput() GetDataLakeStorageStoreOutput
	ToGetDataLakeStorageStoreOutputWithContext(context.Context) GetDataLakeStorageStoreOutput
}

type GetDataLakeStorageStoreArgs struct {
	AdditionalStorageClasses pulumi.StringArrayInput `pulumi:"additionalStorageClasses"`
	Bucket                   pulumi.StringInput      `pulumi:"bucket"`
	Delimiter                pulumi.StringInput      `pulumi:"delimiter"`
	IncludeTags              pulumi.BoolInput        `pulumi:"includeTags"`
	// Name of the data lake.
	Name     pulumi.StringInput `pulumi:"name"`
	Prefix   pulumi.StringInput `pulumi:"prefix"`
	Provider pulumi.StringInput `pulumi:"provider"`
	Region   pulumi.StringInput `pulumi:"region"`
}

func (GetDataLakeStorageStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageStore)(nil)).Elem()
}

func (i GetDataLakeStorageStoreArgs) ToGetDataLakeStorageStoreOutput() GetDataLakeStorageStoreOutput {
	return i.ToGetDataLakeStorageStoreOutputWithContext(context.Background())
}

func (i GetDataLakeStorageStoreArgs) ToGetDataLakeStorageStoreOutputWithContext(ctx context.Context) GetDataLakeStorageStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageStoreOutput)
}

func (i GetDataLakeStorageStoreArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakeStorageStore] {
	return pulumix.Output[GetDataLakeStorageStore]{
		OutputState: i.ToGetDataLakeStorageStoreOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakeStorageStoreArrayInput is an input type that accepts GetDataLakeStorageStoreArray and GetDataLakeStorageStoreArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageStoreArrayInput` via:
//
//	GetDataLakeStorageStoreArray{ GetDataLakeStorageStoreArgs{...} }
type GetDataLakeStorageStoreArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageStoreArrayOutput() GetDataLakeStorageStoreArrayOutput
	ToGetDataLakeStorageStoreArrayOutputWithContext(context.Context) GetDataLakeStorageStoreArrayOutput
}

type GetDataLakeStorageStoreArray []GetDataLakeStorageStoreInput

func (GetDataLakeStorageStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageStore)(nil)).Elem()
}

func (i GetDataLakeStorageStoreArray) ToGetDataLakeStorageStoreArrayOutput() GetDataLakeStorageStoreArrayOutput {
	return i.ToGetDataLakeStorageStoreArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageStoreArray) ToGetDataLakeStorageStoreArrayOutputWithContext(ctx context.Context) GetDataLakeStorageStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageStoreArrayOutput)
}

func (i GetDataLakeStorageStoreArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakeStorageStore] {
	return pulumix.Output[[]GetDataLakeStorageStore]{
		OutputState: i.ToGetDataLakeStorageStoreArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakeStorageStoreOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageStore)(nil)).Elem()
}

func (o GetDataLakeStorageStoreOutput) ToGetDataLakeStorageStoreOutput() GetDataLakeStorageStoreOutput {
	return o
}

func (o GetDataLakeStorageStoreOutput) ToGetDataLakeStorageStoreOutputWithContext(ctx context.Context) GetDataLakeStorageStoreOutput {
	return o
}

func (o GetDataLakeStorageStoreOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakeStorageStore] {
	return pulumix.Output[GetDataLakeStorageStore]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakeStorageStoreOutput) AdditionalStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) []string { return v.AdditionalStorageClasses }).(pulumi.StringArrayOutput)
}

func (o GetDataLakeStorageStoreOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Delimiter }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) IncludeTags() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) bool { return v.IncludeTags }).(pulumi.BoolOutput)
}

// Name of the data lake.
func (o GetDataLakeStorageStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Provider }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Region }).(pulumi.StringOutput)
}

type GetDataLakeStorageStoreArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageStore)(nil)).Elem()
}

func (o GetDataLakeStorageStoreArrayOutput) ToGetDataLakeStorageStoreArrayOutput() GetDataLakeStorageStoreArrayOutput {
	return o
}

func (o GetDataLakeStorageStoreArrayOutput) ToGetDataLakeStorageStoreArrayOutputWithContext(ctx context.Context) GetDataLakeStorageStoreArrayOutput {
	return o
}

func (o GetDataLakeStorageStoreArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakeStorageStore] {
	return pulumix.Output[[]GetDataLakeStorageStore]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakeStorageStoreArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageStore {
		return vs[0].([]GetDataLakeStorageStore)[vs[1].(int)]
	}).(GetDataLakeStorageStoreOutput)
}

type GetDataLakesResult struct {
	Aws []GetDataLakesResultAw `pulumi:"aws"`
	// The cloud provider region to which Atlas Data Lake routes client connections for data processing.
	// * `data_process_region.0.cloud_provider` - Name of the cloud service provider.
	// * `data_process_region.0.region` -Name of the region to which Data Lake routes client connections for data processing.
	DataProcessRegions []GetDataLakesResultDataProcessRegion `pulumi:"dataProcessRegions"`
	// The list of hostnames assigned to the Atlas Data Lake. Each string in the array is a hostname assigned to the Atlas Data Lake.
	Hostnames []string `pulumi:"hostnames"`
	Name      string   `pulumi:"name"`
	// The unique ID for the project to get all data lakes.
	ProjectId string `pulumi:"projectId"`
	// Current state of the Atlas Data Lake:
	State string `pulumi:"state"`
	// Configuration details for mapping each data store to queryable databases and collections.
	// * `storage_databases.#.name` - Name of the database to which Data Lake maps the data contained in the data store.
	// * `storage_databases.#.collections` -     Array of objects where each object represents a collection and data sources that map to a [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#mongodb-datalakeconf-datalakeconf.stores) data store.
	// * `storage_databases.#.collections.#.name` - Name of the collection.
	// * `storage_databases.#.collections.#.data_sources` -     Array of objects where each object represents a stores data store to map with the collection.
	// * `storage_databases.#.collections.#.data_sources.#.store_name` -     Name of a data store to map to the `<collection>`.
	// * `storage_databases.#.collections.#.data_sources.#.default_format` - Default format that Data Lake assumes if it encounters a file without an extension while searching the storeName.
	// * `storage_databases.#.collections.#.data_sources.#.path` - Controls how Atlas Data Lake searches for and parses files in the storeName before mapping them to the `<collection>`.
	// * `storage_databases.#.views` -     Array of objects where each object represents an [aggregation pipeline](https://docs.mongodb.com/manual/core/aggregation-pipeline/#id1) on a collection.
	// * `storage_databases.#.views.#.name` - Name of the view.
	// * `storage_databases.#.views.#.source` -  Name of the source collection for the view.
	// * `storage_databases.#.views.#.pipeline`- Aggregation pipeline stage(s) to apply to the source collection.
	StorageDatabases []GetDataLakesResultStorageDatabase `pulumi:"storageDatabases"`
	// Each object in the array represents a data store. Data Lake uses the storage.databases configuration details to map data in each data store to queryable databases and collections.
	// * `storage_stores.#.name` - Name of the data store.
	// * `storage_stores.#.provider` - Defines where the data is stored.
	// * `storage_stores.#.region` - Name of the AWS region in which the S3 bucket is hosted.
	// * `storage_stores.#.bucket` - Name of the AWS S3 bucket.
	// * `storage_stores.#.prefix` - Prefix Data Lake applies when searching for files in the S3 bucket .
	// * `storage_stores.#.delimiter` - The delimiter that separates `storage_databases.#.collections.#.data_sources.#.path` segments in the data store.
	// * `storage_stores.#.include_tags` - Determines whether or not to use S3 tags on the files in the given path as additional partition attributes.
	StorageStores []GetDataLakesResultStorageStore `pulumi:"storageStores"`
}

// GetDataLakesResultInput is an input type that accepts GetDataLakesResultArgs and GetDataLakesResultOutput values.
// You can construct a concrete instance of `GetDataLakesResultInput` via:
//
//	GetDataLakesResultArgs{...}
type GetDataLakesResultInput interface {
	pulumi.Input

	ToGetDataLakesResultOutput() GetDataLakesResultOutput
	ToGetDataLakesResultOutputWithContext(context.Context) GetDataLakesResultOutput
}

type GetDataLakesResultArgs struct {
	Aws GetDataLakesResultAwArrayInput `pulumi:"aws"`
	// The cloud provider region to which Atlas Data Lake routes client connections for data processing.
	// * `data_process_region.0.cloud_provider` - Name of the cloud service provider.
	// * `data_process_region.0.region` -Name of the region to which Data Lake routes client connections for data processing.
	DataProcessRegions GetDataLakesResultDataProcessRegionArrayInput `pulumi:"dataProcessRegions"`
	// The list of hostnames assigned to the Atlas Data Lake. Each string in the array is a hostname assigned to the Atlas Data Lake.
	Hostnames pulumi.StringArrayInput `pulumi:"hostnames"`
	Name      pulumi.StringInput      `pulumi:"name"`
	// The unique ID for the project to get all data lakes.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Current state of the Atlas Data Lake:
	State pulumi.StringInput `pulumi:"state"`
	// Configuration details for mapping each data store to queryable databases and collections.
	// * `storage_databases.#.name` - Name of the database to which Data Lake maps the data contained in the data store.
	// * `storage_databases.#.collections` -     Array of objects where each object represents a collection and data sources that map to a [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#mongodb-datalakeconf-datalakeconf.stores) data store.
	// * `storage_databases.#.collections.#.name` - Name of the collection.
	// * `storage_databases.#.collections.#.data_sources` -     Array of objects where each object represents a stores data store to map with the collection.
	// * `storage_databases.#.collections.#.data_sources.#.store_name` -     Name of a data store to map to the `<collection>`.
	// * `storage_databases.#.collections.#.data_sources.#.default_format` - Default format that Data Lake assumes if it encounters a file without an extension while searching the storeName.
	// * `storage_databases.#.collections.#.data_sources.#.path` - Controls how Atlas Data Lake searches for and parses files in the storeName before mapping them to the `<collection>`.
	// * `storage_databases.#.views` -     Array of objects where each object represents an [aggregation pipeline](https://docs.mongodb.com/manual/core/aggregation-pipeline/#id1) on a collection.
	// * `storage_databases.#.views.#.name` - Name of the view.
	// * `storage_databases.#.views.#.source` -  Name of the source collection for the view.
	// * `storage_databases.#.views.#.pipeline`- Aggregation pipeline stage(s) to apply to the source collection.
	StorageDatabases GetDataLakesResultStorageDatabaseArrayInput `pulumi:"storageDatabases"`
	// Each object in the array represents a data store. Data Lake uses the storage.databases configuration details to map data in each data store to queryable databases and collections.
	// * `storage_stores.#.name` - Name of the data store.
	// * `storage_stores.#.provider` - Defines where the data is stored.
	// * `storage_stores.#.region` - Name of the AWS region in which the S3 bucket is hosted.
	// * `storage_stores.#.bucket` - Name of the AWS S3 bucket.
	// * `storage_stores.#.prefix` - Prefix Data Lake applies when searching for files in the S3 bucket .
	// * `storage_stores.#.delimiter` - The delimiter that separates `storage_databases.#.collections.#.data_sources.#.path` segments in the data store.
	// * `storage_stores.#.include_tags` - Determines whether or not to use S3 tags on the files in the given path as additional partition attributes.
	StorageStores GetDataLakesResultStorageStoreArrayInput `pulumi:"storageStores"`
}

func (GetDataLakesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResult)(nil)).Elem()
}

func (i GetDataLakesResultArgs) ToGetDataLakesResultOutput() GetDataLakesResultOutput {
	return i.ToGetDataLakesResultOutputWithContext(context.Background())
}

func (i GetDataLakesResultArgs) ToGetDataLakesResultOutputWithContext(ctx context.Context) GetDataLakesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultOutput)
}

func (i GetDataLakesResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResult] {
	return pulumix.Output[GetDataLakesResult]{
		OutputState: i.ToGetDataLakesResultOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakesResultArrayInput is an input type that accepts GetDataLakesResultArray and GetDataLakesResultArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultArrayInput` via:
//
//	GetDataLakesResultArray{ GetDataLakesResultArgs{...} }
type GetDataLakesResultArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultArrayOutput() GetDataLakesResultArrayOutput
	ToGetDataLakesResultArrayOutputWithContext(context.Context) GetDataLakesResultArrayOutput
}

type GetDataLakesResultArray []GetDataLakesResultInput

func (GetDataLakesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResult)(nil)).Elem()
}

func (i GetDataLakesResultArray) ToGetDataLakesResultArrayOutput() GetDataLakesResultArrayOutput {
	return i.ToGetDataLakesResultArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultArray) ToGetDataLakesResultArrayOutputWithContext(ctx context.Context) GetDataLakesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultArrayOutput)
}

func (i GetDataLakesResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResult] {
	return pulumix.Output[[]GetDataLakesResult]{
		OutputState: i.ToGetDataLakesResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakesResultOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResult)(nil)).Elem()
}

func (o GetDataLakesResultOutput) ToGetDataLakesResultOutput() GetDataLakesResultOutput {
	return o
}

func (o GetDataLakesResultOutput) ToGetDataLakesResultOutputWithContext(ctx context.Context) GetDataLakesResultOutput {
	return o
}

func (o GetDataLakesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResult] {
	return pulumix.Output[GetDataLakesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultOutput) Aws() GetDataLakesResultAwArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []GetDataLakesResultAw { return v.Aws }).(GetDataLakesResultAwArrayOutput)
}

// The cloud provider region to which Atlas Data Lake routes client connections for data processing.
// * `data_process_region.0.cloud_provider` - Name of the cloud service provider.
// * `data_process_region.0.region` -Name of the region to which Data Lake routes client connections for data processing.
func (o GetDataLakesResultOutput) DataProcessRegions() GetDataLakesResultDataProcessRegionArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []GetDataLakesResultDataProcessRegion { return v.DataProcessRegions }).(GetDataLakesResultDataProcessRegionArrayOutput)
}

// The list of hostnames assigned to the Atlas Data Lake. Each string in the array is a hostname assigned to the Atlas Data Lake.
func (o GetDataLakesResultOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []string { return v.Hostnames }).(pulumi.StringArrayOutput)
}

func (o GetDataLakesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResult) string { return v.Name }).(pulumi.StringOutput)
}

// The unique ID for the project to get all data lakes.
func (o GetDataLakesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Current state of the Atlas Data Lake:
func (o GetDataLakesResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResult) string { return v.State }).(pulumi.StringOutput)
}

// Configuration details for mapping each data store to queryable databases and collections.
// * `storage_databases.#.name` - Name of the database to which Data Lake maps the data contained in the data store.
// * `storage_databases.#.collections` -     Array of objects where each object represents a collection and data sources that map to a [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#mongodb-datalakeconf-datalakeconf.stores) data store.
// * `storage_databases.#.collections.#.name` - Name of the collection.
// * `storage_databases.#.collections.#.data_sources` -     Array of objects where each object represents a stores data store to map with the collection.
// * `storage_databases.#.collections.#.data_sources.#.store_name` -     Name of a data store to map to the `<collection>`.
// * `storage_databases.#.collections.#.data_sources.#.default_format` - Default format that Data Lake assumes if it encounters a file without an extension while searching the storeName.
// * `storage_databases.#.collections.#.data_sources.#.path` - Controls how Atlas Data Lake searches for and parses files in the storeName before mapping them to the `<collection>`.
// * `storage_databases.#.views` -     Array of objects where each object represents an [aggregation pipeline](https://docs.mongodb.com/manual/core/aggregation-pipeline/#id1) on a collection.
// * `storage_databases.#.views.#.name` - Name of the view.
// * `storage_databases.#.views.#.source` -  Name of the source collection for the view.
// * `storage_databases.#.views.#.pipeline`- Aggregation pipeline stage(s) to apply to the source collection.
func (o GetDataLakesResultOutput) StorageDatabases() GetDataLakesResultStorageDatabaseArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []GetDataLakesResultStorageDatabase { return v.StorageDatabases }).(GetDataLakesResultStorageDatabaseArrayOutput)
}

// Each object in the array represents a data store. Data Lake uses the storage.databases configuration details to map data in each data store to queryable databases and collections.
// * `storage_stores.#.name` - Name of the data store.
// * `storage_stores.#.provider` - Defines where the data is stored.
// * `storage_stores.#.region` - Name of the AWS region in which the S3 bucket is hosted.
// * `storage_stores.#.bucket` - Name of the AWS S3 bucket.
// * `storage_stores.#.prefix` - Prefix Data Lake applies when searching for files in the S3 bucket .
// * `storage_stores.#.delimiter` - The delimiter that separates `storage_databases.#.collections.#.data_sources.#.path` segments in the data store.
// * `storage_stores.#.include_tags` - Determines whether or not to use S3 tags on the files in the given path as additional partition attributes.
func (o GetDataLakesResultOutput) StorageStores() GetDataLakesResultStorageStoreArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []GetDataLakesResultStorageStore { return v.StorageStores }).(GetDataLakesResultStorageStoreArrayOutput)
}

type GetDataLakesResultArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResult)(nil)).Elem()
}

func (o GetDataLakesResultArrayOutput) ToGetDataLakesResultArrayOutput() GetDataLakesResultArrayOutput {
	return o
}

func (o GetDataLakesResultArrayOutput) ToGetDataLakesResultArrayOutputWithContext(ctx context.Context) GetDataLakesResultArrayOutput {
	return o
}

func (o GetDataLakesResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResult] {
	return pulumix.Output[[]GetDataLakesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResult {
		return vs[0].([]GetDataLakesResult)[vs[1].(int)]
	}).(GetDataLakesResultOutput)
}

type GetDataLakesResultAw struct {
	ExternalId        string `pulumi:"externalId"`
	IamAssumedRoleArn string `pulumi:"iamAssumedRoleArn"`
	IamUserArn        string `pulumi:"iamUserArn"`
	RoleId            string `pulumi:"roleId"`
	TestS3Bucket      string `pulumi:"testS3Bucket"`
}

// GetDataLakesResultAwInput is an input type that accepts GetDataLakesResultAwArgs and GetDataLakesResultAwOutput values.
// You can construct a concrete instance of `GetDataLakesResultAwInput` via:
//
//	GetDataLakesResultAwArgs{...}
type GetDataLakesResultAwInput interface {
	pulumi.Input

	ToGetDataLakesResultAwOutput() GetDataLakesResultAwOutput
	ToGetDataLakesResultAwOutputWithContext(context.Context) GetDataLakesResultAwOutput
}

type GetDataLakesResultAwArgs struct {
	ExternalId        pulumi.StringInput `pulumi:"externalId"`
	IamAssumedRoleArn pulumi.StringInput `pulumi:"iamAssumedRoleArn"`
	IamUserArn        pulumi.StringInput `pulumi:"iamUserArn"`
	RoleId            pulumi.StringInput `pulumi:"roleId"`
	TestS3Bucket      pulumi.StringInput `pulumi:"testS3Bucket"`
}

func (GetDataLakesResultAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultAw)(nil)).Elem()
}

func (i GetDataLakesResultAwArgs) ToGetDataLakesResultAwOutput() GetDataLakesResultAwOutput {
	return i.ToGetDataLakesResultAwOutputWithContext(context.Background())
}

func (i GetDataLakesResultAwArgs) ToGetDataLakesResultAwOutputWithContext(ctx context.Context) GetDataLakesResultAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultAwOutput)
}

func (i GetDataLakesResultAwArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResultAw] {
	return pulumix.Output[GetDataLakesResultAw]{
		OutputState: i.ToGetDataLakesResultAwOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakesResultAwArrayInput is an input type that accepts GetDataLakesResultAwArray and GetDataLakesResultAwArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultAwArrayInput` via:
//
//	GetDataLakesResultAwArray{ GetDataLakesResultAwArgs{...} }
type GetDataLakesResultAwArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultAwArrayOutput() GetDataLakesResultAwArrayOutput
	ToGetDataLakesResultAwArrayOutputWithContext(context.Context) GetDataLakesResultAwArrayOutput
}

type GetDataLakesResultAwArray []GetDataLakesResultAwInput

func (GetDataLakesResultAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultAw)(nil)).Elem()
}

func (i GetDataLakesResultAwArray) ToGetDataLakesResultAwArrayOutput() GetDataLakesResultAwArrayOutput {
	return i.ToGetDataLakesResultAwArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultAwArray) ToGetDataLakesResultAwArrayOutputWithContext(ctx context.Context) GetDataLakesResultAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultAwArrayOutput)
}

func (i GetDataLakesResultAwArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResultAw] {
	return pulumix.Output[[]GetDataLakesResultAw]{
		OutputState: i.ToGetDataLakesResultAwArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakesResultAwOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultAw)(nil)).Elem()
}

func (o GetDataLakesResultAwOutput) ToGetDataLakesResultAwOutput() GetDataLakesResultAwOutput {
	return o
}

func (o GetDataLakesResultAwOutput) ToGetDataLakesResultAwOutputWithContext(ctx context.Context) GetDataLakesResultAwOutput {
	return o
}

func (o GetDataLakesResultAwOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResultAw] {
	return pulumix.Output[GetDataLakesResultAw]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultAwOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetDataLakesResultAwOutput) IamAssumedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.IamAssumedRoleArn }).(pulumi.StringOutput)
}

func (o GetDataLakesResultAwOutput) IamUserArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.IamUserArn }).(pulumi.StringOutput)
}

func (o GetDataLakesResultAwOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o GetDataLakesResultAwOutput) TestS3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.TestS3Bucket }).(pulumi.StringOutput)
}

type GetDataLakesResultAwArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultAw)(nil)).Elem()
}

func (o GetDataLakesResultAwArrayOutput) ToGetDataLakesResultAwArrayOutput() GetDataLakesResultAwArrayOutput {
	return o
}

func (o GetDataLakesResultAwArrayOutput) ToGetDataLakesResultAwArrayOutputWithContext(ctx context.Context) GetDataLakesResultAwArrayOutput {
	return o
}

func (o GetDataLakesResultAwArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResultAw] {
	return pulumix.Output[[]GetDataLakesResultAw]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultAwArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultAw {
		return vs[0].([]GetDataLakesResultAw)[vs[1].(int)]
	}).(GetDataLakesResultAwOutput)
}

type GetDataLakesResultDataProcessRegion struct {
	CloudProvider string `pulumi:"cloudProvider"`
	Region        string `pulumi:"region"`
}

// GetDataLakesResultDataProcessRegionInput is an input type that accepts GetDataLakesResultDataProcessRegionArgs and GetDataLakesResultDataProcessRegionOutput values.
// You can construct a concrete instance of `GetDataLakesResultDataProcessRegionInput` via:
//
//	GetDataLakesResultDataProcessRegionArgs{...}
type GetDataLakesResultDataProcessRegionInput interface {
	pulumi.Input

	ToGetDataLakesResultDataProcessRegionOutput() GetDataLakesResultDataProcessRegionOutput
	ToGetDataLakesResultDataProcessRegionOutputWithContext(context.Context) GetDataLakesResultDataProcessRegionOutput
}

type GetDataLakesResultDataProcessRegionArgs struct {
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	Region        pulumi.StringInput `pulumi:"region"`
}

func (GetDataLakesResultDataProcessRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultDataProcessRegion)(nil)).Elem()
}

func (i GetDataLakesResultDataProcessRegionArgs) ToGetDataLakesResultDataProcessRegionOutput() GetDataLakesResultDataProcessRegionOutput {
	return i.ToGetDataLakesResultDataProcessRegionOutputWithContext(context.Background())
}

func (i GetDataLakesResultDataProcessRegionArgs) ToGetDataLakesResultDataProcessRegionOutputWithContext(ctx context.Context) GetDataLakesResultDataProcessRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultDataProcessRegionOutput)
}

func (i GetDataLakesResultDataProcessRegionArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResultDataProcessRegion] {
	return pulumix.Output[GetDataLakesResultDataProcessRegion]{
		OutputState: i.ToGetDataLakesResultDataProcessRegionOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakesResultDataProcessRegionArrayInput is an input type that accepts GetDataLakesResultDataProcessRegionArray and GetDataLakesResultDataProcessRegionArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultDataProcessRegionArrayInput` via:
//
//	GetDataLakesResultDataProcessRegionArray{ GetDataLakesResultDataProcessRegionArgs{...} }
type GetDataLakesResultDataProcessRegionArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultDataProcessRegionArrayOutput() GetDataLakesResultDataProcessRegionArrayOutput
	ToGetDataLakesResultDataProcessRegionArrayOutputWithContext(context.Context) GetDataLakesResultDataProcessRegionArrayOutput
}

type GetDataLakesResultDataProcessRegionArray []GetDataLakesResultDataProcessRegionInput

func (GetDataLakesResultDataProcessRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultDataProcessRegion)(nil)).Elem()
}

func (i GetDataLakesResultDataProcessRegionArray) ToGetDataLakesResultDataProcessRegionArrayOutput() GetDataLakesResultDataProcessRegionArrayOutput {
	return i.ToGetDataLakesResultDataProcessRegionArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultDataProcessRegionArray) ToGetDataLakesResultDataProcessRegionArrayOutputWithContext(ctx context.Context) GetDataLakesResultDataProcessRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultDataProcessRegionArrayOutput)
}

func (i GetDataLakesResultDataProcessRegionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResultDataProcessRegion] {
	return pulumix.Output[[]GetDataLakesResultDataProcessRegion]{
		OutputState: i.ToGetDataLakesResultDataProcessRegionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakesResultDataProcessRegionOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultDataProcessRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultDataProcessRegion)(nil)).Elem()
}

func (o GetDataLakesResultDataProcessRegionOutput) ToGetDataLakesResultDataProcessRegionOutput() GetDataLakesResultDataProcessRegionOutput {
	return o
}

func (o GetDataLakesResultDataProcessRegionOutput) ToGetDataLakesResultDataProcessRegionOutputWithContext(ctx context.Context) GetDataLakesResultDataProcessRegionOutput {
	return o
}

func (o GetDataLakesResultDataProcessRegionOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResultDataProcessRegion] {
	return pulumix.Output[GetDataLakesResultDataProcessRegion]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultDataProcessRegionOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultDataProcessRegion) string { return v.CloudProvider }).(pulumi.StringOutput)
}

func (o GetDataLakesResultDataProcessRegionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultDataProcessRegion) string { return v.Region }).(pulumi.StringOutput)
}

type GetDataLakesResultDataProcessRegionArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultDataProcessRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultDataProcessRegion)(nil)).Elem()
}

func (o GetDataLakesResultDataProcessRegionArrayOutput) ToGetDataLakesResultDataProcessRegionArrayOutput() GetDataLakesResultDataProcessRegionArrayOutput {
	return o
}

func (o GetDataLakesResultDataProcessRegionArrayOutput) ToGetDataLakesResultDataProcessRegionArrayOutputWithContext(ctx context.Context) GetDataLakesResultDataProcessRegionArrayOutput {
	return o
}

func (o GetDataLakesResultDataProcessRegionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResultDataProcessRegion] {
	return pulumix.Output[[]GetDataLakesResultDataProcessRegion]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultDataProcessRegionArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultDataProcessRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultDataProcessRegion {
		return vs[0].([]GetDataLakesResultDataProcessRegion)[vs[1].(int)]
	}).(GetDataLakesResultDataProcessRegionOutput)
}

type GetDataLakesResultStorageDatabase struct {
	Collections            []GetDataLakesResultStorageDatabaseCollection `pulumi:"collections"`
	MaxWildcardCollections int                                           `pulumi:"maxWildcardCollections"`
	Name                   string                                        `pulumi:"name"`
	Views                  []GetDataLakesResultStorageDatabaseView       `pulumi:"views"`
}

// GetDataLakesResultStorageDatabaseInput is an input type that accepts GetDataLakesResultStorageDatabaseArgs and GetDataLakesResultStorageDatabaseOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseInput` via:
//
//	GetDataLakesResultStorageDatabaseArgs{...}
type GetDataLakesResultStorageDatabaseInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseOutput() GetDataLakesResultStorageDatabaseOutput
	ToGetDataLakesResultStorageDatabaseOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseOutput
}

type GetDataLakesResultStorageDatabaseArgs struct {
	Collections            GetDataLakesResultStorageDatabaseCollectionArrayInput `pulumi:"collections"`
	MaxWildcardCollections pulumi.IntInput                                       `pulumi:"maxWildcardCollections"`
	Name                   pulumi.StringInput                                    `pulumi:"name"`
	Views                  GetDataLakesResultStorageDatabaseViewArrayInput       `pulumi:"views"`
}

func (GetDataLakesResultStorageDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabase)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseArgs) ToGetDataLakesResultStorageDatabaseOutput() GetDataLakesResultStorageDatabaseOutput {
	return i.ToGetDataLakesResultStorageDatabaseOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseArgs) ToGetDataLakesResultStorageDatabaseOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseOutput)
}

func (i GetDataLakesResultStorageDatabaseArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResultStorageDatabase] {
	return pulumix.Output[GetDataLakesResultStorageDatabase]{
		OutputState: i.ToGetDataLakesResultStorageDatabaseOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakesResultStorageDatabaseArrayInput is an input type that accepts GetDataLakesResultStorageDatabaseArray and GetDataLakesResultStorageDatabaseArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseArrayInput` via:
//
//	GetDataLakesResultStorageDatabaseArray{ GetDataLakesResultStorageDatabaseArgs{...} }
type GetDataLakesResultStorageDatabaseArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseArrayOutput() GetDataLakesResultStorageDatabaseArrayOutput
	ToGetDataLakesResultStorageDatabaseArrayOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseArrayOutput
}

type GetDataLakesResultStorageDatabaseArray []GetDataLakesResultStorageDatabaseInput

func (GetDataLakesResultStorageDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabase)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseArray) ToGetDataLakesResultStorageDatabaseArrayOutput() GetDataLakesResultStorageDatabaseArrayOutput {
	return i.ToGetDataLakesResultStorageDatabaseArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseArray) ToGetDataLakesResultStorageDatabaseArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseArrayOutput)
}

func (i GetDataLakesResultStorageDatabaseArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResultStorageDatabase] {
	return pulumix.Output[[]GetDataLakesResultStorageDatabase]{
		OutputState: i.ToGetDataLakesResultStorageDatabaseArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakesResultStorageDatabaseOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabase)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseOutput) ToGetDataLakesResultStorageDatabaseOutput() GetDataLakesResultStorageDatabaseOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseOutput) ToGetDataLakesResultStorageDatabaseOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResultStorageDatabase] {
	return pulumix.Output[GetDataLakesResultStorageDatabase]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultStorageDatabaseOutput) Collections() GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabase) []GetDataLakesResultStorageDatabaseCollection {
		return v.Collections
	}).(GetDataLakesResultStorageDatabaseCollectionArrayOutput)
}

func (o GetDataLakesResultStorageDatabaseOutput) MaxWildcardCollections() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabase) int { return v.MaxWildcardCollections }).(pulumi.IntOutput)
}

func (o GetDataLakesResultStorageDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabase) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseOutput) Views() GetDataLakesResultStorageDatabaseViewArrayOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabase) []GetDataLakesResultStorageDatabaseView { return v.Views }).(GetDataLakesResultStorageDatabaseViewArrayOutput)
}

type GetDataLakesResultStorageDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabase)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseArrayOutput) ToGetDataLakesResultStorageDatabaseArrayOutput() GetDataLakesResultStorageDatabaseArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseArrayOutput) ToGetDataLakesResultStorageDatabaseArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResultStorageDatabase] {
	return pulumix.Output[[]GetDataLakesResultStorageDatabase]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultStorageDatabaseArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageDatabase {
		return vs[0].([]GetDataLakesResultStorageDatabase)[vs[1].(int)]
	}).(GetDataLakesResultStorageDatabaseOutput)
}

type GetDataLakesResultStorageDatabaseCollection struct {
	DataSources []GetDataLakesResultStorageDatabaseCollectionDataSource `pulumi:"dataSources"`
	Name        string                                                  `pulumi:"name"`
}

// GetDataLakesResultStorageDatabaseCollectionInput is an input type that accepts GetDataLakesResultStorageDatabaseCollectionArgs and GetDataLakesResultStorageDatabaseCollectionOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseCollectionInput` via:
//
//	GetDataLakesResultStorageDatabaseCollectionArgs{...}
type GetDataLakesResultStorageDatabaseCollectionInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseCollectionOutput() GetDataLakesResultStorageDatabaseCollectionOutput
	ToGetDataLakesResultStorageDatabaseCollectionOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseCollectionOutput
}

type GetDataLakesResultStorageDatabaseCollectionArgs struct {
	DataSources GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput `pulumi:"dataSources"`
	Name        pulumi.StringInput                                              `pulumi:"name"`
}

func (GetDataLakesResultStorageDatabaseCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollection)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseCollectionArgs) ToGetDataLakesResultStorageDatabaseCollectionOutput() GetDataLakesResultStorageDatabaseCollectionOutput {
	return i.ToGetDataLakesResultStorageDatabaseCollectionOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseCollectionArgs) ToGetDataLakesResultStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseCollectionOutput)
}

func (i GetDataLakesResultStorageDatabaseCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResultStorageDatabaseCollection] {
	return pulumix.Output[GetDataLakesResultStorageDatabaseCollection]{
		OutputState: i.ToGetDataLakesResultStorageDatabaseCollectionOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakesResultStorageDatabaseCollectionArrayInput is an input type that accepts GetDataLakesResultStorageDatabaseCollectionArray and GetDataLakesResultStorageDatabaseCollectionArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseCollectionArrayInput` via:
//
//	GetDataLakesResultStorageDatabaseCollectionArray{ GetDataLakesResultStorageDatabaseCollectionArgs{...} }
type GetDataLakesResultStorageDatabaseCollectionArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseCollectionArrayOutput() GetDataLakesResultStorageDatabaseCollectionArrayOutput
	ToGetDataLakesResultStorageDatabaseCollectionArrayOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseCollectionArrayOutput
}

type GetDataLakesResultStorageDatabaseCollectionArray []GetDataLakesResultStorageDatabaseCollectionInput

func (GetDataLakesResultStorageDatabaseCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseCollection)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseCollectionArray) ToGetDataLakesResultStorageDatabaseCollectionArrayOutput() GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return i.ToGetDataLakesResultStorageDatabaseCollectionArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseCollectionArray) ToGetDataLakesResultStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseCollectionArrayOutput)
}

func (i GetDataLakesResultStorageDatabaseCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResultStorageDatabaseCollection] {
	return pulumix.Output[[]GetDataLakesResultStorageDatabaseCollection]{
		OutputState: i.ToGetDataLakesResultStorageDatabaseCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakesResultStorageDatabaseCollectionOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollection)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseCollectionOutput) ToGetDataLakesResultStorageDatabaseCollectionOutput() GetDataLakesResultStorageDatabaseCollectionOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionOutput) ToGetDataLakesResultStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResultStorageDatabaseCollection] {
	return pulumix.Output[GetDataLakesResultStorageDatabaseCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultStorageDatabaseCollectionOutput) DataSources() GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollection) []GetDataLakesResultStorageDatabaseCollectionDataSource {
		return v.DataSources
	}).(GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput)
}

func (o GetDataLakesResultStorageDatabaseCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollection) string { return v.Name }).(pulumi.StringOutput)
}

type GetDataLakesResultStorageDatabaseCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseCollection)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseCollectionArrayOutput) ToGetDataLakesResultStorageDatabaseCollectionArrayOutput() GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionArrayOutput) ToGetDataLakesResultStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResultStorageDatabaseCollection] {
	return pulumix.Output[[]GetDataLakesResultStorageDatabaseCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultStorageDatabaseCollectionArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageDatabaseCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageDatabaseCollection {
		return vs[0].([]GetDataLakesResultStorageDatabaseCollection)[vs[1].(int)]
	}).(GetDataLakesResultStorageDatabaseCollectionOutput)
}

type GetDataLakesResultStorageDatabaseCollectionDataSource struct {
	DefaultFormat string `pulumi:"defaultFormat"`
	Path          string `pulumi:"path"`
	StoreName     string `pulumi:"storeName"`
}

// GetDataLakesResultStorageDatabaseCollectionDataSourceInput is an input type that accepts GetDataLakesResultStorageDatabaseCollectionDataSourceArgs and GetDataLakesResultStorageDatabaseCollectionDataSourceOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseCollectionDataSourceInput` via:
//
//	GetDataLakesResultStorageDatabaseCollectionDataSourceArgs{...}
type GetDataLakesResultStorageDatabaseCollectionDataSourceInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceOutput
	ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceOutput
}

type GetDataLakesResultStorageDatabaseCollectionDataSourceArgs struct {
	DefaultFormat pulumi.StringInput `pulumi:"defaultFormat"`
	Path          pulumi.StringInput `pulumi:"path"`
	StoreName     pulumi.StringInput `pulumi:"storeName"`
}

func (GetDataLakesResultStorageDatabaseCollectionDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseCollectionDataSourceArgs) ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return i.ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseCollectionDataSourceArgs) ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseCollectionDataSourceOutput)
}

func (i GetDataLakesResultStorageDatabaseCollectionDataSourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResultStorageDatabaseCollectionDataSource] {
	return pulumix.Output[GetDataLakesResultStorageDatabaseCollectionDataSource]{
		OutputState: i.ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput is an input type that accepts GetDataLakesResultStorageDatabaseCollectionDataSourceArray and GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput` via:
//
//	GetDataLakesResultStorageDatabaseCollectionDataSourceArray{ GetDataLakesResultStorageDatabaseCollectionDataSourceArgs{...} }
type GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput
	ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput
}

type GetDataLakesResultStorageDatabaseCollectionDataSourceArray []GetDataLakesResultStorageDatabaseCollectionDataSourceInput

func (GetDataLakesResultStorageDatabaseCollectionDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseCollectionDataSourceArray) ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return i.ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseCollectionDataSourceArray) ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput)
}

func (i GetDataLakesResultStorageDatabaseCollectionDataSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResultStorageDatabaseCollectionDataSource] {
	return pulumix.Output[[]GetDataLakesResultStorageDatabaseCollectionDataSource]{
		OutputState: i.ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakesResultStorageDatabaseCollectionDataSourceOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResultStorageDatabaseCollectionDataSource] {
	return pulumix.Output[GetDataLakesResultStorageDatabaseCollectionDataSource]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) DefaultFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollectionDataSource) string { return v.DefaultFormat }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollectionDataSource) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollectionDataSource) string { return v.StoreName }).(pulumi.StringOutput)
}

type GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput) ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput) ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResultStorageDatabaseCollectionDataSource] {
	return pulumix.Output[[]GetDataLakesResultStorageDatabaseCollectionDataSource]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageDatabaseCollectionDataSource {
		return vs[0].([]GetDataLakesResultStorageDatabaseCollectionDataSource)[vs[1].(int)]
	}).(GetDataLakesResultStorageDatabaseCollectionDataSourceOutput)
}

type GetDataLakesResultStorageDatabaseView struct {
	Name     string `pulumi:"name"`
	Pipeline string `pulumi:"pipeline"`
	Source   string `pulumi:"source"`
}

// GetDataLakesResultStorageDatabaseViewInput is an input type that accepts GetDataLakesResultStorageDatabaseViewArgs and GetDataLakesResultStorageDatabaseViewOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseViewInput` via:
//
//	GetDataLakesResultStorageDatabaseViewArgs{...}
type GetDataLakesResultStorageDatabaseViewInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseViewOutput() GetDataLakesResultStorageDatabaseViewOutput
	ToGetDataLakesResultStorageDatabaseViewOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseViewOutput
}

type GetDataLakesResultStorageDatabaseViewArgs struct {
	Name     pulumi.StringInput `pulumi:"name"`
	Pipeline pulumi.StringInput `pulumi:"pipeline"`
	Source   pulumi.StringInput `pulumi:"source"`
}

func (GetDataLakesResultStorageDatabaseViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseView)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseViewArgs) ToGetDataLakesResultStorageDatabaseViewOutput() GetDataLakesResultStorageDatabaseViewOutput {
	return i.ToGetDataLakesResultStorageDatabaseViewOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseViewArgs) ToGetDataLakesResultStorageDatabaseViewOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseViewOutput)
}

func (i GetDataLakesResultStorageDatabaseViewArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResultStorageDatabaseView] {
	return pulumix.Output[GetDataLakesResultStorageDatabaseView]{
		OutputState: i.ToGetDataLakesResultStorageDatabaseViewOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakesResultStorageDatabaseViewArrayInput is an input type that accepts GetDataLakesResultStorageDatabaseViewArray and GetDataLakesResultStorageDatabaseViewArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseViewArrayInput` via:
//
//	GetDataLakesResultStorageDatabaseViewArray{ GetDataLakesResultStorageDatabaseViewArgs{...} }
type GetDataLakesResultStorageDatabaseViewArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseViewArrayOutput() GetDataLakesResultStorageDatabaseViewArrayOutput
	ToGetDataLakesResultStorageDatabaseViewArrayOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseViewArrayOutput
}

type GetDataLakesResultStorageDatabaseViewArray []GetDataLakesResultStorageDatabaseViewInput

func (GetDataLakesResultStorageDatabaseViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseView)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseViewArray) ToGetDataLakesResultStorageDatabaseViewArrayOutput() GetDataLakesResultStorageDatabaseViewArrayOutput {
	return i.ToGetDataLakesResultStorageDatabaseViewArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseViewArray) ToGetDataLakesResultStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseViewArrayOutput)
}

func (i GetDataLakesResultStorageDatabaseViewArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResultStorageDatabaseView] {
	return pulumix.Output[[]GetDataLakesResultStorageDatabaseView]{
		OutputState: i.ToGetDataLakesResultStorageDatabaseViewArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakesResultStorageDatabaseViewOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseView)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseViewOutput) ToGetDataLakesResultStorageDatabaseViewOutput() GetDataLakesResultStorageDatabaseViewOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseViewOutput) ToGetDataLakesResultStorageDatabaseViewOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseViewOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseViewOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResultStorageDatabaseView] {
	return pulumix.Output[GetDataLakesResultStorageDatabaseView]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultStorageDatabaseViewOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseView) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseViewOutput) Pipeline() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseView) string { return v.Pipeline }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseViewOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseView) string { return v.Source }).(pulumi.StringOutput)
}

type GetDataLakesResultStorageDatabaseViewArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseView)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseViewArrayOutput) ToGetDataLakesResultStorageDatabaseViewArrayOutput() GetDataLakesResultStorageDatabaseViewArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseViewArrayOutput) ToGetDataLakesResultStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseViewArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseViewArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResultStorageDatabaseView] {
	return pulumix.Output[[]GetDataLakesResultStorageDatabaseView]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultStorageDatabaseViewArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageDatabaseViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageDatabaseView {
		return vs[0].([]GetDataLakesResultStorageDatabaseView)[vs[1].(int)]
	}).(GetDataLakesResultStorageDatabaseViewOutput)
}

type GetDataLakesResultStorageStore struct {
	AdditionalStorageClasses []string `pulumi:"additionalStorageClasses"`
	Bucket                   string   `pulumi:"bucket"`
	Delimiter                string   `pulumi:"delimiter"`
	IncludeTags              bool     `pulumi:"includeTags"`
	Name                     string   `pulumi:"name"`
	Prefix                   string   `pulumi:"prefix"`
	Provider                 string   `pulumi:"provider"`
	Region                   string   `pulumi:"region"`
}

// GetDataLakesResultStorageStoreInput is an input type that accepts GetDataLakesResultStorageStoreArgs and GetDataLakesResultStorageStoreOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageStoreInput` via:
//
//	GetDataLakesResultStorageStoreArgs{...}
type GetDataLakesResultStorageStoreInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageStoreOutput() GetDataLakesResultStorageStoreOutput
	ToGetDataLakesResultStorageStoreOutputWithContext(context.Context) GetDataLakesResultStorageStoreOutput
}

type GetDataLakesResultStorageStoreArgs struct {
	AdditionalStorageClasses pulumi.StringArrayInput `pulumi:"additionalStorageClasses"`
	Bucket                   pulumi.StringInput      `pulumi:"bucket"`
	Delimiter                pulumi.StringInput      `pulumi:"delimiter"`
	IncludeTags              pulumi.BoolInput        `pulumi:"includeTags"`
	Name                     pulumi.StringInput      `pulumi:"name"`
	Prefix                   pulumi.StringInput      `pulumi:"prefix"`
	Provider                 pulumi.StringInput      `pulumi:"provider"`
	Region                   pulumi.StringInput      `pulumi:"region"`
}

func (GetDataLakesResultStorageStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageStore)(nil)).Elem()
}

func (i GetDataLakesResultStorageStoreArgs) ToGetDataLakesResultStorageStoreOutput() GetDataLakesResultStorageStoreOutput {
	return i.ToGetDataLakesResultStorageStoreOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageStoreArgs) ToGetDataLakesResultStorageStoreOutputWithContext(ctx context.Context) GetDataLakesResultStorageStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageStoreOutput)
}

func (i GetDataLakesResultStorageStoreArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResultStorageStore] {
	return pulumix.Output[GetDataLakesResultStorageStore]{
		OutputState: i.ToGetDataLakesResultStorageStoreOutputWithContext(ctx).OutputState,
	}
}

// GetDataLakesResultStorageStoreArrayInput is an input type that accepts GetDataLakesResultStorageStoreArray and GetDataLakesResultStorageStoreArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageStoreArrayInput` via:
//
//	GetDataLakesResultStorageStoreArray{ GetDataLakesResultStorageStoreArgs{...} }
type GetDataLakesResultStorageStoreArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageStoreArrayOutput() GetDataLakesResultStorageStoreArrayOutput
	ToGetDataLakesResultStorageStoreArrayOutputWithContext(context.Context) GetDataLakesResultStorageStoreArrayOutput
}

type GetDataLakesResultStorageStoreArray []GetDataLakesResultStorageStoreInput

func (GetDataLakesResultStorageStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageStore)(nil)).Elem()
}

func (i GetDataLakesResultStorageStoreArray) ToGetDataLakesResultStorageStoreArrayOutput() GetDataLakesResultStorageStoreArrayOutput {
	return i.ToGetDataLakesResultStorageStoreArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageStoreArray) ToGetDataLakesResultStorageStoreArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageStoreArrayOutput)
}

func (i GetDataLakesResultStorageStoreArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResultStorageStore] {
	return pulumix.Output[[]GetDataLakesResultStorageStore]{
		OutputState: i.ToGetDataLakesResultStorageStoreArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataLakesResultStorageStoreOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageStore)(nil)).Elem()
}

func (o GetDataLakesResultStorageStoreOutput) ToGetDataLakesResultStorageStoreOutput() GetDataLakesResultStorageStoreOutput {
	return o
}

func (o GetDataLakesResultStorageStoreOutput) ToGetDataLakesResultStorageStoreOutputWithContext(ctx context.Context) GetDataLakesResultStorageStoreOutput {
	return o
}

func (o GetDataLakesResultStorageStoreOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataLakesResultStorageStore] {
	return pulumix.Output[GetDataLakesResultStorageStore]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultStorageStoreOutput) AdditionalStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) []string { return v.AdditionalStorageClasses }).(pulumi.StringArrayOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Delimiter }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) IncludeTags() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) bool { return v.IncludeTags }).(pulumi.BoolOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Provider }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Region }).(pulumi.StringOutput)
}

type GetDataLakesResultStorageStoreArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageStore)(nil)).Elem()
}

func (o GetDataLakesResultStorageStoreArrayOutput) ToGetDataLakesResultStorageStoreArrayOutput() GetDataLakesResultStorageStoreArrayOutput {
	return o
}

func (o GetDataLakesResultStorageStoreArrayOutput) ToGetDataLakesResultStorageStoreArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageStoreArrayOutput {
	return o
}

func (o GetDataLakesResultStorageStoreArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataLakesResultStorageStore] {
	return pulumix.Output[[]GetDataLakesResultStorageStore]{
		OutputState: o.OutputState,
	}
}

func (o GetDataLakesResultStorageStoreArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageStore {
		return vs[0].([]GetDataLakesResultStorageStore)[vs[1].(int)]
	}).(GetDataLakesResultStorageStoreOutput)
}

type GetDatabaseUserLabel struct {
	// The key that you want to write.
	Key string `pulumi:"key"`
	// The value that you want to write.
	Value string `pulumi:"value"`
}

// GetDatabaseUserLabelInput is an input type that accepts GetDatabaseUserLabelArgs and GetDatabaseUserLabelOutput values.
// You can construct a concrete instance of `GetDatabaseUserLabelInput` via:
//
//	GetDatabaseUserLabelArgs{...}
type GetDatabaseUserLabelInput interface {
	pulumi.Input

	ToGetDatabaseUserLabelOutput() GetDatabaseUserLabelOutput
	ToGetDatabaseUserLabelOutputWithContext(context.Context) GetDatabaseUserLabelOutput
}

type GetDatabaseUserLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDatabaseUserLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserLabel)(nil)).Elem()
}

func (i GetDatabaseUserLabelArgs) ToGetDatabaseUserLabelOutput() GetDatabaseUserLabelOutput {
	return i.ToGetDatabaseUserLabelOutputWithContext(context.Background())
}

func (i GetDatabaseUserLabelArgs) ToGetDatabaseUserLabelOutputWithContext(ctx context.Context) GetDatabaseUserLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserLabelOutput)
}

func (i GetDatabaseUserLabelArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseUserLabel] {
	return pulumix.Output[GetDatabaseUserLabel]{
		OutputState: i.ToGetDatabaseUserLabelOutputWithContext(ctx).OutputState,
	}
}

// GetDatabaseUserLabelArrayInput is an input type that accepts GetDatabaseUserLabelArray and GetDatabaseUserLabelArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUserLabelArrayInput` via:
//
//	GetDatabaseUserLabelArray{ GetDatabaseUserLabelArgs{...} }
type GetDatabaseUserLabelArrayInput interface {
	pulumi.Input

	ToGetDatabaseUserLabelArrayOutput() GetDatabaseUserLabelArrayOutput
	ToGetDatabaseUserLabelArrayOutputWithContext(context.Context) GetDatabaseUserLabelArrayOutput
}

type GetDatabaseUserLabelArray []GetDatabaseUserLabelInput

func (GetDatabaseUserLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserLabel)(nil)).Elem()
}

func (i GetDatabaseUserLabelArray) ToGetDatabaseUserLabelArrayOutput() GetDatabaseUserLabelArrayOutput {
	return i.ToGetDatabaseUserLabelArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUserLabelArray) ToGetDatabaseUserLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUserLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserLabelArrayOutput)
}

func (i GetDatabaseUserLabelArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseUserLabel] {
	return pulumix.Output[[]GetDatabaseUserLabel]{
		OutputState: i.ToGetDatabaseUserLabelArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabaseUserLabelOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserLabel)(nil)).Elem()
}

func (o GetDatabaseUserLabelOutput) ToGetDatabaseUserLabelOutput() GetDatabaseUserLabelOutput {
	return o
}

func (o GetDatabaseUserLabelOutput) ToGetDatabaseUserLabelOutputWithContext(ctx context.Context) GetDatabaseUserLabelOutput {
	return o
}

func (o GetDatabaseUserLabelOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseUserLabel] {
	return pulumix.Output[GetDatabaseUserLabel]{
		OutputState: o.OutputState,
	}
}

// The key that you want to write.
func (o GetDatabaseUserLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that you want to write.
func (o GetDatabaseUserLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetDatabaseUserLabelArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserLabel)(nil)).Elem()
}

func (o GetDatabaseUserLabelArrayOutput) ToGetDatabaseUserLabelArrayOutput() GetDatabaseUserLabelArrayOutput {
	return o
}

func (o GetDatabaseUserLabelArrayOutput) ToGetDatabaseUserLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUserLabelArrayOutput {
	return o
}

func (o GetDatabaseUserLabelArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseUserLabel] {
	return pulumix.Output[[]GetDatabaseUserLabel]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseUserLabelArrayOutput) Index(i pulumi.IntInput) GetDatabaseUserLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUserLabel {
		return vs[0].([]GetDatabaseUserLabel)[vs[1].(int)]
	}).(GetDatabaseUserLabelOutput)
}

type GetDatabaseUserRole struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName string `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName string `pulumi:"databaseName"`
	RoleName     string `pulumi:"roleName"`
}

// GetDatabaseUserRoleInput is an input type that accepts GetDatabaseUserRoleArgs and GetDatabaseUserRoleOutput values.
// You can construct a concrete instance of `GetDatabaseUserRoleInput` via:
//
//	GetDatabaseUserRoleArgs{...}
type GetDatabaseUserRoleInput interface {
	pulumi.Input

	ToGetDatabaseUserRoleOutput() GetDatabaseUserRoleOutput
	ToGetDatabaseUserRoleOutputWithContext(context.Context) GetDatabaseUserRoleOutput
}

type GetDatabaseUserRoleArgs struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	RoleName     pulumi.StringInput `pulumi:"roleName"`
}

func (GetDatabaseUserRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserRole)(nil)).Elem()
}

func (i GetDatabaseUserRoleArgs) ToGetDatabaseUserRoleOutput() GetDatabaseUserRoleOutput {
	return i.ToGetDatabaseUserRoleOutputWithContext(context.Background())
}

func (i GetDatabaseUserRoleArgs) ToGetDatabaseUserRoleOutputWithContext(ctx context.Context) GetDatabaseUserRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserRoleOutput)
}

func (i GetDatabaseUserRoleArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseUserRole] {
	return pulumix.Output[GetDatabaseUserRole]{
		OutputState: i.ToGetDatabaseUserRoleOutputWithContext(ctx).OutputState,
	}
}

// GetDatabaseUserRoleArrayInput is an input type that accepts GetDatabaseUserRoleArray and GetDatabaseUserRoleArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUserRoleArrayInput` via:
//
//	GetDatabaseUserRoleArray{ GetDatabaseUserRoleArgs{...} }
type GetDatabaseUserRoleArrayInput interface {
	pulumi.Input

	ToGetDatabaseUserRoleArrayOutput() GetDatabaseUserRoleArrayOutput
	ToGetDatabaseUserRoleArrayOutputWithContext(context.Context) GetDatabaseUserRoleArrayOutput
}

type GetDatabaseUserRoleArray []GetDatabaseUserRoleInput

func (GetDatabaseUserRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserRole)(nil)).Elem()
}

func (i GetDatabaseUserRoleArray) ToGetDatabaseUserRoleArrayOutput() GetDatabaseUserRoleArrayOutput {
	return i.ToGetDatabaseUserRoleArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUserRoleArray) ToGetDatabaseUserRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUserRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserRoleArrayOutput)
}

func (i GetDatabaseUserRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseUserRole] {
	return pulumix.Output[[]GetDatabaseUserRole]{
		OutputState: i.ToGetDatabaseUserRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabaseUserRoleOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserRole)(nil)).Elem()
}

func (o GetDatabaseUserRoleOutput) ToGetDatabaseUserRoleOutput() GetDatabaseUserRoleOutput {
	return o
}

func (o GetDatabaseUserRoleOutput) ToGetDatabaseUserRoleOutputWithContext(ctx context.Context) GetDatabaseUserRoleOutput {
	return o
}

func (o GetDatabaseUserRoleOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseUserRole] {
	return pulumix.Output[GetDatabaseUserRole]{
		OutputState: o.OutputState,
	}
}

// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
func (o GetDatabaseUserRoleOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserRole) string { return v.CollectionName }).(pulumi.StringOutput)
}

// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
func (o GetDatabaseUserRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o GetDatabaseUserRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetDatabaseUserRoleArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserRole)(nil)).Elem()
}

func (o GetDatabaseUserRoleArrayOutput) ToGetDatabaseUserRoleArrayOutput() GetDatabaseUserRoleArrayOutput {
	return o
}

func (o GetDatabaseUserRoleArrayOutput) ToGetDatabaseUserRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUserRoleArrayOutput {
	return o
}

func (o GetDatabaseUserRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseUserRole] {
	return pulumix.Output[[]GetDatabaseUserRole]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseUserRoleArrayOutput) Index(i pulumi.IntInput) GetDatabaseUserRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUserRole {
		return vs[0].([]GetDatabaseUserRole)[vs[1].(int)]
	}).(GetDatabaseUserRoleOutput)
}

type GetDatabaseUserScope struct {
	// Name of the role to grant.
	Name string `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type string `pulumi:"type"`
}

// GetDatabaseUserScopeInput is an input type that accepts GetDatabaseUserScopeArgs and GetDatabaseUserScopeOutput values.
// You can construct a concrete instance of `GetDatabaseUserScopeInput` via:
//
//	GetDatabaseUserScopeArgs{...}
type GetDatabaseUserScopeInput interface {
	pulumi.Input

	ToGetDatabaseUserScopeOutput() GetDatabaseUserScopeOutput
	ToGetDatabaseUserScopeOutputWithContext(context.Context) GetDatabaseUserScopeOutput
}

type GetDatabaseUserScopeArgs struct {
	// Name of the role to grant.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatabaseUserScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserScope)(nil)).Elem()
}

func (i GetDatabaseUserScopeArgs) ToGetDatabaseUserScopeOutput() GetDatabaseUserScopeOutput {
	return i.ToGetDatabaseUserScopeOutputWithContext(context.Background())
}

func (i GetDatabaseUserScopeArgs) ToGetDatabaseUserScopeOutputWithContext(ctx context.Context) GetDatabaseUserScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserScopeOutput)
}

func (i GetDatabaseUserScopeArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseUserScope] {
	return pulumix.Output[GetDatabaseUserScope]{
		OutputState: i.ToGetDatabaseUserScopeOutputWithContext(ctx).OutputState,
	}
}

// GetDatabaseUserScopeArrayInput is an input type that accepts GetDatabaseUserScopeArray and GetDatabaseUserScopeArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUserScopeArrayInput` via:
//
//	GetDatabaseUserScopeArray{ GetDatabaseUserScopeArgs{...} }
type GetDatabaseUserScopeArrayInput interface {
	pulumi.Input

	ToGetDatabaseUserScopeArrayOutput() GetDatabaseUserScopeArrayOutput
	ToGetDatabaseUserScopeArrayOutputWithContext(context.Context) GetDatabaseUserScopeArrayOutput
}

type GetDatabaseUserScopeArray []GetDatabaseUserScopeInput

func (GetDatabaseUserScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserScope)(nil)).Elem()
}

func (i GetDatabaseUserScopeArray) ToGetDatabaseUserScopeArrayOutput() GetDatabaseUserScopeArrayOutput {
	return i.ToGetDatabaseUserScopeArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUserScopeArray) ToGetDatabaseUserScopeArrayOutputWithContext(ctx context.Context) GetDatabaseUserScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserScopeArrayOutput)
}

func (i GetDatabaseUserScopeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseUserScope] {
	return pulumix.Output[[]GetDatabaseUserScope]{
		OutputState: i.ToGetDatabaseUserScopeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabaseUserScopeOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserScope)(nil)).Elem()
}

func (o GetDatabaseUserScopeOutput) ToGetDatabaseUserScopeOutput() GetDatabaseUserScopeOutput {
	return o
}

func (o GetDatabaseUserScopeOutput) ToGetDatabaseUserScopeOutputWithContext(ctx context.Context) GetDatabaseUserScopeOutput {
	return o
}

func (o GetDatabaseUserScopeOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseUserScope] {
	return pulumix.Output[GetDatabaseUserScope]{
		OutputState: o.OutputState,
	}
}

// Name of the role to grant.
func (o GetDatabaseUserScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserScope) string { return v.Name }).(pulumi.StringOutput)
}

// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
func (o GetDatabaseUserScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserScope) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatabaseUserScopeArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserScope)(nil)).Elem()
}

func (o GetDatabaseUserScopeArrayOutput) ToGetDatabaseUserScopeArrayOutput() GetDatabaseUserScopeArrayOutput {
	return o
}

func (o GetDatabaseUserScopeArrayOutput) ToGetDatabaseUserScopeArrayOutputWithContext(ctx context.Context) GetDatabaseUserScopeArrayOutput {
	return o
}

func (o GetDatabaseUserScopeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseUserScope] {
	return pulumix.Output[[]GetDatabaseUserScope]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseUserScopeArrayOutput) Index(i pulumi.IntInput) GetDatabaseUserScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUserScope {
		return vs[0].([]GetDatabaseUserScope)[vs[1].(int)]
	}).(GetDatabaseUserScopeOutput)
}

type GetDatabaseUsersResult struct {
	// (Required) Database against which Atlas authenticates the user. A user must provide both a username and authentication database to log into MongoDB.
	// Possible values include:
	AuthDatabaseName string `pulumi:"authDatabaseName"`
	// The new database user authenticates with AWS IAM credentials. Default is `NONE`, `USER` means user has AWS IAM user credentials, `ROLE` - means user has credentials associated with an AWS IAM role.
	AwsIamType string                        `pulumi:"awsIamType"`
	Labels     []GetDatabaseUsersResultLabel `pulumi:"labels"`
	// Method by which the provided username is authenticated. Default is `NONE`. Other valid values are: `USER`, `GROUP`.
	LdapAuthType string `pulumi:"ldapAuthType"`
	// (Optional) Human-readable label that indicates whether the new database user authenticates with OIDC (OpenID Connect) federated authentication. If no value is given, Atlas uses the default value of `NONE`. The accepted types are:
	OidcAuthType string `pulumi:"oidcAuthType"`
	// The unique ID for the project to get all database users.
	ProjectId string `pulumi:"projectId"`
	// List of user’s roles and the databases / collections on which the roles apply. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. See Roles below for more details.
	Roles []GetDatabaseUsersResultRole `pulumi:"roles"`
	// Array of clusters and Atlas Data Lakes that this user has access to.
	Scopes []GetDatabaseUsersResultScope `pulumi:"scopes"`
	// Username for authenticating to MongoDB.
	Username string `pulumi:"username"`
	// X.509 method by which the provided username is authenticated.
	X509Type string `pulumi:"x509Type"`
}

// GetDatabaseUsersResultInput is an input type that accepts GetDatabaseUsersResultArgs and GetDatabaseUsersResultOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultInput` via:
//
//	GetDatabaseUsersResultArgs{...}
type GetDatabaseUsersResultInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultOutput() GetDatabaseUsersResultOutput
	ToGetDatabaseUsersResultOutputWithContext(context.Context) GetDatabaseUsersResultOutput
}

type GetDatabaseUsersResultArgs struct {
	// (Required) Database against which Atlas authenticates the user. A user must provide both a username and authentication database to log into MongoDB.
	// Possible values include:
	AuthDatabaseName pulumi.StringInput `pulumi:"authDatabaseName"`
	// The new database user authenticates with AWS IAM credentials. Default is `NONE`, `USER` means user has AWS IAM user credentials, `ROLE` - means user has credentials associated with an AWS IAM role.
	AwsIamType pulumi.StringInput                    `pulumi:"awsIamType"`
	Labels     GetDatabaseUsersResultLabelArrayInput `pulumi:"labels"`
	// Method by which the provided username is authenticated. Default is `NONE`. Other valid values are: `USER`, `GROUP`.
	LdapAuthType pulumi.StringInput `pulumi:"ldapAuthType"`
	// (Optional) Human-readable label that indicates whether the new database user authenticates with OIDC (OpenID Connect) federated authentication. If no value is given, Atlas uses the default value of `NONE`. The accepted types are:
	OidcAuthType pulumi.StringInput `pulumi:"oidcAuthType"`
	// The unique ID for the project to get all database users.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// List of user’s roles and the databases / collections on which the roles apply. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. See Roles below for more details.
	Roles GetDatabaseUsersResultRoleArrayInput `pulumi:"roles"`
	// Array of clusters and Atlas Data Lakes that this user has access to.
	Scopes GetDatabaseUsersResultScopeArrayInput `pulumi:"scopes"`
	// Username for authenticating to MongoDB.
	Username pulumi.StringInput `pulumi:"username"`
	// X.509 method by which the provided username is authenticated.
	X509Type pulumi.StringInput `pulumi:"x509Type"`
}

func (GetDatabaseUsersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResult)(nil)).Elem()
}

func (i GetDatabaseUsersResultArgs) ToGetDatabaseUsersResultOutput() GetDatabaseUsersResultOutput {
	return i.ToGetDatabaseUsersResultOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultArgs) ToGetDatabaseUsersResultOutputWithContext(ctx context.Context) GetDatabaseUsersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultOutput)
}

func (i GetDatabaseUsersResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseUsersResult] {
	return pulumix.Output[GetDatabaseUsersResult]{
		OutputState: i.ToGetDatabaseUsersResultOutputWithContext(ctx).OutputState,
	}
}

// GetDatabaseUsersResultArrayInput is an input type that accepts GetDatabaseUsersResultArray and GetDatabaseUsersResultArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultArrayInput` via:
//
//	GetDatabaseUsersResultArray{ GetDatabaseUsersResultArgs{...} }
type GetDatabaseUsersResultArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultArrayOutput() GetDatabaseUsersResultArrayOutput
	ToGetDatabaseUsersResultArrayOutputWithContext(context.Context) GetDatabaseUsersResultArrayOutput
}

type GetDatabaseUsersResultArray []GetDatabaseUsersResultInput

func (GetDatabaseUsersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResult)(nil)).Elem()
}

func (i GetDatabaseUsersResultArray) ToGetDatabaseUsersResultArrayOutput() GetDatabaseUsersResultArrayOutput {
	return i.ToGetDatabaseUsersResultArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultArray) ToGetDatabaseUsersResultArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultArrayOutput)
}

func (i GetDatabaseUsersResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseUsersResult] {
	return pulumix.Output[[]GetDatabaseUsersResult]{
		OutputState: i.ToGetDatabaseUsersResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabaseUsersResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResult)(nil)).Elem()
}

func (o GetDatabaseUsersResultOutput) ToGetDatabaseUsersResultOutput() GetDatabaseUsersResultOutput {
	return o
}

func (o GetDatabaseUsersResultOutput) ToGetDatabaseUsersResultOutputWithContext(ctx context.Context) GetDatabaseUsersResultOutput {
	return o
}

func (o GetDatabaseUsersResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseUsersResult] {
	return pulumix.Output[GetDatabaseUsersResult]{
		OutputState: o.OutputState,
	}
}

// (Required) Database against which Atlas authenticates the user. A user must provide both a username and authentication database to log into MongoDB.
// Possible values include:
func (o GetDatabaseUsersResultOutput) AuthDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.AuthDatabaseName }).(pulumi.StringOutput)
}

// The new database user authenticates with AWS IAM credentials. Default is `NONE`, `USER` means user has AWS IAM user credentials, `ROLE` - means user has credentials associated with an AWS IAM role.
func (o GetDatabaseUsersResultOutput) AwsIamType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.AwsIamType }).(pulumi.StringOutput)
}

func (o GetDatabaseUsersResultOutput) Labels() GetDatabaseUsersResultLabelArrayOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) []GetDatabaseUsersResultLabel { return v.Labels }).(GetDatabaseUsersResultLabelArrayOutput)
}

// Method by which the provided username is authenticated. Default is `NONE`. Other valid values are: `USER`, `GROUP`.
func (o GetDatabaseUsersResultOutput) LdapAuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.LdapAuthType }).(pulumi.StringOutput)
}

// (Optional) Human-readable label that indicates whether the new database user authenticates with OIDC (OpenID Connect) federated authentication. If no value is given, Atlas uses the default value of `NONE`. The accepted types are:
func (o GetDatabaseUsersResultOutput) OidcAuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.OidcAuthType }).(pulumi.StringOutput)
}

// The unique ID for the project to get all database users.
func (o GetDatabaseUsersResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// List of user’s roles and the databases / collections on which the roles apply. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. See Roles below for more details.
func (o GetDatabaseUsersResultOutput) Roles() GetDatabaseUsersResultRoleArrayOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) []GetDatabaseUsersResultRole { return v.Roles }).(GetDatabaseUsersResultRoleArrayOutput)
}

// Array of clusters and Atlas Data Lakes that this user has access to.
func (o GetDatabaseUsersResultOutput) Scopes() GetDatabaseUsersResultScopeArrayOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) []GetDatabaseUsersResultScope { return v.Scopes }).(GetDatabaseUsersResultScopeArrayOutput)
}

// Username for authenticating to MongoDB.
func (o GetDatabaseUsersResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.Username }).(pulumi.StringOutput)
}

// X.509 method by which the provided username is authenticated.
func (o GetDatabaseUsersResultOutput) X509Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.X509Type }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResult)(nil)).Elem()
}

func (o GetDatabaseUsersResultArrayOutput) ToGetDatabaseUsersResultArrayOutput() GetDatabaseUsersResultArrayOutput {
	return o
}

func (o GetDatabaseUsersResultArrayOutput) ToGetDatabaseUsersResultArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultArrayOutput {
	return o
}

func (o GetDatabaseUsersResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseUsersResult] {
	return pulumix.Output[[]GetDatabaseUsersResult]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseUsersResultArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResult {
		return vs[0].([]GetDatabaseUsersResult)[vs[1].(int)]
	}).(GetDatabaseUsersResultOutput)
}

type GetDatabaseUsersResultLabel struct {
	// The key that you want to write.
	Key string `pulumi:"key"`
	// The value that you want to write.
	Value string `pulumi:"value"`
}

// GetDatabaseUsersResultLabelInput is an input type that accepts GetDatabaseUsersResultLabelArgs and GetDatabaseUsersResultLabelOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultLabelInput` via:
//
//	GetDatabaseUsersResultLabelArgs{...}
type GetDatabaseUsersResultLabelInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultLabelOutput() GetDatabaseUsersResultLabelOutput
	ToGetDatabaseUsersResultLabelOutputWithContext(context.Context) GetDatabaseUsersResultLabelOutput
}

type GetDatabaseUsersResultLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDatabaseUsersResultLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (i GetDatabaseUsersResultLabelArgs) ToGetDatabaseUsersResultLabelOutput() GetDatabaseUsersResultLabelOutput {
	return i.ToGetDatabaseUsersResultLabelOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultLabelArgs) ToGetDatabaseUsersResultLabelOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultLabelOutput)
}

func (i GetDatabaseUsersResultLabelArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseUsersResultLabel] {
	return pulumix.Output[GetDatabaseUsersResultLabel]{
		OutputState: i.ToGetDatabaseUsersResultLabelOutputWithContext(ctx).OutputState,
	}
}

// GetDatabaseUsersResultLabelArrayInput is an input type that accepts GetDatabaseUsersResultLabelArray and GetDatabaseUsersResultLabelArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultLabelArrayInput` via:
//
//	GetDatabaseUsersResultLabelArray{ GetDatabaseUsersResultLabelArgs{...} }
type GetDatabaseUsersResultLabelArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultLabelArrayOutput() GetDatabaseUsersResultLabelArrayOutput
	ToGetDatabaseUsersResultLabelArrayOutputWithContext(context.Context) GetDatabaseUsersResultLabelArrayOutput
}

type GetDatabaseUsersResultLabelArray []GetDatabaseUsersResultLabelInput

func (GetDatabaseUsersResultLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (i GetDatabaseUsersResultLabelArray) ToGetDatabaseUsersResultLabelArrayOutput() GetDatabaseUsersResultLabelArrayOutput {
	return i.ToGetDatabaseUsersResultLabelArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultLabelArray) ToGetDatabaseUsersResultLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultLabelArrayOutput)
}

func (i GetDatabaseUsersResultLabelArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseUsersResultLabel] {
	return pulumix.Output[[]GetDatabaseUsersResultLabel]{
		OutputState: i.ToGetDatabaseUsersResultLabelArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabaseUsersResultLabelOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (o GetDatabaseUsersResultLabelOutput) ToGetDatabaseUsersResultLabelOutput() GetDatabaseUsersResultLabelOutput {
	return o
}

func (o GetDatabaseUsersResultLabelOutput) ToGetDatabaseUsersResultLabelOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelOutput {
	return o
}

func (o GetDatabaseUsersResultLabelOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseUsersResultLabel] {
	return pulumix.Output[GetDatabaseUsersResultLabel]{
		OutputState: o.OutputState,
	}
}

// The key that you want to write.
func (o GetDatabaseUsersResultLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that you want to write.
func (o GetDatabaseUsersResultLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultLabelArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (o GetDatabaseUsersResultLabelArrayOutput) ToGetDatabaseUsersResultLabelArrayOutput() GetDatabaseUsersResultLabelArrayOutput {
	return o
}

func (o GetDatabaseUsersResultLabelArrayOutput) ToGetDatabaseUsersResultLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelArrayOutput {
	return o
}

func (o GetDatabaseUsersResultLabelArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseUsersResultLabel] {
	return pulumix.Output[[]GetDatabaseUsersResultLabel]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseUsersResultLabelArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResultLabel {
		return vs[0].([]GetDatabaseUsersResultLabel)[vs[1].(int)]
	}).(GetDatabaseUsersResultLabelOutput)
}

type GetDatabaseUsersResultRole struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName string `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName string `pulumi:"databaseName"`
	RoleName     string `pulumi:"roleName"`
}

// GetDatabaseUsersResultRoleInput is an input type that accepts GetDatabaseUsersResultRoleArgs and GetDatabaseUsersResultRoleOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultRoleInput` via:
//
//	GetDatabaseUsersResultRoleArgs{...}
type GetDatabaseUsersResultRoleInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultRoleOutput() GetDatabaseUsersResultRoleOutput
	ToGetDatabaseUsersResultRoleOutputWithContext(context.Context) GetDatabaseUsersResultRoleOutput
}

type GetDatabaseUsersResultRoleArgs struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	RoleName     pulumi.StringInput `pulumi:"roleName"`
}

func (GetDatabaseUsersResultRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultRole)(nil)).Elem()
}

func (i GetDatabaseUsersResultRoleArgs) ToGetDatabaseUsersResultRoleOutput() GetDatabaseUsersResultRoleOutput {
	return i.ToGetDatabaseUsersResultRoleOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultRoleArgs) ToGetDatabaseUsersResultRoleOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultRoleOutput)
}

func (i GetDatabaseUsersResultRoleArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseUsersResultRole] {
	return pulumix.Output[GetDatabaseUsersResultRole]{
		OutputState: i.ToGetDatabaseUsersResultRoleOutputWithContext(ctx).OutputState,
	}
}

// GetDatabaseUsersResultRoleArrayInput is an input type that accepts GetDatabaseUsersResultRoleArray and GetDatabaseUsersResultRoleArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultRoleArrayInput` via:
//
//	GetDatabaseUsersResultRoleArray{ GetDatabaseUsersResultRoleArgs{...} }
type GetDatabaseUsersResultRoleArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultRoleArrayOutput() GetDatabaseUsersResultRoleArrayOutput
	ToGetDatabaseUsersResultRoleArrayOutputWithContext(context.Context) GetDatabaseUsersResultRoleArrayOutput
}

type GetDatabaseUsersResultRoleArray []GetDatabaseUsersResultRoleInput

func (GetDatabaseUsersResultRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultRole)(nil)).Elem()
}

func (i GetDatabaseUsersResultRoleArray) ToGetDatabaseUsersResultRoleArrayOutput() GetDatabaseUsersResultRoleArrayOutput {
	return i.ToGetDatabaseUsersResultRoleArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultRoleArray) ToGetDatabaseUsersResultRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultRoleArrayOutput)
}

func (i GetDatabaseUsersResultRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseUsersResultRole] {
	return pulumix.Output[[]GetDatabaseUsersResultRole]{
		OutputState: i.ToGetDatabaseUsersResultRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabaseUsersResultRoleOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultRole)(nil)).Elem()
}

func (o GetDatabaseUsersResultRoleOutput) ToGetDatabaseUsersResultRoleOutput() GetDatabaseUsersResultRoleOutput {
	return o
}

func (o GetDatabaseUsersResultRoleOutput) ToGetDatabaseUsersResultRoleOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleOutput {
	return o
}

func (o GetDatabaseUsersResultRoleOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseUsersResultRole] {
	return pulumix.Output[GetDatabaseUsersResultRole]{
		OutputState: o.OutputState,
	}
}

// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
func (o GetDatabaseUsersResultRoleOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultRole) string { return v.CollectionName }).(pulumi.StringOutput)
}

// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
func (o GetDatabaseUsersResultRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o GetDatabaseUsersResultRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultRoleArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultRole)(nil)).Elem()
}

func (o GetDatabaseUsersResultRoleArrayOutput) ToGetDatabaseUsersResultRoleArrayOutput() GetDatabaseUsersResultRoleArrayOutput {
	return o
}

func (o GetDatabaseUsersResultRoleArrayOutput) ToGetDatabaseUsersResultRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleArrayOutput {
	return o
}

func (o GetDatabaseUsersResultRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseUsersResultRole] {
	return pulumix.Output[[]GetDatabaseUsersResultRole]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseUsersResultRoleArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResultRole {
		return vs[0].([]GetDatabaseUsersResultRole)[vs[1].(int)]
	}).(GetDatabaseUsersResultRoleOutput)
}

type GetDatabaseUsersResultScope struct {
	// Name of the role to grant.
	Name string `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type string `pulumi:"type"`
}

// GetDatabaseUsersResultScopeInput is an input type that accepts GetDatabaseUsersResultScopeArgs and GetDatabaseUsersResultScopeOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultScopeInput` via:
//
//	GetDatabaseUsersResultScopeArgs{...}
type GetDatabaseUsersResultScopeInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultScopeOutput() GetDatabaseUsersResultScopeOutput
	ToGetDatabaseUsersResultScopeOutputWithContext(context.Context) GetDatabaseUsersResultScopeOutput
}

type GetDatabaseUsersResultScopeArgs struct {
	// Name of the role to grant.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatabaseUsersResultScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultScope)(nil)).Elem()
}

func (i GetDatabaseUsersResultScopeArgs) ToGetDatabaseUsersResultScopeOutput() GetDatabaseUsersResultScopeOutput {
	return i.ToGetDatabaseUsersResultScopeOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultScopeArgs) ToGetDatabaseUsersResultScopeOutputWithContext(ctx context.Context) GetDatabaseUsersResultScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultScopeOutput)
}

func (i GetDatabaseUsersResultScopeArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseUsersResultScope] {
	return pulumix.Output[GetDatabaseUsersResultScope]{
		OutputState: i.ToGetDatabaseUsersResultScopeOutputWithContext(ctx).OutputState,
	}
}

// GetDatabaseUsersResultScopeArrayInput is an input type that accepts GetDatabaseUsersResultScopeArray and GetDatabaseUsersResultScopeArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultScopeArrayInput` via:
//
//	GetDatabaseUsersResultScopeArray{ GetDatabaseUsersResultScopeArgs{...} }
type GetDatabaseUsersResultScopeArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultScopeArrayOutput() GetDatabaseUsersResultScopeArrayOutput
	ToGetDatabaseUsersResultScopeArrayOutputWithContext(context.Context) GetDatabaseUsersResultScopeArrayOutput
}

type GetDatabaseUsersResultScopeArray []GetDatabaseUsersResultScopeInput

func (GetDatabaseUsersResultScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultScope)(nil)).Elem()
}

func (i GetDatabaseUsersResultScopeArray) ToGetDatabaseUsersResultScopeArrayOutput() GetDatabaseUsersResultScopeArrayOutput {
	return i.ToGetDatabaseUsersResultScopeArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultScopeArray) ToGetDatabaseUsersResultScopeArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultScopeArrayOutput)
}

func (i GetDatabaseUsersResultScopeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseUsersResultScope] {
	return pulumix.Output[[]GetDatabaseUsersResultScope]{
		OutputState: i.ToGetDatabaseUsersResultScopeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatabaseUsersResultScopeOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultScope)(nil)).Elem()
}

func (o GetDatabaseUsersResultScopeOutput) ToGetDatabaseUsersResultScopeOutput() GetDatabaseUsersResultScopeOutput {
	return o
}

func (o GetDatabaseUsersResultScopeOutput) ToGetDatabaseUsersResultScopeOutputWithContext(ctx context.Context) GetDatabaseUsersResultScopeOutput {
	return o
}

func (o GetDatabaseUsersResultScopeOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseUsersResultScope] {
	return pulumix.Output[GetDatabaseUsersResultScope]{
		OutputState: o.OutputState,
	}
}

// Name of the role to grant.
func (o GetDatabaseUsersResultScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultScope) string { return v.Name }).(pulumi.StringOutput)
}

// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
func (o GetDatabaseUsersResultScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultScope) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultScopeArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultScope)(nil)).Elem()
}

func (o GetDatabaseUsersResultScopeArrayOutput) ToGetDatabaseUsersResultScopeArrayOutput() GetDatabaseUsersResultScopeArrayOutput {
	return o
}

func (o GetDatabaseUsersResultScopeArrayOutput) ToGetDatabaseUsersResultScopeArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultScopeArrayOutput {
	return o
}

func (o GetDatabaseUsersResultScopeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatabaseUsersResultScope] {
	return pulumix.Output[[]GetDatabaseUsersResultScope]{
		OutputState: o.OutputState,
	}
}

func (o GetDatabaseUsersResultScopeArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResultScope {
		return vs[0].([]GetDatabaseUsersResultScope)[vs[1].(int)]
	}).(GetDatabaseUsersResultScopeOutput)
}

type GetEventTriggerEventProcessor struct {
	AwsEventbridges []GetEventTriggerEventProcessorAwsEventbridge `pulumi:"awsEventbridges"`
}

// GetEventTriggerEventProcessorInput is an input type that accepts GetEventTriggerEventProcessorArgs and GetEventTriggerEventProcessorOutput values.
// You can construct a concrete instance of `GetEventTriggerEventProcessorInput` via:
//
//	GetEventTriggerEventProcessorArgs{...}
type GetEventTriggerEventProcessorInput interface {
	pulumi.Input

	ToGetEventTriggerEventProcessorOutput() GetEventTriggerEventProcessorOutput
	ToGetEventTriggerEventProcessorOutputWithContext(context.Context) GetEventTriggerEventProcessorOutput
}

type GetEventTriggerEventProcessorArgs struct {
	AwsEventbridges GetEventTriggerEventProcessorAwsEventbridgeArrayInput `pulumi:"awsEventbridges"`
}

func (GetEventTriggerEventProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggerEventProcessor)(nil)).Elem()
}

func (i GetEventTriggerEventProcessorArgs) ToGetEventTriggerEventProcessorOutput() GetEventTriggerEventProcessorOutput {
	return i.ToGetEventTriggerEventProcessorOutputWithContext(context.Background())
}

func (i GetEventTriggerEventProcessorArgs) ToGetEventTriggerEventProcessorOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggerEventProcessorOutput)
}

func (i GetEventTriggerEventProcessorArgs) ToOutput(ctx context.Context) pulumix.Output[GetEventTriggerEventProcessor] {
	return pulumix.Output[GetEventTriggerEventProcessor]{
		OutputState: i.ToGetEventTriggerEventProcessorOutputWithContext(ctx).OutputState,
	}
}

// GetEventTriggerEventProcessorArrayInput is an input type that accepts GetEventTriggerEventProcessorArray and GetEventTriggerEventProcessorArrayOutput values.
// You can construct a concrete instance of `GetEventTriggerEventProcessorArrayInput` via:
//
//	GetEventTriggerEventProcessorArray{ GetEventTriggerEventProcessorArgs{...} }
type GetEventTriggerEventProcessorArrayInput interface {
	pulumi.Input

	ToGetEventTriggerEventProcessorArrayOutput() GetEventTriggerEventProcessorArrayOutput
	ToGetEventTriggerEventProcessorArrayOutputWithContext(context.Context) GetEventTriggerEventProcessorArrayOutput
}

type GetEventTriggerEventProcessorArray []GetEventTriggerEventProcessorInput

func (GetEventTriggerEventProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggerEventProcessor)(nil)).Elem()
}

func (i GetEventTriggerEventProcessorArray) ToGetEventTriggerEventProcessorArrayOutput() GetEventTriggerEventProcessorArrayOutput {
	return i.ToGetEventTriggerEventProcessorArrayOutputWithContext(context.Background())
}

func (i GetEventTriggerEventProcessorArray) ToGetEventTriggerEventProcessorArrayOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggerEventProcessorArrayOutput)
}

func (i GetEventTriggerEventProcessorArray) ToOutput(ctx context.Context) pulumix.Output[[]GetEventTriggerEventProcessor] {
	return pulumix.Output[[]GetEventTriggerEventProcessor]{
		OutputState: i.ToGetEventTriggerEventProcessorArrayOutputWithContext(ctx).OutputState,
	}
}

type GetEventTriggerEventProcessorOutput struct{ *pulumi.OutputState }

func (GetEventTriggerEventProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggerEventProcessor)(nil)).Elem()
}

func (o GetEventTriggerEventProcessorOutput) ToGetEventTriggerEventProcessorOutput() GetEventTriggerEventProcessorOutput {
	return o
}

func (o GetEventTriggerEventProcessorOutput) ToGetEventTriggerEventProcessorOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorOutput {
	return o
}

func (o GetEventTriggerEventProcessorOutput) ToOutput(ctx context.Context) pulumix.Output[GetEventTriggerEventProcessor] {
	return pulumix.Output[GetEventTriggerEventProcessor]{
		OutputState: o.OutputState,
	}
}

func (o GetEventTriggerEventProcessorOutput) AwsEventbridges() GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return o.ApplyT(func(v GetEventTriggerEventProcessor) []GetEventTriggerEventProcessorAwsEventbridge {
		return v.AwsEventbridges
	}).(GetEventTriggerEventProcessorAwsEventbridgeArrayOutput)
}

type GetEventTriggerEventProcessorArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggerEventProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggerEventProcessor)(nil)).Elem()
}

func (o GetEventTriggerEventProcessorArrayOutput) ToGetEventTriggerEventProcessorArrayOutput() GetEventTriggerEventProcessorArrayOutput {
	return o
}

func (o GetEventTriggerEventProcessorArrayOutput) ToGetEventTriggerEventProcessorArrayOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorArrayOutput {
	return o
}

func (o GetEventTriggerEventProcessorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetEventTriggerEventProcessor] {
	return pulumix.Output[[]GetEventTriggerEventProcessor]{
		OutputState: o.OutputState,
	}
}

func (o GetEventTriggerEventProcessorArrayOutput) Index(i pulumi.IntInput) GetEventTriggerEventProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggerEventProcessor {
		return vs[0].([]GetEventTriggerEventProcessor)[vs[1].(int)]
	}).(GetEventTriggerEventProcessorOutput)
}

type GetEventTriggerEventProcessorAwsEventbridge struct {
	ConfigAccountId string `pulumi:"configAccountId"`
	ConfigRegion    string `pulumi:"configRegion"`
}

// GetEventTriggerEventProcessorAwsEventbridgeInput is an input type that accepts GetEventTriggerEventProcessorAwsEventbridgeArgs and GetEventTriggerEventProcessorAwsEventbridgeOutput values.
// You can construct a concrete instance of `GetEventTriggerEventProcessorAwsEventbridgeInput` via:
//
//	GetEventTriggerEventProcessorAwsEventbridgeArgs{...}
type GetEventTriggerEventProcessorAwsEventbridgeInput interface {
	pulumi.Input

	ToGetEventTriggerEventProcessorAwsEventbridgeOutput() GetEventTriggerEventProcessorAwsEventbridgeOutput
	ToGetEventTriggerEventProcessorAwsEventbridgeOutputWithContext(context.Context) GetEventTriggerEventProcessorAwsEventbridgeOutput
}

type GetEventTriggerEventProcessorAwsEventbridgeArgs struct {
	ConfigAccountId pulumi.StringInput `pulumi:"configAccountId"`
	ConfigRegion    pulumi.StringInput `pulumi:"configRegion"`
}

func (GetEventTriggerEventProcessorAwsEventbridgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggerEventProcessorAwsEventbridge)(nil)).Elem()
}

func (i GetEventTriggerEventProcessorAwsEventbridgeArgs) ToGetEventTriggerEventProcessorAwsEventbridgeOutput() GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return i.ToGetEventTriggerEventProcessorAwsEventbridgeOutputWithContext(context.Background())
}

func (i GetEventTriggerEventProcessorAwsEventbridgeArgs) ToGetEventTriggerEventProcessorAwsEventbridgeOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggerEventProcessorAwsEventbridgeOutput)
}

func (i GetEventTriggerEventProcessorAwsEventbridgeArgs) ToOutput(ctx context.Context) pulumix.Output[GetEventTriggerEventProcessorAwsEventbridge] {
	return pulumix.Output[GetEventTriggerEventProcessorAwsEventbridge]{
		OutputState: i.ToGetEventTriggerEventProcessorAwsEventbridgeOutputWithContext(ctx).OutputState,
	}
}

// GetEventTriggerEventProcessorAwsEventbridgeArrayInput is an input type that accepts GetEventTriggerEventProcessorAwsEventbridgeArray and GetEventTriggerEventProcessorAwsEventbridgeArrayOutput values.
// You can construct a concrete instance of `GetEventTriggerEventProcessorAwsEventbridgeArrayInput` via:
//
//	GetEventTriggerEventProcessorAwsEventbridgeArray{ GetEventTriggerEventProcessorAwsEventbridgeArgs{...} }
type GetEventTriggerEventProcessorAwsEventbridgeArrayInput interface {
	pulumi.Input

	ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutput() GetEventTriggerEventProcessorAwsEventbridgeArrayOutput
	ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutputWithContext(context.Context) GetEventTriggerEventProcessorAwsEventbridgeArrayOutput
}

type GetEventTriggerEventProcessorAwsEventbridgeArray []GetEventTriggerEventProcessorAwsEventbridgeInput

func (GetEventTriggerEventProcessorAwsEventbridgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggerEventProcessorAwsEventbridge)(nil)).Elem()
}

func (i GetEventTriggerEventProcessorAwsEventbridgeArray) ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutput() GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return i.ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutputWithContext(context.Background())
}

func (i GetEventTriggerEventProcessorAwsEventbridgeArray) ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggerEventProcessorAwsEventbridgeArrayOutput)
}

func (i GetEventTriggerEventProcessorAwsEventbridgeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetEventTriggerEventProcessorAwsEventbridge] {
	return pulumix.Output[[]GetEventTriggerEventProcessorAwsEventbridge]{
		OutputState: i.ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetEventTriggerEventProcessorAwsEventbridgeOutput struct{ *pulumi.OutputState }

func (GetEventTriggerEventProcessorAwsEventbridgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggerEventProcessorAwsEventbridge)(nil)).Elem()
}

func (o GetEventTriggerEventProcessorAwsEventbridgeOutput) ToGetEventTriggerEventProcessorAwsEventbridgeOutput() GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return o
}

func (o GetEventTriggerEventProcessorAwsEventbridgeOutput) ToGetEventTriggerEventProcessorAwsEventbridgeOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return o
}

func (o GetEventTriggerEventProcessorAwsEventbridgeOutput) ToOutput(ctx context.Context) pulumix.Output[GetEventTriggerEventProcessorAwsEventbridge] {
	return pulumix.Output[GetEventTriggerEventProcessorAwsEventbridge]{
		OutputState: o.OutputState,
	}
}

func (o GetEventTriggerEventProcessorAwsEventbridgeOutput) ConfigAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggerEventProcessorAwsEventbridge) string { return v.ConfigAccountId }).(pulumi.StringOutput)
}

func (o GetEventTriggerEventProcessorAwsEventbridgeOutput) ConfigRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggerEventProcessorAwsEventbridge) string { return v.ConfigRegion }).(pulumi.StringOutput)
}

type GetEventTriggerEventProcessorAwsEventbridgeArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggerEventProcessorAwsEventbridgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggerEventProcessorAwsEventbridge)(nil)).Elem()
}

func (o GetEventTriggerEventProcessorAwsEventbridgeArrayOutput) ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutput() GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return o
}

func (o GetEventTriggerEventProcessorAwsEventbridgeArrayOutput) ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return o
}

func (o GetEventTriggerEventProcessorAwsEventbridgeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetEventTriggerEventProcessorAwsEventbridge] {
	return pulumix.Output[[]GetEventTriggerEventProcessorAwsEventbridge]{
		OutputState: o.OutputState,
	}
}

func (o GetEventTriggerEventProcessorAwsEventbridgeArrayOutput) Index(i pulumi.IntInput) GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggerEventProcessorAwsEventbridge {
		return vs[0].([]GetEventTriggerEventProcessorAwsEventbridge)[vs[1].(int)]
	}).(GetEventTriggerEventProcessorAwsEventbridgeOutput)
}

type GetEventTriggersResult struct {
	// The name of the MongoDB collection that the trigger watches for change events.
	ConfigCollection string `pulumi:"configCollection"`
	// The name of the MongoDB database that contains the watched collection.
	ConfigDatabase string `pulumi:"configDatabase"`
	// If true, indicates that `UPDATE` change events should include the most current [majority-committed](https://docs.mongodb.com/manual/reference/read-concern-majority/) version of the modified document in the fullDocument field.
	ConfigFullDocument       bool `pulumi:"configFullDocument"`
	ConfigFullDocumentBefore bool `pulumi:"configFullDocumentBefore"`
	// A [$match](https://docs.mongodb.com/manual/reference/operator/aggregation/match/) expression document that MongoDB Realm includes in the underlying change stream pipeline for the trigger.
	ConfigMatch string `pulumi:"configMatch"`
	// The [authentication operation type](https://docs.mongodb.com/realm/triggers/authentication-triggers/#std-label-authentication-event-operation-types) to listen for.
	ConfigOperationType string `pulumi:"configOperationType"`
	// The [database event operation types](https://docs.mongodb.com/realm/triggers/database-triggers/#std-label-database-events) to listen for.
	ConfigOperationTypes []string `pulumi:"configOperationTypes"`
	// A [$project](https://docs.mongodb.com/manual/reference/operator/aggregation/project/) expression document that Realm uses to filter the fields that appear in change event objects.
	ConfigProject string `pulumi:"configProject"`
	// A list of one or more [authentication provider](https://docs.mongodb.com/realm/authentication/providers/) id values. The trigger will only listen for authentication events produced by these providers.
	ConfigProviders []string `pulumi:"configProviders"`
	// A [cron expression](https://docs.mongodb.com/realm/triggers/cron-expressions/) that defines the trigger schedule.
	ConfigSchedule     string `pulumi:"configSchedule"`
	ConfigScheduleType string `pulumi:"configScheduleType"`
	// The ID of the MongoDB Service associated with the trigger.
	ConfigServiceId string `pulumi:"configServiceId"`
	// Status of a trigger.
	Disabled bool `pulumi:"disabled"`
	// An object where each field name is an event processor ID and each value is an object that configures its corresponding event processor.
	// * `event_processors.0.aws_eventbridge.config_account_id` - AWS Account ID.
	// * `event_processors.0.aws_eventbridge.config_region` - Region of AWS Account.
	EventProcessors []GetEventTriggersResultEventProcessor `pulumi:"eventProcessors"`
	// The ID of the function associated with the trigger.
	FunctionId string `pulumi:"functionId"`
	// The name of the function associated with the trigger.
	FunctionName string `pulumi:"functionName"`
	// The name of the trigger.
	Name      string `pulumi:"name"`
	TriggerId string `pulumi:"triggerId"`
	// The type of the trigger. Possible Values: `DATABASE`, `AUTHENTICATION`
	Type string `pulumi:"type"`
	// Sort order for `DATABASE` type.
	Unordered bool `pulumi:"unordered"`
}

// GetEventTriggersResultInput is an input type that accepts GetEventTriggersResultArgs and GetEventTriggersResultOutput values.
// You can construct a concrete instance of `GetEventTriggersResultInput` via:
//
//	GetEventTriggersResultArgs{...}
type GetEventTriggersResultInput interface {
	pulumi.Input

	ToGetEventTriggersResultOutput() GetEventTriggersResultOutput
	ToGetEventTriggersResultOutputWithContext(context.Context) GetEventTriggersResultOutput
}

type GetEventTriggersResultArgs struct {
	// The name of the MongoDB collection that the trigger watches for change events.
	ConfigCollection pulumi.StringInput `pulumi:"configCollection"`
	// The name of the MongoDB database that contains the watched collection.
	ConfigDatabase pulumi.StringInput `pulumi:"configDatabase"`
	// If true, indicates that `UPDATE` change events should include the most current [majority-committed](https://docs.mongodb.com/manual/reference/read-concern-majority/) version of the modified document in the fullDocument field.
	ConfigFullDocument       pulumi.BoolInput `pulumi:"configFullDocument"`
	ConfigFullDocumentBefore pulumi.BoolInput `pulumi:"configFullDocumentBefore"`
	// A [$match](https://docs.mongodb.com/manual/reference/operator/aggregation/match/) expression document that MongoDB Realm includes in the underlying change stream pipeline for the trigger.
	ConfigMatch pulumi.StringInput `pulumi:"configMatch"`
	// The [authentication operation type](https://docs.mongodb.com/realm/triggers/authentication-triggers/#std-label-authentication-event-operation-types) to listen for.
	ConfigOperationType pulumi.StringInput `pulumi:"configOperationType"`
	// The [database event operation types](https://docs.mongodb.com/realm/triggers/database-triggers/#std-label-database-events) to listen for.
	ConfigOperationTypes pulumi.StringArrayInput `pulumi:"configOperationTypes"`
	// A [$project](https://docs.mongodb.com/manual/reference/operator/aggregation/project/) expression document that Realm uses to filter the fields that appear in change event objects.
	ConfigProject pulumi.StringInput `pulumi:"configProject"`
	// A list of one or more [authentication provider](https://docs.mongodb.com/realm/authentication/providers/) id values. The trigger will only listen for authentication events produced by these providers.
	ConfigProviders pulumi.StringArrayInput `pulumi:"configProviders"`
	// A [cron expression](https://docs.mongodb.com/realm/triggers/cron-expressions/) that defines the trigger schedule.
	ConfigSchedule     pulumi.StringInput `pulumi:"configSchedule"`
	ConfigScheduleType pulumi.StringInput `pulumi:"configScheduleType"`
	// The ID of the MongoDB Service associated with the trigger.
	ConfigServiceId pulumi.StringInput `pulumi:"configServiceId"`
	// Status of a trigger.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
	// An object where each field name is an event processor ID and each value is an object that configures its corresponding event processor.
	// * `event_processors.0.aws_eventbridge.config_account_id` - AWS Account ID.
	// * `event_processors.0.aws_eventbridge.config_region` - Region of AWS Account.
	EventProcessors GetEventTriggersResultEventProcessorArrayInput `pulumi:"eventProcessors"`
	// The ID of the function associated with the trigger.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// The name of the function associated with the trigger.
	FunctionName pulumi.StringInput `pulumi:"functionName"`
	// The name of the trigger.
	Name      pulumi.StringInput `pulumi:"name"`
	TriggerId pulumi.StringInput `pulumi:"triggerId"`
	// The type of the trigger. Possible Values: `DATABASE`, `AUTHENTICATION`
	Type pulumi.StringInput `pulumi:"type"`
	// Sort order for `DATABASE` type.
	Unordered pulumi.BoolInput `pulumi:"unordered"`
}

func (GetEventTriggersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResult)(nil)).Elem()
}

func (i GetEventTriggersResultArgs) ToGetEventTriggersResultOutput() GetEventTriggersResultOutput {
	return i.ToGetEventTriggersResultOutputWithContext(context.Background())
}

func (i GetEventTriggersResultArgs) ToGetEventTriggersResultOutputWithContext(ctx context.Context) GetEventTriggersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultOutput)
}

func (i GetEventTriggersResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetEventTriggersResult] {
	return pulumix.Output[GetEventTriggersResult]{
		OutputState: i.ToGetEventTriggersResultOutputWithContext(ctx).OutputState,
	}
}

// GetEventTriggersResultArrayInput is an input type that accepts GetEventTriggersResultArray and GetEventTriggersResultArrayOutput values.
// You can construct a concrete instance of `GetEventTriggersResultArrayInput` via:
//
//	GetEventTriggersResultArray{ GetEventTriggersResultArgs{...} }
type GetEventTriggersResultArrayInput interface {
	pulumi.Input

	ToGetEventTriggersResultArrayOutput() GetEventTriggersResultArrayOutput
	ToGetEventTriggersResultArrayOutputWithContext(context.Context) GetEventTriggersResultArrayOutput
}

type GetEventTriggersResultArray []GetEventTriggersResultInput

func (GetEventTriggersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResult)(nil)).Elem()
}

func (i GetEventTriggersResultArray) ToGetEventTriggersResultArrayOutput() GetEventTriggersResultArrayOutput {
	return i.ToGetEventTriggersResultArrayOutputWithContext(context.Background())
}

func (i GetEventTriggersResultArray) ToGetEventTriggersResultArrayOutputWithContext(ctx context.Context) GetEventTriggersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultArrayOutput)
}

func (i GetEventTriggersResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetEventTriggersResult] {
	return pulumix.Output[[]GetEventTriggersResult]{
		OutputState: i.ToGetEventTriggersResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetEventTriggersResultOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResult)(nil)).Elem()
}

func (o GetEventTriggersResultOutput) ToGetEventTriggersResultOutput() GetEventTriggersResultOutput {
	return o
}

func (o GetEventTriggersResultOutput) ToGetEventTriggersResultOutputWithContext(ctx context.Context) GetEventTriggersResultOutput {
	return o
}

func (o GetEventTriggersResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetEventTriggersResult] {
	return pulumix.Output[GetEventTriggersResult]{
		OutputState: o.OutputState,
	}
}

// The name of the MongoDB collection that the trigger watches for change events.
func (o GetEventTriggersResultOutput) ConfigCollection() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigCollection }).(pulumi.StringOutput)
}

// The name of the MongoDB database that contains the watched collection.
func (o GetEventTriggersResultOutput) ConfigDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigDatabase }).(pulumi.StringOutput)
}

// If true, indicates that `UPDATE` change events should include the most current [majority-committed](https://docs.mongodb.com/manual/reference/read-concern-majority/) version of the modified document in the fullDocument field.
func (o GetEventTriggersResultOutput) ConfigFullDocument() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEventTriggersResult) bool { return v.ConfigFullDocument }).(pulumi.BoolOutput)
}

func (o GetEventTriggersResultOutput) ConfigFullDocumentBefore() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEventTriggersResult) bool { return v.ConfigFullDocumentBefore }).(pulumi.BoolOutput)
}

// A [$match](https://docs.mongodb.com/manual/reference/operator/aggregation/match/) expression document that MongoDB Realm includes in the underlying change stream pipeline for the trigger.
func (o GetEventTriggersResultOutput) ConfigMatch() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigMatch }).(pulumi.StringOutput)
}

// The [authentication operation type](https://docs.mongodb.com/realm/triggers/authentication-triggers/#std-label-authentication-event-operation-types) to listen for.
func (o GetEventTriggersResultOutput) ConfigOperationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigOperationType }).(pulumi.StringOutput)
}

// The [database event operation types](https://docs.mongodb.com/realm/triggers/database-triggers/#std-label-database-events) to listen for.
func (o GetEventTriggersResultOutput) ConfigOperationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEventTriggersResult) []string { return v.ConfigOperationTypes }).(pulumi.StringArrayOutput)
}

// A [$project](https://docs.mongodb.com/manual/reference/operator/aggregation/project/) expression document that Realm uses to filter the fields that appear in change event objects.
func (o GetEventTriggersResultOutput) ConfigProject() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigProject }).(pulumi.StringOutput)
}

// A list of one or more [authentication provider](https://docs.mongodb.com/realm/authentication/providers/) id values. The trigger will only listen for authentication events produced by these providers.
func (o GetEventTriggersResultOutput) ConfigProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEventTriggersResult) []string { return v.ConfigProviders }).(pulumi.StringArrayOutput)
}

// A [cron expression](https://docs.mongodb.com/realm/triggers/cron-expressions/) that defines the trigger schedule.
func (o GetEventTriggersResultOutput) ConfigSchedule() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigSchedule }).(pulumi.StringOutput)
}

func (o GetEventTriggersResultOutput) ConfigScheduleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigScheduleType }).(pulumi.StringOutput)
}

// The ID of the MongoDB Service associated with the trigger.
func (o GetEventTriggersResultOutput) ConfigServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigServiceId }).(pulumi.StringOutput)
}

// Status of a trigger.
func (o GetEventTriggersResultOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEventTriggersResult) bool { return v.Disabled }).(pulumi.BoolOutput)
}

// An object where each field name is an event processor ID and each value is an object that configures its corresponding event processor.
// * `event_processors.0.aws_eventbridge.config_account_id` - AWS Account ID.
// * `event_processors.0.aws_eventbridge.config_region` - Region of AWS Account.
func (o GetEventTriggersResultOutput) EventProcessors() GetEventTriggersResultEventProcessorArrayOutput {
	return o.ApplyT(func(v GetEventTriggersResult) []GetEventTriggersResultEventProcessor { return v.EventProcessors }).(GetEventTriggersResultEventProcessorArrayOutput)
}

// The ID of the function associated with the trigger.
func (o GetEventTriggersResultOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The name of the function associated with the trigger.
func (o GetEventTriggersResultOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.FunctionName }).(pulumi.StringOutput)
}

// The name of the trigger.
func (o GetEventTriggersResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetEventTriggersResultOutput) TriggerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.TriggerId }).(pulumi.StringOutput)
}

// The type of the trigger. Possible Values: `DATABASE`, `AUTHENTICATION`
func (o GetEventTriggersResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.Type }).(pulumi.StringOutput)
}

// Sort order for `DATABASE` type.
func (o GetEventTriggersResultOutput) Unordered() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEventTriggersResult) bool { return v.Unordered }).(pulumi.BoolOutput)
}

type GetEventTriggersResultArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResult)(nil)).Elem()
}

func (o GetEventTriggersResultArrayOutput) ToGetEventTriggersResultArrayOutput() GetEventTriggersResultArrayOutput {
	return o
}

func (o GetEventTriggersResultArrayOutput) ToGetEventTriggersResultArrayOutputWithContext(ctx context.Context) GetEventTriggersResultArrayOutput {
	return o
}

func (o GetEventTriggersResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetEventTriggersResult] {
	return pulumix.Output[[]GetEventTriggersResult]{
		OutputState: o.OutputState,
	}
}

func (o GetEventTriggersResultArrayOutput) Index(i pulumi.IntInput) GetEventTriggersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggersResult {
		return vs[0].([]GetEventTriggersResult)[vs[1].(int)]
	}).(GetEventTriggersResultOutput)
}

type GetEventTriggersResultEventProcessor struct {
	AwsEventbridges []GetEventTriggersResultEventProcessorAwsEventbridge `pulumi:"awsEventbridges"`
}

// GetEventTriggersResultEventProcessorInput is an input type that accepts GetEventTriggersResultEventProcessorArgs and GetEventTriggersResultEventProcessorOutput values.
// You can construct a concrete instance of `GetEventTriggersResultEventProcessorInput` via:
//
//	GetEventTriggersResultEventProcessorArgs{...}
type GetEventTriggersResultEventProcessorInput interface {
	pulumi.Input

	ToGetEventTriggersResultEventProcessorOutput() GetEventTriggersResultEventProcessorOutput
	ToGetEventTriggersResultEventProcessorOutputWithContext(context.Context) GetEventTriggersResultEventProcessorOutput
}

type GetEventTriggersResultEventProcessorArgs struct {
	AwsEventbridges GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput `pulumi:"awsEventbridges"`
}

func (GetEventTriggersResultEventProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResultEventProcessor)(nil)).Elem()
}

func (i GetEventTriggersResultEventProcessorArgs) ToGetEventTriggersResultEventProcessorOutput() GetEventTriggersResultEventProcessorOutput {
	return i.ToGetEventTriggersResultEventProcessorOutputWithContext(context.Background())
}

func (i GetEventTriggersResultEventProcessorArgs) ToGetEventTriggersResultEventProcessorOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultEventProcessorOutput)
}

func (i GetEventTriggersResultEventProcessorArgs) ToOutput(ctx context.Context) pulumix.Output[GetEventTriggersResultEventProcessor] {
	return pulumix.Output[GetEventTriggersResultEventProcessor]{
		OutputState: i.ToGetEventTriggersResultEventProcessorOutputWithContext(ctx).OutputState,
	}
}

// GetEventTriggersResultEventProcessorArrayInput is an input type that accepts GetEventTriggersResultEventProcessorArray and GetEventTriggersResultEventProcessorArrayOutput values.
// You can construct a concrete instance of `GetEventTriggersResultEventProcessorArrayInput` via:
//
//	GetEventTriggersResultEventProcessorArray{ GetEventTriggersResultEventProcessorArgs{...} }
type GetEventTriggersResultEventProcessorArrayInput interface {
	pulumi.Input

	ToGetEventTriggersResultEventProcessorArrayOutput() GetEventTriggersResultEventProcessorArrayOutput
	ToGetEventTriggersResultEventProcessorArrayOutputWithContext(context.Context) GetEventTriggersResultEventProcessorArrayOutput
}

type GetEventTriggersResultEventProcessorArray []GetEventTriggersResultEventProcessorInput

func (GetEventTriggersResultEventProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResultEventProcessor)(nil)).Elem()
}

func (i GetEventTriggersResultEventProcessorArray) ToGetEventTriggersResultEventProcessorArrayOutput() GetEventTriggersResultEventProcessorArrayOutput {
	return i.ToGetEventTriggersResultEventProcessorArrayOutputWithContext(context.Background())
}

func (i GetEventTriggersResultEventProcessorArray) ToGetEventTriggersResultEventProcessorArrayOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultEventProcessorArrayOutput)
}

func (i GetEventTriggersResultEventProcessorArray) ToOutput(ctx context.Context) pulumix.Output[[]GetEventTriggersResultEventProcessor] {
	return pulumix.Output[[]GetEventTriggersResultEventProcessor]{
		OutputState: i.ToGetEventTriggersResultEventProcessorArrayOutputWithContext(ctx).OutputState,
	}
}

type GetEventTriggersResultEventProcessorOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultEventProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResultEventProcessor)(nil)).Elem()
}

func (o GetEventTriggersResultEventProcessorOutput) ToGetEventTriggersResultEventProcessorOutput() GetEventTriggersResultEventProcessorOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorOutput) ToGetEventTriggersResultEventProcessorOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorOutput) ToOutput(ctx context.Context) pulumix.Output[GetEventTriggersResultEventProcessor] {
	return pulumix.Output[GetEventTriggersResultEventProcessor]{
		OutputState: o.OutputState,
	}
}

func (o GetEventTriggersResultEventProcessorOutput) AwsEventbridges() GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return o.ApplyT(func(v GetEventTriggersResultEventProcessor) []GetEventTriggersResultEventProcessorAwsEventbridge {
		return v.AwsEventbridges
	}).(GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput)
}

type GetEventTriggersResultEventProcessorArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultEventProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResultEventProcessor)(nil)).Elem()
}

func (o GetEventTriggersResultEventProcessorArrayOutput) ToGetEventTriggersResultEventProcessorArrayOutput() GetEventTriggersResultEventProcessorArrayOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorArrayOutput) ToGetEventTriggersResultEventProcessorArrayOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorArrayOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetEventTriggersResultEventProcessor] {
	return pulumix.Output[[]GetEventTriggersResultEventProcessor]{
		OutputState: o.OutputState,
	}
}

func (o GetEventTriggersResultEventProcessorArrayOutput) Index(i pulumi.IntInput) GetEventTriggersResultEventProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggersResultEventProcessor {
		return vs[0].([]GetEventTriggersResultEventProcessor)[vs[1].(int)]
	}).(GetEventTriggersResultEventProcessorOutput)
}

type GetEventTriggersResultEventProcessorAwsEventbridge struct {
	ConfigAccountId string `pulumi:"configAccountId"`
	ConfigRegion    string `pulumi:"configRegion"`
}

// GetEventTriggersResultEventProcessorAwsEventbridgeInput is an input type that accepts GetEventTriggersResultEventProcessorAwsEventbridgeArgs and GetEventTriggersResultEventProcessorAwsEventbridgeOutput values.
// You can construct a concrete instance of `GetEventTriggersResultEventProcessorAwsEventbridgeInput` via:
//
//	GetEventTriggersResultEventProcessorAwsEventbridgeArgs{...}
type GetEventTriggersResultEventProcessorAwsEventbridgeInput interface {
	pulumi.Input

	ToGetEventTriggersResultEventProcessorAwsEventbridgeOutput() GetEventTriggersResultEventProcessorAwsEventbridgeOutput
	ToGetEventTriggersResultEventProcessorAwsEventbridgeOutputWithContext(context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeOutput
}

type GetEventTriggersResultEventProcessorAwsEventbridgeArgs struct {
	ConfigAccountId pulumi.StringInput `pulumi:"configAccountId"`
	ConfigRegion    pulumi.StringInput `pulumi:"configRegion"`
}

func (GetEventTriggersResultEventProcessorAwsEventbridgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResultEventProcessorAwsEventbridge)(nil)).Elem()
}

func (i GetEventTriggersResultEventProcessorAwsEventbridgeArgs) ToGetEventTriggersResultEventProcessorAwsEventbridgeOutput() GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return i.ToGetEventTriggersResultEventProcessorAwsEventbridgeOutputWithContext(context.Background())
}

func (i GetEventTriggersResultEventProcessorAwsEventbridgeArgs) ToGetEventTriggersResultEventProcessorAwsEventbridgeOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultEventProcessorAwsEventbridgeOutput)
}

func (i GetEventTriggersResultEventProcessorAwsEventbridgeArgs) ToOutput(ctx context.Context) pulumix.Output[GetEventTriggersResultEventProcessorAwsEventbridge] {
	return pulumix.Output[GetEventTriggersResultEventProcessorAwsEventbridge]{
		OutputState: i.ToGetEventTriggersResultEventProcessorAwsEventbridgeOutputWithContext(ctx).OutputState,
	}
}

// GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput is an input type that accepts GetEventTriggersResultEventProcessorAwsEventbridgeArray and GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput values.
// You can construct a concrete instance of `GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput` via:
//
//	GetEventTriggersResultEventProcessorAwsEventbridgeArray{ GetEventTriggersResultEventProcessorAwsEventbridgeArgs{...} }
type GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput interface {
	pulumi.Input

	ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput() GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput
	ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutputWithContext(context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput
}

type GetEventTriggersResultEventProcessorAwsEventbridgeArray []GetEventTriggersResultEventProcessorAwsEventbridgeInput

func (GetEventTriggersResultEventProcessorAwsEventbridgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResultEventProcessorAwsEventbridge)(nil)).Elem()
}

func (i GetEventTriggersResultEventProcessorAwsEventbridgeArray) ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput() GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return i.ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutputWithContext(context.Background())
}

func (i GetEventTriggersResultEventProcessorAwsEventbridgeArray) ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput)
}

func (i GetEventTriggersResultEventProcessorAwsEventbridgeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetEventTriggersResultEventProcessorAwsEventbridge] {
	return pulumix.Output[[]GetEventTriggersResultEventProcessorAwsEventbridge]{
		OutputState: i.ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetEventTriggersResultEventProcessorAwsEventbridgeOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResultEventProcessorAwsEventbridge)(nil)).Elem()
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ToGetEventTriggersResultEventProcessorAwsEventbridgeOutput() GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ToGetEventTriggersResultEventProcessorAwsEventbridgeOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ToOutput(ctx context.Context) pulumix.Output[GetEventTriggersResultEventProcessorAwsEventbridge] {
	return pulumix.Output[GetEventTriggersResultEventProcessorAwsEventbridge]{
		OutputState: o.OutputState,
	}
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ConfigAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResultEventProcessorAwsEventbridge) string { return v.ConfigAccountId }).(pulumi.StringOutput)
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ConfigRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResultEventProcessorAwsEventbridge) string { return v.ConfigRegion }).(pulumi.StringOutput)
}

type GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResultEventProcessorAwsEventbridge)(nil)).Elem()
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput) ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput() GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput) ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetEventTriggersResultEventProcessorAwsEventbridge] {
	return pulumix.Output[[]GetEventTriggersResultEventProcessorAwsEventbridge]{
		OutputState: o.OutputState,
	}
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput) Index(i pulumi.IntInput) GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggersResultEventProcessorAwsEventbridge {
		return vs[0].([]GetEventTriggersResultEventProcessorAwsEventbridge)[vs[1].(int)]
	}).(GetEventTriggersResultEventProcessorAwsEventbridgeOutput)
}

type GetFederatedDatabaseInstanceCloudProviderConfig struct {
	Aws GetFederatedDatabaseInstanceCloudProviderConfigAws `pulumi:"aws"`
}

// GetFederatedDatabaseInstanceCloudProviderConfigInput is an input type that accepts GetFederatedDatabaseInstanceCloudProviderConfigArgs and GetFederatedDatabaseInstanceCloudProviderConfigOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceCloudProviderConfigInput` via:
//
//	GetFederatedDatabaseInstanceCloudProviderConfigArgs{...}
type GetFederatedDatabaseInstanceCloudProviderConfigInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceCloudProviderConfigOutput() GetFederatedDatabaseInstanceCloudProviderConfigOutput
	ToGetFederatedDatabaseInstanceCloudProviderConfigOutputWithContext(context.Context) GetFederatedDatabaseInstanceCloudProviderConfigOutput
}

type GetFederatedDatabaseInstanceCloudProviderConfigArgs struct {
	Aws GetFederatedDatabaseInstanceCloudProviderConfigAwsInput `pulumi:"aws"`
}

func (GetFederatedDatabaseInstanceCloudProviderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceCloudProviderConfig)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceCloudProviderConfigArgs) ToGetFederatedDatabaseInstanceCloudProviderConfigOutput() GetFederatedDatabaseInstanceCloudProviderConfigOutput {
	return i.ToGetFederatedDatabaseInstanceCloudProviderConfigOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceCloudProviderConfigArgs) ToGetFederatedDatabaseInstanceCloudProviderConfigOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceCloudProviderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceCloudProviderConfigOutput)
}

func (i GetFederatedDatabaseInstanceCloudProviderConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceCloudProviderConfig] {
	return pulumix.Output[GetFederatedDatabaseInstanceCloudProviderConfig]{
		OutputState: i.ToGetFederatedDatabaseInstanceCloudProviderConfigOutputWithContext(ctx).OutputState,
	}
}

func (i GetFederatedDatabaseInstanceCloudProviderConfigArgs) ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutput() GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return i.ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceCloudProviderConfigArgs) ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceCloudProviderConfigOutput).ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(ctx)
}

// GetFederatedDatabaseInstanceCloudProviderConfigPtrInput is an input type that accepts GetFederatedDatabaseInstanceCloudProviderConfigArgs, GetFederatedDatabaseInstanceCloudProviderConfigPtr and GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceCloudProviderConfigPtrInput` via:
//
//	        GetFederatedDatabaseInstanceCloudProviderConfigArgs{...}
//
//	or:
//
//	        nil
type GetFederatedDatabaseInstanceCloudProviderConfigPtrInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutput() GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput
	ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(context.Context) GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput
}

type getFederatedDatabaseInstanceCloudProviderConfigPtrType GetFederatedDatabaseInstanceCloudProviderConfigArgs

func GetFederatedDatabaseInstanceCloudProviderConfigPtr(v *GetFederatedDatabaseInstanceCloudProviderConfigArgs) GetFederatedDatabaseInstanceCloudProviderConfigPtrInput {
	return (*getFederatedDatabaseInstanceCloudProviderConfigPtrType)(v)
}

func (*getFederatedDatabaseInstanceCloudProviderConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetFederatedDatabaseInstanceCloudProviderConfig)(nil)).Elem()
}

func (i *getFederatedDatabaseInstanceCloudProviderConfigPtrType) ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutput() GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return i.ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(context.Background())
}

func (i *getFederatedDatabaseInstanceCloudProviderConfigPtrType) ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput)
}

func (i *getFederatedDatabaseInstanceCloudProviderConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetFederatedDatabaseInstanceCloudProviderConfig] {
	return pulumix.Output[*GetFederatedDatabaseInstanceCloudProviderConfig]{
		OutputState: i.ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstanceCloudProviderConfigOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceCloudProviderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceCloudProviderConfig)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigOutput) ToGetFederatedDatabaseInstanceCloudProviderConfigOutput() GetFederatedDatabaseInstanceCloudProviderConfigOutput {
	return o
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigOutput) ToGetFederatedDatabaseInstanceCloudProviderConfigOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceCloudProviderConfigOutput {
	return o
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigOutput) ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutput() GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return o.ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(context.Background())
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigOutput) ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetFederatedDatabaseInstanceCloudProviderConfig) *GetFederatedDatabaseInstanceCloudProviderConfig {
		return &v
	}).(GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput)
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceCloudProviderConfig] {
	return pulumix.Output[GetFederatedDatabaseInstanceCloudProviderConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigOutput) Aws() GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceCloudProviderConfig) GetFederatedDatabaseInstanceCloudProviderConfigAws {
		return v.Aws
	}).(GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput)
}

type GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetFederatedDatabaseInstanceCloudProviderConfig)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput) ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutput() GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return o
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput) ToGetFederatedDatabaseInstanceCloudProviderConfigPtrOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput {
	return o
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetFederatedDatabaseInstanceCloudProviderConfig] {
	return pulumix.Output[*GetFederatedDatabaseInstanceCloudProviderConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput) Elem() GetFederatedDatabaseInstanceCloudProviderConfigOutput {
	return o.ApplyT(func(v *GetFederatedDatabaseInstanceCloudProviderConfig) GetFederatedDatabaseInstanceCloudProviderConfig {
		if v != nil {
			return *v
		}
		var ret GetFederatedDatabaseInstanceCloudProviderConfig
		return ret
	}).(GetFederatedDatabaseInstanceCloudProviderConfigOutput)
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput) Aws() GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return o.ApplyT(func(v *GetFederatedDatabaseInstanceCloudProviderConfig) *GetFederatedDatabaseInstanceCloudProviderConfigAws {
		if v == nil {
			return nil
		}
		return &v.Aws
	}).(GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput)
}

type GetFederatedDatabaseInstanceCloudProviderConfigAws struct {
	// Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
	ExternalId string `pulumi:"externalId"`
	// Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
	// * `s3:GetObject`
	// * `s3:ListBucket`
	// * `s3:GetObjectVersion`
	IamAssumedRoleArn string `pulumi:"iamAssumedRoleArn"`
	// Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
	IamUserArn string `pulumi:"iamUserArn"`
	// Unique identifier of the role that the data lake can use to access the data stores.
	RoleId       string `pulumi:"roleId"`
	TestS3Bucket string `pulumi:"testS3Bucket"`
}

// GetFederatedDatabaseInstanceCloudProviderConfigAwsInput is an input type that accepts GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs and GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceCloudProviderConfigAwsInput` via:
//
//	GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs{...}
type GetFederatedDatabaseInstanceCloudProviderConfigAwsInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceCloudProviderConfigAwsOutput() GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput
	ToGetFederatedDatabaseInstanceCloudProviderConfigAwsOutputWithContext(context.Context) GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput
}

type GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs struct {
	// Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
	// * `s3:GetObject`
	// * `s3:ListBucket`
	// * `s3:GetObjectVersion`
	IamAssumedRoleArn pulumi.StringInput `pulumi:"iamAssumedRoleArn"`
	// Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
	IamUserArn pulumi.StringInput `pulumi:"iamUserArn"`
	// Unique identifier of the role that the data lake can use to access the data stores.
	RoleId       pulumi.StringInput `pulumi:"roleId"`
	TestS3Bucket pulumi.StringInput `pulumi:"testS3Bucket"`
}

func (GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceCloudProviderConfigAws)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs) ToGetFederatedDatabaseInstanceCloudProviderConfigAwsOutput() GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput {
	return i.ToGetFederatedDatabaseInstanceCloudProviderConfigAwsOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs) ToGetFederatedDatabaseInstanceCloudProviderConfigAwsOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput)
}

func (i GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceCloudProviderConfigAws] {
	return pulumix.Output[GetFederatedDatabaseInstanceCloudProviderConfigAws]{
		OutputState: i.ToGetFederatedDatabaseInstanceCloudProviderConfigAwsOutputWithContext(ctx).OutputState,
	}
}

func (i GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs) ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput() GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return i.ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs) ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput).ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(ctx)
}

// GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrInput is an input type that accepts GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs, GetFederatedDatabaseInstanceCloudProviderConfigAwsPtr and GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrInput` via:
//
//	        GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs{...}
//
//	or:
//
//	        nil
type GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput() GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput
	ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(context.Context) GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput
}

type getFederatedDatabaseInstanceCloudProviderConfigAwsPtrType GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs

func GetFederatedDatabaseInstanceCloudProviderConfigAwsPtr(v *GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs) GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrInput {
	return (*getFederatedDatabaseInstanceCloudProviderConfigAwsPtrType)(v)
}

func (*getFederatedDatabaseInstanceCloudProviderConfigAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetFederatedDatabaseInstanceCloudProviderConfigAws)(nil)).Elem()
}

func (i *getFederatedDatabaseInstanceCloudProviderConfigAwsPtrType) ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput() GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return i.ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(context.Background())
}

func (i *getFederatedDatabaseInstanceCloudProviderConfigAwsPtrType) ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput)
}

func (i *getFederatedDatabaseInstanceCloudProviderConfigAwsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetFederatedDatabaseInstanceCloudProviderConfigAws] {
	return pulumix.Output[*GetFederatedDatabaseInstanceCloudProviderConfigAws]{
		OutputState: i.ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceCloudProviderConfigAws)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput) ToGetFederatedDatabaseInstanceCloudProviderConfigAwsOutput() GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput {
	return o
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput) ToGetFederatedDatabaseInstanceCloudProviderConfigAwsOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput {
	return o
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput) ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput() GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return o.ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(context.Background())
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput) ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetFederatedDatabaseInstanceCloudProviderConfigAws) *GetFederatedDatabaseInstanceCloudProviderConfigAws {
		return &v
	}).(GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput)
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceCloudProviderConfigAws] {
	return pulumix.Output[GetFederatedDatabaseInstanceCloudProviderConfigAws]{
		OutputState: o.OutputState,
	}
}

// Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceCloudProviderConfigAws) string { return v.ExternalId }).(pulumi.StringOutput)
}

// Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
// * `s3:GetObject`
// * `s3:ListBucket`
// * `s3:GetObjectVersion`
func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput) IamAssumedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceCloudProviderConfigAws) string { return v.IamAssumedRoleArn }).(pulumi.StringOutput)
}

// Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput) IamUserArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceCloudProviderConfigAws) string { return v.IamUserArn }).(pulumi.StringOutput)
}

// Unique identifier of the role that the data lake can use to access the data stores.
func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceCloudProviderConfigAws) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput) TestS3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceCloudProviderConfigAws) string { return v.TestS3Bucket }).(pulumi.StringOutput)
}

type GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetFederatedDatabaseInstanceCloudProviderConfigAws)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput() GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return o
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) ToGetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput {
	return o
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetFederatedDatabaseInstanceCloudProviderConfigAws] {
	return pulumix.Output[*GetFederatedDatabaseInstanceCloudProviderConfigAws]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) Elem() GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput {
	return o.ApplyT(func(v *GetFederatedDatabaseInstanceCloudProviderConfigAws) GetFederatedDatabaseInstanceCloudProviderConfigAws {
		if v != nil {
			return *v
		}
		var ret GetFederatedDatabaseInstanceCloudProviderConfigAws
		return ret
	}).(GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput)
}

// Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetFederatedDatabaseInstanceCloudProviderConfigAws) *string {
		if v == nil {
			return nil
		}
		return &v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
// * `s3:GetObject`
// * `s3:ListBucket`
// * `s3:GetObjectVersion`
func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) IamAssumedRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetFederatedDatabaseInstanceCloudProviderConfigAws) *string {
		if v == nil {
			return nil
		}
		return &v.IamAssumedRoleArn
	}).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) IamUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetFederatedDatabaseInstanceCloudProviderConfigAws) *string {
		if v == nil {
			return nil
		}
		return &v.IamUserArn
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the role that the data lake can use to access the data stores.
func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetFederatedDatabaseInstanceCloudProviderConfigAws) *string {
		if v == nil {
			return nil
		}
		return &v.RoleId
	}).(pulumi.StringPtrOutput)
}

func (o GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput) TestS3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetFederatedDatabaseInstanceCloudProviderConfigAws) *string {
		if v == nil {
			return nil
		}
		return &v.TestS3Bucket
	}).(pulumi.StringPtrOutput)
}

type GetFederatedDatabaseInstanceDataProcessRegion struct {
	// Name of the cloud service provider. Atlas Federated Database only supports AWS.
	CloudProvider string `pulumi:"cloudProvider"`
	// Name of the region to which the Federanted Instnace routes client connections for data processing.
	Region string `pulumi:"region"`
}

// GetFederatedDatabaseInstanceDataProcessRegionInput is an input type that accepts GetFederatedDatabaseInstanceDataProcessRegionArgs and GetFederatedDatabaseInstanceDataProcessRegionOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceDataProcessRegionInput` via:
//
//	GetFederatedDatabaseInstanceDataProcessRegionArgs{...}
type GetFederatedDatabaseInstanceDataProcessRegionInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceDataProcessRegionOutput() GetFederatedDatabaseInstanceDataProcessRegionOutput
	ToGetFederatedDatabaseInstanceDataProcessRegionOutputWithContext(context.Context) GetFederatedDatabaseInstanceDataProcessRegionOutput
}

type GetFederatedDatabaseInstanceDataProcessRegionArgs struct {
	// Name of the cloud service provider. Atlas Federated Database only supports AWS.
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// Name of the region to which the Federanted Instnace routes client connections for data processing.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetFederatedDatabaseInstanceDataProcessRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceDataProcessRegion)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceDataProcessRegionArgs) ToGetFederatedDatabaseInstanceDataProcessRegionOutput() GetFederatedDatabaseInstanceDataProcessRegionOutput {
	return i.ToGetFederatedDatabaseInstanceDataProcessRegionOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceDataProcessRegionArgs) ToGetFederatedDatabaseInstanceDataProcessRegionOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceDataProcessRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceDataProcessRegionOutput)
}

func (i GetFederatedDatabaseInstanceDataProcessRegionArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceDataProcessRegion] {
	return pulumix.Output[GetFederatedDatabaseInstanceDataProcessRegion]{
		OutputState: i.ToGetFederatedDatabaseInstanceDataProcessRegionOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstanceDataProcessRegionArrayInput is an input type that accepts GetFederatedDatabaseInstanceDataProcessRegionArray and GetFederatedDatabaseInstanceDataProcessRegionArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceDataProcessRegionArrayInput` via:
//
//	GetFederatedDatabaseInstanceDataProcessRegionArray{ GetFederatedDatabaseInstanceDataProcessRegionArgs{...} }
type GetFederatedDatabaseInstanceDataProcessRegionArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceDataProcessRegionArrayOutput() GetFederatedDatabaseInstanceDataProcessRegionArrayOutput
	ToGetFederatedDatabaseInstanceDataProcessRegionArrayOutputWithContext(context.Context) GetFederatedDatabaseInstanceDataProcessRegionArrayOutput
}

type GetFederatedDatabaseInstanceDataProcessRegionArray []GetFederatedDatabaseInstanceDataProcessRegionInput

func (GetFederatedDatabaseInstanceDataProcessRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceDataProcessRegion)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceDataProcessRegionArray) ToGetFederatedDatabaseInstanceDataProcessRegionArrayOutput() GetFederatedDatabaseInstanceDataProcessRegionArrayOutput {
	return i.ToGetFederatedDatabaseInstanceDataProcessRegionArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceDataProcessRegionArray) ToGetFederatedDatabaseInstanceDataProcessRegionArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceDataProcessRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceDataProcessRegionArrayOutput)
}

func (i GetFederatedDatabaseInstanceDataProcessRegionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceDataProcessRegion] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceDataProcessRegion]{
		OutputState: i.ToGetFederatedDatabaseInstanceDataProcessRegionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstanceDataProcessRegionOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceDataProcessRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceDataProcessRegion)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceDataProcessRegionOutput) ToGetFederatedDatabaseInstanceDataProcessRegionOutput() GetFederatedDatabaseInstanceDataProcessRegionOutput {
	return o
}

func (o GetFederatedDatabaseInstanceDataProcessRegionOutput) ToGetFederatedDatabaseInstanceDataProcessRegionOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceDataProcessRegionOutput {
	return o
}

func (o GetFederatedDatabaseInstanceDataProcessRegionOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceDataProcessRegion] {
	return pulumix.Output[GetFederatedDatabaseInstanceDataProcessRegion]{
		OutputState: o.OutputState,
	}
}

// Name of the cloud service provider. Atlas Federated Database only supports AWS.
func (o GetFederatedDatabaseInstanceDataProcessRegionOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceDataProcessRegion) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// Name of the region to which the Federanted Instnace routes client connections for data processing.
func (o GetFederatedDatabaseInstanceDataProcessRegionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceDataProcessRegion) string { return v.Region }).(pulumi.StringOutput)
}

type GetFederatedDatabaseInstanceDataProcessRegionArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceDataProcessRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceDataProcessRegion)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceDataProcessRegionArrayOutput) ToGetFederatedDatabaseInstanceDataProcessRegionArrayOutput() GetFederatedDatabaseInstanceDataProcessRegionArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceDataProcessRegionArrayOutput) ToGetFederatedDatabaseInstanceDataProcessRegionArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceDataProcessRegionArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceDataProcessRegionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceDataProcessRegion] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceDataProcessRegion]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceDataProcessRegionArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstanceDataProcessRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstanceDataProcessRegion {
		return vs[0].([]GetFederatedDatabaseInstanceDataProcessRegion)[vs[1].(int)]
	}).(GetFederatedDatabaseInstanceDataProcessRegionOutput)
}

type GetFederatedDatabaseInstanceStorageDatabase struct {
	Collections            []GetFederatedDatabaseInstanceStorageDatabaseCollection `pulumi:"collections"`
	MaxWildcardCollections int                                                     `pulumi:"maxWildcardCollections"`
	// Name of the Atlas Federated Database Instance.
	Name  string                                            `pulumi:"name"`
	Views []GetFederatedDatabaseInstanceStorageDatabaseView `pulumi:"views"`
}

// GetFederatedDatabaseInstanceStorageDatabaseInput is an input type that accepts GetFederatedDatabaseInstanceStorageDatabaseArgs and GetFederatedDatabaseInstanceStorageDatabaseOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageDatabaseInput` via:
//
//	GetFederatedDatabaseInstanceStorageDatabaseArgs{...}
type GetFederatedDatabaseInstanceStorageDatabaseInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageDatabaseOutput() GetFederatedDatabaseInstanceStorageDatabaseOutput
	ToGetFederatedDatabaseInstanceStorageDatabaseOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageDatabaseOutput
}

type GetFederatedDatabaseInstanceStorageDatabaseArgs struct {
	Collections            GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayInput `pulumi:"collections"`
	MaxWildcardCollections pulumi.IntInput                                                 `pulumi:"maxWildcardCollections"`
	// Name of the Atlas Federated Database Instance.
	Name  pulumi.StringInput                                        `pulumi:"name"`
	Views GetFederatedDatabaseInstanceStorageDatabaseViewArrayInput `pulumi:"views"`
}

func (GetFederatedDatabaseInstanceStorageDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabase)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageDatabaseArgs) ToGetFederatedDatabaseInstanceStorageDatabaseOutput() GetFederatedDatabaseInstanceStorageDatabaseOutput {
	return i.ToGetFederatedDatabaseInstanceStorageDatabaseOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageDatabaseArgs) ToGetFederatedDatabaseInstanceStorageDatabaseOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageDatabaseOutput)
}

func (i GetFederatedDatabaseInstanceStorageDatabaseArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageDatabase] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageDatabase]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageDatabaseOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstanceStorageDatabaseArrayInput is an input type that accepts GetFederatedDatabaseInstanceStorageDatabaseArray and GetFederatedDatabaseInstanceStorageDatabaseArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageDatabaseArrayInput` via:
//
//	GetFederatedDatabaseInstanceStorageDatabaseArray{ GetFederatedDatabaseInstanceStorageDatabaseArgs{...} }
type GetFederatedDatabaseInstanceStorageDatabaseArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageDatabaseArrayOutput() GetFederatedDatabaseInstanceStorageDatabaseArrayOutput
	ToGetFederatedDatabaseInstanceStorageDatabaseArrayOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageDatabaseArrayOutput
}

type GetFederatedDatabaseInstanceStorageDatabaseArray []GetFederatedDatabaseInstanceStorageDatabaseInput

func (GetFederatedDatabaseInstanceStorageDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageDatabase)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageDatabaseArray) ToGetFederatedDatabaseInstanceStorageDatabaseArrayOutput() GetFederatedDatabaseInstanceStorageDatabaseArrayOutput {
	return i.ToGetFederatedDatabaseInstanceStorageDatabaseArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageDatabaseArray) ToGetFederatedDatabaseInstanceStorageDatabaseArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageDatabaseArrayOutput)
}

func (i GetFederatedDatabaseInstanceStorageDatabaseArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabase] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabase]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageDatabaseArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstanceStorageDatabaseOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabase)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageDatabaseOutput) ToGetFederatedDatabaseInstanceStorageDatabaseOutput() GetFederatedDatabaseInstanceStorageDatabaseOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseOutput) ToGetFederatedDatabaseInstanceStorageDatabaseOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageDatabase] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageDatabase]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceStorageDatabaseOutput) Collections() GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabase) []GetFederatedDatabaseInstanceStorageDatabaseCollection {
		return v.Collections
	}).(GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput)
}

func (o GetFederatedDatabaseInstanceStorageDatabaseOutput) MaxWildcardCollections() pulumi.IntOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabase) int { return v.MaxWildcardCollections }).(pulumi.IntOutput)
}

// Name of the Atlas Federated Database Instance.
func (o GetFederatedDatabaseInstanceStorageDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabase) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageDatabaseOutput) Views() GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabase) []GetFederatedDatabaseInstanceStorageDatabaseView {
		return v.Views
	}).(GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput)
}

type GetFederatedDatabaseInstanceStorageDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageDatabase)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageDatabaseArrayOutput) ToGetFederatedDatabaseInstanceStorageDatabaseArrayOutput() GetFederatedDatabaseInstanceStorageDatabaseArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseArrayOutput) ToGetFederatedDatabaseInstanceStorageDatabaseArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabase] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabase]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceStorageDatabaseArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstanceStorageDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstanceStorageDatabase {
		return vs[0].([]GetFederatedDatabaseInstanceStorageDatabase)[vs[1].(int)]
	}).(GetFederatedDatabaseInstanceStorageDatabaseOutput)
}

type GetFederatedDatabaseInstanceStorageDatabaseCollection struct {
	DataSources []GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource `pulumi:"dataSources"`
	// Name of the Atlas Federated Database Instance.
	Name string `pulumi:"name"`
}

// GetFederatedDatabaseInstanceStorageDatabaseCollectionInput is an input type that accepts GetFederatedDatabaseInstanceStorageDatabaseCollectionArgs and GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageDatabaseCollectionInput` via:
//
//	GetFederatedDatabaseInstanceStorageDatabaseCollectionArgs{...}
type GetFederatedDatabaseInstanceStorageDatabaseCollectionInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageDatabaseCollectionOutput() GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput
	ToGetFederatedDatabaseInstanceStorageDatabaseCollectionOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput
}

type GetFederatedDatabaseInstanceStorageDatabaseCollectionArgs struct {
	DataSources GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayInput `pulumi:"dataSources"`
	// Name of the Atlas Federated Database Instance.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFederatedDatabaseInstanceStorageDatabaseCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabaseCollection)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageDatabaseCollectionArgs) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionOutput() GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput {
	return i.ToGetFederatedDatabaseInstanceStorageDatabaseCollectionOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageDatabaseCollectionArgs) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput)
}

func (i GetFederatedDatabaseInstanceStorageDatabaseCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageDatabaseCollection] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageDatabaseCollection]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageDatabaseCollectionOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayInput is an input type that accepts GetFederatedDatabaseInstanceStorageDatabaseCollectionArray and GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayInput` via:
//
//	GetFederatedDatabaseInstanceStorageDatabaseCollectionArray{ GetFederatedDatabaseInstanceStorageDatabaseCollectionArgs{...} }
type GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput() GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput
	ToGetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput
}

type GetFederatedDatabaseInstanceStorageDatabaseCollectionArray []GetFederatedDatabaseInstanceStorageDatabaseCollectionInput

func (GetFederatedDatabaseInstanceStorageDatabaseCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageDatabaseCollection)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageDatabaseCollectionArray) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput() GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput {
	return i.ToGetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageDatabaseCollectionArray) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput)
}

func (i GetFederatedDatabaseInstanceStorageDatabaseCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabaseCollection] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabaseCollection]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabaseCollection)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionOutput() GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageDatabaseCollection] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageDatabaseCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput) DataSources() GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseCollection) []GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource {
		return v.DataSources
	}).(GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput)
}

// Name of the Atlas Federated Database Instance.
func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseCollection) string { return v.Name }).(pulumi.StringOutput)
}

type GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageDatabaseCollection)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput() GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabaseCollection] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabaseCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstanceStorageDatabaseCollection {
		return vs[0].([]GetFederatedDatabaseInstanceStorageDatabaseCollection)[vs[1].(int)]
	}).(GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput)
}

type GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource struct {
	AllowInsecure       bool     `pulumi:"allowInsecure"`
	Collection          string   `pulumi:"collection"`
	CollectionRegex     string   `pulumi:"collectionRegex"`
	Database            string   `pulumi:"database"`
	DatabaseRegex       string   `pulumi:"databaseRegex"`
	DatasetName         string   `pulumi:"datasetName"`
	DefaultFormat       string   `pulumi:"defaultFormat"`
	Path                string   `pulumi:"path"`
	ProvenanceFieldName string   `pulumi:"provenanceFieldName"`
	StoreName           string   `pulumi:"storeName"`
	Urls                []string `pulumi:"urls"`
}

// GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceInput is an input type that accepts GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs and GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceInput` via:
//
//	GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs{...}
type GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput() GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput
	ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput
}

type GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs struct {
	AllowInsecure       pulumi.BoolInput        `pulumi:"allowInsecure"`
	Collection          pulumi.StringInput      `pulumi:"collection"`
	CollectionRegex     pulumi.StringInput      `pulumi:"collectionRegex"`
	Database            pulumi.StringInput      `pulumi:"database"`
	DatabaseRegex       pulumi.StringInput      `pulumi:"databaseRegex"`
	DatasetName         pulumi.StringInput      `pulumi:"datasetName"`
	DefaultFormat       pulumi.StringInput      `pulumi:"defaultFormat"`
	Path                pulumi.StringInput      `pulumi:"path"`
	ProvenanceFieldName pulumi.StringInput      `pulumi:"provenanceFieldName"`
	StoreName           pulumi.StringInput      `pulumi:"storeName"`
	Urls                pulumi.StringArrayInput `pulumi:"urls"`
}

func (GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput() GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput {
	return i.ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput)
}

func (i GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayInput is an input type that accepts GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray and GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayInput` via:
//
//	GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray{ GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs{...} }
type GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput() GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput
	ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput
}

type GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray []GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceInput

func (GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput() GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput {
	return i.ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput)
}

func (i GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput() GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) AllowInsecure() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource) bool { return v.AllowInsecure }).(pulumi.BoolOutput)
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource) string { return v.Collection }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) CollectionRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource) string {
		return v.CollectionRegex
	}).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource) string { return v.Database }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) DatabaseRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource) string { return v.DatabaseRegex }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) DatasetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource) string { return v.DatasetName }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) DefaultFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource) string { return v.DefaultFormat }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) ProvenanceFieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource) string {
		return v.ProvenanceFieldName
	}).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource) string { return v.StoreName }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource) []string { return v.Urls }).(pulumi.StringArrayOutput)
}

type GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput() GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput) ToGetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource {
		return vs[0].([]GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSource)[vs[1].(int)]
	}).(GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput)
}

type GetFederatedDatabaseInstanceStorageDatabaseView struct {
	// Name of the Atlas Federated Database Instance.
	Name     string `pulumi:"name"`
	Pipeline string `pulumi:"pipeline"`
	Source   string `pulumi:"source"`
}

// GetFederatedDatabaseInstanceStorageDatabaseViewInput is an input type that accepts GetFederatedDatabaseInstanceStorageDatabaseViewArgs and GetFederatedDatabaseInstanceStorageDatabaseViewOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageDatabaseViewInput` via:
//
//	GetFederatedDatabaseInstanceStorageDatabaseViewArgs{...}
type GetFederatedDatabaseInstanceStorageDatabaseViewInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageDatabaseViewOutput() GetFederatedDatabaseInstanceStorageDatabaseViewOutput
	ToGetFederatedDatabaseInstanceStorageDatabaseViewOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageDatabaseViewOutput
}

type GetFederatedDatabaseInstanceStorageDatabaseViewArgs struct {
	// Name of the Atlas Federated Database Instance.
	Name     pulumi.StringInput `pulumi:"name"`
	Pipeline pulumi.StringInput `pulumi:"pipeline"`
	Source   pulumi.StringInput `pulumi:"source"`
}

func (GetFederatedDatabaseInstanceStorageDatabaseViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabaseView)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageDatabaseViewArgs) ToGetFederatedDatabaseInstanceStorageDatabaseViewOutput() GetFederatedDatabaseInstanceStorageDatabaseViewOutput {
	return i.ToGetFederatedDatabaseInstanceStorageDatabaseViewOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageDatabaseViewArgs) ToGetFederatedDatabaseInstanceStorageDatabaseViewOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageDatabaseViewOutput)
}

func (i GetFederatedDatabaseInstanceStorageDatabaseViewArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageDatabaseView] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageDatabaseView]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageDatabaseViewOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstanceStorageDatabaseViewArrayInput is an input type that accepts GetFederatedDatabaseInstanceStorageDatabaseViewArray and GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageDatabaseViewArrayInput` via:
//
//	GetFederatedDatabaseInstanceStorageDatabaseViewArray{ GetFederatedDatabaseInstanceStorageDatabaseViewArgs{...} }
type GetFederatedDatabaseInstanceStorageDatabaseViewArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput() GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput
	ToGetFederatedDatabaseInstanceStorageDatabaseViewArrayOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput
}

type GetFederatedDatabaseInstanceStorageDatabaseViewArray []GetFederatedDatabaseInstanceStorageDatabaseViewInput

func (GetFederatedDatabaseInstanceStorageDatabaseViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageDatabaseView)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageDatabaseViewArray) ToGetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput() GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput {
	return i.ToGetFederatedDatabaseInstanceStorageDatabaseViewArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageDatabaseViewArray) ToGetFederatedDatabaseInstanceStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput)
}

func (i GetFederatedDatabaseInstanceStorageDatabaseViewArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabaseView] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabaseView]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageDatabaseViewArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstanceStorageDatabaseViewOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageDatabaseViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabaseView)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageDatabaseViewOutput) ToGetFederatedDatabaseInstanceStorageDatabaseViewOutput() GetFederatedDatabaseInstanceStorageDatabaseViewOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseViewOutput) ToGetFederatedDatabaseInstanceStorageDatabaseViewOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseViewOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseViewOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageDatabaseView] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageDatabaseView]{
		OutputState: o.OutputState,
	}
}

// Name of the Atlas Federated Database Instance.
func (o GetFederatedDatabaseInstanceStorageDatabaseViewOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseView) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageDatabaseViewOutput) Pipeline() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseView) string { return v.Pipeline }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageDatabaseViewOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageDatabaseView) string { return v.Source }).(pulumi.StringOutput)
}

type GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageDatabaseView)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput) ToGetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput() GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput) ToGetFederatedDatabaseInstanceStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabaseView] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageDatabaseView]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstanceStorageDatabaseViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstanceStorageDatabaseView {
		return vs[0].([]GetFederatedDatabaseInstanceStorageDatabaseView)[vs[1].(int)]
	}).(GetFederatedDatabaseInstanceStorageDatabaseViewOutput)
}

type GetFederatedDatabaseInstanceStorageStore struct {
	AdditionalStorageClasses []string `pulumi:"additionalStorageClasses"`
	AllowInsecure            bool     `pulumi:"allowInsecure"`
	Bucket                   string   `pulumi:"bucket"`
	// Deprecated: this parameter is deprecated and will be removed by September 2024
	ClusterId     string `pulumi:"clusterId"`
	ClusterName   string `pulumi:"clusterName"`
	DefaultFormat string `pulumi:"defaultFormat"`
	Delimiter     string `pulumi:"delimiter"`
	IncludeTags   bool   `pulumi:"includeTags"`
	// Name of the Atlas Federated Database Instance.
	Name   string `pulumi:"name"`
	Prefix string `pulumi:"prefix"`
	// The unique ID for the project to create a Federated Database Instance.
	ProjectId       string                                                   `pulumi:"projectId"`
	Provider        string                                                   `pulumi:"provider"`
	Public          string                                                   `pulumi:"public"`
	ReadPreferences []GetFederatedDatabaseInstanceStorageStoreReadPreference `pulumi:"readPreferences"`
	// Name of the region to which the Federanted Instnace routes client connections for data processing.
	Region string   `pulumi:"region"`
	Urls   []string `pulumi:"urls"`
}

// GetFederatedDatabaseInstanceStorageStoreInput is an input type that accepts GetFederatedDatabaseInstanceStorageStoreArgs and GetFederatedDatabaseInstanceStorageStoreOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageStoreInput` via:
//
//	GetFederatedDatabaseInstanceStorageStoreArgs{...}
type GetFederatedDatabaseInstanceStorageStoreInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageStoreOutput() GetFederatedDatabaseInstanceStorageStoreOutput
	ToGetFederatedDatabaseInstanceStorageStoreOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageStoreOutput
}

type GetFederatedDatabaseInstanceStorageStoreArgs struct {
	AdditionalStorageClasses pulumi.StringArrayInput `pulumi:"additionalStorageClasses"`
	AllowInsecure            pulumi.BoolInput        `pulumi:"allowInsecure"`
	Bucket                   pulumi.StringInput      `pulumi:"bucket"`
	// Deprecated: this parameter is deprecated and will be removed by September 2024
	ClusterId     pulumi.StringInput `pulumi:"clusterId"`
	ClusterName   pulumi.StringInput `pulumi:"clusterName"`
	DefaultFormat pulumi.StringInput `pulumi:"defaultFormat"`
	Delimiter     pulumi.StringInput `pulumi:"delimiter"`
	IncludeTags   pulumi.BoolInput   `pulumi:"includeTags"`
	// Name of the Atlas Federated Database Instance.
	Name   pulumi.StringInput `pulumi:"name"`
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// The unique ID for the project to create a Federated Database Instance.
	ProjectId       pulumi.StringInput                                               `pulumi:"projectId"`
	Provider        pulumi.StringInput                                               `pulumi:"provider"`
	Public          pulumi.StringInput                                               `pulumi:"public"`
	ReadPreferences GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayInput `pulumi:"readPreferences"`
	// Name of the region to which the Federanted Instnace routes client connections for data processing.
	Region pulumi.StringInput      `pulumi:"region"`
	Urls   pulumi.StringArrayInput `pulumi:"urls"`
}

func (GetFederatedDatabaseInstanceStorageStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStore)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageStoreArgs) ToGetFederatedDatabaseInstanceStorageStoreOutput() GetFederatedDatabaseInstanceStorageStoreOutput {
	return i.ToGetFederatedDatabaseInstanceStorageStoreOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageStoreArgs) ToGetFederatedDatabaseInstanceStorageStoreOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageStoreOutput)
}

func (i GetFederatedDatabaseInstanceStorageStoreArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageStore] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageStore]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageStoreOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstanceStorageStoreArrayInput is an input type that accepts GetFederatedDatabaseInstanceStorageStoreArray and GetFederatedDatabaseInstanceStorageStoreArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageStoreArrayInput` via:
//
//	GetFederatedDatabaseInstanceStorageStoreArray{ GetFederatedDatabaseInstanceStorageStoreArgs{...} }
type GetFederatedDatabaseInstanceStorageStoreArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageStoreArrayOutput() GetFederatedDatabaseInstanceStorageStoreArrayOutput
	ToGetFederatedDatabaseInstanceStorageStoreArrayOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageStoreArrayOutput
}

type GetFederatedDatabaseInstanceStorageStoreArray []GetFederatedDatabaseInstanceStorageStoreInput

func (GetFederatedDatabaseInstanceStorageStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageStore)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageStoreArray) ToGetFederatedDatabaseInstanceStorageStoreArrayOutput() GetFederatedDatabaseInstanceStorageStoreArrayOutput {
	return i.ToGetFederatedDatabaseInstanceStorageStoreArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageStoreArray) ToGetFederatedDatabaseInstanceStorageStoreArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageStoreArrayOutput)
}

func (i GetFederatedDatabaseInstanceStorageStoreArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageStore] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageStore]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageStoreArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstanceStorageStoreOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStore)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) ToGetFederatedDatabaseInstanceStorageStoreOutput() GetFederatedDatabaseInstanceStorageStoreOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) ToGetFederatedDatabaseInstanceStorageStoreOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageStore] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageStore]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) AdditionalStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) []string { return v.AdditionalStorageClasses }).(pulumi.StringArrayOutput)
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) AllowInsecure() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) bool { return v.AllowInsecure }).(pulumi.BoolOutput)
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) string { return v.Bucket }).(pulumi.StringOutput)
}

// Deprecated: this parameter is deprecated and will be removed by September 2024
func (o GetFederatedDatabaseInstanceStorageStoreOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) DefaultFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) string { return v.DefaultFormat }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) string { return v.Delimiter }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) IncludeTags() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) bool { return v.IncludeTags }).(pulumi.BoolOutput)
}

// Name of the Atlas Federated Database Instance.
func (o GetFederatedDatabaseInstanceStorageStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) string { return v.Prefix }).(pulumi.StringOutput)
}

// The unique ID for the project to create a Federated Database Instance.
func (o GetFederatedDatabaseInstanceStorageStoreOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) string { return v.Provider }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) Public() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) string { return v.Public }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) ReadPreferences() GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) []GetFederatedDatabaseInstanceStorageStoreReadPreference {
		return v.ReadPreferences
	}).(GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput)
}

// Name of the region to which the Federanted Instnace routes client connections for data processing.
func (o GetFederatedDatabaseInstanceStorageStoreOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageStoreOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStore) []string { return v.Urls }).(pulumi.StringArrayOutput)
}

type GetFederatedDatabaseInstanceStorageStoreArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageStore)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageStoreArrayOutput) ToGetFederatedDatabaseInstanceStorageStoreArrayOutput() GetFederatedDatabaseInstanceStorageStoreArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreArrayOutput) ToGetFederatedDatabaseInstanceStorageStoreArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageStore] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageStore]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceStorageStoreArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstanceStorageStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstanceStorageStore {
		return vs[0].([]GetFederatedDatabaseInstanceStorageStore)[vs[1].(int)]
	}).(GetFederatedDatabaseInstanceStorageStoreOutput)
}

type GetFederatedDatabaseInstanceStorageStoreReadPreference struct {
	MaxStalenessSeconds int                                                            `pulumi:"maxStalenessSeconds"`
	Mode                string                                                         `pulumi:"mode"`
	TagSets             []GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet `pulumi:"tagSets"`
}

// GetFederatedDatabaseInstanceStorageStoreReadPreferenceInput is an input type that accepts GetFederatedDatabaseInstanceStorageStoreReadPreferenceArgs and GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageStoreReadPreferenceInput` via:
//
//	GetFederatedDatabaseInstanceStorageStoreReadPreferenceArgs{...}
type GetFederatedDatabaseInstanceStorageStoreReadPreferenceInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput
	ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput
}

type GetFederatedDatabaseInstanceStorageStoreReadPreferenceArgs struct {
	MaxStalenessSeconds pulumi.IntInput                                                        `pulumi:"maxStalenessSeconds"`
	Mode                pulumi.StringInput                                                     `pulumi:"mode"`
	TagSets             GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayInput `pulumi:"tagSets"`
}

func (GetFederatedDatabaseInstanceStorageStoreReadPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStoreReadPreference)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceArgs) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput {
	return i.ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceArgs) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput)
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageStoreReadPreference] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageStoreReadPreference]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayInput is an input type that accepts GetFederatedDatabaseInstanceStorageStoreReadPreferenceArray and GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayInput` via:
//
//	GetFederatedDatabaseInstanceStorageStoreReadPreferenceArray{ GetFederatedDatabaseInstanceStorageStoreReadPreferenceArgs{...} }
type GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput
	ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput
}

type GetFederatedDatabaseInstanceStorageStoreReadPreferenceArray []GetFederatedDatabaseInstanceStorageStoreReadPreferenceInput

func (GetFederatedDatabaseInstanceStorageStoreReadPreferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageStoreReadPreference)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceArray) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput {
	return i.ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceArray) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput)
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageStoreReadPreference] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageStoreReadPreference]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStoreReadPreference)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageStoreReadPreference] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageStoreReadPreference]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput) MaxStalenessSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStoreReadPreference) int { return v.MaxStalenessSeconds }).(pulumi.IntOutput)
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStoreReadPreference) string { return v.Mode }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput) TagSets() GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStoreReadPreference) []GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet {
		return v.TagSets
	}).(GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput)
}

type GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageStoreReadPreference)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageStoreReadPreference] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageStoreReadPreference]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstanceStorageStoreReadPreference {
		return vs[0].([]GetFederatedDatabaseInstanceStorageStoreReadPreference)[vs[1].(int)]
	}).(GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput)
}

type GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet struct {
	Tags []GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag `pulumi:"tags"`
}

// GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetInput is an input type that accepts GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs and GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetInput` via:
//
//	GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs{...}
type GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput
	ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput
}

type GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs struct {
	Tags GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayInput `pulumi:"tags"`
}

func (GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput {
	return i.ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput)
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayInput is an input type that accepts GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray and GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayInput` via:
//
//	GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray{ GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs{...} }
type GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput
	ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput
}

type GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray []GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetInput

func (GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput {
	return i.ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput)
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput) Tags() GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet) []GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag {
		return v.Tags
	}).(GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput)
}

type GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet {
		return vs[0].([]GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSet)[vs[1].(int)]
	}).(GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput)
}

type GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag struct {
	// Name of the Atlas Federated Database Instance.
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagInput is an input type that accepts GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs and GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagInput` via:
//
//	GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs{...}
type GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput
	ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput
}

type GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs struct {
	// Name of the Atlas Federated Database Instance.
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput {
	return i.ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput)
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayInput is an input type that accepts GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray and GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayInput` via:
//
//	GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray{ GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs{...} }
type GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput
	ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput
}

type GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray []GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagInput

func (GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag)(nil)).Elem()
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput {
	return i.ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput)
}

func (i GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag]{
		OutputState: i.ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag] {
	return pulumix.Output[GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag]{
		OutputState: o.OutputState,
	}
}

// Name of the Atlas Federated Database Instance.
func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag)(nil)).Elem()
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput() GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput) ToGetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag] {
	return pulumix.Output[[]GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag {
		return vs[0].([]GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag)[vs[1].(int)]
	}).(GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput)
}

type GetFederatedDatabaseInstancesResult struct {
	CloudProviderConfig GetFederatedDatabaseInstancesResultCloudProviderConfig `pulumi:"cloudProviderConfig"`
	DataProcessRegions  []GetFederatedDatabaseInstancesResultDataProcessRegion `pulumi:"dataProcessRegions"`
	// The list of hostnames assigned to the Federated Database Instance. Each string in the array is a hostname assigned to the Federated Database Instance.
	Hostnames []string `pulumi:"hostnames"`
	Name      string   `pulumi:"name"`
	// The unique ID for the project to create a Federated Database Instance.
	ProjectId string `pulumi:"projectId"`
	// Current state of the Federated Database Instance:
	State string `pulumi:"state"`
	// Configuration details for mapping each data store to queryable databases and collections. For complete documentation on this object and its nested fields, see [databases](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#std-label-datalake-databases-reference). An empty object indicates that the Federated Database Instance has no mapping configuration for any data store.
	// * `storage_databases.#.name` - Name of the database to which the Federated Database Instance maps the data contained in the data store.
	// * `storage_databases.#.collections` -     Array of objects where each object represents a collection and data sources that map to a [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#mongodb-datalakeconf-datalakeconf.stores) data store.
	// * `storage_databases.#.collections.#.name` - Name of the collection.
	// * `storage_databases.#.collections.#.data_sources` -     Array of objects where each object represents a stores data store to map with the collection.
	// * `storage_databases.#.collections.#.data_sources.#.store_name` -     Name of a data store to map to the `<collection>`. Must match the name of an object in the stores array.
	// * `storage_databases.#.collections.#.data_sources.#.dataset_name` -     Human-readable label that identifies the dataset that Atlas generates for an ingestion pipeline run or Online Archive.
	// * `storage_databases.#.collections.#.data_sources.#.default_format` - Default format that Federated Database assumes if it encounters a file without an extension while searching the storeName.
	// * `storage_databases.#.collections.#.data_sources.#.path` - File path that controls how MongoDB Cloud searches for and parses files in the storeName before mapping them to a collection. Specify / to capture all files and folders from the prefix path.
	// * `storage_databases.#.collections.#.data_sources.#.database` - Human-readable label that identifies the database, which contains the collection in the cluster.
	// * `storage_databases.#.collections.#.data_sources.#.allow_insecure` - Flag that validates the scheme in the specified URLs. If true, allows insecure HTTP scheme, doesn't verify the server's certificate chain and hostname, and accepts any certificate with any hostname presented by the server. If false, allows secure HTTPS scheme only.
	// * `storage_databases.#.collections.#.data_sources.#.database_regex` - Regex pattern to use for creating the wildcard database.
	// * `storage_databases.#.collections.#.data_sources.#.collection` - Human-readable label that identifies the collection in the database.
	// * `storage_databases.#.collections.#.data_sources.#.collection_regex` - Regex pattern to use for creating the wildcard (*) collection.
	// * `storage_databases.#.collections.#.data_sources.#.provenance_field_name` - Name for the field that includes the provenance of the documents in the results.
	// * `storage_databases.#.collections.#.data_sources.#.storeName` - Human-readable label that identifies the data store that MongoDB Cloud maps to the collection.
	// * `storage_databases.#.collections.#.data_sources.#.urls` - URLs of the publicly accessible data files. You can't specify URLs that require authentication.
	// * `storage_databases.#.views` -     Array of objects where each object represents an [aggregation pipeline](https://docs.mongodb.com/manual/core/aggregation-pipeline/#id1) on a collection. To learn more about views, see [Views](https://docs.mongodb.com/manual/core/views/).
	// * `storage_databases.#.views.#.name` - Name of the view.
	// * `storage_databases.#.views.#.source` -  Name of the source collection for the view.
	// * `storage_databases.#.views.#.pipeline`- Aggregation pipeline stage(s) to apply to the source collection.
	StorageDatabases []GetFederatedDatabaseInstancesResultStorageDatabase `pulumi:"storageDatabases"`
	// Each object in the array represents a data store. Federated Database uses the storage.databases configuration details to map data in each data store to queryable databases and collections. For complete documentation on this object and its nested fields, see [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#std-label-datalake-stores-reference). An empty object indicates that the Federated Database Instance has no configured data stores.
	// * `storage_stores.#.name` - Name of the data store.
	// * `storage_stores.#.provider` - Defines where the data is stored.
	// * `storage_stores.#.region` - Name of the AWS region in which the S3 bucket is hosted.
	// * `storage_stores.#.bucket` - Name of the AWS S3 bucket.
	// * `storage_stores.#.prefix` - Prefix the Federated Database Instance applies when searching for files in the S3 bucket.
	// * `storage_stores.#.delimiter` - The delimiter that separates `storage_databases.#.collections.#.data_sources.#.path` segments in the data store.
	// * `storage_stores.#.include_tags` - Determines whether or not to use S3 tags on the files in the given path as additional partition attributes.
	// * `storage_stores.#.cluster_name` - Human-readable label of the MongoDB Cloud cluster on which the store is based.
	// * `storage_stores.#.cluster_id` - ID of the Cluster the Online Archive belongs to.
	// * `storage_stores.#.allow_insecure` - Flag that validates the scheme in the specified URLs.
	// * `storage_stores.#.public` - Flag that indicates whether the bucket is public.
	// * `storage_stores.#.default_format` - Default format that Data Lake assumes if it encounters a file without an extension while searching the storeName.
	// * `storage_stores.#.urls` - Comma-separated list of publicly accessible HTTP URLs where data is stored.
	// * `storage_stores.#.read_preference` - MongoDB Cloud cluster read preference, which describes how to route read requests to the cluster.
	// * `storage_stores.#.read_preference.maxStalenessSeconds` - Maximum replication lag, or staleness, for reads from secondaries.
	// * `storage_stores.#.read_preference.mode` - Read preference mode that specifies to which replica set member to route the read requests.
	// * `storage_stores.#.read_preference.tag_sets` - List that contains tag sets or tag specification documents.
	// * `storage_stores.#.read_preference.tags` - List of all tags within a tag set
	// * `storage_stores.#.read_preference.tags.name` - Human-readable label of the tag.
	// * `storage_stores.#.read_preference.tags.value` - Value of the tag.
	StorageStores []GetFederatedDatabaseInstancesResultStorageStore `pulumi:"storageStores"`
}

// GetFederatedDatabaseInstancesResultInput is an input type that accepts GetFederatedDatabaseInstancesResultArgs and GetFederatedDatabaseInstancesResultOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultInput` via:
//
//	GetFederatedDatabaseInstancesResultArgs{...}
type GetFederatedDatabaseInstancesResultInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultOutput() GetFederatedDatabaseInstancesResultOutput
	ToGetFederatedDatabaseInstancesResultOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultOutput
}

type GetFederatedDatabaseInstancesResultArgs struct {
	CloudProviderConfig GetFederatedDatabaseInstancesResultCloudProviderConfigInput    `pulumi:"cloudProviderConfig"`
	DataProcessRegions  GetFederatedDatabaseInstancesResultDataProcessRegionArrayInput `pulumi:"dataProcessRegions"`
	// The list of hostnames assigned to the Federated Database Instance. Each string in the array is a hostname assigned to the Federated Database Instance.
	Hostnames pulumi.StringArrayInput `pulumi:"hostnames"`
	Name      pulumi.StringInput      `pulumi:"name"`
	// The unique ID for the project to create a Federated Database Instance.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Current state of the Federated Database Instance:
	State pulumi.StringInput `pulumi:"state"`
	// Configuration details for mapping each data store to queryable databases and collections. For complete documentation on this object and its nested fields, see [databases](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#std-label-datalake-databases-reference). An empty object indicates that the Federated Database Instance has no mapping configuration for any data store.
	// * `storage_databases.#.name` - Name of the database to which the Federated Database Instance maps the data contained in the data store.
	// * `storage_databases.#.collections` -     Array of objects where each object represents a collection and data sources that map to a [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#mongodb-datalakeconf-datalakeconf.stores) data store.
	// * `storage_databases.#.collections.#.name` - Name of the collection.
	// * `storage_databases.#.collections.#.data_sources` -     Array of objects where each object represents a stores data store to map with the collection.
	// * `storage_databases.#.collections.#.data_sources.#.store_name` -     Name of a data store to map to the `<collection>`. Must match the name of an object in the stores array.
	// * `storage_databases.#.collections.#.data_sources.#.dataset_name` -     Human-readable label that identifies the dataset that Atlas generates for an ingestion pipeline run or Online Archive.
	// * `storage_databases.#.collections.#.data_sources.#.default_format` - Default format that Federated Database assumes if it encounters a file without an extension while searching the storeName.
	// * `storage_databases.#.collections.#.data_sources.#.path` - File path that controls how MongoDB Cloud searches for and parses files in the storeName before mapping them to a collection. Specify / to capture all files and folders from the prefix path.
	// * `storage_databases.#.collections.#.data_sources.#.database` - Human-readable label that identifies the database, which contains the collection in the cluster.
	// * `storage_databases.#.collections.#.data_sources.#.allow_insecure` - Flag that validates the scheme in the specified URLs. If true, allows insecure HTTP scheme, doesn't verify the server's certificate chain and hostname, and accepts any certificate with any hostname presented by the server. If false, allows secure HTTPS scheme only.
	// * `storage_databases.#.collections.#.data_sources.#.database_regex` - Regex pattern to use for creating the wildcard database.
	// * `storage_databases.#.collections.#.data_sources.#.collection` - Human-readable label that identifies the collection in the database.
	// * `storage_databases.#.collections.#.data_sources.#.collection_regex` - Regex pattern to use for creating the wildcard (*) collection.
	// * `storage_databases.#.collections.#.data_sources.#.provenance_field_name` - Name for the field that includes the provenance of the documents in the results.
	// * `storage_databases.#.collections.#.data_sources.#.storeName` - Human-readable label that identifies the data store that MongoDB Cloud maps to the collection.
	// * `storage_databases.#.collections.#.data_sources.#.urls` - URLs of the publicly accessible data files. You can't specify URLs that require authentication.
	// * `storage_databases.#.views` -     Array of objects where each object represents an [aggregation pipeline](https://docs.mongodb.com/manual/core/aggregation-pipeline/#id1) on a collection. To learn more about views, see [Views](https://docs.mongodb.com/manual/core/views/).
	// * `storage_databases.#.views.#.name` - Name of the view.
	// * `storage_databases.#.views.#.source` -  Name of the source collection for the view.
	// * `storage_databases.#.views.#.pipeline`- Aggregation pipeline stage(s) to apply to the source collection.
	StorageDatabases GetFederatedDatabaseInstancesResultStorageDatabaseArrayInput `pulumi:"storageDatabases"`
	// Each object in the array represents a data store. Federated Database uses the storage.databases configuration details to map data in each data store to queryable databases and collections. For complete documentation on this object and its nested fields, see [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#std-label-datalake-stores-reference). An empty object indicates that the Federated Database Instance has no configured data stores.
	// * `storage_stores.#.name` - Name of the data store.
	// * `storage_stores.#.provider` - Defines where the data is stored.
	// * `storage_stores.#.region` - Name of the AWS region in which the S3 bucket is hosted.
	// * `storage_stores.#.bucket` - Name of the AWS S3 bucket.
	// * `storage_stores.#.prefix` - Prefix the Federated Database Instance applies when searching for files in the S3 bucket.
	// * `storage_stores.#.delimiter` - The delimiter that separates `storage_databases.#.collections.#.data_sources.#.path` segments in the data store.
	// * `storage_stores.#.include_tags` - Determines whether or not to use S3 tags on the files in the given path as additional partition attributes.
	// * `storage_stores.#.cluster_name` - Human-readable label of the MongoDB Cloud cluster on which the store is based.
	// * `storage_stores.#.cluster_id` - ID of the Cluster the Online Archive belongs to.
	// * `storage_stores.#.allow_insecure` - Flag that validates the scheme in the specified URLs.
	// * `storage_stores.#.public` - Flag that indicates whether the bucket is public.
	// * `storage_stores.#.default_format` - Default format that Data Lake assumes if it encounters a file without an extension while searching the storeName.
	// * `storage_stores.#.urls` - Comma-separated list of publicly accessible HTTP URLs where data is stored.
	// * `storage_stores.#.read_preference` - MongoDB Cloud cluster read preference, which describes how to route read requests to the cluster.
	// * `storage_stores.#.read_preference.maxStalenessSeconds` - Maximum replication lag, or staleness, for reads from secondaries.
	// * `storage_stores.#.read_preference.mode` - Read preference mode that specifies to which replica set member to route the read requests.
	// * `storage_stores.#.read_preference.tag_sets` - List that contains tag sets or tag specification documents.
	// * `storage_stores.#.read_preference.tags` - List of all tags within a tag set
	// * `storage_stores.#.read_preference.tags.name` - Human-readable label of the tag.
	// * `storage_stores.#.read_preference.tags.value` - Value of the tag.
	StorageStores GetFederatedDatabaseInstancesResultStorageStoreArrayInput `pulumi:"storageStores"`
}

func (GetFederatedDatabaseInstancesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResult)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultArgs) ToGetFederatedDatabaseInstancesResultOutput() GetFederatedDatabaseInstancesResultOutput {
	return i.ToGetFederatedDatabaseInstancesResultOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultArgs) ToGetFederatedDatabaseInstancesResultOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultOutput)
}

func (i GetFederatedDatabaseInstancesResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResult] {
	return pulumix.Output[GetFederatedDatabaseInstancesResult]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstancesResultArrayInput is an input type that accepts GetFederatedDatabaseInstancesResultArray and GetFederatedDatabaseInstancesResultArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultArrayInput` via:
//
//	GetFederatedDatabaseInstancesResultArray{ GetFederatedDatabaseInstancesResultArgs{...} }
type GetFederatedDatabaseInstancesResultArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultArrayOutput() GetFederatedDatabaseInstancesResultArrayOutput
	ToGetFederatedDatabaseInstancesResultArrayOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultArrayOutput
}

type GetFederatedDatabaseInstancesResultArray []GetFederatedDatabaseInstancesResultInput

func (GetFederatedDatabaseInstancesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResult)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultArray) ToGetFederatedDatabaseInstancesResultArrayOutput() GetFederatedDatabaseInstancesResultArrayOutput {
	return i.ToGetFederatedDatabaseInstancesResultArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultArray) ToGetFederatedDatabaseInstancesResultArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultArrayOutput)
}

func (i GetFederatedDatabaseInstancesResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResult] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResult]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstancesResultOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResult)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultOutput) ToGetFederatedDatabaseInstancesResultOutput() GetFederatedDatabaseInstancesResultOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultOutput) ToGetFederatedDatabaseInstancesResultOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResult] {
	return pulumix.Output[GetFederatedDatabaseInstancesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultOutput) CloudProviderConfig() GetFederatedDatabaseInstancesResultCloudProviderConfigOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResult) GetFederatedDatabaseInstancesResultCloudProviderConfig {
		return v.CloudProviderConfig
	}).(GetFederatedDatabaseInstancesResultCloudProviderConfigOutput)
}

func (o GetFederatedDatabaseInstancesResultOutput) DataProcessRegions() GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResult) []GetFederatedDatabaseInstancesResultDataProcessRegion {
		return v.DataProcessRegions
	}).(GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput)
}

// The list of hostnames assigned to the Federated Database Instance. Each string in the array is a hostname assigned to the Federated Database Instance.
func (o GetFederatedDatabaseInstancesResultOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResult) []string { return v.Hostnames }).(pulumi.StringArrayOutput)
}

func (o GetFederatedDatabaseInstancesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResult) string { return v.Name }).(pulumi.StringOutput)
}

// The unique ID for the project to create a Federated Database Instance.
func (o GetFederatedDatabaseInstancesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Current state of the Federated Database Instance:
func (o GetFederatedDatabaseInstancesResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResult) string { return v.State }).(pulumi.StringOutput)
}

// Configuration details for mapping each data store to queryable databases and collections. For complete documentation on this object and its nested fields, see [databases](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#std-label-datalake-databases-reference). An empty object indicates that the Federated Database Instance has no mapping configuration for any data store.
// * `storage_databases.#.name` - Name of the database to which the Federated Database Instance maps the data contained in the data store.
// * `storage_databases.#.collections` -     Array of objects where each object represents a collection and data sources that map to a [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#mongodb-datalakeconf-datalakeconf.stores) data store.
// * `storage_databases.#.collections.#.name` - Name of the collection.
// * `storage_databases.#.collections.#.data_sources` -     Array of objects where each object represents a stores data store to map with the collection.
// * `storage_databases.#.collections.#.data_sources.#.store_name` -     Name of a data store to map to the `<collection>`. Must match the name of an object in the stores array.
// * `storage_databases.#.collections.#.data_sources.#.dataset_name` -     Human-readable label that identifies the dataset that Atlas generates for an ingestion pipeline run or Online Archive.
// * `storage_databases.#.collections.#.data_sources.#.default_format` - Default format that Federated Database assumes if it encounters a file without an extension while searching the storeName.
// * `storage_databases.#.collections.#.data_sources.#.path` - File path that controls how MongoDB Cloud searches for and parses files in the storeName before mapping them to a collection. Specify / to capture all files and folders from the prefix path.
// * `storage_databases.#.collections.#.data_sources.#.database` - Human-readable label that identifies the database, which contains the collection in the cluster.
// * `storage_databases.#.collections.#.data_sources.#.allow_insecure` - Flag that validates the scheme in the specified URLs. If true, allows insecure HTTP scheme, doesn't verify the server's certificate chain and hostname, and accepts any certificate with any hostname presented by the server. If false, allows secure HTTPS scheme only.
// * `storage_databases.#.collections.#.data_sources.#.database_regex` - Regex pattern to use for creating the wildcard database.
// * `storage_databases.#.collections.#.data_sources.#.collection` - Human-readable label that identifies the collection in the database.
// * `storage_databases.#.collections.#.data_sources.#.collection_regex` - Regex pattern to use for creating the wildcard (*) collection.
// * `storage_databases.#.collections.#.data_sources.#.provenance_field_name` - Name for the field that includes the provenance of the documents in the results.
// * `storage_databases.#.collections.#.data_sources.#.storeName` - Human-readable label that identifies the data store that MongoDB Cloud maps to the collection.
// * `storage_databases.#.collections.#.data_sources.#.urls` - URLs of the publicly accessible data files. You can't specify URLs that require authentication.
// * `storage_databases.#.views` -     Array of objects where each object represents an [aggregation pipeline](https://docs.mongodb.com/manual/core/aggregation-pipeline/#id1) on a collection. To learn more about views, see [Views](https://docs.mongodb.com/manual/core/views/).
// * `storage_databases.#.views.#.name` - Name of the view.
// * `storage_databases.#.views.#.source` -  Name of the source collection for the view.
// * `storage_databases.#.views.#.pipeline`- Aggregation pipeline stage(s) to apply to the source collection.
func (o GetFederatedDatabaseInstancesResultOutput) StorageDatabases() GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResult) []GetFederatedDatabaseInstancesResultStorageDatabase {
		return v.StorageDatabases
	}).(GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput)
}

// Each object in the array represents a data store. Federated Database uses the storage.databases configuration details to map data in each data store to queryable databases and collections. For complete documentation on this object and its nested fields, see [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#std-label-datalake-stores-reference). An empty object indicates that the Federated Database Instance has no configured data stores.
// * `storage_stores.#.name` - Name of the data store.
// * `storage_stores.#.provider` - Defines where the data is stored.
// * `storage_stores.#.region` - Name of the AWS region in which the S3 bucket is hosted.
// * `storage_stores.#.bucket` - Name of the AWS S3 bucket.
// * `storage_stores.#.prefix` - Prefix the Federated Database Instance applies when searching for files in the S3 bucket.
// * `storage_stores.#.delimiter` - The delimiter that separates `storage_databases.#.collections.#.data_sources.#.path` segments in the data store.
// * `storage_stores.#.include_tags` - Determines whether or not to use S3 tags on the files in the given path as additional partition attributes.
// * `storage_stores.#.cluster_name` - Human-readable label of the MongoDB Cloud cluster on which the store is based.
// * `storage_stores.#.cluster_id` - ID of the Cluster the Online Archive belongs to.
// * `storage_stores.#.allow_insecure` - Flag that validates the scheme in the specified URLs.
// * `storage_stores.#.public` - Flag that indicates whether the bucket is public.
// * `storage_stores.#.default_format` - Default format that Data Lake assumes if it encounters a file without an extension while searching the storeName.
// * `storage_stores.#.urls` - Comma-separated list of publicly accessible HTTP URLs where data is stored.
// * `storage_stores.#.read_preference` - MongoDB Cloud cluster read preference, which describes how to route read requests to the cluster.
// * `storage_stores.#.read_preference.maxStalenessSeconds` - Maximum replication lag, or staleness, for reads from secondaries.
// * `storage_stores.#.read_preference.mode` - Read preference mode that specifies to which replica set member to route the read requests.
// * `storage_stores.#.read_preference.tag_sets` - List that contains tag sets or tag specification documents.
// * `storage_stores.#.read_preference.tags` - List of all tags within a tag set
// * `storage_stores.#.read_preference.tags.name` - Human-readable label of the tag.
// * `storage_stores.#.read_preference.tags.value` - Value of the tag.
func (o GetFederatedDatabaseInstancesResultOutput) StorageStores() GetFederatedDatabaseInstancesResultStorageStoreArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResult) []GetFederatedDatabaseInstancesResultStorageStore {
		return v.StorageStores
	}).(GetFederatedDatabaseInstancesResultStorageStoreArrayOutput)
}

type GetFederatedDatabaseInstancesResultArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResult)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultArrayOutput) ToGetFederatedDatabaseInstancesResultArrayOutput() GetFederatedDatabaseInstancesResultArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultArrayOutput) ToGetFederatedDatabaseInstancesResultArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResult] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstancesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstancesResult {
		return vs[0].([]GetFederatedDatabaseInstancesResult)[vs[1].(int)]
	}).(GetFederatedDatabaseInstancesResultOutput)
}

type GetFederatedDatabaseInstancesResultCloudProviderConfig struct {
	Aws GetFederatedDatabaseInstancesResultCloudProviderConfigAws `pulumi:"aws"`
}

// GetFederatedDatabaseInstancesResultCloudProviderConfigInput is an input type that accepts GetFederatedDatabaseInstancesResultCloudProviderConfigArgs and GetFederatedDatabaseInstancesResultCloudProviderConfigOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultCloudProviderConfigInput` via:
//
//	GetFederatedDatabaseInstancesResultCloudProviderConfigArgs{...}
type GetFederatedDatabaseInstancesResultCloudProviderConfigInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultCloudProviderConfigOutput() GetFederatedDatabaseInstancesResultCloudProviderConfigOutput
	ToGetFederatedDatabaseInstancesResultCloudProviderConfigOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultCloudProviderConfigOutput
}

type GetFederatedDatabaseInstancesResultCloudProviderConfigArgs struct {
	Aws GetFederatedDatabaseInstancesResultCloudProviderConfigAwsInput `pulumi:"aws"`
}

func (GetFederatedDatabaseInstancesResultCloudProviderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultCloudProviderConfig)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultCloudProviderConfigArgs) ToGetFederatedDatabaseInstancesResultCloudProviderConfigOutput() GetFederatedDatabaseInstancesResultCloudProviderConfigOutput {
	return i.ToGetFederatedDatabaseInstancesResultCloudProviderConfigOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultCloudProviderConfigArgs) ToGetFederatedDatabaseInstancesResultCloudProviderConfigOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultCloudProviderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultCloudProviderConfigOutput)
}

func (i GetFederatedDatabaseInstancesResultCloudProviderConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultCloudProviderConfig] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultCloudProviderConfig]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultCloudProviderConfigOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstancesResultCloudProviderConfigOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultCloudProviderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultCloudProviderConfig)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultCloudProviderConfigOutput) ToGetFederatedDatabaseInstancesResultCloudProviderConfigOutput() GetFederatedDatabaseInstancesResultCloudProviderConfigOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultCloudProviderConfigOutput) ToGetFederatedDatabaseInstancesResultCloudProviderConfigOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultCloudProviderConfigOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultCloudProviderConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultCloudProviderConfig] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultCloudProviderConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultCloudProviderConfigOutput) Aws() GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultCloudProviderConfig) GetFederatedDatabaseInstancesResultCloudProviderConfigAws {
		return v.Aws
	}).(GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput)
}

type GetFederatedDatabaseInstancesResultCloudProviderConfigAws struct {
	// Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
	ExternalId string `pulumi:"externalId"`
	// Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
	// * `s3:GetObject`
	// * `s3:ListBucket`
	// * `s3:GetObjectVersion`
	IamAssumedRoleArn string `pulumi:"iamAssumedRoleArn"`
	// Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
	IamUserArn string `pulumi:"iamUserArn"`
	// Unique identifier of the role that the data lake can use to access the data stores.
	// #### `dataProcessRegion` - The cloud provider region to which the Federated Instance routes client connections for data processing.
	RoleId       string `pulumi:"roleId"`
	TestS3Bucket string `pulumi:"testS3Bucket"`
}

// GetFederatedDatabaseInstancesResultCloudProviderConfigAwsInput is an input type that accepts GetFederatedDatabaseInstancesResultCloudProviderConfigAwsArgs and GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultCloudProviderConfigAwsInput` via:
//
//	GetFederatedDatabaseInstancesResultCloudProviderConfigAwsArgs{...}
type GetFederatedDatabaseInstancesResultCloudProviderConfigAwsInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput() GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput
	ToGetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput
}

type GetFederatedDatabaseInstancesResultCloudProviderConfigAwsArgs struct {
	// Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
	// * `s3:GetObject`
	// * `s3:ListBucket`
	// * `s3:GetObjectVersion`
	IamAssumedRoleArn pulumi.StringInput `pulumi:"iamAssumedRoleArn"`
	// Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
	IamUserArn pulumi.StringInput `pulumi:"iamUserArn"`
	// Unique identifier of the role that the data lake can use to access the data stores.
	// #### `dataProcessRegion` - The cloud provider region to which the Federated Instance routes client connections for data processing.
	RoleId       pulumi.StringInput `pulumi:"roleId"`
	TestS3Bucket pulumi.StringInput `pulumi:"testS3Bucket"`
}

func (GetFederatedDatabaseInstancesResultCloudProviderConfigAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultCloudProviderConfigAws)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultCloudProviderConfigAwsArgs) ToGetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput() GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput {
	return i.ToGetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultCloudProviderConfigAwsArgs) ToGetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput)
}

func (i GetFederatedDatabaseInstancesResultCloudProviderConfigAwsArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultCloudProviderConfigAws] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultCloudProviderConfigAws]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultCloudProviderConfigAws)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput) ToGetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput() GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput) ToGetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultCloudProviderConfigAws] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultCloudProviderConfigAws]{
		OutputState: o.OutputState,
	}
}

// Unique identifier associated with the IAM Role that the Federated Database Instance assumes when accessing the data stores.
func (o GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultCloudProviderConfigAws) string { return v.ExternalId }).(pulumi.StringOutput)
}

// Amazon Resource Name (ARN) of the IAM Role that the Federated Database Instance assumes when accessing S3 Bucket data stores. The IAM Role must support the following actions against each S3 bucket:
// * `s3:GetObject`
// * `s3:ListBucket`
// * `s3:GetObjectVersion`
func (o GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput) IamAssumedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultCloudProviderConfigAws) string { return v.IamAssumedRoleArn }).(pulumi.StringOutput)
}

// Amazon Resource Name (ARN) of the user that the Federated Database Instance assumes when accessing S3 Bucket data stores.
func (o GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput) IamUserArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultCloudProviderConfigAws) string { return v.IamUserArn }).(pulumi.StringOutput)
}

// Unique identifier of the role that the data lake can use to access the data stores.
// #### `dataProcessRegion` - The cloud provider region to which the Federated Instance routes client connections for data processing.
func (o GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultCloudProviderConfigAws) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput) TestS3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultCloudProviderConfigAws) string { return v.TestS3Bucket }).(pulumi.StringOutput)
}

type GetFederatedDatabaseInstancesResultDataProcessRegion struct {
	// Name of the cloud service provider. Atlas Federated Database only supports AWS.
	CloudProvider string `pulumi:"cloudProvider"`
	// Name of the region to which the Federanted Instnace routes client connections for data processing.
	Region string `pulumi:"region"`
}

// GetFederatedDatabaseInstancesResultDataProcessRegionInput is an input type that accepts GetFederatedDatabaseInstancesResultDataProcessRegionArgs and GetFederatedDatabaseInstancesResultDataProcessRegionOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultDataProcessRegionInput` via:
//
//	GetFederatedDatabaseInstancesResultDataProcessRegionArgs{...}
type GetFederatedDatabaseInstancesResultDataProcessRegionInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultDataProcessRegionOutput() GetFederatedDatabaseInstancesResultDataProcessRegionOutput
	ToGetFederatedDatabaseInstancesResultDataProcessRegionOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultDataProcessRegionOutput
}

type GetFederatedDatabaseInstancesResultDataProcessRegionArgs struct {
	// Name of the cloud service provider. Atlas Federated Database only supports AWS.
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// Name of the region to which the Federanted Instnace routes client connections for data processing.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetFederatedDatabaseInstancesResultDataProcessRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultDataProcessRegion)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultDataProcessRegionArgs) ToGetFederatedDatabaseInstancesResultDataProcessRegionOutput() GetFederatedDatabaseInstancesResultDataProcessRegionOutput {
	return i.ToGetFederatedDatabaseInstancesResultDataProcessRegionOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultDataProcessRegionArgs) ToGetFederatedDatabaseInstancesResultDataProcessRegionOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultDataProcessRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultDataProcessRegionOutput)
}

func (i GetFederatedDatabaseInstancesResultDataProcessRegionArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultDataProcessRegion] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultDataProcessRegion]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultDataProcessRegionOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstancesResultDataProcessRegionArrayInput is an input type that accepts GetFederatedDatabaseInstancesResultDataProcessRegionArray and GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultDataProcessRegionArrayInput` via:
//
//	GetFederatedDatabaseInstancesResultDataProcessRegionArray{ GetFederatedDatabaseInstancesResultDataProcessRegionArgs{...} }
type GetFederatedDatabaseInstancesResultDataProcessRegionArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput() GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput
	ToGetFederatedDatabaseInstancesResultDataProcessRegionArrayOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput
}

type GetFederatedDatabaseInstancesResultDataProcessRegionArray []GetFederatedDatabaseInstancesResultDataProcessRegionInput

func (GetFederatedDatabaseInstancesResultDataProcessRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultDataProcessRegion)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultDataProcessRegionArray) ToGetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput() GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput {
	return i.ToGetFederatedDatabaseInstancesResultDataProcessRegionArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultDataProcessRegionArray) ToGetFederatedDatabaseInstancesResultDataProcessRegionArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput)
}

func (i GetFederatedDatabaseInstancesResultDataProcessRegionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultDataProcessRegion] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultDataProcessRegion]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultDataProcessRegionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstancesResultDataProcessRegionOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultDataProcessRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultDataProcessRegion)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultDataProcessRegionOutput) ToGetFederatedDatabaseInstancesResultDataProcessRegionOutput() GetFederatedDatabaseInstancesResultDataProcessRegionOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultDataProcessRegionOutput) ToGetFederatedDatabaseInstancesResultDataProcessRegionOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultDataProcessRegionOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultDataProcessRegionOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultDataProcessRegion] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultDataProcessRegion]{
		OutputState: o.OutputState,
	}
}

// Name of the cloud service provider. Atlas Federated Database only supports AWS.
func (o GetFederatedDatabaseInstancesResultDataProcessRegionOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultDataProcessRegion) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// Name of the region to which the Federanted Instnace routes client connections for data processing.
func (o GetFederatedDatabaseInstancesResultDataProcessRegionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultDataProcessRegion) string { return v.Region }).(pulumi.StringOutput)
}

type GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultDataProcessRegion)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput) ToGetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput() GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput) ToGetFederatedDatabaseInstancesResultDataProcessRegionArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultDataProcessRegion] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultDataProcessRegion]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstancesResultDataProcessRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstancesResultDataProcessRegion {
		return vs[0].([]GetFederatedDatabaseInstancesResultDataProcessRegion)[vs[1].(int)]
	}).(GetFederatedDatabaseInstancesResultDataProcessRegionOutput)
}

type GetFederatedDatabaseInstancesResultStorageDatabase struct {
	Collections            []GetFederatedDatabaseInstancesResultStorageDatabaseCollection `pulumi:"collections"`
	MaxWildcardCollections int                                                            `pulumi:"maxWildcardCollections"`
	Name                   string                                                         `pulumi:"name"`
	Views                  []GetFederatedDatabaseInstancesResultStorageDatabaseView       `pulumi:"views"`
}

// GetFederatedDatabaseInstancesResultStorageDatabaseInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageDatabaseArgs and GetFederatedDatabaseInstancesResultStorageDatabaseOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageDatabaseInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageDatabaseArgs{...}
type GetFederatedDatabaseInstancesResultStorageDatabaseInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageDatabaseOutput() GetFederatedDatabaseInstancesResultStorageDatabaseOutput
	ToGetFederatedDatabaseInstancesResultStorageDatabaseOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseOutput
}

type GetFederatedDatabaseInstancesResultStorageDatabaseArgs struct {
	Collections            GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayInput `pulumi:"collections"`
	MaxWildcardCollections pulumi.IntInput                                                        `pulumi:"maxWildcardCollections"`
	Name                   pulumi.StringInput                                                     `pulumi:"name"`
	Views                  GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayInput       `pulumi:"views"`
}

func (GetFederatedDatabaseInstancesResultStorageDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabase)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseArgs) ToGetFederatedDatabaseInstancesResultStorageDatabaseOutput() GetFederatedDatabaseInstancesResultStorageDatabaseOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageDatabaseOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseArgs) ToGetFederatedDatabaseInstancesResultStorageDatabaseOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageDatabaseOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabase] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabase]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageDatabaseOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstancesResultStorageDatabaseArrayInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageDatabaseArray and GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageDatabaseArrayInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageDatabaseArray{ GetFederatedDatabaseInstancesResultStorageDatabaseArgs{...} }
type GetFederatedDatabaseInstancesResultStorageDatabaseArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput() GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput
	ToGetFederatedDatabaseInstancesResultStorageDatabaseArrayOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput
}

type GetFederatedDatabaseInstancesResultStorageDatabaseArray []GetFederatedDatabaseInstancesResultStorageDatabaseInput

func (GetFederatedDatabaseInstancesResultStorageDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageDatabase)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseArray) ToGetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput() GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageDatabaseArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseArray) ToGetFederatedDatabaseInstancesResultStorageDatabaseArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabase] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabase]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageDatabaseArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstancesResultStorageDatabaseOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabase)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseOutput() GetFederatedDatabaseInstancesResultStorageDatabaseOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabase] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabase]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseOutput) Collections() GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabase) []GetFederatedDatabaseInstancesResultStorageDatabaseCollection {
		return v.Collections
	}).(GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseOutput) MaxWildcardCollections() pulumi.IntOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabase) int { return v.MaxWildcardCollections }).(pulumi.IntOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabase) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseOutput) Views() GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabase) []GetFederatedDatabaseInstancesResultStorageDatabaseView {
		return v.Views
	}).(GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput)
}

type GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageDatabase)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput() GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabase] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabase]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstancesResultStorageDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstancesResultStorageDatabase {
		return vs[0].([]GetFederatedDatabaseInstancesResultStorageDatabase)[vs[1].(int)]
	}).(GetFederatedDatabaseInstancesResultStorageDatabaseOutput)
}

type GetFederatedDatabaseInstancesResultStorageDatabaseCollection struct {
	DataSources []GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource `pulumi:"dataSources"`
	Name        string                                                                   `pulumi:"name"`
}

// GetFederatedDatabaseInstancesResultStorageDatabaseCollectionInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArgs and GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageDatabaseCollectionInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArgs{...}
type GetFederatedDatabaseInstancesResultStorageDatabaseCollectionInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput() GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput
	ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput
}

type GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArgs struct {
	DataSources GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayInput `pulumi:"dataSources"`
	Name        pulumi.StringInput                                                               `pulumi:"name"`
}

func (GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabaseCollection)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArgs) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput() GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArgs) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabaseCollection] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabaseCollection]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArray and GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArray{ GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArgs{...} }
type GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput() GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput
	ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput
}

type GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArray []GetFederatedDatabaseInstancesResultStorageDatabaseCollectionInput

func (GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageDatabaseCollection)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArray) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput() GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArray) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabaseCollection] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabaseCollection]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabaseCollection)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput() GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabaseCollection] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabaseCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput) DataSources() GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseCollection) []GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource {
		return v.DataSources
	}).(GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseCollection) string { return v.Name }).(pulumi.StringOutput)
}

type GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageDatabaseCollection)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput() GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabaseCollection] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabaseCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstancesResultStorageDatabaseCollection {
		return vs[0].([]GetFederatedDatabaseInstancesResultStorageDatabaseCollection)[vs[1].(int)]
	}).(GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput)
}

type GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource struct {
	AllowInsecure       bool     `pulumi:"allowInsecure"`
	Collection          string   `pulumi:"collection"`
	CollectionRegex     string   `pulumi:"collectionRegex"`
	Database            string   `pulumi:"database"`
	DatabaseRegex       string   `pulumi:"databaseRegex"`
	DatasetName         string   `pulumi:"datasetName"`
	DefaultFormat       string   `pulumi:"defaultFormat"`
	Path                string   `pulumi:"path"`
	ProvenanceFieldName string   `pulumi:"provenanceFieldName"`
	StoreName           string   `pulumi:"storeName"`
	Urls                []string `pulumi:"urls"`
}

// GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArgs and GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArgs{...}
type GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput() GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput
	ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput
}

type GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArgs struct {
	AllowInsecure       pulumi.BoolInput        `pulumi:"allowInsecure"`
	Collection          pulumi.StringInput      `pulumi:"collection"`
	CollectionRegex     pulumi.StringInput      `pulumi:"collectionRegex"`
	Database            pulumi.StringInput      `pulumi:"database"`
	DatabaseRegex       pulumi.StringInput      `pulumi:"databaseRegex"`
	DatasetName         pulumi.StringInput      `pulumi:"datasetName"`
	DefaultFormat       pulumi.StringInput      `pulumi:"defaultFormat"`
	Path                pulumi.StringInput      `pulumi:"path"`
	ProvenanceFieldName pulumi.StringInput      `pulumi:"provenanceFieldName"`
	StoreName           pulumi.StringInput      `pulumi:"storeName"`
	Urls                pulumi.StringArrayInput `pulumi:"urls"`
}

func (GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArgs) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput() GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArgs) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArray and GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArray{ GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArgs{...} }
type GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput() GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput
	ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput
}

type GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArray []GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceInput

func (GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArray) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput() GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArray) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput() GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) AllowInsecure() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource) bool {
		return v.AllowInsecure
	}).(pulumi.BoolOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource) string {
		return v.Collection
	}).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) CollectionRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource) string {
		return v.CollectionRegex
	}).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource) string {
		return v.Database
	}).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) DatabaseRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource) string {
		return v.DatabaseRegex
	}).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) DatasetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource) string {
		return v.DatasetName
	}).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) DefaultFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource) string {
		return v.DefaultFormat
	}).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) ProvenanceFieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource) string {
		return v.ProvenanceFieldName
	}).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource) string {
		return v.StoreName
	}).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource) []string { return v.Urls }).(pulumi.StringArrayOutput)
}

type GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput() GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource {
		return vs[0].([]GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSource)[vs[1].(int)]
	}).(GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput)
}

type GetFederatedDatabaseInstancesResultStorageDatabaseView struct {
	Name     string `pulumi:"name"`
	Pipeline string `pulumi:"pipeline"`
	Source   string `pulumi:"source"`
}

// GetFederatedDatabaseInstancesResultStorageDatabaseViewInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageDatabaseViewArgs and GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageDatabaseViewInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageDatabaseViewArgs{...}
type GetFederatedDatabaseInstancesResultStorageDatabaseViewInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageDatabaseViewOutput() GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput
	ToGetFederatedDatabaseInstancesResultStorageDatabaseViewOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput
}

type GetFederatedDatabaseInstancesResultStorageDatabaseViewArgs struct {
	Name     pulumi.StringInput `pulumi:"name"`
	Pipeline pulumi.StringInput `pulumi:"pipeline"`
	Source   pulumi.StringInput `pulumi:"source"`
}

func (GetFederatedDatabaseInstancesResultStorageDatabaseViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabaseView)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseViewArgs) ToGetFederatedDatabaseInstancesResultStorageDatabaseViewOutput() GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageDatabaseViewOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseViewArgs) ToGetFederatedDatabaseInstancesResultStorageDatabaseViewOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseViewArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabaseView] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabaseView]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageDatabaseViewOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageDatabaseViewArray and GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageDatabaseViewArray{ GetFederatedDatabaseInstancesResultStorageDatabaseViewArgs{...} }
type GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput() GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput
	ToGetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput
}

type GetFederatedDatabaseInstancesResultStorageDatabaseViewArray []GetFederatedDatabaseInstancesResultStorageDatabaseViewInput

func (GetFederatedDatabaseInstancesResultStorageDatabaseViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageDatabaseView)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseViewArray) ToGetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput() GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseViewArray) ToGetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageDatabaseViewArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabaseView] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabaseView]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabaseView)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseViewOutput() GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseViewOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabaseView] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageDatabaseView]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseView) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput) Pipeline() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseView) string { return v.Pipeline }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageDatabaseView) string { return v.Source }).(pulumi.StringOutput)
}

type GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageDatabaseView)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput() GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput) ToGetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabaseView] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageDatabaseView]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstancesResultStorageDatabaseView {
		return vs[0].([]GetFederatedDatabaseInstancesResultStorageDatabaseView)[vs[1].(int)]
	}).(GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput)
}

type GetFederatedDatabaseInstancesResultStorageStore struct {
	AdditionalStorageClasses []string `pulumi:"additionalStorageClasses"`
	AllowInsecure            bool     `pulumi:"allowInsecure"`
	Bucket                   string   `pulumi:"bucket"`
	// Deprecated: this parameter is deprecated and will be removed by September 2024
	ClusterId     string `pulumi:"clusterId"`
	ClusterName   string `pulumi:"clusterName"`
	DefaultFormat string `pulumi:"defaultFormat"`
	Delimiter     string `pulumi:"delimiter"`
	IncludeTags   bool   `pulumi:"includeTags"`
	Name          string `pulumi:"name"`
	Prefix        string `pulumi:"prefix"`
	// The unique ID for the project to create a Federated Database Instance.
	ProjectId       string                                                          `pulumi:"projectId"`
	Provider        string                                                          `pulumi:"provider"`
	Public          string                                                          `pulumi:"public"`
	ReadPreferences []GetFederatedDatabaseInstancesResultStorageStoreReadPreference `pulumi:"readPreferences"`
	// Name of the region to which the Federanted Instnace routes client connections for data processing.
	Region string   `pulumi:"region"`
	Urls   []string `pulumi:"urls"`
}

// GetFederatedDatabaseInstancesResultStorageStoreInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageStoreArgs and GetFederatedDatabaseInstancesResultStorageStoreOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageStoreInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageStoreArgs{...}
type GetFederatedDatabaseInstancesResultStorageStoreInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageStoreOutput() GetFederatedDatabaseInstancesResultStorageStoreOutput
	ToGetFederatedDatabaseInstancesResultStorageStoreOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageStoreOutput
}

type GetFederatedDatabaseInstancesResultStorageStoreArgs struct {
	AdditionalStorageClasses pulumi.StringArrayInput `pulumi:"additionalStorageClasses"`
	AllowInsecure            pulumi.BoolInput        `pulumi:"allowInsecure"`
	Bucket                   pulumi.StringInput      `pulumi:"bucket"`
	// Deprecated: this parameter is deprecated and will be removed by September 2024
	ClusterId     pulumi.StringInput `pulumi:"clusterId"`
	ClusterName   pulumi.StringInput `pulumi:"clusterName"`
	DefaultFormat pulumi.StringInput `pulumi:"defaultFormat"`
	Delimiter     pulumi.StringInput `pulumi:"delimiter"`
	IncludeTags   pulumi.BoolInput   `pulumi:"includeTags"`
	Name          pulumi.StringInput `pulumi:"name"`
	Prefix        pulumi.StringInput `pulumi:"prefix"`
	// The unique ID for the project to create a Federated Database Instance.
	ProjectId       pulumi.StringInput                                                      `pulumi:"projectId"`
	Provider        pulumi.StringInput                                                      `pulumi:"provider"`
	Public          pulumi.StringInput                                                      `pulumi:"public"`
	ReadPreferences GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayInput `pulumi:"readPreferences"`
	// Name of the region to which the Federanted Instnace routes client connections for data processing.
	Region pulumi.StringInput      `pulumi:"region"`
	Urls   pulumi.StringArrayInput `pulumi:"urls"`
}

func (GetFederatedDatabaseInstancesResultStorageStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStore)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageStoreArgs) ToGetFederatedDatabaseInstancesResultStorageStoreOutput() GetFederatedDatabaseInstancesResultStorageStoreOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageStoreOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageStoreArgs) ToGetFederatedDatabaseInstancesResultStorageStoreOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageStoreOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageStoreArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageStore] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageStore]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageStoreOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstancesResultStorageStoreArrayInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageStoreArray and GetFederatedDatabaseInstancesResultStorageStoreArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageStoreArrayInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageStoreArray{ GetFederatedDatabaseInstancesResultStorageStoreArgs{...} }
type GetFederatedDatabaseInstancesResultStorageStoreArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageStoreArrayOutput() GetFederatedDatabaseInstancesResultStorageStoreArrayOutput
	ToGetFederatedDatabaseInstancesResultStorageStoreArrayOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageStoreArrayOutput
}

type GetFederatedDatabaseInstancesResultStorageStoreArray []GetFederatedDatabaseInstancesResultStorageStoreInput

func (GetFederatedDatabaseInstancesResultStorageStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageStore)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageStoreArray) ToGetFederatedDatabaseInstancesResultStorageStoreArrayOutput() GetFederatedDatabaseInstancesResultStorageStoreArrayOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageStoreArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageStoreArray) ToGetFederatedDatabaseInstancesResultStorageStoreArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageStoreArrayOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageStoreArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStore] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStore]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageStoreArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstancesResultStorageStoreOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStore)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) ToGetFederatedDatabaseInstancesResultStorageStoreOutput() GetFederatedDatabaseInstancesResultStorageStoreOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) ToGetFederatedDatabaseInstancesResultStorageStoreOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageStore] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageStore]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) AdditionalStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) []string { return v.AdditionalStorageClasses }).(pulumi.StringArrayOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) AllowInsecure() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) bool { return v.AllowInsecure }).(pulumi.BoolOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) string { return v.Bucket }).(pulumi.StringOutput)
}

// Deprecated: this parameter is deprecated and will be removed by September 2024
func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) DefaultFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) string { return v.DefaultFormat }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) string { return v.Delimiter }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) IncludeTags() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) bool { return v.IncludeTags }).(pulumi.BoolOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) string { return v.Prefix }).(pulumi.StringOutput)
}

// The unique ID for the project to create a Federated Database Instance.
func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) string { return v.Provider }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) Public() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) string { return v.Public }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) ReadPreferences() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) []GetFederatedDatabaseInstancesResultStorageStoreReadPreference {
		return v.ReadPreferences
	}).(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput)
}

// Name of the region to which the Federanted Instnace routes client connections for data processing.
func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStore) []string { return v.Urls }).(pulumi.StringArrayOutput)
}

type GetFederatedDatabaseInstancesResultStorageStoreArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageStore)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageStoreArrayOutput) ToGetFederatedDatabaseInstancesResultStorageStoreArrayOutput() GetFederatedDatabaseInstancesResultStorageStoreArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreArrayOutput) ToGetFederatedDatabaseInstancesResultStorageStoreArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStore] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStore]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageStoreArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstancesResultStorageStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstancesResultStorageStore {
		return vs[0].([]GetFederatedDatabaseInstancesResultStorageStore)[vs[1].(int)]
	}).(GetFederatedDatabaseInstancesResultStorageStoreOutput)
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreference struct {
	MaxStalenessSeconds int                                                                   `pulumi:"maxStalenessSeconds"`
	Mode                string                                                                `pulumi:"mode"`
	TagSets             []GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet `pulumi:"tagSets"`
}

// GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArgs and GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArgs{...}
type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput
	ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArgs struct {
	MaxStalenessSeconds pulumi.IntInput                                                               `pulumi:"maxStalenessSeconds"`
	Mode                pulumi.StringInput                                                            `pulumi:"mode"`
	TagSets             GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayInput `pulumi:"tagSets"`
}

func (GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStoreReadPreference)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArgs) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArgs) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageStoreReadPreference] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageStoreReadPreference]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArray and GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArray{ GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArgs{...} }
type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput
	ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArray []GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceInput

func (GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageStoreReadPreference)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArray) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArray) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStoreReadPreference] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStoreReadPreference]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStoreReadPreference)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageStoreReadPreference] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageStoreReadPreference]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput) MaxStalenessSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStoreReadPreference) int {
		return v.MaxStalenessSeconds
	}).(pulumi.IntOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStoreReadPreference) string { return v.Mode }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput) TagSets() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStoreReadPreference) []GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet {
		return v.TagSets
	}).(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput)
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageStoreReadPreference)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStoreReadPreference] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStoreReadPreference]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstancesResultStorageStoreReadPreference {
		return vs[0].([]GetFederatedDatabaseInstancesResultStorageStoreReadPreference)[vs[1].(int)]
	}).(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput)
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet struct {
	Tags []GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag `pulumi:"tags"`
}

// GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArgs and GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArgs{...}
type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput
	ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArgs struct {
	Tags GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayInput `pulumi:"tags"`
}

func (GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArgs) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArgs) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArray and GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArray{ GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArgs{...} }
type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput
	ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArray []GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetInput

func (GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArray) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArray) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput) Tags() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet) []GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag {
		return v.Tags
	}).(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput)
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet {
		return vs[0].([]GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSet)[vs[1].(int)]
	}).(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput)
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArgs and GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArgs{...}
type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput
	ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArgs) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArgs) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayInput is an input type that accepts GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArray and GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput values.
// You can construct a concrete instance of `GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayInput` via:
//
//	GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArray{ GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArgs{...} }
type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayInput interface {
	pulumi.Input

	ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput
	ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArray []GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagInput

func (GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag)(nil)).Elem()
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArray) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput {
	return i.ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(context.Background())
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArray) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput)
}

func (i GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag]{
		OutputState: i.ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag] {
	return pulumix.Output[GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag)(nil)).Elem()
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput() GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput) ToGetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutputWithContext(ctx context.Context) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput {
	return o
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag] {
	return pulumix.Output[[]GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput) Index(i pulumi.IntInput) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag {
		return vs[0].([]GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTag)[vs[1].(int)]
	}).(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput)
}

type GetFederatedQueryLimitsResult struct {
	// Amount that indicates the current usage of the limit.
	CurrentUsage int `pulumi:"currentUsage"`
	// Default value of the limit.
	DefaultLimit     int    `pulumi:"defaultLimit"`
	LastModifiedDate string `pulumi:"lastModifiedDate"`
	LimitName        string `pulumi:"limitName"`
	MaximumLimit     int    `pulumi:"maximumLimit"`
	OverrunPolicy    string `pulumi:"overrunPolicy"`
	// The unique ID for the project to create a Federated Database Instance.
	ProjectId string `pulumi:"projectId"`
	// Name of the Atlas Federated Database Instance.
	TenantName string `pulumi:"tenantName"`
	Value      int    `pulumi:"value"`
}

// GetFederatedQueryLimitsResultInput is an input type that accepts GetFederatedQueryLimitsResultArgs and GetFederatedQueryLimitsResultOutput values.
// You can construct a concrete instance of `GetFederatedQueryLimitsResultInput` via:
//
//	GetFederatedQueryLimitsResultArgs{...}
type GetFederatedQueryLimitsResultInput interface {
	pulumi.Input

	ToGetFederatedQueryLimitsResultOutput() GetFederatedQueryLimitsResultOutput
	ToGetFederatedQueryLimitsResultOutputWithContext(context.Context) GetFederatedQueryLimitsResultOutput
}

type GetFederatedQueryLimitsResultArgs struct {
	// Amount that indicates the current usage of the limit.
	CurrentUsage pulumi.IntInput `pulumi:"currentUsage"`
	// Default value of the limit.
	DefaultLimit     pulumi.IntInput    `pulumi:"defaultLimit"`
	LastModifiedDate pulumi.StringInput `pulumi:"lastModifiedDate"`
	LimitName        pulumi.StringInput `pulumi:"limitName"`
	MaximumLimit     pulumi.IntInput    `pulumi:"maximumLimit"`
	OverrunPolicy    pulumi.StringInput `pulumi:"overrunPolicy"`
	// The unique ID for the project to create a Federated Database Instance.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Name of the Atlas Federated Database Instance.
	TenantName pulumi.StringInput `pulumi:"tenantName"`
	Value      pulumi.IntInput    `pulumi:"value"`
}

func (GetFederatedQueryLimitsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedQueryLimitsResult)(nil)).Elem()
}

func (i GetFederatedQueryLimitsResultArgs) ToGetFederatedQueryLimitsResultOutput() GetFederatedQueryLimitsResultOutput {
	return i.ToGetFederatedQueryLimitsResultOutputWithContext(context.Background())
}

func (i GetFederatedQueryLimitsResultArgs) ToGetFederatedQueryLimitsResultOutputWithContext(ctx context.Context) GetFederatedQueryLimitsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedQueryLimitsResultOutput)
}

func (i GetFederatedQueryLimitsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedQueryLimitsResult] {
	return pulumix.Output[GetFederatedQueryLimitsResult]{
		OutputState: i.ToGetFederatedQueryLimitsResultOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedQueryLimitsResultArrayInput is an input type that accepts GetFederatedQueryLimitsResultArray and GetFederatedQueryLimitsResultArrayOutput values.
// You can construct a concrete instance of `GetFederatedQueryLimitsResultArrayInput` via:
//
//	GetFederatedQueryLimitsResultArray{ GetFederatedQueryLimitsResultArgs{...} }
type GetFederatedQueryLimitsResultArrayInput interface {
	pulumi.Input

	ToGetFederatedQueryLimitsResultArrayOutput() GetFederatedQueryLimitsResultArrayOutput
	ToGetFederatedQueryLimitsResultArrayOutputWithContext(context.Context) GetFederatedQueryLimitsResultArrayOutput
}

type GetFederatedQueryLimitsResultArray []GetFederatedQueryLimitsResultInput

func (GetFederatedQueryLimitsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedQueryLimitsResult)(nil)).Elem()
}

func (i GetFederatedQueryLimitsResultArray) ToGetFederatedQueryLimitsResultArrayOutput() GetFederatedQueryLimitsResultArrayOutput {
	return i.ToGetFederatedQueryLimitsResultArrayOutputWithContext(context.Background())
}

func (i GetFederatedQueryLimitsResultArray) ToGetFederatedQueryLimitsResultArrayOutputWithContext(ctx context.Context) GetFederatedQueryLimitsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedQueryLimitsResultArrayOutput)
}

func (i GetFederatedQueryLimitsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedQueryLimitsResult] {
	return pulumix.Output[[]GetFederatedQueryLimitsResult]{
		OutputState: i.ToGetFederatedQueryLimitsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedQueryLimitsResultOutput struct{ *pulumi.OutputState }

func (GetFederatedQueryLimitsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedQueryLimitsResult)(nil)).Elem()
}

func (o GetFederatedQueryLimitsResultOutput) ToGetFederatedQueryLimitsResultOutput() GetFederatedQueryLimitsResultOutput {
	return o
}

func (o GetFederatedQueryLimitsResultOutput) ToGetFederatedQueryLimitsResultOutputWithContext(ctx context.Context) GetFederatedQueryLimitsResultOutput {
	return o
}

func (o GetFederatedQueryLimitsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedQueryLimitsResult] {
	return pulumix.Output[GetFederatedQueryLimitsResult]{
		OutputState: o.OutputState,
	}
}

// Amount that indicates the current usage of the limit.
func (o GetFederatedQueryLimitsResultOutput) CurrentUsage() pulumi.IntOutput {
	return o.ApplyT(func(v GetFederatedQueryLimitsResult) int { return v.CurrentUsage }).(pulumi.IntOutput)
}

// Default value of the limit.
func (o GetFederatedQueryLimitsResultOutput) DefaultLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFederatedQueryLimitsResult) int { return v.DefaultLimit }).(pulumi.IntOutput)
}

func (o GetFederatedQueryLimitsResultOutput) LastModifiedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedQueryLimitsResult) string { return v.LastModifiedDate }).(pulumi.StringOutput)
}

func (o GetFederatedQueryLimitsResultOutput) LimitName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedQueryLimitsResult) string { return v.LimitName }).(pulumi.StringOutput)
}

func (o GetFederatedQueryLimitsResultOutput) MaximumLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFederatedQueryLimitsResult) int { return v.MaximumLimit }).(pulumi.IntOutput)
}

func (o GetFederatedQueryLimitsResultOutput) OverrunPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedQueryLimitsResult) string { return v.OverrunPolicy }).(pulumi.StringOutput)
}

// The unique ID for the project to create a Federated Database Instance.
func (o GetFederatedQueryLimitsResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedQueryLimitsResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Name of the Atlas Federated Database Instance.
func (o GetFederatedQueryLimitsResultOutput) TenantName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedQueryLimitsResult) string { return v.TenantName }).(pulumi.StringOutput)
}

func (o GetFederatedQueryLimitsResultOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetFederatedQueryLimitsResult) int { return v.Value }).(pulumi.IntOutput)
}

type GetFederatedQueryLimitsResultArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedQueryLimitsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedQueryLimitsResult)(nil)).Elem()
}

func (o GetFederatedQueryLimitsResultArrayOutput) ToGetFederatedQueryLimitsResultArrayOutput() GetFederatedQueryLimitsResultArrayOutput {
	return o
}

func (o GetFederatedQueryLimitsResultArrayOutput) ToGetFederatedQueryLimitsResultArrayOutputWithContext(ctx context.Context) GetFederatedQueryLimitsResultArrayOutput {
	return o
}

func (o GetFederatedQueryLimitsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedQueryLimitsResult] {
	return pulumix.Output[[]GetFederatedQueryLimitsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedQueryLimitsResultArrayOutput) Index(i pulumi.IntInput) GetFederatedQueryLimitsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedQueryLimitsResult {
		return vs[0].([]GetFederatedQueryLimitsResult)[vs[1].(int)]
	}).(GetFederatedQueryLimitsResultOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrg struct {
	// List that contains the approved domains from which organization users can log in.
	DomainAllowLists []string `pulumi:"domainAllowLists"`
	// Flag that indicates whether domain restriction is enabled for the connected organization.
	DomainRestrictionEnabled bool `pulumi:"domainRestrictionEnabled"`
	// Unique 20-hexadecimal digit string that identifies the IdP.
	IdentityProviderId string `pulumi:"identityProviderId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// List that contains the default roles granted to users who authenticate through the IdP in a connected organization. If you provide a postAuthRoleGrants field in the request, the array that you provide replaces the current postAuthRoleGrants.
	PostAuthRoleGrants []string                                                        `pulumi:"postAuthRoleGrants"`
	RoleMappings       []GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping  `pulumi:"roleMappings"`
	UserConflicts      []GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict `pulumi:"userConflicts"`
}

// GetFederatedSettingsIdentityProviderAssociatedOrgInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgArgs and GetFederatedSettingsIdentityProviderAssociatedOrgOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgArgs{...}
type GetFederatedSettingsIdentityProviderAssociatedOrgInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgOutput() GetFederatedSettingsIdentityProviderAssociatedOrgOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgArgs struct {
	// List that contains the approved domains from which organization users can log in.
	DomainAllowLists pulumi.StringArrayInput `pulumi:"domainAllowLists"`
	// Flag that indicates whether domain restriction is enabled for the connected organization.
	DomainRestrictionEnabled pulumi.BoolInput `pulumi:"domainRestrictionEnabled"`
	// Unique 20-hexadecimal digit string that identifies the IdP.
	IdentityProviderId pulumi.StringInput `pulumi:"identityProviderId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// List that contains the default roles granted to users who authenticate through the IdP in a connected organization. If you provide a postAuthRoleGrants field in the request, the array that you provide replaces the current postAuthRoleGrants.
	PostAuthRoleGrants pulumi.StringArrayInput                                                 `pulumi:"postAuthRoleGrants"`
	RoleMappings       GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayInput  `pulumi:"roleMappings"`
	UserConflicts      GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayInput `pulumi:"userConflicts"`
}

func (GetFederatedSettingsIdentityProviderAssociatedOrgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrg)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgOutput() GetFederatedSettingsIdentityProviderAssociatedOrgOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgOutput)
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrg] {
	return pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrg]{
		OutputState: i.ToGetFederatedSettingsIdentityProviderAssociatedOrgOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsIdentityProviderAssociatedOrgArrayInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgArray and GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgArrayInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgArray{ GetFederatedSettingsIdentityProviderAssociatedOrgArgs{...} }
type GetFederatedSettingsIdentityProviderAssociatedOrgArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgArray []GetFederatedSettingsIdentityProviderAssociatedOrgInput

func (GetFederatedSettingsIdentityProviderAssociatedOrgArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrg)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput)
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrg] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrg]{
		OutputState: i.ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsIdentityProviderAssociatedOrgOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrg)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgOutput() GetFederatedSettingsIdentityProviderAssociatedOrgOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrg] {
	return pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrg]{
		OutputState: o.OutputState,
	}
}

// List that contains the approved domains from which organization users can log in.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) DomainAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrg) []string { return v.DomainAllowLists }).(pulumi.StringArrayOutput)
}

// Flag that indicates whether domain restriction is enabled for the connected organization.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) DomainRestrictionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrg) bool { return v.DomainRestrictionEnabled }).(pulumi.BoolOutput)
}

// Unique 20-hexadecimal digit string that identifies the IdP.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) IdentityProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrg) string { return v.IdentityProviderId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrg) string { return v.OrgId }).(pulumi.StringOutput)
}

// List that contains the default roles granted to users who authenticate through the IdP in a connected organization. If you provide a postAuthRoleGrants field in the request, the array that you provide replaces the current postAuthRoleGrants.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) PostAuthRoleGrants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrg) []string { return v.PostAuthRoleGrants }).(pulumi.StringArrayOutput)
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) RoleMappings() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrg) []GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping {
		return v.RoleMappings
	}).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput)
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgOutput) UserConflicts() GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrg) []GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict {
		return v.UserConflicts
	}).(GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrg)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrg] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrg]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProviderAssociatedOrgOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProviderAssociatedOrg {
		return vs[0].([]GetFederatedSettingsIdentityProviderAssociatedOrg)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProviderAssociatedOrgOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName string `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id string `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments []GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment `pulumi:"roleAssignments"`
}

// GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs and GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs{...}
type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName pulumi.StringInput `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id pulumi.StringInput `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayInput `pulumi:"roleAssignments"`
}

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput)
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping] {
	return pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping]{
		OutputState: i.ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray and GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray{ GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs{...} }
type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray []GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingInput

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput)
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping]{
		OutputState: i.ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping] {
	return pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping]{
		OutputState: o.OutputState,
	}
}

// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput) ExternalGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping) string {
		return v.ExternalGroupName
	}).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies this role mapping.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping) string { return v.Id }).(pulumi.StringOutput)
}

// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput) RoleAssignments() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping) []GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment {
		return v.RoleAssignments
	}).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping {
		return vs[0].([]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMapping)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId string `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role string `pulumi:"role"`
}

// GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs and GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs{...}
type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput)
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment] {
	return pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment]{
		OutputState: i.ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray and GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray{ GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs{...} }
type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray []GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentInput

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput)
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment]{
		OutputState: i.ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment] {
	return pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment]{
		OutputState: o.OutputState,
	}
}

// Unique identifier of the project to which you want the role mapping to apply.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment) string {
		return v.GroupId
	}).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment) string {
		return v.OrgId
	}).(pulumi.StringOutput)
}

// Specifies the Role that is attached to the Role Mapping.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment) string {
		return v.Role
	}).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment {
		return vs[0].([]GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignment)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress string `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId string `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName string `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName string `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId string `pulumi:"userId"`
}

// GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs and GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs{...}
type GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput() GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId pulumi.StringInput `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName pulumi.StringInput `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName pulumi.StringInput `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput() GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput)
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict] {
	return pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict]{
		OutputState: i.ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayInput is an input type that accepts GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray and GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayInput` via:
//
//	GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray{ GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs{...} }
type GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput
	ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput
}

type GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray []GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictInput

func (GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput {
	return i.ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput)
}

func (i GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict]{
		OutputState: i.ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput() GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict] {
	return pulumix.Output[GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict]{
		OutputState: o.OutputState,
	}
}

// Email address of the the user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) FederationSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict) string {
		return v.FederationSettingsId
	}).(pulumi.StringOutput)
}

// First name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict) string { return v.FirstName }).(pulumi.StringOutput)
}

// Last name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict) string { return v.LastName }).(pulumi.StringOutput)
}

// Name of the Atlas user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict) string { return v.UserId }).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput() GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput) ToGetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict {
		return vs[0].([]GetFederatedSettingsIdentityProviderAssociatedOrgUserConflict)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput)
}

type GetFederatedSettingsIdentityProviderPemFileInfo struct {
	Certificates []GetFederatedSettingsIdentityProviderPemFileInfoCertificate `pulumi:"certificates"`
	// Filename of certificate
	FileName string `pulumi:"fileName"`
}

// GetFederatedSettingsIdentityProviderPemFileInfoInput is an input type that accepts GetFederatedSettingsIdentityProviderPemFileInfoArgs and GetFederatedSettingsIdentityProviderPemFileInfoOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderPemFileInfoInput` via:
//
//	GetFederatedSettingsIdentityProviderPemFileInfoArgs{...}
type GetFederatedSettingsIdentityProviderPemFileInfoInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderPemFileInfoOutput() GetFederatedSettingsIdentityProviderPemFileInfoOutput
	ToGetFederatedSettingsIdentityProviderPemFileInfoOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderPemFileInfoOutput
}

type GetFederatedSettingsIdentityProviderPemFileInfoArgs struct {
	Certificates GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayInput `pulumi:"certificates"`
	// Filename of certificate
	FileName pulumi.StringInput `pulumi:"fileName"`
}

func (GetFederatedSettingsIdentityProviderPemFileInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfo)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoArgs) ToGetFederatedSettingsIdentityProviderPemFileInfoOutput() GetFederatedSettingsIdentityProviderPemFileInfoOutput {
	return i.ToGetFederatedSettingsIdentityProviderPemFileInfoOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoArgs) ToGetFederatedSettingsIdentityProviderPemFileInfoOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderPemFileInfoOutput)
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProviderPemFileInfo] {
	return pulumix.Output[GetFederatedSettingsIdentityProviderPemFileInfo]{
		OutputState: i.ToGetFederatedSettingsIdentityProviderPemFileInfoOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsIdentityProviderPemFileInfoArrayInput is an input type that accepts GetFederatedSettingsIdentityProviderPemFileInfoArray and GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderPemFileInfoArrayInput` via:
//
//	GetFederatedSettingsIdentityProviderPemFileInfoArray{ GetFederatedSettingsIdentityProviderPemFileInfoArgs{...} }
type GetFederatedSettingsIdentityProviderPemFileInfoArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutput() GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput
	ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput
}

type GetFederatedSettingsIdentityProviderPemFileInfoArray []GetFederatedSettingsIdentityProviderPemFileInfoInput

func (GetFederatedSettingsIdentityProviderPemFileInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderPemFileInfo)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoArray) ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutput() GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput {
	return i.ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoArray) ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput)
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProviderPemFileInfo] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProviderPemFileInfo]{
		OutputState: i.ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsIdentityProviderPemFileInfoOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderPemFileInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfo)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoOutput() GetFederatedSettingsIdentityProviderPemFileInfoOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProviderPemFileInfo] {
	return pulumix.Output[GetFederatedSettingsIdentityProviderPemFileInfo]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoOutput) Certificates() GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderPemFileInfo) []GetFederatedSettingsIdentityProviderPemFileInfoCertificate {
		return v.Certificates
	}).(GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput)
}

// Filename of certificate
func (o GetFederatedSettingsIdentityProviderPemFileInfoOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderPemFileInfo) string { return v.FileName }).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderPemFileInfo)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutput() GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProviderPemFileInfo] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProviderPemFileInfo]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProviderPemFileInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProviderPemFileInfo {
		return vs[0].([]GetFederatedSettingsIdentityProviderPemFileInfo)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProviderPemFileInfoOutput)
}

type GetFederatedSettingsIdentityProviderPemFileInfoCertificate struct {
	// Expiration  Date.
	NotAfter string `pulumi:"notAfter"`
	// Start Date.
	NotBefore string `pulumi:"notBefore"`
}

// GetFederatedSettingsIdentityProviderPemFileInfoCertificateInput is an input type that accepts GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs and GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderPemFileInfoCertificateInput` via:
//
//	GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs{...}
type GetFederatedSettingsIdentityProviderPemFileInfoCertificateInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput() GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput
	ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput
}

type GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs struct {
	// Expiration  Date.
	NotAfter pulumi.StringInput `pulumi:"notAfter"`
	// Start Date.
	NotBefore pulumi.StringInput `pulumi:"notBefore"`
}

func (GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfoCertificate)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput() GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput {
	return i.ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput)
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProviderPemFileInfoCertificate] {
	return pulumix.Output[GetFederatedSettingsIdentityProviderPemFileInfoCertificate]{
		OutputState: i.ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayInput is an input type that accepts GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray and GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayInput` via:
//
//	GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray{ GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs{...} }
type GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput() GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput
	ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput
}

type GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray []GetFederatedSettingsIdentityProviderPemFileInfoCertificateInput

func (GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderPemFileInfoCertificate)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput() GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput {
	return i.ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput)
}

func (i GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProviderPemFileInfoCertificate] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProviderPemFileInfoCertificate]{
		OutputState: i.ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfoCertificate)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput() GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProviderPemFileInfoCertificate] {
	return pulumix.Output[GetFederatedSettingsIdentityProviderPemFileInfoCertificate]{
		OutputState: o.OutputState,
	}
}

// Expiration  Date.
func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput) NotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderPemFileInfoCertificate) string { return v.NotAfter }).(pulumi.StringOutput)
}

// Start Date.
func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput) NotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProviderPemFileInfoCertificate) string { return v.NotBefore }).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProviderPemFileInfoCertificate)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput() GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput) ToGetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProviderPemFileInfoCertificate] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProviderPemFileInfoCertificate]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProviderPemFileInfoCertificate {
		return vs[0].([]GetFederatedSettingsIdentityProviderPemFileInfoCertificate)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput)
}

type GetFederatedSettingsIdentityProvidersResult struct {
	// Assertion consumer service URL to which the IdP sends the SAML response.
	AcsUrl string `pulumi:"acsUrl"`
	// List that contains the configured domains from which users can log in for this IdP.
	AssociatedDomains []string `pulumi:"associatedDomains"`
	// List that contains the configured domains from which users can log in for this IdP.
	AssociatedOrgs []GetFederatedSettingsIdentityProvidersResultAssociatedOrg `pulumi:"associatedOrgs"`
	// Identifier for the intended audience of the SAML Assertion.
	AudienceUri string `pulumi:"audienceUri"`
	// Human-readable label that identifies the IdP.
	DisplayName string `pulumi:"displayName"`
	// Identifier for the issuer of the SAML Assertion.
	IssuerUri    string                                                   `pulumi:"issuerUri"`
	OktaIdpId    string                                                   `pulumi:"oktaIdpId"`
	PemFileInfos []GetFederatedSettingsIdentityProvidersResultPemFileInfo `pulumi:"pemFileInfos"`
	// SAML Authentication Request Protocol binding used to send the AuthNRequest. Atlas supports the following binding values:
	// - HTTP POST
	// - HTTP REDIRECT
	RequestBinding string `pulumi:"requestBinding"`
	// Algorithm used to encrypt the IdP signature. Atlas supports the following signature algorithm values:
	// - SHA-1
	// - SHA-256
	ResponseSignatureAlgorithm string `pulumi:"responseSignatureAlgorithm"`
	// Flag that indicates whether the IdP has enabled Bypass SAML Mode. Enabling this mode generates a URL that allows you bypass SAML and login to your organizations at any point. You can authenticate with this special URL only when Bypass Mode is enabled. Set this parameter to true during testing. This keeps you from getting locked out of MongoDB.
	SsoDebugEnabled bool `pulumi:"ssoDebugEnabled"`
	// URL of the receiver of the SAML AuthNRequest.
	SsoUrl string `pulumi:"ssoUrl"`
	// Label that indicates whether the identity provider is active. The IdP is Inactive until you map at least one domain to the IdP.
	Status string `pulumi:"status"`
}

// GetFederatedSettingsIdentityProvidersResultInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultArgs and GetFederatedSettingsIdentityProvidersResultOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultArgs{...}
type GetFederatedSettingsIdentityProvidersResultInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultOutput() GetFederatedSettingsIdentityProvidersResultOutput
	ToGetFederatedSettingsIdentityProvidersResultOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultOutput
}

type GetFederatedSettingsIdentityProvidersResultArgs struct {
	// Assertion consumer service URL to which the IdP sends the SAML response.
	AcsUrl pulumi.StringInput `pulumi:"acsUrl"`
	// List that contains the configured domains from which users can log in for this IdP.
	AssociatedDomains pulumi.StringArrayInput `pulumi:"associatedDomains"`
	// List that contains the configured domains from which users can log in for this IdP.
	AssociatedOrgs GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayInput `pulumi:"associatedOrgs"`
	// Identifier for the intended audience of the SAML Assertion.
	AudienceUri pulumi.StringInput `pulumi:"audienceUri"`
	// Human-readable label that identifies the IdP.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Identifier for the issuer of the SAML Assertion.
	IssuerUri    pulumi.StringInput                                               `pulumi:"issuerUri"`
	OktaIdpId    pulumi.StringInput                                               `pulumi:"oktaIdpId"`
	PemFileInfos GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayInput `pulumi:"pemFileInfos"`
	// SAML Authentication Request Protocol binding used to send the AuthNRequest. Atlas supports the following binding values:
	// - HTTP POST
	// - HTTP REDIRECT
	RequestBinding pulumi.StringInput `pulumi:"requestBinding"`
	// Algorithm used to encrypt the IdP signature. Atlas supports the following signature algorithm values:
	// - SHA-1
	// - SHA-256
	ResponseSignatureAlgorithm pulumi.StringInput `pulumi:"responseSignatureAlgorithm"`
	// Flag that indicates whether the IdP has enabled Bypass SAML Mode. Enabling this mode generates a URL that allows you bypass SAML and login to your organizations at any point. You can authenticate with this special URL only when Bypass Mode is enabled. Set this parameter to true during testing. This keeps you from getting locked out of MongoDB.
	SsoDebugEnabled pulumi.BoolInput `pulumi:"ssoDebugEnabled"`
	// URL of the receiver of the SAML AuthNRequest.
	SsoUrl pulumi.StringInput `pulumi:"ssoUrl"`
	// Label that indicates whether the identity provider is active. The IdP is Inactive until you map at least one domain to the IdP.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetFederatedSettingsIdentityProvidersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResult)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultArgs) ToGetFederatedSettingsIdentityProvidersResultOutput() GetFederatedSettingsIdentityProvidersResultOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultArgs) ToGetFederatedSettingsIdentityProvidersResultOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultOutput)
}

func (i GetFederatedSettingsIdentityProvidersResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProvidersResult] {
	return pulumix.Output[GetFederatedSettingsIdentityProvidersResult]{
		OutputState: i.ToGetFederatedSettingsIdentityProvidersResultOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsIdentityProvidersResultArrayInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultArray and GetFederatedSettingsIdentityProvidersResultArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultArrayInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultArray{ GetFederatedSettingsIdentityProvidersResultArgs{...} }
type GetFederatedSettingsIdentityProvidersResultArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultArrayOutput() GetFederatedSettingsIdentityProvidersResultArrayOutput
	ToGetFederatedSettingsIdentityProvidersResultArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultArrayOutput
}

type GetFederatedSettingsIdentityProvidersResultArray []GetFederatedSettingsIdentityProvidersResultInput

func (GetFederatedSettingsIdentityProvidersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResult)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultArray) ToGetFederatedSettingsIdentityProvidersResultArrayOutput() GetFederatedSettingsIdentityProvidersResultArrayOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultArray) ToGetFederatedSettingsIdentityProvidersResultArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultArrayOutput)
}

func (i GetFederatedSettingsIdentityProvidersResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProvidersResult] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProvidersResult]{
		OutputState: i.ToGetFederatedSettingsIdentityProvidersResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsIdentityProvidersResultOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResult)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultOutput) ToGetFederatedSettingsIdentityProvidersResultOutput() GetFederatedSettingsIdentityProvidersResultOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultOutput) ToGetFederatedSettingsIdentityProvidersResultOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProvidersResult] {
	return pulumix.Output[GetFederatedSettingsIdentityProvidersResult]{
		OutputState: o.OutputState,
	}
}

// Assertion consumer service URL to which the IdP sends the SAML response.
func (o GetFederatedSettingsIdentityProvidersResultOutput) AcsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.AcsUrl }).(pulumi.StringOutput)
}

// List that contains the configured domains from which users can log in for this IdP.
func (o GetFederatedSettingsIdentityProvidersResultOutput) AssociatedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) []string { return v.AssociatedDomains }).(pulumi.StringArrayOutput)
}

// List that contains the configured domains from which users can log in for this IdP.
func (o GetFederatedSettingsIdentityProvidersResultOutput) AssociatedOrgs() GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) []GetFederatedSettingsIdentityProvidersResultAssociatedOrg {
		return v.AssociatedOrgs
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput)
}

// Identifier for the intended audience of the SAML Assertion.
func (o GetFederatedSettingsIdentityProvidersResultOutput) AudienceUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.AudienceUri }).(pulumi.StringOutput)
}

// Human-readable label that identifies the IdP.
func (o GetFederatedSettingsIdentityProvidersResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Identifier for the issuer of the SAML Assertion.
func (o GetFederatedSettingsIdentityProvidersResultOutput) IssuerUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.IssuerUri }).(pulumi.StringOutput)
}

func (o GetFederatedSettingsIdentityProvidersResultOutput) OktaIdpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.OktaIdpId }).(pulumi.StringOutput)
}

func (o GetFederatedSettingsIdentityProvidersResultOutput) PemFileInfos() GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) []GetFederatedSettingsIdentityProvidersResultPemFileInfo {
		return v.PemFileInfos
	}).(GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput)
}

// SAML Authentication Request Protocol binding used to send the AuthNRequest. Atlas supports the following binding values:
// - HTTP POST
// - HTTP REDIRECT
func (o GetFederatedSettingsIdentityProvidersResultOutput) RequestBinding() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.RequestBinding }).(pulumi.StringOutput)
}

// Algorithm used to encrypt the IdP signature. Atlas supports the following signature algorithm values:
// - SHA-1
// - SHA-256
func (o GetFederatedSettingsIdentityProvidersResultOutput) ResponseSignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.ResponseSignatureAlgorithm }).(pulumi.StringOutput)
}

// Flag that indicates whether the IdP has enabled Bypass SAML Mode. Enabling this mode generates a URL that allows you bypass SAML and login to your organizations at any point. You can authenticate with this special URL only when Bypass Mode is enabled. Set this parameter to true during testing. This keeps you from getting locked out of MongoDB.
func (o GetFederatedSettingsIdentityProvidersResultOutput) SsoDebugEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) bool { return v.SsoDebugEnabled }).(pulumi.BoolOutput)
}

// URL of the receiver of the SAML AuthNRequest.
func (o GetFederatedSettingsIdentityProvidersResultOutput) SsoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.SsoUrl }).(pulumi.StringOutput)
}

// Label that indicates whether the identity provider is active. The IdP is Inactive until you map at least one domain to the IdP.
func (o GetFederatedSettingsIdentityProvidersResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResult) string { return v.Status }).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProvidersResultArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResult)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultArrayOutput) ToGetFederatedSettingsIdentityProvidersResultArrayOutput() GetFederatedSettingsIdentityProvidersResultArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultArrayOutput) ToGetFederatedSettingsIdentityProvidersResultArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProvidersResult] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProvidersResult]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProvidersResultArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProvidersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProvidersResult {
		return vs[0].([]GetFederatedSettingsIdentityProvidersResult)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProvidersResultOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrg struct {
	// List that contains the approved domains from which organization users can log in.
	DomainAllowLists []string `pulumi:"domainAllowLists"`
	// Flag that indicates whether domain restriction is enabled for the connected organization.
	DomainRestrictionEnabled bool `pulumi:"domainRestrictionEnabled"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	IdentityProviderId string `pulumi:"identityProviderId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// List that contains the default roles granted to users who authenticate through the IdP in a connected organization. If you provide a postAuthRoleGrants field in the request, the array that you provide replaces the current postAuthRoleGrants.
	PostAuthRoleGrants []string                                                               `pulumi:"postAuthRoleGrants"`
	RoleMappings       []GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping  `pulumi:"roleMappings"`
	UserConflicts      []GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict `pulumi:"userConflicts"`
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs and GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs{...}
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs struct {
	// List that contains the approved domains from which organization users can log in.
	DomainAllowLists pulumi.StringArrayInput `pulumi:"domainAllowLists"`
	// Flag that indicates whether domain restriction is enabled for the connected organization.
	DomainRestrictionEnabled pulumi.BoolInput `pulumi:"domainRestrictionEnabled"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	IdentityProviderId pulumi.StringInput `pulumi:"identityProviderId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// List that contains the default roles granted to users who authenticate through the IdP in a connected organization. If you provide a postAuthRoleGrants field in the request, the array that you provide replaces the current postAuthRoleGrants.
	PostAuthRoleGrants pulumi.StringArrayInput                                                        `pulumi:"postAuthRoleGrants"`
	RoleMappings       GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayInput  `pulumi:"roleMappings"`
	UserConflicts      GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayInput `pulumi:"userConflicts"`
}

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrg)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput)
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrg] {
	return pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrg]{
		OutputState: i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray and GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray{ GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs{...} }
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray []GetFederatedSettingsIdentityProvidersResultAssociatedOrgInput

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrg)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput)
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrg] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrg]{
		OutputState: i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrg)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrg] {
	return pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrg]{
		OutputState: o.OutputState,
	}
}

// List that contains the approved domains from which organization users can log in.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) DomainAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrg) []string { return v.DomainAllowLists }).(pulumi.StringArrayOutput)
}

// Flag that indicates whether domain restriction is enabled for the connected organization.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) DomainRestrictionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrg) bool {
		return v.DomainRestrictionEnabled
	}).(pulumi.BoolOutput)
}

// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) IdentityProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrg) string { return v.IdentityProviderId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrg) string { return v.OrgId }).(pulumi.StringOutput)
}

// List that contains the default roles granted to users who authenticate through the IdP in a connected organization. If you provide a postAuthRoleGrants field in the request, the array that you provide replaces the current postAuthRoleGrants.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) PostAuthRoleGrants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrg) []string { return v.PostAuthRoleGrants }).(pulumi.StringArrayOutput)
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) RoleMappings() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrg) []GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping {
		return v.RoleMappings
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput)
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput) UserConflicts() GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrg) []GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict {
		return v.UserConflicts
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrg)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrg] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrg]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProvidersResultAssociatedOrg {
		return vs[0].([]GetFederatedSettingsIdentityProvidersResultAssociatedOrg)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName string `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id string `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments []GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment `pulumi:"roleAssignments"`
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs and GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs{...}
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName pulumi.StringInput `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id pulumi.StringInput `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayInput `pulumi:"roleAssignments"`
}

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput)
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping] {
	return pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping]{
		OutputState: i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray and GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray{ GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs{...} }
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray []GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingInput

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput)
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping]{
		OutputState: i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping] {
	return pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping]{
		OutputState: o.OutputState,
	}
}

// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput) ExternalGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping) string {
		return v.ExternalGroupName
	}).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies this role mapping.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping) string { return v.Id }).(pulumi.StringOutput)
}

// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput) RoleAssignments() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping) []GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment {
		return v.RoleAssignments
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping {
		return vs[0].([]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMapping)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId string `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role string `pulumi:"role"`
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs and GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs{...}
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput)
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment] {
	return pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment]{
		OutputState: i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray and GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray{ GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs{...} }
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray []GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentInput

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput)
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment]{
		OutputState: i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment] {
	return pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment]{
		OutputState: o.OutputState,
	}
}

// Unique identifier of the project to which you want the role mapping to apply.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment) string {
		return v.GroupId
	}).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment) string {
		return v.OrgId
	}).(pulumi.StringOutput)
}

// Specifies the Role that is attached to the Role Mapping.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment) string {
		return v.Role
	}).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment {
		return vs[0].([]GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignment)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress string `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId string `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName string `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName string `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId string `pulumi:"userId"`
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs and GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs{...}
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId pulumi.StringInput `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName pulumi.StringInput `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName pulumi.StringInput `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput)
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict] {
	return pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict]{
		OutputState: i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray and GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray{ GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs{...} }
type GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput
	ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray []GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictInput

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput)
}

func (i GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict]{
		OutputState: i.ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict] {
	return pulumix.Output[GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict]{
		OutputState: o.OutputState,
	}
}

// Email address of the the user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict) string {
		return v.EmailAddress
	}).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) FederationSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict) string {
		return v.FederationSettingsId
	}).(pulumi.StringOutput)
}

// First name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict) string {
		return v.FirstName
	}).(pulumi.StringOutput)
}

// Last name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict) string { return v.LastName }).(pulumi.StringOutput)
}

// Name of the Atlas user that conflicts with selected domains.
func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict) string { return v.UserId }).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput() GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput) ToGetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict {
		return vs[0].([]GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflict)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput)
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfo struct {
	Certificates []GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate `pulumi:"certificates"`
	// Filename of certificate
	FileName string `pulumi:"fileName"`
}

// GetFederatedSettingsIdentityProvidersResultPemFileInfoInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs and GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultPemFileInfoInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs{...}
type GetFederatedSettingsIdentityProvidersResultPemFileInfoInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput
	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs struct {
	Certificates GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayInput `pulumi:"certificates"`
	// Filename of certificate
	FileName pulumi.StringInput `pulumi:"fileName"`
}

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfo)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput)
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProvidersResultPemFileInfo] {
	return pulumix.Output[GetFederatedSettingsIdentityProvidersResultPemFileInfo]{
		OutputState: i.ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultPemFileInfoArray and GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultPemFileInfoArray{ GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs{...} }
type GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput
	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoArray []GetFederatedSettingsIdentityProvidersResultPemFileInfoInput

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultPemFileInfo)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoArray) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoArray) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput)
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultPemFileInfo] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultPemFileInfo]{
		OutputState: i.ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfo)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProvidersResultPemFileInfo] {
	return pulumix.Output[GetFederatedSettingsIdentityProvidersResultPemFileInfo]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput) Certificates() GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultPemFileInfo) []GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate {
		return v.Certificates
	}).(GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput)
}

// Filename of certificate
func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultPemFileInfo) string { return v.FileName }).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultPemFileInfo)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultPemFileInfo] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultPemFileInfo]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProvidersResultPemFileInfo {
		return vs[0].([]GetFederatedSettingsIdentityProvidersResultPemFileInfo)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput)
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate struct {
	// Expiration  Date.
	NotAfter string `pulumi:"notAfter"`
	// Start Date.
	NotBefore string `pulumi:"notBefore"`
}

// GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs and GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs{...}
type GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput
	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs struct {
	// Expiration  Date.
	NotAfter pulumi.StringInput `pulumi:"notAfter"`
	// Start Date.
	NotBefore pulumi.StringInput `pulumi:"notBefore"`
}

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput)
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate] {
	return pulumix.Output[GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate]{
		OutputState: i.ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayInput is an input type that accepts GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray and GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayInput` via:
//
//	GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray{ GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs{...} }
type GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput
	ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutputWithContext(context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray []GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateInput

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate)(nil)).Elem()
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput {
	return i.ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput)
}

func (i GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate]{
		OutputState: i.ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate] {
	return pulumix.Output[GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate]{
		OutputState: o.OutputState,
	}
}

// Expiration  Date.
func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput) NotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate) string { return v.NotAfter }).(pulumi.StringOutput)
}

// Start Date.
func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput) NotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate) string { return v.NotBefore }).(pulumi.StringOutput)
}

type GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate)(nil)).Elem()
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput() GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput) ToGetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutputWithContext(ctx context.Context) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput {
	return o
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate] {
	return pulumix.Output[[]GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate {
		return vs[0].([]GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificate)[vs[1].(int)]
	}).(GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput)
}

type GetFederatedSettingsOrgConfigRoleMapping struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName string `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id string `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments []GetFederatedSettingsOrgConfigRoleMappingRoleAssignment `pulumi:"roleAssignments"`
}

// GetFederatedSettingsOrgConfigRoleMappingInput is an input type that accepts GetFederatedSettingsOrgConfigRoleMappingArgs and GetFederatedSettingsOrgConfigRoleMappingOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigRoleMappingInput` via:
//
//	GetFederatedSettingsOrgConfigRoleMappingArgs{...}
type GetFederatedSettingsOrgConfigRoleMappingInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigRoleMappingOutput() GetFederatedSettingsOrgConfigRoleMappingOutput
	ToGetFederatedSettingsOrgConfigRoleMappingOutputWithContext(context.Context) GetFederatedSettingsOrgConfigRoleMappingOutput
}

type GetFederatedSettingsOrgConfigRoleMappingArgs struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName pulumi.StringInput `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id pulumi.StringInput `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayInput `pulumi:"roleAssignments"`
}

func (GetFederatedSettingsOrgConfigRoleMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigRoleMappingArgs) ToGetFederatedSettingsOrgConfigRoleMappingOutput() GetFederatedSettingsOrgConfigRoleMappingOutput {
	return i.ToGetFederatedSettingsOrgConfigRoleMappingOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigRoleMappingArgs) ToGetFederatedSettingsOrgConfigRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigRoleMappingOutput)
}

func (i GetFederatedSettingsOrgConfigRoleMappingArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgConfigRoleMapping] {
	return pulumix.Output[GetFederatedSettingsOrgConfigRoleMapping]{
		OutputState: i.ToGetFederatedSettingsOrgConfigRoleMappingOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsOrgConfigRoleMappingArrayInput is an input type that accepts GetFederatedSettingsOrgConfigRoleMappingArray and GetFederatedSettingsOrgConfigRoleMappingArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigRoleMappingArrayInput` via:
//
//	GetFederatedSettingsOrgConfigRoleMappingArray{ GetFederatedSettingsOrgConfigRoleMappingArgs{...} }
type GetFederatedSettingsOrgConfigRoleMappingArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigRoleMappingArrayOutput() GetFederatedSettingsOrgConfigRoleMappingArrayOutput
	ToGetFederatedSettingsOrgConfigRoleMappingArrayOutputWithContext(context.Context) GetFederatedSettingsOrgConfigRoleMappingArrayOutput
}

type GetFederatedSettingsOrgConfigRoleMappingArray []GetFederatedSettingsOrgConfigRoleMappingInput

func (GetFederatedSettingsOrgConfigRoleMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigRoleMappingArray) ToGetFederatedSettingsOrgConfigRoleMappingArrayOutput() GetFederatedSettingsOrgConfigRoleMappingArrayOutput {
	return i.ToGetFederatedSettingsOrgConfigRoleMappingArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigRoleMappingArray) ToGetFederatedSettingsOrgConfigRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigRoleMappingArrayOutput)
}

func (i GetFederatedSettingsOrgConfigRoleMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgConfigRoleMapping] {
	return pulumix.Output[[]GetFederatedSettingsOrgConfigRoleMapping]{
		OutputState: i.ToGetFederatedSettingsOrgConfigRoleMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsOrgConfigRoleMappingOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigRoleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigRoleMappingOutput) ToGetFederatedSettingsOrgConfigRoleMappingOutput() GetFederatedSettingsOrgConfigRoleMappingOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigRoleMappingOutput) ToGetFederatedSettingsOrgConfigRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigRoleMappingOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgConfigRoleMapping] {
	return pulumix.Output[GetFederatedSettingsOrgConfigRoleMapping]{
		OutputState: o.OutputState,
	}
}

// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
func (o GetFederatedSettingsOrgConfigRoleMappingOutput) ExternalGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigRoleMapping) string { return v.ExternalGroupName }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies this role mapping.
func (o GetFederatedSettingsOrgConfigRoleMappingOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigRoleMapping) string { return v.Id }).(pulumi.StringOutput)
}

// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
func (o GetFederatedSettingsOrgConfigRoleMappingOutput) RoleAssignments() GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigRoleMapping) []GetFederatedSettingsOrgConfigRoleMappingRoleAssignment {
		return v.RoleAssignments
	}).(GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput)
}

type GetFederatedSettingsOrgConfigRoleMappingArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigRoleMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigRoleMappingArrayOutput) ToGetFederatedSettingsOrgConfigRoleMappingArrayOutput() GetFederatedSettingsOrgConfigRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigRoleMappingArrayOutput) ToGetFederatedSettingsOrgConfigRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigRoleMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgConfigRoleMapping] {
	return pulumix.Output[[]GetFederatedSettingsOrgConfigRoleMapping]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsOrgConfigRoleMappingArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgConfigRoleMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgConfigRoleMapping {
		return vs[0].([]GetFederatedSettingsOrgConfigRoleMapping)[vs[1].(int)]
	}).(GetFederatedSettingsOrgConfigRoleMappingOutput)
}

type GetFederatedSettingsOrgConfigRoleMappingRoleAssignment struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId string `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role string `pulumi:"role"`
}

// GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentInput is an input type that accepts GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs and GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentInput` via:
//
//	GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs{...}
type GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput
	ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutputWithContext(context.Context) GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput
}

type GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput {
	return i.ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput)
}

func (i GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgConfigRoleMappingRoleAssignment] {
	return pulumix.Output[GetFederatedSettingsOrgConfigRoleMappingRoleAssignment]{
		OutputState: i.ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayInput is an input type that accepts GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray and GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayInput` via:
//
//	GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray{ GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs{...} }
type GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput
	ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutputWithContext(context.Context) GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput
}

type GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray []GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentInput

func (GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput {
	return i.ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput)
}

func (i GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgConfigRoleMappingRoleAssignment] {
	return pulumix.Output[[]GetFederatedSettingsOrgConfigRoleMappingRoleAssignment]{
		OutputState: i.ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgConfigRoleMappingRoleAssignment] {
	return pulumix.Output[GetFederatedSettingsOrgConfigRoleMappingRoleAssignment]{
		OutputState: o.OutputState,
	}
}

// Unique identifier of the project to which you want the role mapping to apply.
func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigRoleMappingRoleAssignment) string { return v.GroupId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigRoleMappingRoleAssignment) string { return v.OrgId }).(pulumi.StringOutput)
}

// Specifies the Role that is attached to the Role Mapping.
func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigRoleMappingRoleAssignment) string { return v.Role }).(pulumi.StringOutput)
}

type GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgConfigRoleMappingRoleAssignment] {
	return pulumix.Output[[]GetFederatedSettingsOrgConfigRoleMappingRoleAssignment]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgConfigRoleMappingRoleAssignment {
		return vs[0].([]GetFederatedSettingsOrgConfigRoleMappingRoleAssignment)[vs[1].(int)]
	}).(GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput)
}

type GetFederatedSettingsOrgConfigUserConflict struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress string `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId string `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName string `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName string `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId string `pulumi:"userId"`
}

// GetFederatedSettingsOrgConfigUserConflictInput is an input type that accepts GetFederatedSettingsOrgConfigUserConflictArgs and GetFederatedSettingsOrgConfigUserConflictOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigUserConflictInput` via:
//
//	GetFederatedSettingsOrgConfigUserConflictArgs{...}
type GetFederatedSettingsOrgConfigUserConflictInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigUserConflictOutput() GetFederatedSettingsOrgConfigUserConflictOutput
	ToGetFederatedSettingsOrgConfigUserConflictOutputWithContext(context.Context) GetFederatedSettingsOrgConfigUserConflictOutput
}

type GetFederatedSettingsOrgConfigUserConflictArgs struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId pulumi.StringInput `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName pulumi.StringInput `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName pulumi.StringInput `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetFederatedSettingsOrgConfigUserConflictArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigUserConflictArgs) ToGetFederatedSettingsOrgConfigUserConflictOutput() GetFederatedSettingsOrgConfigUserConflictOutput {
	return i.ToGetFederatedSettingsOrgConfigUserConflictOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigUserConflictArgs) ToGetFederatedSettingsOrgConfigUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigUserConflictOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigUserConflictOutput)
}

func (i GetFederatedSettingsOrgConfigUserConflictArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgConfigUserConflict] {
	return pulumix.Output[GetFederatedSettingsOrgConfigUserConflict]{
		OutputState: i.ToGetFederatedSettingsOrgConfigUserConflictOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsOrgConfigUserConflictArrayInput is an input type that accepts GetFederatedSettingsOrgConfigUserConflictArray and GetFederatedSettingsOrgConfigUserConflictArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigUserConflictArrayInput` via:
//
//	GetFederatedSettingsOrgConfigUserConflictArray{ GetFederatedSettingsOrgConfigUserConflictArgs{...} }
type GetFederatedSettingsOrgConfigUserConflictArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigUserConflictArrayOutput() GetFederatedSettingsOrgConfigUserConflictArrayOutput
	ToGetFederatedSettingsOrgConfigUserConflictArrayOutputWithContext(context.Context) GetFederatedSettingsOrgConfigUserConflictArrayOutput
}

type GetFederatedSettingsOrgConfigUserConflictArray []GetFederatedSettingsOrgConfigUserConflictInput

func (GetFederatedSettingsOrgConfigUserConflictArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigUserConflictArray) ToGetFederatedSettingsOrgConfigUserConflictArrayOutput() GetFederatedSettingsOrgConfigUserConflictArrayOutput {
	return i.ToGetFederatedSettingsOrgConfigUserConflictArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigUserConflictArray) ToGetFederatedSettingsOrgConfigUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigUserConflictArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigUserConflictArrayOutput)
}

func (i GetFederatedSettingsOrgConfigUserConflictArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgConfigUserConflict] {
	return pulumix.Output[[]GetFederatedSettingsOrgConfigUserConflict]{
		OutputState: i.ToGetFederatedSettingsOrgConfigUserConflictArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsOrgConfigUserConflictOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigUserConflictOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigUserConflictOutput) ToGetFederatedSettingsOrgConfigUserConflictOutput() GetFederatedSettingsOrgConfigUserConflictOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigUserConflictOutput) ToGetFederatedSettingsOrgConfigUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigUserConflictOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigUserConflictOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgConfigUserConflict] {
	return pulumix.Output[GetFederatedSettingsOrgConfigUserConflict]{
		OutputState: o.OutputState,
	}
}

// Email address of the the user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigUserConflictOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigUserConflict) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
func (o GetFederatedSettingsOrgConfigUserConflictOutput) FederationSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigUserConflict) string { return v.FederationSettingsId }).(pulumi.StringOutput)
}

// First name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigUserConflictOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigUserConflict) string { return v.FirstName }).(pulumi.StringOutput)
}

// Last name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigUserConflictOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigUserConflict) string { return v.LastName }).(pulumi.StringOutput)
}

// Name of the Atlas user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigUserConflictOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigUserConflict) string { return v.UserId }).(pulumi.StringOutput)
}

type GetFederatedSettingsOrgConfigUserConflictArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigUserConflictArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigUserConflictArrayOutput) ToGetFederatedSettingsOrgConfigUserConflictArrayOutput() GetFederatedSettingsOrgConfigUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigUserConflictArrayOutput) ToGetFederatedSettingsOrgConfigUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigUserConflictArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgConfigUserConflict] {
	return pulumix.Output[[]GetFederatedSettingsOrgConfigUserConflict]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsOrgConfigUserConflictArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgConfigUserConflictOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgConfigUserConflict {
		return vs[0].([]GetFederatedSettingsOrgConfigUserConflict)[vs[1].(int)]
	}).(GetFederatedSettingsOrgConfigUserConflictOutput)
}

type GetFederatedSettingsOrgConfigsResult struct {
	// List that contains the approved domains from which organization users can log in.
	DomainAllowLists []string `pulumi:"domainAllowLists"`
	// Flag that indicates whether domain restriction is enabled for the connected organization.
	DomainRestrictionEnabled bool `pulumi:"domainRestrictionEnabled"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	IdentityProviderId string `pulumi:"identityProviderId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// List that contains the default roles granted to users who authenticate through the IdP in a connected organization.
	PostAuthRoleGrants []string                                           `pulumi:"postAuthRoleGrants"`
	RoleMappings       []GetFederatedSettingsOrgConfigsResultRoleMapping  `pulumi:"roleMappings"`
	UserConflicts      []GetFederatedSettingsOrgConfigsResultUserConflict `pulumi:"userConflicts"`
}

// GetFederatedSettingsOrgConfigsResultInput is an input type that accepts GetFederatedSettingsOrgConfigsResultArgs and GetFederatedSettingsOrgConfigsResultOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultInput` via:
//
//	GetFederatedSettingsOrgConfigsResultArgs{...}
type GetFederatedSettingsOrgConfigsResultInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultOutput() GetFederatedSettingsOrgConfigsResultOutput
	ToGetFederatedSettingsOrgConfigsResultOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultOutput
}

type GetFederatedSettingsOrgConfigsResultArgs struct {
	// List that contains the approved domains from which organization users can log in.
	DomainAllowLists pulumi.StringArrayInput `pulumi:"domainAllowLists"`
	// Flag that indicates whether domain restriction is enabled for the connected organization.
	DomainRestrictionEnabled pulumi.BoolInput `pulumi:"domainRestrictionEnabled"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	IdentityProviderId pulumi.StringInput `pulumi:"identityProviderId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// List that contains the default roles granted to users who authenticate through the IdP in a connected organization.
	PostAuthRoleGrants pulumi.StringArrayInput                                    `pulumi:"postAuthRoleGrants"`
	RoleMappings       GetFederatedSettingsOrgConfigsResultRoleMappingArrayInput  `pulumi:"roleMappings"`
	UserConflicts      GetFederatedSettingsOrgConfigsResultUserConflictArrayInput `pulumi:"userConflicts"`
}

func (GetFederatedSettingsOrgConfigsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResult)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultArgs) ToGetFederatedSettingsOrgConfigsResultOutput() GetFederatedSettingsOrgConfigsResultOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultArgs) ToGetFederatedSettingsOrgConfigsResultOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultOutput)
}

func (i GetFederatedSettingsOrgConfigsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgConfigsResult] {
	return pulumix.Output[GetFederatedSettingsOrgConfigsResult]{
		OutputState: i.ToGetFederatedSettingsOrgConfigsResultOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsOrgConfigsResultArrayInput is an input type that accepts GetFederatedSettingsOrgConfigsResultArray and GetFederatedSettingsOrgConfigsResultArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultArrayInput` via:
//
//	GetFederatedSettingsOrgConfigsResultArray{ GetFederatedSettingsOrgConfigsResultArgs{...} }
type GetFederatedSettingsOrgConfigsResultArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultArrayOutput() GetFederatedSettingsOrgConfigsResultArrayOutput
	ToGetFederatedSettingsOrgConfigsResultArrayOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultArrayOutput
}

type GetFederatedSettingsOrgConfigsResultArray []GetFederatedSettingsOrgConfigsResultInput

func (GetFederatedSettingsOrgConfigsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResult)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultArray) ToGetFederatedSettingsOrgConfigsResultArrayOutput() GetFederatedSettingsOrgConfigsResultArrayOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultArray) ToGetFederatedSettingsOrgConfigsResultArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultArrayOutput)
}

func (i GetFederatedSettingsOrgConfigsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgConfigsResult] {
	return pulumix.Output[[]GetFederatedSettingsOrgConfigsResult]{
		OutputState: i.ToGetFederatedSettingsOrgConfigsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsOrgConfigsResultOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResult)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultOutput) ToGetFederatedSettingsOrgConfigsResultOutput() GetFederatedSettingsOrgConfigsResultOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultOutput) ToGetFederatedSettingsOrgConfigsResultOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgConfigsResult] {
	return pulumix.Output[GetFederatedSettingsOrgConfigsResult]{
		OutputState: o.OutputState,
	}
}

// List that contains the approved domains from which organization users can log in.
func (o GetFederatedSettingsOrgConfigsResultOutput) DomainAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResult) []string { return v.DomainAllowLists }).(pulumi.StringArrayOutput)
}

// Flag that indicates whether domain restriction is enabled for the connected organization.
func (o GetFederatedSettingsOrgConfigsResultOutput) DomainRestrictionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResult) bool { return v.DomainRestrictionEnabled }).(pulumi.BoolOutput)
}

// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
func (o GetFederatedSettingsOrgConfigsResultOutput) IdentityProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResult) string { return v.IdentityProviderId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsOrgConfigsResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// List that contains the default roles granted to users who authenticate through the IdP in a connected organization.
func (o GetFederatedSettingsOrgConfigsResultOutput) PostAuthRoleGrants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResult) []string { return v.PostAuthRoleGrants }).(pulumi.StringArrayOutput)
}

func (o GetFederatedSettingsOrgConfigsResultOutput) RoleMappings() GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResult) []GetFederatedSettingsOrgConfigsResultRoleMapping {
		return v.RoleMappings
	}).(GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput)
}

func (o GetFederatedSettingsOrgConfigsResultOutput) UserConflicts() GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResult) []GetFederatedSettingsOrgConfigsResultUserConflict {
		return v.UserConflicts
	}).(GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput)
}

type GetFederatedSettingsOrgConfigsResultArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResult)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultArrayOutput) ToGetFederatedSettingsOrgConfigsResultArrayOutput() GetFederatedSettingsOrgConfigsResultArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultArrayOutput) ToGetFederatedSettingsOrgConfigsResultArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgConfigsResult] {
	return pulumix.Output[[]GetFederatedSettingsOrgConfigsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsOrgConfigsResultArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgConfigsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgConfigsResult {
		return vs[0].([]GetFederatedSettingsOrgConfigsResult)[vs[1].(int)]
	}).(GetFederatedSettingsOrgConfigsResultOutput)
}

type GetFederatedSettingsOrgConfigsResultRoleMapping struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName string `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id string `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments []GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment `pulumi:"roleAssignments"`
}

// GetFederatedSettingsOrgConfigsResultRoleMappingInput is an input type that accepts GetFederatedSettingsOrgConfigsResultRoleMappingArgs and GetFederatedSettingsOrgConfigsResultRoleMappingOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultRoleMappingInput` via:
//
//	GetFederatedSettingsOrgConfigsResultRoleMappingArgs{...}
type GetFederatedSettingsOrgConfigsResultRoleMappingInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultRoleMappingOutput() GetFederatedSettingsOrgConfigsResultRoleMappingOutput
	ToGetFederatedSettingsOrgConfigsResultRoleMappingOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingOutput
}

type GetFederatedSettingsOrgConfigsResultRoleMappingArgs struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName pulumi.StringInput `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id pulumi.StringInput `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayInput `pulumi:"roleAssignments"`
}

func (GetFederatedSettingsOrgConfigsResultRoleMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingArgs) ToGetFederatedSettingsOrgConfigsResultRoleMappingOutput() GetFederatedSettingsOrgConfigsResultRoleMappingOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultRoleMappingOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingArgs) ToGetFederatedSettingsOrgConfigsResultRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultRoleMappingOutput)
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgConfigsResultRoleMapping] {
	return pulumix.Output[GetFederatedSettingsOrgConfigsResultRoleMapping]{
		OutputState: i.ToGetFederatedSettingsOrgConfigsResultRoleMappingOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsOrgConfigsResultRoleMappingArrayInput is an input type that accepts GetFederatedSettingsOrgConfigsResultRoleMappingArray and GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultRoleMappingArrayInput` via:
//
//	GetFederatedSettingsOrgConfigsResultRoleMappingArray{ GetFederatedSettingsOrgConfigsResultRoleMappingArgs{...} }
type GetFederatedSettingsOrgConfigsResultRoleMappingArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput() GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput
	ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput
}

type GetFederatedSettingsOrgConfigsResultRoleMappingArray []GetFederatedSettingsOrgConfigsResultRoleMappingInput

func (GetFederatedSettingsOrgConfigsResultRoleMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResultRoleMapping)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingArray) ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput() GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingArray) ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput)
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgConfigsResultRoleMapping] {
	return pulumix.Output[[]GetFederatedSettingsOrgConfigsResultRoleMapping]{
		OutputState: i.ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsOrgConfigsResultRoleMappingOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultRoleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingOutput() GetFederatedSettingsOrgConfigsResultRoleMappingOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgConfigsResultRoleMapping] {
	return pulumix.Output[GetFederatedSettingsOrgConfigsResultRoleMapping]{
		OutputState: o.OutputState,
	}
}

// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
func (o GetFederatedSettingsOrgConfigsResultRoleMappingOutput) ExternalGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultRoleMapping) string { return v.ExternalGroupName }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies this role mapping.
func (o GetFederatedSettingsOrgConfigsResultRoleMappingOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultRoleMapping) string { return v.Id }).(pulumi.StringOutput)
}

// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
func (o GetFederatedSettingsOrgConfigsResultRoleMappingOutput) RoleAssignments() GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultRoleMapping) []GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment {
		return v.RoleAssignments
	}).(GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput)
}

type GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResultRoleMapping)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput() GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgConfigsResultRoleMapping] {
	return pulumix.Output[[]GetFederatedSettingsOrgConfigsResultRoleMapping]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgConfigsResultRoleMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgConfigsResultRoleMapping {
		return vs[0].([]GetFederatedSettingsOrgConfigsResultRoleMapping)[vs[1].(int)]
	}).(GetFederatedSettingsOrgConfigsResultRoleMappingOutput)
}

type GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId string `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role string `pulumi:"role"`
}

// GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentInput is an input type that accepts GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs and GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentInput` via:
//
//	GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs{...}
type GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput
	ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput
}

type GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput)
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment] {
	return pulumix.Output[GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment]{
		OutputState: i.ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayInput is an input type that accepts GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray and GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayInput` via:
//
//	GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray{ GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs{...} }
type GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput
	ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput
}

type GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray []GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentInput

func (GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput)
}

func (i GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment] {
	return pulumix.Output[[]GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment]{
		OutputState: i.ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment] {
	return pulumix.Output[GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment]{
		OutputState: o.OutputState,
	}
}

// Unique identifier of the project to which you want the role mapping to apply.
func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment) string { return v.GroupId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment) string { return v.OrgId }).(pulumi.StringOutput)
}

// Specifies the Role that is attached to the Role Mapping.
func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment) string { return v.Role }).(pulumi.StringOutput)
}

type GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment] {
	return pulumix.Output[[]GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment {
		return vs[0].([]GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignment)[vs[1].(int)]
	}).(GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput)
}

type GetFederatedSettingsOrgConfigsResultUserConflict struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress string `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId string `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName string `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName string `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId string `pulumi:"userId"`
}

// GetFederatedSettingsOrgConfigsResultUserConflictInput is an input type that accepts GetFederatedSettingsOrgConfigsResultUserConflictArgs and GetFederatedSettingsOrgConfigsResultUserConflictOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultUserConflictInput` via:
//
//	GetFederatedSettingsOrgConfigsResultUserConflictArgs{...}
type GetFederatedSettingsOrgConfigsResultUserConflictInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultUserConflictOutput() GetFederatedSettingsOrgConfigsResultUserConflictOutput
	ToGetFederatedSettingsOrgConfigsResultUserConflictOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultUserConflictOutput
}

type GetFederatedSettingsOrgConfigsResultUserConflictArgs struct {
	// Email address of the the user that conflicts with selected domains.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
	FederationSettingsId pulumi.StringInput `pulumi:"federationSettingsId"`
	// First name of the the user that conflicts with selected domains.
	FirstName pulumi.StringInput `pulumi:"firstName"`
	// Last name of the the user that conflicts with selected domains.
	LastName pulumi.StringInput `pulumi:"lastName"`
	// Name of the Atlas user that conflicts with selected domains.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetFederatedSettingsOrgConfigsResultUserConflictArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultUserConflictArgs) ToGetFederatedSettingsOrgConfigsResultUserConflictOutput() GetFederatedSettingsOrgConfigsResultUserConflictOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultUserConflictOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultUserConflictArgs) ToGetFederatedSettingsOrgConfigsResultUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultUserConflictOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultUserConflictOutput)
}

func (i GetFederatedSettingsOrgConfigsResultUserConflictArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgConfigsResultUserConflict] {
	return pulumix.Output[GetFederatedSettingsOrgConfigsResultUserConflict]{
		OutputState: i.ToGetFederatedSettingsOrgConfigsResultUserConflictOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsOrgConfigsResultUserConflictArrayInput is an input type that accepts GetFederatedSettingsOrgConfigsResultUserConflictArray and GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgConfigsResultUserConflictArrayInput` via:
//
//	GetFederatedSettingsOrgConfigsResultUserConflictArray{ GetFederatedSettingsOrgConfigsResultUserConflictArgs{...} }
type GetFederatedSettingsOrgConfigsResultUserConflictArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutput() GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput
	ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutputWithContext(context.Context) GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput
}

type GetFederatedSettingsOrgConfigsResultUserConflictArray []GetFederatedSettingsOrgConfigsResultUserConflictInput

func (GetFederatedSettingsOrgConfigsResultUserConflictArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResultUserConflict)(nil)).Elem()
}

func (i GetFederatedSettingsOrgConfigsResultUserConflictArray) ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutput() GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput {
	return i.ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgConfigsResultUserConflictArray) ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput)
}

func (i GetFederatedSettingsOrgConfigsResultUserConflictArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgConfigsResultUserConflict] {
	return pulumix.Output[[]GetFederatedSettingsOrgConfigsResultUserConflict]{
		OutputState: i.ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsOrgConfigsResultUserConflictOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultUserConflictOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) ToGetFederatedSettingsOrgConfigsResultUserConflictOutput() GetFederatedSettingsOrgConfigsResultUserConflictOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) ToGetFederatedSettingsOrgConfigsResultUserConflictOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultUserConflictOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgConfigsResultUserConflict] {
	return pulumix.Output[GetFederatedSettingsOrgConfigsResultUserConflict]{
		OutputState: o.OutputState,
	}
}

// Email address of the the user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultUserConflict) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) FederationSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultUserConflict) string { return v.FederationSettingsId }).(pulumi.StringOutput)
}

// First name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultUserConflict) string { return v.FirstName }).(pulumi.StringOutput)
}

// Last name of the the user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultUserConflict) string { return v.LastName }).(pulumi.StringOutput)
}

// Name of the Atlas user that conflicts with selected domains.
func (o GetFederatedSettingsOrgConfigsResultUserConflictOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgConfigsResultUserConflict) string { return v.UserId }).(pulumi.StringOutput)
}

type GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgConfigsResultUserConflict)(nil)).Elem()
}

func (o GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput) ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutput() GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput) ToGetFederatedSettingsOrgConfigsResultUserConflictArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgConfigsResultUserConflict] {
	return pulumix.Output[[]GetFederatedSettingsOrgConfigsResultUserConflict]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgConfigsResultUserConflictOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgConfigsResultUserConflict {
		return vs[0].([]GetFederatedSettingsOrgConfigsResultUserConflict)[vs[1].(int)]
	}).(GetFederatedSettingsOrgConfigsResultUserConflictOutput)
}

type GetFederatedSettingsOrgRoleMappingRoleAssignment struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId string `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role string `pulumi:"role"`
}

// GetFederatedSettingsOrgRoleMappingRoleAssignmentInput is an input type that accepts GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs and GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgRoleMappingRoleAssignmentInput` via:
//
//	GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs{...}
type GetFederatedSettingsOrgRoleMappingRoleAssignmentInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput
	ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(context.Context) GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput
}

type GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return i.ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput)
}

func (i GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgRoleMappingRoleAssignment] {
	return pulumix.Output[GetFederatedSettingsOrgRoleMappingRoleAssignment]{
		OutputState: i.ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayInput is an input type that accepts GetFederatedSettingsOrgRoleMappingRoleAssignmentArray and GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayInput` via:
//
//	GetFederatedSettingsOrgRoleMappingRoleAssignmentArray{ GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs{...} }
type GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput
	ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Context) GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput
}

type GetFederatedSettingsOrgRoleMappingRoleAssignmentArray []GetFederatedSettingsOrgRoleMappingRoleAssignmentInput

func (GetFederatedSettingsOrgRoleMappingRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgRoleMappingRoleAssignmentArray) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return i.ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgRoleMappingRoleAssignmentArray) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput)
}

func (i GetFederatedSettingsOrgRoleMappingRoleAssignmentArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgRoleMappingRoleAssignment] {
	return pulumix.Output[[]GetFederatedSettingsOrgRoleMappingRoleAssignment]{
		OutputState: i.ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutput() GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgRoleMappingRoleAssignment] {
	return pulumix.Output[GetFederatedSettingsOrgRoleMappingRoleAssignment]{
		OutputState: o.OutputState,
	}
}

// Unique identifier of the project to which you want the role mapping to apply.
func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingRoleAssignment) string { return v.GroupId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingRoleAssignment) string { return v.OrgId }).(pulumi.StringOutput)
}

// Specifies the Role that is attached to the Role Mapping.
func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingRoleAssignment) string { return v.Role }).(pulumi.StringOutput)
}

type GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgRoleMappingRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput() GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgRoleMappingRoleAssignment] {
	return pulumix.Output[[]GetFederatedSettingsOrgRoleMappingRoleAssignment]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgRoleMappingRoleAssignment {
		return vs[0].([]GetFederatedSettingsOrgRoleMappingRoleAssignment)[vs[1].(int)]
	}).(GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput)
}

type GetFederatedSettingsOrgRoleMappingsResult struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName string `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id string `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments []GetFederatedSettingsOrgRoleMappingsResultRoleAssignment `pulumi:"roleAssignments"`
}

// GetFederatedSettingsOrgRoleMappingsResultInput is an input type that accepts GetFederatedSettingsOrgRoleMappingsResultArgs and GetFederatedSettingsOrgRoleMappingsResultOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgRoleMappingsResultInput` via:
//
//	GetFederatedSettingsOrgRoleMappingsResultArgs{...}
type GetFederatedSettingsOrgRoleMappingsResultInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgRoleMappingsResultOutput() GetFederatedSettingsOrgRoleMappingsResultOutput
	ToGetFederatedSettingsOrgRoleMappingsResultOutputWithContext(context.Context) GetFederatedSettingsOrgRoleMappingsResultOutput
}

type GetFederatedSettingsOrgRoleMappingsResultArgs struct {
	// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
	ExternalGroupName pulumi.StringInput `pulumi:"externalGroupName"`
	// Unique 24-hexadecimal digit string that identifies this role mapping.
	Id pulumi.StringInput `pulumi:"id"`
	// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
	RoleAssignments GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayInput `pulumi:"roleAssignments"`
}

func (GetFederatedSettingsOrgRoleMappingsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResult)(nil)).Elem()
}

func (i GetFederatedSettingsOrgRoleMappingsResultArgs) ToGetFederatedSettingsOrgRoleMappingsResultOutput() GetFederatedSettingsOrgRoleMappingsResultOutput {
	return i.ToGetFederatedSettingsOrgRoleMappingsResultOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgRoleMappingsResultArgs) ToGetFederatedSettingsOrgRoleMappingsResultOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgRoleMappingsResultOutput)
}

func (i GetFederatedSettingsOrgRoleMappingsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgRoleMappingsResult] {
	return pulumix.Output[GetFederatedSettingsOrgRoleMappingsResult]{
		OutputState: i.ToGetFederatedSettingsOrgRoleMappingsResultOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsOrgRoleMappingsResultArrayInput is an input type that accepts GetFederatedSettingsOrgRoleMappingsResultArray and GetFederatedSettingsOrgRoleMappingsResultArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgRoleMappingsResultArrayInput` via:
//
//	GetFederatedSettingsOrgRoleMappingsResultArray{ GetFederatedSettingsOrgRoleMappingsResultArgs{...} }
type GetFederatedSettingsOrgRoleMappingsResultArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgRoleMappingsResultArrayOutput() GetFederatedSettingsOrgRoleMappingsResultArrayOutput
	ToGetFederatedSettingsOrgRoleMappingsResultArrayOutputWithContext(context.Context) GetFederatedSettingsOrgRoleMappingsResultArrayOutput
}

type GetFederatedSettingsOrgRoleMappingsResultArray []GetFederatedSettingsOrgRoleMappingsResultInput

func (GetFederatedSettingsOrgRoleMappingsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgRoleMappingsResult)(nil)).Elem()
}

func (i GetFederatedSettingsOrgRoleMappingsResultArray) ToGetFederatedSettingsOrgRoleMappingsResultArrayOutput() GetFederatedSettingsOrgRoleMappingsResultArrayOutput {
	return i.ToGetFederatedSettingsOrgRoleMappingsResultArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgRoleMappingsResultArray) ToGetFederatedSettingsOrgRoleMappingsResultArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgRoleMappingsResultArrayOutput)
}

func (i GetFederatedSettingsOrgRoleMappingsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgRoleMappingsResult] {
	return pulumix.Output[[]GetFederatedSettingsOrgRoleMappingsResult]{
		OutputState: i.ToGetFederatedSettingsOrgRoleMappingsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsOrgRoleMappingsResultOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgRoleMappingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResult)(nil)).Elem()
}

func (o GetFederatedSettingsOrgRoleMappingsResultOutput) ToGetFederatedSettingsOrgRoleMappingsResultOutput() GetFederatedSettingsOrgRoleMappingsResultOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingsResultOutput) ToGetFederatedSettingsOrgRoleMappingsResultOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgRoleMappingsResult] {
	return pulumix.Output[GetFederatedSettingsOrgRoleMappingsResult]{
		OutputState: o.OutputState,
	}
}

// Unique human-readable label that identifies the identity provider group to which this role mapping applies.
func (o GetFederatedSettingsOrgRoleMappingsResultOutput) ExternalGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingsResult) string { return v.ExternalGroupName }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies this role mapping.
func (o GetFederatedSettingsOrgRoleMappingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Atlas roles and the unique identifiers of the groups and organizations associated with each role.
func (o GetFederatedSettingsOrgRoleMappingsResultOutput) RoleAssignments() GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingsResult) []GetFederatedSettingsOrgRoleMappingsResultRoleAssignment {
		return v.RoleAssignments
	}).(GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput)
}

type GetFederatedSettingsOrgRoleMappingsResultArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgRoleMappingsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgRoleMappingsResult)(nil)).Elem()
}

func (o GetFederatedSettingsOrgRoleMappingsResultArrayOutput) ToGetFederatedSettingsOrgRoleMappingsResultArrayOutput() GetFederatedSettingsOrgRoleMappingsResultArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingsResultArrayOutput) ToGetFederatedSettingsOrgRoleMappingsResultArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgRoleMappingsResult] {
	return pulumix.Output[[]GetFederatedSettingsOrgRoleMappingsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsOrgRoleMappingsResultArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgRoleMappingsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgRoleMappingsResult {
		return vs[0].([]GetFederatedSettingsOrgRoleMappingsResult)[vs[1].(int)]
	}).(GetFederatedSettingsOrgRoleMappingsResultOutput)
}

type GetFederatedSettingsOrgRoleMappingsResultRoleAssignment struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId string `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId string `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role string `pulumi:"role"`
}

// GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentInput is an input type that accepts GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs and GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentInput` via:
//
//	GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs{...}
type GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput() GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput
	ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutputWithContext(context.Context) GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput
}

type GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs struct {
	// Unique identifier of the project to which you want the role mapping to apply.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Specifies the Role that is attached to the Role Mapping.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResultRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput() GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput {
	return i.ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput)
}

func (i GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgRoleMappingsResultRoleAssignment] {
	return pulumix.Output[GetFederatedSettingsOrgRoleMappingsResultRoleAssignment]{
		OutputState: i.ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutputWithContext(ctx).OutputState,
	}
}

// GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayInput is an input type that accepts GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray and GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput values.
// You can construct a concrete instance of `GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayInput` via:
//
//	GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray{ GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs{...} }
type GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayInput interface {
	pulumi.Input

	ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput() GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput
	ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutputWithContext(context.Context) GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput
}

type GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray []GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentInput

func (GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgRoleMappingsResultRoleAssignment)(nil)).Elem()
}

func (i GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput() GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput {
	return i.ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutputWithContext(context.Background())
}

func (i GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput)
}

func (i GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgRoleMappingsResultRoleAssignment] {
	return pulumix.Output[[]GetFederatedSettingsOrgRoleMappingsResultRoleAssignment]{
		OutputState: i.ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResultRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput() GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput) ToOutput(ctx context.Context) pulumix.Output[GetFederatedSettingsOrgRoleMappingsResultRoleAssignment] {
	return pulumix.Output[GetFederatedSettingsOrgRoleMappingsResultRoleAssignment]{
		OutputState: o.OutputState,
	}
}

// Unique identifier of the project to which you want the role mapping to apply.
func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingsResultRoleAssignment) string { return v.GroupId }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingsResultRoleAssignment) string { return v.OrgId }).(pulumi.StringOutput)
}

// Specifies the Role that is attached to the Role Mapping.
func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetFederatedSettingsOrgRoleMappingsResultRoleAssignment) string { return v.Role }).(pulumi.StringOutput)
}

type GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFederatedSettingsOrgRoleMappingsResultRoleAssignment)(nil)).Elem()
}

func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput() GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput) ToGetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutputWithContext(ctx context.Context) GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput {
	return o
}

func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFederatedSettingsOrgRoleMappingsResultRoleAssignment] {
	return pulumix.Output[[]GetFederatedSettingsOrgRoleMappingsResultRoleAssignment]{
		OutputState: o.OutputState,
	}
}

func (o GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput) Index(i pulumi.IntInput) GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFederatedSettingsOrgRoleMappingsResultRoleAssignment {
		return vs[0].([]GetFederatedSettingsOrgRoleMappingsResultRoleAssignment)[vs[1].(int)]
	}).(GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput)
}

type GetGlobalClusterConfigManagedNamespace struct {
	// (Required) The name of the collection associated with the managed namespace.
	Collection string `pulumi:"collection"`
	// (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey string `pulumi:"customShardKey"`
	// (Required) The name of the database containing the collection.
	Db string `pulumi:"db"`
	// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
	IsCustomShardKeyHashed bool `pulumi:"isCustomShardKeyHashed"`
	// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
	IsShardKeyUnique bool `pulumi:"isShardKeyUnique"`
}

// GetGlobalClusterConfigManagedNamespaceInput is an input type that accepts GetGlobalClusterConfigManagedNamespaceArgs and GetGlobalClusterConfigManagedNamespaceOutput values.
// You can construct a concrete instance of `GetGlobalClusterConfigManagedNamespaceInput` via:
//
//	GetGlobalClusterConfigManagedNamespaceArgs{...}
type GetGlobalClusterConfigManagedNamespaceInput interface {
	pulumi.Input

	ToGetGlobalClusterConfigManagedNamespaceOutput() GetGlobalClusterConfigManagedNamespaceOutput
	ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(context.Context) GetGlobalClusterConfigManagedNamespaceOutput
}

type GetGlobalClusterConfigManagedNamespaceArgs struct {
	// (Required) The name of the collection associated with the managed namespace.
	Collection pulumi.StringInput `pulumi:"collection"`
	// (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey pulumi.StringInput `pulumi:"customShardKey"`
	// (Required) The name of the database containing the collection.
	Db pulumi.StringInput `pulumi:"db"`
	// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
	IsCustomShardKeyHashed pulumi.BoolInput `pulumi:"isCustomShardKeyHashed"`
	// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
	IsShardKeyUnique pulumi.BoolInput `pulumi:"isShardKeyUnique"`
}

func (GetGlobalClusterConfigManagedNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GetGlobalClusterConfigManagedNamespaceArgs) ToGetGlobalClusterConfigManagedNamespaceOutput() GetGlobalClusterConfigManagedNamespaceOutput {
	return i.ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(context.Background())
}

func (i GetGlobalClusterConfigManagedNamespaceArgs) ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClusterConfigManagedNamespaceOutput)
}

func (i GetGlobalClusterConfigManagedNamespaceArgs) ToOutput(ctx context.Context) pulumix.Output[GetGlobalClusterConfigManagedNamespace] {
	return pulumix.Output[GetGlobalClusterConfigManagedNamespace]{
		OutputState: i.ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(ctx).OutputState,
	}
}

// GetGlobalClusterConfigManagedNamespaceArrayInput is an input type that accepts GetGlobalClusterConfigManagedNamespaceArray and GetGlobalClusterConfigManagedNamespaceArrayOutput values.
// You can construct a concrete instance of `GetGlobalClusterConfigManagedNamespaceArrayInput` via:
//
//	GetGlobalClusterConfigManagedNamespaceArray{ GetGlobalClusterConfigManagedNamespaceArgs{...} }
type GetGlobalClusterConfigManagedNamespaceArrayInput interface {
	pulumi.Input

	ToGetGlobalClusterConfigManagedNamespaceArrayOutput() GetGlobalClusterConfigManagedNamespaceArrayOutput
	ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Context) GetGlobalClusterConfigManagedNamespaceArrayOutput
}

type GetGlobalClusterConfigManagedNamespaceArray []GetGlobalClusterConfigManagedNamespaceInput

func (GetGlobalClusterConfigManagedNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GetGlobalClusterConfigManagedNamespaceArray) ToGetGlobalClusterConfigManagedNamespaceArrayOutput() GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return i.ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Background())
}

func (i GetGlobalClusterConfigManagedNamespaceArray) ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClusterConfigManagedNamespaceArrayOutput)
}

func (i GetGlobalClusterConfigManagedNamespaceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalClusterConfigManagedNamespace] {
	return pulumix.Output[[]GetGlobalClusterConfigManagedNamespace]{
		OutputState: i.ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetGlobalClusterConfigManagedNamespaceOutput struct{ *pulumi.OutputState }

func (GetGlobalClusterConfigManagedNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GetGlobalClusterConfigManagedNamespaceOutput) ToGetGlobalClusterConfigManagedNamespaceOutput() GetGlobalClusterConfigManagedNamespaceOutput {
	return o
}

func (o GetGlobalClusterConfigManagedNamespaceOutput) ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceOutput {
	return o
}

func (o GetGlobalClusterConfigManagedNamespaceOutput) ToOutput(ctx context.Context) pulumix.Output[GetGlobalClusterConfigManagedNamespace] {
	return pulumix.Output[GetGlobalClusterConfigManagedNamespace]{
		OutputState: o.OutputState,
	}
}

// (Required) The name of the collection associated with the managed namespace.
func (o GetGlobalClusterConfigManagedNamespaceOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) string { return v.Collection }).(pulumi.StringOutput)
}

// (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
func (o GetGlobalClusterConfigManagedNamespaceOutput) CustomShardKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) string { return v.CustomShardKey }).(pulumi.StringOutput)
}

// (Required) The name of the database containing the collection.
func (o GetGlobalClusterConfigManagedNamespaceOutput) Db() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) string { return v.Db }).(pulumi.StringOutput)
}

// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
func (o GetGlobalClusterConfigManagedNamespaceOutput) IsCustomShardKeyHashed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) bool { return v.IsCustomShardKeyHashed }).(pulumi.BoolOutput)
}

// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
func (o GetGlobalClusterConfigManagedNamespaceOutput) IsShardKeyUnique() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) bool { return v.IsShardKeyUnique }).(pulumi.BoolOutput)
}

type GetGlobalClusterConfigManagedNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClusterConfigManagedNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GetGlobalClusterConfigManagedNamespaceArrayOutput) ToGetGlobalClusterConfigManagedNamespaceArrayOutput() GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GetGlobalClusterConfigManagedNamespaceArrayOutput) ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GetGlobalClusterConfigManagedNamespaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalClusterConfigManagedNamespace] {
	return pulumix.Output[[]GetGlobalClusterConfigManagedNamespace]{
		OutputState: o.OutputState,
	}
}

func (o GetGlobalClusterConfigManagedNamespaceArrayOutput) Index(i pulumi.IntInput) GetGlobalClusterConfigManagedNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClusterConfigManagedNamespace {
		return vs[0].([]GetGlobalClusterConfigManagedNamespace)[vs[1].(int)]
	}).(GetGlobalClusterConfigManagedNamespaceOutput)
}

type GetLdapConfigurationUserToDnMapping struct {
	LdapQuery    string `pulumi:"ldapQuery"`
	Match        string `pulumi:"match"`
	Substitution string `pulumi:"substitution"`
}

// GetLdapConfigurationUserToDnMappingInput is an input type that accepts GetLdapConfigurationUserToDnMappingArgs and GetLdapConfigurationUserToDnMappingOutput values.
// You can construct a concrete instance of `GetLdapConfigurationUserToDnMappingInput` via:
//
//	GetLdapConfigurationUserToDnMappingArgs{...}
type GetLdapConfigurationUserToDnMappingInput interface {
	pulumi.Input

	ToGetLdapConfigurationUserToDnMappingOutput() GetLdapConfigurationUserToDnMappingOutput
	ToGetLdapConfigurationUserToDnMappingOutputWithContext(context.Context) GetLdapConfigurationUserToDnMappingOutput
}

type GetLdapConfigurationUserToDnMappingArgs struct {
	LdapQuery    pulumi.StringInput `pulumi:"ldapQuery"`
	Match        pulumi.StringInput `pulumi:"match"`
	Substitution pulumi.StringInput `pulumi:"substitution"`
}

func (GetLdapConfigurationUserToDnMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (i GetLdapConfigurationUserToDnMappingArgs) ToGetLdapConfigurationUserToDnMappingOutput() GetLdapConfigurationUserToDnMappingOutput {
	return i.ToGetLdapConfigurationUserToDnMappingOutputWithContext(context.Background())
}

func (i GetLdapConfigurationUserToDnMappingArgs) ToGetLdapConfigurationUserToDnMappingOutputWithContext(ctx context.Context) GetLdapConfigurationUserToDnMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapConfigurationUserToDnMappingOutput)
}

func (i GetLdapConfigurationUserToDnMappingArgs) ToOutput(ctx context.Context) pulumix.Output[GetLdapConfigurationUserToDnMapping] {
	return pulumix.Output[GetLdapConfigurationUserToDnMapping]{
		OutputState: i.ToGetLdapConfigurationUserToDnMappingOutputWithContext(ctx).OutputState,
	}
}

// GetLdapConfigurationUserToDnMappingArrayInput is an input type that accepts GetLdapConfigurationUserToDnMappingArray and GetLdapConfigurationUserToDnMappingArrayOutput values.
// You can construct a concrete instance of `GetLdapConfigurationUserToDnMappingArrayInput` via:
//
//	GetLdapConfigurationUserToDnMappingArray{ GetLdapConfigurationUserToDnMappingArgs{...} }
type GetLdapConfigurationUserToDnMappingArrayInput interface {
	pulumi.Input

	ToGetLdapConfigurationUserToDnMappingArrayOutput() GetLdapConfigurationUserToDnMappingArrayOutput
	ToGetLdapConfigurationUserToDnMappingArrayOutputWithContext(context.Context) GetLdapConfigurationUserToDnMappingArrayOutput
}

type GetLdapConfigurationUserToDnMappingArray []GetLdapConfigurationUserToDnMappingInput

func (GetLdapConfigurationUserToDnMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (i GetLdapConfigurationUserToDnMappingArray) ToGetLdapConfigurationUserToDnMappingArrayOutput() GetLdapConfigurationUserToDnMappingArrayOutput {
	return i.ToGetLdapConfigurationUserToDnMappingArrayOutputWithContext(context.Background())
}

func (i GetLdapConfigurationUserToDnMappingArray) ToGetLdapConfigurationUserToDnMappingArrayOutputWithContext(ctx context.Context) GetLdapConfigurationUserToDnMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapConfigurationUserToDnMappingArrayOutput)
}

func (i GetLdapConfigurationUserToDnMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLdapConfigurationUserToDnMapping] {
	return pulumix.Output[[]GetLdapConfigurationUserToDnMapping]{
		OutputState: i.ToGetLdapConfigurationUserToDnMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLdapConfigurationUserToDnMappingOutput struct{ *pulumi.OutputState }

func (GetLdapConfigurationUserToDnMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (o GetLdapConfigurationUserToDnMappingOutput) ToGetLdapConfigurationUserToDnMappingOutput() GetLdapConfigurationUserToDnMappingOutput {
	return o
}

func (o GetLdapConfigurationUserToDnMappingOutput) ToGetLdapConfigurationUserToDnMappingOutputWithContext(ctx context.Context) GetLdapConfigurationUserToDnMappingOutput {
	return o
}

func (o GetLdapConfigurationUserToDnMappingOutput) ToOutput(ctx context.Context) pulumix.Output[GetLdapConfigurationUserToDnMapping] {
	return pulumix.Output[GetLdapConfigurationUserToDnMapping]{
		OutputState: o.OutputState,
	}
}

func (o GetLdapConfigurationUserToDnMappingOutput) LdapQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapConfigurationUserToDnMapping) string { return v.LdapQuery }).(pulumi.StringOutput)
}

func (o GetLdapConfigurationUserToDnMappingOutput) Match() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapConfigurationUserToDnMapping) string { return v.Match }).(pulumi.StringOutput)
}

func (o GetLdapConfigurationUserToDnMappingOutput) Substitution() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapConfigurationUserToDnMapping) string { return v.Substitution }).(pulumi.StringOutput)
}

type GetLdapConfigurationUserToDnMappingArrayOutput struct{ *pulumi.OutputState }

func (GetLdapConfigurationUserToDnMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (o GetLdapConfigurationUserToDnMappingArrayOutput) ToGetLdapConfigurationUserToDnMappingArrayOutput() GetLdapConfigurationUserToDnMappingArrayOutput {
	return o
}

func (o GetLdapConfigurationUserToDnMappingArrayOutput) ToGetLdapConfigurationUserToDnMappingArrayOutputWithContext(ctx context.Context) GetLdapConfigurationUserToDnMappingArrayOutput {
	return o
}

func (o GetLdapConfigurationUserToDnMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLdapConfigurationUserToDnMapping] {
	return pulumix.Output[[]GetLdapConfigurationUserToDnMapping]{
		OutputState: o.OutputState,
	}
}

func (o GetLdapConfigurationUserToDnMappingArrayOutput) Index(i pulumi.IntInput) GetLdapConfigurationUserToDnMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLdapConfigurationUserToDnMapping {
		return vs[0].([]GetLdapConfigurationUserToDnMapping)[vs[1].(int)]
	}).(GetLdapConfigurationUserToDnMappingOutput)
}

type GetLdapVerifyLink struct {
	Href string `pulumi:"href"`
	Rel  string `pulumi:"rel"`
}

// GetLdapVerifyLinkInput is an input type that accepts GetLdapVerifyLinkArgs and GetLdapVerifyLinkOutput values.
// You can construct a concrete instance of `GetLdapVerifyLinkInput` via:
//
//	GetLdapVerifyLinkArgs{...}
type GetLdapVerifyLinkInput interface {
	pulumi.Input

	ToGetLdapVerifyLinkOutput() GetLdapVerifyLinkOutput
	ToGetLdapVerifyLinkOutputWithContext(context.Context) GetLdapVerifyLinkOutput
}

type GetLdapVerifyLinkArgs struct {
	Href pulumi.StringInput `pulumi:"href"`
	Rel  pulumi.StringInput `pulumi:"rel"`
}

func (GetLdapVerifyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapVerifyLink)(nil)).Elem()
}

func (i GetLdapVerifyLinkArgs) ToGetLdapVerifyLinkOutput() GetLdapVerifyLinkOutput {
	return i.ToGetLdapVerifyLinkOutputWithContext(context.Background())
}

func (i GetLdapVerifyLinkArgs) ToGetLdapVerifyLinkOutputWithContext(ctx context.Context) GetLdapVerifyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapVerifyLinkOutput)
}

func (i GetLdapVerifyLinkArgs) ToOutput(ctx context.Context) pulumix.Output[GetLdapVerifyLink] {
	return pulumix.Output[GetLdapVerifyLink]{
		OutputState: i.ToGetLdapVerifyLinkOutputWithContext(ctx).OutputState,
	}
}

// GetLdapVerifyLinkArrayInput is an input type that accepts GetLdapVerifyLinkArray and GetLdapVerifyLinkArrayOutput values.
// You can construct a concrete instance of `GetLdapVerifyLinkArrayInput` via:
//
//	GetLdapVerifyLinkArray{ GetLdapVerifyLinkArgs{...} }
type GetLdapVerifyLinkArrayInput interface {
	pulumi.Input

	ToGetLdapVerifyLinkArrayOutput() GetLdapVerifyLinkArrayOutput
	ToGetLdapVerifyLinkArrayOutputWithContext(context.Context) GetLdapVerifyLinkArrayOutput
}

type GetLdapVerifyLinkArray []GetLdapVerifyLinkInput

func (GetLdapVerifyLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapVerifyLink)(nil)).Elem()
}

func (i GetLdapVerifyLinkArray) ToGetLdapVerifyLinkArrayOutput() GetLdapVerifyLinkArrayOutput {
	return i.ToGetLdapVerifyLinkArrayOutputWithContext(context.Background())
}

func (i GetLdapVerifyLinkArray) ToGetLdapVerifyLinkArrayOutputWithContext(ctx context.Context) GetLdapVerifyLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapVerifyLinkArrayOutput)
}

func (i GetLdapVerifyLinkArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLdapVerifyLink] {
	return pulumix.Output[[]GetLdapVerifyLink]{
		OutputState: i.ToGetLdapVerifyLinkArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLdapVerifyLinkOutput struct{ *pulumi.OutputState }

func (GetLdapVerifyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapVerifyLink)(nil)).Elem()
}

func (o GetLdapVerifyLinkOutput) ToGetLdapVerifyLinkOutput() GetLdapVerifyLinkOutput {
	return o
}

func (o GetLdapVerifyLinkOutput) ToGetLdapVerifyLinkOutputWithContext(ctx context.Context) GetLdapVerifyLinkOutput {
	return o
}

func (o GetLdapVerifyLinkOutput) ToOutput(ctx context.Context) pulumix.Output[GetLdapVerifyLink] {
	return pulumix.Output[GetLdapVerifyLink]{
		OutputState: o.OutputState,
	}
}

func (o GetLdapVerifyLinkOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapVerifyLink) string { return v.Href }).(pulumi.StringOutput)
}

func (o GetLdapVerifyLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapVerifyLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetLdapVerifyLinkArrayOutput struct{ *pulumi.OutputState }

func (GetLdapVerifyLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapVerifyLink)(nil)).Elem()
}

func (o GetLdapVerifyLinkArrayOutput) ToGetLdapVerifyLinkArrayOutput() GetLdapVerifyLinkArrayOutput {
	return o
}

func (o GetLdapVerifyLinkArrayOutput) ToGetLdapVerifyLinkArrayOutputWithContext(ctx context.Context) GetLdapVerifyLinkArrayOutput {
	return o
}

func (o GetLdapVerifyLinkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLdapVerifyLink] {
	return pulumix.Output[[]GetLdapVerifyLink]{
		OutputState: o.OutputState,
	}
}

func (o GetLdapVerifyLinkArrayOutput) Index(i pulumi.IntInput) GetLdapVerifyLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLdapVerifyLink {
		return vs[0].([]GetLdapVerifyLink)[vs[1].(int)]
	}).(GetLdapVerifyLinkOutput)
}

type GetLdapVerifyValidation struct {
	// The current status of the LDAP over TLS/SSL configuration.
	Status         string `pulumi:"status"`
	ValidationType string `pulumi:"validationType"`
}

// GetLdapVerifyValidationInput is an input type that accepts GetLdapVerifyValidationArgs and GetLdapVerifyValidationOutput values.
// You can construct a concrete instance of `GetLdapVerifyValidationInput` via:
//
//	GetLdapVerifyValidationArgs{...}
type GetLdapVerifyValidationInput interface {
	pulumi.Input

	ToGetLdapVerifyValidationOutput() GetLdapVerifyValidationOutput
	ToGetLdapVerifyValidationOutputWithContext(context.Context) GetLdapVerifyValidationOutput
}

type GetLdapVerifyValidationArgs struct {
	// The current status of the LDAP over TLS/SSL configuration.
	Status         pulumi.StringInput `pulumi:"status"`
	ValidationType pulumi.StringInput `pulumi:"validationType"`
}

func (GetLdapVerifyValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapVerifyValidation)(nil)).Elem()
}

func (i GetLdapVerifyValidationArgs) ToGetLdapVerifyValidationOutput() GetLdapVerifyValidationOutput {
	return i.ToGetLdapVerifyValidationOutputWithContext(context.Background())
}

func (i GetLdapVerifyValidationArgs) ToGetLdapVerifyValidationOutputWithContext(ctx context.Context) GetLdapVerifyValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapVerifyValidationOutput)
}

func (i GetLdapVerifyValidationArgs) ToOutput(ctx context.Context) pulumix.Output[GetLdapVerifyValidation] {
	return pulumix.Output[GetLdapVerifyValidation]{
		OutputState: i.ToGetLdapVerifyValidationOutputWithContext(ctx).OutputState,
	}
}

// GetLdapVerifyValidationArrayInput is an input type that accepts GetLdapVerifyValidationArray and GetLdapVerifyValidationArrayOutput values.
// You can construct a concrete instance of `GetLdapVerifyValidationArrayInput` via:
//
//	GetLdapVerifyValidationArray{ GetLdapVerifyValidationArgs{...} }
type GetLdapVerifyValidationArrayInput interface {
	pulumi.Input

	ToGetLdapVerifyValidationArrayOutput() GetLdapVerifyValidationArrayOutput
	ToGetLdapVerifyValidationArrayOutputWithContext(context.Context) GetLdapVerifyValidationArrayOutput
}

type GetLdapVerifyValidationArray []GetLdapVerifyValidationInput

func (GetLdapVerifyValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapVerifyValidation)(nil)).Elem()
}

func (i GetLdapVerifyValidationArray) ToGetLdapVerifyValidationArrayOutput() GetLdapVerifyValidationArrayOutput {
	return i.ToGetLdapVerifyValidationArrayOutputWithContext(context.Background())
}

func (i GetLdapVerifyValidationArray) ToGetLdapVerifyValidationArrayOutputWithContext(ctx context.Context) GetLdapVerifyValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapVerifyValidationArrayOutput)
}

func (i GetLdapVerifyValidationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetLdapVerifyValidation] {
	return pulumix.Output[[]GetLdapVerifyValidation]{
		OutputState: i.ToGetLdapVerifyValidationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetLdapVerifyValidationOutput struct{ *pulumi.OutputState }

func (GetLdapVerifyValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapVerifyValidation)(nil)).Elem()
}

func (o GetLdapVerifyValidationOutput) ToGetLdapVerifyValidationOutput() GetLdapVerifyValidationOutput {
	return o
}

func (o GetLdapVerifyValidationOutput) ToGetLdapVerifyValidationOutputWithContext(ctx context.Context) GetLdapVerifyValidationOutput {
	return o
}

func (o GetLdapVerifyValidationOutput) ToOutput(ctx context.Context) pulumix.Output[GetLdapVerifyValidation] {
	return pulumix.Output[GetLdapVerifyValidation]{
		OutputState: o.OutputState,
	}
}

// The current status of the LDAP over TLS/SSL configuration.
func (o GetLdapVerifyValidationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapVerifyValidation) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetLdapVerifyValidationOutput) ValidationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapVerifyValidation) string { return v.ValidationType }).(pulumi.StringOutput)
}

type GetLdapVerifyValidationArrayOutput struct{ *pulumi.OutputState }

func (GetLdapVerifyValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapVerifyValidation)(nil)).Elem()
}

func (o GetLdapVerifyValidationArrayOutput) ToGetLdapVerifyValidationArrayOutput() GetLdapVerifyValidationArrayOutput {
	return o
}

func (o GetLdapVerifyValidationArrayOutput) ToGetLdapVerifyValidationArrayOutputWithContext(ctx context.Context) GetLdapVerifyValidationArrayOutput {
	return o
}

func (o GetLdapVerifyValidationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetLdapVerifyValidation] {
	return pulumix.Output[[]GetLdapVerifyValidation]{
		OutputState: o.OutputState,
	}
}

func (o GetLdapVerifyValidationArrayOutput) Index(i pulumi.IntInput) GetLdapVerifyValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLdapVerifyValidation {
		return vs[0].([]GetLdapVerifyValidation)[vs[1].(int)]
	}).(GetLdapVerifyValidationOutput)
}

type GetNetworkContainersResult struct {
	// CIDR block that Atlas uses for your clusters. Atlas uses the specified CIDR block for all other Network Peering connections created in the project. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following [private networks](https://tools.ietf.org/html/rfc1918.html#section-3).
	AtlasCidrBlock string `pulumi:"atlasCidrBlock"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	// Unique identifier of the GCP project in which the Network Peering connection resides.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// The Network Peering Container ID.
	Id string `pulumi:"id"`
	// Name of the Network Peering connection in the Atlas project.
	NetworkName string `pulumi:"networkName"`
	// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
	ProviderName string `pulumi:"providerName"`
	// Indicates whether the project has Network Peering connections deployed in the container.
	Provisioned bool `pulumi:"provisioned"`
	// The Atlas Azure region name for where this container exists.
	Region string `pulumi:"region"`
	// The Atlas AWS region name for where this container exists.
	RegionName string `pulumi:"regionName"`
	// Atlas GCP regions where the container resides.
	Regions []string `pulumi:"regions"`
	// The name of the Azure VNet. This value is null until you provision an Azure VNet in the container.
	VnetName string `pulumi:"vnetName"`
	// Unique identifier of the project’s VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetNetworkContainersResultInput is an input type that accepts GetNetworkContainersResultArgs and GetNetworkContainersResultOutput values.
// You can construct a concrete instance of `GetNetworkContainersResultInput` via:
//
//	GetNetworkContainersResultArgs{...}
type GetNetworkContainersResultInput interface {
	pulumi.Input

	ToGetNetworkContainersResultOutput() GetNetworkContainersResultOutput
	ToGetNetworkContainersResultOutputWithContext(context.Context) GetNetworkContainersResultOutput
}

type GetNetworkContainersResultArgs struct {
	// CIDR block that Atlas uses for your clusters. Atlas uses the specified CIDR block for all other Network Peering connections created in the project. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following [private networks](https://tools.ietf.org/html/rfc1918.html#section-3).
	AtlasCidrBlock pulumi.StringInput `pulumi:"atlasCidrBlock"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId pulumi.StringInput `pulumi:"azureSubscriptionId"`
	// Unique identifier of the GCP project in which the Network Peering connection resides.
	GcpProjectId pulumi.StringInput `pulumi:"gcpProjectId"`
	// The Network Peering Container ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the Network Peering connection in the Atlas project.
	NetworkName pulumi.StringInput `pulumi:"networkName"`
	// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Indicates whether the project has Network Peering connections deployed in the container.
	Provisioned pulumi.BoolInput `pulumi:"provisioned"`
	// The Atlas Azure region name for where this container exists.
	Region pulumi.StringInput `pulumi:"region"`
	// The Atlas AWS region name for where this container exists.
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// Atlas GCP regions where the container resides.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// The name of the Azure VNet. This value is null until you provision an Azure VNet in the container.
	VnetName pulumi.StringInput `pulumi:"vnetName"`
	// Unique identifier of the project’s VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetNetworkContainersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkContainersResult)(nil)).Elem()
}

func (i GetNetworkContainersResultArgs) ToGetNetworkContainersResultOutput() GetNetworkContainersResultOutput {
	return i.ToGetNetworkContainersResultOutputWithContext(context.Background())
}

func (i GetNetworkContainersResultArgs) ToGetNetworkContainersResultOutputWithContext(ctx context.Context) GetNetworkContainersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkContainersResultOutput)
}

func (i GetNetworkContainersResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetNetworkContainersResult] {
	return pulumix.Output[GetNetworkContainersResult]{
		OutputState: i.ToGetNetworkContainersResultOutputWithContext(ctx).OutputState,
	}
}

// GetNetworkContainersResultArrayInput is an input type that accepts GetNetworkContainersResultArray and GetNetworkContainersResultArrayOutput values.
// You can construct a concrete instance of `GetNetworkContainersResultArrayInput` via:
//
//	GetNetworkContainersResultArray{ GetNetworkContainersResultArgs{...} }
type GetNetworkContainersResultArrayInput interface {
	pulumi.Input

	ToGetNetworkContainersResultArrayOutput() GetNetworkContainersResultArrayOutput
	ToGetNetworkContainersResultArrayOutputWithContext(context.Context) GetNetworkContainersResultArrayOutput
}

type GetNetworkContainersResultArray []GetNetworkContainersResultInput

func (GetNetworkContainersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkContainersResult)(nil)).Elem()
}

func (i GetNetworkContainersResultArray) ToGetNetworkContainersResultArrayOutput() GetNetworkContainersResultArrayOutput {
	return i.ToGetNetworkContainersResultArrayOutputWithContext(context.Background())
}

func (i GetNetworkContainersResultArray) ToGetNetworkContainersResultArrayOutputWithContext(ctx context.Context) GetNetworkContainersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkContainersResultArrayOutput)
}

func (i GetNetworkContainersResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetNetworkContainersResult] {
	return pulumix.Output[[]GetNetworkContainersResult]{
		OutputState: i.ToGetNetworkContainersResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetNetworkContainersResultOutput struct{ *pulumi.OutputState }

func (GetNetworkContainersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkContainersResult)(nil)).Elem()
}

func (o GetNetworkContainersResultOutput) ToGetNetworkContainersResultOutput() GetNetworkContainersResultOutput {
	return o
}

func (o GetNetworkContainersResultOutput) ToGetNetworkContainersResultOutputWithContext(ctx context.Context) GetNetworkContainersResultOutput {
	return o
}

func (o GetNetworkContainersResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkContainersResult] {
	return pulumix.Output[GetNetworkContainersResult]{
		OutputState: o.OutputState,
	}
}

// CIDR block that Atlas uses for your clusters. Atlas uses the specified CIDR block for all other Network Peering connections created in the project. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following [private networks](https://tools.ietf.org/html/rfc1918.html#section-3).
func (o GetNetworkContainersResultOutput) AtlasCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.AtlasCidrBlock }).(pulumi.StringOutput)
}

// Unique identifer of the Azure subscription in which the VNet resides.
func (o GetNetworkContainersResultOutput) AzureSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.AzureSubscriptionId }).(pulumi.StringOutput)
}

// Unique identifier of the GCP project in which the Network Peering connection resides.
func (o GetNetworkContainersResultOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

// The Network Peering Container ID.
func (o GetNetworkContainersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the Network Peering connection in the Atlas project.
func (o GetNetworkContainersResultOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.NetworkName }).(pulumi.StringOutput)
}

// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
func (o GetNetworkContainersResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Indicates whether the project has Network Peering connections deployed in the container.
func (o GetNetworkContainersResultOutput) Provisioned() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) bool { return v.Provisioned }).(pulumi.BoolOutput)
}

// The Atlas Azure region name for where this container exists.
func (o GetNetworkContainersResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.Region }).(pulumi.StringOutput)
}

// The Atlas AWS region name for where this container exists.
func (o GetNetworkContainersResultOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.RegionName }).(pulumi.StringOutput)
}

// Atlas GCP regions where the container resides.
func (o GetNetworkContainersResultOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// The name of the Azure VNet. This value is null until you provision an Azure VNet in the container.
func (o GetNetworkContainersResultOutput) VnetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.VnetName }).(pulumi.StringOutput)
}

// Unique identifier of the project’s VPC.
func (o GetNetworkContainersResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetNetworkContainersResultArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkContainersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkContainersResult)(nil)).Elem()
}

func (o GetNetworkContainersResultArrayOutput) ToGetNetworkContainersResultArrayOutput() GetNetworkContainersResultArrayOutput {
	return o
}

func (o GetNetworkContainersResultArrayOutput) ToGetNetworkContainersResultArrayOutputWithContext(ctx context.Context) GetNetworkContainersResultArrayOutput {
	return o
}

func (o GetNetworkContainersResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetNetworkContainersResult] {
	return pulumix.Output[[]GetNetworkContainersResult]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkContainersResultArrayOutput) Index(i pulumi.IntInput) GetNetworkContainersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkContainersResult {
		return vs[0].([]GetNetworkContainersResult)[vs[1].(int)]
	}).(GetNetworkContainersResultOutput)
}

type GetNetworkPeeringsResult struct {
	// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
	AccepterRegionName string `pulumi:"accepterRegionName"`
	AtlasCidrBlock     string `pulumi:"atlasCidrBlock"`
	// Account ID of the owner of the peer VPC.
	AwsAccountId string `pulumi:"awsAccountId"`
	// Unique identifier for an Azure AD directory.
	AzureDirectoryId string `pulumi:"azureDirectoryId"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	// Unique identifier for the peering connection.
	ConnectionId string `pulumi:"connectionId"`
	ContainerId  string `pulumi:"containerId"`
	// When `"status" : "FAILED"`, Atlas provides a description of the error.
	ErrorMessage string `pulumi:"errorMessage"`
	// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
	ErrorState string `pulumi:"errorState"`
	// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
	ErrorStateName string `pulumi:"errorStateName"`
	// GCP project ID of the owner of the network peer.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// Name of the network peer to which Atlas connects.
	NetworkName string `pulumi:"networkName"`
	// Atlas assigned unique ID for the peering connection.
	PeeringId string `pulumi:"peeringId"`
	// Cloud provider for this VPC peering connection. If omitted, Atlas sets this parameter to AWS. (Possible Values `AWS`, `AZURE`, `GCP`).
	ProviderName string `pulumi:"providerName"`
	// Name of your Azure resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Peer VPC CIDR block or subnet.
	RouteTableCidrBlock string `pulumi:"routeTableCidrBlock"`
	// Status of the Atlas network peering connection: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING`, `WAITING_FOR_USER`.
	Status string `pulumi:"status"`
	// The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
	StatusName string `pulumi:"statusName"`
	// Name of your Azure VNet.
	VnetName string `pulumi:"vnetName"`
	// Unique identifier of the peer VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetNetworkPeeringsResultInput is an input type that accepts GetNetworkPeeringsResultArgs and GetNetworkPeeringsResultOutput values.
// You can construct a concrete instance of `GetNetworkPeeringsResultInput` via:
//
//	GetNetworkPeeringsResultArgs{...}
type GetNetworkPeeringsResultInput interface {
	pulumi.Input

	ToGetNetworkPeeringsResultOutput() GetNetworkPeeringsResultOutput
	ToGetNetworkPeeringsResultOutputWithContext(context.Context) GetNetworkPeeringsResultOutput
}

type GetNetworkPeeringsResultArgs struct {
	// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
	AccepterRegionName pulumi.StringInput `pulumi:"accepterRegionName"`
	AtlasCidrBlock     pulumi.StringInput `pulumi:"atlasCidrBlock"`
	// Account ID of the owner of the peer VPC.
	AwsAccountId pulumi.StringInput `pulumi:"awsAccountId"`
	// Unique identifier for an Azure AD directory.
	AzureDirectoryId pulumi.StringInput `pulumi:"azureDirectoryId"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId pulumi.StringInput `pulumi:"azureSubscriptionId"`
	// Unique identifier for the peering connection.
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
	ContainerId  pulumi.StringInput `pulumi:"containerId"`
	// When `"status" : "FAILED"`, Atlas provides a description of the error.
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
	ErrorState pulumi.StringInput `pulumi:"errorState"`
	// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
	ErrorStateName pulumi.StringInput `pulumi:"errorStateName"`
	// GCP project ID of the owner of the network peer.
	GcpProjectId pulumi.StringInput `pulumi:"gcpProjectId"`
	// Name of the network peer to which Atlas connects.
	NetworkName pulumi.StringInput `pulumi:"networkName"`
	// Atlas assigned unique ID for the peering connection.
	PeeringId pulumi.StringInput `pulumi:"peeringId"`
	// Cloud provider for this VPC peering connection. If omitted, Atlas sets this parameter to AWS. (Possible Values `AWS`, `AZURE`, `GCP`).
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Name of your Azure resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Peer VPC CIDR block or subnet.
	RouteTableCidrBlock pulumi.StringInput `pulumi:"routeTableCidrBlock"`
	// Status of the Atlas network peering connection: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING`, `WAITING_FOR_USER`.
	Status pulumi.StringInput `pulumi:"status"`
	// The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
	StatusName pulumi.StringInput `pulumi:"statusName"`
	// Name of your Azure VNet.
	VnetName pulumi.StringInput `pulumi:"vnetName"`
	// Unique identifier of the peer VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetNetworkPeeringsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPeeringsResult)(nil)).Elem()
}

func (i GetNetworkPeeringsResultArgs) ToGetNetworkPeeringsResultOutput() GetNetworkPeeringsResultOutput {
	return i.ToGetNetworkPeeringsResultOutputWithContext(context.Background())
}

func (i GetNetworkPeeringsResultArgs) ToGetNetworkPeeringsResultOutputWithContext(ctx context.Context) GetNetworkPeeringsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPeeringsResultOutput)
}

func (i GetNetworkPeeringsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetNetworkPeeringsResult] {
	return pulumix.Output[GetNetworkPeeringsResult]{
		OutputState: i.ToGetNetworkPeeringsResultOutputWithContext(ctx).OutputState,
	}
}

// GetNetworkPeeringsResultArrayInput is an input type that accepts GetNetworkPeeringsResultArray and GetNetworkPeeringsResultArrayOutput values.
// You can construct a concrete instance of `GetNetworkPeeringsResultArrayInput` via:
//
//	GetNetworkPeeringsResultArray{ GetNetworkPeeringsResultArgs{...} }
type GetNetworkPeeringsResultArrayInput interface {
	pulumi.Input

	ToGetNetworkPeeringsResultArrayOutput() GetNetworkPeeringsResultArrayOutput
	ToGetNetworkPeeringsResultArrayOutputWithContext(context.Context) GetNetworkPeeringsResultArrayOutput
}

type GetNetworkPeeringsResultArray []GetNetworkPeeringsResultInput

func (GetNetworkPeeringsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPeeringsResult)(nil)).Elem()
}

func (i GetNetworkPeeringsResultArray) ToGetNetworkPeeringsResultArrayOutput() GetNetworkPeeringsResultArrayOutput {
	return i.ToGetNetworkPeeringsResultArrayOutputWithContext(context.Background())
}

func (i GetNetworkPeeringsResultArray) ToGetNetworkPeeringsResultArrayOutputWithContext(ctx context.Context) GetNetworkPeeringsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPeeringsResultArrayOutput)
}

func (i GetNetworkPeeringsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetNetworkPeeringsResult] {
	return pulumix.Output[[]GetNetworkPeeringsResult]{
		OutputState: i.ToGetNetworkPeeringsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetNetworkPeeringsResultOutput struct{ *pulumi.OutputState }

func (GetNetworkPeeringsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPeeringsResult)(nil)).Elem()
}

func (o GetNetworkPeeringsResultOutput) ToGetNetworkPeeringsResultOutput() GetNetworkPeeringsResultOutput {
	return o
}

func (o GetNetworkPeeringsResultOutput) ToGetNetworkPeeringsResultOutputWithContext(ctx context.Context) GetNetworkPeeringsResultOutput {
	return o
}

func (o GetNetworkPeeringsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkPeeringsResult] {
	return pulumix.Output[GetNetworkPeeringsResult]{
		OutputState: o.OutputState,
	}
}

// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
func (o GetNetworkPeeringsResultOutput) AccepterRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AccepterRegionName }).(pulumi.StringOutput)
}

func (o GetNetworkPeeringsResultOutput) AtlasCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AtlasCidrBlock }).(pulumi.StringOutput)
}

// Account ID of the owner of the peer VPC.
func (o GetNetworkPeeringsResultOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AwsAccountId }).(pulumi.StringOutput)
}

// Unique identifier for an Azure AD directory.
func (o GetNetworkPeeringsResultOutput) AzureDirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AzureDirectoryId }).(pulumi.StringOutput)
}

// Unique identifer of the Azure subscription in which the VNet resides.
func (o GetNetworkPeeringsResultOutput) AzureSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AzureSubscriptionId }).(pulumi.StringOutput)
}

// Unique identifier for the peering connection.
func (o GetNetworkPeeringsResultOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ConnectionId }).(pulumi.StringOutput)
}

func (o GetNetworkPeeringsResultOutput) ContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ContainerId }).(pulumi.StringOutput)
}

// When `"status" : "FAILED"`, Atlas provides a description of the error.
func (o GetNetworkPeeringsResultOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
func (o GetNetworkPeeringsResultOutput) ErrorState() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ErrorState }).(pulumi.StringOutput)
}

// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
func (o GetNetworkPeeringsResultOutput) ErrorStateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ErrorStateName }).(pulumi.StringOutput)
}

// GCP project ID of the owner of the network peer.
func (o GetNetworkPeeringsResultOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

// Name of the network peer to which Atlas connects.
func (o GetNetworkPeeringsResultOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.NetworkName }).(pulumi.StringOutput)
}

// Atlas assigned unique ID for the peering connection.
func (o GetNetworkPeeringsResultOutput) PeeringId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.PeeringId }).(pulumi.StringOutput)
}

// Cloud provider for this VPC peering connection. If omitted, Atlas sets this parameter to AWS. (Possible Values `AWS`, `AZURE`, `GCP`).
func (o GetNetworkPeeringsResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Name of your Azure resource group.
func (o GetNetworkPeeringsResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Peer VPC CIDR block or subnet.
func (o GetNetworkPeeringsResultOutput) RouteTableCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.RouteTableCidrBlock }).(pulumi.StringOutput)
}

// Status of the Atlas network peering connection: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING`, `WAITING_FOR_USER`.
func (o GetNetworkPeeringsResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.Status }).(pulumi.StringOutput)
}

// The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
func (o GetNetworkPeeringsResultOutput) StatusName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.StatusName }).(pulumi.StringOutput)
}

// Name of your Azure VNet.
func (o GetNetworkPeeringsResultOutput) VnetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.VnetName }).(pulumi.StringOutput)
}

// Unique identifier of the peer VPC.
func (o GetNetworkPeeringsResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetNetworkPeeringsResultArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkPeeringsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPeeringsResult)(nil)).Elem()
}

func (o GetNetworkPeeringsResultArrayOutput) ToGetNetworkPeeringsResultArrayOutput() GetNetworkPeeringsResultArrayOutput {
	return o
}

func (o GetNetworkPeeringsResultArrayOutput) ToGetNetworkPeeringsResultArrayOutputWithContext(ctx context.Context) GetNetworkPeeringsResultArrayOutput {
	return o
}

func (o GetNetworkPeeringsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetNetworkPeeringsResult] {
	return pulumix.Output[[]GetNetworkPeeringsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkPeeringsResultArrayOutput) Index(i pulumi.IntInput) GetNetworkPeeringsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkPeeringsResult {
		return vs[0].([]GetNetworkPeeringsResult)[vs[1].(int)]
	}).(GetNetworkPeeringsResultOutput)
}

type GetOnlineArchiveCriteria struct {
	DateField       string `pulumi:"dateField"`
	DateFormat      string `pulumi:"dateFormat"`
	ExpireAfterDays int    `pulumi:"expireAfterDays"`
	Query           string `pulumi:"query"`
	Type            string `pulumi:"type"`
}

// GetOnlineArchiveCriteriaInput is an input type that accepts GetOnlineArchiveCriteriaArgs and GetOnlineArchiveCriteriaOutput values.
// You can construct a concrete instance of `GetOnlineArchiveCriteriaInput` via:
//
//	GetOnlineArchiveCriteriaArgs{...}
type GetOnlineArchiveCriteriaInput interface {
	pulumi.Input

	ToGetOnlineArchiveCriteriaOutput() GetOnlineArchiveCriteriaOutput
	ToGetOnlineArchiveCriteriaOutputWithContext(context.Context) GetOnlineArchiveCriteriaOutput
}

type GetOnlineArchiveCriteriaArgs struct {
	DateField       pulumi.StringInput `pulumi:"dateField"`
	DateFormat      pulumi.StringInput `pulumi:"dateFormat"`
	ExpireAfterDays pulumi.IntInput    `pulumi:"expireAfterDays"`
	Query           pulumi.StringInput `pulumi:"query"`
	Type            pulumi.StringInput `pulumi:"type"`
}

func (GetOnlineArchiveCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchiveCriteria)(nil)).Elem()
}

func (i GetOnlineArchiveCriteriaArgs) ToGetOnlineArchiveCriteriaOutput() GetOnlineArchiveCriteriaOutput {
	return i.ToGetOnlineArchiveCriteriaOutputWithContext(context.Background())
}

func (i GetOnlineArchiveCriteriaArgs) ToGetOnlineArchiveCriteriaOutputWithContext(ctx context.Context) GetOnlineArchiveCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchiveCriteriaOutput)
}

func (i GetOnlineArchiveCriteriaArgs) ToOutput(ctx context.Context) pulumix.Output[GetOnlineArchiveCriteria] {
	return pulumix.Output[GetOnlineArchiveCriteria]{
		OutputState: i.ToGetOnlineArchiveCriteriaOutputWithContext(ctx).OutputState,
	}
}

// GetOnlineArchiveCriteriaArrayInput is an input type that accepts GetOnlineArchiveCriteriaArray and GetOnlineArchiveCriteriaArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchiveCriteriaArrayInput` via:
//
//	GetOnlineArchiveCriteriaArray{ GetOnlineArchiveCriteriaArgs{...} }
type GetOnlineArchiveCriteriaArrayInput interface {
	pulumi.Input

	ToGetOnlineArchiveCriteriaArrayOutput() GetOnlineArchiveCriteriaArrayOutput
	ToGetOnlineArchiveCriteriaArrayOutputWithContext(context.Context) GetOnlineArchiveCriteriaArrayOutput
}

type GetOnlineArchiveCriteriaArray []GetOnlineArchiveCriteriaInput

func (GetOnlineArchiveCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchiveCriteria)(nil)).Elem()
}

func (i GetOnlineArchiveCriteriaArray) ToGetOnlineArchiveCriteriaArrayOutput() GetOnlineArchiveCriteriaArrayOutput {
	return i.ToGetOnlineArchiveCriteriaArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchiveCriteriaArray) ToGetOnlineArchiveCriteriaArrayOutputWithContext(ctx context.Context) GetOnlineArchiveCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchiveCriteriaArrayOutput)
}

func (i GetOnlineArchiveCriteriaArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOnlineArchiveCriteria] {
	return pulumix.Output[[]GetOnlineArchiveCriteria]{
		OutputState: i.ToGetOnlineArchiveCriteriaArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOnlineArchiveCriteriaOutput struct{ *pulumi.OutputState }

func (GetOnlineArchiveCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchiveCriteria)(nil)).Elem()
}

func (o GetOnlineArchiveCriteriaOutput) ToGetOnlineArchiveCriteriaOutput() GetOnlineArchiveCriteriaOutput {
	return o
}

func (o GetOnlineArchiveCriteriaOutput) ToGetOnlineArchiveCriteriaOutputWithContext(ctx context.Context) GetOnlineArchiveCriteriaOutput {
	return o
}

func (o GetOnlineArchiveCriteriaOutput) ToOutput(ctx context.Context) pulumix.Output[GetOnlineArchiveCriteria] {
	return pulumix.Output[GetOnlineArchiveCriteria]{
		OutputState: o.OutputState,
	}
}

func (o GetOnlineArchiveCriteriaOutput) DateField() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) string { return v.DateField }).(pulumi.StringOutput)
}

func (o GetOnlineArchiveCriteriaOutput) DateFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) string { return v.DateFormat }).(pulumi.StringOutput)
}

func (o GetOnlineArchiveCriteriaOutput) ExpireAfterDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) int { return v.ExpireAfterDays }).(pulumi.IntOutput)
}

func (o GetOnlineArchiveCriteriaOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) string { return v.Query }).(pulumi.StringOutput)
}

func (o GetOnlineArchiveCriteriaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) string { return v.Type }).(pulumi.StringOutput)
}

type GetOnlineArchiveCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchiveCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchiveCriteria)(nil)).Elem()
}

func (o GetOnlineArchiveCriteriaArrayOutput) ToGetOnlineArchiveCriteriaArrayOutput() GetOnlineArchiveCriteriaArrayOutput {
	return o
}

func (o GetOnlineArchiveCriteriaArrayOutput) ToGetOnlineArchiveCriteriaArrayOutputWithContext(ctx context.Context) GetOnlineArchiveCriteriaArrayOutput {
	return o
}

func (o GetOnlineArchiveCriteriaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOnlineArchiveCriteria] {
	return pulumix.Output[[]GetOnlineArchiveCriteria]{
		OutputState: o.OutputState,
	}
}

func (o GetOnlineArchiveCriteriaArrayOutput) Index(i pulumi.IntInput) GetOnlineArchiveCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchiveCriteria {
		return vs[0].([]GetOnlineArchiveCriteria)[vs[1].(int)]
	}).(GetOnlineArchiveCriteriaOutput)
}

type GetOnlineArchivePartitionField struct {
	FieldName string `pulumi:"fieldName"`
	FieldType string `pulumi:"fieldType"`
	Order     int    `pulumi:"order"`
}

// GetOnlineArchivePartitionFieldInput is an input type that accepts GetOnlineArchivePartitionFieldArgs and GetOnlineArchivePartitionFieldOutput values.
// You can construct a concrete instance of `GetOnlineArchivePartitionFieldInput` via:
//
//	GetOnlineArchivePartitionFieldArgs{...}
type GetOnlineArchivePartitionFieldInput interface {
	pulumi.Input

	ToGetOnlineArchivePartitionFieldOutput() GetOnlineArchivePartitionFieldOutput
	ToGetOnlineArchivePartitionFieldOutputWithContext(context.Context) GetOnlineArchivePartitionFieldOutput
}

type GetOnlineArchivePartitionFieldArgs struct {
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	FieldType pulumi.StringInput `pulumi:"fieldType"`
	Order     pulumi.IntInput    `pulumi:"order"`
}

func (GetOnlineArchivePartitionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivePartitionField)(nil)).Elem()
}

func (i GetOnlineArchivePartitionFieldArgs) ToGetOnlineArchivePartitionFieldOutput() GetOnlineArchivePartitionFieldOutput {
	return i.ToGetOnlineArchivePartitionFieldOutputWithContext(context.Background())
}

func (i GetOnlineArchivePartitionFieldArgs) ToGetOnlineArchivePartitionFieldOutputWithContext(ctx context.Context) GetOnlineArchivePartitionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivePartitionFieldOutput)
}

func (i GetOnlineArchivePartitionFieldArgs) ToOutput(ctx context.Context) pulumix.Output[GetOnlineArchivePartitionField] {
	return pulumix.Output[GetOnlineArchivePartitionField]{
		OutputState: i.ToGetOnlineArchivePartitionFieldOutputWithContext(ctx).OutputState,
	}
}

// GetOnlineArchivePartitionFieldArrayInput is an input type that accepts GetOnlineArchivePartitionFieldArray and GetOnlineArchivePartitionFieldArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchivePartitionFieldArrayInput` via:
//
//	GetOnlineArchivePartitionFieldArray{ GetOnlineArchivePartitionFieldArgs{...} }
type GetOnlineArchivePartitionFieldArrayInput interface {
	pulumi.Input

	ToGetOnlineArchivePartitionFieldArrayOutput() GetOnlineArchivePartitionFieldArrayOutput
	ToGetOnlineArchivePartitionFieldArrayOutputWithContext(context.Context) GetOnlineArchivePartitionFieldArrayOutput
}

type GetOnlineArchivePartitionFieldArray []GetOnlineArchivePartitionFieldInput

func (GetOnlineArchivePartitionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivePartitionField)(nil)).Elem()
}

func (i GetOnlineArchivePartitionFieldArray) ToGetOnlineArchivePartitionFieldArrayOutput() GetOnlineArchivePartitionFieldArrayOutput {
	return i.ToGetOnlineArchivePartitionFieldArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchivePartitionFieldArray) ToGetOnlineArchivePartitionFieldArrayOutputWithContext(ctx context.Context) GetOnlineArchivePartitionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivePartitionFieldArrayOutput)
}

func (i GetOnlineArchivePartitionFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOnlineArchivePartitionField] {
	return pulumix.Output[[]GetOnlineArchivePartitionField]{
		OutputState: i.ToGetOnlineArchivePartitionFieldArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOnlineArchivePartitionFieldOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivePartitionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivePartitionField)(nil)).Elem()
}

func (o GetOnlineArchivePartitionFieldOutput) ToGetOnlineArchivePartitionFieldOutput() GetOnlineArchivePartitionFieldOutput {
	return o
}

func (o GetOnlineArchivePartitionFieldOutput) ToGetOnlineArchivePartitionFieldOutputWithContext(ctx context.Context) GetOnlineArchivePartitionFieldOutput {
	return o
}

func (o GetOnlineArchivePartitionFieldOutput) ToOutput(ctx context.Context) pulumix.Output[GetOnlineArchivePartitionField] {
	return pulumix.Output[GetOnlineArchivePartitionField]{
		OutputState: o.OutputState,
	}
}

func (o GetOnlineArchivePartitionFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivePartitionField) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivePartitionFieldOutput) FieldType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivePartitionField) string { return v.FieldType }).(pulumi.StringOutput)
}

func (o GetOnlineArchivePartitionFieldOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchivePartitionField) int { return v.Order }).(pulumi.IntOutput)
}

type GetOnlineArchivePartitionFieldArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivePartitionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivePartitionField)(nil)).Elem()
}

func (o GetOnlineArchivePartitionFieldArrayOutput) ToGetOnlineArchivePartitionFieldArrayOutput() GetOnlineArchivePartitionFieldArrayOutput {
	return o
}

func (o GetOnlineArchivePartitionFieldArrayOutput) ToGetOnlineArchivePartitionFieldArrayOutputWithContext(ctx context.Context) GetOnlineArchivePartitionFieldArrayOutput {
	return o
}

func (o GetOnlineArchivePartitionFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOnlineArchivePartitionField] {
	return pulumix.Output[[]GetOnlineArchivePartitionField]{
		OutputState: o.OutputState,
	}
}

func (o GetOnlineArchivePartitionFieldArrayOutput) Index(i pulumi.IntInput) GetOnlineArchivePartitionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchivePartitionField {
		return vs[0].([]GetOnlineArchivePartitionField)[vs[1].(int)]
	}).(GetOnlineArchivePartitionFieldOutput)
}

type GetOnlineArchiveSchedule struct {
	DayOfMonth  *int   `pulumi:"dayOfMonth"`
	DayOfWeek   *int   `pulumi:"dayOfWeek"`
	EndHour     int    `pulumi:"endHour"`
	EndMinute   int    `pulumi:"endMinute"`
	StartHour   int    `pulumi:"startHour"`
	StartMinute int    `pulumi:"startMinute"`
	Type        string `pulumi:"type"`
}

// GetOnlineArchiveScheduleInput is an input type that accepts GetOnlineArchiveScheduleArgs and GetOnlineArchiveScheduleOutput values.
// You can construct a concrete instance of `GetOnlineArchiveScheduleInput` via:
//
//	GetOnlineArchiveScheduleArgs{...}
type GetOnlineArchiveScheduleInput interface {
	pulumi.Input

	ToGetOnlineArchiveScheduleOutput() GetOnlineArchiveScheduleOutput
	ToGetOnlineArchiveScheduleOutputWithContext(context.Context) GetOnlineArchiveScheduleOutput
}

type GetOnlineArchiveScheduleArgs struct {
	DayOfMonth  pulumi.IntPtrInput `pulumi:"dayOfMonth"`
	DayOfWeek   pulumi.IntPtrInput `pulumi:"dayOfWeek"`
	EndHour     pulumi.IntInput    `pulumi:"endHour"`
	EndMinute   pulumi.IntInput    `pulumi:"endMinute"`
	StartHour   pulumi.IntInput    `pulumi:"startHour"`
	StartMinute pulumi.IntInput    `pulumi:"startMinute"`
	Type        pulumi.StringInput `pulumi:"type"`
}

func (GetOnlineArchiveScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchiveSchedule)(nil)).Elem()
}

func (i GetOnlineArchiveScheduleArgs) ToGetOnlineArchiveScheduleOutput() GetOnlineArchiveScheduleOutput {
	return i.ToGetOnlineArchiveScheduleOutputWithContext(context.Background())
}

func (i GetOnlineArchiveScheduleArgs) ToGetOnlineArchiveScheduleOutputWithContext(ctx context.Context) GetOnlineArchiveScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchiveScheduleOutput)
}

func (i GetOnlineArchiveScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[GetOnlineArchiveSchedule] {
	return pulumix.Output[GetOnlineArchiveSchedule]{
		OutputState: i.ToGetOnlineArchiveScheduleOutputWithContext(ctx).OutputState,
	}
}

// GetOnlineArchiveScheduleArrayInput is an input type that accepts GetOnlineArchiveScheduleArray and GetOnlineArchiveScheduleArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchiveScheduleArrayInput` via:
//
//	GetOnlineArchiveScheduleArray{ GetOnlineArchiveScheduleArgs{...} }
type GetOnlineArchiveScheduleArrayInput interface {
	pulumi.Input

	ToGetOnlineArchiveScheduleArrayOutput() GetOnlineArchiveScheduleArrayOutput
	ToGetOnlineArchiveScheduleArrayOutputWithContext(context.Context) GetOnlineArchiveScheduleArrayOutput
}

type GetOnlineArchiveScheduleArray []GetOnlineArchiveScheduleInput

func (GetOnlineArchiveScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchiveSchedule)(nil)).Elem()
}

func (i GetOnlineArchiveScheduleArray) ToGetOnlineArchiveScheduleArrayOutput() GetOnlineArchiveScheduleArrayOutput {
	return i.ToGetOnlineArchiveScheduleArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchiveScheduleArray) ToGetOnlineArchiveScheduleArrayOutputWithContext(ctx context.Context) GetOnlineArchiveScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchiveScheduleArrayOutput)
}

func (i GetOnlineArchiveScheduleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOnlineArchiveSchedule] {
	return pulumix.Output[[]GetOnlineArchiveSchedule]{
		OutputState: i.ToGetOnlineArchiveScheduleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOnlineArchiveScheduleOutput struct{ *pulumi.OutputState }

func (GetOnlineArchiveScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchiveSchedule)(nil)).Elem()
}

func (o GetOnlineArchiveScheduleOutput) ToGetOnlineArchiveScheduleOutput() GetOnlineArchiveScheduleOutput {
	return o
}

func (o GetOnlineArchiveScheduleOutput) ToGetOnlineArchiveScheduleOutputWithContext(ctx context.Context) GetOnlineArchiveScheduleOutput {
	return o
}

func (o GetOnlineArchiveScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[GetOnlineArchiveSchedule] {
	return pulumix.Output[GetOnlineArchiveSchedule]{
		OutputState: o.OutputState,
	}
}

func (o GetOnlineArchiveScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetOnlineArchiveSchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o GetOnlineArchiveScheduleOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetOnlineArchiveSchedule) *int { return v.DayOfWeek }).(pulumi.IntPtrOutput)
}

func (o GetOnlineArchiveScheduleOutput) EndHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchiveSchedule) int { return v.EndHour }).(pulumi.IntOutput)
}

func (o GetOnlineArchiveScheduleOutput) EndMinute() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchiveSchedule) int { return v.EndMinute }).(pulumi.IntOutput)
}

func (o GetOnlineArchiveScheduleOutput) StartHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchiveSchedule) int { return v.StartHour }).(pulumi.IntOutput)
}

func (o GetOnlineArchiveScheduleOutput) StartMinute() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchiveSchedule) int { return v.StartMinute }).(pulumi.IntOutput)
}

func (o GetOnlineArchiveScheduleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchiveSchedule) string { return v.Type }).(pulumi.StringOutput)
}

type GetOnlineArchiveScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchiveScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchiveSchedule)(nil)).Elem()
}

func (o GetOnlineArchiveScheduleArrayOutput) ToGetOnlineArchiveScheduleArrayOutput() GetOnlineArchiveScheduleArrayOutput {
	return o
}

func (o GetOnlineArchiveScheduleArrayOutput) ToGetOnlineArchiveScheduleArrayOutputWithContext(ctx context.Context) GetOnlineArchiveScheduleArrayOutput {
	return o
}

func (o GetOnlineArchiveScheduleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOnlineArchiveSchedule] {
	return pulumix.Output[[]GetOnlineArchiveSchedule]{
		OutputState: o.OutputState,
	}
}

func (o GetOnlineArchiveScheduleArrayOutput) Index(i pulumi.IntInput) GetOnlineArchiveScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchiveSchedule {
		return vs[0].([]GetOnlineArchiveSchedule)[vs[1].(int)]
	}).(GetOnlineArchiveScheduleOutput)
}

type GetOnlineArchivesResult struct {
	ArchiveId string `pulumi:"archiveId"`
	// Name of the cluster that contains the collection.
	//
	// # Attributes Reference
	//
	// In addition to all arguments above, the following attributes are exported:
	ClusterName     string                                  `pulumi:"clusterName"`
	CollName        string                                  `pulumi:"collName"`
	CollectionType  string                                  `pulumi:"collectionType"`
	Criterias       []GetOnlineArchivesResultCriteria       `pulumi:"criterias"`
	DbName          string                                  `pulumi:"dbName"`
	PartitionFields []GetOnlineArchivesResultPartitionField `pulumi:"partitionFields"`
	Paused          bool                                    `pulumi:"paused"`
	// The unique ID for the project.
	ProjectId string                            `pulumi:"projectId"`
	Schedules []GetOnlineArchivesResultSchedule `pulumi:"schedules"`
	State     string                            `pulumi:"state"`
}

// GetOnlineArchivesResultInput is an input type that accepts GetOnlineArchivesResultArgs and GetOnlineArchivesResultOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultInput` via:
//
//	GetOnlineArchivesResultArgs{...}
type GetOnlineArchivesResultInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultOutput() GetOnlineArchivesResultOutput
	ToGetOnlineArchivesResultOutputWithContext(context.Context) GetOnlineArchivesResultOutput
}

type GetOnlineArchivesResultArgs struct {
	ArchiveId pulumi.StringInput `pulumi:"archiveId"`
	// Name of the cluster that contains the collection.
	//
	// # Attributes Reference
	//
	// In addition to all arguments above, the following attributes are exported:
	ClusterName     pulumi.StringInput                              `pulumi:"clusterName"`
	CollName        pulumi.StringInput                              `pulumi:"collName"`
	CollectionType  pulumi.StringInput                              `pulumi:"collectionType"`
	Criterias       GetOnlineArchivesResultCriteriaArrayInput       `pulumi:"criterias"`
	DbName          pulumi.StringInput                              `pulumi:"dbName"`
	PartitionFields GetOnlineArchivesResultPartitionFieldArrayInput `pulumi:"partitionFields"`
	Paused          pulumi.BoolInput                                `pulumi:"paused"`
	// The unique ID for the project.
	ProjectId pulumi.StringInput                        `pulumi:"projectId"`
	Schedules GetOnlineArchivesResultScheduleArrayInput `pulumi:"schedules"`
	State     pulumi.StringInput                        `pulumi:"state"`
}

func (GetOnlineArchivesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResult)(nil)).Elem()
}

func (i GetOnlineArchivesResultArgs) ToGetOnlineArchivesResultOutput() GetOnlineArchivesResultOutput {
	return i.ToGetOnlineArchivesResultOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultArgs) ToGetOnlineArchivesResultOutputWithContext(ctx context.Context) GetOnlineArchivesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultOutput)
}

func (i GetOnlineArchivesResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetOnlineArchivesResult] {
	return pulumix.Output[GetOnlineArchivesResult]{
		OutputState: i.ToGetOnlineArchivesResultOutputWithContext(ctx).OutputState,
	}
}

// GetOnlineArchivesResultArrayInput is an input type that accepts GetOnlineArchivesResultArray and GetOnlineArchivesResultArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultArrayInput` via:
//
//	GetOnlineArchivesResultArray{ GetOnlineArchivesResultArgs{...} }
type GetOnlineArchivesResultArrayInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultArrayOutput() GetOnlineArchivesResultArrayOutput
	ToGetOnlineArchivesResultArrayOutputWithContext(context.Context) GetOnlineArchivesResultArrayOutput
}

type GetOnlineArchivesResultArray []GetOnlineArchivesResultInput

func (GetOnlineArchivesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResult)(nil)).Elem()
}

func (i GetOnlineArchivesResultArray) ToGetOnlineArchivesResultArrayOutput() GetOnlineArchivesResultArrayOutput {
	return i.ToGetOnlineArchivesResultArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultArray) ToGetOnlineArchivesResultArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultArrayOutput)
}

func (i GetOnlineArchivesResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOnlineArchivesResult] {
	return pulumix.Output[[]GetOnlineArchivesResult]{
		OutputState: i.ToGetOnlineArchivesResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOnlineArchivesResultOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResult)(nil)).Elem()
}

func (o GetOnlineArchivesResultOutput) ToGetOnlineArchivesResultOutput() GetOnlineArchivesResultOutput {
	return o
}

func (o GetOnlineArchivesResultOutput) ToGetOnlineArchivesResultOutputWithContext(ctx context.Context) GetOnlineArchivesResultOutput {
	return o
}

func (o GetOnlineArchivesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetOnlineArchivesResult] {
	return pulumix.Output[GetOnlineArchivesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetOnlineArchivesResultOutput) ArchiveId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.ArchiveId }).(pulumi.StringOutput)
}

// Name of the cluster that contains the collection.
//
// # Attributes Reference
//
// In addition to all arguments above, the following attributes are exported:
func (o GetOnlineArchivesResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultOutput) CollName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.CollName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultOutput) CollectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.CollectionType }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultOutput) Criterias() GetOnlineArchivesResultCriteriaArrayOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) []GetOnlineArchivesResultCriteria { return v.Criterias }).(GetOnlineArchivesResultCriteriaArrayOutput)
}

func (o GetOnlineArchivesResultOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.DbName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultOutput) PartitionFields() GetOnlineArchivesResultPartitionFieldArrayOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) []GetOnlineArchivesResultPartitionField { return v.PartitionFields }).(GetOnlineArchivesResultPartitionFieldArrayOutput)
}

func (o GetOnlineArchivesResultOutput) Paused() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) bool { return v.Paused }).(pulumi.BoolOutput)
}

// The unique ID for the project.
func (o GetOnlineArchivesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultOutput) Schedules() GetOnlineArchivesResultScheduleArrayOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) []GetOnlineArchivesResultSchedule { return v.Schedules }).(GetOnlineArchivesResultScheduleArrayOutput)
}

func (o GetOnlineArchivesResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.State }).(pulumi.StringOutput)
}

type GetOnlineArchivesResultArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResult)(nil)).Elem()
}

func (o GetOnlineArchivesResultArrayOutput) ToGetOnlineArchivesResultArrayOutput() GetOnlineArchivesResultArrayOutput {
	return o
}

func (o GetOnlineArchivesResultArrayOutput) ToGetOnlineArchivesResultArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultArrayOutput {
	return o
}

func (o GetOnlineArchivesResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOnlineArchivesResult] {
	return pulumix.Output[[]GetOnlineArchivesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetOnlineArchivesResultArrayOutput) Index(i pulumi.IntInput) GetOnlineArchivesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchivesResult {
		return vs[0].([]GetOnlineArchivesResult)[vs[1].(int)]
	}).(GetOnlineArchivesResultOutput)
}

type GetOnlineArchivesResultCriteria struct {
	DateField       string `pulumi:"dateField"`
	DateFormat      string `pulumi:"dateFormat"`
	ExpireAfterDays int    `pulumi:"expireAfterDays"`
	Query           string `pulumi:"query"`
	Type            string `pulumi:"type"`
}

// GetOnlineArchivesResultCriteriaInput is an input type that accepts GetOnlineArchivesResultCriteriaArgs and GetOnlineArchivesResultCriteriaOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultCriteriaInput` via:
//
//	GetOnlineArchivesResultCriteriaArgs{...}
type GetOnlineArchivesResultCriteriaInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultCriteriaOutput() GetOnlineArchivesResultCriteriaOutput
	ToGetOnlineArchivesResultCriteriaOutputWithContext(context.Context) GetOnlineArchivesResultCriteriaOutput
}

type GetOnlineArchivesResultCriteriaArgs struct {
	DateField       pulumi.StringInput `pulumi:"dateField"`
	DateFormat      pulumi.StringInput `pulumi:"dateFormat"`
	ExpireAfterDays pulumi.IntInput    `pulumi:"expireAfterDays"`
	Query           pulumi.StringInput `pulumi:"query"`
	Type            pulumi.StringInput `pulumi:"type"`
}

func (GetOnlineArchivesResultCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResultCriteria)(nil)).Elem()
}

func (i GetOnlineArchivesResultCriteriaArgs) ToGetOnlineArchivesResultCriteriaOutput() GetOnlineArchivesResultCriteriaOutput {
	return i.ToGetOnlineArchivesResultCriteriaOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultCriteriaArgs) ToGetOnlineArchivesResultCriteriaOutputWithContext(ctx context.Context) GetOnlineArchivesResultCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultCriteriaOutput)
}

func (i GetOnlineArchivesResultCriteriaArgs) ToOutput(ctx context.Context) pulumix.Output[GetOnlineArchivesResultCriteria] {
	return pulumix.Output[GetOnlineArchivesResultCriteria]{
		OutputState: i.ToGetOnlineArchivesResultCriteriaOutputWithContext(ctx).OutputState,
	}
}

// GetOnlineArchivesResultCriteriaArrayInput is an input type that accepts GetOnlineArchivesResultCriteriaArray and GetOnlineArchivesResultCriteriaArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultCriteriaArrayInput` via:
//
//	GetOnlineArchivesResultCriteriaArray{ GetOnlineArchivesResultCriteriaArgs{...} }
type GetOnlineArchivesResultCriteriaArrayInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultCriteriaArrayOutput() GetOnlineArchivesResultCriteriaArrayOutput
	ToGetOnlineArchivesResultCriteriaArrayOutputWithContext(context.Context) GetOnlineArchivesResultCriteriaArrayOutput
}

type GetOnlineArchivesResultCriteriaArray []GetOnlineArchivesResultCriteriaInput

func (GetOnlineArchivesResultCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResultCriteria)(nil)).Elem()
}

func (i GetOnlineArchivesResultCriteriaArray) ToGetOnlineArchivesResultCriteriaArrayOutput() GetOnlineArchivesResultCriteriaArrayOutput {
	return i.ToGetOnlineArchivesResultCriteriaArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultCriteriaArray) ToGetOnlineArchivesResultCriteriaArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultCriteriaArrayOutput)
}

func (i GetOnlineArchivesResultCriteriaArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOnlineArchivesResultCriteria] {
	return pulumix.Output[[]GetOnlineArchivesResultCriteria]{
		OutputState: i.ToGetOnlineArchivesResultCriteriaArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOnlineArchivesResultCriteriaOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResultCriteria)(nil)).Elem()
}

func (o GetOnlineArchivesResultCriteriaOutput) ToGetOnlineArchivesResultCriteriaOutput() GetOnlineArchivesResultCriteriaOutput {
	return o
}

func (o GetOnlineArchivesResultCriteriaOutput) ToGetOnlineArchivesResultCriteriaOutputWithContext(ctx context.Context) GetOnlineArchivesResultCriteriaOutput {
	return o
}

func (o GetOnlineArchivesResultCriteriaOutput) ToOutput(ctx context.Context) pulumix.Output[GetOnlineArchivesResultCriteria] {
	return pulumix.Output[GetOnlineArchivesResultCriteria]{
		OutputState: o.OutputState,
	}
}

func (o GetOnlineArchivesResultCriteriaOutput) DateField() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) string { return v.DateField }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultCriteriaOutput) DateFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) string { return v.DateFormat }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultCriteriaOutput) ExpireAfterDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) int { return v.ExpireAfterDays }).(pulumi.IntOutput)
}

func (o GetOnlineArchivesResultCriteriaOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) string { return v.Query }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultCriteriaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) string { return v.Type }).(pulumi.StringOutput)
}

type GetOnlineArchivesResultCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResultCriteria)(nil)).Elem()
}

func (o GetOnlineArchivesResultCriteriaArrayOutput) ToGetOnlineArchivesResultCriteriaArrayOutput() GetOnlineArchivesResultCriteriaArrayOutput {
	return o
}

func (o GetOnlineArchivesResultCriteriaArrayOutput) ToGetOnlineArchivesResultCriteriaArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultCriteriaArrayOutput {
	return o
}

func (o GetOnlineArchivesResultCriteriaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOnlineArchivesResultCriteria] {
	return pulumix.Output[[]GetOnlineArchivesResultCriteria]{
		OutputState: o.OutputState,
	}
}

func (o GetOnlineArchivesResultCriteriaArrayOutput) Index(i pulumi.IntInput) GetOnlineArchivesResultCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchivesResultCriteria {
		return vs[0].([]GetOnlineArchivesResultCriteria)[vs[1].(int)]
	}).(GetOnlineArchivesResultCriteriaOutput)
}

type GetOnlineArchivesResultPartitionField struct {
	FieldName string `pulumi:"fieldName"`
	FieldType string `pulumi:"fieldType"`
	Order     int    `pulumi:"order"`
}

// GetOnlineArchivesResultPartitionFieldInput is an input type that accepts GetOnlineArchivesResultPartitionFieldArgs and GetOnlineArchivesResultPartitionFieldOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultPartitionFieldInput` via:
//
//	GetOnlineArchivesResultPartitionFieldArgs{...}
type GetOnlineArchivesResultPartitionFieldInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultPartitionFieldOutput() GetOnlineArchivesResultPartitionFieldOutput
	ToGetOnlineArchivesResultPartitionFieldOutputWithContext(context.Context) GetOnlineArchivesResultPartitionFieldOutput
}

type GetOnlineArchivesResultPartitionFieldArgs struct {
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	FieldType pulumi.StringInput `pulumi:"fieldType"`
	Order     pulumi.IntInput    `pulumi:"order"`
}

func (GetOnlineArchivesResultPartitionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResultPartitionField)(nil)).Elem()
}

func (i GetOnlineArchivesResultPartitionFieldArgs) ToGetOnlineArchivesResultPartitionFieldOutput() GetOnlineArchivesResultPartitionFieldOutput {
	return i.ToGetOnlineArchivesResultPartitionFieldOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultPartitionFieldArgs) ToGetOnlineArchivesResultPartitionFieldOutputWithContext(ctx context.Context) GetOnlineArchivesResultPartitionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultPartitionFieldOutput)
}

func (i GetOnlineArchivesResultPartitionFieldArgs) ToOutput(ctx context.Context) pulumix.Output[GetOnlineArchivesResultPartitionField] {
	return pulumix.Output[GetOnlineArchivesResultPartitionField]{
		OutputState: i.ToGetOnlineArchivesResultPartitionFieldOutputWithContext(ctx).OutputState,
	}
}

// GetOnlineArchivesResultPartitionFieldArrayInput is an input type that accepts GetOnlineArchivesResultPartitionFieldArray and GetOnlineArchivesResultPartitionFieldArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultPartitionFieldArrayInput` via:
//
//	GetOnlineArchivesResultPartitionFieldArray{ GetOnlineArchivesResultPartitionFieldArgs{...} }
type GetOnlineArchivesResultPartitionFieldArrayInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultPartitionFieldArrayOutput() GetOnlineArchivesResultPartitionFieldArrayOutput
	ToGetOnlineArchivesResultPartitionFieldArrayOutputWithContext(context.Context) GetOnlineArchivesResultPartitionFieldArrayOutput
}

type GetOnlineArchivesResultPartitionFieldArray []GetOnlineArchivesResultPartitionFieldInput

func (GetOnlineArchivesResultPartitionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResultPartitionField)(nil)).Elem()
}

func (i GetOnlineArchivesResultPartitionFieldArray) ToGetOnlineArchivesResultPartitionFieldArrayOutput() GetOnlineArchivesResultPartitionFieldArrayOutput {
	return i.ToGetOnlineArchivesResultPartitionFieldArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultPartitionFieldArray) ToGetOnlineArchivesResultPartitionFieldArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultPartitionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultPartitionFieldArrayOutput)
}

func (i GetOnlineArchivesResultPartitionFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOnlineArchivesResultPartitionField] {
	return pulumix.Output[[]GetOnlineArchivesResultPartitionField]{
		OutputState: i.ToGetOnlineArchivesResultPartitionFieldArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOnlineArchivesResultPartitionFieldOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultPartitionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResultPartitionField)(nil)).Elem()
}

func (o GetOnlineArchivesResultPartitionFieldOutput) ToGetOnlineArchivesResultPartitionFieldOutput() GetOnlineArchivesResultPartitionFieldOutput {
	return o
}

func (o GetOnlineArchivesResultPartitionFieldOutput) ToGetOnlineArchivesResultPartitionFieldOutputWithContext(ctx context.Context) GetOnlineArchivesResultPartitionFieldOutput {
	return o
}

func (o GetOnlineArchivesResultPartitionFieldOutput) ToOutput(ctx context.Context) pulumix.Output[GetOnlineArchivesResultPartitionField] {
	return pulumix.Output[GetOnlineArchivesResultPartitionField]{
		OutputState: o.OutputState,
	}
}

func (o GetOnlineArchivesResultPartitionFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultPartitionField) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultPartitionFieldOutput) FieldType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultPartitionField) string { return v.FieldType }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultPartitionFieldOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultPartitionField) int { return v.Order }).(pulumi.IntOutput)
}

type GetOnlineArchivesResultPartitionFieldArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultPartitionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResultPartitionField)(nil)).Elem()
}

func (o GetOnlineArchivesResultPartitionFieldArrayOutput) ToGetOnlineArchivesResultPartitionFieldArrayOutput() GetOnlineArchivesResultPartitionFieldArrayOutput {
	return o
}

func (o GetOnlineArchivesResultPartitionFieldArrayOutput) ToGetOnlineArchivesResultPartitionFieldArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultPartitionFieldArrayOutput {
	return o
}

func (o GetOnlineArchivesResultPartitionFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOnlineArchivesResultPartitionField] {
	return pulumix.Output[[]GetOnlineArchivesResultPartitionField]{
		OutputState: o.OutputState,
	}
}

func (o GetOnlineArchivesResultPartitionFieldArrayOutput) Index(i pulumi.IntInput) GetOnlineArchivesResultPartitionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchivesResultPartitionField {
		return vs[0].([]GetOnlineArchivesResultPartitionField)[vs[1].(int)]
	}).(GetOnlineArchivesResultPartitionFieldOutput)
}

type GetOnlineArchivesResultSchedule struct {
	DayOfMonth  *int   `pulumi:"dayOfMonth"`
	DayOfWeek   *int   `pulumi:"dayOfWeek"`
	EndHour     int    `pulumi:"endHour"`
	EndMinute   int    `pulumi:"endMinute"`
	StartHour   int    `pulumi:"startHour"`
	StartMinute int    `pulumi:"startMinute"`
	Type        string `pulumi:"type"`
}

// GetOnlineArchivesResultScheduleInput is an input type that accepts GetOnlineArchivesResultScheduleArgs and GetOnlineArchivesResultScheduleOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultScheduleInput` via:
//
//	GetOnlineArchivesResultScheduleArgs{...}
type GetOnlineArchivesResultScheduleInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultScheduleOutput() GetOnlineArchivesResultScheduleOutput
	ToGetOnlineArchivesResultScheduleOutputWithContext(context.Context) GetOnlineArchivesResultScheduleOutput
}

type GetOnlineArchivesResultScheduleArgs struct {
	DayOfMonth  pulumi.IntPtrInput `pulumi:"dayOfMonth"`
	DayOfWeek   pulumi.IntPtrInput `pulumi:"dayOfWeek"`
	EndHour     pulumi.IntInput    `pulumi:"endHour"`
	EndMinute   pulumi.IntInput    `pulumi:"endMinute"`
	StartHour   pulumi.IntInput    `pulumi:"startHour"`
	StartMinute pulumi.IntInput    `pulumi:"startMinute"`
	Type        pulumi.StringInput `pulumi:"type"`
}

func (GetOnlineArchivesResultScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResultSchedule)(nil)).Elem()
}

func (i GetOnlineArchivesResultScheduleArgs) ToGetOnlineArchivesResultScheduleOutput() GetOnlineArchivesResultScheduleOutput {
	return i.ToGetOnlineArchivesResultScheduleOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultScheduleArgs) ToGetOnlineArchivesResultScheduleOutputWithContext(ctx context.Context) GetOnlineArchivesResultScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultScheduleOutput)
}

func (i GetOnlineArchivesResultScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[GetOnlineArchivesResultSchedule] {
	return pulumix.Output[GetOnlineArchivesResultSchedule]{
		OutputState: i.ToGetOnlineArchivesResultScheduleOutputWithContext(ctx).OutputState,
	}
}

// GetOnlineArchivesResultScheduleArrayInput is an input type that accepts GetOnlineArchivesResultScheduleArray and GetOnlineArchivesResultScheduleArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultScheduleArrayInput` via:
//
//	GetOnlineArchivesResultScheduleArray{ GetOnlineArchivesResultScheduleArgs{...} }
type GetOnlineArchivesResultScheduleArrayInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultScheduleArrayOutput() GetOnlineArchivesResultScheduleArrayOutput
	ToGetOnlineArchivesResultScheduleArrayOutputWithContext(context.Context) GetOnlineArchivesResultScheduleArrayOutput
}

type GetOnlineArchivesResultScheduleArray []GetOnlineArchivesResultScheduleInput

func (GetOnlineArchivesResultScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResultSchedule)(nil)).Elem()
}

func (i GetOnlineArchivesResultScheduleArray) ToGetOnlineArchivesResultScheduleArrayOutput() GetOnlineArchivesResultScheduleArrayOutput {
	return i.ToGetOnlineArchivesResultScheduleArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultScheduleArray) ToGetOnlineArchivesResultScheduleArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultScheduleArrayOutput)
}

func (i GetOnlineArchivesResultScheduleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOnlineArchivesResultSchedule] {
	return pulumix.Output[[]GetOnlineArchivesResultSchedule]{
		OutputState: i.ToGetOnlineArchivesResultScheduleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOnlineArchivesResultScheduleOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResultSchedule)(nil)).Elem()
}

func (o GetOnlineArchivesResultScheduleOutput) ToGetOnlineArchivesResultScheduleOutput() GetOnlineArchivesResultScheduleOutput {
	return o
}

func (o GetOnlineArchivesResultScheduleOutput) ToGetOnlineArchivesResultScheduleOutputWithContext(ctx context.Context) GetOnlineArchivesResultScheduleOutput {
	return o
}

func (o GetOnlineArchivesResultScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[GetOnlineArchivesResultSchedule] {
	return pulumix.Output[GetOnlineArchivesResultSchedule]{
		OutputState: o.OutputState,
	}
}

func (o GetOnlineArchivesResultScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultSchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o GetOnlineArchivesResultScheduleOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultSchedule) *int { return v.DayOfWeek }).(pulumi.IntPtrOutput)
}

func (o GetOnlineArchivesResultScheduleOutput) EndHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultSchedule) int { return v.EndHour }).(pulumi.IntOutput)
}

func (o GetOnlineArchivesResultScheduleOutput) EndMinute() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultSchedule) int { return v.EndMinute }).(pulumi.IntOutput)
}

func (o GetOnlineArchivesResultScheduleOutput) StartHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultSchedule) int { return v.StartHour }).(pulumi.IntOutput)
}

func (o GetOnlineArchivesResultScheduleOutput) StartMinute() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultSchedule) int { return v.StartMinute }).(pulumi.IntOutput)
}

func (o GetOnlineArchivesResultScheduleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultSchedule) string { return v.Type }).(pulumi.StringOutput)
}

type GetOnlineArchivesResultScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResultSchedule)(nil)).Elem()
}

func (o GetOnlineArchivesResultScheduleArrayOutput) ToGetOnlineArchivesResultScheduleArrayOutput() GetOnlineArchivesResultScheduleArrayOutput {
	return o
}

func (o GetOnlineArchivesResultScheduleArrayOutput) ToGetOnlineArchivesResultScheduleArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultScheduleArrayOutput {
	return o
}

func (o GetOnlineArchivesResultScheduleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOnlineArchivesResultSchedule] {
	return pulumix.Output[[]GetOnlineArchivesResultSchedule]{
		OutputState: o.OutputState,
	}
}

func (o GetOnlineArchivesResultScheduleArrayOutput) Index(i pulumi.IntInput) GetOnlineArchivesResultScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchivesResultSchedule {
		return vs[0].([]GetOnlineArchivesResultSchedule)[vs[1].(int)]
	}).(GetOnlineArchivesResultScheduleOutput)
}

type GetOrganizationLink struct {
	Href string `pulumi:"href"`
	Rel  string `pulumi:"rel"`
}

// GetOrganizationLinkInput is an input type that accepts GetOrganizationLinkArgs and GetOrganizationLinkOutput values.
// You can construct a concrete instance of `GetOrganizationLinkInput` via:
//
//	GetOrganizationLinkArgs{...}
type GetOrganizationLinkInput interface {
	pulumi.Input

	ToGetOrganizationLinkOutput() GetOrganizationLinkOutput
	ToGetOrganizationLinkOutputWithContext(context.Context) GetOrganizationLinkOutput
}

type GetOrganizationLinkArgs struct {
	Href pulumi.StringInput `pulumi:"href"`
	Rel  pulumi.StringInput `pulumi:"rel"`
}

func (GetOrganizationLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationLink)(nil)).Elem()
}

func (i GetOrganizationLinkArgs) ToGetOrganizationLinkOutput() GetOrganizationLinkOutput {
	return i.ToGetOrganizationLinkOutputWithContext(context.Background())
}

func (i GetOrganizationLinkArgs) ToGetOrganizationLinkOutputWithContext(ctx context.Context) GetOrganizationLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationLinkOutput)
}

func (i GetOrganizationLinkArgs) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationLink] {
	return pulumix.Output[GetOrganizationLink]{
		OutputState: i.ToGetOrganizationLinkOutputWithContext(ctx).OutputState,
	}
}

// GetOrganizationLinkArrayInput is an input type that accepts GetOrganizationLinkArray and GetOrganizationLinkArrayOutput values.
// You can construct a concrete instance of `GetOrganizationLinkArrayInput` via:
//
//	GetOrganizationLinkArray{ GetOrganizationLinkArgs{...} }
type GetOrganizationLinkArrayInput interface {
	pulumi.Input

	ToGetOrganizationLinkArrayOutput() GetOrganizationLinkArrayOutput
	ToGetOrganizationLinkArrayOutputWithContext(context.Context) GetOrganizationLinkArrayOutput
}

type GetOrganizationLinkArray []GetOrganizationLinkInput

func (GetOrganizationLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationLink)(nil)).Elem()
}

func (i GetOrganizationLinkArray) ToGetOrganizationLinkArrayOutput() GetOrganizationLinkArrayOutput {
	return i.ToGetOrganizationLinkArrayOutputWithContext(context.Background())
}

func (i GetOrganizationLinkArray) ToGetOrganizationLinkArrayOutputWithContext(ctx context.Context) GetOrganizationLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationLinkArrayOutput)
}

func (i GetOrganizationLinkArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationLink] {
	return pulumix.Output[[]GetOrganizationLink]{
		OutputState: i.ToGetOrganizationLinkArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOrganizationLinkOutput struct{ *pulumi.OutputState }

func (GetOrganizationLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationLink)(nil)).Elem()
}

func (o GetOrganizationLinkOutput) ToGetOrganizationLinkOutput() GetOrganizationLinkOutput {
	return o
}

func (o GetOrganizationLinkOutput) ToGetOrganizationLinkOutputWithContext(ctx context.Context) GetOrganizationLinkOutput {
	return o
}

func (o GetOrganizationLinkOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationLink] {
	return pulumix.Output[GetOrganizationLink]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationLinkOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationLink) string { return v.Href }).(pulumi.StringOutput)
}

func (o GetOrganizationLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetOrganizationLinkArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationLink)(nil)).Elem()
}

func (o GetOrganizationLinkArrayOutput) ToGetOrganizationLinkArrayOutput() GetOrganizationLinkArrayOutput {
	return o
}

func (o GetOrganizationLinkArrayOutput) ToGetOrganizationLinkArrayOutputWithContext(ctx context.Context) GetOrganizationLinkArrayOutput {
	return o
}

func (o GetOrganizationLinkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationLink] {
	return pulumix.Output[[]GetOrganizationLink]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationLinkArrayOutput) Index(i pulumi.IntInput) GetOrganizationLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationLink {
		return vs[0].([]GetOrganizationLink)[vs[1].(int)]
	}).(GetOrganizationLinkOutput)
}

type GetOrganizationsResult struct {
	// Autogenerated Unique ID for this data source.
	Id string `pulumi:"id"`
	// Flag that indicates whether this organization has been deleted.
	//
	// See [MongoDB Atlas API - Organizations](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Organizations/operation/listOrganizations)  Documentation for more information.
	IsDeleted bool                         `pulumi:"isDeleted"`
	Links     []GetOrganizationsResultLink `pulumi:"links"`
	// Human-readable label that identifies the organization.
	Name string `pulumi:"name"`
}

// GetOrganizationsResultInput is an input type that accepts GetOrganizationsResultArgs and GetOrganizationsResultOutput values.
// You can construct a concrete instance of `GetOrganizationsResultInput` via:
//
//	GetOrganizationsResultArgs{...}
type GetOrganizationsResultInput interface {
	pulumi.Input

	ToGetOrganizationsResultOutput() GetOrganizationsResultOutput
	ToGetOrganizationsResultOutputWithContext(context.Context) GetOrganizationsResultOutput
}

type GetOrganizationsResultArgs struct {
	// Autogenerated Unique ID for this data source.
	Id pulumi.StringInput `pulumi:"id"`
	// Flag that indicates whether this organization has been deleted.
	//
	// See [MongoDB Atlas API - Organizations](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Organizations/operation/listOrganizations)  Documentation for more information.
	IsDeleted pulumi.BoolInput                     `pulumi:"isDeleted"`
	Links     GetOrganizationsResultLinkArrayInput `pulumi:"links"`
	// Human-readable label that identifies the organization.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetOrganizationsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsResult)(nil)).Elem()
}

func (i GetOrganizationsResultArgs) ToGetOrganizationsResultOutput() GetOrganizationsResultOutput {
	return i.ToGetOrganizationsResultOutputWithContext(context.Background())
}

func (i GetOrganizationsResultArgs) ToGetOrganizationsResultOutputWithContext(ctx context.Context) GetOrganizationsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsResultOutput)
}

func (i GetOrganizationsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationsResult] {
	return pulumix.Output[GetOrganizationsResult]{
		OutputState: i.ToGetOrganizationsResultOutputWithContext(ctx).OutputState,
	}
}

// GetOrganizationsResultArrayInput is an input type that accepts GetOrganizationsResultArray and GetOrganizationsResultArrayOutput values.
// You can construct a concrete instance of `GetOrganizationsResultArrayInput` via:
//
//	GetOrganizationsResultArray{ GetOrganizationsResultArgs{...} }
type GetOrganizationsResultArrayInput interface {
	pulumi.Input

	ToGetOrganizationsResultArrayOutput() GetOrganizationsResultArrayOutput
	ToGetOrganizationsResultArrayOutputWithContext(context.Context) GetOrganizationsResultArrayOutput
}

type GetOrganizationsResultArray []GetOrganizationsResultInput

func (GetOrganizationsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsResult)(nil)).Elem()
}

func (i GetOrganizationsResultArray) ToGetOrganizationsResultArrayOutput() GetOrganizationsResultArrayOutput {
	return i.ToGetOrganizationsResultArrayOutputWithContext(context.Background())
}

func (i GetOrganizationsResultArray) ToGetOrganizationsResultArrayOutputWithContext(ctx context.Context) GetOrganizationsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsResultArrayOutput)
}

func (i GetOrganizationsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationsResult] {
	return pulumix.Output[[]GetOrganizationsResult]{
		OutputState: i.ToGetOrganizationsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOrganizationsResultOutput struct{ *pulumi.OutputState }

func (GetOrganizationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsResult)(nil)).Elem()
}

func (o GetOrganizationsResultOutput) ToGetOrganizationsResultOutput() GetOrganizationsResultOutput {
	return o
}

func (o GetOrganizationsResultOutput) ToGetOrganizationsResultOutputWithContext(ctx context.Context) GetOrganizationsResultOutput {
	return o
}

func (o GetOrganizationsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationsResult] {
	return pulumix.Output[GetOrganizationsResult]{
		OutputState: o.OutputState,
	}
}

// Autogenerated Unique ID for this data source.
func (o GetOrganizationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Flag that indicates whether this organization has been deleted.
//
// See [MongoDB Atlas API - Organizations](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Organizations/operation/listOrganizations)  Documentation for more information.
func (o GetOrganizationsResultOutput) IsDeleted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationsResult) bool { return v.IsDeleted }).(pulumi.BoolOutput)
}

func (o GetOrganizationsResultOutput) Links() GetOrganizationsResultLinkArrayOutput {
	return o.ApplyT(func(v GetOrganizationsResult) []GetOrganizationsResultLink { return v.Links }).(GetOrganizationsResultLinkArrayOutput)
}

// Human-readable label that identifies the organization.
func (o GetOrganizationsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsResult) string { return v.Name }).(pulumi.StringOutput)
}

type GetOrganizationsResultArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsResult)(nil)).Elem()
}

func (o GetOrganizationsResultArrayOutput) ToGetOrganizationsResultArrayOutput() GetOrganizationsResultArrayOutput {
	return o
}

func (o GetOrganizationsResultArrayOutput) ToGetOrganizationsResultArrayOutputWithContext(ctx context.Context) GetOrganizationsResultArrayOutput {
	return o
}

func (o GetOrganizationsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationsResult] {
	return pulumix.Output[[]GetOrganizationsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationsResultArrayOutput) Index(i pulumi.IntInput) GetOrganizationsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationsResult {
		return vs[0].([]GetOrganizationsResult)[vs[1].(int)]
	}).(GetOrganizationsResultOutput)
}

type GetOrganizationsResultLink struct {
	Href string `pulumi:"href"`
	Rel  string `pulumi:"rel"`
}

// GetOrganizationsResultLinkInput is an input type that accepts GetOrganizationsResultLinkArgs and GetOrganizationsResultLinkOutput values.
// You can construct a concrete instance of `GetOrganizationsResultLinkInput` via:
//
//	GetOrganizationsResultLinkArgs{...}
type GetOrganizationsResultLinkInput interface {
	pulumi.Input

	ToGetOrganizationsResultLinkOutput() GetOrganizationsResultLinkOutput
	ToGetOrganizationsResultLinkOutputWithContext(context.Context) GetOrganizationsResultLinkOutput
}

type GetOrganizationsResultLinkArgs struct {
	Href pulumi.StringInput `pulumi:"href"`
	Rel  pulumi.StringInput `pulumi:"rel"`
}

func (GetOrganizationsResultLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsResultLink)(nil)).Elem()
}

func (i GetOrganizationsResultLinkArgs) ToGetOrganizationsResultLinkOutput() GetOrganizationsResultLinkOutput {
	return i.ToGetOrganizationsResultLinkOutputWithContext(context.Background())
}

func (i GetOrganizationsResultLinkArgs) ToGetOrganizationsResultLinkOutputWithContext(ctx context.Context) GetOrganizationsResultLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsResultLinkOutput)
}

func (i GetOrganizationsResultLinkArgs) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationsResultLink] {
	return pulumix.Output[GetOrganizationsResultLink]{
		OutputState: i.ToGetOrganizationsResultLinkOutputWithContext(ctx).OutputState,
	}
}

// GetOrganizationsResultLinkArrayInput is an input type that accepts GetOrganizationsResultLinkArray and GetOrganizationsResultLinkArrayOutput values.
// You can construct a concrete instance of `GetOrganizationsResultLinkArrayInput` via:
//
//	GetOrganizationsResultLinkArray{ GetOrganizationsResultLinkArgs{...} }
type GetOrganizationsResultLinkArrayInput interface {
	pulumi.Input

	ToGetOrganizationsResultLinkArrayOutput() GetOrganizationsResultLinkArrayOutput
	ToGetOrganizationsResultLinkArrayOutputWithContext(context.Context) GetOrganizationsResultLinkArrayOutput
}

type GetOrganizationsResultLinkArray []GetOrganizationsResultLinkInput

func (GetOrganizationsResultLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsResultLink)(nil)).Elem()
}

func (i GetOrganizationsResultLinkArray) ToGetOrganizationsResultLinkArrayOutput() GetOrganizationsResultLinkArrayOutput {
	return i.ToGetOrganizationsResultLinkArrayOutputWithContext(context.Background())
}

func (i GetOrganizationsResultLinkArray) ToGetOrganizationsResultLinkArrayOutputWithContext(ctx context.Context) GetOrganizationsResultLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsResultLinkArrayOutput)
}

func (i GetOrganizationsResultLinkArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationsResultLink] {
	return pulumix.Output[[]GetOrganizationsResultLink]{
		OutputState: i.ToGetOrganizationsResultLinkArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOrganizationsResultLinkOutput struct{ *pulumi.OutputState }

func (GetOrganizationsResultLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsResultLink)(nil)).Elem()
}

func (o GetOrganizationsResultLinkOutput) ToGetOrganizationsResultLinkOutput() GetOrganizationsResultLinkOutput {
	return o
}

func (o GetOrganizationsResultLinkOutput) ToGetOrganizationsResultLinkOutputWithContext(ctx context.Context) GetOrganizationsResultLinkOutput {
	return o
}

func (o GetOrganizationsResultLinkOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationsResultLink] {
	return pulumix.Output[GetOrganizationsResultLink]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationsResultLinkOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsResultLink) string { return v.Href }).(pulumi.StringOutput)
}

func (o GetOrganizationsResultLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsResultLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetOrganizationsResultLinkArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationsResultLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsResultLink)(nil)).Elem()
}

func (o GetOrganizationsResultLinkArrayOutput) ToGetOrganizationsResultLinkArrayOutput() GetOrganizationsResultLinkArrayOutput {
	return o
}

func (o GetOrganizationsResultLinkArrayOutput) ToGetOrganizationsResultLinkArrayOutputWithContext(ctx context.Context) GetOrganizationsResultLinkArrayOutput {
	return o
}

func (o GetOrganizationsResultLinkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationsResultLink] {
	return pulumix.Output[[]GetOrganizationsResultLink]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationsResultLinkArrayOutput) Index(i pulumi.IntInput) GetOrganizationsResultLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationsResultLink {
		return vs[0].([]GetOrganizationsResultLink)[vs[1].(int)]
	}).(GetOrganizationsResultLinkOutput)
}

type GetPrivateLinkEndpointServiceEndpoint struct {
	// Forwarding rule that corresponds to the endpoint you created in GCP.
	EndpointName string `pulumi:"endpointName"`
	// Private IP address of the network endpoint group you created in GCP.
	IpAddress string `pulumi:"ipAddress"`
	// Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
	ServiceAttachmentName string `pulumi:"serviceAttachmentName"`
	// Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
	Status string `pulumi:"status"`
}

// GetPrivateLinkEndpointServiceEndpointInput is an input type that accepts GetPrivateLinkEndpointServiceEndpointArgs and GetPrivateLinkEndpointServiceEndpointOutput values.
// You can construct a concrete instance of `GetPrivateLinkEndpointServiceEndpointInput` via:
//
//	GetPrivateLinkEndpointServiceEndpointArgs{...}
type GetPrivateLinkEndpointServiceEndpointInput interface {
	pulumi.Input

	ToGetPrivateLinkEndpointServiceEndpointOutput() GetPrivateLinkEndpointServiceEndpointOutput
	ToGetPrivateLinkEndpointServiceEndpointOutputWithContext(context.Context) GetPrivateLinkEndpointServiceEndpointOutput
}

type GetPrivateLinkEndpointServiceEndpointArgs struct {
	// Forwarding rule that corresponds to the endpoint you created in GCP.
	EndpointName pulumi.StringInput `pulumi:"endpointName"`
	// Private IP address of the network endpoint group you created in GCP.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
	ServiceAttachmentName pulumi.StringInput `pulumi:"serviceAttachmentName"`
	// Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetPrivateLinkEndpointServiceEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (i GetPrivateLinkEndpointServiceEndpointArgs) ToGetPrivateLinkEndpointServiceEndpointOutput() GetPrivateLinkEndpointServiceEndpointOutput {
	return i.ToGetPrivateLinkEndpointServiceEndpointOutputWithContext(context.Background())
}

func (i GetPrivateLinkEndpointServiceEndpointArgs) ToGetPrivateLinkEndpointServiceEndpointOutputWithContext(ctx context.Context) GetPrivateLinkEndpointServiceEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkEndpointServiceEndpointOutput)
}

func (i GetPrivateLinkEndpointServiceEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetPrivateLinkEndpointServiceEndpoint] {
	return pulumix.Output[GetPrivateLinkEndpointServiceEndpoint]{
		OutputState: i.ToGetPrivateLinkEndpointServiceEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetPrivateLinkEndpointServiceEndpointArrayInput is an input type that accepts GetPrivateLinkEndpointServiceEndpointArray and GetPrivateLinkEndpointServiceEndpointArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkEndpointServiceEndpointArrayInput` via:
//
//	GetPrivateLinkEndpointServiceEndpointArray{ GetPrivateLinkEndpointServiceEndpointArgs{...} }
type GetPrivateLinkEndpointServiceEndpointArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkEndpointServiceEndpointArrayOutput() GetPrivateLinkEndpointServiceEndpointArrayOutput
	ToGetPrivateLinkEndpointServiceEndpointArrayOutputWithContext(context.Context) GetPrivateLinkEndpointServiceEndpointArrayOutput
}

type GetPrivateLinkEndpointServiceEndpointArray []GetPrivateLinkEndpointServiceEndpointInput

func (GetPrivateLinkEndpointServiceEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (i GetPrivateLinkEndpointServiceEndpointArray) ToGetPrivateLinkEndpointServiceEndpointArrayOutput() GetPrivateLinkEndpointServiceEndpointArrayOutput {
	return i.ToGetPrivateLinkEndpointServiceEndpointArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkEndpointServiceEndpointArray) ToGetPrivateLinkEndpointServiceEndpointArrayOutputWithContext(ctx context.Context) GetPrivateLinkEndpointServiceEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkEndpointServiceEndpointArrayOutput)
}

func (i GetPrivateLinkEndpointServiceEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetPrivateLinkEndpointServiceEndpoint] {
	return pulumix.Output[[]GetPrivateLinkEndpointServiceEndpoint]{
		OutputState: i.ToGetPrivateLinkEndpointServiceEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetPrivateLinkEndpointServiceEndpointOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkEndpointServiceEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (o GetPrivateLinkEndpointServiceEndpointOutput) ToGetPrivateLinkEndpointServiceEndpointOutput() GetPrivateLinkEndpointServiceEndpointOutput {
	return o
}

func (o GetPrivateLinkEndpointServiceEndpointOutput) ToGetPrivateLinkEndpointServiceEndpointOutputWithContext(ctx context.Context) GetPrivateLinkEndpointServiceEndpointOutput {
	return o
}

func (o GetPrivateLinkEndpointServiceEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetPrivateLinkEndpointServiceEndpoint] {
	return pulumix.Output[GetPrivateLinkEndpointServiceEndpoint]{
		OutputState: o.OutputState,
	}
}

// Forwarding rule that corresponds to the endpoint you created in GCP.
func (o GetPrivateLinkEndpointServiceEndpointOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkEndpointServiceEndpoint) string { return v.EndpointName }).(pulumi.StringOutput)
}

// Private IP address of the network endpoint group you created in GCP.
func (o GetPrivateLinkEndpointServiceEndpointOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkEndpointServiceEndpoint) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Unique alphanumeric and special character strings that identify the service attachment associated with the endpoint.
func (o GetPrivateLinkEndpointServiceEndpointOutput) ServiceAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkEndpointServiceEndpoint) string { return v.ServiceAttachmentName }).(pulumi.StringOutput)
}

// Status of the endpoint. Atlas returns one of the [values shown above](https://docs.atlas.mongodb.com/reference/api/private-endpoints-endpoint-create-one/#std-label-ref-status-field).
func (o GetPrivateLinkEndpointServiceEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkEndpointServiceEndpoint) string { return v.Status }).(pulumi.StringOutput)
}

type GetPrivateLinkEndpointServiceEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkEndpointServiceEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkEndpointServiceEndpoint)(nil)).Elem()
}

func (o GetPrivateLinkEndpointServiceEndpointArrayOutput) ToGetPrivateLinkEndpointServiceEndpointArrayOutput() GetPrivateLinkEndpointServiceEndpointArrayOutput {
	return o
}

func (o GetPrivateLinkEndpointServiceEndpointArrayOutput) ToGetPrivateLinkEndpointServiceEndpointArrayOutputWithContext(ctx context.Context) GetPrivateLinkEndpointServiceEndpointArrayOutput {
	return o
}

func (o GetPrivateLinkEndpointServiceEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetPrivateLinkEndpointServiceEndpoint] {
	return pulumix.Output[[]GetPrivateLinkEndpointServiceEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetPrivateLinkEndpointServiceEndpointArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkEndpointServiceEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkEndpointServiceEndpoint {
		return vs[0].([]GetPrivateLinkEndpointServiceEndpoint)[vs[1].(int)]
	}).(GetPrivateLinkEndpointServiceEndpointOutput)
}

type GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult struct {
	// Human-readable string to associate with this private endpoint.
	Comment string `pulumi:"comment"`
	// Unique 22-character alphanumeric string that identifies the private endpoint. See [Atlas Data Lake supports Amazon Web Services private endpoints using the AWS PrivateLink feature](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Data-Federation/operation/createDataFederationPrivateEndpoint:~:text=Atlas%20Data%20Lake%20supports%20Amazon%20Web%20Services%20private%20endpoints%20using%20the%20AWS%20PrivateLink%20feature).
	EndpointId string `pulumi:"endpointId"`
	// Human-readable label that identifies the cloud service provider.
	ProviderName string `pulumi:"providerName"`
	// Human-readable label that identifies the resource type associated with this private endpoint.
	Type string `pulumi:"type"`
}

// GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultInput is an input type that accepts GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArgs and GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput values.
// You can construct a concrete instance of `GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultInput` via:
//
//	GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArgs{...}
type GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultInput interface {
	pulumi.Input

	ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput() GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput
	ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutputWithContext(context.Context) GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput
}

type GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArgs struct {
	// Human-readable string to associate with this private endpoint.
	Comment pulumi.StringInput `pulumi:"comment"`
	// Unique 22-character alphanumeric string that identifies the private endpoint. See [Atlas Data Lake supports Amazon Web Services private endpoints using the AWS PrivateLink feature](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Data-Federation/operation/createDataFederationPrivateEndpoint:~:text=Atlas%20Data%20Lake%20supports%20Amazon%20Web%20Services%20private%20endpoints%20using%20the%20AWS%20PrivateLink%20feature).
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Human-readable label that identifies the cloud service provider.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Human-readable label that identifies the resource type associated with this private endpoint.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult)(nil)).Elem()
}

func (i GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArgs) ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput() GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput {
	return i.ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutputWithContext(context.Background())
}

func (i GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArgs) ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutputWithContext(ctx context.Context) GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput)
}

func (i GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult] {
	return pulumix.Output[GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult]{
		OutputState: i.ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutputWithContext(ctx).OutputState,
	}
}

// GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayInput is an input type that accepts GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArray and GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput values.
// You can construct a concrete instance of `GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayInput` via:
//
//	GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArray{ GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArgs{...} }
type GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayInput interface {
	pulumi.Input

	ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput() GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput
	ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutputWithContext(context.Context) GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput
}

type GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArray []GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultInput

func (GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult)(nil)).Elem()
}

func (i GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArray) ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput() GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput {
	return i.ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutputWithContext(context.Background())
}

func (i GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArray) ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutputWithContext(ctx context.Context) GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput)
}

func (i GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult] {
	return pulumix.Output[[]GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult]{
		OutputState: i.ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput struct{ *pulumi.OutputState }

func (GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult)(nil)).Elem()
}

func (o GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput) ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput() GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput {
	return o
}

func (o GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput) ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutputWithContext(ctx context.Context) GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput {
	return o
}

func (o GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult] {
	return pulumix.Output[GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult]{
		OutputState: o.OutputState,
	}
}

// Human-readable string to associate with this private endpoint.
func (o GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult) string { return v.Comment }).(pulumi.StringOutput)
}

// Unique 22-character alphanumeric string that identifies the private endpoint. See [Atlas Data Lake supports Amazon Web Services private endpoints using the AWS PrivateLink feature](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Data-Federation/operation/createDataFederationPrivateEndpoint:~:text=Atlas%20Data%20Lake%20supports%20Amazon%20Web%20Services%20private%20endpoints%20using%20the%20AWS%20PrivateLink%20feature).
func (o GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Human-readable label that identifies the cloud service provider.
func (o GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Human-readable label that identifies the resource type associated with this private endpoint.
func (o GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult) string { return v.Type }).(pulumi.StringOutput)
}

type GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput struct{ *pulumi.OutputState }

func (GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult)(nil)).Elem()
}

func (o GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput) ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput() GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput {
	return o
}

func (o GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput) ToGetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutputWithContext(ctx context.Context) GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput {
	return o
}

func (o GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult] {
	return pulumix.Output[[]GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput) Index(i pulumi.IntInput) GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult {
		return vs[0].([]GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResult)[vs[1].(int)]
	}).(GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput)
}

type GetPrivatelinkEndpointsServiceAdlLink struct {
	Href string `pulumi:"href"`
	Rel  string `pulumi:"rel"`
}

// GetPrivatelinkEndpointsServiceAdlLinkInput is an input type that accepts GetPrivatelinkEndpointsServiceAdlLinkArgs and GetPrivatelinkEndpointsServiceAdlLinkOutput values.
// You can construct a concrete instance of `GetPrivatelinkEndpointsServiceAdlLinkInput` via:
//
//	GetPrivatelinkEndpointsServiceAdlLinkArgs{...}
type GetPrivatelinkEndpointsServiceAdlLinkInput interface {
	pulumi.Input

	ToGetPrivatelinkEndpointsServiceAdlLinkOutput() GetPrivatelinkEndpointsServiceAdlLinkOutput
	ToGetPrivatelinkEndpointsServiceAdlLinkOutputWithContext(context.Context) GetPrivatelinkEndpointsServiceAdlLinkOutput
}

type GetPrivatelinkEndpointsServiceAdlLinkArgs struct {
	Href pulumi.StringInput `pulumi:"href"`
	Rel  pulumi.StringInput `pulumi:"rel"`
}

func (GetPrivatelinkEndpointsServiceAdlLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlLink)(nil)).Elem()
}

func (i GetPrivatelinkEndpointsServiceAdlLinkArgs) ToGetPrivatelinkEndpointsServiceAdlLinkOutput() GetPrivatelinkEndpointsServiceAdlLinkOutput {
	return i.ToGetPrivatelinkEndpointsServiceAdlLinkOutputWithContext(context.Background())
}

func (i GetPrivatelinkEndpointsServiceAdlLinkArgs) ToGetPrivatelinkEndpointsServiceAdlLinkOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivatelinkEndpointsServiceAdlLinkOutput)
}

func (i GetPrivatelinkEndpointsServiceAdlLinkArgs) ToOutput(ctx context.Context) pulumix.Output[GetPrivatelinkEndpointsServiceAdlLink] {
	return pulumix.Output[GetPrivatelinkEndpointsServiceAdlLink]{
		OutputState: i.ToGetPrivatelinkEndpointsServiceAdlLinkOutputWithContext(ctx).OutputState,
	}
}

// GetPrivatelinkEndpointsServiceAdlLinkArrayInput is an input type that accepts GetPrivatelinkEndpointsServiceAdlLinkArray and GetPrivatelinkEndpointsServiceAdlLinkArrayOutput values.
// You can construct a concrete instance of `GetPrivatelinkEndpointsServiceAdlLinkArrayInput` via:
//
//	GetPrivatelinkEndpointsServiceAdlLinkArray{ GetPrivatelinkEndpointsServiceAdlLinkArgs{...} }
type GetPrivatelinkEndpointsServiceAdlLinkArrayInput interface {
	pulumi.Input

	ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutput() GetPrivatelinkEndpointsServiceAdlLinkArrayOutput
	ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutputWithContext(context.Context) GetPrivatelinkEndpointsServiceAdlLinkArrayOutput
}

type GetPrivatelinkEndpointsServiceAdlLinkArray []GetPrivatelinkEndpointsServiceAdlLinkInput

func (GetPrivatelinkEndpointsServiceAdlLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivatelinkEndpointsServiceAdlLink)(nil)).Elem()
}

func (i GetPrivatelinkEndpointsServiceAdlLinkArray) ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutput() GetPrivatelinkEndpointsServiceAdlLinkArrayOutput {
	return i.ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutputWithContext(context.Background())
}

func (i GetPrivatelinkEndpointsServiceAdlLinkArray) ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivatelinkEndpointsServiceAdlLinkArrayOutput)
}

func (i GetPrivatelinkEndpointsServiceAdlLinkArray) ToOutput(ctx context.Context) pulumix.Output[[]GetPrivatelinkEndpointsServiceAdlLink] {
	return pulumix.Output[[]GetPrivatelinkEndpointsServiceAdlLink]{
		OutputState: i.ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutputWithContext(ctx).OutputState,
	}
}

type GetPrivatelinkEndpointsServiceAdlLinkOutput struct{ *pulumi.OutputState }

func (GetPrivatelinkEndpointsServiceAdlLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlLink)(nil)).Elem()
}

func (o GetPrivatelinkEndpointsServiceAdlLinkOutput) ToGetPrivatelinkEndpointsServiceAdlLinkOutput() GetPrivatelinkEndpointsServiceAdlLinkOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlLinkOutput) ToGetPrivatelinkEndpointsServiceAdlLinkOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlLinkOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlLinkOutput) ToOutput(ctx context.Context) pulumix.Output[GetPrivatelinkEndpointsServiceAdlLink] {
	return pulumix.Output[GetPrivatelinkEndpointsServiceAdlLink]{
		OutputState: o.OutputState,
	}
}

func (o GetPrivatelinkEndpointsServiceAdlLinkOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceAdlLink) string { return v.Href }).(pulumi.StringOutput)
}

func (o GetPrivatelinkEndpointsServiceAdlLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceAdlLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetPrivatelinkEndpointsServiceAdlLinkArrayOutput struct{ *pulumi.OutputState }

func (GetPrivatelinkEndpointsServiceAdlLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivatelinkEndpointsServiceAdlLink)(nil)).Elem()
}

func (o GetPrivatelinkEndpointsServiceAdlLinkArrayOutput) ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutput() GetPrivatelinkEndpointsServiceAdlLinkArrayOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlLinkArrayOutput) ToGetPrivatelinkEndpointsServiceAdlLinkArrayOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlLinkArrayOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlLinkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetPrivatelinkEndpointsServiceAdlLink] {
	return pulumix.Output[[]GetPrivatelinkEndpointsServiceAdlLink]{
		OutputState: o.OutputState,
	}
}

func (o GetPrivatelinkEndpointsServiceAdlLinkArrayOutput) Index(i pulumi.IntInput) GetPrivatelinkEndpointsServiceAdlLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivatelinkEndpointsServiceAdlLink {
		return vs[0].([]GetPrivatelinkEndpointsServiceAdlLink)[vs[1].(int)]
	}).(GetPrivatelinkEndpointsServiceAdlLinkOutput)
}

type GetPrivatelinkEndpointsServiceAdlResult struct {
	// Human-readable string to associate with this private endpoint.
	//
	// See [MongoDB Atlas API](https://docs.atlas.mongodb.com/reference/api/online-archive-get-all-for-cluster/) Documentation for more information.
	Comment string `pulumi:"comment"`
	// Unique 22-character alphanumeric string that identifies the private endpoint. Atlas supports AWS private endpoints using the [|aws| PrivateLink](https://aws.amazon.com/privatelink/) feature.
	EndpointId string `pulumi:"endpointId"`
	// Human-readable label that identifies the cloud provider for this endpoint.
	ProviderName string `pulumi:"providerName"`
	// Human-readable label that identifies the type of resource to associate with this private endpoint.
	Type string `pulumi:"type"`
}

// GetPrivatelinkEndpointsServiceAdlResultInput is an input type that accepts GetPrivatelinkEndpointsServiceAdlResultArgs and GetPrivatelinkEndpointsServiceAdlResultOutput values.
// You can construct a concrete instance of `GetPrivatelinkEndpointsServiceAdlResultInput` via:
//
//	GetPrivatelinkEndpointsServiceAdlResultArgs{...}
type GetPrivatelinkEndpointsServiceAdlResultInput interface {
	pulumi.Input

	ToGetPrivatelinkEndpointsServiceAdlResultOutput() GetPrivatelinkEndpointsServiceAdlResultOutput
	ToGetPrivatelinkEndpointsServiceAdlResultOutputWithContext(context.Context) GetPrivatelinkEndpointsServiceAdlResultOutput
}

type GetPrivatelinkEndpointsServiceAdlResultArgs struct {
	// Human-readable string to associate with this private endpoint.
	//
	// See [MongoDB Atlas API](https://docs.atlas.mongodb.com/reference/api/online-archive-get-all-for-cluster/) Documentation for more information.
	Comment pulumi.StringInput `pulumi:"comment"`
	// Unique 22-character alphanumeric string that identifies the private endpoint. Atlas supports AWS private endpoints using the [|aws| PrivateLink](https://aws.amazon.com/privatelink/) feature.
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Human-readable label that identifies the cloud provider for this endpoint.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Human-readable label that identifies the type of resource to associate with this private endpoint.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetPrivatelinkEndpointsServiceAdlResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlResult)(nil)).Elem()
}

func (i GetPrivatelinkEndpointsServiceAdlResultArgs) ToGetPrivatelinkEndpointsServiceAdlResultOutput() GetPrivatelinkEndpointsServiceAdlResultOutput {
	return i.ToGetPrivatelinkEndpointsServiceAdlResultOutputWithContext(context.Background())
}

func (i GetPrivatelinkEndpointsServiceAdlResultArgs) ToGetPrivatelinkEndpointsServiceAdlResultOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivatelinkEndpointsServiceAdlResultOutput)
}

func (i GetPrivatelinkEndpointsServiceAdlResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetPrivatelinkEndpointsServiceAdlResult] {
	return pulumix.Output[GetPrivatelinkEndpointsServiceAdlResult]{
		OutputState: i.ToGetPrivatelinkEndpointsServiceAdlResultOutputWithContext(ctx).OutputState,
	}
}

// GetPrivatelinkEndpointsServiceAdlResultArrayInput is an input type that accepts GetPrivatelinkEndpointsServiceAdlResultArray and GetPrivatelinkEndpointsServiceAdlResultArrayOutput values.
// You can construct a concrete instance of `GetPrivatelinkEndpointsServiceAdlResultArrayInput` via:
//
//	GetPrivatelinkEndpointsServiceAdlResultArray{ GetPrivatelinkEndpointsServiceAdlResultArgs{...} }
type GetPrivatelinkEndpointsServiceAdlResultArrayInput interface {
	pulumi.Input

	ToGetPrivatelinkEndpointsServiceAdlResultArrayOutput() GetPrivatelinkEndpointsServiceAdlResultArrayOutput
	ToGetPrivatelinkEndpointsServiceAdlResultArrayOutputWithContext(context.Context) GetPrivatelinkEndpointsServiceAdlResultArrayOutput
}

type GetPrivatelinkEndpointsServiceAdlResultArray []GetPrivatelinkEndpointsServiceAdlResultInput

func (GetPrivatelinkEndpointsServiceAdlResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivatelinkEndpointsServiceAdlResult)(nil)).Elem()
}

func (i GetPrivatelinkEndpointsServiceAdlResultArray) ToGetPrivatelinkEndpointsServiceAdlResultArrayOutput() GetPrivatelinkEndpointsServiceAdlResultArrayOutput {
	return i.ToGetPrivatelinkEndpointsServiceAdlResultArrayOutputWithContext(context.Background())
}

func (i GetPrivatelinkEndpointsServiceAdlResultArray) ToGetPrivatelinkEndpointsServiceAdlResultArrayOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivatelinkEndpointsServiceAdlResultArrayOutput)
}

func (i GetPrivatelinkEndpointsServiceAdlResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetPrivatelinkEndpointsServiceAdlResult] {
	return pulumix.Output[[]GetPrivatelinkEndpointsServiceAdlResult]{
		OutputState: i.ToGetPrivatelinkEndpointsServiceAdlResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetPrivatelinkEndpointsServiceAdlResultOutput struct{ *pulumi.OutputState }

func (GetPrivatelinkEndpointsServiceAdlResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlResult)(nil)).Elem()
}

func (o GetPrivatelinkEndpointsServiceAdlResultOutput) ToGetPrivatelinkEndpointsServiceAdlResultOutput() GetPrivatelinkEndpointsServiceAdlResultOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlResultOutput) ToGetPrivatelinkEndpointsServiceAdlResultOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlResultOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetPrivatelinkEndpointsServiceAdlResult] {
	return pulumix.Output[GetPrivatelinkEndpointsServiceAdlResult]{
		OutputState: o.OutputState,
	}
}

// Human-readable string to associate with this private endpoint.
//
// See [MongoDB Atlas API](https://docs.atlas.mongodb.com/reference/api/online-archive-get-all-for-cluster/) Documentation for more information.
func (o GetPrivatelinkEndpointsServiceAdlResultOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceAdlResult) string { return v.Comment }).(pulumi.StringOutput)
}

// Unique 22-character alphanumeric string that identifies the private endpoint. Atlas supports AWS private endpoints using the [|aws| PrivateLink](https://aws.amazon.com/privatelink/) feature.
func (o GetPrivatelinkEndpointsServiceAdlResultOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceAdlResult) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Human-readable label that identifies the cloud provider for this endpoint.
func (o GetPrivatelinkEndpointsServiceAdlResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceAdlResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Human-readable label that identifies the type of resource to associate with this private endpoint.
func (o GetPrivatelinkEndpointsServiceAdlResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceAdlResult) string { return v.Type }).(pulumi.StringOutput)
}

type GetPrivatelinkEndpointsServiceAdlResultArrayOutput struct{ *pulumi.OutputState }

func (GetPrivatelinkEndpointsServiceAdlResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivatelinkEndpointsServiceAdlResult)(nil)).Elem()
}

func (o GetPrivatelinkEndpointsServiceAdlResultArrayOutput) ToGetPrivatelinkEndpointsServiceAdlResultArrayOutput() GetPrivatelinkEndpointsServiceAdlResultArrayOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlResultArrayOutput) ToGetPrivatelinkEndpointsServiceAdlResultArrayOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceAdlResultArrayOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceAdlResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetPrivatelinkEndpointsServiceAdlResult] {
	return pulumix.Output[[]GetPrivatelinkEndpointsServiceAdlResult]{
		OutputState: o.OutputState,
	}
}

func (o GetPrivatelinkEndpointsServiceAdlResultArrayOutput) Index(i pulumi.IntInput) GetPrivatelinkEndpointsServiceAdlResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivatelinkEndpointsServiceAdlResult {
		return vs[0].([]GetPrivatelinkEndpointsServiceAdlResult)[vs[1].(int)]
	}).(GetPrivatelinkEndpointsServiceAdlResultOutput)
}

type GetPrivatelinkEndpointsServiceServerlessResult struct {
	// Unique string that identifies the private endpoint's network interface.
	CloudProviderEndpointId string `pulumi:"cloudProviderEndpointId"`
	// Human-readable string to associate with this private endpoint.
	Comment string `pulumi:"comment"`
	// (Required) Unique 22-character alphanumeric string that identifies the private endpoint. Atlas supports AWS private endpoints using the [AWS PrivateLink](https://aws.amazon.com/privatelink/) feature.
	EndpointId string `pulumi:"endpointId"`
	// Unique string that identifies the PrivateLink endpoint service. MongoDB Cloud returns null while it creates the endpoint service.
	EndpointServiceName string `pulumi:"endpointServiceName"`
	ErrorMessage        string `pulumi:"errorMessage"`
	// IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.
	PrivateEndpointIpAddress string `pulumi:"privateEndpointIpAddress"`
	// Root-relative path that identifies the Azure Private Link Service that MongoDB Cloud manages.
	PrivateLinkServiceResourceId string `pulumi:"privateLinkServiceResourceId"`
	// Human-readable label that indicates the current operating status of the private endpoint. Values include: RESERVATION_REQUESTED, RESERVED, INITIATING, AVAILABLE, FAILED, DELETING.
	Status string `pulumi:"status"`
}

// GetPrivatelinkEndpointsServiceServerlessResultInput is an input type that accepts GetPrivatelinkEndpointsServiceServerlessResultArgs and GetPrivatelinkEndpointsServiceServerlessResultOutput values.
// You can construct a concrete instance of `GetPrivatelinkEndpointsServiceServerlessResultInput` via:
//
//	GetPrivatelinkEndpointsServiceServerlessResultArgs{...}
type GetPrivatelinkEndpointsServiceServerlessResultInput interface {
	pulumi.Input

	ToGetPrivatelinkEndpointsServiceServerlessResultOutput() GetPrivatelinkEndpointsServiceServerlessResultOutput
	ToGetPrivatelinkEndpointsServiceServerlessResultOutputWithContext(context.Context) GetPrivatelinkEndpointsServiceServerlessResultOutput
}

type GetPrivatelinkEndpointsServiceServerlessResultArgs struct {
	// Unique string that identifies the private endpoint's network interface.
	CloudProviderEndpointId pulumi.StringInput `pulumi:"cloudProviderEndpointId"`
	// Human-readable string to associate with this private endpoint.
	Comment pulumi.StringInput `pulumi:"comment"`
	// (Required) Unique 22-character alphanumeric string that identifies the private endpoint. Atlas supports AWS private endpoints using the [AWS PrivateLink](https://aws.amazon.com/privatelink/) feature.
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Unique string that identifies the PrivateLink endpoint service. MongoDB Cloud returns null while it creates the endpoint service.
	EndpointServiceName pulumi.StringInput `pulumi:"endpointServiceName"`
	ErrorMessage        pulumi.StringInput `pulumi:"errorMessage"`
	// IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.
	PrivateEndpointIpAddress pulumi.StringInput `pulumi:"privateEndpointIpAddress"`
	// Root-relative path that identifies the Azure Private Link Service that MongoDB Cloud manages.
	PrivateLinkServiceResourceId pulumi.StringInput `pulumi:"privateLinkServiceResourceId"`
	// Human-readable label that indicates the current operating status of the private endpoint. Values include: RESERVATION_REQUESTED, RESERVED, INITIATING, AVAILABLE, FAILED, DELETING.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetPrivatelinkEndpointsServiceServerlessResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivatelinkEndpointsServiceServerlessResult)(nil)).Elem()
}

func (i GetPrivatelinkEndpointsServiceServerlessResultArgs) ToGetPrivatelinkEndpointsServiceServerlessResultOutput() GetPrivatelinkEndpointsServiceServerlessResultOutput {
	return i.ToGetPrivatelinkEndpointsServiceServerlessResultOutputWithContext(context.Background())
}

func (i GetPrivatelinkEndpointsServiceServerlessResultArgs) ToGetPrivatelinkEndpointsServiceServerlessResultOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceServerlessResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivatelinkEndpointsServiceServerlessResultOutput)
}

func (i GetPrivatelinkEndpointsServiceServerlessResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetPrivatelinkEndpointsServiceServerlessResult] {
	return pulumix.Output[GetPrivatelinkEndpointsServiceServerlessResult]{
		OutputState: i.ToGetPrivatelinkEndpointsServiceServerlessResultOutputWithContext(ctx).OutputState,
	}
}

// GetPrivatelinkEndpointsServiceServerlessResultArrayInput is an input type that accepts GetPrivatelinkEndpointsServiceServerlessResultArray and GetPrivatelinkEndpointsServiceServerlessResultArrayOutput values.
// You can construct a concrete instance of `GetPrivatelinkEndpointsServiceServerlessResultArrayInput` via:
//
//	GetPrivatelinkEndpointsServiceServerlessResultArray{ GetPrivatelinkEndpointsServiceServerlessResultArgs{...} }
type GetPrivatelinkEndpointsServiceServerlessResultArrayInput interface {
	pulumi.Input

	ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutput() GetPrivatelinkEndpointsServiceServerlessResultArrayOutput
	ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutputWithContext(context.Context) GetPrivatelinkEndpointsServiceServerlessResultArrayOutput
}

type GetPrivatelinkEndpointsServiceServerlessResultArray []GetPrivatelinkEndpointsServiceServerlessResultInput

func (GetPrivatelinkEndpointsServiceServerlessResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivatelinkEndpointsServiceServerlessResult)(nil)).Elem()
}

func (i GetPrivatelinkEndpointsServiceServerlessResultArray) ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutput() GetPrivatelinkEndpointsServiceServerlessResultArrayOutput {
	return i.ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutputWithContext(context.Background())
}

func (i GetPrivatelinkEndpointsServiceServerlessResultArray) ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceServerlessResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivatelinkEndpointsServiceServerlessResultArrayOutput)
}

func (i GetPrivatelinkEndpointsServiceServerlessResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetPrivatelinkEndpointsServiceServerlessResult] {
	return pulumix.Output[[]GetPrivatelinkEndpointsServiceServerlessResult]{
		OutputState: i.ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetPrivatelinkEndpointsServiceServerlessResultOutput struct{ *pulumi.OutputState }

func (GetPrivatelinkEndpointsServiceServerlessResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivatelinkEndpointsServiceServerlessResult)(nil)).Elem()
}

func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) ToGetPrivatelinkEndpointsServiceServerlessResultOutput() GetPrivatelinkEndpointsServiceServerlessResultOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) ToGetPrivatelinkEndpointsServiceServerlessResultOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceServerlessResultOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetPrivatelinkEndpointsServiceServerlessResult] {
	return pulumix.Output[GetPrivatelinkEndpointsServiceServerlessResult]{
		OutputState: o.OutputState,
	}
}

// Unique string that identifies the private endpoint's network interface.
func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) CloudProviderEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.CloudProviderEndpointId }).(pulumi.StringOutput)
}

// Human-readable string to associate with this private endpoint.
func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.Comment }).(pulumi.StringOutput)
}

// (Required) Unique 22-character alphanumeric string that identifies the private endpoint. Atlas supports AWS private endpoints using the [AWS PrivateLink](https://aws.amazon.com/privatelink/) feature.
func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Unique string that identifies the PrivateLink endpoint service. MongoDB Cloud returns null while it creates the endpoint service.
func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) EndpointServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.EndpointServiceName }).(pulumi.StringOutput)
}

func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.
func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) PrivateEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.PrivateEndpointIpAddress }).(pulumi.StringOutput)
}

// Root-relative path that identifies the Azure Private Link Service that MongoDB Cloud manages.
func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) PrivateLinkServiceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.PrivateLinkServiceResourceId }).(pulumi.StringOutput)
}

// Human-readable label that indicates the current operating status of the private endpoint. Values include: RESERVATION_REQUESTED, RESERVED, INITIATING, AVAILABLE, FAILED, DELETING.
func (o GetPrivatelinkEndpointsServiceServerlessResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivatelinkEndpointsServiceServerlessResult) string { return v.Status }).(pulumi.StringOutput)
}

type GetPrivatelinkEndpointsServiceServerlessResultArrayOutput struct{ *pulumi.OutputState }

func (GetPrivatelinkEndpointsServiceServerlessResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivatelinkEndpointsServiceServerlessResult)(nil)).Elem()
}

func (o GetPrivatelinkEndpointsServiceServerlessResultArrayOutput) ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutput() GetPrivatelinkEndpointsServiceServerlessResultArrayOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceServerlessResultArrayOutput) ToGetPrivatelinkEndpointsServiceServerlessResultArrayOutputWithContext(ctx context.Context) GetPrivatelinkEndpointsServiceServerlessResultArrayOutput {
	return o
}

func (o GetPrivatelinkEndpointsServiceServerlessResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetPrivatelinkEndpointsServiceServerlessResult] {
	return pulumix.Output[[]GetPrivatelinkEndpointsServiceServerlessResult]{
		OutputState: o.OutputState,
	}
}

func (o GetPrivatelinkEndpointsServiceServerlessResultArrayOutput) Index(i pulumi.IntInput) GetPrivatelinkEndpointsServiceServerlessResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivatelinkEndpointsServiceServerlessResult {
		return vs[0].([]GetPrivatelinkEndpointsServiceServerlessResult)[vs[1].(int)]
	}).(GetPrivatelinkEndpointsServiceServerlessResultOutput)
}

type GetProjectApiKeyType struct {
	ApiKeyId  string   `pulumi:"apiKeyId"`
	RoleNames []string `pulumi:"roleNames"`
}

// GetProjectApiKeyTypeInput is an input type that accepts GetProjectApiKeyTypeArgs and GetProjectApiKeyTypeOutput values.
// You can construct a concrete instance of `GetProjectApiKeyTypeInput` via:
//
//	GetProjectApiKeyTypeArgs{...}
type GetProjectApiKeyTypeInput interface {
	pulumi.Input

	ToGetProjectApiKeyTypeOutput() GetProjectApiKeyTypeOutput
	ToGetProjectApiKeyTypeOutputWithContext(context.Context) GetProjectApiKeyTypeOutput
}

type GetProjectApiKeyTypeArgs struct {
	ApiKeyId  pulumi.StringInput      `pulumi:"apiKeyId"`
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
}

func (GetProjectApiKeyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectApiKeyType)(nil)).Elem()
}

func (i GetProjectApiKeyTypeArgs) ToGetProjectApiKeyTypeOutput() GetProjectApiKeyTypeOutput {
	return i.ToGetProjectApiKeyTypeOutputWithContext(context.Background())
}

func (i GetProjectApiKeyTypeArgs) ToGetProjectApiKeyTypeOutputWithContext(ctx context.Context) GetProjectApiKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectApiKeyTypeOutput)
}

func (i GetProjectApiKeyTypeArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectApiKeyType] {
	return pulumix.Output[GetProjectApiKeyType]{
		OutputState: i.ToGetProjectApiKeyTypeOutputWithContext(ctx).OutputState,
	}
}

// GetProjectApiKeyTypeArrayInput is an input type that accepts GetProjectApiKeyTypeArray and GetProjectApiKeyTypeArrayOutput values.
// You can construct a concrete instance of `GetProjectApiKeyTypeArrayInput` via:
//
//	GetProjectApiKeyTypeArray{ GetProjectApiKeyTypeArgs{...} }
type GetProjectApiKeyTypeArrayInput interface {
	pulumi.Input

	ToGetProjectApiKeyTypeArrayOutput() GetProjectApiKeyTypeArrayOutput
	ToGetProjectApiKeyTypeArrayOutputWithContext(context.Context) GetProjectApiKeyTypeArrayOutput
}

type GetProjectApiKeyTypeArray []GetProjectApiKeyTypeInput

func (GetProjectApiKeyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectApiKeyType)(nil)).Elem()
}

func (i GetProjectApiKeyTypeArray) ToGetProjectApiKeyTypeArrayOutput() GetProjectApiKeyTypeArrayOutput {
	return i.ToGetProjectApiKeyTypeArrayOutputWithContext(context.Background())
}

func (i GetProjectApiKeyTypeArray) ToGetProjectApiKeyTypeArrayOutputWithContext(ctx context.Context) GetProjectApiKeyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectApiKeyTypeArrayOutput)
}

func (i GetProjectApiKeyTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectApiKeyType] {
	return pulumix.Output[[]GetProjectApiKeyType]{
		OutputState: i.ToGetProjectApiKeyTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetProjectApiKeyTypeOutput struct{ *pulumi.OutputState }

func (GetProjectApiKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectApiKeyType)(nil)).Elem()
}

func (o GetProjectApiKeyTypeOutput) ToGetProjectApiKeyTypeOutput() GetProjectApiKeyTypeOutput {
	return o
}

func (o GetProjectApiKeyTypeOutput) ToGetProjectApiKeyTypeOutputWithContext(ctx context.Context) GetProjectApiKeyTypeOutput {
	return o
}

func (o GetProjectApiKeyTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectApiKeyType] {
	return pulumix.Output[GetProjectApiKeyType]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectApiKeyTypeOutput) ApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectApiKeyType) string { return v.ApiKeyId }).(pulumi.StringOutput)
}

func (o GetProjectApiKeyTypeOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectApiKeyType) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

type GetProjectApiKeyTypeArrayOutput struct{ *pulumi.OutputState }

func (GetProjectApiKeyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectApiKeyType)(nil)).Elem()
}

func (o GetProjectApiKeyTypeArrayOutput) ToGetProjectApiKeyTypeArrayOutput() GetProjectApiKeyTypeArrayOutput {
	return o
}

func (o GetProjectApiKeyTypeArrayOutput) ToGetProjectApiKeyTypeArrayOutputWithContext(ctx context.Context) GetProjectApiKeyTypeArrayOutput {
	return o
}

func (o GetProjectApiKeyTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectApiKeyType] {
	return pulumix.Output[[]GetProjectApiKeyType]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectApiKeyTypeArrayOutput) Index(i pulumi.IntInput) GetProjectApiKeyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectApiKeyType {
		return vs[0].([]GetProjectApiKeyType)[vs[1].(int)]
	}).(GetProjectApiKeyTypeOutput)
}

type GetProjectApiKeyProjectAssignment struct {
	// The unique ID for the project.
	ProjectId string `pulumi:"projectId"`
	// List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project. You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#project-roles) describes the valid roles that can be assigned.
	RoleNames []string `pulumi:"roleNames"`
}

// GetProjectApiKeyProjectAssignmentInput is an input type that accepts GetProjectApiKeyProjectAssignmentArgs and GetProjectApiKeyProjectAssignmentOutput values.
// You can construct a concrete instance of `GetProjectApiKeyProjectAssignmentInput` via:
//
//	GetProjectApiKeyProjectAssignmentArgs{...}
type GetProjectApiKeyProjectAssignmentInput interface {
	pulumi.Input

	ToGetProjectApiKeyProjectAssignmentOutput() GetProjectApiKeyProjectAssignmentOutput
	ToGetProjectApiKeyProjectAssignmentOutputWithContext(context.Context) GetProjectApiKeyProjectAssignmentOutput
}

type GetProjectApiKeyProjectAssignmentArgs struct {
	// The unique ID for the project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project. You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#project-roles) describes the valid roles that can be assigned.
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
}

func (GetProjectApiKeyProjectAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectApiKeyProjectAssignment)(nil)).Elem()
}

func (i GetProjectApiKeyProjectAssignmentArgs) ToGetProjectApiKeyProjectAssignmentOutput() GetProjectApiKeyProjectAssignmentOutput {
	return i.ToGetProjectApiKeyProjectAssignmentOutputWithContext(context.Background())
}

func (i GetProjectApiKeyProjectAssignmentArgs) ToGetProjectApiKeyProjectAssignmentOutputWithContext(ctx context.Context) GetProjectApiKeyProjectAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectApiKeyProjectAssignmentOutput)
}

func (i GetProjectApiKeyProjectAssignmentArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectApiKeyProjectAssignment] {
	return pulumix.Output[GetProjectApiKeyProjectAssignment]{
		OutputState: i.ToGetProjectApiKeyProjectAssignmentOutputWithContext(ctx).OutputState,
	}
}

// GetProjectApiKeyProjectAssignmentArrayInput is an input type that accepts GetProjectApiKeyProjectAssignmentArray and GetProjectApiKeyProjectAssignmentArrayOutput values.
// You can construct a concrete instance of `GetProjectApiKeyProjectAssignmentArrayInput` via:
//
//	GetProjectApiKeyProjectAssignmentArray{ GetProjectApiKeyProjectAssignmentArgs{...} }
type GetProjectApiKeyProjectAssignmentArrayInput interface {
	pulumi.Input

	ToGetProjectApiKeyProjectAssignmentArrayOutput() GetProjectApiKeyProjectAssignmentArrayOutput
	ToGetProjectApiKeyProjectAssignmentArrayOutputWithContext(context.Context) GetProjectApiKeyProjectAssignmentArrayOutput
}

type GetProjectApiKeyProjectAssignmentArray []GetProjectApiKeyProjectAssignmentInput

func (GetProjectApiKeyProjectAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectApiKeyProjectAssignment)(nil)).Elem()
}

func (i GetProjectApiKeyProjectAssignmentArray) ToGetProjectApiKeyProjectAssignmentArrayOutput() GetProjectApiKeyProjectAssignmentArrayOutput {
	return i.ToGetProjectApiKeyProjectAssignmentArrayOutputWithContext(context.Background())
}

func (i GetProjectApiKeyProjectAssignmentArray) ToGetProjectApiKeyProjectAssignmentArrayOutputWithContext(ctx context.Context) GetProjectApiKeyProjectAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectApiKeyProjectAssignmentArrayOutput)
}

func (i GetProjectApiKeyProjectAssignmentArray) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectApiKeyProjectAssignment] {
	return pulumix.Output[[]GetProjectApiKeyProjectAssignment]{
		OutputState: i.ToGetProjectApiKeyProjectAssignmentArrayOutputWithContext(ctx).OutputState,
	}
}

type GetProjectApiKeyProjectAssignmentOutput struct{ *pulumi.OutputState }

func (GetProjectApiKeyProjectAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectApiKeyProjectAssignment)(nil)).Elem()
}

func (o GetProjectApiKeyProjectAssignmentOutput) ToGetProjectApiKeyProjectAssignmentOutput() GetProjectApiKeyProjectAssignmentOutput {
	return o
}

func (o GetProjectApiKeyProjectAssignmentOutput) ToGetProjectApiKeyProjectAssignmentOutputWithContext(ctx context.Context) GetProjectApiKeyProjectAssignmentOutput {
	return o
}

func (o GetProjectApiKeyProjectAssignmentOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectApiKeyProjectAssignment] {
	return pulumix.Output[GetProjectApiKeyProjectAssignment]{
		OutputState: o.OutputState,
	}
}

// The unique ID for the project.
func (o GetProjectApiKeyProjectAssignmentOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectApiKeyProjectAssignment) string { return v.ProjectId }).(pulumi.StringOutput)
}

// List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project. You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#project-roles) describes the valid roles that can be assigned.
func (o GetProjectApiKeyProjectAssignmentOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectApiKeyProjectAssignment) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

type GetProjectApiKeyProjectAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetProjectApiKeyProjectAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectApiKeyProjectAssignment)(nil)).Elem()
}

func (o GetProjectApiKeyProjectAssignmentArrayOutput) ToGetProjectApiKeyProjectAssignmentArrayOutput() GetProjectApiKeyProjectAssignmentArrayOutput {
	return o
}

func (o GetProjectApiKeyProjectAssignmentArrayOutput) ToGetProjectApiKeyProjectAssignmentArrayOutputWithContext(ctx context.Context) GetProjectApiKeyProjectAssignmentArrayOutput {
	return o
}

func (o GetProjectApiKeyProjectAssignmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectApiKeyProjectAssignment] {
	return pulumix.Output[[]GetProjectApiKeyProjectAssignment]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectApiKeyProjectAssignmentArrayOutput) Index(i pulumi.IntInput) GetProjectApiKeyProjectAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectApiKeyProjectAssignment {
		return vs[0].([]GetProjectApiKeyProjectAssignment)[vs[1].(int)]
	}).(GetProjectApiKeyProjectAssignmentOutput)
}

type GetProjectApiKeysResult struct {
	// Unique identifier for the API key you want to update. Use the /orgs/{ORG-ID}/apiKeys endpoint to retrieve all API keys to which the authenticated user has access for the specified organization.
	ApiKeyId string `pulumi:"apiKeyId"`
	// Description of this Project API key.
	Description        string                                     `pulumi:"description"`
	PrivateKey         string                                     `pulumi:"privateKey"`
	ProjectAssignments []GetProjectApiKeysResultProjectAssignment `pulumi:"projectAssignments"`
	PublicKey          string                                     `pulumi:"publicKey"`
	// Name of the role. This resource returns all the roles the user has in Atlas. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#project-roles) describes the valid roles that can be assigned. **DEPRECATED** Use `projectAssignment` instead.
	//
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to project_assignment
	RoleNames []string `pulumi:"roleNames"`
}

// GetProjectApiKeysResultInput is an input type that accepts GetProjectApiKeysResultArgs and GetProjectApiKeysResultOutput values.
// You can construct a concrete instance of `GetProjectApiKeysResultInput` via:
//
//	GetProjectApiKeysResultArgs{...}
type GetProjectApiKeysResultInput interface {
	pulumi.Input

	ToGetProjectApiKeysResultOutput() GetProjectApiKeysResultOutput
	ToGetProjectApiKeysResultOutputWithContext(context.Context) GetProjectApiKeysResultOutput
}

type GetProjectApiKeysResultArgs struct {
	// Unique identifier for the API key you want to update. Use the /orgs/{ORG-ID}/apiKeys endpoint to retrieve all API keys to which the authenticated user has access for the specified organization.
	ApiKeyId pulumi.StringInput `pulumi:"apiKeyId"`
	// Description of this Project API key.
	Description        pulumi.StringInput                                 `pulumi:"description"`
	PrivateKey         pulumi.StringInput                                 `pulumi:"privateKey"`
	ProjectAssignments GetProjectApiKeysResultProjectAssignmentArrayInput `pulumi:"projectAssignments"`
	PublicKey          pulumi.StringInput                                 `pulumi:"publicKey"`
	// Name of the role. This resource returns all the roles the user has in Atlas. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#project-roles) describes the valid roles that can be assigned. **DEPRECATED** Use `projectAssignment` instead.
	//
	// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to project_assignment
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
}

func (GetProjectApiKeysResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectApiKeysResult)(nil)).Elem()
}

func (i GetProjectApiKeysResultArgs) ToGetProjectApiKeysResultOutput() GetProjectApiKeysResultOutput {
	return i.ToGetProjectApiKeysResultOutputWithContext(context.Background())
}

func (i GetProjectApiKeysResultArgs) ToGetProjectApiKeysResultOutputWithContext(ctx context.Context) GetProjectApiKeysResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectApiKeysResultOutput)
}

func (i GetProjectApiKeysResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectApiKeysResult] {
	return pulumix.Output[GetProjectApiKeysResult]{
		OutputState: i.ToGetProjectApiKeysResultOutputWithContext(ctx).OutputState,
	}
}

// GetProjectApiKeysResultArrayInput is an input type that accepts GetProjectApiKeysResultArray and GetProjectApiKeysResultArrayOutput values.
// You can construct a concrete instance of `GetProjectApiKeysResultArrayInput` via:
//
//	GetProjectApiKeysResultArray{ GetProjectApiKeysResultArgs{...} }
type GetProjectApiKeysResultArrayInput interface {
	pulumi.Input

	ToGetProjectApiKeysResultArrayOutput() GetProjectApiKeysResultArrayOutput
	ToGetProjectApiKeysResultArrayOutputWithContext(context.Context) GetProjectApiKeysResultArrayOutput
}

type GetProjectApiKeysResultArray []GetProjectApiKeysResultInput

func (GetProjectApiKeysResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectApiKeysResult)(nil)).Elem()
}

func (i GetProjectApiKeysResultArray) ToGetProjectApiKeysResultArrayOutput() GetProjectApiKeysResultArrayOutput {
	return i.ToGetProjectApiKeysResultArrayOutputWithContext(context.Background())
}

func (i GetProjectApiKeysResultArray) ToGetProjectApiKeysResultArrayOutputWithContext(ctx context.Context) GetProjectApiKeysResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectApiKeysResultArrayOutput)
}

func (i GetProjectApiKeysResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectApiKeysResult] {
	return pulumix.Output[[]GetProjectApiKeysResult]{
		OutputState: i.ToGetProjectApiKeysResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetProjectApiKeysResultOutput struct{ *pulumi.OutputState }

func (GetProjectApiKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectApiKeysResult)(nil)).Elem()
}

func (o GetProjectApiKeysResultOutput) ToGetProjectApiKeysResultOutput() GetProjectApiKeysResultOutput {
	return o
}

func (o GetProjectApiKeysResultOutput) ToGetProjectApiKeysResultOutputWithContext(ctx context.Context) GetProjectApiKeysResultOutput {
	return o
}

func (o GetProjectApiKeysResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectApiKeysResult] {
	return pulumix.Output[GetProjectApiKeysResult]{
		OutputState: o.OutputState,
	}
}

// Unique identifier for the API key you want to update. Use the /orgs/{ORG-ID}/apiKeys endpoint to retrieve all API keys to which the authenticated user has access for the specified organization.
func (o GetProjectApiKeysResultOutput) ApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectApiKeysResult) string { return v.ApiKeyId }).(pulumi.StringOutput)
}

// Description of this Project API key.
func (o GetProjectApiKeysResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectApiKeysResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetProjectApiKeysResultOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectApiKeysResult) string { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o GetProjectApiKeysResultOutput) ProjectAssignments() GetProjectApiKeysResultProjectAssignmentArrayOutput {
	return o.ApplyT(func(v GetProjectApiKeysResult) []GetProjectApiKeysResultProjectAssignment {
		return v.ProjectAssignments
	}).(GetProjectApiKeysResultProjectAssignmentArrayOutput)
}

func (o GetProjectApiKeysResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectApiKeysResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

// Name of the role. This resource returns all the roles the user has in Atlas. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#project-roles) describes the valid roles that can be assigned. **DEPRECATED** Use `projectAssignment` instead.
//
// Deprecated: this parameter is deprecated and will be removed in v1.12.0, please transition to project_assignment
func (o GetProjectApiKeysResultOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectApiKeysResult) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

type GetProjectApiKeysResultArrayOutput struct{ *pulumi.OutputState }

func (GetProjectApiKeysResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectApiKeysResult)(nil)).Elem()
}

func (o GetProjectApiKeysResultArrayOutput) ToGetProjectApiKeysResultArrayOutput() GetProjectApiKeysResultArrayOutput {
	return o
}

func (o GetProjectApiKeysResultArrayOutput) ToGetProjectApiKeysResultArrayOutputWithContext(ctx context.Context) GetProjectApiKeysResultArrayOutput {
	return o
}

func (o GetProjectApiKeysResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectApiKeysResult] {
	return pulumix.Output[[]GetProjectApiKeysResult]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectApiKeysResultArrayOutput) Index(i pulumi.IntInput) GetProjectApiKeysResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectApiKeysResult {
		return vs[0].([]GetProjectApiKeysResult)[vs[1].(int)]
	}).(GetProjectApiKeysResultOutput)
}

type GetProjectApiKeysResultProjectAssignment struct {
	// Project ID to assign to Access Key
	ProjectId string `pulumi:"projectId"`
	// List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project. You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#project-roles) describes the valid roles that can be assigned.
	//
	// See [MongoDB Atlas API - API Keys](https://www.mongodb.com/docs/atlas/reference/api/projectApiKeys/get-all-apiKeys-in-one-project/) - Documentation for more information.
	RoleNames []string `pulumi:"roleNames"`
}

// GetProjectApiKeysResultProjectAssignmentInput is an input type that accepts GetProjectApiKeysResultProjectAssignmentArgs and GetProjectApiKeysResultProjectAssignmentOutput values.
// You can construct a concrete instance of `GetProjectApiKeysResultProjectAssignmentInput` via:
//
//	GetProjectApiKeysResultProjectAssignmentArgs{...}
type GetProjectApiKeysResultProjectAssignmentInput interface {
	pulumi.Input

	ToGetProjectApiKeysResultProjectAssignmentOutput() GetProjectApiKeysResultProjectAssignmentOutput
	ToGetProjectApiKeysResultProjectAssignmentOutputWithContext(context.Context) GetProjectApiKeysResultProjectAssignmentOutput
}

type GetProjectApiKeysResultProjectAssignmentArgs struct {
	// Project ID to assign to Access Key
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project. You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#project-roles) describes the valid roles that can be assigned.
	//
	// See [MongoDB Atlas API - API Keys](https://www.mongodb.com/docs/atlas/reference/api/projectApiKeys/get-all-apiKeys-in-one-project/) - Documentation for more information.
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
}

func (GetProjectApiKeysResultProjectAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectApiKeysResultProjectAssignment)(nil)).Elem()
}

func (i GetProjectApiKeysResultProjectAssignmentArgs) ToGetProjectApiKeysResultProjectAssignmentOutput() GetProjectApiKeysResultProjectAssignmentOutput {
	return i.ToGetProjectApiKeysResultProjectAssignmentOutputWithContext(context.Background())
}

func (i GetProjectApiKeysResultProjectAssignmentArgs) ToGetProjectApiKeysResultProjectAssignmentOutputWithContext(ctx context.Context) GetProjectApiKeysResultProjectAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectApiKeysResultProjectAssignmentOutput)
}

func (i GetProjectApiKeysResultProjectAssignmentArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectApiKeysResultProjectAssignment] {
	return pulumix.Output[GetProjectApiKeysResultProjectAssignment]{
		OutputState: i.ToGetProjectApiKeysResultProjectAssignmentOutputWithContext(ctx).OutputState,
	}
}

// GetProjectApiKeysResultProjectAssignmentArrayInput is an input type that accepts GetProjectApiKeysResultProjectAssignmentArray and GetProjectApiKeysResultProjectAssignmentArrayOutput values.
// You can construct a concrete instance of `GetProjectApiKeysResultProjectAssignmentArrayInput` via:
//
//	GetProjectApiKeysResultProjectAssignmentArray{ GetProjectApiKeysResultProjectAssignmentArgs{...} }
type GetProjectApiKeysResultProjectAssignmentArrayInput interface {
	pulumi.Input

	ToGetProjectApiKeysResultProjectAssignmentArrayOutput() GetProjectApiKeysResultProjectAssignmentArrayOutput
	ToGetProjectApiKeysResultProjectAssignmentArrayOutputWithContext(context.Context) GetProjectApiKeysResultProjectAssignmentArrayOutput
}

type GetProjectApiKeysResultProjectAssignmentArray []GetProjectApiKeysResultProjectAssignmentInput

func (GetProjectApiKeysResultProjectAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectApiKeysResultProjectAssignment)(nil)).Elem()
}

func (i GetProjectApiKeysResultProjectAssignmentArray) ToGetProjectApiKeysResultProjectAssignmentArrayOutput() GetProjectApiKeysResultProjectAssignmentArrayOutput {
	return i.ToGetProjectApiKeysResultProjectAssignmentArrayOutputWithContext(context.Background())
}

func (i GetProjectApiKeysResultProjectAssignmentArray) ToGetProjectApiKeysResultProjectAssignmentArrayOutputWithContext(ctx context.Context) GetProjectApiKeysResultProjectAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectApiKeysResultProjectAssignmentArrayOutput)
}

func (i GetProjectApiKeysResultProjectAssignmentArray) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectApiKeysResultProjectAssignment] {
	return pulumix.Output[[]GetProjectApiKeysResultProjectAssignment]{
		OutputState: i.ToGetProjectApiKeysResultProjectAssignmentArrayOutputWithContext(ctx).OutputState,
	}
}

type GetProjectApiKeysResultProjectAssignmentOutput struct{ *pulumi.OutputState }

func (GetProjectApiKeysResultProjectAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectApiKeysResultProjectAssignment)(nil)).Elem()
}

func (o GetProjectApiKeysResultProjectAssignmentOutput) ToGetProjectApiKeysResultProjectAssignmentOutput() GetProjectApiKeysResultProjectAssignmentOutput {
	return o
}

func (o GetProjectApiKeysResultProjectAssignmentOutput) ToGetProjectApiKeysResultProjectAssignmentOutputWithContext(ctx context.Context) GetProjectApiKeysResultProjectAssignmentOutput {
	return o
}

func (o GetProjectApiKeysResultProjectAssignmentOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectApiKeysResultProjectAssignment] {
	return pulumix.Output[GetProjectApiKeysResultProjectAssignment]{
		OutputState: o.OutputState,
	}
}

// Project ID to assign to Access Key
func (o GetProjectApiKeysResultProjectAssignmentOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectApiKeysResultProjectAssignment) string { return v.ProjectId }).(pulumi.StringOutput)
}

// List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project. You must specify an array even if you are only associating a single role with the Programmatic API key. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#project-roles) describes the valid roles that can be assigned.
//
// See [MongoDB Atlas API - API Keys](https://www.mongodb.com/docs/atlas/reference/api/projectApiKeys/get-all-apiKeys-in-one-project/) - Documentation for more information.
func (o GetProjectApiKeysResultProjectAssignmentOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectApiKeysResultProjectAssignment) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

type GetProjectApiKeysResultProjectAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetProjectApiKeysResultProjectAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectApiKeysResultProjectAssignment)(nil)).Elem()
}

func (o GetProjectApiKeysResultProjectAssignmentArrayOutput) ToGetProjectApiKeysResultProjectAssignmentArrayOutput() GetProjectApiKeysResultProjectAssignmentArrayOutput {
	return o
}

func (o GetProjectApiKeysResultProjectAssignmentArrayOutput) ToGetProjectApiKeysResultProjectAssignmentArrayOutputWithContext(ctx context.Context) GetProjectApiKeysResultProjectAssignmentArrayOutput {
	return o
}

func (o GetProjectApiKeysResultProjectAssignmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectApiKeysResultProjectAssignment] {
	return pulumix.Output[[]GetProjectApiKeysResultProjectAssignment]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectApiKeysResultProjectAssignmentArrayOutput) Index(i pulumi.IntInput) GetProjectApiKeysResultProjectAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectApiKeysResultProjectAssignment {
		return vs[0].([]GetProjectApiKeysResultProjectAssignment)[vs[1].(int)]
	}).(GetProjectApiKeysResultProjectAssignmentOutput)
}

type GetProjectLimit struct {
	CurrentUsage int `pulumi:"currentUsage"`
	DefaultLimit int `pulumi:"defaultLimit"`
	MaximumLimit int `pulumi:"maximumLimit"`
	// The unique ID for the project.
	//
	// > **IMPORTANT:** Either `projectId` or `name` must be configurated.
	Name  string `pulumi:"name"`
	Value int    `pulumi:"value"`
}

// GetProjectLimitInput is an input type that accepts GetProjectLimitArgs and GetProjectLimitOutput values.
// You can construct a concrete instance of `GetProjectLimitInput` via:
//
//	GetProjectLimitArgs{...}
type GetProjectLimitInput interface {
	pulumi.Input

	ToGetProjectLimitOutput() GetProjectLimitOutput
	ToGetProjectLimitOutputWithContext(context.Context) GetProjectLimitOutput
}

type GetProjectLimitArgs struct {
	CurrentUsage pulumi.IntInput `pulumi:"currentUsage"`
	DefaultLimit pulumi.IntInput `pulumi:"defaultLimit"`
	MaximumLimit pulumi.IntInput `pulumi:"maximumLimit"`
	// The unique ID for the project.
	//
	// > **IMPORTANT:** Either `projectId` or `name` must be configurated.
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetProjectLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectLimit)(nil)).Elem()
}

func (i GetProjectLimitArgs) ToGetProjectLimitOutput() GetProjectLimitOutput {
	return i.ToGetProjectLimitOutputWithContext(context.Background())
}

func (i GetProjectLimitArgs) ToGetProjectLimitOutputWithContext(ctx context.Context) GetProjectLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectLimitOutput)
}

func (i GetProjectLimitArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectLimit] {
	return pulumix.Output[GetProjectLimit]{
		OutputState: i.ToGetProjectLimitOutputWithContext(ctx).OutputState,
	}
}

// GetProjectLimitArrayInput is an input type that accepts GetProjectLimitArray and GetProjectLimitArrayOutput values.
// You can construct a concrete instance of `GetProjectLimitArrayInput` via:
//
//	GetProjectLimitArray{ GetProjectLimitArgs{...} }
type GetProjectLimitArrayInput interface {
	pulumi.Input

	ToGetProjectLimitArrayOutput() GetProjectLimitArrayOutput
	ToGetProjectLimitArrayOutputWithContext(context.Context) GetProjectLimitArrayOutput
}

type GetProjectLimitArray []GetProjectLimitInput

func (GetProjectLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectLimit)(nil)).Elem()
}

func (i GetProjectLimitArray) ToGetProjectLimitArrayOutput() GetProjectLimitArrayOutput {
	return i.ToGetProjectLimitArrayOutputWithContext(context.Background())
}

func (i GetProjectLimitArray) ToGetProjectLimitArrayOutputWithContext(ctx context.Context) GetProjectLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectLimitArrayOutput)
}

func (i GetProjectLimitArray) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectLimit] {
	return pulumix.Output[[]GetProjectLimit]{
		OutputState: i.ToGetProjectLimitArrayOutputWithContext(ctx).OutputState,
	}
}

type GetProjectLimitOutput struct{ *pulumi.OutputState }

func (GetProjectLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectLimit)(nil)).Elem()
}

func (o GetProjectLimitOutput) ToGetProjectLimitOutput() GetProjectLimitOutput {
	return o
}

func (o GetProjectLimitOutput) ToGetProjectLimitOutputWithContext(ctx context.Context) GetProjectLimitOutput {
	return o
}

func (o GetProjectLimitOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectLimit] {
	return pulumix.Output[GetProjectLimit]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectLimitOutput) CurrentUsage() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectLimit) int { return v.CurrentUsage }).(pulumi.IntOutput)
}

func (o GetProjectLimitOutput) DefaultLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectLimit) int { return v.DefaultLimit }).(pulumi.IntOutput)
}

func (o GetProjectLimitOutput) MaximumLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectLimit) int { return v.MaximumLimit }).(pulumi.IntOutput)
}

// The unique ID for the project.
//
// > **IMPORTANT:** Either `projectId` or `name` must be configurated.
func (o GetProjectLimitOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectLimit) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProjectLimitOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectLimit) int { return v.Value }).(pulumi.IntOutput)
}

type GetProjectLimitArrayOutput struct{ *pulumi.OutputState }

func (GetProjectLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectLimit)(nil)).Elem()
}

func (o GetProjectLimitArrayOutput) ToGetProjectLimitArrayOutput() GetProjectLimitArrayOutput {
	return o
}

func (o GetProjectLimitArrayOutput) ToGetProjectLimitArrayOutputWithContext(ctx context.Context) GetProjectLimitArrayOutput {
	return o
}

func (o GetProjectLimitArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectLimit] {
	return pulumix.Output[[]GetProjectLimit]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectLimitArrayOutput) Index(i pulumi.IntInput) GetProjectLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectLimit {
		return vs[0].([]GetProjectLimit)[vs[1].(int)]
	}).(GetProjectLimitOutput)
}

type GetProjectTeam struct {
	RoleNames []string `pulumi:"roleNames"`
	TeamId    string   `pulumi:"teamId"`
}

// GetProjectTeamInput is an input type that accepts GetProjectTeamArgs and GetProjectTeamOutput values.
// You can construct a concrete instance of `GetProjectTeamInput` via:
//
//	GetProjectTeamArgs{...}
type GetProjectTeamInput interface {
	pulumi.Input

	ToGetProjectTeamOutput() GetProjectTeamOutput
	ToGetProjectTeamOutputWithContext(context.Context) GetProjectTeamOutput
}

type GetProjectTeamArgs struct {
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	TeamId    pulumi.StringInput      `pulumi:"teamId"`
}

func (GetProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTeam)(nil)).Elem()
}

func (i GetProjectTeamArgs) ToGetProjectTeamOutput() GetProjectTeamOutput {
	return i.ToGetProjectTeamOutputWithContext(context.Background())
}

func (i GetProjectTeamArgs) ToGetProjectTeamOutputWithContext(ctx context.Context) GetProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTeamOutput)
}

func (i GetProjectTeamArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectTeam] {
	return pulumix.Output[GetProjectTeam]{
		OutputState: i.ToGetProjectTeamOutputWithContext(ctx).OutputState,
	}
}

// GetProjectTeamArrayInput is an input type that accepts GetProjectTeamArray and GetProjectTeamArrayOutput values.
// You can construct a concrete instance of `GetProjectTeamArrayInput` via:
//
//	GetProjectTeamArray{ GetProjectTeamArgs{...} }
type GetProjectTeamArrayInput interface {
	pulumi.Input

	ToGetProjectTeamArrayOutput() GetProjectTeamArrayOutput
	ToGetProjectTeamArrayOutputWithContext(context.Context) GetProjectTeamArrayOutput
}

type GetProjectTeamArray []GetProjectTeamInput

func (GetProjectTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTeam)(nil)).Elem()
}

func (i GetProjectTeamArray) ToGetProjectTeamArrayOutput() GetProjectTeamArrayOutput {
	return i.ToGetProjectTeamArrayOutputWithContext(context.Background())
}

func (i GetProjectTeamArray) ToGetProjectTeamArrayOutputWithContext(ctx context.Context) GetProjectTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTeamArrayOutput)
}

func (i GetProjectTeamArray) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectTeam] {
	return pulumix.Output[[]GetProjectTeam]{
		OutputState: i.ToGetProjectTeamArrayOutputWithContext(ctx).OutputState,
	}
}

type GetProjectTeamOutput struct{ *pulumi.OutputState }

func (GetProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTeam)(nil)).Elem()
}

func (o GetProjectTeamOutput) ToGetProjectTeamOutput() GetProjectTeamOutput {
	return o
}

func (o GetProjectTeamOutput) ToGetProjectTeamOutputWithContext(ctx context.Context) GetProjectTeamOutput {
	return o
}

func (o GetProjectTeamOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectTeam] {
	return pulumix.Output[GetProjectTeam]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectTeamOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectTeam) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

func (o GetProjectTeamOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTeam) string { return v.TeamId }).(pulumi.StringOutput)
}

type GetProjectTeamArrayOutput struct{ *pulumi.OutputState }

func (GetProjectTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTeam)(nil)).Elem()
}

func (o GetProjectTeamArrayOutput) ToGetProjectTeamArrayOutput() GetProjectTeamArrayOutput {
	return o
}

func (o GetProjectTeamArrayOutput) ToGetProjectTeamArrayOutputWithContext(ctx context.Context) GetProjectTeamArrayOutput {
	return o
}

func (o GetProjectTeamArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectTeam] {
	return pulumix.Output[[]GetProjectTeam]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectTeamArrayOutput) Index(i pulumi.IntInput) GetProjectTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectTeam {
		return vs[0].([]GetProjectTeam)[vs[1].(int)]
	}).(GetProjectTeamOutput)
}

type GetProjectsResult struct {
	ApiKeys []GetProjectsResultApiKey `pulumi:"apiKeys"`
	// The number of Atlas clusters deployed in the project.
	ClusterCount int `pulumi:"clusterCount"`
	// The ISO-8601-formatted timestamp of when Atlas created the project.
	// * `teams.#.team_id` - The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	// * `teams.#.role_names` - Each string in the array represents a project role assigned to the team. Every user associated with the team inherits these roles. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
	// * `api_keys.#.api_key_id` - The unique identifier of the Organization Programmatic API key assigned to the Project.
	// * `api_keys.#.role_names` -  List of roles that the Organization Programmatic API key has been assigned. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
	// * `limits.#.name` - Human-readable label that identifies this project limit.
	// * `limits.#.value` - Amount the limit is set to.
	// * `limits.#.current_usage` - Amount that indicates the current usage of the limit.
	// * `limits.#.default_limit` - Default value of the limit.
	// * `limits.#.maximum_limit` - Maximum value of the limit.
	Created string `pulumi:"created"`
	// Autogenerated Unique ID for this data source.
	Id string `pulumi:"id"`
	// Flag that indicates whether to enable statistics in [cluster metrics](https://www.mongodb.com/docs/atlas/monitor-cluster-metrics/) collection for the project.
	IsCollectDatabaseSpecificsStatisticsEnabled bool `pulumi:"isCollectDatabaseSpecificsStatisticsEnabled"`
	// Flag that indicates whether to enable Data Explorer for the project. If enabled, you can query your database with an easy to use interface.
	IsDataExplorerEnabled bool `pulumi:"isDataExplorerEnabled"`
	// Flag that indicates whether to enable extended storage sizes for the specified project.
	IsExtendedStorageSizesEnabled *bool `pulumi:"isExtendedStorageSizesEnabled"`
	// Flag that indicates whether to enable Performance Advisor and Profiler for the project. If enabled, you can analyze database logs to recommend performance improvements.
	IsPerformanceAdvisorEnabled bool `pulumi:"isPerformanceAdvisorEnabled"`
	// Flag that indicates whether to enable Real Time Performance Panel for the project. If enabled, you can see real time metrics from your MongoDB database.
	IsRealtimePerformancePanelEnabled bool `pulumi:"isRealtimePerformancePanelEnabled"`
	// Flag that indicates whether to enable Schema Advisor for the project. If enabled, you receive customized recommendations to optimize your data model and enhance performance. Disable this setting to disable schema suggestions in the [Performance Advisor](https://www.mongodb.com/docs/atlas/performance-advisor/#std-label-performance-advisor) and the [Data Explorer](https://www.mongodb.com/docs/atlas/atlas-ui/#std-label-atlas-ui).
	IsSchemaAdvisorEnabled bool                     `pulumi:"isSchemaAdvisorEnabled"`
	Limits                 []GetProjectsResultLimit `pulumi:"limits"`
	// The name of the project you want to create.
	Name string `pulumi:"name"`
	// The ID of the organization you want to create the project within.
	OrgId string `pulumi:"orgId"`
	// If GOV_REGIONS_ONLY the project can be used for government regions only, otherwise defaults to standard regions. For more information see [MongoDB Atlas for Government](https://www.mongodb.com/docs/atlas/government/api/#creating-a-project).
	//
	// See [MongoDB Atlas API - Projects](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects) - [and MongoDB Atlas API - Teams](https://docs.atlas.mongodb.com/reference/api/project-get-teams/) Documentation for more information.
	RegionUsageRestrictions string                  `pulumi:"regionUsageRestrictions"`
	Teams                   []GetProjectsResultTeam `pulumi:"teams"`
}

// GetProjectsResultInput is an input type that accepts GetProjectsResultArgs and GetProjectsResultOutput values.
// You can construct a concrete instance of `GetProjectsResultInput` via:
//
//	GetProjectsResultArgs{...}
type GetProjectsResultInput interface {
	pulumi.Input

	ToGetProjectsResultOutput() GetProjectsResultOutput
	ToGetProjectsResultOutputWithContext(context.Context) GetProjectsResultOutput
}

type GetProjectsResultArgs struct {
	ApiKeys GetProjectsResultApiKeyArrayInput `pulumi:"apiKeys"`
	// The number of Atlas clusters deployed in the project.
	ClusterCount pulumi.IntInput `pulumi:"clusterCount"`
	// The ISO-8601-formatted timestamp of when Atlas created the project.
	// * `teams.#.team_id` - The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	// * `teams.#.role_names` - Each string in the array represents a project role assigned to the team. Every user associated with the team inherits these roles. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
	// * `api_keys.#.api_key_id` - The unique identifier of the Organization Programmatic API key assigned to the Project.
	// * `api_keys.#.role_names` -  List of roles that the Organization Programmatic API key has been assigned. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
	// * `limits.#.name` - Human-readable label that identifies this project limit.
	// * `limits.#.value` - Amount the limit is set to.
	// * `limits.#.current_usage` - Amount that indicates the current usage of the limit.
	// * `limits.#.default_limit` - Default value of the limit.
	// * `limits.#.maximum_limit` - Maximum value of the limit.
	Created pulumi.StringInput `pulumi:"created"`
	// Autogenerated Unique ID for this data source.
	Id pulumi.StringInput `pulumi:"id"`
	// Flag that indicates whether to enable statistics in [cluster metrics](https://www.mongodb.com/docs/atlas/monitor-cluster-metrics/) collection for the project.
	IsCollectDatabaseSpecificsStatisticsEnabled pulumi.BoolInput `pulumi:"isCollectDatabaseSpecificsStatisticsEnabled"`
	// Flag that indicates whether to enable Data Explorer for the project. If enabled, you can query your database with an easy to use interface.
	IsDataExplorerEnabled pulumi.BoolInput `pulumi:"isDataExplorerEnabled"`
	// Flag that indicates whether to enable extended storage sizes for the specified project.
	IsExtendedStorageSizesEnabled pulumi.BoolPtrInput `pulumi:"isExtendedStorageSizesEnabled"`
	// Flag that indicates whether to enable Performance Advisor and Profiler for the project. If enabled, you can analyze database logs to recommend performance improvements.
	IsPerformanceAdvisorEnabled pulumi.BoolInput `pulumi:"isPerformanceAdvisorEnabled"`
	// Flag that indicates whether to enable Real Time Performance Panel for the project. If enabled, you can see real time metrics from your MongoDB database.
	IsRealtimePerformancePanelEnabled pulumi.BoolInput `pulumi:"isRealtimePerformancePanelEnabled"`
	// Flag that indicates whether to enable Schema Advisor for the project. If enabled, you receive customized recommendations to optimize your data model and enhance performance. Disable this setting to disable schema suggestions in the [Performance Advisor](https://www.mongodb.com/docs/atlas/performance-advisor/#std-label-performance-advisor) and the [Data Explorer](https://www.mongodb.com/docs/atlas/atlas-ui/#std-label-atlas-ui).
	IsSchemaAdvisorEnabled pulumi.BoolInput                 `pulumi:"isSchemaAdvisorEnabled"`
	Limits                 GetProjectsResultLimitArrayInput `pulumi:"limits"`
	// The name of the project you want to create.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the organization you want to create the project within.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// If GOV_REGIONS_ONLY the project can be used for government regions only, otherwise defaults to standard regions. For more information see [MongoDB Atlas for Government](https://www.mongodb.com/docs/atlas/government/api/#creating-a-project).
	//
	// See [MongoDB Atlas API - Projects](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects) - [and MongoDB Atlas API - Teams](https://docs.atlas.mongodb.com/reference/api/project-get-teams/) Documentation for more information.
	RegionUsageRestrictions pulumi.StringInput              `pulumi:"regionUsageRestrictions"`
	Teams                   GetProjectsResultTeamArrayInput `pulumi:"teams"`
}

func (GetProjectsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResult)(nil)).Elem()
}

func (i GetProjectsResultArgs) ToGetProjectsResultOutput() GetProjectsResultOutput {
	return i.ToGetProjectsResultOutputWithContext(context.Background())
}

func (i GetProjectsResultArgs) ToGetProjectsResultOutputWithContext(ctx context.Context) GetProjectsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultOutput)
}

func (i GetProjectsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectsResult] {
	return pulumix.Output[GetProjectsResult]{
		OutputState: i.ToGetProjectsResultOutputWithContext(ctx).OutputState,
	}
}

// GetProjectsResultArrayInput is an input type that accepts GetProjectsResultArray and GetProjectsResultArrayOutput values.
// You can construct a concrete instance of `GetProjectsResultArrayInput` via:
//
//	GetProjectsResultArray{ GetProjectsResultArgs{...} }
type GetProjectsResultArrayInput interface {
	pulumi.Input

	ToGetProjectsResultArrayOutput() GetProjectsResultArrayOutput
	ToGetProjectsResultArrayOutputWithContext(context.Context) GetProjectsResultArrayOutput
}

type GetProjectsResultArray []GetProjectsResultInput

func (GetProjectsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResult)(nil)).Elem()
}

func (i GetProjectsResultArray) ToGetProjectsResultArrayOutput() GetProjectsResultArrayOutput {
	return i.ToGetProjectsResultArrayOutputWithContext(context.Background())
}

func (i GetProjectsResultArray) ToGetProjectsResultArrayOutputWithContext(ctx context.Context) GetProjectsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultArrayOutput)
}

func (i GetProjectsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectsResult] {
	return pulumix.Output[[]GetProjectsResult]{
		OutputState: i.ToGetProjectsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetProjectsResultOutput struct{ *pulumi.OutputState }

func (GetProjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResult)(nil)).Elem()
}

func (o GetProjectsResultOutput) ToGetProjectsResultOutput() GetProjectsResultOutput {
	return o
}

func (o GetProjectsResultOutput) ToGetProjectsResultOutputWithContext(ctx context.Context) GetProjectsResultOutput {
	return o
}

func (o GetProjectsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectsResult] {
	return pulumix.Output[GetProjectsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectsResultOutput) ApiKeys() GetProjectsResultApiKeyArrayOutput {
	return o.ApplyT(func(v GetProjectsResult) []GetProjectsResultApiKey { return v.ApiKeys }).(GetProjectsResultApiKeyArrayOutput)
}

// The number of Atlas clusters deployed in the project.
func (o GetProjectsResultOutput) ClusterCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsResult) int { return v.ClusterCount }).(pulumi.IntOutput)
}

// The ISO-8601-formatted timestamp of when Atlas created the project.
// * `teams.#.team_id` - The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
// * `teams.#.role_names` - Each string in the array represents a project role assigned to the team. Every user associated with the team inherits these roles. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
// * `api_keys.#.api_key_id` - The unique identifier of the Organization Programmatic API key assigned to the Project.
// * `api_keys.#.role_names` -  List of roles that the Organization Programmatic API key has been assigned. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#organization-roles) describes the roles a user can have.
// * `limits.#.name` - Human-readable label that identifies this project limit.
// * `limits.#.value` - Amount the limit is set to.
// * `limits.#.current_usage` - Amount that indicates the current usage of the limit.
// * `limits.#.default_limit` - Default value of the limit.
// * `limits.#.maximum_limit` - Maximum value of the limit.
func (o GetProjectsResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.Created }).(pulumi.StringOutput)
}

// Autogenerated Unique ID for this data source.
func (o GetProjectsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Flag that indicates whether to enable statistics in [cluster metrics](https://www.mongodb.com/docs/atlas/monitor-cluster-metrics/) collection for the project.
func (o GetProjectsResultOutput) IsCollectDatabaseSpecificsStatisticsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsResult) bool { return v.IsCollectDatabaseSpecificsStatisticsEnabled }).(pulumi.BoolOutput)
}

// Flag that indicates whether to enable Data Explorer for the project. If enabled, you can query your database with an easy to use interface.
func (o GetProjectsResultOutput) IsDataExplorerEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsResult) bool { return v.IsDataExplorerEnabled }).(pulumi.BoolOutput)
}

// Flag that indicates whether to enable extended storage sizes for the specified project.
func (o GetProjectsResultOutput) IsExtendedStorageSizesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsResult) *bool { return v.IsExtendedStorageSizesEnabled }).(pulumi.BoolPtrOutput)
}

// Flag that indicates whether to enable Performance Advisor and Profiler for the project. If enabled, you can analyze database logs to recommend performance improvements.
func (o GetProjectsResultOutput) IsPerformanceAdvisorEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsResult) bool { return v.IsPerformanceAdvisorEnabled }).(pulumi.BoolOutput)
}

// Flag that indicates whether to enable Real Time Performance Panel for the project. If enabled, you can see real time metrics from your MongoDB database.
func (o GetProjectsResultOutput) IsRealtimePerformancePanelEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsResult) bool { return v.IsRealtimePerformancePanelEnabled }).(pulumi.BoolOutput)
}

// Flag that indicates whether to enable Schema Advisor for the project. If enabled, you receive customized recommendations to optimize your data model and enhance performance. Disable this setting to disable schema suggestions in the [Performance Advisor](https://www.mongodb.com/docs/atlas/performance-advisor/#std-label-performance-advisor) and the [Data Explorer](https://www.mongodb.com/docs/atlas/atlas-ui/#std-label-atlas-ui).
func (o GetProjectsResultOutput) IsSchemaAdvisorEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsResult) bool { return v.IsSchemaAdvisorEnabled }).(pulumi.BoolOutput)
}

func (o GetProjectsResultOutput) Limits() GetProjectsResultLimitArrayOutput {
	return o.ApplyT(func(v GetProjectsResult) []GetProjectsResultLimit { return v.Limits }).(GetProjectsResultLimitArrayOutput)
}

// The name of the project you want to create.
func (o GetProjectsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the organization you want to create the project within.
func (o GetProjectsResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// If GOV_REGIONS_ONLY the project can be used for government regions only, otherwise defaults to standard regions. For more information see [MongoDB Atlas for Government](https://www.mongodb.com/docs/atlas/government/api/#creating-a-project).
//
// See [MongoDB Atlas API - Projects](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Projects) - [and MongoDB Atlas API - Teams](https://docs.atlas.mongodb.com/reference/api/project-get-teams/) Documentation for more information.
func (o GetProjectsResultOutput) RegionUsageRestrictions() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.RegionUsageRestrictions }).(pulumi.StringOutput)
}

func (o GetProjectsResultOutput) Teams() GetProjectsResultTeamArrayOutput {
	return o.ApplyT(func(v GetProjectsResult) []GetProjectsResultTeam { return v.Teams }).(GetProjectsResultTeamArrayOutput)
}

type GetProjectsResultArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResult)(nil)).Elem()
}

func (o GetProjectsResultArrayOutput) ToGetProjectsResultArrayOutput() GetProjectsResultArrayOutput {
	return o
}

func (o GetProjectsResultArrayOutput) ToGetProjectsResultArrayOutputWithContext(ctx context.Context) GetProjectsResultArrayOutput {
	return o
}

func (o GetProjectsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectsResult] {
	return pulumix.Output[[]GetProjectsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectsResultArrayOutput) Index(i pulumi.IntInput) GetProjectsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsResult {
		return vs[0].([]GetProjectsResult)[vs[1].(int)]
	}).(GetProjectsResultOutput)
}

type GetProjectsResultApiKey struct {
	ApiKeyId  string   `pulumi:"apiKeyId"`
	RoleNames []string `pulumi:"roleNames"`
}

// GetProjectsResultApiKeyInput is an input type that accepts GetProjectsResultApiKeyArgs and GetProjectsResultApiKeyOutput values.
// You can construct a concrete instance of `GetProjectsResultApiKeyInput` via:
//
//	GetProjectsResultApiKeyArgs{...}
type GetProjectsResultApiKeyInput interface {
	pulumi.Input

	ToGetProjectsResultApiKeyOutput() GetProjectsResultApiKeyOutput
	ToGetProjectsResultApiKeyOutputWithContext(context.Context) GetProjectsResultApiKeyOutput
}

type GetProjectsResultApiKeyArgs struct {
	ApiKeyId  pulumi.StringInput      `pulumi:"apiKeyId"`
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
}

func (GetProjectsResultApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultApiKey)(nil)).Elem()
}

func (i GetProjectsResultApiKeyArgs) ToGetProjectsResultApiKeyOutput() GetProjectsResultApiKeyOutput {
	return i.ToGetProjectsResultApiKeyOutputWithContext(context.Background())
}

func (i GetProjectsResultApiKeyArgs) ToGetProjectsResultApiKeyOutputWithContext(ctx context.Context) GetProjectsResultApiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultApiKeyOutput)
}

func (i GetProjectsResultApiKeyArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectsResultApiKey] {
	return pulumix.Output[GetProjectsResultApiKey]{
		OutputState: i.ToGetProjectsResultApiKeyOutputWithContext(ctx).OutputState,
	}
}

// GetProjectsResultApiKeyArrayInput is an input type that accepts GetProjectsResultApiKeyArray and GetProjectsResultApiKeyArrayOutput values.
// You can construct a concrete instance of `GetProjectsResultApiKeyArrayInput` via:
//
//	GetProjectsResultApiKeyArray{ GetProjectsResultApiKeyArgs{...} }
type GetProjectsResultApiKeyArrayInput interface {
	pulumi.Input

	ToGetProjectsResultApiKeyArrayOutput() GetProjectsResultApiKeyArrayOutput
	ToGetProjectsResultApiKeyArrayOutputWithContext(context.Context) GetProjectsResultApiKeyArrayOutput
}

type GetProjectsResultApiKeyArray []GetProjectsResultApiKeyInput

func (GetProjectsResultApiKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultApiKey)(nil)).Elem()
}

func (i GetProjectsResultApiKeyArray) ToGetProjectsResultApiKeyArrayOutput() GetProjectsResultApiKeyArrayOutput {
	return i.ToGetProjectsResultApiKeyArrayOutputWithContext(context.Background())
}

func (i GetProjectsResultApiKeyArray) ToGetProjectsResultApiKeyArrayOutputWithContext(ctx context.Context) GetProjectsResultApiKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultApiKeyArrayOutput)
}

func (i GetProjectsResultApiKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectsResultApiKey] {
	return pulumix.Output[[]GetProjectsResultApiKey]{
		OutputState: i.ToGetProjectsResultApiKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetProjectsResultApiKeyOutput struct{ *pulumi.OutputState }

func (GetProjectsResultApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultApiKey)(nil)).Elem()
}

func (o GetProjectsResultApiKeyOutput) ToGetProjectsResultApiKeyOutput() GetProjectsResultApiKeyOutput {
	return o
}

func (o GetProjectsResultApiKeyOutput) ToGetProjectsResultApiKeyOutputWithContext(ctx context.Context) GetProjectsResultApiKeyOutput {
	return o
}

func (o GetProjectsResultApiKeyOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectsResultApiKey] {
	return pulumix.Output[GetProjectsResultApiKey]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectsResultApiKeyOutput) ApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResultApiKey) string { return v.ApiKeyId }).(pulumi.StringOutput)
}

func (o GetProjectsResultApiKeyOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsResultApiKey) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

type GetProjectsResultApiKeyArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsResultApiKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultApiKey)(nil)).Elem()
}

func (o GetProjectsResultApiKeyArrayOutput) ToGetProjectsResultApiKeyArrayOutput() GetProjectsResultApiKeyArrayOutput {
	return o
}

func (o GetProjectsResultApiKeyArrayOutput) ToGetProjectsResultApiKeyArrayOutputWithContext(ctx context.Context) GetProjectsResultApiKeyArrayOutput {
	return o
}

func (o GetProjectsResultApiKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectsResultApiKey] {
	return pulumix.Output[[]GetProjectsResultApiKey]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectsResultApiKeyArrayOutput) Index(i pulumi.IntInput) GetProjectsResultApiKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsResultApiKey {
		return vs[0].([]GetProjectsResultApiKey)[vs[1].(int)]
	}).(GetProjectsResultApiKeyOutput)
}

type GetProjectsResultLimit struct {
	CurrentUsage int `pulumi:"currentUsage"`
	DefaultLimit int `pulumi:"defaultLimit"`
	MaximumLimit int `pulumi:"maximumLimit"`
	// The name of the project you want to create.
	Name  string `pulumi:"name"`
	Value int    `pulumi:"value"`
}

// GetProjectsResultLimitInput is an input type that accepts GetProjectsResultLimitArgs and GetProjectsResultLimitOutput values.
// You can construct a concrete instance of `GetProjectsResultLimitInput` via:
//
//	GetProjectsResultLimitArgs{...}
type GetProjectsResultLimitInput interface {
	pulumi.Input

	ToGetProjectsResultLimitOutput() GetProjectsResultLimitOutput
	ToGetProjectsResultLimitOutputWithContext(context.Context) GetProjectsResultLimitOutput
}

type GetProjectsResultLimitArgs struct {
	CurrentUsage pulumi.IntInput `pulumi:"currentUsage"`
	DefaultLimit pulumi.IntInput `pulumi:"defaultLimit"`
	MaximumLimit pulumi.IntInput `pulumi:"maximumLimit"`
	// The name of the project you want to create.
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetProjectsResultLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultLimit)(nil)).Elem()
}

func (i GetProjectsResultLimitArgs) ToGetProjectsResultLimitOutput() GetProjectsResultLimitOutput {
	return i.ToGetProjectsResultLimitOutputWithContext(context.Background())
}

func (i GetProjectsResultLimitArgs) ToGetProjectsResultLimitOutputWithContext(ctx context.Context) GetProjectsResultLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultLimitOutput)
}

func (i GetProjectsResultLimitArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectsResultLimit] {
	return pulumix.Output[GetProjectsResultLimit]{
		OutputState: i.ToGetProjectsResultLimitOutputWithContext(ctx).OutputState,
	}
}

// GetProjectsResultLimitArrayInput is an input type that accepts GetProjectsResultLimitArray and GetProjectsResultLimitArrayOutput values.
// You can construct a concrete instance of `GetProjectsResultLimitArrayInput` via:
//
//	GetProjectsResultLimitArray{ GetProjectsResultLimitArgs{...} }
type GetProjectsResultLimitArrayInput interface {
	pulumi.Input

	ToGetProjectsResultLimitArrayOutput() GetProjectsResultLimitArrayOutput
	ToGetProjectsResultLimitArrayOutputWithContext(context.Context) GetProjectsResultLimitArrayOutput
}

type GetProjectsResultLimitArray []GetProjectsResultLimitInput

func (GetProjectsResultLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultLimit)(nil)).Elem()
}

func (i GetProjectsResultLimitArray) ToGetProjectsResultLimitArrayOutput() GetProjectsResultLimitArrayOutput {
	return i.ToGetProjectsResultLimitArrayOutputWithContext(context.Background())
}

func (i GetProjectsResultLimitArray) ToGetProjectsResultLimitArrayOutputWithContext(ctx context.Context) GetProjectsResultLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultLimitArrayOutput)
}

func (i GetProjectsResultLimitArray) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectsResultLimit] {
	return pulumix.Output[[]GetProjectsResultLimit]{
		OutputState: i.ToGetProjectsResultLimitArrayOutputWithContext(ctx).OutputState,
	}
}

type GetProjectsResultLimitOutput struct{ *pulumi.OutputState }

func (GetProjectsResultLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultLimit)(nil)).Elem()
}

func (o GetProjectsResultLimitOutput) ToGetProjectsResultLimitOutput() GetProjectsResultLimitOutput {
	return o
}

func (o GetProjectsResultLimitOutput) ToGetProjectsResultLimitOutputWithContext(ctx context.Context) GetProjectsResultLimitOutput {
	return o
}

func (o GetProjectsResultLimitOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectsResultLimit] {
	return pulumix.Output[GetProjectsResultLimit]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectsResultLimitOutput) CurrentUsage() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsResultLimit) int { return v.CurrentUsage }).(pulumi.IntOutput)
}

func (o GetProjectsResultLimitOutput) DefaultLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsResultLimit) int { return v.DefaultLimit }).(pulumi.IntOutput)
}

func (o GetProjectsResultLimitOutput) MaximumLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsResultLimit) int { return v.MaximumLimit }).(pulumi.IntOutput)
}

// The name of the project you want to create.
func (o GetProjectsResultLimitOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResultLimit) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProjectsResultLimitOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsResultLimit) int { return v.Value }).(pulumi.IntOutput)
}

type GetProjectsResultLimitArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsResultLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultLimit)(nil)).Elem()
}

func (o GetProjectsResultLimitArrayOutput) ToGetProjectsResultLimitArrayOutput() GetProjectsResultLimitArrayOutput {
	return o
}

func (o GetProjectsResultLimitArrayOutput) ToGetProjectsResultLimitArrayOutputWithContext(ctx context.Context) GetProjectsResultLimitArrayOutput {
	return o
}

func (o GetProjectsResultLimitArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectsResultLimit] {
	return pulumix.Output[[]GetProjectsResultLimit]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectsResultLimitArrayOutput) Index(i pulumi.IntInput) GetProjectsResultLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsResultLimit {
		return vs[0].([]GetProjectsResultLimit)[vs[1].(int)]
	}).(GetProjectsResultLimitOutput)
}

type GetProjectsResultTeam struct {
	RoleNames []string `pulumi:"roleNames"`
	TeamId    string   `pulumi:"teamId"`
}

// GetProjectsResultTeamInput is an input type that accepts GetProjectsResultTeamArgs and GetProjectsResultTeamOutput values.
// You can construct a concrete instance of `GetProjectsResultTeamInput` via:
//
//	GetProjectsResultTeamArgs{...}
type GetProjectsResultTeamInput interface {
	pulumi.Input

	ToGetProjectsResultTeamOutput() GetProjectsResultTeamOutput
	ToGetProjectsResultTeamOutputWithContext(context.Context) GetProjectsResultTeamOutput
}

type GetProjectsResultTeamArgs struct {
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	TeamId    pulumi.StringInput      `pulumi:"teamId"`
}

func (GetProjectsResultTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultTeam)(nil)).Elem()
}

func (i GetProjectsResultTeamArgs) ToGetProjectsResultTeamOutput() GetProjectsResultTeamOutput {
	return i.ToGetProjectsResultTeamOutputWithContext(context.Background())
}

func (i GetProjectsResultTeamArgs) ToGetProjectsResultTeamOutputWithContext(ctx context.Context) GetProjectsResultTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultTeamOutput)
}

func (i GetProjectsResultTeamArgs) ToOutput(ctx context.Context) pulumix.Output[GetProjectsResultTeam] {
	return pulumix.Output[GetProjectsResultTeam]{
		OutputState: i.ToGetProjectsResultTeamOutputWithContext(ctx).OutputState,
	}
}

// GetProjectsResultTeamArrayInput is an input type that accepts GetProjectsResultTeamArray and GetProjectsResultTeamArrayOutput values.
// You can construct a concrete instance of `GetProjectsResultTeamArrayInput` via:
//
//	GetProjectsResultTeamArray{ GetProjectsResultTeamArgs{...} }
type GetProjectsResultTeamArrayInput interface {
	pulumi.Input

	ToGetProjectsResultTeamArrayOutput() GetProjectsResultTeamArrayOutput
	ToGetProjectsResultTeamArrayOutputWithContext(context.Context) GetProjectsResultTeamArrayOutput
}

type GetProjectsResultTeamArray []GetProjectsResultTeamInput

func (GetProjectsResultTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultTeam)(nil)).Elem()
}

func (i GetProjectsResultTeamArray) ToGetProjectsResultTeamArrayOutput() GetProjectsResultTeamArrayOutput {
	return i.ToGetProjectsResultTeamArrayOutputWithContext(context.Background())
}

func (i GetProjectsResultTeamArray) ToGetProjectsResultTeamArrayOutputWithContext(ctx context.Context) GetProjectsResultTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultTeamArrayOutput)
}

func (i GetProjectsResultTeamArray) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectsResultTeam] {
	return pulumix.Output[[]GetProjectsResultTeam]{
		OutputState: i.ToGetProjectsResultTeamArrayOutputWithContext(ctx).OutputState,
	}
}

type GetProjectsResultTeamOutput struct{ *pulumi.OutputState }

func (GetProjectsResultTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultTeam)(nil)).Elem()
}

func (o GetProjectsResultTeamOutput) ToGetProjectsResultTeamOutput() GetProjectsResultTeamOutput {
	return o
}

func (o GetProjectsResultTeamOutput) ToGetProjectsResultTeamOutputWithContext(ctx context.Context) GetProjectsResultTeamOutput {
	return o
}

func (o GetProjectsResultTeamOutput) ToOutput(ctx context.Context) pulumix.Output[GetProjectsResultTeam] {
	return pulumix.Output[GetProjectsResultTeam]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectsResultTeamOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsResultTeam) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

func (o GetProjectsResultTeamOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResultTeam) string { return v.TeamId }).(pulumi.StringOutput)
}

type GetProjectsResultTeamArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsResultTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultTeam)(nil)).Elem()
}

func (o GetProjectsResultTeamArrayOutput) ToGetProjectsResultTeamArrayOutput() GetProjectsResultTeamArrayOutput {
	return o
}

func (o GetProjectsResultTeamArrayOutput) ToGetProjectsResultTeamArrayOutputWithContext(ctx context.Context) GetProjectsResultTeamArrayOutput {
	return o
}

func (o GetProjectsResultTeamArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetProjectsResultTeam] {
	return pulumix.Output[[]GetProjectsResultTeam]{
		OutputState: o.OutputState,
	}
}

func (o GetProjectsResultTeamArrayOutput) Index(i pulumi.IntInput) GetProjectsResultTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsResultTeam {
		return vs[0].([]GetProjectsResultTeam)[vs[1].(int)]
	}).(GetProjectsResultTeamOutput)
}

type GetSearchIndexSynonym struct {
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
	Analyzer string `pulumi:"analyzer"`
	// Name of the index.
	Name             string `pulumi:"name"`
	SourceCollection string `pulumi:"sourceCollection"`
}

// GetSearchIndexSynonymInput is an input type that accepts GetSearchIndexSynonymArgs and GetSearchIndexSynonymOutput values.
// You can construct a concrete instance of `GetSearchIndexSynonymInput` via:
//
//	GetSearchIndexSynonymArgs{...}
type GetSearchIndexSynonymInput interface {
	pulumi.Input

	ToGetSearchIndexSynonymOutput() GetSearchIndexSynonymOutput
	ToGetSearchIndexSynonymOutputWithContext(context.Context) GetSearchIndexSynonymOutput
}

type GetSearchIndexSynonymArgs struct {
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
	Analyzer pulumi.StringInput `pulumi:"analyzer"`
	// Name of the index.
	Name             pulumi.StringInput `pulumi:"name"`
	SourceCollection pulumi.StringInput `pulumi:"sourceCollection"`
}

func (GetSearchIndexSynonymArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchIndexSynonym)(nil)).Elem()
}

func (i GetSearchIndexSynonymArgs) ToGetSearchIndexSynonymOutput() GetSearchIndexSynonymOutput {
	return i.ToGetSearchIndexSynonymOutputWithContext(context.Background())
}

func (i GetSearchIndexSynonymArgs) ToGetSearchIndexSynonymOutputWithContext(ctx context.Context) GetSearchIndexSynonymOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSearchIndexSynonymOutput)
}

func (i GetSearchIndexSynonymArgs) ToOutput(ctx context.Context) pulumix.Output[GetSearchIndexSynonym] {
	return pulumix.Output[GetSearchIndexSynonym]{
		OutputState: i.ToGetSearchIndexSynonymOutputWithContext(ctx).OutputState,
	}
}

// GetSearchIndexSynonymArrayInput is an input type that accepts GetSearchIndexSynonymArray and GetSearchIndexSynonymArrayOutput values.
// You can construct a concrete instance of `GetSearchIndexSynonymArrayInput` via:
//
//	GetSearchIndexSynonymArray{ GetSearchIndexSynonymArgs{...} }
type GetSearchIndexSynonymArrayInput interface {
	pulumi.Input

	ToGetSearchIndexSynonymArrayOutput() GetSearchIndexSynonymArrayOutput
	ToGetSearchIndexSynonymArrayOutputWithContext(context.Context) GetSearchIndexSynonymArrayOutput
}

type GetSearchIndexSynonymArray []GetSearchIndexSynonymInput

func (GetSearchIndexSynonymArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSearchIndexSynonym)(nil)).Elem()
}

func (i GetSearchIndexSynonymArray) ToGetSearchIndexSynonymArrayOutput() GetSearchIndexSynonymArrayOutput {
	return i.ToGetSearchIndexSynonymArrayOutputWithContext(context.Background())
}

func (i GetSearchIndexSynonymArray) ToGetSearchIndexSynonymArrayOutputWithContext(ctx context.Context) GetSearchIndexSynonymArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSearchIndexSynonymArrayOutput)
}

func (i GetSearchIndexSynonymArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSearchIndexSynonym] {
	return pulumix.Output[[]GetSearchIndexSynonym]{
		OutputState: i.ToGetSearchIndexSynonymArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSearchIndexSynonymOutput struct{ *pulumi.OutputState }

func (GetSearchIndexSynonymOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchIndexSynonym)(nil)).Elem()
}

func (o GetSearchIndexSynonymOutput) ToGetSearchIndexSynonymOutput() GetSearchIndexSynonymOutput {
	return o
}

func (o GetSearchIndexSynonymOutput) ToGetSearchIndexSynonymOutputWithContext(ctx context.Context) GetSearchIndexSynonymOutput {
	return o
}

func (o GetSearchIndexSynonymOutput) ToOutput(ctx context.Context) pulumix.Output[GetSearchIndexSynonym] {
	return pulumix.Output[GetSearchIndexSynonym]{
		OutputState: o.OutputState,
	}
}

// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
func (o GetSearchIndexSynonymOutput) Analyzer() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexSynonym) string { return v.Analyzer }).(pulumi.StringOutput)
}

// Name of the index.
func (o GetSearchIndexSynonymOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexSynonym) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSearchIndexSynonymOutput) SourceCollection() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexSynonym) string { return v.SourceCollection }).(pulumi.StringOutput)
}

type GetSearchIndexSynonymArrayOutput struct{ *pulumi.OutputState }

func (GetSearchIndexSynonymArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSearchIndexSynonym)(nil)).Elem()
}

func (o GetSearchIndexSynonymArrayOutput) ToGetSearchIndexSynonymArrayOutput() GetSearchIndexSynonymArrayOutput {
	return o
}

func (o GetSearchIndexSynonymArrayOutput) ToGetSearchIndexSynonymArrayOutputWithContext(ctx context.Context) GetSearchIndexSynonymArrayOutput {
	return o
}

func (o GetSearchIndexSynonymArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSearchIndexSynonym] {
	return pulumix.Output[[]GetSearchIndexSynonym]{
		OutputState: o.OutputState,
	}
}

func (o GetSearchIndexSynonymArrayOutput) Index(i pulumi.IntInput) GetSearchIndexSynonymOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSearchIndexSynonym {
		return vs[0].([]GetSearchIndexSynonym)[vs[1].(int)]
	}).(GetSearchIndexSynonymOutput)
}

type GetSearchIndexesResult struct {
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
	Analyzer *string `pulumi:"analyzer"`
	// [Custom analyzers](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) to use in this index (this is an array of objects).
	Analyzers *string `pulumi:"analyzers"`
	// Name of the cluster containing the collection with one or more Atlas Search indexes.
	ClusterName string `pulumi:"clusterName"`
	// Name of the collection with one or more Atlas Search indexes.
	CollectionName string `pulumi:"collectionName"`
	// (Required) Name of the database the collection is in.
	Database string `pulumi:"database"`
	IndexId  string `pulumi:"indexId"`
	// Flag indicating whether the index uses dynamic or static mappings.
	MappingsDynamic *bool `pulumi:"mappingsDynamic"`
	// Object containing one or more field specifications.
	MappingsFields *string `pulumi:"mappingsFields"`
	// Name of the index.
	Name string `pulumi:"name"`
	// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
	ProjectId string `pulumi:"projectId"`
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when searching the index.
	SearchAnalyzer *string `pulumi:"searchAnalyzer"`
	Status         string  `pulumi:"status"`
	// Synonyms mapping definition to use in this index.
	// * `synonyms.#.name` - Name of the [synonym mapping definition](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-ref).
	// * `synonyms.#.source_collection` - Name of the source MongoDB collection for the synonyms.
	// * `synonyms.#.analyzer` - Name of the [analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use with this synonym mapping.
	Synonyms                    []GetSearchIndexesResultSynonym `pulumi:"synonyms"`
	WaitForIndexBuildCompletion *bool                           `pulumi:"waitForIndexBuildCompletion"`
}

// GetSearchIndexesResultInput is an input type that accepts GetSearchIndexesResultArgs and GetSearchIndexesResultOutput values.
// You can construct a concrete instance of `GetSearchIndexesResultInput` via:
//
//	GetSearchIndexesResultArgs{...}
type GetSearchIndexesResultInput interface {
	pulumi.Input

	ToGetSearchIndexesResultOutput() GetSearchIndexesResultOutput
	ToGetSearchIndexesResultOutputWithContext(context.Context) GetSearchIndexesResultOutput
}

type GetSearchIndexesResultArgs struct {
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
	Analyzer pulumi.StringPtrInput `pulumi:"analyzer"`
	// [Custom analyzers](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) to use in this index (this is an array of objects).
	Analyzers pulumi.StringPtrInput `pulumi:"analyzers"`
	// Name of the cluster containing the collection with one or more Atlas Search indexes.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Name of the collection with one or more Atlas Search indexes.
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// (Required) Name of the database the collection is in.
	Database pulumi.StringInput `pulumi:"database"`
	IndexId  pulumi.StringInput `pulumi:"indexId"`
	// Flag indicating whether the index uses dynamic or static mappings.
	MappingsDynamic pulumi.BoolPtrInput `pulumi:"mappingsDynamic"`
	// Object containing one or more field specifications.
	MappingsFields pulumi.StringPtrInput `pulumi:"mappingsFields"`
	// Name of the index.
	Name pulumi.StringInput `pulumi:"name"`
	// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when searching the index.
	SearchAnalyzer pulumi.StringPtrInput `pulumi:"searchAnalyzer"`
	Status         pulumi.StringInput    `pulumi:"status"`
	// Synonyms mapping definition to use in this index.
	// * `synonyms.#.name` - Name of the [synonym mapping definition](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-ref).
	// * `synonyms.#.source_collection` - Name of the source MongoDB collection for the synonyms.
	// * `synonyms.#.analyzer` - Name of the [analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use with this synonym mapping.
	Synonyms                    GetSearchIndexesResultSynonymArrayInput `pulumi:"synonyms"`
	WaitForIndexBuildCompletion pulumi.BoolPtrInput                     `pulumi:"waitForIndexBuildCompletion"`
}

func (GetSearchIndexesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchIndexesResult)(nil)).Elem()
}

func (i GetSearchIndexesResultArgs) ToGetSearchIndexesResultOutput() GetSearchIndexesResultOutput {
	return i.ToGetSearchIndexesResultOutputWithContext(context.Background())
}

func (i GetSearchIndexesResultArgs) ToGetSearchIndexesResultOutputWithContext(ctx context.Context) GetSearchIndexesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSearchIndexesResultOutput)
}

func (i GetSearchIndexesResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetSearchIndexesResult] {
	return pulumix.Output[GetSearchIndexesResult]{
		OutputState: i.ToGetSearchIndexesResultOutputWithContext(ctx).OutputState,
	}
}

// GetSearchIndexesResultArrayInput is an input type that accepts GetSearchIndexesResultArray and GetSearchIndexesResultArrayOutput values.
// You can construct a concrete instance of `GetSearchIndexesResultArrayInput` via:
//
//	GetSearchIndexesResultArray{ GetSearchIndexesResultArgs{...} }
type GetSearchIndexesResultArrayInput interface {
	pulumi.Input

	ToGetSearchIndexesResultArrayOutput() GetSearchIndexesResultArrayOutput
	ToGetSearchIndexesResultArrayOutputWithContext(context.Context) GetSearchIndexesResultArrayOutput
}

type GetSearchIndexesResultArray []GetSearchIndexesResultInput

func (GetSearchIndexesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSearchIndexesResult)(nil)).Elem()
}

func (i GetSearchIndexesResultArray) ToGetSearchIndexesResultArrayOutput() GetSearchIndexesResultArrayOutput {
	return i.ToGetSearchIndexesResultArrayOutputWithContext(context.Background())
}

func (i GetSearchIndexesResultArray) ToGetSearchIndexesResultArrayOutputWithContext(ctx context.Context) GetSearchIndexesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSearchIndexesResultArrayOutput)
}

func (i GetSearchIndexesResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSearchIndexesResult] {
	return pulumix.Output[[]GetSearchIndexesResult]{
		OutputState: i.ToGetSearchIndexesResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSearchIndexesResultOutput struct{ *pulumi.OutputState }

func (GetSearchIndexesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchIndexesResult)(nil)).Elem()
}

func (o GetSearchIndexesResultOutput) ToGetSearchIndexesResultOutput() GetSearchIndexesResultOutput {
	return o
}

func (o GetSearchIndexesResultOutput) ToGetSearchIndexesResultOutputWithContext(ctx context.Context) GetSearchIndexesResultOutput {
	return o
}

func (o GetSearchIndexesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSearchIndexesResult] {
	return pulumix.Output[GetSearchIndexesResult]{
		OutputState: o.OutputState,
	}
}

// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
func (o GetSearchIndexesResultOutput) Analyzer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *string { return v.Analyzer }).(pulumi.StringPtrOutput)
}

// [Custom analyzers](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) to use in this index (this is an array of objects).
func (o GetSearchIndexesResultOutput) Analyzers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *string { return v.Analyzers }).(pulumi.StringPtrOutput)
}

// Name of the cluster containing the collection with one or more Atlas Search indexes.
func (o GetSearchIndexesResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

// Name of the collection with one or more Atlas Search indexes.
func (o GetSearchIndexesResultOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.CollectionName }).(pulumi.StringOutput)
}

// (Required) Name of the database the collection is in.
func (o GetSearchIndexesResultOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.Database }).(pulumi.StringOutput)
}

func (o GetSearchIndexesResultOutput) IndexId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.IndexId }).(pulumi.StringOutput)
}

// Flag indicating whether the index uses dynamic or static mappings.
func (o GetSearchIndexesResultOutput) MappingsDynamic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *bool { return v.MappingsDynamic }).(pulumi.BoolPtrOutput)
}

// Object containing one or more field specifications.
func (o GetSearchIndexesResultOutput) MappingsFields() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *string { return v.MappingsFields }).(pulumi.StringPtrOutput)
}

// Name of the index.
func (o GetSearchIndexesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.Name }).(pulumi.StringOutput)
}

// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
func (o GetSearchIndexesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when searching the index.
func (o GetSearchIndexesResultOutput) SearchAnalyzer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *string { return v.SearchAnalyzer }).(pulumi.StringPtrOutput)
}

func (o GetSearchIndexesResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.Status }).(pulumi.StringOutput)
}

// Synonyms mapping definition to use in this index.
// * `synonyms.#.name` - Name of the [synonym mapping definition](https://docs.atlas.mongodb.com/reference/atlas-search/synonyms/#std-label-synonyms-ref).
// * `synonyms.#.source_collection` - Name of the source MongoDB collection for the synonyms.
// * `synonyms.#.analyzer` - Name of the [analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use with this synonym mapping.
func (o GetSearchIndexesResultOutput) Synonyms() GetSearchIndexesResultSynonymArrayOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) []GetSearchIndexesResultSynonym { return v.Synonyms }).(GetSearchIndexesResultSynonymArrayOutput)
}

func (o GetSearchIndexesResultOutput) WaitForIndexBuildCompletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *bool { return v.WaitForIndexBuildCompletion }).(pulumi.BoolPtrOutput)
}

type GetSearchIndexesResultArrayOutput struct{ *pulumi.OutputState }

func (GetSearchIndexesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSearchIndexesResult)(nil)).Elem()
}

func (o GetSearchIndexesResultArrayOutput) ToGetSearchIndexesResultArrayOutput() GetSearchIndexesResultArrayOutput {
	return o
}

func (o GetSearchIndexesResultArrayOutput) ToGetSearchIndexesResultArrayOutputWithContext(ctx context.Context) GetSearchIndexesResultArrayOutput {
	return o
}

func (o GetSearchIndexesResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSearchIndexesResult] {
	return pulumix.Output[[]GetSearchIndexesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSearchIndexesResultArrayOutput) Index(i pulumi.IntInput) GetSearchIndexesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSearchIndexesResult {
		return vs[0].([]GetSearchIndexesResult)[vs[1].(int)]
	}).(GetSearchIndexesResultOutput)
}

type GetSearchIndexesResultSynonym struct {
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
	Analyzer string `pulumi:"analyzer"`
	// Name of the index.
	Name             string `pulumi:"name"`
	SourceCollection string `pulumi:"sourceCollection"`
}

// GetSearchIndexesResultSynonymInput is an input type that accepts GetSearchIndexesResultSynonymArgs and GetSearchIndexesResultSynonymOutput values.
// You can construct a concrete instance of `GetSearchIndexesResultSynonymInput` via:
//
//	GetSearchIndexesResultSynonymArgs{...}
type GetSearchIndexesResultSynonymInput interface {
	pulumi.Input

	ToGetSearchIndexesResultSynonymOutput() GetSearchIndexesResultSynonymOutput
	ToGetSearchIndexesResultSynonymOutputWithContext(context.Context) GetSearchIndexesResultSynonymOutput
}

type GetSearchIndexesResultSynonymArgs struct {
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
	Analyzer pulumi.StringInput `pulumi:"analyzer"`
	// Name of the index.
	Name             pulumi.StringInput `pulumi:"name"`
	SourceCollection pulumi.StringInput `pulumi:"sourceCollection"`
}

func (GetSearchIndexesResultSynonymArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchIndexesResultSynonym)(nil)).Elem()
}

func (i GetSearchIndexesResultSynonymArgs) ToGetSearchIndexesResultSynonymOutput() GetSearchIndexesResultSynonymOutput {
	return i.ToGetSearchIndexesResultSynonymOutputWithContext(context.Background())
}

func (i GetSearchIndexesResultSynonymArgs) ToGetSearchIndexesResultSynonymOutputWithContext(ctx context.Context) GetSearchIndexesResultSynonymOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSearchIndexesResultSynonymOutput)
}

func (i GetSearchIndexesResultSynonymArgs) ToOutput(ctx context.Context) pulumix.Output[GetSearchIndexesResultSynonym] {
	return pulumix.Output[GetSearchIndexesResultSynonym]{
		OutputState: i.ToGetSearchIndexesResultSynonymOutputWithContext(ctx).OutputState,
	}
}

// GetSearchIndexesResultSynonymArrayInput is an input type that accepts GetSearchIndexesResultSynonymArray and GetSearchIndexesResultSynonymArrayOutput values.
// You can construct a concrete instance of `GetSearchIndexesResultSynonymArrayInput` via:
//
//	GetSearchIndexesResultSynonymArray{ GetSearchIndexesResultSynonymArgs{...} }
type GetSearchIndexesResultSynonymArrayInput interface {
	pulumi.Input

	ToGetSearchIndexesResultSynonymArrayOutput() GetSearchIndexesResultSynonymArrayOutput
	ToGetSearchIndexesResultSynonymArrayOutputWithContext(context.Context) GetSearchIndexesResultSynonymArrayOutput
}

type GetSearchIndexesResultSynonymArray []GetSearchIndexesResultSynonymInput

func (GetSearchIndexesResultSynonymArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSearchIndexesResultSynonym)(nil)).Elem()
}

func (i GetSearchIndexesResultSynonymArray) ToGetSearchIndexesResultSynonymArrayOutput() GetSearchIndexesResultSynonymArrayOutput {
	return i.ToGetSearchIndexesResultSynonymArrayOutputWithContext(context.Background())
}

func (i GetSearchIndexesResultSynonymArray) ToGetSearchIndexesResultSynonymArrayOutputWithContext(ctx context.Context) GetSearchIndexesResultSynonymArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSearchIndexesResultSynonymArrayOutput)
}

func (i GetSearchIndexesResultSynonymArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSearchIndexesResultSynonym] {
	return pulumix.Output[[]GetSearchIndexesResultSynonym]{
		OutputState: i.ToGetSearchIndexesResultSynonymArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSearchIndexesResultSynonymOutput struct{ *pulumi.OutputState }

func (GetSearchIndexesResultSynonymOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchIndexesResultSynonym)(nil)).Elem()
}

func (o GetSearchIndexesResultSynonymOutput) ToGetSearchIndexesResultSynonymOutput() GetSearchIndexesResultSynonymOutput {
	return o
}

func (o GetSearchIndexesResultSynonymOutput) ToGetSearchIndexesResultSynonymOutputWithContext(ctx context.Context) GetSearchIndexesResultSynonymOutput {
	return o
}

func (o GetSearchIndexesResultSynonymOutput) ToOutput(ctx context.Context) pulumix.Output[GetSearchIndexesResultSynonym] {
	return pulumix.Output[GetSearchIndexesResultSynonym]{
		OutputState: o.OutputState,
	}
}

// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
func (o GetSearchIndexesResultSynonymOutput) Analyzer() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResultSynonym) string { return v.Analyzer }).(pulumi.StringOutput)
}

// Name of the index.
func (o GetSearchIndexesResultSynonymOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResultSynonym) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSearchIndexesResultSynonymOutput) SourceCollection() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResultSynonym) string { return v.SourceCollection }).(pulumi.StringOutput)
}

type GetSearchIndexesResultSynonymArrayOutput struct{ *pulumi.OutputState }

func (GetSearchIndexesResultSynonymArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSearchIndexesResultSynonym)(nil)).Elem()
}

func (o GetSearchIndexesResultSynonymArrayOutput) ToGetSearchIndexesResultSynonymArrayOutput() GetSearchIndexesResultSynonymArrayOutput {
	return o
}

func (o GetSearchIndexesResultSynonymArrayOutput) ToGetSearchIndexesResultSynonymArrayOutputWithContext(ctx context.Context) GetSearchIndexesResultSynonymArrayOutput {
	return o
}

func (o GetSearchIndexesResultSynonymArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSearchIndexesResultSynonym] {
	return pulumix.Output[[]GetSearchIndexesResultSynonym]{
		OutputState: o.OutputState,
	}
}

func (o GetSearchIndexesResultSynonymArrayOutput) Index(i pulumi.IntInput) GetSearchIndexesResultSynonymOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSearchIndexesResultSynonym {
		return vs[0].([]GetSearchIndexesResultSynonym)[vs[1].(int)]
	}).(GetSearchIndexesResultSynonymOutput)
}

type GetServerlessInstanceLink struct {
	Href string `pulumi:"href"`
	Rel  string `pulumi:"rel"`
}

// GetServerlessInstanceLinkInput is an input type that accepts GetServerlessInstanceLinkArgs and GetServerlessInstanceLinkOutput values.
// You can construct a concrete instance of `GetServerlessInstanceLinkInput` via:
//
//	GetServerlessInstanceLinkArgs{...}
type GetServerlessInstanceLinkInput interface {
	pulumi.Input

	ToGetServerlessInstanceLinkOutput() GetServerlessInstanceLinkOutput
	ToGetServerlessInstanceLinkOutputWithContext(context.Context) GetServerlessInstanceLinkOutput
}

type GetServerlessInstanceLinkArgs struct {
	Href pulumi.StringInput `pulumi:"href"`
	Rel  pulumi.StringInput `pulumi:"rel"`
}

func (GetServerlessInstanceLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerlessInstanceLink)(nil)).Elem()
}

func (i GetServerlessInstanceLinkArgs) ToGetServerlessInstanceLinkOutput() GetServerlessInstanceLinkOutput {
	return i.ToGetServerlessInstanceLinkOutputWithContext(context.Background())
}

func (i GetServerlessInstanceLinkArgs) ToGetServerlessInstanceLinkOutputWithContext(ctx context.Context) GetServerlessInstanceLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerlessInstanceLinkOutput)
}

func (i GetServerlessInstanceLinkArgs) ToOutput(ctx context.Context) pulumix.Output[GetServerlessInstanceLink] {
	return pulumix.Output[GetServerlessInstanceLink]{
		OutputState: i.ToGetServerlessInstanceLinkOutputWithContext(ctx).OutputState,
	}
}

// GetServerlessInstanceLinkArrayInput is an input type that accepts GetServerlessInstanceLinkArray and GetServerlessInstanceLinkArrayOutput values.
// You can construct a concrete instance of `GetServerlessInstanceLinkArrayInput` via:
//
//	GetServerlessInstanceLinkArray{ GetServerlessInstanceLinkArgs{...} }
type GetServerlessInstanceLinkArrayInput interface {
	pulumi.Input

	ToGetServerlessInstanceLinkArrayOutput() GetServerlessInstanceLinkArrayOutput
	ToGetServerlessInstanceLinkArrayOutputWithContext(context.Context) GetServerlessInstanceLinkArrayOutput
}

type GetServerlessInstanceLinkArray []GetServerlessInstanceLinkInput

func (GetServerlessInstanceLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerlessInstanceLink)(nil)).Elem()
}

func (i GetServerlessInstanceLinkArray) ToGetServerlessInstanceLinkArrayOutput() GetServerlessInstanceLinkArrayOutput {
	return i.ToGetServerlessInstanceLinkArrayOutputWithContext(context.Background())
}

func (i GetServerlessInstanceLinkArray) ToGetServerlessInstanceLinkArrayOutputWithContext(ctx context.Context) GetServerlessInstanceLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerlessInstanceLinkArrayOutput)
}

func (i GetServerlessInstanceLinkArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServerlessInstanceLink] {
	return pulumix.Output[[]GetServerlessInstanceLink]{
		OutputState: i.ToGetServerlessInstanceLinkArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServerlessInstanceLinkOutput struct{ *pulumi.OutputState }

func (GetServerlessInstanceLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerlessInstanceLink)(nil)).Elem()
}

func (o GetServerlessInstanceLinkOutput) ToGetServerlessInstanceLinkOutput() GetServerlessInstanceLinkOutput {
	return o
}

func (o GetServerlessInstanceLinkOutput) ToGetServerlessInstanceLinkOutputWithContext(ctx context.Context) GetServerlessInstanceLinkOutput {
	return o
}

func (o GetServerlessInstanceLinkOutput) ToOutput(ctx context.Context) pulumix.Output[GetServerlessInstanceLink] {
	return pulumix.Output[GetServerlessInstanceLink]{
		OutputState: o.OutputState,
	}
}

func (o GetServerlessInstanceLinkOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstanceLink) string { return v.Href }).(pulumi.StringOutput)
}

func (o GetServerlessInstanceLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstanceLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetServerlessInstanceLinkArrayOutput struct{ *pulumi.OutputState }

func (GetServerlessInstanceLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerlessInstanceLink)(nil)).Elem()
}

func (o GetServerlessInstanceLinkArrayOutput) ToGetServerlessInstanceLinkArrayOutput() GetServerlessInstanceLinkArrayOutput {
	return o
}

func (o GetServerlessInstanceLinkArrayOutput) ToGetServerlessInstanceLinkArrayOutputWithContext(ctx context.Context) GetServerlessInstanceLinkArrayOutput {
	return o
}

func (o GetServerlessInstanceLinkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServerlessInstanceLink] {
	return pulumix.Output[[]GetServerlessInstanceLink]{
		OutputState: o.OutputState,
	}
}

func (o GetServerlessInstanceLinkArrayOutput) Index(i pulumi.IntInput) GetServerlessInstanceLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerlessInstanceLink {
		return vs[0].([]GetServerlessInstanceLink)[vs[1].(int)]
	}).(GetServerlessInstanceLinkOutput)
}

type GetServerlessInstancesResult struct {
	ConnectionStringsPrivateEndpointSrvs []string `pulumi:"connectionStringsPrivateEndpointSrvs"`
	// Public `mongodb+srv://` connection string that you can use to connect to this serverless instance.
	ConnectionStringsStandardSrv string `pulumi:"connectionStringsStandardSrv"`
	// Flag that indicates whether the serverless instance uses Serverless Continuous Backup.
	ContinuousBackupEnabled bool   `pulumi:"continuousBackupEnabled"`
	CreateDate              string `pulumi:"createDate"`
	// Unique 24-hexadecimal digit string that identifies the serverless instance.
	Id    string                             `pulumi:"id"`
	Links []GetServerlessInstancesResultLink `pulumi:"links"`
	// Version of MongoDB that the serverless instance runs, in `<major version>`.`<minor version>` format.
	MongoDbVersion string `pulumi:"mongoDbVersion"`
	// (Required) Human-readable label that identifies your serverless instance.
	Name string `pulumi:"name"`
	// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
	ProjectId string `pulumi:"projectId"`
	// Cloud service provider on which MongoDB Cloud provisioned the serverless instance.
	ProviderSettingsBackingProviderName string `pulumi:"providerSettingsBackingProviderName"`
	// Cloud service provider that applies to the provisioned the serverless instance.
	ProviderSettingsProviderName string `pulumi:"providerSettingsProviderName"`
	// Human-readable label that identifies the physical location of your MongoDB serverless instance. The region you choose can affect network latency for clients accessing your databases.
	ProviderSettingsRegionName string `pulumi:"providerSettingsRegionName"`
	// Stage of deployment of this serverless instance when the resource made its request.
	StateName string `pulumi:"stateName"`
	// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled bool `pulumi:"terminationProtectionEnabled"`
}

// GetServerlessInstancesResultInput is an input type that accepts GetServerlessInstancesResultArgs and GetServerlessInstancesResultOutput values.
// You can construct a concrete instance of `GetServerlessInstancesResultInput` via:
//
//	GetServerlessInstancesResultArgs{...}
type GetServerlessInstancesResultInput interface {
	pulumi.Input

	ToGetServerlessInstancesResultOutput() GetServerlessInstancesResultOutput
	ToGetServerlessInstancesResultOutputWithContext(context.Context) GetServerlessInstancesResultOutput
}

type GetServerlessInstancesResultArgs struct {
	ConnectionStringsPrivateEndpointSrvs pulumi.StringArrayInput `pulumi:"connectionStringsPrivateEndpointSrvs"`
	// Public `mongodb+srv://` connection string that you can use to connect to this serverless instance.
	ConnectionStringsStandardSrv pulumi.StringInput `pulumi:"connectionStringsStandardSrv"`
	// Flag that indicates whether the serverless instance uses Serverless Continuous Backup.
	ContinuousBackupEnabled pulumi.BoolInput   `pulumi:"continuousBackupEnabled"`
	CreateDate              pulumi.StringInput `pulumi:"createDate"`
	// Unique 24-hexadecimal digit string that identifies the serverless instance.
	Id    pulumi.StringInput                         `pulumi:"id"`
	Links GetServerlessInstancesResultLinkArrayInput `pulumi:"links"`
	// Version of MongoDB that the serverless instance runs, in `<major version>`.`<minor version>` format.
	MongoDbVersion pulumi.StringInput `pulumi:"mongoDbVersion"`
	// (Required) Human-readable label that identifies your serverless instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Cloud service provider on which MongoDB Cloud provisioned the serverless instance.
	ProviderSettingsBackingProviderName pulumi.StringInput `pulumi:"providerSettingsBackingProviderName"`
	// Cloud service provider that applies to the provisioned the serverless instance.
	ProviderSettingsProviderName pulumi.StringInput `pulumi:"providerSettingsProviderName"`
	// Human-readable label that identifies the physical location of your MongoDB serverless instance. The region you choose can affect network latency for clients accessing your databases.
	ProviderSettingsRegionName pulumi.StringInput `pulumi:"providerSettingsRegionName"`
	// Stage of deployment of this serverless instance when the resource made its request.
	StateName pulumi.StringInput `pulumi:"stateName"`
	// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled pulumi.BoolInput `pulumi:"terminationProtectionEnabled"`
}

func (GetServerlessInstancesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerlessInstancesResult)(nil)).Elem()
}

func (i GetServerlessInstancesResultArgs) ToGetServerlessInstancesResultOutput() GetServerlessInstancesResultOutput {
	return i.ToGetServerlessInstancesResultOutputWithContext(context.Background())
}

func (i GetServerlessInstancesResultArgs) ToGetServerlessInstancesResultOutputWithContext(ctx context.Context) GetServerlessInstancesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerlessInstancesResultOutput)
}

func (i GetServerlessInstancesResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetServerlessInstancesResult] {
	return pulumix.Output[GetServerlessInstancesResult]{
		OutputState: i.ToGetServerlessInstancesResultOutputWithContext(ctx).OutputState,
	}
}

// GetServerlessInstancesResultArrayInput is an input type that accepts GetServerlessInstancesResultArray and GetServerlessInstancesResultArrayOutput values.
// You can construct a concrete instance of `GetServerlessInstancesResultArrayInput` via:
//
//	GetServerlessInstancesResultArray{ GetServerlessInstancesResultArgs{...} }
type GetServerlessInstancesResultArrayInput interface {
	pulumi.Input

	ToGetServerlessInstancesResultArrayOutput() GetServerlessInstancesResultArrayOutput
	ToGetServerlessInstancesResultArrayOutputWithContext(context.Context) GetServerlessInstancesResultArrayOutput
}

type GetServerlessInstancesResultArray []GetServerlessInstancesResultInput

func (GetServerlessInstancesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerlessInstancesResult)(nil)).Elem()
}

func (i GetServerlessInstancesResultArray) ToGetServerlessInstancesResultArrayOutput() GetServerlessInstancesResultArrayOutput {
	return i.ToGetServerlessInstancesResultArrayOutputWithContext(context.Background())
}

func (i GetServerlessInstancesResultArray) ToGetServerlessInstancesResultArrayOutputWithContext(ctx context.Context) GetServerlessInstancesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerlessInstancesResultArrayOutput)
}

func (i GetServerlessInstancesResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServerlessInstancesResult] {
	return pulumix.Output[[]GetServerlessInstancesResult]{
		OutputState: i.ToGetServerlessInstancesResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServerlessInstancesResultOutput struct{ *pulumi.OutputState }

func (GetServerlessInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerlessInstancesResult)(nil)).Elem()
}

func (o GetServerlessInstancesResultOutput) ToGetServerlessInstancesResultOutput() GetServerlessInstancesResultOutput {
	return o
}

func (o GetServerlessInstancesResultOutput) ToGetServerlessInstancesResultOutputWithContext(ctx context.Context) GetServerlessInstancesResultOutput {
	return o
}

func (o GetServerlessInstancesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetServerlessInstancesResult] {
	return pulumix.Output[GetServerlessInstancesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetServerlessInstancesResultOutput) ConnectionStringsPrivateEndpointSrvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) []string { return v.ConnectionStringsPrivateEndpointSrvs }).(pulumi.StringArrayOutput)
}

// Public `mongodb+srv://` connection string that you can use to connect to this serverless instance.
func (o GetServerlessInstancesResultOutput) ConnectionStringsStandardSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.ConnectionStringsStandardSrv }).(pulumi.StringOutput)
}

// Flag that indicates whether the serverless instance uses Serverless Continuous Backup.
func (o GetServerlessInstancesResultOutput) ContinuousBackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) bool { return v.ContinuousBackupEnabled }).(pulumi.BoolOutput)
}

func (o GetServerlessInstancesResultOutput) CreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.CreateDate }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the serverless instance.
func (o GetServerlessInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServerlessInstancesResultOutput) Links() GetServerlessInstancesResultLinkArrayOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) []GetServerlessInstancesResultLink { return v.Links }).(GetServerlessInstancesResultLinkArrayOutput)
}

// Version of MongoDB that the serverless instance runs, in `<major version>`.`<minor version>` format.
func (o GetServerlessInstancesResultOutput) MongoDbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.MongoDbVersion }).(pulumi.StringOutput)
}

// (Required) Human-readable label that identifies your serverless instance.
func (o GetServerlessInstancesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.Name }).(pulumi.StringOutput)
}

// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
func (o GetServerlessInstancesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Cloud service provider on which MongoDB Cloud provisioned the serverless instance.
func (o GetServerlessInstancesResultOutput) ProviderSettingsBackingProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.ProviderSettingsBackingProviderName }).(pulumi.StringOutput)
}

// Cloud service provider that applies to the provisioned the serverless instance.
func (o GetServerlessInstancesResultOutput) ProviderSettingsProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.ProviderSettingsProviderName }).(pulumi.StringOutput)
}

// Human-readable label that identifies the physical location of your MongoDB serverless instance. The region you choose can affect network latency for clients accessing your databases.
func (o GetServerlessInstancesResultOutput) ProviderSettingsRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.ProviderSettingsRegionName }).(pulumi.StringOutput)
}

// Stage of deployment of this serverless instance when the resource made its request.
func (o GetServerlessInstancesResultOutput) StateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) string { return v.StateName }).(pulumi.StringOutput)
}

// Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.
func (o GetServerlessInstancesResultOutput) TerminationProtectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerlessInstancesResult) bool { return v.TerminationProtectionEnabled }).(pulumi.BoolOutput)
}

type GetServerlessInstancesResultArrayOutput struct{ *pulumi.OutputState }

func (GetServerlessInstancesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerlessInstancesResult)(nil)).Elem()
}

func (o GetServerlessInstancesResultArrayOutput) ToGetServerlessInstancesResultArrayOutput() GetServerlessInstancesResultArrayOutput {
	return o
}

func (o GetServerlessInstancesResultArrayOutput) ToGetServerlessInstancesResultArrayOutputWithContext(ctx context.Context) GetServerlessInstancesResultArrayOutput {
	return o
}

func (o GetServerlessInstancesResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServerlessInstancesResult] {
	return pulumix.Output[[]GetServerlessInstancesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetServerlessInstancesResultArrayOutput) Index(i pulumi.IntInput) GetServerlessInstancesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerlessInstancesResult {
		return vs[0].([]GetServerlessInstancesResult)[vs[1].(int)]
	}).(GetServerlessInstancesResultOutput)
}

type GetServerlessInstancesResultLink struct {
	Href string `pulumi:"href"`
	Rel  string `pulumi:"rel"`
}

// GetServerlessInstancesResultLinkInput is an input type that accepts GetServerlessInstancesResultLinkArgs and GetServerlessInstancesResultLinkOutput values.
// You can construct a concrete instance of `GetServerlessInstancesResultLinkInput` via:
//
//	GetServerlessInstancesResultLinkArgs{...}
type GetServerlessInstancesResultLinkInput interface {
	pulumi.Input

	ToGetServerlessInstancesResultLinkOutput() GetServerlessInstancesResultLinkOutput
	ToGetServerlessInstancesResultLinkOutputWithContext(context.Context) GetServerlessInstancesResultLinkOutput
}

type GetServerlessInstancesResultLinkArgs struct {
	Href pulumi.StringInput `pulumi:"href"`
	Rel  pulumi.StringInput `pulumi:"rel"`
}

func (GetServerlessInstancesResultLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerlessInstancesResultLink)(nil)).Elem()
}

func (i GetServerlessInstancesResultLinkArgs) ToGetServerlessInstancesResultLinkOutput() GetServerlessInstancesResultLinkOutput {
	return i.ToGetServerlessInstancesResultLinkOutputWithContext(context.Background())
}

func (i GetServerlessInstancesResultLinkArgs) ToGetServerlessInstancesResultLinkOutputWithContext(ctx context.Context) GetServerlessInstancesResultLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerlessInstancesResultLinkOutput)
}

func (i GetServerlessInstancesResultLinkArgs) ToOutput(ctx context.Context) pulumix.Output[GetServerlessInstancesResultLink] {
	return pulumix.Output[GetServerlessInstancesResultLink]{
		OutputState: i.ToGetServerlessInstancesResultLinkOutputWithContext(ctx).OutputState,
	}
}

// GetServerlessInstancesResultLinkArrayInput is an input type that accepts GetServerlessInstancesResultLinkArray and GetServerlessInstancesResultLinkArrayOutput values.
// You can construct a concrete instance of `GetServerlessInstancesResultLinkArrayInput` via:
//
//	GetServerlessInstancesResultLinkArray{ GetServerlessInstancesResultLinkArgs{...} }
type GetServerlessInstancesResultLinkArrayInput interface {
	pulumi.Input

	ToGetServerlessInstancesResultLinkArrayOutput() GetServerlessInstancesResultLinkArrayOutput
	ToGetServerlessInstancesResultLinkArrayOutputWithContext(context.Context) GetServerlessInstancesResultLinkArrayOutput
}

type GetServerlessInstancesResultLinkArray []GetServerlessInstancesResultLinkInput

func (GetServerlessInstancesResultLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerlessInstancesResultLink)(nil)).Elem()
}

func (i GetServerlessInstancesResultLinkArray) ToGetServerlessInstancesResultLinkArrayOutput() GetServerlessInstancesResultLinkArrayOutput {
	return i.ToGetServerlessInstancesResultLinkArrayOutputWithContext(context.Background())
}

func (i GetServerlessInstancesResultLinkArray) ToGetServerlessInstancesResultLinkArrayOutputWithContext(ctx context.Context) GetServerlessInstancesResultLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerlessInstancesResultLinkArrayOutput)
}

func (i GetServerlessInstancesResultLinkArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServerlessInstancesResultLink] {
	return pulumix.Output[[]GetServerlessInstancesResultLink]{
		OutputState: i.ToGetServerlessInstancesResultLinkArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServerlessInstancesResultLinkOutput struct{ *pulumi.OutputState }

func (GetServerlessInstancesResultLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerlessInstancesResultLink)(nil)).Elem()
}

func (o GetServerlessInstancesResultLinkOutput) ToGetServerlessInstancesResultLinkOutput() GetServerlessInstancesResultLinkOutput {
	return o
}

func (o GetServerlessInstancesResultLinkOutput) ToGetServerlessInstancesResultLinkOutputWithContext(ctx context.Context) GetServerlessInstancesResultLinkOutput {
	return o
}

func (o GetServerlessInstancesResultLinkOutput) ToOutput(ctx context.Context) pulumix.Output[GetServerlessInstancesResultLink] {
	return pulumix.Output[GetServerlessInstancesResultLink]{
		OutputState: o.OutputState,
	}
}

func (o GetServerlessInstancesResultLinkOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResultLink) string { return v.Href }).(pulumi.StringOutput)
}

func (o GetServerlessInstancesResultLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerlessInstancesResultLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetServerlessInstancesResultLinkArrayOutput struct{ *pulumi.OutputState }

func (GetServerlessInstancesResultLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerlessInstancesResultLink)(nil)).Elem()
}

func (o GetServerlessInstancesResultLinkArrayOutput) ToGetServerlessInstancesResultLinkArrayOutput() GetServerlessInstancesResultLinkArrayOutput {
	return o
}

func (o GetServerlessInstancesResultLinkArrayOutput) ToGetServerlessInstancesResultLinkArrayOutputWithContext(ctx context.Context) GetServerlessInstancesResultLinkArrayOutput {
	return o
}

func (o GetServerlessInstancesResultLinkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServerlessInstancesResultLink] {
	return pulumix.Output[[]GetServerlessInstancesResultLink]{
		OutputState: o.OutputState,
	}
}

func (o GetServerlessInstancesResultLinkArrayOutput) Index(i pulumi.IntInput) GetServerlessInstancesResultLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerlessInstancesResultLink {
		return vs[0].([]GetServerlessInstancesResultLink)[vs[1].(int)]
	}).(GetServerlessInstancesResultLinkOutput)
}

type GetSharedTierRestoreJobsResult struct {
	DeliveryType             string `pulumi:"deliveryType"`
	ExpirationDate           string `pulumi:"expirationDate"`
	JobId                    string `pulumi:"jobId"`
	RestoreFinishedDate      string `pulumi:"restoreFinishedDate"`
	RestoreScheduledDate     string `pulumi:"restoreScheduledDate"`
	SnapshotFinishedDate     string `pulumi:"snapshotFinishedDate"`
	SnapshotId               string `pulumi:"snapshotId"`
	SnapshotUrl              string `pulumi:"snapshotUrl"`
	Status                   string `pulumi:"status"`
	TargetDeploymentItemName string `pulumi:"targetDeploymentItemName"`
	TargetProjectId          string `pulumi:"targetProjectId"`
}

// GetSharedTierRestoreJobsResultInput is an input type that accepts GetSharedTierRestoreJobsResultArgs and GetSharedTierRestoreJobsResultOutput values.
// You can construct a concrete instance of `GetSharedTierRestoreJobsResultInput` via:
//
//	GetSharedTierRestoreJobsResultArgs{...}
type GetSharedTierRestoreJobsResultInput interface {
	pulumi.Input

	ToGetSharedTierRestoreJobsResultOutput() GetSharedTierRestoreJobsResultOutput
	ToGetSharedTierRestoreJobsResultOutputWithContext(context.Context) GetSharedTierRestoreJobsResultOutput
}

type GetSharedTierRestoreJobsResultArgs struct {
	DeliveryType             pulumi.StringInput `pulumi:"deliveryType"`
	ExpirationDate           pulumi.StringInput `pulumi:"expirationDate"`
	JobId                    pulumi.StringInput `pulumi:"jobId"`
	RestoreFinishedDate      pulumi.StringInput `pulumi:"restoreFinishedDate"`
	RestoreScheduledDate     pulumi.StringInput `pulumi:"restoreScheduledDate"`
	SnapshotFinishedDate     pulumi.StringInput `pulumi:"snapshotFinishedDate"`
	SnapshotId               pulumi.StringInput `pulumi:"snapshotId"`
	SnapshotUrl              pulumi.StringInput `pulumi:"snapshotUrl"`
	Status                   pulumi.StringInput `pulumi:"status"`
	TargetDeploymentItemName pulumi.StringInput `pulumi:"targetDeploymentItemName"`
	TargetProjectId          pulumi.StringInput `pulumi:"targetProjectId"`
}

func (GetSharedTierRestoreJobsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedTierRestoreJobsResult)(nil)).Elem()
}

func (i GetSharedTierRestoreJobsResultArgs) ToGetSharedTierRestoreJobsResultOutput() GetSharedTierRestoreJobsResultOutput {
	return i.ToGetSharedTierRestoreJobsResultOutputWithContext(context.Background())
}

func (i GetSharedTierRestoreJobsResultArgs) ToGetSharedTierRestoreJobsResultOutputWithContext(ctx context.Context) GetSharedTierRestoreJobsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSharedTierRestoreJobsResultOutput)
}

func (i GetSharedTierRestoreJobsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetSharedTierRestoreJobsResult] {
	return pulumix.Output[GetSharedTierRestoreJobsResult]{
		OutputState: i.ToGetSharedTierRestoreJobsResultOutputWithContext(ctx).OutputState,
	}
}

// GetSharedTierRestoreJobsResultArrayInput is an input type that accepts GetSharedTierRestoreJobsResultArray and GetSharedTierRestoreJobsResultArrayOutput values.
// You can construct a concrete instance of `GetSharedTierRestoreJobsResultArrayInput` via:
//
//	GetSharedTierRestoreJobsResultArray{ GetSharedTierRestoreJobsResultArgs{...} }
type GetSharedTierRestoreJobsResultArrayInput interface {
	pulumi.Input

	ToGetSharedTierRestoreJobsResultArrayOutput() GetSharedTierRestoreJobsResultArrayOutput
	ToGetSharedTierRestoreJobsResultArrayOutputWithContext(context.Context) GetSharedTierRestoreJobsResultArrayOutput
}

type GetSharedTierRestoreJobsResultArray []GetSharedTierRestoreJobsResultInput

func (GetSharedTierRestoreJobsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSharedTierRestoreJobsResult)(nil)).Elem()
}

func (i GetSharedTierRestoreJobsResultArray) ToGetSharedTierRestoreJobsResultArrayOutput() GetSharedTierRestoreJobsResultArrayOutput {
	return i.ToGetSharedTierRestoreJobsResultArrayOutputWithContext(context.Background())
}

func (i GetSharedTierRestoreJobsResultArray) ToGetSharedTierRestoreJobsResultArrayOutputWithContext(ctx context.Context) GetSharedTierRestoreJobsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSharedTierRestoreJobsResultArrayOutput)
}

func (i GetSharedTierRestoreJobsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSharedTierRestoreJobsResult] {
	return pulumix.Output[[]GetSharedTierRestoreJobsResult]{
		OutputState: i.ToGetSharedTierRestoreJobsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSharedTierRestoreJobsResultOutput struct{ *pulumi.OutputState }

func (GetSharedTierRestoreJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedTierRestoreJobsResult)(nil)).Elem()
}

func (o GetSharedTierRestoreJobsResultOutput) ToGetSharedTierRestoreJobsResultOutput() GetSharedTierRestoreJobsResultOutput {
	return o
}

func (o GetSharedTierRestoreJobsResultOutput) ToGetSharedTierRestoreJobsResultOutputWithContext(ctx context.Context) GetSharedTierRestoreJobsResultOutput {
	return o
}

func (o GetSharedTierRestoreJobsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSharedTierRestoreJobsResult] {
	return pulumix.Output[GetSharedTierRestoreJobsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSharedTierRestoreJobsResultOutput) DeliveryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierRestoreJobsResult) string { return v.DeliveryType }).(pulumi.StringOutput)
}

func (o GetSharedTierRestoreJobsResultOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierRestoreJobsResult) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

func (o GetSharedTierRestoreJobsResultOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierRestoreJobsResult) string { return v.JobId }).(pulumi.StringOutput)
}

func (o GetSharedTierRestoreJobsResultOutput) RestoreFinishedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierRestoreJobsResult) string { return v.RestoreFinishedDate }).(pulumi.StringOutput)
}

func (o GetSharedTierRestoreJobsResultOutput) RestoreScheduledDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierRestoreJobsResult) string { return v.RestoreScheduledDate }).(pulumi.StringOutput)
}

func (o GetSharedTierRestoreJobsResultOutput) SnapshotFinishedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierRestoreJobsResult) string { return v.SnapshotFinishedDate }).(pulumi.StringOutput)
}

func (o GetSharedTierRestoreJobsResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierRestoreJobsResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o GetSharedTierRestoreJobsResultOutput) SnapshotUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierRestoreJobsResult) string { return v.SnapshotUrl }).(pulumi.StringOutput)
}

func (o GetSharedTierRestoreJobsResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierRestoreJobsResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetSharedTierRestoreJobsResultOutput) TargetDeploymentItemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierRestoreJobsResult) string { return v.TargetDeploymentItemName }).(pulumi.StringOutput)
}

func (o GetSharedTierRestoreJobsResultOutput) TargetProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierRestoreJobsResult) string { return v.TargetProjectId }).(pulumi.StringOutput)
}

type GetSharedTierRestoreJobsResultArrayOutput struct{ *pulumi.OutputState }

func (GetSharedTierRestoreJobsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSharedTierRestoreJobsResult)(nil)).Elem()
}

func (o GetSharedTierRestoreJobsResultArrayOutput) ToGetSharedTierRestoreJobsResultArrayOutput() GetSharedTierRestoreJobsResultArrayOutput {
	return o
}

func (o GetSharedTierRestoreJobsResultArrayOutput) ToGetSharedTierRestoreJobsResultArrayOutputWithContext(ctx context.Context) GetSharedTierRestoreJobsResultArrayOutput {
	return o
}

func (o GetSharedTierRestoreJobsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSharedTierRestoreJobsResult] {
	return pulumix.Output[[]GetSharedTierRestoreJobsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSharedTierRestoreJobsResultArrayOutput) Index(i pulumi.IntInput) GetSharedTierRestoreJobsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSharedTierRestoreJobsResult {
		return vs[0].([]GetSharedTierRestoreJobsResult)[vs[1].(int)]
	}).(GetSharedTierRestoreJobsResultOutput)
}

type GetSharedTierSnapshotsResult struct {
	Expiration     string `pulumi:"expiration"`
	FinishTime     string `pulumi:"finishTime"`
	MongoDbVersion string `pulumi:"mongoDbVersion"`
	ScheduledTime  string `pulumi:"scheduledTime"`
	SnapshotId     string `pulumi:"snapshotId"`
	StartTime      string `pulumi:"startTime"`
	Status         string `pulumi:"status"`
}

// GetSharedTierSnapshotsResultInput is an input type that accepts GetSharedTierSnapshotsResultArgs and GetSharedTierSnapshotsResultOutput values.
// You can construct a concrete instance of `GetSharedTierSnapshotsResultInput` via:
//
//	GetSharedTierSnapshotsResultArgs{...}
type GetSharedTierSnapshotsResultInput interface {
	pulumi.Input

	ToGetSharedTierSnapshotsResultOutput() GetSharedTierSnapshotsResultOutput
	ToGetSharedTierSnapshotsResultOutputWithContext(context.Context) GetSharedTierSnapshotsResultOutput
}

type GetSharedTierSnapshotsResultArgs struct {
	Expiration     pulumi.StringInput `pulumi:"expiration"`
	FinishTime     pulumi.StringInput `pulumi:"finishTime"`
	MongoDbVersion pulumi.StringInput `pulumi:"mongoDbVersion"`
	ScheduledTime  pulumi.StringInput `pulumi:"scheduledTime"`
	SnapshotId     pulumi.StringInput `pulumi:"snapshotId"`
	StartTime      pulumi.StringInput `pulumi:"startTime"`
	Status         pulumi.StringInput `pulumi:"status"`
}

func (GetSharedTierSnapshotsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedTierSnapshotsResult)(nil)).Elem()
}

func (i GetSharedTierSnapshotsResultArgs) ToGetSharedTierSnapshotsResultOutput() GetSharedTierSnapshotsResultOutput {
	return i.ToGetSharedTierSnapshotsResultOutputWithContext(context.Background())
}

func (i GetSharedTierSnapshotsResultArgs) ToGetSharedTierSnapshotsResultOutputWithContext(ctx context.Context) GetSharedTierSnapshotsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSharedTierSnapshotsResultOutput)
}

func (i GetSharedTierSnapshotsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetSharedTierSnapshotsResult] {
	return pulumix.Output[GetSharedTierSnapshotsResult]{
		OutputState: i.ToGetSharedTierSnapshotsResultOutputWithContext(ctx).OutputState,
	}
}

// GetSharedTierSnapshotsResultArrayInput is an input type that accepts GetSharedTierSnapshotsResultArray and GetSharedTierSnapshotsResultArrayOutput values.
// You can construct a concrete instance of `GetSharedTierSnapshotsResultArrayInput` via:
//
//	GetSharedTierSnapshotsResultArray{ GetSharedTierSnapshotsResultArgs{...} }
type GetSharedTierSnapshotsResultArrayInput interface {
	pulumi.Input

	ToGetSharedTierSnapshotsResultArrayOutput() GetSharedTierSnapshotsResultArrayOutput
	ToGetSharedTierSnapshotsResultArrayOutputWithContext(context.Context) GetSharedTierSnapshotsResultArrayOutput
}

type GetSharedTierSnapshotsResultArray []GetSharedTierSnapshotsResultInput

func (GetSharedTierSnapshotsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSharedTierSnapshotsResult)(nil)).Elem()
}

func (i GetSharedTierSnapshotsResultArray) ToGetSharedTierSnapshotsResultArrayOutput() GetSharedTierSnapshotsResultArrayOutput {
	return i.ToGetSharedTierSnapshotsResultArrayOutputWithContext(context.Background())
}

func (i GetSharedTierSnapshotsResultArray) ToGetSharedTierSnapshotsResultArrayOutputWithContext(ctx context.Context) GetSharedTierSnapshotsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSharedTierSnapshotsResultArrayOutput)
}

func (i GetSharedTierSnapshotsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSharedTierSnapshotsResult] {
	return pulumix.Output[[]GetSharedTierSnapshotsResult]{
		OutputState: i.ToGetSharedTierSnapshotsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSharedTierSnapshotsResultOutput struct{ *pulumi.OutputState }

func (GetSharedTierSnapshotsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedTierSnapshotsResult)(nil)).Elem()
}

func (o GetSharedTierSnapshotsResultOutput) ToGetSharedTierSnapshotsResultOutput() GetSharedTierSnapshotsResultOutput {
	return o
}

func (o GetSharedTierSnapshotsResultOutput) ToGetSharedTierSnapshotsResultOutputWithContext(ctx context.Context) GetSharedTierSnapshotsResultOutput {
	return o
}

func (o GetSharedTierSnapshotsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSharedTierSnapshotsResult] {
	return pulumix.Output[GetSharedTierSnapshotsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSharedTierSnapshotsResultOutput) Expiration() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierSnapshotsResult) string { return v.Expiration }).(pulumi.StringOutput)
}

func (o GetSharedTierSnapshotsResultOutput) FinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierSnapshotsResult) string { return v.FinishTime }).(pulumi.StringOutput)
}

func (o GetSharedTierSnapshotsResultOutput) MongoDbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierSnapshotsResult) string { return v.MongoDbVersion }).(pulumi.StringOutput)
}

func (o GetSharedTierSnapshotsResultOutput) ScheduledTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierSnapshotsResult) string { return v.ScheduledTime }).(pulumi.StringOutput)
}

func (o GetSharedTierSnapshotsResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierSnapshotsResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o GetSharedTierSnapshotsResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierSnapshotsResult) string { return v.StartTime }).(pulumi.StringOutput)
}

func (o GetSharedTierSnapshotsResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedTierSnapshotsResult) string { return v.Status }).(pulumi.StringOutput)
}

type GetSharedTierSnapshotsResultArrayOutput struct{ *pulumi.OutputState }

func (GetSharedTierSnapshotsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSharedTierSnapshotsResult)(nil)).Elem()
}

func (o GetSharedTierSnapshotsResultArrayOutput) ToGetSharedTierSnapshotsResultArrayOutput() GetSharedTierSnapshotsResultArrayOutput {
	return o
}

func (o GetSharedTierSnapshotsResultArrayOutput) ToGetSharedTierSnapshotsResultArrayOutputWithContext(ctx context.Context) GetSharedTierSnapshotsResultArrayOutput {
	return o
}

func (o GetSharedTierSnapshotsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSharedTierSnapshotsResult] {
	return pulumix.Output[[]GetSharedTierSnapshotsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSharedTierSnapshotsResultArrayOutput) Index(i pulumi.IntInput) GetSharedTierSnapshotsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSharedTierSnapshotsResult {
		return vs[0].([]GetSharedTierSnapshotsResult)[vs[1].(int)]
	}).(GetSharedTierSnapshotsResultOutput)
}

type GetThirdPartyIntegrationsResult struct {
	// Unique identifier of your New Relic account.
	AccountId string `pulumi:"accountId"`
	// Your API Key.
	ApiKey string `pulumi:"apiKey"`
	// Your API Token.
	ApiToken    string `pulumi:"apiToken"`
	ChannelName string `pulumi:"channelName"`
	// Whether your cluster has Prometheus enabled.
	Enabled *bool `pulumi:"enabled"`
	// Your License Key.
	LicenseKey string `pulumi:"licenseKey"`
	// Your Microsoft Teams incoming webhook URL.
	MicrosoftTeamsWebhookUrl *string `pulumi:"microsoftTeamsWebhookUrl"`
	// The unique ID for the project to get all Third-Party service integrations
	ProjectId string `pulumi:"projectId"`
	// Indicates which API URL to use, either US or EU. Opsgenie will use US by default.
	Region string `pulumi:"region"`
	// An optional field for your Routing Key.
	RoutingKey string `pulumi:"routingKey"`
	// Your Prometheus protocol scheme configured for requests.
	Scheme *string `pulumi:"scheme"`
	// An optional field for your webhook secret.
	Secret string `pulumi:"secret"`
	// Indicates which service discovery method is used, either file or http.
	ServiceDiscovery *string `pulumi:"serviceDiscovery"`
	// Your Service Key.
	ServiceKey string `pulumi:"serviceKey"`
	TeamName   string `pulumi:"teamName"`
	// (Required) Thirt-Party service integration type.
	Type string `pulumi:"type"`
	// Your webhook URL.
	Url string `pulumi:"url"`
	// Your Prometheus username.
	UserName *string `pulumi:"userName"`
}

// GetThirdPartyIntegrationsResultInput is an input type that accepts GetThirdPartyIntegrationsResultArgs and GetThirdPartyIntegrationsResultOutput values.
// You can construct a concrete instance of `GetThirdPartyIntegrationsResultInput` via:
//
//	GetThirdPartyIntegrationsResultArgs{...}
type GetThirdPartyIntegrationsResultInput interface {
	pulumi.Input

	ToGetThirdPartyIntegrationsResultOutput() GetThirdPartyIntegrationsResultOutput
	ToGetThirdPartyIntegrationsResultOutputWithContext(context.Context) GetThirdPartyIntegrationsResultOutput
}

type GetThirdPartyIntegrationsResultArgs struct {
	// Unique identifier of your New Relic account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Your API Key.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// Your API Token.
	ApiToken    pulumi.StringInput `pulumi:"apiToken"`
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Whether your cluster has Prometheus enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Your License Key.
	LicenseKey pulumi.StringInput `pulumi:"licenseKey"`
	// Your Microsoft Teams incoming webhook URL.
	MicrosoftTeamsWebhookUrl pulumi.StringPtrInput `pulumi:"microsoftTeamsWebhookUrl"`
	// The unique ID for the project to get all Third-Party service integrations
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Indicates which API URL to use, either US or EU. Opsgenie will use US by default.
	Region pulumi.StringInput `pulumi:"region"`
	// An optional field for your Routing Key.
	RoutingKey pulumi.StringInput `pulumi:"routingKey"`
	// Your Prometheus protocol scheme configured for requests.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
	// An optional field for your webhook secret.
	Secret pulumi.StringInput `pulumi:"secret"`
	// Indicates which service discovery method is used, either file or http.
	ServiceDiscovery pulumi.StringPtrInput `pulumi:"serviceDiscovery"`
	// Your Service Key.
	ServiceKey pulumi.StringInput `pulumi:"serviceKey"`
	TeamName   pulumi.StringInput `pulumi:"teamName"`
	// (Required) Thirt-Party service integration type.
	Type pulumi.StringInput `pulumi:"type"`
	// Your webhook URL.
	Url pulumi.StringInput `pulumi:"url"`
	// Your Prometheus username.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (GetThirdPartyIntegrationsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetThirdPartyIntegrationsResult)(nil)).Elem()
}

func (i GetThirdPartyIntegrationsResultArgs) ToGetThirdPartyIntegrationsResultOutput() GetThirdPartyIntegrationsResultOutput {
	return i.ToGetThirdPartyIntegrationsResultOutputWithContext(context.Background())
}

func (i GetThirdPartyIntegrationsResultArgs) ToGetThirdPartyIntegrationsResultOutputWithContext(ctx context.Context) GetThirdPartyIntegrationsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetThirdPartyIntegrationsResultOutput)
}

func (i GetThirdPartyIntegrationsResultArgs) ToOutput(ctx context.Context) pulumix.Output[GetThirdPartyIntegrationsResult] {
	return pulumix.Output[GetThirdPartyIntegrationsResult]{
		OutputState: i.ToGetThirdPartyIntegrationsResultOutputWithContext(ctx).OutputState,
	}
}

// GetThirdPartyIntegrationsResultArrayInput is an input type that accepts GetThirdPartyIntegrationsResultArray and GetThirdPartyIntegrationsResultArrayOutput values.
// You can construct a concrete instance of `GetThirdPartyIntegrationsResultArrayInput` via:
//
//	GetThirdPartyIntegrationsResultArray{ GetThirdPartyIntegrationsResultArgs{...} }
type GetThirdPartyIntegrationsResultArrayInput interface {
	pulumi.Input

	ToGetThirdPartyIntegrationsResultArrayOutput() GetThirdPartyIntegrationsResultArrayOutput
	ToGetThirdPartyIntegrationsResultArrayOutputWithContext(context.Context) GetThirdPartyIntegrationsResultArrayOutput
}

type GetThirdPartyIntegrationsResultArray []GetThirdPartyIntegrationsResultInput

func (GetThirdPartyIntegrationsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetThirdPartyIntegrationsResult)(nil)).Elem()
}

func (i GetThirdPartyIntegrationsResultArray) ToGetThirdPartyIntegrationsResultArrayOutput() GetThirdPartyIntegrationsResultArrayOutput {
	return i.ToGetThirdPartyIntegrationsResultArrayOutputWithContext(context.Background())
}

func (i GetThirdPartyIntegrationsResultArray) ToGetThirdPartyIntegrationsResultArrayOutputWithContext(ctx context.Context) GetThirdPartyIntegrationsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetThirdPartyIntegrationsResultArrayOutput)
}

func (i GetThirdPartyIntegrationsResultArray) ToOutput(ctx context.Context) pulumix.Output[[]GetThirdPartyIntegrationsResult] {
	return pulumix.Output[[]GetThirdPartyIntegrationsResult]{
		OutputState: i.ToGetThirdPartyIntegrationsResultArrayOutputWithContext(ctx).OutputState,
	}
}

type GetThirdPartyIntegrationsResultOutput struct{ *pulumi.OutputState }

func (GetThirdPartyIntegrationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetThirdPartyIntegrationsResult)(nil)).Elem()
}

func (o GetThirdPartyIntegrationsResultOutput) ToGetThirdPartyIntegrationsResultOutput() GetThirdPartyIntegrationsResultOutput {
	return o
}

func (o GetThirdPartyIntegrationsResultOutput) ToGetThirdPartyIntegrationsResultOutputWithContext(ctx context.Context) GetThirdPartyIntegrationsResultOutput {
	return o
}

func (o GetThirdPartyIntegrationsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetThirdPartyIntegrationsResult] {
	return pulumix.Output[GetThirdPartyIntegrationsResult]{
		OutputState: o.OutputState,
	}
}

// Unique identifier of your New Relic account.
func (o GetThirdPartyIntegrationsResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Your API Key.
func (o GetThirdPartyIntegrationsResultOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Your API Token.
func (o GetThirdPartyIntegrationsResultOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ApiToken }).(pulumi.StringOutput)
}

func (o GetThirdPartyIntegrationsResultOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Whether your cluster has Prometheus enabled.
func (o GetThirdPartyIntegrationsResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Your License Key.
func (o GetThirdPartyIntegrationsResultOutput) LicenseKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.LicenseKey }).(pulumi.StringOutput)
}

// Your Microsoft Teams incoming webhook URL.
func (o GetThirdPartyIntegrationsResultOutput) MicrosoftTeamsWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) *string { return v.MicrosoftTeamsWebhookUrl }).(pulumi.StringPtrOutput)
}

// The unique ID for the project to get all Third-Party service integrations
func (o GetThirdPartyIntegrationsResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Indicates which API URL to use, either US or EU. Opsgenie will use US by default.
func (o GetThirdPartyIntegrationsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.Region }).(pulumi.StringOutput)
}

// An optional field for your Routing Key.
func (o GetThirdPartyIntegrationsResultOutput) RoutingKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.RoutingKey }).(pulumi.StringOutput)
}

// Your Prometheus protocol scheme configured for requests.
func (o GetThirdPartyIntegrationsResultOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

// An optional field for your webhook secret.
func (o GetThirdPartyIntegrationsResultOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.Secret }).(pulumi.StringOutput)
}

// Indicates which service discovery method is used, either file or http.
func (o GetThirdPartyIntegrationsResultOutput) ServiceDiscovery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) *string { return v.ServiceDiscovery }).(pulumi.StringPtrOutput)
}

// Your Service Key.
func (o GetThirdPartyIntegrationsResultOutput) ServiceKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ServiceKey }).(pulumi.StringOutput)
}

func (o GetThirdPartyIntegrationsResultOutput) TeamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.TeamName }).(pulumi.StringOutput)
}

// (Required) Thirt-Party service integration type.
func (o GetThirdPartyIntegrationsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.Type }).(pulumi.StringOutput)
}

// Your webhook URL.
func (o GetThirdPartyIntegrationsResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.Url }).(pulumi.StringOutput)
}

// Your Prometheus username.
func (o GetThirdPartyIntegrationsResultOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type GetThirdPartyIntegrationsResultArrayOutput struct{ *pulumi.OutputState }

func (GetThirdPartyIntegrationsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetThirdPartyIntegrationsResult)(nil)).Elem()
}

func (o GetThirdPartyIntegrationsResultArrayOutput) ToGetThirdPartyIntegrationsResultArrayOutput() GetThirdPartyIntegrationsResultArrayOutput {
	return o
}

func (o GetThirdPartyIntegrationsResultArrayOutput) ToGetThirdPartyIntegrationsResultArrayOutputWithContext(ctx context.Context) GetThirdPartyIntegrationsResultArrayOutput {
	return o
}

func (o GetThirdPartyIntegrationsResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetThirdPartyIntegrationsResult] {
	return pulumix.Output[[]GetThirdPartyIntegrationsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetThirdPartyIntegrationsResultArrayOutput) Index(i pulumi.IntInput) GetThirdPartyIntegrationsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetThirdPartyIntegrationsResult {
		return vs[0].([]GetThirdPartyIntegrationsResult)[vs[1].(int)]
	}).(GetThirdPartyIntegrationsResultOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterAdvancedConfigurationInput)(nil)).Elem(), AdvancedClusterAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterAdvancedConfigurationPtrInput)(nil)).Elem(), AdvancedClusterAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterBiConnectorInput)(nil)).Elem(), AdvancedClusterBiConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterBiConnectorPtrInput)(nil)).Elem(), AdvancedClusterBiConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterBiConnectorConfigInput)(nil)).Elem(), AdvancedClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterBiConnectorConfigPtrInput)(nil)).Elem(), AdvancedClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterConnectionStringInput)(nil)).Elem(), AdvancedClusterConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterConnectionStringArrayInput)(nil)).Elem(), AdvancedClusterConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpointInput)(nil)).Elem(), AdvancedClusterConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), AdvancedClusterConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), AdvancedClusterConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), AdvancedClusterConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterLabelInput)(nil)).Elem(), AdvancedClusterLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterLabelArrayInput)(nil)).Elem(), AdvancedClusterLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecInput)(nil)).Elem(), AdvancedClusterReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecArrayInput)(nil)).Elem(), AdvancedClusterReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigArrayInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAutoScalingInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigElectableSpecsInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput)(nil)).Elem(), AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationMatcherInput)(nil)).Elem(), AlertConfigurationMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationMatcherArrayInput)(nil)).Elem(), AlertConfigurationMatcherArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationMetricThresholdConfigInput)(nil)).Elem(), AlertConfigurationMetricThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationMetricThresholdConfigPtrInput)(nil)).Elem(), AlertConfigurationMetricThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationNotificationInput)(nil)).Elem(), AlertConfigurationNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationNotificationArrayInput)(nil)).Elem(), AlertConfigurationNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationThresholdConfigInput)(nil)).Elem(), AlertConfigurationThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationThresholdConfigPtrInput)(nil)).Elem(), AlertConfigurationThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyOnDemandPolicyItemInput)(nil)).Elem(), BackupCompliancePolicyOnDemandPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyOnDemandPolicyItemPtrInput)(nil)).Elem(), BackupCompliancePolicyOnDemandPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemDailyInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemDailyPtrInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemHourlyInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemHourlyPtrInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemMonthlyInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemMonthlyArrayInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemMonthlyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemWeeklyInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemWeeklyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupCompliancePolicyPolicyItemWeeklyArrayInput)(nil)).Elem(), BackupCompliancePolicyPolicyItemWeeklyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupScheduleCopySettingInput)(nil)).Elem(), CloudBackupScheduleCopySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupScheduleCopySettingArrayInput)(nil)).Elem(), CloudBackupScheduleCopySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupScheduleExportInput)(nil)).Elem(), CloudBackupScheduleExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupScheduleExportPtrInput)(nil)).Elem(), CloudBackupScheduleExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemDailyInput)(nil)).Elem(), CloudBackupSchedulePolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemDailyPtrInput)(nil)).Elem(), CloudBackupSchedulePolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemHourlyInput)(nil)).Elem(), CloudBackupSchedulePolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemHourlyPtrInput)(nil)).Elem(), CloudBackupSchedulePolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemMonthlyInput)(nil)).Elem(), CloudBackupSchedulePolicyItemMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemMonthlyArrayInput)(nil)).Elem(), CloudBackupSchedulePolicyItemMonthlyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemWeeklyInput)(nil)).Elem(), CloudBackupSchedulePolicyItemWeeklyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemWeeklyArrayInput)(nil)).Elem(), CloudBackupSchedulePolicyItemWeeklyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotExportJobComponentInput)(nil)).Elem(), CloudBackupSnapshotExportJobComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotExportJobComponentArrayInput)(nil)).Elem(), CloudBackupSnapshotExportJobComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotExportJobCustomDataInput)(nil)).Elem(), CloudBackupSnapshotExportJobCustomDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotExportJobCustomDataArrayInput)(nil)).Elem(), CloudBackupSnapshotExportJobCustomDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotMemberInput)(nil)).Elem(), CloudBackupSnapshotMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotMemberArrayInput)(nil)).Elem(), CloudBackupSnapshotMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotRestoreJobDeliveryTypeConfigInput)(nil)).Elem(), CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrInput)(nil)).Elem(), CloudBackupSnapshotRestoreJobDeliveryTypeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessAuthorizationAwsInput)(nil)).Elem(), CloudProviderAccessAuthorizationAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessAuthorizationAwsPtrInput)(nil)).Elem(), CloudProviderAccessAuthorizationAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessAuthorizationAzureInput)(nil)).Elem(), CloudProviderAccessAuthorizationAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessAuthorizationAzurePtrInput)(nil)).Elem(), CloudProviderAccessAuthorizationAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessAuthorizationFeatureUsageInput)(nil)).Elem(), CloudProviderAccessAuthorizationFeatureUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessAuthorizationFeatureUsageArrayInput)(nil)).Elem(), CloudProviderAccessAuthorizationFeatureUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessFeatureUsageInput)(nil)).Elem(), CloudProviderAccessFeatureUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessFeatureUsageArrayInput)(nil)).Elem(), CloudProviderAccessFeatureUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessSetupAwsConfigInput)(nil)).Elem(), CloudProviderAccessSetupAwsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessSetupAwsConfigArrayInput)(nil)).Elem(), CloudProviderAccessSetupAwsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessSetupAzureConfigInput)(nil)).Elem(), CloudProviderAccessSetupAzureConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessSetupAzureConfigArrayInput)(nil)).Elem(), CloudProviderAccessSetupAzureConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAdvancedConfigurationInput)(nil)).Elem(), ClusterAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAdvancedConfigurationPtrInput)(nil)).Elem(), ClusterAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBiConnectorConfigInput)(nil)).Elem(), ClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBiConnectorConfigPtrInput)(nil)).Elem(), ClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringInput)(nil)).Elem(), ClusterConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringArrayInput)(nil)).Elem(), ClusterConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringPrivateEndpointInput)(nil)).Elem(), ClusterConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), ClusterConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), ClusterConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), ClusterConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLabelInput)(nil)).Elem(), ClusterLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLabelArrayInput)(nil)).Elem(), ClusterLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOutageSimulationOutageFilterInput)(nil)).Elem(), ClusterOutageSimulationOutageFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOutageSimulationOutageFilterArrayInput)(nil)).Elem(), ClusterOutageSimulationOutageFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterReplicationSpecInput)(nil)).Elem(), ClusterReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterReplicationSpecArrayInput)(nil)).Elem(), ClusterReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterReplicationSpecRegionsConfigInput)(nil)).Elem(), ClusterReplicationSpecRegionsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterReplicationSpecRegionsConfigArrayInput)(nil)).Elem(), ClusterReplicationSpecRegionsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyInput)(nil)).Elem(), ClusterSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyArrayInput)(nil)).Elem(), ClusterSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyInput)(nil)).Elem(), ClusterSnapshotBackupPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyArrayInput)(nil)).Elem(), ClusterSnapshotBackupPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyPolicyItemInput)(nil)).Elem(), ClusterSnapshotBackupPolicyPolicyPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput)(nil)).Elem(), ClusterSnapshotBackupPolicyPolicyPolicyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleActionInput)(nil)).Elem(), CustomDbRoleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleActionArrayInput)(nil)).Elem(), CustomDbRoleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleActionResourceInput)(nil)).Elem(), CustomDbRoleActionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleActionResourceArrayInput)(nil)).Elem(), CustomDbRoleActionResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleInheritedRoleInput)(nil)).Elem(), CustomDbRoleInheritedRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleInheritedRoleArrayInput)(nil)).Elem(), CustomDbRoleInheritedRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeAwsInput)(nil)).Elem(), DataLakeAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeAwsPtrInput)(nil)).Elem(), DataLakeAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeDataProcessRegionInput)(nil)).Elem(), DataLakeDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeDataProcessRegionPtrInput)(nil)).Elem(), DataLakeDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakePipelineIngestionScheduleInput)(nil)).Elem(), DataLakePipelineIngestionScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakePipelineIngestionScheduleArrayInput)(nil)).Elem(), DataLakePipelineIngestionScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakePipelineSinkInput)(nil)).Elem(), DataLakePipelineSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakePipelineSinkPtrInput)(nil)).Elem(), DataLakePipelineSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakePipelineSinkPartitionFieldInput)(nil)).Elem(), DataLakePipelineSinkPartitionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakePipelineSinkPartitionFieldArrayInput)(nil)).Elem(), DataLakePipelineSinkPartitionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakePipelineSnapshotInput)(nil)).Elem(), DataLakePipelineSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakePipelineSnapshotArrayInput)(nil)).Elem(), DataLakePipelineSnapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakePipelineSourceInput)(nil)).Elem(), DataLakePipelineSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakePipelineSourcePtrInput)(nil)).Elem(), DataLakePipelineSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakePipelineTransformationInput)(nil)).Elem(), DataLakePipelineTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakePipelineTransformationArrayInput)(nil)).Elem(), DataLakePipelineTransformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseInput)(nil)).Elem(), DataLakeStorageDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseArrayInput)(nil)).Elem(), DataLakeStorageDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseCollectionInput)(nil)).Elem(), DataLakeStorageDatabaseCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseCollectionArrayInput)(nil)).Elem(), DataLakeStorageDatabaseCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseCollectionDataSourceInput)(nil)).Elem(), DataLakeStorageDatabaseCollectionDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseCollectionDataSourceArrayInput)(nil)).Elem(), DataLakeStorageDatabaseCollectionDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseViewInput)(nil)).Elem(), DataLakeStorageDatabaseViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseViewArrayInput)(nil)).Elem(), DataLakeStorageDatabaseViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageStoreInput)(nil)).Elem(), DataLakeStorageStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageStoreArrayInput)(nil)).Elem(), DataLakeStorageStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserLabelInput)(nil)).Elem(), DatabaseUserLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserLabelArrayInput)(nil)).Elem(), DatabaseUserLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserRoleInput)(nil)).Elem(), DatabaseUserRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserRoleArrayInput)(nil)).Elem(), DatabaseUserRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserScopeInput)(nil)).Elem(), DatabaseUserScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserScopeArrayInput)(nil)).Elem(), DatabaseUserScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestAwsKmsConfigInput)(nil)).Elem(), EncryptionAtRestAwsKmsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestAwsKmsConfigPtrInput)(nil)).Elem(), EncryptionAtRestAwsKmsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestAzureKeyVaultConfigInput)(nil)).Elem(), EncryptionAtRestAzureKeyVaultConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestAzureKeyVaultConfigPtrInput)(nil)).Elem(), EncryptionAtRestAzureKeyVaultConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestGoogleCloudKmsConfigInput)(nil)).Elem(), EncryptionAtRestGoogleCloudKmsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestGoogleCloudKmsConfigPtrInput)(nil)).Elem(), EncryptionAtRestGoogleCloudKmsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTriggerEventProcessorsInput)(nil)).Elem(), EventTriggerEventProcessorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTriggerEventProcessorsPtrInput)(nil)).Elem(), EventTriggerEventProcessorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTriggerEventProcessorsAwsEventbridgeInput)(nil)).Elem(), EventTriggerEventProcessorsAwsEventbridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTriggerEventProcessorsAwsEventbridgePtrInput)(nil)).Elem(), EventTriggerEventProcessorsAwsEventbridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceCloudProviderConfigInput)(nil)).Elem(), FederatedDatabaseInstanceCloudProviderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceCloudProviderConfigPtrInput)(nil)).Elem(), FederatedDatabaseInstanceCloudProviderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceCloudProviderConfigAwsInput)(nil)).Elem(), FederatedDatabaseInstanceCloudProviderConfigAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceCloudProviderConfigAwsPtrInput)(nil)).Elem(), FederatedDatabaseInstanceCloudProviderConfigAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceDataProcessRegionInput)(nil)).Elem(), FederatedDatabaseInstanceDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceDataProcessRegionPtrInput)(nil)).Elem(), FederatedDatabaseInstanceDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabaseInput)(nil)).Elem(), FederatedDatabaseInstanceStorageDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabaseArrayInput)(nil)).Elem(), FederatedDatabaseInstanceStorageDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabaseCollectionInput)(nil)).Elem(), FederatedDatabaseInstanceStorageDatabaseCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabaseCollectionArrayInput)(nil)).Elem(), FederatedDatabaseInstanceStorageDatabaseCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceInput)(nil)).Elem(), FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayInput)(nil)).Elem(), FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabaseViewInput)(nil)).Elem(), FederatedDatabaseInstanceStorageDatabaseViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageDatabaseViewArrayInput)(nil)).Elem(), FederatedDatabaseInstanceStorageDatabaseViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageStoreInput)(nil)).Elem(), FederatedDatabaseInstanceStorageStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageStoreArrayInput)(nil)).Elem(), FederatedDatabaseInstanceStorageStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageStoreReadPreferenceInput)(nil)).Elem(), FederatedDatabaseInstanceStorageStoreReadPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageStoreReadPreferencePtrInput)(nil)).Elem(), FederatedDatabaseInstanceStorageStoreReadPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetInput)(nil)).Elem(), FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayInput)(nil)).Elem(), FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagInput)(nil)).Elem(), FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayInput)(nil)).Elem(), FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedSettingsOrgRoleMappingRoleAssignmentInput)(nil)).Elem(), FederatedSettingsOrgRoleMappingRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedSettingsOrgRoleMappingRoleAssignmentArrayInput)(nil)).Elem(), FederatedSettingsOrgRoleMappingRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterConfigCustomZoneMappingInput)(nil)).Elem(), GlobalClusterConfigCustomZoneMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterConfigCustomZoneMappingArrayInput)(nil)).Elem(), GlobalClusterConfigCustomZoneMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterConfigManagedNamespaceInput)(nil)).Elem(), GlobalClusterConfigManagedNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterConfigManagedNamespaceArrayInput)(nil)).Elem(), GlobalClusterConfigManagedNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapConfigurationUserToDnMappingInput)(nil)).Elem(), LdapConfigurationUserToDnMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapConfigurationUserToDnMappingArrayInput)(nil)).Elem(), LdapConfigurationUserToDnMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapVerifyLinkInput)(nil)).Elem(), LdapVerifyLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapVerifyLinkArrayInput)(nil)).Elem(), LdapVerifyLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapVerifyValidationInput)(nil)).Elem(), LdapVerifyValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapVerifyValidationArrayInput)(nil)).Elem(), LdapVerifyValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineArchiveCriteriaInput)(nil)).Elem(), OnlineArchiveCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineArchiveCriteriaPtrInput)(nil)).Elem(), OnlineArchiveCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineArchivePartitionFieldInput)(nil)).Elem(), OnlineArchivePartitionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineArchivePartitionFieldArrayInput)(nil)).Elem(), OnlineArchivePartitionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineArchiveScheduleInput)(nil)).Elem(), OnlineArchiveScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineArchiveSchedulePtrInput)(nil)).Elem(), OnlineArchiveScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkEndpointServiceEndpointInput)(nil)).Elem(), PrivateLinkEndpointServiceEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkEndpointServiceEndpointArrayInput)(nil)).Elem(), PrivateLinkEndpointServiceEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectApiKeyTypeInput)(nil)).Elem(), ProjectApiKeyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectApiKeyTypeArrayInput)(nil)).Elem(), ProjectApiKeyTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectApiKeyProjectAssignmentInput)(nil)).Elem(), ProjectApiKeyProjectAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectApiKeyProjectAssignmentArrayInput)(nil)).Elem(), ProjectApiKeyProjectAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectLimitInput)(nil)).Elem(), ProjectLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectLimitArrayInput)(nil)).Elem(), ProjectLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTeamInput)(nil)).Elem(), ProjectTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTeamArrayInput)(nil)).Elem(), ProjectTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAssumeRoleInput)(nil)).Elem(), ProviderAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAssumeRolePtrInput)(nil)).Elem(), ProviderAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SearchIndexSynonymInput)(nil)).Elem(), SearchIndexSynonymArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SearchIndexSynonymArrayInput)(nil)).Elem(), SearchIndexSynonymArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessInstanceLinkInput)(nil)).Elem(), ServerlessInstanceLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessInstanceLinkArrayInput)(nil)).Elem(), ServerlessInstanceLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*X509AuthenticationDatabaseUserCertificateInput)(nil)).Elem(), X509AuthenticationDatabaseUserCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*X509AuthenticationDatabaseUserCertificateArrayInput)(nil)).Elem(), X509AuthenticationDatabaseUserCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Get509AuthenticationDatabaseUserCertificateInput)(nil)).Elem(), Get509AuthenticationDatabaseUserCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Get509AuthenticationDatabaseUserCertificateArrayInput)(nil)).Elem(), Get509AuthenticationDatabaseUserCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessListApiKeysResultInput)(nil)).Elem(), GetAccessListApiKeysResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessListApiKeysResultArrayInput)(nil)).Elem(), GetAccessListApiKeysResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterAdvancedConfigurationInput)(nil)).Elem(), GetAdvancedClusterAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterAdvancedConfigurationArrayInput)(nil)).Elem(), GetAdvancedClusterAdvancedConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterBiConnectorConfigInput)(nil)).Elem(), GetAdvancedClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterBiConnectorConfigArrayInput)(nil)).Elem(), GetAdvancedClusterBiConnectorConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterConnectionStringInput)(nil)).Elem(), GetAdvancedClusterConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterConnectionStringArrayInput)(nil)).Elem(), GetAdvancedClusterConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpointInput)(nil)).Elem(), GetAdvancedClusterConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), GetAdvancedClusterConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), GetAdvancedClusterConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), GetAdvancedClusterConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterLabelInput)(nil)).Elem(), GetAdvancedClusterLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterLabelArrayInput)(nil)).Elem(), GetAdvancedClusterLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecArrayInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigArrayInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAutoScalingInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrInput)(nil)).Elem(), GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultInput)(nil)).Elem(), GetAdvancedClustersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultArrayInput)(nil)).Elem(), GetAdvancedClustersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultAdvancedConfigurationInput)(nil)).Elem(), GetAdvancedClustersResultAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultAdvancedConfigurationArrayInput)(nil)).Elem(), GetAdvancedClustersResultAdvancedConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultBiConnectorConfigInput)(nil)).Elem(), GetAdvancedClustersResultBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultBiConnectorConfigArrayInput)(nil)).Elem(), GetAdvancedClustersResultBiConnectorConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultConnectionStringInput)(nil)).Elem(), GetAdvancedClustersResultConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultConnectionStringArrayInput)(nil)).Elem(), GetAdvancedClustersResultConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpointInput)(nil)).Elem(), GetAdvancedClustersResultConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), GetAdvancedClustersResultConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultLabelInput)(nil)).Elem(), GetAdvancedClustersResultLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultLabelArrayInput)(nil)).Elem(), GetAdvancedClustersResultLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecArrayInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigArrayInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrInput)(nil)).Elem(), GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationMatcherInput)(nil)).Elem(), GetAlertConfigurationMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationMatcherArrayInput)(nil)).Elem(), GetAlertConfigurationMatcherArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationMetricThresholdConfigInput)(nil)).Elem(), GetAlertConfigurationMetricThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationMetricThresholdConfigArrayInput)(nil)).Elem(), GetAlertConfigurationMetricThresholdConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationNotificationInput)(nil)).Elem(), GetAlertConfigurationNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationNotificationArrayInput)(nil)).Elem(), GetAlertConfigurationNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationOutputInput)(nil)).Elem(), GetAlertConfigurationOutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationOutputArrayInput)(nil)).Elem(), GetAlertConfigurationOutputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationThresholdConfigInput)(nil)).Elem(), GetAlertConfigurationThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationThresholdConfigArrayInput)(nil)).Elem(), GetAlertConfigurationThresholdConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsListOptionInput)(nil)).Elem(), GetAlertConfigurationsListOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsListOptionArrayInput)(nil)).Elem(), GetAlertConfigurationsListOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultInput)(nil)).Elem(), GetAlertConfigurationsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultArrayInput)(nil)).Elem(), GetAlertConfigurationsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultMatcherInput)(nil)).Elem(), GetAlertConfigurationsResultMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultMatcherArrayInput)(nil)).Elem(), GetAlertConfigurationsResultMatcherArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultMetricThresholdConfigInput)(nil)).Elem(), GetAlertConfigurationsResultMetricThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultMetricThresholdConfigArrayInput)(nil)).Elem(), GetAlertConfigurationsResultMetricThresholdConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultNotificationInput)(nil)).Elem(), GetAlertConfigurationsResultNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultNotificationArrayInput)(nil)).Elem(), GetAlertConfigurationsResultNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultOutputTypeInput)(nil)).Elem(), GetAlertConfigurationsResultOutputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultOutputTypeArrayInput)(nil)).Elem(), GetAlertConfigurationsResultOutputTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultThresholdConfigInput)(nil)).Elem(), GetAlertConfigurationsResultThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationsResultThresholdConfigArrayInput)(nil)).Elem(), GetAlertConfigurationsResultThresholdConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiKeysResultInput)(nil)).Elem(), GetApiKeysResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiKeysResultArrayInput)(nil)).Elem(), GetApiKeysResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyOnDemandPolicyItemInput)(nil)).Elem(), GetBackupCompliancePolicyOnDemandPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyOnDemandPolicyItemPtrInput)(nil)).Elem(), GetBackupCompliancePolicyOnDemandPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemDailyInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemDailyPtrInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemHourlyInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemHourlyPtrInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemMonthlyInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemMonthlyArrayInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemMonthlyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemWeeklyInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemWeeklyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupCompliancePolicyPolicyItemWeeklyArrayInput)(nil)).Elem(), GetBackupCompliancePolicyPolicyItemWeeklyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupScheduleCopySettingInput)(nil)).Elem(), GetCloudBackupScheduleCopySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupScheduleCopySettingArrayInput)(nil)).Elem(), GetCloudBackupScheduleCopySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupScheduleExportInput)(nil)).Elem(), GetCloudBackupScheduleExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupScheduleExportArrayInput)(nil)).Elem(), GetCloudBackupScheduleExportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemDailyInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemDailyArrayInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemDailyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemHourlyInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemHourlyArrayInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemHourlyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemMonthlyInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemMonthlyArrayInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemMonthlyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemWeeklyInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemWeeklyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemWeeklyArrayInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemWeeklyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportBucketsResultInput)(nil)).Elem(), GetCloudBackupSnapshotExportBucketsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportBucketsResultArrayInput)(nil)).Elem(), GetCloudBackupSnapshotExportBucketsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobComponentInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobComponentArrayInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobCustomDataInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobCustomDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobCustomDataArrayInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobCustomDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultArrayInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultComponentInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobsResultComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultComponentArrayInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobsResultComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultCustomDataInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobsResultCustomDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotExportJobsResultCustomDataArrayInput)(nil)).Elem(), GetCloudBackupSnapshotExportJobsResultCustomDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotMemberInput)(nil)).Elem(), GetCloudBackupSnapshotMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotMemberArrayInput)(nil)).Elem(), GetCloudBackupSnapshotMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotRestoreJobsResultInput)(nil)).Elem(), GetCloudBackupSnapshotRestoreJobsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotRestoreJobsResultArrayInput)(nil)).Elem(), GetCloudBackupSnapshotRestoreJobsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotsResultInput)(nil)).Elem(), GetCloudBackupSnapshotsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotsResultArrayInput)(nil)).Elem(), GetCloudBackupSnapshotsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotsResultMemberInput)(nil)).Elem(), GetCloudBackupSnapshotsResultMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSnapshotsResultMemberArrayInput)(nil)).Elem(), GetCloudBackupSnapshotsResultMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleInput)(nil)).Elem(), GetCloudProviderAccessAwsIamRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleArrayInput)(nil)).Elem(), GetCloudProviderAccessAwsIamRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleFeatureUsageInput)(nil)).Elem(), GetCloudProviderAccessAwsIamRoleFeatureUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput)(nil)).Elem(), GetCloudProviderAccessAwsIamRoleFeatureUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessSetupAwsConfigInput)(nil)).Elem(), GetCloudProviderAccessSetupAwsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessSetupAwsConfigArrayInput)(nil)).Elem(), GetCloudProviderAccessSetupAwsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessSetupAzureConfigInput)(nil)).Elem(), GetCloudProviderAccessSetupAzureConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessSetupAzureConfigArrayInput)(nil)).Elem(), GetCloudProviderAccessSetupAzureConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAdvancedConfigurationInput)(nil)).Elem(), GetClusterAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAdvancedConfigurationArrayInput)(nil)).Elem(), GetClusterAdvancedConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBiConnectorConfigInput)(nil)).Elem(), GetClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBiConnectorConfigArrayInput)(nil)).Elem(), GetClusterBiConnectorConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringInput)(nil)).Elem(), GetClusterConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringArrayInput)(nil)).Elem(), GetClusterConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointInput)(nil)).Elem(), GetClusterConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), GetClusterConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), GetClusterConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), GetClusterConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterLabelInput)(nil)).Elem(), GetClusterLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterLabelArrayInput)(nil)).Elem(), GetClusterLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterOutageSimulationOutageFilterInput)(nil)).Elem(), GetClusterOutageSimulationOutageFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterOutageSimulationOutageFilterArrayInput)(nil)).Elem(), GetClusterOutageSimulationOutageFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterReplicationSpecInput)(nil)).Elem(), GetClusterReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterReplicationSpecArrayInput)(nil)).Elem(), GetClusterReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterReplicationSpecRegionsConfigInput)(nil)).Elem(), GetClusterReplicationSpecRegionsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterReplicationSpecRegionsConfigArrayInput)(nil)).Elem(), GetClusterReplicationSpecRegionsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyArrayInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyArrayInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyPolicyItemInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyPolicyPolicyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultInput)(nil)).Elem(), GetClustersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultArrayInput)(nil)).Elem(), GetClustersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultAdvancedConfigurationInput)(nil)).Elem(), GetClustersResultAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultAdvancedConfigurationArrayInput)(nil)).Elem(), GetClustersResultAdvancedConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultBiConnectorConfigInput)(nil)).Elem(), GetClustersResultBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultBiConnectorConfigArrayInput)(nil)).Elem(), GetClustersResultBiConnectorConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringInput)(nil)).Elem(), GetClustersResultConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringArrayInput)(nil)).Elem(), GetClustersResultConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointInput)(nil)).Elem(), GetClustersResultConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), GetClustersResultConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), GetClustersResultConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), GetClustersResultConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultLabelInput)(nil)).Elem(), GetClustersResultLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultLabelArrayInput)(nil)).Elem(), GetClustersResultLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultReplicationSpecInput)(nil)).Elem(), GetClustersResultReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultReplicationSpecArrayInput)(nil)).Elem(), GetClustersResultReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultReplicationSpecRegionsConfigInput)(nil)).Elem(), GetClustersResultReplicationSpecRegionsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultReplicationSpecRegionsConfigArrayInput)(nil)).Elem(), GetClustersResultReplicationSpecRegionsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyArrayInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyArrayInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleActionInput)(nil)).Elem(), GetCustomDbRoleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleActionArrayInput)(nil)).Elem(), GetCustomDbRoleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleActionResourceInput)(nil)).Elem(), GetCustomDbRoleActionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleActionResourceArrayInput)(nil)).Elem(), GetCustomDbRoleActionResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleInheritedRoleInput)(nil)).Elem(), GetCustomDbRoleInheritedRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleInheritedRoleArrayInput)(nil)).Elem(), GetCustomDbRoleInheritedRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultInput)(nil)).Elem(), GetCustomDbRolesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultArrayInput)(nil)).Elem(), GetCustomDbRolesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultActionInput)(nil)).Elem(), GetCustomDbRolesResultActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultActionArrayInput)(nil)).Elem(), GetCustomDbRolesResultActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultActionResourceInput)(nil)).Elem(), GetCustomDbRolesResultActionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultActionResourceArrayInput)(nil)).Elem(), GetCustomDbRolesResultActionResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultInheritedRoleInput)(nil)).Elem(), GetCustomDbRolesResultInheritedRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultInheritedRoleArrayInput)(nil)).Elem(), GetCustomDbRolesResultInheritedRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeAwInput)(nil)).Elem(), GetDataLakeAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeAwArrayInput)(nil)).Elem(), GetDataLakeAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeDataProcessRegionInput)(nil)).Elem(), GetDataLakeDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeDataProcessRegionArrayInput)(nil)).Elem(), GetDataLakeDataProcessRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineIngestionScheduleInput)(nil)).Elem(), GetDataLakePipelineIngestionScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineIngestionScheduleArrayInput)(nil)).Elem(), GetDataLakePipelineIngestionScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineRunStatInput)(nil)).Elem(), GetDataLakePipelineRunStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineRunStatArrayInput)(nil)).Elem(), GetDataLakePipelineRunStatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineRunsResultInput)(nil)).Elem(), GetDataLakePipelineRunsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineRunsResultArrayInput)(nil)).Elem(), GetDataLakePipelineRunsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineRunsResultStatInput)(nil)).Elem(), GetDataLakePipelineRunsResultStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineRunsResultStatArrayInput)(nil)).Elem(), GetDataLakePipelineRunsResultStatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineSinkInput)(nil)).Elem(), GetDataLakePipelineSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineSinkArrayInput)(nil)).Elem(), GetDataLakePipelineSinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineSinkPartitionFieldInput)(nil)).Elem(), GetDataLakePipelineSinkPartitionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineSinkPartitionFieldArrayInput)(nil)).Elem(), GetDataLakePipelineSinkPartitionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineSnapshotInput)(nil)).Elem(), GetDataLakePipelineSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineSnapshotArrayInput)(nil)).Elem(), GetDataLakePipelineSnapshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineSourceInput)(nil)).Elem(), GetDataLakePipelineSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineSourceArrayInput)(nil)).Elem(), GetDataLakePipelineSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineTransformationInput)(nil)).Elem(), GetDataLakePipelineTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelineTransformationArrayInput)(nil)).Elem(), GetDataLakePipelineTransformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelinesResultInput)(nil)).Elem(), GetDataLakePipelinesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelinesResultArrayInput)(nil)).Elem(), GetDataLakePipelinesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelinesResultSinkInput)(nil)).Elem(), GetDataLakePipelinesResultSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelinesResultSinkArrayInput)(nil)).Elem(), GetDataLakePipelinesResultSinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelinesResultSinkPartitionFieldInput)(nil)).Elem(), GetDataLakePipelinesResultSinkPartitionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelinesResultSinkPartitionFieldArrayInput)(nil)).Elem(), GetDataLakePipelinesResultSinkPartitionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelinesResultSourceInput)(nil)).Elem(), GetDataLakePipelinesResultSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelinesResultSourceArrayInput)(nil)).Elem(), GetDataLakePipelinesResultSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelinesResultTransformationInput)(nil)).Elem(), GetDataLakePipelinesResultTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakePipelinesResultTransformationArrayInput)(nil)).Elem(), GetDataLakePipelinesResultTransformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseInput)(nil)).Elem(), GetDataLakeStorageDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseArrayInput)(nil)).Elem(), GetDataLakeStorageDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionInput)(nil)).Elem(), GetDataLakeStorageDatabaseCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionArrayInput)(nil)).Elem(), GetDataLakeStorageDatabaseCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionDataSourceInput)(nil)).Elem(), GetDataLakeStorageDatabaseCollectionDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionDataSourceArrayInput)(nil)).Elem(), GetDataLakeStorageDatabaseCollectionDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseViewInput)(nil)).Elem(), GetDataLakeStorageDatabaseViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseViewArrayInput)(nil)).Elem(), GetDataLakeStorageDatabaseViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageStoreInput)(nil)).Elem(), GetDataLakeStorageStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageStoreArrayInput)(nil)).Elem(), GetDataLakeStorageStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultInput)(nil)).Elem(), GetDataLakesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultArrayInput)(nil)).Elem(), GetDataLakesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultAwInput)(nil)).Elem(), GetDataLakesResultAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultAwArrayInput)(nil)).Elem(), GetDataLakesResultAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultDataProcessRegionInput)(nil)).Elem(), GetDataLakesResultDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultDataProcessRegionArrayInput)(nil)).Elem(), GetDataLakesResultDataProcessRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseArrayInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionArrayInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionDataSourceInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseCollectionDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseCollectionDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseViewInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseViewArrayInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageStoreInput)(nil)).Elem(), GetDataLakesResultStorageStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageStoreArrayInput)(nil)).Elem(), GetDataLakesResultStorageStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserLabelInput)(nil)).Elem(), GetDatabaseUserLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserLabelArrayInput)(nil)).Elem(), GetDatabaseUserLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserRoleInput)(nil)).Elem(), GetDatabaseUserRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserRoleArrayInput)(nil)).Elem(), GetDatabaseUserRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserScopeInput)(nil)).Elem(), GetDatabaseUserScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserScopeArrayInput)(nil)).Elem(), GetDatabaseUserScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultInput)(nil)).Elem(), GetDatabaseUsersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultArrayInput)(nil)).Elem(), GetDatabaseUsersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultLabelInput)(nil)).Elem(), GetDatabaseUsersResultLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultLabelArrayInput)(nil)).Elem(), GetDatabaseUsersResultLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultRoleInput)(nil)).Elem(), GetDatabaseUsersResultRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultRoleArrayInput)(nil)).Elem(), GetDatabaseUsersResultRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultScopeInput)(nil)).Elem(), GetDatabaseUsersResultScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultScopeArrayInput)(nil)).Elem(), GetDatabaseUsersResultScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggerEventProcessorInput)(nil)).Elem(), GetEventTriggerEventProcessorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggerEventProcessorArrayInput)(nil)).Elem(), GetEventTriggerEventProcessorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggerEventProcessorAwsEventbridgeInput)(nil)).Elem(), GetEventTriggerEventProcessorAwsEventbridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggerEventProcessorAwsEventbridgeArrayInput)(nil)).Elem(), GetEventTriggerEventProcessorAwsEventbridgeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultInput)(nil)).Elem(), GetEventTriggersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultArrayInput)(nil)).Elem(), GetEventTriggersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultEventProcessorInput)(nil)).Elem(), GetEventTriggersResultEventProcessorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultEventProcessorArrayInput)(nil)).Elem(), GetEventTriggersResultEventProcessorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultEventProcessorAwsEventbridgeInput)(nil)).Elem(), GetEventTriggersResultEventProcessorAwsEventbridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput)(nil)).Elem(), GetEventTriggersResultEventProcessorAwsEventbridgeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceCloudProviderConfigInput)(nil)).Elem(), GetFederatedDatabaseInstanceCloudProviderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceCloudProviderConfigPtrInput)(nil)).Elem(), GetFederatedDatabaseInstanceCloudProviderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceCloudProviderConfigAwsInput)(nil)).Elem(), GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrInput)(nil)).Elem(), GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceDataProcessRegionInput)(nil)).Elem(), GetFederatedDatabaseInstanceDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceDataProcessRegionArrayInput)(nil)).Elem(), GetFederatedDatabaseInstanceDataProcessRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabaseInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabaseArrayInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabaseCollectionInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageDatabaseCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageDatabaseCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabaseViewInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageDatabaseViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageDatabaseViewArrayInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageDatabaseViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStoreInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStoreArrayInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStoreReadPreferenceInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageStoreReadPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageStoreReadPreferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayInput)(nil)).Elem(), GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultArrayInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultCloudProviderConfigInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultCloudProviderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultCloudProviderConfigAwsInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultCloudProviderConfigAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultDataProcessRegionInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultDataProcessRegionArrayInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultDataProcessRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabaseInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabaseArrayInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabaseCollectionInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabaseViewInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageDatabaseViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageDatabaseViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStoreInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStoreArrayInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayInput)(nil)).Elem(), GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedQueryLimitsResultInput)(nil)).Elem(), GetFederatedQueryLimitsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedQueryLimitsResultArrayInput)(nil)).Elem(), GetFederatedQueryLimitsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfoInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderPemFileInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfoArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderPemFileInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfoCertificateInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderPemFileInfoCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProviderPemFileInfoCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfoInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultPemFileInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultPemFileInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayInput)(nil)).Elem(), GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMappingInput)(nil)).Elem(), GetFederatedSettingsOrgConfigRoleMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMappingArrayInput)(nil)).Elem(), GetFederatedSettingsOrgConfigRoleMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentInput)(nil)).Elem(), GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayInput)(nil)).Elem(), GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigUserConflictInput)(nil)).Elem(), GetFederatedSettingsOrgConfigUserConflictArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigUserConflictArrayInput)(nil)).Elem(), GetFederatedSettingsOrgConfigUserConflictArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultArrayInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMappingInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultRoleMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMappingArrayInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultRoleMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultUserConflictInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultUserConflictArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgConfigsResultUserConflictArrayInput)(nil)).Elem(), GetFederatedSettingsOrgConfigsResultUserConflictArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingRoleAssignmentInput)(nil)).Elem(), GetFederatedSettingsOrgRoleMappingRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayInput)(nil)).Elem(), GetFederatedSettingsOrgRoleMappingRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResultInput)(nil)).Elem(), GetFederatedSettingsOrgRoleMappingsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResultArrayInput)(nil)).Elem(), GetFederatedSettingsOrgRoleMappingsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentInput)(nil)).Elem(), GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayInput)(nil)).Elem(), GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClusterConfigManagedNamespaceInput)(nil)).Elem(), GetGlobalClusterConfigManagedNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClusterConfigManagedNamespaceArrayInput)(nil)).Elem(), GetGlobalClusterConfigManagedNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapConfigurationUserToDnMappingInput)(nil)).Elem(), GetLdapConfigurationUserToDnMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapConfigurationUserToDnMappingArrayInput)(nil)).Elem(), GetLdapConfigurationUserToDnMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapVerifyLinkInput)(nil)).Elem(), GetLdapVerifyLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapVerifyLinkArrayInput)(nil)).Elem(), GetLdapVerifyLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapVerifyValidationInput)(nil)).Elem(), GetLdapVerifyValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapVerifyValidationArrayInput)(nil)).Elem(), GetLdapVerifyValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkContainersResultInput)(nil)).Elem(), GetNetworkContainersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkContainersResultArrayInput)(nil)).Elem(), GetNetworkContainersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPeeringsResultInput)(nil)).Elem(), GetNetworkPeeringsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPeeringsResultArrayInput)(nil)).Elem(), GetNetworkPeeringsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchiveCriteriaInput)(nil)).Elem(), GetOnlineArchiveCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchiveCriteriaArrayInput)(nil)).Elem(), GetOnlineArchiveCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivePartitionFieldInput)(nil)).Elem(), GetOnlineArchivePartitionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivePartitionFieldArrayInput)(nil)).Elem(), GetOnlineArchivePartitionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchiveScheduleInput)(nil)).Elem(), GetOnlineArchiveScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchiveScheduleArrayInput)(nil)).Elem(), GetOnlineArchiveScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultInput)(nil)).Elem(), GetOnlineArchivesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultArrayInput)(nil)).Elem(), GetOnlineArchivesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultCriteriaInput)(nil)).Elem(), GetOnlineArchivesResultCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultCriteriaArrayInput)(nil)).Elem(), GetOnlineArchivesResultCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultPartitionFieldInput)(nil)).Elem(), GetOnlineArchivesResultPartitionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultPartitionFieldArrayInput)(nil)).Elem(), GetOnlineArchivesResultPartitionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultScheduleInput)(nil)).Elem(), GetOnlineArchivesResultScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultScheduleArrayInput)(nil)).Elem(), GetOnlineArchivesResultScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationLinkInput)(nil)).Elem(), GetOrganizationLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationLinkArrayInput)(nil)).Elem(), GetOrganizationLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsResultInput)(nil)).Elem(), GetOrganizationsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsResultArrayInput)(nil)).Elem(), GetOrganizationsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsResultLinkInput)(nil)).Elem(), GetOrganizationsResultLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsResultLinkArrayInput)(nil)).Elem(), GetOrganizationsResultLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkEndpointServiceEndpointInput)(nil)).Elem(), GetPrivateLinkEndpointServiceEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkEndpointServiceEndpointArrayInput)(nil)).Elem(), GetPrivateLinkEndpointServiceEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultInput)(nil)).Elem(), GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayInput)(nil)).Elem(), GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlLinkInput)(nil)).Elem(), GetPrivatelinkEndpointsServiceAdlLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlLinkArrayInput)(nil)).Elem(), GetPrivatelinkEndpointsServiceAdlLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlResultInput)(nil)).Elem(), GetPrivatelinkEndpointsServiceAdlResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivatelinkEndpointsServiceAdlResultArrayInput)(nil)).Elem(), GetPrivatelinkEndpointsServiceAdlResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivatelinkEndpointsServiceServerlessResultInput)(nil)).Elem(), GetPrivatelinkEndpointsServiceServerlessResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivatelinkEndpointsServiceServerlessResultArrayInput)(nil)).Elem(), GetPrivatelinkEndpointsServiceServerlessResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectApiKeyTypeInput)(nil)).Elem(), GetProjectApiKeyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectApiKeyTypeArrayInput)(nil)).Elem(), GetProjectApiKeyTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectApiKeyProjectAssignmentInput)(nil)).Elem(), GetProjectApiKeyProjectAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectApiKeyProjectAssignmentArrayInput)(nil)).Elem(), GetProjectApiKeyProjectAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectApiKeysResultInput)(nil)).Elem(), GetProjectApiKeysResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectApiKeysResultArrayInput)(nil)).Elem(), GetProjectApiKeysResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectApiKeysResultProjectAssignmentInput)(nil)).Elem(), GetProjectApiKeysResultProjectAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectApiKeysResultProjectAssignmentArrayInput)(nil)).Elem(), GetProjectApiKeysResultProjectAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectLimitInput)(nil)).Elem(), GetProjectLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectLimitArrayInput)(nil)).Elem(), GetProjectLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTeamInput)(nil)).Elem(), GetProjectTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTeamArrayInput)(nil)).Elem(), GetProjectTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultInput)(nil)).Elem(), GetProjectsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultArrayInput)(nil)).Elem(), GetProjectsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultApiKeyInput)(nil)).Elem(), GetProjectsResultApiKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultApiKeyArrayInput)(nil)).Elem(), GetProjectsResultApiKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultLimitInput)(nil)).Elem(), GetProjectsResultLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultLimitArrayInput)(nil)).Elem(), GetProjectsResultLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultTeamInput)(nil)).Elem(), GetProjectsResultTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultTeamArrayInput)(nil)).Elem(), GetProjectsResultTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSearchIndexSynonymInput)(nil)).Elem(), GetSearchIndexSynonymArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSearchIndexSynonymArrayInput)(nil)).Elem(), GetSearchIndexSynonymArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSearchIndexesResultInput)(nil)).Elem(), GetSearchIndexesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSearchIndexesResultArrayInput)(nil)).Elem(), GetSearchIndexesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSearchIndexesResultSynonymInput)(nil)).Elem(), GetSearchIndexesResultSynonymArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSearchIndexesResultSynonymArrayInput)(nil)).Elem(), GetSearchIndexesResultSynonymArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerlessInstanceLinkInput)(nil)).Elem(), GetServerlessInstanceLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerlessInstanceLinkArrayInput)(nil)).Elem(), GetServerlessInstanceLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerlessInstancesResultInput)(nil)).Elem(), GetServerlessInstancesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerlessInstancesResultArrayInput)(nil)).Elem(), GetServerlessInstancesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerlessInstancesResultLinkInput)(nil)).Elem(), GetServerlessInstancesResultLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerlessInstancesResultLinkArrayInput)(nil)).Elem(), GetServerlessInstancesResultLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSharedTierRestoreJobsResultInput)(nil)).Elem(), GetSharedTierRestoreJobsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSharedTierRestoreJobsResultArrayInput)(nil)).Elem(), GetSharedTierRestoreJobsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSharedTierSnapshotsResultInput)(nil)).Elem(), GetSharedTierSnapshotsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSharedTierSnapshotsResultArrayInput)(nil)).Elem(), GetSharedTierSnapshotsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetThirdPartyIntegrationsResultInput)(nil)).Elem(), GetThirdPartyIntegrationsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetThirdPartyIntegrationsResultArrayInput)(nil)).Elem(), GetThirdPartyIntegrationsResultArray{})
	pulumi.RegisterOutputType(AdvancedClusterAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(AdvancedClusterAdvancedConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AdvancedClusterBiConnectorOutput{})
	pulumi.RegisterOutputType(AdvancedClusterBiConnectorPtrOutput{})
	pulumi.RegisterOutputType(AdvancedClusterBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(AdvancedClusterBiConnectorConfigPtrOutput{})
	pulumi.RegisterOutputType(AdvancedClusterConnectionStringOutput{})
	pulumi.RegisterOutputType(AdvancedClusterConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(AdvancedClusterConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(AdvancedClusterConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(AdvancedClusterConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(AdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(AdvancedClusterLabelOutput{})
	pulumi.RegisterOutputType(AdvancedClusterLabelArrayOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigArrayOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingPtrOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigAutoScalingOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigAutoScalingPtrOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput{})
	pulumi.RegisterOutputType(AdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationMatcherOutput{})
	pulumi.RegisterOutputType(AlertConfigurationMatcherArrayOutput{})
	pulumi.RegisterOutputType(AlertConfigurationMetricThresholdConfigOutput{})
	pulumi.RegisterOutputType(AlertConfigurationMetricThresholdConfigPtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationNotificationOutput{})
	pulumi.RegisterOutputType(AlertConfigurationNotificationArrayOutput{})
	pulumi.RegisterOutputType(AlertConfigurationThresholdConfigOutput{})
	pulumi.RegisterOutputType(AlertConfigurationThresholdConfigPtrOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyOnDemandPolicyItemOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyOnDemandPolicyItemPtrOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemDailyOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemDailyPtrOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemHourlyOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemHourlyPtrOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemMonthlyOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemMonthlyArrayOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemWeeklyOutput{})
	pulumi.RegisterOutputType(BackupCompliancePolicyPolicyItemWeeklyArrayOutput{})
	pulumi.RegisterOutputType(CloudBackupScheduleCopySettingOutput{})
	pulumi.RegisterOutputType(CloudBackupScheduleCopySettingArrayOutput{})
	pulumi.RegisterOutputType(CloudBackupScheduleExportOutput{})
	pulumi.RegisterOutputType(CloudBackupScheduleExportPtrOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemDailyOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemDailyPtrOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemHourlyOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemHourlyPtrOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemMonthlyOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemMonthlyArrayOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemWeeklyOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemWeeklyArrayOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotExportJobComponentOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotExportJobComponentArrayOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotExportJobCustomDataOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotExportJobCustomDataArrayOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotMemberOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotMemberArrayOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotRestoreJobDeliveryTypeConfigOutput{})
	pulumi.RegisterOutputType(CloudBackupSnapshotRestoreJobDeliveryTypeConfigPtrOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessAuthorizationAwsOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessAuthorizationAwsPtrOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessAuthorizationAzureOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessAuthorizationAzurePtrOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessAuthorizationFeatureUsageOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessAuthorizationFeatureUsageArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessFeatureUsageOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessFeatureUsageArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessSetupAwsConfigOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessSetupAwsConfigArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessSetupAzureConfigOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessSetupAzureConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(ClusterAdvancedConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClusterBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(ClusterBiConnectorConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(ClusterLabelOutput{})
	pulumi.RegisterOutputType(ClusterLabelArrayOutput{})
	pulumi.RegisterOutputType(ClusterOutageSimulationOutageFilterOutput{})
	pulumi.RegisterOutputType(ClusterOutageSimulationOutageFilterArrayOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecRegionsConfigOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecRegionsConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionArrayOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionResourceOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionResourceArrayOutput{})
	pulumi.RegisterOutputType(CustomDbRoleInheritedRoleOutput{})
	pulumi.RegisterOutputType(CustomDbRoleInheritedRoleArrayOutput{})
	pulumi.RegisterOutputType(DataLakeAwsOutput{})
	pulumi.RegisterOutputType(DataLakeAwsPtrOutput{})
	pulumi.RegisterOutputType(DataLakeDataProcessRegionOutput{})
	pulumi.RegisterOutputType(DataLakeDataProcessRegionPtrOutput{})
	pulumi.RegisterOutputType(DataLakePipelineIngestionScheduleOutput{})
	pulumi.RegisterOutputType(DataLakePipelineIngestionScheduleArrayOutput{})
	pulumi.RegisterOutputType(DataLakePipelineSinkOutput{})
	pulumi.RegisterOutputType(DataLakePipelineSinkPtrOutput{})
	pulumi.RegisterOutputType(DataLakePipelineSinkPartitionFieldOutput{})
	pulumi.RegisterOutputType(DataLakePipelineSinkPartitionFieldArrayOutput{})
	pulumi.RegisterOutputType(DataLakePipelineSnapshotOutput{})
	pulumi.RegisterOutputType(DataLakePipelineSnapshotArrayOutput{})
	pulumi.RegisterOutputType(DataLakePipelineSourceOutput{})
	pulumi.RegisterOutputType(DataLakePipelineSourcePtrOutput{})
	pulumi.RegisterOutputType(DataLakePipelineTransformationOutput{})
	pulumi.RegisterOutputType(DataLakePipelineTransformationArrayOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseArrayOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseCollectionOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseCollectionArrayOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseCollectionDataSourceOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseCollectionDataSourceArrayOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseViewOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseViewArrayOutput{})
	pulumi.RegisterOutputType(DataLakeStorageStoreOutput{})
	pulumi.RegisterOutputType(DataLakeStorageStoreArrayOutput{})
	pulumi.RegisterOutputType(DatabaseUserLabelOutput{})
	pulumi.RegisterOutputType(DatabaseUserLabelArrayOutput{})
	pulumi.RegisterOutputType(DatabaseUserRoleOutput{})
	pulumi.RegisterOutputType(DatabaseUserRoleArrayOutput{})
	pulumi.RegisterOutputType(DatabaseUserScopeOutput{})
	pulumi.RegisterOutputType(DatabaseUserScopeArrayOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAwsKmsConfigOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAwsKmsConfigPtrOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAzureKeyVaultConfigOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAzureKeyVaultConfigPtrOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestGoogleCloudKmsConfigOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestGoogleCloudKmsConfigPtrOutput{})
	pulumi.RegisterOutputType(EventTriggerEventProcessorsOutput{})
	pulumi.RegisterOutputType(EventTriggerEventProcessorsPtrOutput{})
	pulumi.RegisterOutputType(EventTriggerEventProcessorsAwsEventbridgeOutput{})
	pulumi.RegisterOutputType(EventTriggerEventProcessorsAwsEventbridgePtrOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceCloudProviderConfigOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceCloudProviderConfigPtrOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceCloudProviderConfigAwsOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceDataProcessRegionOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceDataProcessRegionPtrOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageDatabaseOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageDatabaseArrayOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageDatabaseCollectionOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageDatabaseViewOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageDatabaseViewArrayOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageStoreOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageStoreArrayOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageStoreReadPreferenceOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageStoreReadPreferencePtrOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput{})
	pulumi.RegisterOutputType(FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput{})
	pulumi.RegisterOutputType(FederatedSettingsOrgRoleMappingRoleAssignmentOutput{})
	pulumi.RegisterOutputType(FederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigCustomZoneMappingOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigCustomZoneMappingArrayOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigManagedNamespaceOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigManagedNamespaceArrayOutput{})
	pulumi.RegisterOutputType(LdapConfigurationUserToDnMappingOutput{})
	pulumi.RegisterOutputType(LdapConfigurationUserToDnMappingArrayOutput{})
	pulumi.RegisterOutputType(LdapVerifyLinkOutput{})
	pulumi.RegisterOutputType(LdapVerifyLinkArrayOutput{})
	pulumi.RegisterOutputType(LdapVerifyValidationOutput{})
	pulumi.RegisterOutputType(LdapVerifyValidationArrayOutput{})
	pulumi.RegisterOutputType(OnlineArchiveCriteriaOutput{})
	pulumi.RegisterOutputType(OnlineArchiveCriteriaPtrOutput{})
	pulumi.RegisterOutputType(OnlineArchivePartitionFieldOutput{})
	pulumi.RegisterOutputType(OnlineArchivePartitionFieldArrayOutput{})
	pulumi.RegisterOutputType(OnlineArchiveScheduleOutput{})
	pulumi.RegisterOutputType(OnlineArchiveSchedulePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkEndpointServiceEndpointOutput{})
	pulumi.RegisterOutputType(PrivateLinkEndpointServiceEndpointArrayOutput{})
	pulumi.RegisterOutputType(ProjectApiKeyTypeOutput{})
	pulumi.RegisterOutputType(ProjectApiKeyTypeArrayOutput{})
	pulumi.RegisterOutputType(ProjectApiKeyProjectAssignmentOutput{})
	pulumi.RegisterOutputType(ProjectApiKeyProjectAssignmentArrayOutput{})
	pulumi.RegisterOutputType(ProjectLimitOutput{})
	pulumi.RegisterOutputType(ProjectLimitArrayOutput{})
	pulumi.RegisterOutputType(ProjectTeamOutput{})
	pulumi.RegisterOutputType(ProjectTeamArrayOutput{})
	pulumi.RegisterOutputType(ProviderAssumeRoleOutput{})
	pulumi.RegisterOutputType(ProviderAssumeRolePtrOutput{})
	pulumi.RegisterOutputType(SearchIndexSynonymOutput{})
	pulumi.RegisterOutputType(SearchIndexSynonymArrayOutput{})
	pulumi.RegisterOutputType(ServerlessInstanceLinkOutput{})
	pulumi.RegisterOutputType(ServerlessInstanceLinkArrayOutput{})
	pulumi.RegisterOutputType(X509AuthenticationDatabaseUserCertificateOutput{})
	pulumi.RegisterOutputType(X509AuthenticationDatabaseUserCertificateArrayOutput{})
	pulumi.RegisterOutputType(Get509AuthenticationDatabaseUserCertificateOutput{})
	pulumi.RegisterOutputType(Get509AuthenticationDatabaseUserCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetAccessListApiKeysResultOutput{})
	pulumi.RegisterOutputType(GetAccessListApiKeysResultArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterAdvancedConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterBiConnectorConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterConnectionStringOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterLabelOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterLabelArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigAnalyticsSpecsPtrOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigAutoScalingOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigAutoScalingArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigElectableSpecsPtrOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsOutput{})
	pulumi.RegisterOutputType(GetAdvancedClusterReplicationSpecRegionConfigReadOnlySpecsPtrOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultAdvancedConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultBiConnectorConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultConnectionStringOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultLabelOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultLabelArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsAutoScalingArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigAnalyticsSpecsPtrOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigAutoScalingArrayOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigElectableSpecsPtrOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsOutput{})
	pulumi.RegisterOutputType(GetAdvancedClustersResultReplicationSpecRegionConfigReadOnlySpecsPtrOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMatcherOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMatcherArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMetricThresholdConfigOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMetricThresholdConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationNotificationOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationNotificationArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationOutputOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationOutputArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationThresholdConfigOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationThresholdConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsListOptionOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsListOptionArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultMatcherOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultMatcherArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultMetricThresholdConfigOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultMetricThresholdConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultNotificationOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultNotificationArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultOutputTypeOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultOutputTypeArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultThresholdConfigOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationsResultThresholdConfigArrayOutput{})
	pulumi.RegisterOutputType(GetApiKeysResultOutput{})
	pulumi.RegisterOutputType(GetApiKeysResultArrayOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyOnDemandPolicyItemOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyOnDemandPolicyItemPtrOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemDailyOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemDailyPtrOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemHourlyOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemHourlyPtrOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemMonthlyOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemMonthlyArrayOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemWeeklyOutput{})
	pulumi.RegisterOutputType(GetBackupCompliancePolicyPolicyItemWeeklyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupScheduleCopySettingOutput{})
	pulumi.RegisterOutputType(GetCloudBackupScheduleCopySettingArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupScheduleExportOutput{})
	pulumi.RegisterOutputType(GetCloudBackupScheduleExportArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemDailyOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemDailyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemHourlyOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemHourlyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemMonthlyOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemMonthlyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemWeeklyOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemWeeklyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportBucketsResultOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportBucketsResultArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobComponentOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobComponentArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobCustomDataOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobCustomDataArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobsResultOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobsResultArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobsResultComponentOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobsResultComponentArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobsResultCustomDataOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotExportJobsResultCustomDataArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotMemberOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotMemberArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotRestoreJobsResultOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotRestoreJobsResultArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotsResultOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotsResultArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotsResultMemberOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSnapshotsResultMemberArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessAwsIamRoleOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessAwsIamRoleArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessAwsIamRoleFeatureUsageOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessSetupAwsConfigOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessSetupAwsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessSetupAzureConfigOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessSetupAzureConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(GetClusterAdvancedConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetClusterBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(GetClusterBiConnectorConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetClusterLabelOutput{})
	pulumi.RegisterOutputType(GetClusterLabelArrayOutput{})
	pulumi.RegisterOutputType(GetClusterOutageSimulationOutageFilterOutput{})
	pulumi.RegisterOutputType(GetClusterOutageSimulationOutageFilterArrayOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecRegionsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecRegionsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultOutput{})
	pulumi.RegisterOutputType(GetClustersResultArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(GetClustersResultAdvancedConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(GetClustersResultBiConnectorConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultLabelOutput{})
	pulumi.RegisterOutputType(GetClustersResultLabelArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecRegionsConfigOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecRegionsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionResourceOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionResourceArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleInheritedRoleOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleInheritedRoleArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionResourceOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionResourceArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultInheritedRoleOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultInheritedRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeAwOutput{})
	pulumi.RegisterOutputType(GetDataLakeAwArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeDataProcessRegionOutput{})
	pulumi.RegisterOutputType(GetDataLakeDataProcessRegionArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineIngestionScheduleOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineIngestionScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineRunStatOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineRunStatArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineRunsResultOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineRunsResultArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineRunsResultStatOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineRunsResultStatArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineSinkOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineSinkArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineSinkPartitionFieldOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineSinkPartitionFieldArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineSnapshotOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineSnapshotArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineSourceOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineSourceArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineTransformationOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelineTransformationArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelinesResultOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelinesResultArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelinesResultSinkOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelinesResultSinkArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelinesResultSinkPartitionFieldOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelinesResultSinkPartitionFieldArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelinesResultSourceOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelinesResultSourceArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelinesResultTransformationOutput{})
	pulumi.RegisterOutputType(GetDataLakePipelinesResultTransformationArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseCollectionOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseCollectionDataSourceOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseViewOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseViewArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageStoreOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageStoreArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultAwOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultAwArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultDataProcessRegionOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultDataProcessRegionArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseCollectionOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseCollectionDataSourceOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseViewOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseViewArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageStoreOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageStoreArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserLabelOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserLabelArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserRoleOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserScopeOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserScopeArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultLabelOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultLabelArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultRoleOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultScopeOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultScopeArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggerEventProcessorOutput{})
	pulumi.RegisterOutputType(GetEventTriggerEventProcessorArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggerEventProcessorAwsEventbridgeOutput{})
	pulumi.RegisterOutputType(GetEventTriggerEventProcessorAwsEventbridgeArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultEventProcessorOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultEventProcessorArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultEventProcessorAwsEventbridgeOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceCloudProviderConfigOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceCloudProviderConfigPtrOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceCloudProviderConfigAwsOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceCloudProviderConfigAwsPtrOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceDataProcessRegionOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceDataProcessRegionArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageDatabaseOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageDatabaseCollectionOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageDatabaseCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageDatabaseCollectionDataSourceArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageDatabaseViewOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageDatabaseViewArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageStoreOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageStoreArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageStoreReadPreferenceOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageStoreReadPreferenceArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTagArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultCloudProviderConfigOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultCloudProviderConfigAwsOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultDataProcessRegionOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultDataProcessRegionArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageDatabaseOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageDatabaseCollectionOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageDatabaseCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageDatabaseCollectionDataSourceArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageDatabaseViewOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageDatabaseViewArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageStoreOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageStoreArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagOutput{})
	pulumi.RegisterOutputType(GetFederatedDatabaseInstancesResultStorageStoreReadPreferenceTagSetTagArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedQueryLimitsResultOutput{})
	pulumi.RegisterOutputType(GetFederatedQueryLimitsResultArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgRoleMappingRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderAssociatedOrgUserConflictArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderPemFileInfoOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderPemFileInfoArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderPemFileInfoCertificateOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProviderPemFileInfoCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgRoleMappingRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultAssociatedOrgUserConflictArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultPemFileInfoOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultPemFileInfoArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsIdentityProvidersResultPemFileInfoCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigRoleMappingOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigRoleMappingArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigRoleMappingRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigUserConflictOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigUserConflictArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultRoleMappingOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultRoleMappingArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultRoleMappingRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultUserConflictOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgConfigsResultUserConflictArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgRoleMappingRoleAssignmentOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgRoleMappingRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgRoleMappingsResultOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgRoleMappingsResultArrayOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentOutput{})
	pulumi.RegisterOutputType(GetFederatedSettingsOrgRoleMappingsResultRoleAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClusterConfigManagedNamespaceOutput{})
	pulumi.RegisterOutputType(GetGlobalClusterConfigManagedNamespaceArrayOutput{})
	pulumi.RegisterOutputType(GetLdapConfigurationUserToDnMappingOutput{})
	pulumi.RegisterOutputType(GetLdapConfigurationUserToDnMappingArrayOutput{})
	pulumi.RegisterOutputType(GetLdapVerifyLinkOutput{})
	pulumi.RegisterOutputType(GetLdapVerifyLinkArrayOutput{})
	pulumi.RegisterOutputType(GetLdapVerifyValidationOutput{})
	pulumi.RegisterOutputType(GetLdapVerifyValidationArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkContainersResultOutput{})
	pulumi.RegisterOutputType(GetNetworkContainersResultArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkPeeringsResultOutput{})
	pulumi.RegisterOutputType(GetNetworkPeeringsResultArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchiveCriteriaOutput{})
	pulumi.RegisterOutputType(GetOnlineArchiveCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivePartitionFieldOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivePartitionFieldArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchiveScheduleOutput{})
	pulumi.RegisterOutputType(GetOnlineArchiveScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultCriteriaOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultPartitionFieldOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultPartitionFieldArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultScheduleOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationLinkOutput{})
	pulumi.RegisterOutputType(GetOrganizationLinkArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationsResultOutput{})
	pulumi.RegisterOutputType(GetOrganizationsResultArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationsResultLinkOutput{})
	pulumi.RegisterOutputType(GetOrganizationsResultLinkArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkEndpointServiceEndpointOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkEndpointServiceEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultOutput{})
	pulumi.RegisterOutputType(GetPrivatelinkEndpointServiceDataFederationOnlineArchivesResultArrayOutput{})
	pulumi.RegisterOutputType(GetPrivatelinkEndpointsServiceAdlLinkOutput{})
	pulumi.RegisterOutputType(GetPrivatelinkEndpointsServiceAdlLinkArrayOutput{})
	pulumi.RegisterOutputType(GetPrivatelinkEndpointsServiceAdlResultOutput{})
	pulumi.RegisterOutputType(GetPrivatelinkEndpointsServiceAdlResultArrayOutput{})
	pulumi.RegisterOutputType(GetPrivatelinkEndpointsServiceServerlessResultOutput{})
	pulumi.RegisterOutputType(GetPrivatelinkEndpointsServiceServerlessResultArrayOutput{})
	pulumi.RegisterOutputType(GetProjectApiKeyTypeOutput{})
	pulumi.RegisterOutputType(GetProjectApiKeyTypeArrayOutput{})
	pulumi.RegisterOutputType(GetProjectApiKeyProjectAssignmentOutput{})
	pulumi.RegisterOutputType(GetProjectApiKeyProjectAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetProjectApiKeysResultOutput{})
	pulumi.RegisterOutputType(GetProjectApiKeysResultArrayOutput{})
	pulumi.RegisterOutputType(GetProjectApiKeysResultProjectAssignmentOutput{})
	pulumi.RegisterOutputType(GetProjectApiKeysResultProjectAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetProjectLimitOutput{})
	pulumi.RegisterOutputType(GetProjectLimitArrayOutput{})
	pulumi.RegisterOutputType(GetProjectTeamOutput{})
	pulumi.RegisterOutputType(GetProjectTeamArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsResultOutput{})
	pulumi.RegisterOutputType(GetProjectsResultArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsResultApiKeyOutput{})
	pulumi.RegisterOutputType(GetProjectsResultApiKeyArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsResultLimitOutput{})
	pulumi.RegisterOutputType(GetProjectsResultLimitArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsResultTeamOutput{})
	pulumi.RegisterOutputType(GetProjectsResultTeamArrayOutput{})
	pulumi.RegisterOutputType(GetSearchIndexSynonymOutput{})
	pulumi.RegisterOutputType(GetSearchIndexSynonymArrayOutput{})
	pulumi.RegisterOutputType(GetSearchIndexesResultOutput{})
	pulumi.RegisterOutputType(GetSearchIndexesResultArrayOutput{})
	pulumi.RegisterOutputType(GetSearchIndexesResultSynonymOutput{})
	pulumi.RegisterOutputType(GetSearchIndexesResultSynonymArrayOutput{})
	pulumi.RegisterOutputType(GetServerlessInstanceLinkOutput{})
	pulumi.RegisterOutputType(GetServerlessInstanceLinkArrayOutput{})
	pulumi.RegisterOutputType(GetServerlessInstancesResultOutput{})
	pulumi.RegisterOutputType(GetServerlessInstancesResultArrayOutput{})
	pulumi.RegisterOutputType(GetServerlessInstancesResultLinkOutput{})
	pulumi.RegisterOutputType(GetServerlessInstancesResultLinkArrayOutput{})
	pulumi.RegisterOutputType(GetSharedTierRestoreJobsResultOutput{})
	pulumi.RegisterOutputType(GetSharedTierRestoreJobsResultArrayOutput{})
	pulumi.RegisterOutputType(GetSharedTierSnapshotsResultOutput{})
	pulumi.RegisterOutputType(GetSharedTierSnapshotsResultArrayOutput{})
	pulumi.RegisterOutputType(GetThirdPartyIntegrationsResultOutput{})
	pulumi.RegisterOutputType(GetThirdPartyIntegrationsResultArrayOutput{})
}
