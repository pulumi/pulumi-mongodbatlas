// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// `.EncryptionAtRest` Allows management of encryption at rest for an Atlas project with one of the following providers:
//
// [Amazon Web Services Key Management Service](https://docs.atlas.mongodb.com/security-aws-kms/#security-aws-kms)
// [Azure Key Vault](https://docs.atlas.mongodb.com/security-azure-kms/#security-azure-kms)
// [Google Cloud KMS](https://docs.atlas.mongodb.com/security-gcp-kms/#security-gcp-kms)
//
// After configuring at least one Encryption at Rest provider for the Atlas project, Project Owners can enable Encryption at Rest for each Atlas cluster for which they require encryption. The Encryption at Rest provider does not have to match the cluster cloud service provider.
//
// Atlas does not automatically rotate user-managed encryption keys. Defer to your preferred Encryption at Rest providerâ€™s documentation and guidance for best practices on key rotation. Atlas automatically creates a 365-day key rotation alert when you configure Encryption at Rest using your Key Management in an Atlas project.
//
// See [Encryption at Rest](https://docs.atlas.mongodb.com/security-kms-encryption/index.html) for more information, including prerequisites and restrictions.
//
// > **IMPORTANT** Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default.
//
// > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
type EncryptionAtRest struct {
	pulumi.CustomResourceState

	// Specifies AWS KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
	AwsKms EncryptionAtRestAwsKmsPtrOutput `pulumi:"awsKms"`
	// Specifies Azure Key Vault configuration details and whether Encryption at Rest is enabled for an Atlas project.
	AzureKeyVault EncryptionAtRestAzureKeyVaultPtrOutput `pulumi:"azureKeyVault"`
	// Specifies GCP KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
	GoogleCloudKms EncryptionAtRestGoogleCloudKmsPtrOutput `pulumi:"googleCloudKms"`
	// The unique identifier for the project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
}

// NewEncryptionAtRest registers a new resource with the given unique name, arguments, and options.
func NewEncryptionAtRest(ctx *pulumi.Context,
	name string, args *EncryptionAtRestArgs, opts ...pulumi.ResourceOption) (*EncryptionAtRest, error) {
	if args == nil || args.ProjectId == nil {
		return nil, errors.New("missing required argument 'ProjectId'")
	}
	if args == nil {
		args = &EncryptionAtRestArgs{}
	}
	var resource EncryptionAtRest
	err := ctx.RegisterResource("mongodbatlas:index/encryptionAtRest:EncryptionAtRest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEncryptionAtRest gets an existing EncryptionAtRest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEncryptionAtRest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EncryptionAtRestState, opts ...pulumi.ResourceOption) (*EncryptionAtRest, error) {
	var resource EncryptionAtRest
	err := ctx.ReadResource("mongodbatlas:index/encryptionAtRest:EncryptionAtRest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EncryptionAtRest resources.
type encryptionAtRestState struct {
	// Specifies AWS KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
	AwsKms *EncryptionAtRestAwsKms `pulumi:"awsKms"`
	// Specifies Azure Key Vault configuration details and whether Encryption at Rest is enabled for an Atlas project.
	AzureKeyVault *EncryptionAtRestAzureKeyVault `pulumi:"azureKeyVault"`
	// Specifies GCP KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
	GoogleCloudKms *EncryptionAtRestGoogleCloudKms `pulumi:"googleCloudKms"`
	// The unique identifier for the project.
	ProjectId *string `pulumi:"projectId"`
}

type EncryptionAtRestState struct {
	// Specifies AWS KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
	AwsKms EncryptionAtRestAwsKmsPtrInput
	// Specifies Azure Key Vault configuration details and whether Encryption at Rest is enabled for an Atlas project.
	AzureKeyVault EncryptionAtRestAzureKeyVaultPtrInput
	// Specifies GCP KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
	GoogleCloudKms EncryptionAtRestGoogleCloudKmsPtrInput
	// The unique identifier for the project.
	ProjectId pulumi.StringPtrInput
}

func (EncryptionAtRestState) ElementType() reflect.Type {
	return reflect.TypeOf((*encryptionAtRestState)(nil)).Elem()
}

type encryptionAtRestArgs struct {
	// Specifies AWS KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
	AwsKms *EncryptionAtRestAwsKms `pulumi:"awsKms"`
	// Specifies Azure Key Vault configuration details and whether Encryption at Rest is enabled for an Atlas project.
	AzureKeyVault *EncryptionAtRestAzureKeyVault `pulumi:"azureKeyVault"`
	// Specifies GCP KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
	GoogleCloudKms *EncryptionAtRestGoogleCloudKms `pulumi:"googleCloudKms"`
	// The unique identifier for the project.
	ProjectId string `pulumi:"projectId"`
}

// The set of arguments for constructing a EncryptionAtRest resource.
type EncryptionAtRestArgs struct {
	// Specifies AWS KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
	AwsKms EncryptionAtRestAwsKmsPtrInput
	// Specifies Azure Key Vault configuration details and whether Encryption at Rest is enabled for an Atlas project.
	AzureKeyVault EncryptionAtRestAzureKeyVaultPtrInput
	// Specifies GCP KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
	GoogleCloudKms EncryptionAtRestGoogleCloudKmsPtrInput
	// The unique identifier for the project.
	ProjectId pulumi.StringInput
}

func (EncryptionAtRestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*encryptionAtRestArgs)(nil)).Elem()
}
