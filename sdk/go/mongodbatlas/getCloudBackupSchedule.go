// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Data Source: CloudBackupSchedule
//
// `CloudBackupSchedule` provides a Cloud Backup Schedule datasource. An Atlas Cloud Backup Schedule provides the current cloud backup schedule for the cluster.
//
// > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
func LookupCloudBackupSchedule(ctx *pulumi.Context, args *LookupCloudBackupScheduleArgs, opts ...pulumi.InvokeOption) (*LookupCloudBackupScheduleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCloudBackupScheduleResult
	err := ctx.Invoke("mongodbatlas:index/getCloudBackupSchedule:getCloudBackupSchedule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudBackupSchedule.
type LookupCloudBackupScheduleArgs struct {
	// The name of the Atlas cluster that contains the snapshots backup policy you want to retrieve.
	ClusterName string `pulumi:"clusterName"`
	// The unique identifier of the project for the Atlas cluster.
	ProjectId string `pulumi:"projectId"`
	// Set this field to `true` to allow the data source to use the latest schema that populates `copy_settings.#.zone_id` instead of the deprecated `copy_settings.#.replication_spec_id`. These fields also enable you to reference cluster zones using independent shard scaling, which no longer supports `replication_spec.*.id`. To learn more, see the 1.18.0 upgrade guide.
	UseZoneIdForCopySettings *bool `pulumi:"useZoneIdForCopySettings"`
}

// A collection of values returned by getCloudBackupSchedule.
type LookupCloudBackupScheduleResult struct {
	// Flag that indicates whether automatic export of cloud backup snapshots to the AWS bucket is enabled. Value can be one of the following:
	// * true - enables automatic export of cloud backup snapshots to the AWS bucket
	// * false - disables automatic export of cloud backup snapshots to the AWS bucket (default)
	AutoExportEnabled bool `pulumi:"autoExportEnabled"`
	// Unique identifier of the Atlas cluster.
	ClusterId   string `pulumi:"clusterId"`
	ClusterName string `pulumi:"clusterName"`
	// List that contains a document for each copy setting item in the desired backup policy. See below
	CopySettings []GetCloudBackupScheduleCopySetting `pulumi:"copySettings"`
	// Policy for automatically exporting Cloud Backup Snapshots. See below
	Exports []GetCloudBackupScheduleExport `pulumi:"exports"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the backup policy.
	IdPolicy string `pulumi:"idPolicy"`
	// UTC ISO 8601 formatted point in time when Atlas will take the next snapshot.
	NextSnapshot string `pulumi:"nextSnapshot"`
	// (Optional) Daily policy item. See below
	PolicyItemDailies []GetCloudBackupSchedulePolicyItemDaily `pulumi:"policyItemDailies"`
	// (Optional) Hourly policy item. See below
	PolicyItemHourlies []GetCloudBackupSchedulePolicyItemHourly `pulumi:"policyItemHourlies"`
	// (Optional) Monthly policy item. See below
	PolicyItemMonthlies []GetCloudBackupSchedulePolicyItemMonthly `pulumi:"policyItemMonthlies"`
	// (Optional) Weekly policy item. See below
	PolicyItemWeeklies []GetCloudBackupSchedulePolicyItemWeekly `pulumi:"policyItemWeeklies"`
	// (Optional) Yearly policy item. See below
	PolicyItemYearlies []GetCloudBackupSchedulePolicyItemYearly `pulumi:"policyItemYearlies"`
	ProjectId          string                                   `pulumi:"projectId"`
	// UTC Hour of day between 0 and 23 representing which hour of the day that Atlas takes a snapshot.
	ReferenceHourOfDay int `pulumi:"referenceHourOfDay"`
	// UTC Minute of day between 0 and 59 representing which minute of the `referenceHourOfDay` that Atlas takes the snapshot.
	ReferenceMinuteOfHour int `pulumi:"referenceMinuteOfHour"`
	// Specifies a restore window in days for cloud backup to maintain.
	RestoreWindowDays int `pulumi:"restoreWindowDays"`
	// Specify true to use organization and project names instead of organization and project UUIDs in the path for the metadata files that Atlas uploads to your S3 bucket after it finishes exporting the snapshots. To learn more about the metadata files that Atlas uploads, see [Export Cloud Backup Snapshot](https://www.mongodb.com/docs/atlas/backup/cloud-backup/export/#std-label-cloud-provider-snapshot-export).
	UseOrgAndGroupNamesInExportPrefix bool  `pulumi:"useOrgAndGroupNamesInExportPrefix"`
	UseZoneIdForCopySettings          *bool `pulumi:"useZoneIdForCopySettings"`
}

func LookupCloudBackupScheduleOutput(ctx *pulumi.Context, args LookupCloudBackupScheduleOutputArgs, opts ...pulumi.InvokeOption) LookupCloudBackupScheduleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudBackupScheduleResultOutput, error) {
			args := v.(LookupCloudBackupScheduleArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupCloudBackupScheduleResult
			secret, err := ctx.InvokePackageRaw("mongodbatlas:index/getCloudBackupSchedule:getCloudBackupSchedule", args, &rv, "", opts...)
			if err != nil {
				return LookupCloudBackupScheduleResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCloudBackupScheduleResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCloudBackupScheduleResultOutput), nil
			}
			return output, nil
		}).(LookupCloudBackupScheduleResultOutput)
}

// A collection of arguments for invoking getCloudBackupSchedule.
type LookupCloudBackupScheduleOutputArgs struct {
	// The name of the Atlas cluster that contains the snapshots backup policy you want to retrieve.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The unique identifier of the project for the Atlas cluster.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Set this field to `true` to allow the data source to use the latest schema that populates `copy_settings.#.zone_id` instead of the deprecated `copy_settings.#.replication_spec_id`. These fields also enable you to reference cluster zones using independent shard scaling, which no longer supports `replication_spec.*.id`. To learn more, see the 1.18.0 upgrade guide.
	UseZoneIdForCopySettings pulumi.BoolPtrInput `pulumi:"useZoneIdForCopySettings"`
}

func (LookupCloudBackupScheduleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudBackupScheduleArgs)(nil)).Elem()
}

// A collection of values returned by getCloudBackupSchedule.
type LookupCloudBackupScheduleResultOutput struct{ *pulumi.OutputState }

func (LookupCloudBackupScheduleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudBackupScheduleResult)(nil)).Elem()
}

func (o LookupCloudBackupScheduleResultOutput) ToLookupCloudBackupScheduleResultOutput() LookupCloudBackupScheduleResultOutput {
	return o
}

func (o LookupCloudBackupScheduleResultOutput) ToLookupCloudBackupScheduleResultOutputWithContext(ctx context.Context) LookupCloudBackupScheduleResultOutput {
	return o
}

// Flag that indicates whether automatic export of cloud backup snapshots to the AWS bucket is enabled. Value can be one of the following:
// * true - enables automatic export of cloud backup snapshots to the AWS bucket
// * false - disables automatic export of cloud backup snapshots to the AWS bucket (default)
func (o LookupCloudBackupScheduleResultOutput) AutoExportEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) bool { return v.AutoExportEnabled }).(pulumi.BoolOutput)
}

// Unique identifier of the Atlas cluster.
func (o LookupCloudBackupScheduleResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupCloudBackupScheduleResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

// List that contains a document for each copy setting item in the desired backup policy. See below
func (o LookupCloudBackupScheduleResultOutput) CopySettings() GetCloudBackupScheduleCopySettingArrayOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) []GetCloudBackupScheduleCopySetting { return v.CopySettings }).(GetCloudBackupScheduleCopySettingArrayOutput)
}

// Policy for automatically exporting Cloud Backup Snapshots. See below
func (o LookupCloudBackupScheduleResultOutput) Exports() GetCloudBackupScheduleExportArrayOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) []GetCloudBackupScheduleExport { return v.Exports }).(GetCloudBackupScheduleExportArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCloudBackupScheduleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy.
func (o LookupCloudBackupScheduleResultOutput) IdPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) string { return v.IdPolicy }).(pulumi.StringOutput)
}

// UTC ISO 8601 formatted point in time when Atlas will take the next snapshot.
func (o LookupCloudBackupScheduleResultOutput) NextSnapshot() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) string { return v.NextSnapshot }).(pulumi.StringOutput)
}

// (Optional) Daily policy item. See below
func (o LookupCloudBackupScheduleResultOutput) PolicyItemDailies() GetCloudBackupSchedulePolicyItemDailyArrayOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) []GetCloudBackupSchedulePolicyItemDaily {
		return v.PolicyItemDailies
	}).(GetCloudBackupSchedulePolicyItemDailyArrayOutput)
}

// (Optional) Hourly policy item. See below
func (o LookupCloudBackupScheduleResultOutput) PolicyItemHourlies() GetCloudBackupSchedulePolicyItemHourlyArrayOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) []GetCloudBackupSchedulePolicyItemHourly {
		return v.PolicyItemHourlies
	}).(GetCloudBackupSchedulePolicyItemHourlyArrayOutput)
}

// (Optional) Monthly policy item. See below
func (o LookupCloudBackupScheduleResultOutput) PolicyItemMonthlies() GetCloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) []GetCloudBackupSchedulePolicyItemMonthly {
		return v.PolicyItemMonthlies
	}).(GetCloudBackupSchedulePolicyItemMonthlyArrayOutput)
}

// (Optional) Weekly policy item. See below
func (o LookupCloudBackupScheduleResultOutput) PolicyItemWeeklies() GetCloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) []GetCloudBackupSchedulePolicyItemWeekly {
		return v.PolicyItemWeeklies
	}).(GetCloudBackupSchedulePolicyItemWeeklyArrayOutput)
}

// (Optional) Yearly policy item. See below
func (o LookupCloudBackupScheduleResultOutput) PolicyItemYearlies() GetCloudBackupSchedulePolicyItemYearlyArrayOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) []GetCloudBackupSchedulePolicyItemYearly {
		return v.PolicyItemYearlies
	}).(GetCloudBackupSchedulePolicyItemYearlyArrayOutput)
}

func (o LookupCloudBackupScheduleResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// UTC Hour of day between 0 and 23 representing which hour of the day that Atlas takes a snapshot.
func (o LookupCloudBackupScheduleResultOutput) ReferenceHourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) int { return v.ReferenceHourOfDay }).(pulumi.IntOutput)
}

// UTC Minute of day between 0 and 59 representing which minute of the `referenceHourOfDay` that Atlas takes the snapshot.
func (o LookupCloudBackupScheduleResultOutput) ReferenceMinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) int { return v.ReferenceMinuteOfHour }).(pulumi.IntOutput)
}

// Specifies a restore window in days for cloud backup to maintain.
func (o LookupCloudBackupScheduleResultOutput) RestoreWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) int { return v.RestoreWindowDays }).(pulumi.IntOutput)
}

// Specify true to use organization and project names instead of organization and project UUIDs in the path for the metadata files that Atlas uploads to your S3 bucket after it finishes exporting the snapshots. To learn more about the metadata files that Atlas uploads, see [Export Cloud Backup Snapshot](https://www.mongodb.com/docs/atlas/backup/cloud-backup/export/#std-label-cloud-provider-snapshot-export).
func (o LookupCloudBackupScheduleResultOutput) UseOrgAndGroupNamesInExportPrefix() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) bool { return v.UseOrgAndGroupNamesInExportPrefix }).(pulumi.BoolOutput)
}

func (o LookupCloudBackupScheduleResultOutput) UseZoneIdForCopySettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupCloudBackupScheduleResult) *bool { return v.UseZoneIdForCopySettings }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudBackupScheduleResultOutput{})
}
