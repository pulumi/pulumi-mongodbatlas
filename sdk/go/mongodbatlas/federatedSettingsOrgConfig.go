// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FederatedSettingsOrgConfig struct {
	pulumi.CustomResourceState

	DomainAllowLists         pulumi.StringArrayOutput `pulumi:"domainAllowLists"`
	DomainRestrictionEnabled pulumi.BoolOutput        `pulumi:"domainRestrictionEnabled"`
	FederationSettingsId     pulumi.StringOutput      `pulumi:"federationSettingsId"`
	IdentityProviderId       pulumi.StringOutput      `pulumi:"identityProviderId"`
	OrgId                    pulumi.StringOutput      `pulumi:"orgId"`
	PostAuthRoleGrants       pulumi.StringArrayOutput `pulumi:"postAuthRoleGrants"`
}

// NewFederatedSettingsOrgConfig registers a new resource with the given unique name, arguments, and options.
func NewFederatedSettingsOrgConfig(ctx *pulumi.Context,
	name string, args *FederatedSettingsOrgConfigArgs, opts ...pulumi.ResourceOption) (*FederatedSettingsOrgConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainRestrictionEnabled == nil {
		return nil, errors.New("invalid value for required argument 'DomainRestrictionEnabled'")
	}
	if args.FederationSettingsId == nil {
		return nil, errors.New("invalid value for required argument 'FederationSettingsId'")
	}
	if args.IdentityProviderId == nil {
		return nil, errors.New("invalid value for required argument 'IdentityProviderId'")
	}
	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FederatedSettingsOrgConfig
	err := ctx.RegisterResource("mongodbatlas:index/federatedSettingsOrgConfig:FederatedSettingsOrgConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFederatedSettingsOrgConfig gets an existing FederatedSettingsOrgConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFederatedSettingsOrgConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FederatedSettingsOrgConfigState, opts ...pulumi.ResourceOption) (*FederatedSettingsOrgConfig, error) {
	var resource FederatedSettingsOrgConfig
	err := ctx.ReadResource("mongodbatlas:index/federatedSettingsOrgConfig:FederatedSettingsOrgConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FederatedSettingsOrgConfig resources.
type federatedSettingsOrgConfigState struct {
	DomainAllowLists         []string `pulumi:"domainAllowLists"`
	DomainRestrictionEnabled *bool    `pulumi:"domainRestrictionEnabled"`
	FederationSettingsId     *string  `pulumi:"federationSettingsId"`
	IdentityProviderId       *string  `pulumi:"identityProviderId"`
	OrgId                    *string  `pulumi:"orgId"`
	PostAuthRoleGrants       []string `pulumi:"postAuthRoleGrants"`
}

type FederatedSettingsOrgConfigState struct {
	DomainAllowLists         pulumi.StringArrayInput
	DomainRestrictionEnabled pulumi.BoolPtrInput
	FederationSettingsId     pulumi.StringPtrInput
	IdentityProviderId       pulumi.StringPtrInput
	OrgId                    pulumi.StringPtrInput
	PostAuthRoleGrants       pulumi.StringArrayInput
}

func (FederatedSettingsOrgConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*federatedSettingsOrgConfigState)(nil)).Elem()
}

type federatedSettingsOrgConfigArgs struct {
	DomainAllowLists         []string `pulumi:"domainAllowLists"`
	DomainRestrictionEnabled bool     `pulumi:"domainRestrictionEnabled"`
	FederationSettingsId     string   `pulumi:"federationSettingsId"`
	IdentityProviderId       string   `pulumi:"identityProviderId"`
	OrgId                    string   `pulumi:"orgId"`
	PostAuthRoleGrants       []string `pulumi:"postAuthRoleGrants"`
}

// The set of arguments for constructing a FederatedSettingsOrgConfig resource.
type FederatedSettingsOrgConfigArgs struct {
	DomainAllowLists         pulumi.StringArrayInput
	DomainRestrictionEnabled pulumi.BoolInput
	FederationSettingsId     pulumi.StringInput
	IdentityProviderId       pulumi.StringInput
	OrgId                    pulumi.StringInput
	PostAuthRoleGrants       pulumi.StringArrayInput
}

func (FederatedSettingsOrgConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*federatedSettingsOrgConfigArgs)(nil)).Elem()
}

type FederatedSettingsOrgConfigInput interface {
	pulumi.Input

	ToFederatedSettingsOrgConfigOutput() FederatedSettingsOrgConfigOutput
	ToFederatedSettingsOrgConfigOutputWithContext(ctx context.Context) FederatedSettingsOrgConfigOutput
}

func (*FederatedSettingsOrgConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**FederatedSettingsOrgConfig)(nil)).Elem()
}

func (i *FederatedSettingsOrgConfig) ToFederatedSettingsOrgConfigOutput() FederatedSettingsOrgConfigOutput {
	return i.ToFederatedSettingsOrgConfigOutputWithContext(context.Background())
}

func (i *FederatedSettingsOrgConfig) ToFederatedSettingsOrgConfigOutputWithContext(ctx context.Context) FederatedSettingsOrgConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedSettingsOrgConfigOutput)
}

// FederatedSettingsOrgConfigArrayInput is an input type that accepts FederatedSettingsOrgConfigArray and FederatedSettingsOrgConfigArrayOutput values.
// You can construct a concrete instance of `FederatedSettingsOrgConfigArrayInput` via:
//
//	FederatedSettingsOrgConfigArray{ FederatedSettingsOrgConfigArgs{...} }
type FederatedSettingsOrgConfigArrayInput interface {
	pulumi.Input

	ToFederatedSettingsOrgConfigArrayOutput() FederatedSettingsOrgConfigArrayOutput
	ToFederatedSettingsOrgConfigArrayOutputWithContext(context.Context) FederatedSettingsOrgConfigArrayOutput
}

type FederatedSettingsOrgConfigArray []FederatedSettingsOrgConfigInput

func (FederatedSettingsOrgConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FederatedSettingsOrgConfig)(nil)).Elem()
}

func (i FederatedSettingsOrgConfigArray) ToFederatedSettingsOrgConfigArrayOutput() FederatedSettingsOrgConfigArrayOutput {
	return i.ToFederatedSettingsOrgConfigArrayOutputWithContext(context.Background())
}

func (i FederatedSettingsOrgConfigArray) ToFederatedSettingsOrgConfigArrayOutputWithContext(ctx context.Context) FederatedSettingsOrgConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedSettingsOrgConfigArrayOutput)
}

// FederatedSettingsOrgConfigMapInput is an input type that accepts FederatedSettingsOrgConfigMap and FederatedSettingsOrgConfigMapOutput values.
// You can construct a concrete instance of `FederatedSettingsOrgConfigMapInput` via:
//
//	FederatedSettingsOrgConfigMap{ "key": FederatedSettingsOrgConfigArgs{...} }
type FederatedSettingsOrgConfigMapInput interface {
	pulumi.Input

	ToFederatedSettingsOrgConfigMapOutput() FederatedSettingsOrgConfigMapOutput
	ToFederatedSettingsOrgConfigMapOutputWithContext(context.Context) FederatedSettingsOrgConfigMapOutput
}

type FederatedSettingsOrgConfigMap map[string]FederatedSettingsOrgConfigInput

func (FederatedSettingsOrgConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FederatedSettingsOrgConfig)(nil)).Elem()
}

func (i FederatedSettingsOrgConfigMap) ToFederatedSettingsOrgConfigMapOutput() FederatedSettingsOrgConfigMapOutput {
	return i.ToFederatedSettingsOrgConfigMapOutputWithContext(context.Background())
}

func (i FederatedSettingsOrgConfigMap) ToFederatedSettingsOrgConfigMapOutputWithContext(ctx context.Context) FederatedSettingsOrgConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FederatedSettingsOrgConfigMapOutput)
}

type FederatedSettingsOrgConfigOutput struct{ *pulumi.OutputState }

func (FederatedSettingsOrgConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FederatedSettingsOrgConfig)(nil)).Elem()
}

func (o FederatedSettingsOrgConfigOutput) ToFederatedSettingsOrgConfigOutput() FederatedSettingsOrgConfigOutput {
	return o
}

func (o FederatedSettingsOrgConfigOutput) ToFederatedSettingsOrgConfigOutputWithContext(ctx context.Context) FederatedSettingsOrgConfigOutput {
	return o
}

func (o FederatedSettingsOrgConfigOutput) DomainAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FederatedSettingsOrgConfig) pulumi.StringArrayOutput { return v.DomainAllowLists }).(pulumi.StringArrayOutput)
}

func (o FederatedSettingsOrgConfigOutput) DomainRestrictionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *FederatedSettingsOrgConfig) pulumi.BoolOutput { return v.DomainRestrictionEnabled }).(pulumi.BoolOutput)
}

func (o FederatedSettingsOrgConfigOutput) FederationSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v *FederatedSettingsOrgConfig) pulumi.StringOutput { return v.FederationSettingsId }).(pulumi.StringOutput)
}

func (o FederatedSettingsOrgConfigOutput) IdentityProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v *FederatedSettingsOrgConfig) pulumi.StringOutput { return v.IdentityProviderId }).(pulumi.StringOutput)
}

func (o FederatedSettingsOrgConfigOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *FederatedSettingsOrgConfig) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

func (o FederatedSettingsOrgConfigOutput) PostAuthRoleGrants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FederatedSettingsOrgConfig) pulumi.StringArrayOutput { return v.PostAuthRoleGrants }).(pulumi.StringArrayOutput)
}

type FederatedSettingsOrgConfigArrayOutput struct{ *pulumi.OutputState }

func (FederatedSettingsOrgConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FederatedSettingsOrgConfig)(nil)).Elem()
}

func (o FederatedSettingsOrgConfigArrayOutput) ToFederatedSettingsOrgConfigArrayOutput() FederatedSettingsOrgConfigArrayOutput {
	return o
}

func (o FederatedSettingsOrgConfigArrayOutput) ToFederatedSettingsOrgConfigArrayOutputWithContext(ctx context.Context) FederatedSettingsOrgConfigArrayOutput {
	return o
}

func (o FederatedSettingsOrgConfigArrayOutput) Index(i pulumi.IntInput) FederatedSettingsOrgConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FederatedSettingsOrgConfig {
		return vs[0].([]*FederatedSettingsOrgConfig)[vs[1].(int)]
	}).(FederatedSettingsOrgConfigOutput)
}

type FederatedSettingsOrgConfigMapOutput struct{ *pulumi.OutputState }

func (FederatedSettingsOrgConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FederatedSettingsOrgConfig)(nil)).Elem()
}

func (o FederatedSettingsOrgConfigMapOutput) ToFederatedSettingsOrgConfigMapOutput() FederatedSettingsOrgConfigMapOutput {
	return o
}

func (o FederatedSettingsOrgConfigMapOutput) ToFederatedSettingsOrgConfigMapOutputWithContext(ctx context.Context) FederatedSettingsOrgConfigMapOutput {
	return o
}

func (o FederatedSettingsOrgConfigMapOutput) MapIndex(k pulumi.StringInput) FederatedSettingsOrgConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FederatedSettingsOrgConfig {
		return vs[0].(map[string]*FederatedSettingsOrgConfig)[vs[1].(string)]
	}).(FederatedSettingsOrgConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedSettingsOrgConfigInput)(nil)).Elem(), &FederatedSettingsOrgConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedSettingsOrgConfigArrayInput)(nil)).Elem(), FederatedSettingsOrgConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FederatedSettingsOrgConfigMapInput)(nil)).Elem(), FederatedSettingsOrgConfigMap{})
	pulumi.RegisterOutputType(FederatedSettingsOrgConfigOutput{})
	pulumi.RegisterOutputType(FederatedSettingsOrgConfigArrayOutput{})
	pulumi.RegisterOutputType(FederatedSettingsOrgConfigMapOutput{})
}
