// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Data Source: Organization
//
// `Organization` describes all MongoDB Atlas Organizations. This represents organizations that have been created.
//
// ## Example Usage
//
// ### Using projectId attribute to query
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := mongodbatlas.LookupOrganization(ctx, &mongodbatlas.LookupOrganizationArgs{
//				OrgId: "<org_id>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOrganization(ctx *pulumi.Context, args *LookupOrganizationArgs, opts ...pulumi.InvokeOption) (*LookupOrganizationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOrganizationResult
	err := ctx.Invoke("mongodbatlas:index/getOrganization:getOrganization", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrganization.
type LookupOrganizationArgs struct {
	// Unique 24-hexadecimal digit string that identifies the organization.
	OrgId string `pulumi:"orgId"`
}

// A collection of values returned by getOrganization.
type LookupOrganizationResult struct {
	// (Optional) Flag that indicates whether to require API operations to originate from an IP Address added to the API access list for the specified organization.
	ApiAccessListRequired bool `pulumi:"apiAccessListRequired"`
	// (Optional) Flag that indicates whether this organization has access to generative AI features. This setting only applies to Atlas Commercial and defaults to `true`. With this setting on, Project Owners may be able to enable or disable individual AI features at the project level. To learn more, see https://www.mongodb.com/docs/generative-ai-faq/.
	GenAiFeaturesEnabled bool `pulumi:"genAiFeaturesEnabled"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Flag that indicates whether this organization has been deleted.
	IsDeleted bool                  `pulumi:"isDeleted"`
	Links     []GetOrganizationLink `pulumi:"links"`
	// (Optional) Flag that indicates whether to require users to set up Multi-Factor Authentication (MFA) before accessing the specified organization. To learn more, see: https://www.mongodb.com/docs/atlas/security-multi-factor-authentication/.
	MultiFactorAuthRequired bool `pulumi:"multiFactorAuthRequired"`
	// Human-readable label that identifies the organization.
	Name  string `pulumi:"name"`
	OrgId string `pulumi:"orgId"`
	// (Optional) Flag that indicates whether to block MongoDB Support from accessing Atlas infrastructure for any deployment in the specified organization without explicit permission. Once this setting is turned on, you can grant MongoDB Support a 24-hour bypass access to the Atlas deployment to resolve support issues. To learn more, see: https://www.mongodb.com/docs/atlas/security-restrict-support-access/.
	RestrictEmployeeAccess bool `pulumi:"restrictEmployeeAccess"`
}

func LookupOrganizationOutput(ctx *pulumi.Context, args LookupOrganizationOutputArgs, opts ...pulumi.InvokeOption) LookupOrganizationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOrganizationResultOutput, error) {
			args := v.(LookupOrganizationArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupOrganizationResult
			secret, err := ctx.InvokePackageRaw("mongodbatlas:index/getOrganization:getOrganization", args, &rv, "", opts...)
			if err != nil {
				return LookupOrganizationResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupOrganizationResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupOrganizationResultOutput), nil
			}
			return output, nil
		}).(LookupOrganizationResultOutput)
}

// A collection of arguments for invoking getOrganization.
type LookupOrganizationOutputArgs struct {
	// Unique 24-hexadecimal digit string that identifies the organization.
	OrgId pulumi.StringInput `pulumi:"orgId"`
}

func (LookupOrganizationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationArgs)(nil)).Elem()
}

// A collection of values returned by getOrganization.
type LookupOrganizationResultOutput struct{ *pulumi.OutputState }

func (LookupOrganizationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationResult)(nil)).Elem()
}

func (o LookupOrganizationResultOutput) ToLookupOrganizationResultOutput() LookupOrganizationResultOutput {
	return o
}

func (o LookupOrganizationResultOutput) ToLookupOrganizationResultOutputWithContext(ctx context.Context) LookupOrganizationResultOutput {
	return o
}

// (Optional) Flag that indicates whether to require API operations to originate from an IP Address added to the API access list for the specified organization.
func (o LookupOrganizationResultOutput) ApiAccessListRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrganizationResult) bool { return v.ApiAccessListRequired }).(pulumi.BoolOutput)
}

// (Optional) Flag that indicates whether this organization has access to generative AI features. This setting only applies to Atlas Commercial and defaults to `true`. With this setting on, Project Owners may be able to enable or disable individual AI features at the project level. To learn more, see https://www.mongodb.com/docs/generative-ai-faq/.
func (o LookupOrganizationResultOutput) GenAiFeaturesEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrganizationResult) bool { return v.GenAiFeaturesEnabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOrganizationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Flag that indicates whether this organization has been deleted.
func (o LookupOrganizationResultOutput) IsDeleted() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrganizationResult) bool { return v.IsDeleted }).(pulumi.BoolOutput)
}

func (o LookupOrganizationResultOutput) Links() GetOrganizationLinkArrayOutput {
	return o.ApplyT(func(v LookupOrganizationResult) []GetOrganizationLink { return v.Links }).(GetOrganizationLinkArrayOutput)
}

// (Optional) Flag that indicates whether to require users to set up Multi-Factor Authentication (MFA) before accessing the specified organization. To learn more, see: https://www.mongodb.com/docs/atlas/security-multi-factor-authentication/.
func (o LookupOrganizationResultOutput) MultiFactorAuthRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrganizationResult) bool { return v.MultiFactorAuthRequired }).(pulumi.BoolOutput)
}

// Human-readable label that identifies the organization.
func (o LookupOrganizationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupOrganizationResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// (Optional) Flag that indicates whether to block MongoDB Support from accessing Atlas infrastructure for any deployment in the specified organization without explicit permission. Once this setting is turned on, you can grant MongoDB Support a 24-hour bypass access to the Atlas deployment to resolve support issues. To learn more, see: https://www.mongodb.com/docs/atlas/security-restrict-support-access/.
func (o LookupOrganizationResultOutput) RestrictEmployeeAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrganizationResult) bool { return v.RestrictEmployeeAccess }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrganizationResultOutput{})
}
