// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Data Source: getCustomDbRoles
//
// `getCustomDbRoles` describes all Custom DB Roles. This represents a custom db roles.
//
// > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
func LookupCustomDbRoles(ctx *pulumi.Context, args *LookupCustomDbRolesArgs, opts ...pulumi.InvokeOption) (*LookupCustomDbRolesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCustomDbRolesResult
	err := ctx.Invoke("mongodbatlas:index/getCustomDbRoles:getCustomDbRoles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCustomDbRoles.
type LookupCustomDbRolesArgs struct {
	// The unique ID for the project to get all custom db roles.
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getCustomDbRoles.
type LookupCustomDbRolesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	ProjectId string `pulumi:"projectId"`
	// A list where each represents a custom db roles.
	Results []GetCustomDbRolesResult `pulumi:"results"`
}

func LookupCustomDbRolesOutput(ctx *pulumi.Context, args LookupCustomDbRolesOutputArgs, opts ...pulumi.InvokeOption) LookupCustomDbRolesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCustomDbRolesResultOutput, error) {
			args := v.(LookupCustomDbRolesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("mongodbatlas:index/getCustomDbRoles:getCustomDbRoles", args, LookupCustomDbRolesResultOutput{}, options).(LookupCustomDbRolesResultOutput), nil
		}).(LookupCustomDbRolesResultOutput)
}

// A collection of arguments for invoking getCustomDbRoles.
type LookupCustomDbRolesOutputArgs struct {
	// The unique ID for the project to get all custom db roles.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupCustomDbRolesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomDbRolesArgs)(nil)).Elem()
}

// A collection of values returned by getCustomDbRoles.
type LookupCustomDbRolesResultOutput struct{ *pulumi.OutputState }

func (LookupCustomDbRolesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomDbRolesResult)(nil)).Elem()
}

func (o LookupCustomDbRolesResultOutput) ToLookupCustomDbRolesResultOutput() LookupCustomDbRolesResultOutput {
	return o
}

func (o LookupCustomDbRolesResultOutput) ToLookupCustomDbRolesResultOutputWithContext(ctx context.Context) LookupCustomDbRolesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCustomDbRolesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomDbRolesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCustomDbRolesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomDbRolesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// A list where each represents a custom db roles.
func (o LookupCustomDbRolesResultOutput) Results() GetCustomDbRolesResultArrayOutput {
	return o.ApplyT(func(v LookupCustomDbRolesResult) []GetCustomDbRolesResult { return v.Results }).(GetCustomDbRolesResultArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCustomDbRolesResultOutput{})
}
