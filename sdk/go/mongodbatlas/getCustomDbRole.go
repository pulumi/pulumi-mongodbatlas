// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// `CustomDbRole` describe a Custom DB Role. This represents a custom db role.
//
// > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-mongodbatlas/sdk/go/mongodbatlas"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		testRole, err := mongodbatlas.NewCustomDbRole(ctx, "testRole", &mongodbatlas.CustomDbRoleArgs{
// 			Actions: mongodbatlas.CustomDbRoleActionArray{
// 				&mongodbatlas.CustomDbRoleActionArgs{
// 					Action: pulumi.String("UPDATE"),
// 					Resources: mongodbatlas.CustomDbRoleActionResourceArray{
// 						&mongodbatlas.CustomDbRoleActionResourceArgs{
// 							CollectionName: pulumi.String(""),
// 							DatabaseName:   pulumi.String("anyDatabase"),
// 						},
// 					},
// 				},
// 				&mongodbatlas.CustomDbRoleActionArgs{
// 					Action: pulumi.String("INSERT"),
// 					Resources: mongodbatlas.CustomDbRoleActionResourceArray{
// 						&mongodbatlas.CustomDbRoleActionResourceArgs{
// 							CollectionName: pulumi.String(""),
// 							DatabaseName:   pulumi.String("anyDatabase"),
// 						},
// 					},
// 				},
// 			},
// 			ProjectId: pulumi.String("<PROJECT-ID>"),
// 			RoleName:  pulumi.String("myCustomRole"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupCustomDbRole(ctx *pulumi.Context, args *LookupCustomDbRoleArgs, opts ...pulumi.InvokeOption) (*LookupCustomDbRoleResult, error) {
	var rv LookupCustomDbRoleResult
	err := ctx.Invoke("mongodbatlas:index/getCustomDbRole:getCustomDbRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCustomDbRole.
type LookupCustomDbRoleArgs struct {
	InheritedRoles []GetCustomDbRoleInheritedRole `pulumi:"inheritedRoles"`
	// The unique ID for the project to create the database user.
	ProjectId string `pulumi:"projectId"`
	// Name of the custom role.
	RoleName string `pulumi:"roleName"`
}

// A collection of values returned by getCustomDbRole.
type LookupCustomDbRoleResult struct {
	Actions []GetCustomDbRoleAction `pulumi:"actions"`
	// The provider-assigned unique ID for this managed resource.
	Id             string                         `pulumi:"id"`
	InheritedRoles []GetCustomDbRoleInheritedRole `pulumi:"inheritedRoles"`
	ProjectId      string                         `pulumi:"projectId"`
	RoleName       string                         `pulumi:"roleName"`
}
