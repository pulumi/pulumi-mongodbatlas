// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// `PrivateEndpoint` describe a Private Endpoint. This represents a Private Endpoint Connection to retrieve details regarding a private endpoint by id in an Atlas project
//
// > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
func LookupPrivateEndpoint(ctx *pulumi.Context, args *LookupPrivateEndpointArgs, opts ...pulumi.InvokeOption) (*LookupPrivateEndpointResult, error) {
	var rv LookupPrivateEndpointResult
	err := ctx.Invoke("mongodbatlas:index/getPrivateEndpoint:getPrivateEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrivateEndpoint.
type LookupPrivateEndpointArgs struct {
	// Unique identifier of the AWS PrivateLink connection.
	PrivateLinkId string `pulumi:"privateLinkId"`
	// Unique identifier for the project.
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getPrivateEndpoint.
type LookupPrivateEndpointResult struct {
	// Name of the PrivateLink endpoint service in AWS. Returns null while the endpoint service is being created.
	EndpointServiceName string `pulumi:"endpointServiceName"`
	// Error message pertaining to the AWS PrivateLink connection. Returns null if there are no errors.
	ErrorMessage string `pulumi:"errorMessage"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifiers of the interface endpoints in your VPC that you added to the AWS PrivateLink connection.
	InterfaceEndpoints []string `pulumi:"interfaceEndpoints"`
	PrivateLinkId      string   `pulumi:"privateLinkId"`
	ProjectId          string   `pulumi:"projectId"`
	// Status of the AWS PrivateLink connection.
	// Returns one of the following values:
	Status string `pulumi:"status"`
}
