// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Data Source: getAtlasUser
//
// `getAtlasUser` Provides a MongoDB Atlas User.
//
// > **NOTE:** If you are the owner of a MongoDB Atlas organization or project, you can also retrieve the user profile for any user with membership in that organization or project.
//
// ## Example Usage
//
// ### Using userId attribute to query
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := mongodbatlas.GetAtlasUser(ctx, &mongodbatlas.GetAtlasUserArgs{
//				UserId: pulumi.StringRef("<USER_ID>"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Using username attribute to query
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := mongodbatlas.GetAtlasUser(ctx, &mongodbatlas.GetAtlasUserArgs{
//				Username: pulumi.StringRef("<USERNAME>"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAtlasUser(ctx *pulumi.Context, args *GetAtlasUserArgs, opts ...pulumi.InvokeOption) (*GetAtlasUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAtlasUserResult
	err := ctx.Invoke("mongodbatlas:index/getAtlasUser:getAtlasUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAtlasUser.
type GetAtlasUserArgs struct {
	// Unique 24-hexadecimal digit string that identifies this user.
	UserId *string `pulumi:"userId"`
	// Email address that belongs to the MongoDB Atlas user account. You can't modify this address after creating the user.
	//
	// > **IMPORTANT:** Either `userId` or `username` must be configurated.
	Username *string `pulumi:"username"`
}

// A collection of values returned by getAtlasUser.
type GetAtlasUserResult struct {
	// Two alphabet characters that identifies MongoDB Atlas user's geographic location. This parameter uses the ISO 3166-1a2 code format.
	Country string `pulumi:"country"`
	// Date and time when the current account is created. This value is in the ISO 8601 timestamp format in UTC.
	CreatedAt string `pulumi:"createdAt"`
	// Email address that belongs to the MongoDB Atlas user.
	EmailAddress string `pulumi:"emailAddress"`
	// First or given name that belongs to the MongoDB Atlas user.
	FirstName string `pulumi:"firstName"`
	// Deprecated: Please use userId id attribute instead
	Id string `pulumi:"id"`
	// Date and time when the current account last authenticated. This value is in the ISO 8601 timestamp format in UTC.
	LastAuth string `pulumi:"lastAuth"`
	// Last name, family name, or surname that belongs to the MongoDB Atlas user.
	LastName string             `pulumi:"lastName"`
	Links    []GetAtlasUserLink `pulumi:"links"`
	// Mobile phone number that belongs to the MongoDB Atlas user.
	MobileNumber string             `pulumi:"mobileNumber"`
	Roles        []GetAtlasUserRole `pulumi:"roles"`
	// List of unique 24-hexadecimal digit strings that identifies the teams to which this MongoDB Atlas user belongs.
	// * `links.#.href` - Uniform Resource Locator (URL) that points another API resource to which this response has some relationship. This URL often begins with https://cloud.mongodb.com/api/atlas.
	// * `links.#.rel` - Uniform Resource Locator (URL) that defines the semantic relationship between this resource and another API resource. This URL often begins with https://cloud.mongodb.com/api/atlas.
	// * `roles.#.group_id` - Unique 24-hexadecimal digit string that identifies the project to which this role belongs. You can set a value for this parameter or orgId but not both in the same request.
	// * `roles.#.org_id` - Unique 24-hexadecimal digit string that identifies the organization to which this role belongs. You can set a value for this parameter or groupId but not both in the same request.
	// * `roles.#.role_name` - Human-readable label that identifies the collection of privileges that MongoDB Atlas grants a specific API key, user, or team. These roles include organization- and project-level roles. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#service-user-roles) describes the valid roles that can be assigned.
	TeamIds  []string `pulumi:"teamIds"`
	UserId   *string  `pulumi:"userId"`
	Username *string  `pulumi:"username"`
}

func GetAtlasUserOutput(ctx *pulumi.Context, args GetAtlasUserOutputArgs, opts ...pulumi.InvokeOption) GetAtlasUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAtlasUserResultOutput, error) {
			args := v.(GetAtlasUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("mongodbatlas:index/getAtlasUser:getAtlasUser", args, GetAtlasUserResultOutput{}, options).(GetAtlasUserResultOutput), nil
		}).(GetAtlasUserResultOutput)
}

// A collection of arguments for invoking getAtlasUser.
type GetAtlasUserOutputArgs struct {
	// Unique 24-hexadecimal digit string that identifies this user.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
	// Email address that belongs to the MongoDB Atlas user account. You can't modify this address after creating the user.
	//
	// > **IMPORTANT:** Either `userId` or `username` must be configurated.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetAtlasUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAtlasUserArgs)(nil)).Elem()
}

// A collection of values returned by getAtlasUser.
type GetAtlasUserResultOutput struct{ *pulumi.OutputState }

func (GetAtlasUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAtlasUserResult)(nil)).Elem()
}

func (o GetAtlasUserResultOutput) ToGetAtlasUserResultOutput() GetAtlasUserResultOutput {
	return o
}

func (o GetAtlasUserResultOutput) ToGetAtlasUserResultOutputWithContext(ctx context.Context) GetAtlasUserResultOutput {
	return o
}

// Two alphabet characters that identifies MongoDB Atlas user's geographic location. This parameter uses the ISO 3166-1a2 code format.
func (o GetAtlasUserResultOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetAtlasUserResult) string { return v.Country }).(pulumi.StringOutput)
}

// Date and time when the current account is created. This value is in the ISO 8601 timestamp format in UTC.
func (o GetAtlasUserResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAtlasUserResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Email address that belongs to the MongoDB Atlas user.
func (o GetAtlasUserResultOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAtlasUserResult) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// First or given name that belongs to the MongoDB Atlas user.
func (o GetAtlasUserResultOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAtlasUserResult) string { return v.FirstName }).(pulumi.StringOutput)
}

// Deprecated: Please use userId id attribute instead
func (o GetAtlasUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAtlasUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// Date and time when the current account last authenticated. This value is in the ISO 8601 timestamp format in UTC.
func (o GetAtlasUserResultOutput) LastAuth() pulumi.StringOutput {
	return o.ApplyT(func(v GetAtlasUserResult) string { return v.LastAuth }).(pulumi.StringOutput)
}

// Last name, family name, or surname that belongs to the MongoDB Atlas user.
func (o GetAtlasUserResultOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAtlasUserResult) string { return v.LastName }).(pulumi.StringOutput)
}

func (o GetAtlasUserResultOutput) Links() GetAtlasUserLinkArrayOutput {
	return o.ApplyT(func(v GetAtlasUserResult) []GetAtlasUserLink { return v.Links }).(GetAtlasUserLinkArrayOutput)
}

// Mobile phone number that belongs to the MongoDB Atlas user.
func (o GetAtlasUserResultOutput) MobileNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetAtlasUserResult) string { return v.MobileNumber }).(pulumi.StringOutput)
}

func (o GetAtlasUserResultOutput) Roles() GetAtlasUserRoleArrayOutput {
	return o.ApplyT(func(v GetAtlasUserResult) []GetAtlasUserRole { return v.Roles }).(GetAtlasUserRoleArrayOutput)
}

// List of unique 24-hexadecimal digit strings that identifies the teams to which this MongoDB Atlas user belongs.
// * `links.#.href` - Uniform Resource Locator (URL) that points another API resource to which this response has some relationship. This URL often begins with https://cloud.mongodb.com/api/atlas.
// * `links.#.rel` - Uniform Resource Locator (URL) that defines the semantic relationship between this resource and another API resource. This URL often begins with https://cloud.mongodb.com/api/atlas.
// * `roles.#.group_id` - Unique 24-hexadecimal digit string that identifies the project to which this role belongs. You can set a value for this parameter or orgId but not both in the same request.
// * `roles.#.org_id` - Unique 24-hexadecimal digit string that identifies the organization to which this role belongs. You can set a value for this parameter or groupId but not both in the same request.
// * `roles.#.role_name` - Human-readable label that identifies the collection of privileges that MongoDB Atlas grants a specific API key, user, or team. These roles include organization- and project-level roles. The [MongoDB Documentation](https://www.mongodb.com/docs/atlas/reference/user-roles/#service-user-roles) describes the valid roles that can be assigned.
func (o GetAtlasUserResultOutput) TeamIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAtlasUserResult) []string { return v.TeamIds }).(pulumi.StringArrayOutput)
}

func (o GetAtlasUserResultOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAtlasUserResult) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

func (o GetAtlasUserResultOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAtlasUserResult) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAtlasUserResultOutput{})
}
