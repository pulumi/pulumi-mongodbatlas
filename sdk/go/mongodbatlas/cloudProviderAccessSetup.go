// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// The Cloud Provider Access resource can be imported using project ID and the provider name and mongodbatlas role id, in the format `project_id`-`provider_name`-`role_id`, e.g.
//
// ```sh
//  $ pulumi import mongodbatlas:index/cloudProviderAccessSetup:CloudProviderAccessSetup my_role 1112222b3bf99403840e8934-AWS-5fc17d476f7a33224f5b224e
// ```
type CloudProviderAccessSetup struct {
	pulumi.CustomResourceState

	// aws related arn roles
	//
	// Deprecated: use aws_config instead
	Aws        pulumi.StringMapOutput                       `pulumi:"aws"`
	AwsConfigs CloudProviderAccessSetupAwsConfigArrayOutput `pulumi:"awsConfigs"`
	// Date on which this role was created.
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// The unique ID for the project
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The cloud provider for which to create a new role. Currently only AWS is supported.
	ProviderName pulumi.StringOutput `pulumi:"providerName"`
	// Unique ID of this role returned by mongodb atlas api
	RoleId pulumi.StringOutput `pulumi:"roleId"`
}

// NewCloudProviderAccessSetup registers a new resource with the given unique name, arguments, and options.
func NewCloudProviderAccessSetup(ctx *pulumi.Context,
	name string, args *CloudProviderAccessSetupArgs, opts ...pulumi.ResourceOption) (*CloudProviderAccessSetup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.ProviderName == nil {
		return nil, errors.New("invalid value for required argument 'ProviderName'")
	}
	var resource CloudProviderAccessSetup
	err := ctx.RegisterResource("mongodbatlas:index/cloudProviderAccessSetup:CloudProviderAccessSetup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProviderAccessSetup gets an existing CloudProviderAccessSetup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProviderAccessSetup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProviderAccessSetupState, opts ...pulumi.ResourceOption) (*CloudProviderAccessSetup, error) {
	var resource CloudProviderAccessSetup
	err := ctx.ReadResource("mongodbatlas:index/cloudProviderAccessSetup:CloudProviderAccessSetup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProviderAccessSetup resources.
type cloudProviderAccessSetupState struct {
	// aws related arn roles
	//
	// Deprecated: use aws_config instead
	Aws        map[string]string                   `pulumi:"aws"`
	AwsConfigs []CloudProviderAccessSetupAwsConfig `pulumi:"awsConfigs"`
	// Date on which this role was created.
	CreatedDate *string `pulumi:"createdDate"`
	// The unique ID for the project
	ProjectId *string `pulumi:"projectId"`
	// The cloud provider for which to create a new role. Currently only AWS is supported.
	ProviderName *string `pulumi:"providerName"`
	// Unique ID of this role returned by mongodb atlas api
	RoleId *string `pulumi:"roleId"`
}

type CloudProviderAccessSetupState struct {
	// aws related arn roles
	//
	// Deprecated: use aws_config instead
	Aws        pulumi.StringMapInput
	AwsConfigs CloudProviderAccessSetupAwsConfigArrayInput
	// Date on which this role was created.
	CreatedDate pulumi.StringPtrInput
	// The unique ID for the project
	ProjectId pulumi.StringPtrInput
	// The cloud provider for which to create a new role. Currently only AWS is supported.
	ProviderName pulumi.StringPtrInput
	// Unique ID of this role returned by mongodb atlas api
	RoleId pulumi.StringPtrInput
}

func (CloudProviderAccessSetupState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProviderAccessSetupState)(nil)).Elem()
}

type cloudProviderAccessSetupArgs struct {
	// The unique ID for the project
	ProjectId string `pulumi:"projectId"`
	// The cloud provider for which to create a new role. Currently only AWS is supported.
	ProviderName string `pulumi:"providerName"`
}

// The set of arguments for constructing a CloudProviderAccessSetup resource.
type CloudProviderAccessSetupArgs struct {
	// The unique ID for the project
	ProjectId pulumi.StringInput
	// The cloud provider for which to create a new role. Currently only AWS is supported.
	ProviderName pulumi.StringInput
}

func (CloudProviderAccessSetupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProviderAccessSetupArgs)(nil)).Elem()
}

type CloudProviderAccessSetupInput interface {
	pulumi.Input

	ToCloudProviderAccessSetupOutput() CloudProviderAccessSetupOutput
	ToCloudProviderAccessSetupOutputWithContext(ctx context.Context) CloudProviderAccessSetupOutput
}

func (*CloudProviderAccessSetup) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderAccessSetup)(nil)).Elem()
}

func (i *CloudProviderAccessSetup) ToCloudProviderAccessSetupOutput() CloudProviderAccessSetupOutput {
	return i.ToCloudProviderAccessSetupOutputWithContext(context.Background())
}

func (i *CloudProviderAccessSetup) ToCloudProviderAccessSetupOutputWithContext(ctx context.Context) CloudProviderAccessSetupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessSetupOutput)
}

// CloudProviderAccessSetupArrayInput is an input type that accepts CloudProviderAccessSetupArray and CloudProviderAccessSetupArrayOutput values.
// You can construct a concrete instance of `CloudProviderAccessSetupArrayInput` via:
//
//          CloudProviderAccessSetupArray{ CloudProviderAccessSetupArgs{...} }
type CloudProviderAccessSetupArrayInput interface {
	pulumi.Input

	ToCloudProviderAccessSetupArrayOutput() CloudProviderAccessSetupArrayOutput
	ToCloudProviderAccessSetupArrayOutputWithContext(context.Context) CloudProviderAccessSetupArrayOutput
}

type CloudProviderAccessSetupArray []CloudProviderAccessSetupInput

func (CloudProviderAccessSetupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudProviderAccessSetup)(nil)).Elem()
}

func (i CloudProviderAccessSetupArray) ToCloudProviderAccessSetupArrayOutput() CloudProviderAccessSetupArrayOutput {
	return i.ToCloudProviderAccessSetupArrayOutputWithContext(context.Background())
}

func (i CloudProviderAccessSetupArray) ToCloudProviderAccessSetupArrayOutputWithContext(ctx context.Context) CloudProviderAccessSetupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessSetupArrayOutput)
}

// CloudProviderAccessSetupMapInput is an input type that accepts CloudProviderAccessSetupMap and CloudProviderAccessSetupMapOutput values.
// You can construct a concrete instance of `CloudProviderAccessSetupMapInput` via:
//
//          CloudProviderAccessSetupMap{ "key": CloudProviderAccessSetupArgs{...} }
type CloudProviderAccessSetupMapInput interface {
	pulumi.Input

	ToCloudProviderAccessSetupMapOutput() CloudProviderAccessSetupMapOutput
	ToCloudProviderAccessSetupMapOutputWithContext(context.Context) CloudProviderAccessSetupMapOutput
}

type CloudProviderAccessSetupMap map[string]CloudProviderAccessSetupInput

func (CloudProviderAccessSetupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudProviderAccessSetup)(nil)).Elem()
}

func (i CloudProviderAccessSetupMap) ToCloudProviderAccessSetupMapOutput() CloudProviderAccessSetupMapOutput {
	return i.ToCloudProviderAccessSetupMapOutputWithContext(context.Background())
}

func (i CloudProviderAccessSetupMap) ToCloudProviderAccessSetupMapOutputWithContext(ctx context.Context) CloudProviderAccessSetupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessSetupMapOutput)
}

type CloudProviderAccessSetupOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessSetupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderAccessSetup)(nil)).Elem()
}

func (o CloudProviderAccessSetupOutput) ToCloudProviderAccessSetupOutput() CloudProviderAccessSetupOutput {
	return o
}

func (o CloudProviderAccessSetupOutput) ToCloudProviderAccessSetupOutputWithContext(ctx context.Context) CloudProviderAccessSetupOutput {
	return o
}

type CloudProviderAccessSetupArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessSetupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudProviderAccessSetup)(nil)).Elem()
}

func (o CloudProviderAccessSetupArrayOutput) ToCloudProviderAccessSetupArrayOutput() CloudProviderAccessSetupArrayOutput {
	return o
}

func (o CloudProviderAccessSetupArrayOutput) ToCloudProviderAccessSetupArrayOutputWithContext(ctx context.Context) CloudProviderAccessSetupArrayOutput {
	return o
}

func (o CloudProviderAccessSetupArrayOutput) Index(i pulumi.IntInput) CloudProviderAccessSetupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudProviderAccessSetup {
		return vs[0].([]*CloudProviderAccessSetup)[vs[1].(int)]
	}).(CloudProviderAccessSetupOutput)
}

type CloudProviderAccessSetupMapOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessSetupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudProviderAccessSetup)(nil)).Elem()
}

func (o CloudProviderAccessSetupMapOutput) ToCloudProviderAccessSetupMapOutput() CloudProviderAccessSetupMapOutput {
	return o
}

func (o CloudProviderAccessSetupMapOutput) ToCloudProviderAccessSetupMapOutputWithContext(ctx context.Context) CloudProviderAccessSetupMapOutput {
	return o
}

func (o CloudProviderAccessSetupMapOutput) MapIndex(k pulumi.StringInput) CloudProviderAccessSetupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudProviderAccessSetup {
		return vs[0].(map[string]*CloudProviderAccessSetup)[vs[1].(string)]
	}).(CloudProviderAccessSetupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessSetupInput)(nil)).Elem(), &CloudProviderAccessSetup{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessSetupArrayInput)(nil)).Elem(), CloudProviderAccessSetupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessSetupMapInput)(nil)).Elem(), CloudProviderAccessSetupMap{})
	pulumi.RegisterOutputType(CloudProviderAccessSetupOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessSetupArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessSetupMapOutput{})
}
