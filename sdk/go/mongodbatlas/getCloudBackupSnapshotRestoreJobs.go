// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// `getCloudBackupSnapshotRestoreJobs` provides a Cloud Backup Snapshot Restore Jobs datasource. Gets all the cloud backup snapshot restore jobs for the specified cluster.
//
// > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
func LookupCloudBackupSnapshotRestoreJobs(ctx *pulumi.Context, args *LookupCloudBackupSnapshotRestoreJobsArgs, opts ...pulumi.InvokeOption) (*LookupCloudBackupSnapshotRestoreJobsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCloudBackupSnapshotRestoreJobsResult
	err := ctx.Invoke("mongodbatlas:index/getCloudBackupSnapshotRestoreJobs:getCloudBackupSnapshotRestoreJobs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudBackupSnapshotRestoreJobs.
type LookupCloudBackupSnapshotRestoreJobsArgs struct {
	// The name of the Atlas cluster for which you want to retrieve restore jobs.
	ClusterName string `pulumi:"clusterName"`
	// Number of items to return per page, up to a maximum of 500. Defaults to `100`.
	ItemsPerPage *int `pulumi:"itemsPerPage"`
	// The page to return. Defaults to `1`.
	PageNum *int `pulumi:"pageNum"`
	// The unique identifier of the project for the Atlas cluster.
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getCloudBackupSnapshotRestoreJobs.
type LookupCloudBackupSnapshotRestoreJobsResult struct {
	ClusterName string `pulumi:"clusterName"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	ItemsPerPage *int   `pulumi:"itemsPerPage"`
	PageNum      *int   `pulumi:"pageNum"`
	ProjectId    string `pulumi:"projectId"`
	// Includes cloudProviderSnapshotRestoreJob object for each item detailed in the results array section.
	Results    []GetCloudBackupSnapshotRestoreJobsResult `pulumi:"results"`
	TotalCount int                                       `pulumi:"totalCount"`
}

func LookupCloudBackupSnapshotRestoreJobsOutput(ctx *pulumi.Context, args LookupCloudBackupSnapshotRestoreJobsOutputArgs, opts ...pulumi.InvokeOption) LookupCloudBackupSnapshotRestoreJobsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudBackupSnapshotRestoreJobsResult, error) {
			args := v.(LookupCloudBackupSnapshotRestoreJobsArgs)
			r, err := LookupCloudBackupSnapshotRestoreJobs(ctx, &args, opts...)
			var s LookupCloudBackupSnapshotRestoreJobsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudBackupSnapshotRestoreJobsResultOutput)
}

// A collection of arguments for invoking getCloudBackupSnapshotRestoreJobs.
type LookupCloudBackupSnapshotRestoreJobsOutputArgs struct {
	// The name of the Atlas cluster for which you want to retrieve restore jobs.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Number of items to return per page, up to a maximum of 500. Defaults to `100`.
	ItemsPerPage pulumi.IntPtrInput `pulumi:"itemsPerPage"`
	// The page to return. Defaults to `1`.
	PageNum pulumi.IntPtrInput `pulumi:"pageNum"`
	// The unique identifier of the project for the Atlas cluster.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupCloudBackupSnapshotRestoreJobsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudBackupSnapshotRestoreJobsArgs)(nil)).Elem()
}

// A collection of values returned by getCloudBackupSnapshotRestoreJobs.
type LookupCloudBackupSnapshotRestoreJobsResultOutput struct{ *pulumi.OutputState }

func (LookupCloudBackupSnapshotRestoreJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudBackupSnapshotRestoreJobsResult)(nil)).Elem()
}

func (o LookupCloudBackupSnapshotRestoreJobsResultOutput) ToLookupCloudBackupSnapshotRestoreJobsResultOutput() LookupCloudBackupSnapshotRestoreJobsResultOutput {
	return o
}

func (o LookupCloudBackupSnapshotRestoreJobsResultOutput) ToLookupCloudBackupSnapshotRestoreJobsResultOutputWithContext(ctx context.Context) LookupCloudBackupSnapshotRestoreJobsResultOutput {
	return o
}

func (o LookupCloudBackupSnapshotRestoreJobsResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupCloudBackupSnapshotRestoreJobsResult] {
	return pulumix.Output[LookupCloudBackupSnapshotRestoreJobsResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupCloudBackupSnapshotRestoreJobsResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudBackupSnapshotRestoreJobsResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCloudBackupSnapshotRestoreJobsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudBackupSnapshotRestoreJobsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudBackupSnapshotRestoreJobsResultOutput) ItemsPerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupCloudBackupSnapshotRestoreJobsResult) *int { return v.ItemsPerPage }).(pulumi.IntPtrOutput)
}

func (o LookupCloudBackupSnapshotRestoreJobsResultOutput) PageNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupCloudBackupSnapshotRestoreJobsResult) *int { return v.PageNum }).(pulumi.IntPtrOutput)
}

func (o LookupCloudBackupSnapshotRestoreJobsResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudBackupSnapshotRestoreJobsResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Includes cloudProviderSnapshotRestoreJob object for each item detailed in the results array section.
func (o LookupCloudBackupSnapshotRestoreJobsResultOutput) Results() GetCloudBackupSnapshotRestoreJobsResultArrayOutput {
	return o.ApplyT(func(v LookupCloudBackupSnapshotRestoreJobsResult) []GetCloudBackupSnapshotRestoreJobsResult {
		return v.Results
	}).(GetCloudBackupSnapshotRestoreJobsResultArrayOutput)
}

func (o LookupCloudBackupSnapshotRestoreJobsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudBackupSnapshotRestoreJobsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudBackupSnapshotRestoreJobsResultOutput{})
}
