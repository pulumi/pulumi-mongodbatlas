// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Data Source: getStreamProcessors
//
// `getStreamProcessors` returns all stream processors in a stream instance.
//
// ## Example Usage
func LookupStreamProcessors(ctx *pulumi.Context, args *LookupStreamProcessorsArgs, opts ...pulumi.InvokeOption) (*LookupStreamProcessorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStreamProcessorsResult
	err := ctx.Invoke("mongodbatlas:index/getStreamProcessors:getStreamProcessors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamProcessors.
type LookupStreamProcessorsArgs struct {
	// Human-readable label that identifies the stream instance.
	InstanceName string `pulumi:"instanceName"`
	// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getStreamProcessors.
type LookupStreamProcessorsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Human-readable label that identifies the stream instance.
	InstanceName string `pulumi:"instanceName"`
	// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
	ProjectId string                      `pulumi:"projectId"`
	Results   []GetStreamProcessorsResult `pulumi:"results"`
}

func LookupStreamProcessorsOutput(ctx *pulumi.Context, args LookupStreamProcessorsOutputArgs, opts ...pulumi.InvokeOption) LookupStreamProcessorsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStreamProcessorsResultOutput, error) {
			args := v.(LookupStreamProcessorsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupStreamProcessorsResult
			secret, err := ctx.InvokePackageRaw("mongodbatlas:index/getStreamProcessors:getStreamProcessors", args, &rv, "", opts...)
			if err != nil {
				return LookupStreamProcessorsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupStreamProcessorsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupStreamProcessorsResultOutput), nil
			}
			return output, nil
		}).(LookupStreamProcessorsResultOutput)
}

// A collection of arguments for invoking getStreamProcessors.
type LookupStreamProcessorsOutputArgs struct {
	// Human-readable label that identifies the stream instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupStreamProcessorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamProcessorsArgs)(nil)).Elem()
}

// A collection of values returned by getStreamProcessors.
type LookupStreamProcessorsResultOutput struct{ *pulumi.OutputState }

func (LookupStreamProcessorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamProcessorsResult)(nil)).Elem()
}

func (o LookupStreamProcessorsResultOutput) ToLookupStreamProcessorsResultOutput() LookupStreamProcessorsResultOutput {
	return o
}

func (o LookupStreamProcessorsResultOutput) ToLookupStreamProcessorsResultOutputWithContext(ctx context.Context) LookupStreamProcessorsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupStreamProcessorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamProcessorsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Human-readable label that identifies the stream instance.
func (o LookupStreamProcessorsResultOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamProcessorsResult) string { return v.InstanceName }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
func (o LookupStreamProcessorsResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStreamProcessorsResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o LookupStreamProcessorsResultOutput) Results() GetStreamProcessorsResultArrayOutput {
	return o.ApplyT(func(v LookupStreamProcessorsResult) []GetStreamProcessorsResult { return v.Results }).(GetStreamProcessorsResultArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStreamProcessorsResultOutput{})
}
