// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `PrivateLinkEndpoint` describe a Private Endpoint. This represents a Private Endpoint Connection to retrieve details regarding a private endpoint by id in an Atlas project
//
// > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
func LookupPrivateLinkEndpoint(ctx *pulumi.Context, args *LookupPrivateLinkEndpointArgs, opts ...pulumi.InvokeOption) (*LookupPrivateLinkEndpointResult, error) {
	var rv LookupPrivateLinkEndpointResult
	err := ctx.Invoke("mongodbatlas:index/getPrivateLinkEndpoint:getPrivateLinkEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrivateLinkEndpoint.
type LookupPrivateLinkEndpointArgs struct {
	// Unique identifier of the private endpoint service that you want to retrieve.
	PrivateLinkId string `pulumi:"privateLinkId"`
	// Unique identifier for the project.
	ProjectId string `pulumi:"projectId"`
	// Cloud provider for which you want to retrieve a private endpoint service. Atlas accepts `AWS`, `AZURE` or `GCP`.
	ProviderName string `pulumi:"providerName"`
}

// A collection of values returned by getPrivateLinkEndpoint.
type LookupPrivateLinkEndpointResult struct {
	// GCP network endpoint groups corresponding to the Private Service Connect endpoint service.
	EndpointGroupNames []string `pulumi:"endpointGroupNames"`
	// Name of the PrivateLink endpoint service in AWS. Returns null while the endpoint service is being created.
	EndpointServiceName string `pulumi:"endpointServiceName"`
	// Error message pertaining to the AWS PrivateLink connection. Returns null if there are no errors.
	ErrorMessage string `pulumi:"errorMessage"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifiers of the interface endpoints in your VPC that you added to the AWS PrivateLink connection.
	InterfaceEndpoints []string `pulumi:"interfaceEndpoints"`
	// All private endpoints that you have added to this Azure Private Link Service.
	PrivateEndpoints []string `pulumi:"privateEndpoints"`
	PrivateLinkId    string   `pulumi:"privateLinkId"`
	// Name of the Azure Private Link Service that Atlas manages.
	PrivateLinkServiceName string `pulumi:"privateLinkServiceName"`
	// Resource ID of the Azure Private Link Service that Atlas manages.
	PrivateLinkServiceResourceId string `pulumi:"privateLinkServiceResourceId"`
	ProjectId                    string `pulumi:"projectId"`
	ProviderName                 string `pulumi:"providerName"`
	// GCP region for the Private Service Connect endpoint service.
	RegionName string `pulumi:"regionName"`
	// Unique alphanumeric and special character strings that identify the service attachments associated with the GCP Private Service Connect endpoint service.
	ServiceAttachmentNames []string `pulumi:"serviceAttachmentNames"`
	// Status of the AWS PrivateLink connection.
	// Returns one of the following values:
	Status string `pulumi:"status"`
}

func LookupPrivateLinkEndpointOutput(ctx *pulumi.Context, args LookupPrivateLinkEndpointOutputArgs, opts ...pulumi.InvokeOption) LookupPrivateLinkEndpointResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPrivateLinkEndpointResult, error) {
			args := v.(LookupPrivateLinkEndpointArgs)
			r, err := LookupPrivateLinkEndpoint(ctx, &args, opts...)
			var s LookupPrivateLinkEndpointResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPrivateLinkEndpointResultOutput)
}

// A collection of arguments for invoking getPrivateLinkEndpoint.
type LookupPrivateLinkEndpointOutputArgs struct {
	// Unique identifier of the private endpoint service that you want to retrieve.
	PrivateLinkId pulumi.StringInput `pulumi:"privateLinkId"`
	// Unique identifier for the project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Cloud provider for which you want to retrieve a private endpoint service. Atlas accepts `AWS`, `AZURE` or `GCP`.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
}

func (LookupPrivateLinkEndpointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrivateLinkEndpointArgs)(nil)).Elem()
}

// A collection of values returned by getPrivateLinkEndpoint.
type LookupPrivateLinkEndpointResultOutput struct{ *pulumi.OutputState }

func (LookupPrivateLinkEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrivateLinkEndpointResult)(nil)).Elem()
}

func (o LookupPrivateLinkEndpointResultOutput) ToLookupPrivateLinkEndpointResultOutput() LookupPrivateLinkEndpointResultOutput {
	return o
}

func (o LookupPrivateLinkEndpointResultOutput) ToLookupPrivateLinkEndpointResultOutputWithContext(ctx context.Context) LookupPrivateLinkEndpointResultOutput {
	return o
}

// GCP network endpoint groups corresponding to the Private Service Connect endpoint service.
func (o LookupPrivateLinkEndpointResultOutput) EndpointGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPrivateLinkEndpointResult) []string { return v.EndpointGroupNames }).(pulumi.StringArrayOutput)
}

// Name of the PrivateLink endpoint service in AWS. Returns null while the endpoint service is being created.
func (o LookupPrivateLinkEndpointResultOutput) EndpointServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkEndpointResult) string { return v.EndpointServiceName }).(pulumi.StringOutput)
}

// Error message pertaining to the AWS PrivateLink connection. Returns null if there are no errors.
func (o LookupPrivateLinkEndpointResultOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkEndpointResult) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPrivateLinkEndpointResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkEndpointResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifiers of the interface endpoints in your VPC that you added to the AWS PrivateLink connection.
func (o LookupPrivateLinkEndpointResultOutput) InterfaceEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPrivateLinkEndpointResult) []string { return v.InterfaceEndpoints }).(pulumi.StringArrayOutput)
}

// All private endpoints that you have added to this Azure Private Link Service.
func (o LookupPrivateLinkEndpointResultOutput) PrivateEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPrivateLinkEndpointResult) []string { return v.PrivateEndpoints }).(pulumi.StringArrayOutput)
}

func (o LookupPrivateLinkEndpointResultOutput) PrivateLinkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkEndpointResult) string { return v.PrivateLinkId }).(pulumi.StringOutput)
}

// Name of the Azure Private Link Service that Atlas manages.
func (o LookupPrivateLinkEndpointResultOutput) PrivateLinkServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkEndpointResult) string { return v.PrivateLinkServiceName }).(pulumi.StringOutput)
}

// Resource ID of the Azure Private Link Service that Atlas manages.
func (o LookupPrivateLinkEndpointResultOutput) PrivateLinkServiceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkEndpointResult) string { return v.PrivateLinkServiceResourceId }).(pulumi.StringOutput)
}

func (o LookupPrivateLinkEndpointResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkEndpointResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o LookupPrivateLinkEndpointResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkEndpointResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// GCP region for the Private Service Connect endpoint service.
func (o LookupPrivateLinkEndpointResultOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkEndpointResult) string { return v.RegionName }).(pulumi.StringOutput)
}

// Unique alphanumeric and special character strings that identify the service attachments associated with the GCP Private Service Connect endpoint service.
func (o LookupPrivateLinkEndpointResultOutput) ServiceAttachmentNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPrivateLinkEndpointResult) []string { return v.ServiceAttachmentNames }).(pulumi.StringArrayOutput)
}

// Status of the AWS PrivateLink connection.
// Returns one of the following values:
func (o LookupPrivateLinkEndpointResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkEndpointResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPrivateLinkEndpointResultOutput{})
}
