// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// `.CloudProviderSnapshotRestoreJob` provides a resource to create a new restore job from a cloud backup snapshot of a specified cluster. The restore job can be one of three types:
// * **automated:** Atlas automatically restores the snapshot with snapshotId to the Atlas cluster with name targetClusterName in the Atlas project with targetGroupId.
//
// * **download:** Atlas provides a URL to download a .tar.gz of the snapshot with snapshotId. The contents of the archive contain the data files for your Atlas cluster.
//
// * **pointInTime:**  Atlas performs a Continuous Cloud Backup restore.
//
// > **Important:** If you specify `deliveryType` : `automated` or `deliveryType` : `pointInTime` in your request body to create an automated restore job, Atlas removes all existing data on the target cluster prior to the restore.
//
// > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
type CloudProviderSnapshotRestoreJob struct {
	pulumi.CustomResourceState

	// Indicates whether the restore job was canceled.
	Cancelled pulumi.BoolOutput `pulumi:"cancelled"`
	// The name of the Atlas cluster whose snapshot you want to restore.
	ClusterName pulumi.StringOutput `pulumi:"clusterName"`
	// UTC ISO 8601 formatted point in time when Atlas created the restore job.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Type of restore job to create. Possible values are: **download** or **automated**, only one must be set it in ``true``.
	DeliveryType CloudProviderSnapshotRestoreJobDeliveryTypeOutput `pulumi:"deliveryType"`
	// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
	DeliveryUrls pulumi.StringArrayOutput `pulumi:"deliveryUrls"`
	// Indicates whether the restore job expired.
	Expired pulumi.BoolOutput `pulumi:"expired"`
	// UTC ISO 8601 formatted point in time when the restore job expires.
	ExpiresAt pulumi.StringOutput `pulumi:"expiresAt"`
	// UTC ISO 8601 formatted point in time when the restore job completed.
	FinishedAt pulumi.StringOutput `pulumi:"finishedAt"`
	// The unique identifier of the project for the Atlas cluster whose snapshot you want to restore.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Unique identifier of the snapshot to restore.
	SnapshotId pulumi.StringOutput `pulumi:"snapshotId"`
	// The unique identifier of the restore job.
	SnapshotRestoreJobId pulumi.StringOutput `pulumi:"snapshotRestoreJobId"`
	// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
	Timestamp pulumi.StringOutput `pulumi:"timestamp"`
}

// NewCloudProviderSnapshotRestoreJob registers a new resource with the given unique name, arguments, and options.
func NewCloudProviderSnapshotRestoreJob(ctx *pulumi.Context,
	name string, args *CloudProviderSnapshotRestoreJobArgs, opts ...pulumi.ResourceOption) (*CloudProviderSnapshotRestoreJob, error) {
	if args == nil || args.ClusterName == nil {
		return nil, errors.New("missing required argument 'ClusterName'")
	}
	if args == nil || args.DeliveryType == nil {
		return nil, errors.New("missing required argument 'DeliveryType'")
	}
	if args == nil || args.ProjectId == nil {
		return nil, errors.New("missing required argument 'ProjectId'")
	}
	if args == nil || args.SnapshotId == nil {
		return nil, errors.New("missing required argument 'SnapshotId'")
	}
	if args == nil {
		args = &CloudProviderSnapshotRestoreJobArgs{}
	}
	var resource CloudProviderSnapshotRestoreJob
	err := ctx.RegisterResource("mongodbatlas:index/cloudProviderSnapshotRestoreJob:CloudProviderSnapshotRestoreJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProviderSnapshotRestoreJob gets an existing CloudProviderSnapshotRestoreJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProviderSnapshotRestoreJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProviderSnapshotRestoreJobState, opts ...pulumi.ResourceOption) (*CloudProviderSnapshotRestoreJob, error) {
	var resource CloudProviderSnapshotRestoreJob
	err := ctx.ReadResource("mongodbatlas:index/cloudProviderSnapshotRestoreJob:CloudProviderSnapshotRestoreJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProviderSnapshotRestoreJob resources.
type cloudProviderSnapshotRestoreJobState struct {
	// Indicates whether the restore job was canceled.
	Cancelled *bool `pulumi:"cancelled"`
	// The name of the Atlas cluster whose snapshot you want to restore.
	ClusterName *string `pulumi:"clusterName"`
	// UTC ISO 8601 formatted point in time when Atlas created the restore job.
	CreatedAt *string `pulumi:"createdAt"`
	// Type of restore job to create. Possible values are: **download** or **automated**, only one must be set it in ``true``.
	DeliveryType *CloudProviderSnapshotRestoreJobDeliveryType `pulumi:"deliveryType"`
	// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
	DeliveryUrls []string `pulumi:"deliveryUrls"`
	// Indicates whether the restore job expired.
	Expired *bool `pulumi:"expired"`
	// UTC ISO 8601 formatted point in time when the restore job expires.
	ExpiresAt *string `pulumi:"expiresAt"`
	// UTC ISO 8601 formatted point in time when the restore job completed.
	FinishedAt *string `pulumi:"finishedAt"`
	// The unique identifier of the project for the Atlas cluster whose snapshot you want to restore.
	ProjectId *string `pulumi:"projectId"`
	// Unique identifier of the snapshot to restore.
	SnapshotId *string `pulumi:"snapshotId"`
	// The unique identifier of the restore job.
	SnapshotRestoreJobId *string `pulumi:"snapshotRestoreJobId"`
	// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
	Timestamp *string `pulumi:"timestamp"`
}

type CloudProviderSnapshotRestoreJobState struct {
	// Indicates whether the restore job was canceled.
	Cancelled pulumi.BoolPtrInput
	// The name of the Atlas cluster whose snapshot you want to restore.
	ClusterName pulumi.StringPtrInput
	// UTC ISO 8601 formatted point in time when Atlas created the restore job.
	CreatedAt pulumi.StringPtrInput
	// Type of restore job to create. Possible values are: **download** or **automated**, only one must be set it in ``true``.
	DeliveryType CloudProviderSnapshotRestoreJobDeliveryTypePtrInput
	// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
	DeliveryUrls pulumi.StringArrayInput
	// Indicates whether the restore job expired.
	Expired pulumi.BoolPtrInput
	// UTC ISO 8601 formatted point in time when the restore job expires.
	ExpiresAt pulumi.StringPtrInput
	// UTC ISO 8601 formatted point in time when the restore job completed.
	FinishedAt pulumi.StringPtrInput
	// The unique identifier of the project for the Atlas cluster whose snapshot you want to restore.
	ProjectId pulumi.StringPtrInput
	// Unique identifier of the snapshot to restore.
	SnapshotId pulumi.StringPtrInput
	// The unique identifier of the restore job.
	SnapshotRestoreJobId pulumi.StringPtrInput
	// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
	Timestamp pulumi.StringPtrInput
}

func (CloudProviderSnapshotRestoreJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProviderSnapshotRestoreJobState)(nil)).Elem()
}

type cloudProviderSnapshotRestoreJobArgs struct {
	// The name of the Atlas cluster whose snapshot you want to restore.
	ClusterName string `pulumi:"clusterName"`
	// Type of restore job to create. Possible values are: **download** or **automated**, only one must be set it in ``true``.
	DeliveryType CloudProviderSnapshotRestoreJobDeliveryType `pulumi:"deliveryType"`
	// The unique identifier of the project for the Atlas cluster whose snapshot you want to restore.
	ProjectId string `pulumi:"projectId"`
	// Unique identifier of the snapshot to restore.
	SnapshotId string `pulumi:"snapshotId"`
}

// The set of arguments for constructing a CloudProviderSnapshotRestoreJob resource.
type CloudProviderSnapshotRestoreJobArgs struct {
	// The name of the Atlas cluster whose snapshot you want to restore.
	ClusterName pulumi.StringInput
	// Type of restore job to create. Possible values are: **download** or **automated**, only one must be set it in ``true``.
	DeliveryType CloudProviderSnapshotRestoreJobDeliveryTypeInput
	// The unique identifier of the project for the Atlas cluster whose snapshot you want to restore.
	ProjectId pulumi.StringInput
	// Unique identifier of the snapshot to restore.
	SnapshotId pulumi.StringInput
}

func (CloudProviderSnapshotRestoreJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProviderSnapshotRestoreJobArgs)(nil)).Elem()
}
