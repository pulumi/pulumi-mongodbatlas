// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Data Source: FlexCluster
//
// `FlexCluster` describes a flex cluster.
//
// **NOTE:** Flex Cluster is in Public Preview. In order to use the resource and data sources you need to set the environment variable MONGODB_ATLAS_ENABLE_PREVIEW to true.
//
// ## Example Usage
func LookupFlexCluster(ctx *pulumi.Context, args *LookupFlexClusterArgs, opts ...pulumi.InvokeOption) (*LookupFlexClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFlexClusterResult
	err := ctx.Invoke("mongodbatlas:index/getFlexCluster:getFlexCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlexCluster.
type LookupFlexClusterArgs struct {
	// Human-readable label that identifies the instance.
	Name string `pulumi:"name"`
	// Unique 24-hexadecimal character string that identifies the project.
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getFlexCluster.
type LookupFlexClusterResult struct {
	// Flex backup configuration
	BackupSettings GetFlexClusterBackupSettings `pulumi:"backupSettings"`
	// Flex cluster topology.
	ClusterType string `pulumi:"clusterType"`
	// Collection of Uniform Resource Locators that point to the MongoDB database.
	ConnectionStrings GetFlexClusterConnectionStrings `pulumi:"connectionStrings"`
	// Date and time when MongoDB Cloud created this instance. This parameter expresses its value in ISO 8601 format in UTC.
	CreateDate string `pulumi:"createDate"`
	// Unique 24-hexadecimal digit string that identifies the instance.
	Id string `pulumi:"id"`
	// Version of MongoDB that the instance runs.
	MongoDbVersion string `pulumi:"mongoDbVersion"`
	// Human-readable label that identifies the instance.
	Name string `pulumi:"name"`
	// Unique 24-hexadecimal character string that identifies the project.
	ProjectId string `pulumi:"projectId"`
	// Group of cloud provider settings that configure the provisioned MongoDB flex cluster.
	ProviderSettings GetFlexClusterProviderSettings `pulumi:"providerSettings"`
	// Human-readable label that indicates the current operating condition of this instance.
	StateName string `pulumi:"stateName"`
	// Map that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the instance.
	Tags map[string]string `pulumi:"tags"`
	// Flag that indicates whether termination protection is enabled on the cluster. If set to `true`, MongoDB Cloud won't delete the cluster. If set to `false`, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled bool `pulumi:"terminationProtectionEnabled"`
	// Method by which the cluster maintains the MongoDB versions.
	VersionReleaseSystem string `pulumi:"versionReleaseSystem"`
}

func LookupFlexClusterOutput(ctx *pulumi.Context, args LookupFlexClusterOutputArgs, opts ...pulumi.InvokeOption) LookupFlexClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFlexClusterResultOutput, error) {
			args := v.(LookupFlexClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("mongodbatlas:index/getFlexCluster:getFlexCluster", args, LookupFlexClusterResultOutput{}, options).(LookupFlexClusterResultOutput), nil
		}).(LookupFlexClusterResultOutput)
}

// A collection of arguments for invoking getFlexCluster.
type LookupFlexClusterOutputArgs struct {
	// Human-readable label that identifies the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Unique 24-hexadecimal character string that identifies the project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupFlexClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlexClusterArgs)(nil)).Elem()
}

// A collection of values returned by getFlexCluster.
type LookupFlexClusterResultOutput struct{ *pulumi.OutputState }

func (LookupFlexClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlexClusterResult)(nil)).Elem()
}

func (o LookupFlexClusterResultOutput) ToLookupFlexClusterResultOutput() LookupFlexClusterResultOutput {
	return o
}

func (o LookupFlexClusterResultOutput) ToLookupFlexClusterResultOutputWithContext(ctx context.Context) LookupFlexClusterResultOutput {
	return o
}

// Flex backup configuration
func (o LookupFlexClusterResultOutput) BackupSettings() GetFlexClusterBackupSettingsOutput {
	return o.ApplyT(func(v LookupFlexClusterResult) GetFlexClusterBackupSettings { return v.BackupSettings }).(GetFlexClusterBackupSettingsOutput)
}

// Flex cluster topology.
func (o LookupFlexClusterResultOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexClusterResult) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Collection of Uniform Resource Locators that point to the MongoDB database.
func (o LookupFlexClusterResultOutput) ConnectionStrings() GetFlexClusterConnectionStringsOutput {
	return o.ApplyT(func(v LookupFlexClusterResult) GetFlexClusterConnectionStrings { return v.ConnectionStrings }).(GetFlexClusterConnectionStringsOutput)
}

// Date and time when MongoDB Cloud created this instance. This parameter expresses its value in ISO 8601 format in UTC.
func (o LookupFlexClusterResultOutput) CreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexClusterResult) string { return v.CreateDate }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the instance.
func (o LookupFlexClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// Version of MongoDB that the instance runs.
func (o LookupFlexClusterResultOutput) MongoDbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexClusterResult) string { return v.MongoDbVersion }).(pulumi.StringOutput)
}

// Human-readable label that identifies the instance.
func (o LookupFlexClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal character string that identifies the project.
func (o LookupFlexClusterResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexClusterResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Group of cloud provider settings that configure the provisioned MongoDB flex cluster.
func (o LookupFlexClusterResultOutput) ProviderSettings() GetFlexClusterProviderSettingsOutput {
	return o.ApplyT(func(v LookupFlexClusterResult) GetFlexClusterProviderSettings { return v.ProviderSettings }).(GetFlexClusterProviderSettingsOutput)
}

// Human-readable label that indicates the current operating condition of this instance.
func (o LookupFlexClusterResultOutput) StateName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexClusterResult) string { return v.StateName }).(pulumi.StringOutput)
}

// Map that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the instance.
func (o LookupFlexClusterResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFlexClusterResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Flag that indicates whether termination protection is enabled on the cluster. If set to `true`, MongoDB Cloud won't delete the cluster. If set to `false`, MongoDB Cloud will delete the cluster.
func (o LookupFlexClusterResultOutput) TerminationProtectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupFlexClusterResult) bool { return v.TerminationProtectionEnabled }).(pulumi.BoolOutput)
}

// Method by which the cluster maintains the MongoDB versions.
func (o LookupFlexClusterResultOutput) VersionReleaseSystem() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexClusterResult) string { return v.VersionReleaseSystem }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFlexClusterResultOutput{})
}
