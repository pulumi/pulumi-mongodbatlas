// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-mongodbatlas/sdk/v3/go/mongodbatlas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Resource: ResourcePolicy
//
// `ResourcePolicy` provides a Resource Policy resource. The resource lets you create, edit and delete resource policies to prevent misconfigurations and reduce the need for corrective interventions in your organization.
//
// ## Example Usage
//
// ## Import
//
// Resource Policy resource can be imported using the org ID and policy ID, in the format `{ORG_ID}-{POLICY_ID}`, e.g.
//
// For more information see: [MongoDB Atlas API - Resource Policies](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Resource-Policies) Documentation.
type ResourcePolicy struct {
	pulumi.CustomResourceState

	// The user that last updated the Atlas resource policy.
	CreatedByUser ResourcePolicyCreatedByUserOutput `pulumi:"createdByUser"`
	// Date and time in UTC when the Atlas resource policy was created.
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// Description of the Atlas resource policy.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The user that last updated the Atlas resource policy.
	LastUpdatedByUser ResourcePolicyLastUpdatedByUserOutput `pulumi:"lastUpdatedByUser"`
	// Date and time in UTC when the Atlas resource policy was last updated.
	LastUpdatedDate pulumi.StringOutput `pulumi:"lastUpdatedDate"`
	// Human-readable label that describes the Atlas resource policy.
	Name pulumi.StringOutput `pulumi:"name"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// List of policies that make up the Atlas resource policy.
	Policies ResourcePolicyPolicyArrayOutput `pulumi:"policies"`
	// A string that identifies the version of the Atlas resource policy.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewResourcePolicy registers a new resource with the given unique name, arguments, and options.
func NewResourcePolicy(ctx *pulumi.Context,
	name string, args *ResourcePolicyArgs, opts ...pulumi.ResourceOption) (*ResourcePolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	if args.Policies == nil {
		return nil, errors.New("invalid value for required argument 'Policies'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResourcePolicy
	err := ctx.RegisterResource("mongodbatlas:index/resourcePolicy:ResourcePolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourcePolicy gets an existing ResourcePolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourcePolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourcePolicyState, opts ...pulumi.ResourceOption) (*ResourcePolicy, error) {
	var resource ResourcePolicy
	err := ctx.ReadResource("mongodbatlas:index/resourcePolicy:ResourcePolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourcePolicy resources.
type resourcePolicyState struct {
	// The user that last updated the Atlas resource policy.
	CreatedByUser *ResourcePolicyCreatedByUser `pulumi:"createdByUser"`
	// Date and time in UTC when the Atlas resource policy was created.
	CreatedDate *string `pulumi:"createdDate"`
	// Description of the Atlas resource policy.
	Description *string `pulumi:"description"`
	// The user that last updated the Atlas resource policy.
	LastUpdatedByUser *ResourcePolicyLastUpdatedByUser `pulumi:"lastUpdatedByUser"`
	// Date and time in UTC when the Atlas resource policy was last updated.
	LastUpdatedDate *string `pulumi:"lastUpdatedDate"`
	// Human-readable label that describes the Atlas resource policy.
	Name *string `pulumi:"name"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
	OrgId *string `pulumi:"orgId"`
	// List of policies that make up the Atlas resource policy.
	Policies []ResourcePolicyPolicy `pulumi:"policies"`
	// A string that identifies the version of the Atlas resource policy.
	Version *string `pulumi:"version"`
}

type ResourcePolicyState struct {
	// The user that last updated the Atlas resource policy.
	CreatedByUser ResourcePolicyCreatedByUserPtrInput
	// Date and time in UTC when the Atlas resource policy was created.
	CreatedDate pulumi.StringPtrInput
	// Description of the Atlas resource policy.
	Description pulumi.StringPtrInput
	// The user that last updated the Atlas resource policy.
	LastUpdatedByUser ResourcePolicyLastUpdatedByUserPtrInput
	// Date and time in UTC when the Atlas resource policy was last updated.
	LastUpdatedDate pulumi.StringPtrInput
	// Human-readable label that describes the Atlas resource policy.
	Name pulumi.StringPtrInput
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
	OrgId pulumi.StringPtrInput
	// List of policies that make up the Atlas resource policy.
	Policies ResourcePolicyPolicyArrayInput
	// A string that identifies the version of the Atlas resource policy.
	Version pulumi.StringPtrInput
}

func (ResourcePolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourcePolicyState)(nil)).Elem()
}

type resourcePolicyArgs struct {
	// Description of the Atlas resource policy.
	Description *string `pulumi:"description"`
	// Human-readable label that describes the Atlas resource policy.
	Name *string `pulumi:"name"`
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
	OrgId string `pulumi:"orgId"`
	// List of policies that make up the Atlas resource policy.
	Policies []ResourcePolicyPolicy `pulumi:"policies"`
}

// The set of arguments for constructing a ResourcePolicy resource.
type ResourcePolicyArgs struct {
	// Description of the Atlas resource policy.
	Description pulumi.StringPtrInput
	// Human-readable label that describes the Atlas resource policy.
	Name pulumi.StringPtrInput
	// Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
	OrgId pulumi.StringInput
	// List of policies that make up the Atlas resource policy.
	Policies ResourcePolicyPolicyArrayInput
}

func (ResourcePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourcePolicyArgs)(nil)).Elem()
}

type ResourcePolicyInput interface {
	pulumi.Input

	ToResourcePolicyOutput() ResourcePolicyOutput
	ToResourcePolicyOutputWithContext(ctx context.Context) ResourcePolicyOutput
}

func (*ResourcePolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePolicy)(nil)).Elem()
}

func (i *ResourcePolicy) ToResourcePolicyOutput() ResourcePolicyOutput {
	return i.ToResourcePolicyOutputWithContext(context.Background())
}

func (i *ResourcePolicy) ToResourcePolicyOutputWithContext(ctx context.Context) ResourcePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyOutput)
}

// ResourcePolicyArrayInput is an input type that accepts ResourcePolicyArray and ResourcePolicyArrayOutput values.
// You can construct a concrete instance of `ResourcePolicyArrayInput` via:
//
//	ResourcePolicyArray{ ResourcePolicyArgs{...} }
type ResourcePolicyArrayInput interface {
	pulumi.Input

	ToResourcePolicyArrayOutput() ResourcePolicyArrayOutput
	ToResourcePolicyArrayOutputWithContext(context.Context) ResourcePolicyArrayOutput
}

type ResourcePolicyArray []ResourcePolicyInput

func (ResourcePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourcePolicy)(nil)).Elem()
}

func (i ResourcePolicyArray) ToResourcePolicyArrayOutput() ResourcePolicyArrayOutput {
	return i.ToResourcePolicyArrayOutputWithContext(context.Background())
}

func (i ResourcePolicyArray) ToResourcePolicyArrayOutputWithContext(ctx context.Context) ResourcePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyArrayOutput)
}

// ResourcePolicyMapInput is an input type that accepts ResourcePolicyMap and ResourcePolicyMapOutput values.
// You can construct a concrete instance of `ResourcePolicyMapInput` via:
//
//	ResourcePolicyMap{ "key": ResourcePolicyArgs{...} }
type ResourcePolicyMapInput interface {
	pulumi.Input

	ToResourcePolicyMapOutput() ResourcePolicyMapOutput
	ToResourcePolicyMapOutputWithContext(context.Context) ResourcePolicyMapOutput
}

type ResourcePolicyMap map[string]ResourcePolicyInput

func (ResourcePolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourcePolicy)(nil)).Elem()
}

func (i ResourcePolicyMap) ToResourcePolicyMapOutput() ResourcePolicyMapOutput {
	return i.ToResourcePolicyMapOutputWithContext(context.Background())
}

func (i ResourcePolicyMap) ToResourcePolicyMapOutputWithContext(ctx context.Context) ResourcePolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyMapOutput)
}

type ResourcePolicyOutput struct{ *pulumi.OutputState }

func (ResourcePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePolicy)(nil)).Elem()
}

func (o ResourcePolicyOutput) ToResourcePolicyOutput() ResourcePolicyOutput {
	return o
}

func (o ResourcePolicyOutput) ToResourcePolicyOutputWithContext(ctx context.Context) ResourcePolicyOutput {
	return o
}

// The user that last updated the Atlas resource policy.
func (o ResourcePolicyOutput) CreatedByUser() ResourcePolicyCreatedByUserOutput {
	return o.ApplyT(func(v *ResourcePolicy) ResourcePolicyCreatedByUserOutput { return v.CreatedByUser }).(ResourcePolicyCreatedByUserOutput)
}

// Date and time in UTC when the Atlas resource policy was created.
func (o ResourcePolicyOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourcePolicy) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

// Description of the Atlas resource policy.
func (o ResourcePolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourcePolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The user that last updated the Atlas resource policy.
func (o ResourcePolicyOutput) LastUpdatedByUser() ResourcePolicyLastUpdatedByUserOutput {
	return o.ApplyT(func(v *ResourcePolicy) ResourcePolicyLastUpdatedByUserOutput { return v.LastUpdatedByUser }).(ResourcePolicyLastUpdatedByUserOutput)
}

// Date and time in UTC when the Atlas resource policy was last updated.
func (o ResourcePolicyOutput) LastUpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourcePolicy) pulumi.StringOutput { return v.LastUpdatedDate }).(pulumi.StringOutput)
}

// Human-readable label that describes the Atlas resource policy.
func (o ResourcePolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourcePolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
func (o ResourcePolicyOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourcePolicy) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// List of policies that make up the Atlas resource policy.
func (o ResourcePolicyOutput) Policies() ResourcePolicyPolicyArrayOutput {
	return o.ApplyT(func(v *ResourcePolicy) ResourcePolicyPolicyArrayOutput { return v.Policies }).(ResourcePolicyPolicyArrayOutput)
}

// A string that identifies the version of the Atlas resource policy.
func (o ResourcePolicyOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourcePolicy) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type ResourcePolicyArrayOutput struct{ *pulumi.OutputState }

func (ResourcePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourcePolicy)(nil)).Elem()
}

func (o ResourcePolicyArrayOutput) ToResourcePolicyArrayOutput() ResourcePolicyArrayOutput {
	return o
}

func (o ResourcePolicyArrayOutput) ToResourcePolicyArrayOutputWithContext(ctx context.Context) ResourcePolicyArrayOutput {
	return o
}

func (o ResourcePolicyArrayOutput) Index(i pulumi.IntInput) ResourcePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourcePolicy {
		return vs[0].([]*ResourcePolicy)[vs[1].(int)]
	}).(ResourcePolicyOutput)
}

type ResourcePolicyMapOutput struct{ *pulumi.OutputState }

func (ResourcePolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourcePolicy)(nil)).Elem()
}

func (o ResourcePolicyMapOutput) ToResourcePolicyMapOutput() ResourcePolicyMapOutput {
	return o
}

func (o ResourcePolicyMapOutput) ToResourcePolicyMapOutputWithContext(ctx context.Context) ResourcePolicyMapOutput {
	return o
}

func (o ResourcePolicyMapOutput) MapIndex(k pulumi.StringInput) ResourcePolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourcePolicy {
		return vs[0].(map[string]*ResourcePolicy)[vs[1].(string)]
	}).(ResourcePolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyInput)(nil)).Elem(), &ResourcePolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyArrayInput)(nil)).Elem(), ResourcePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyMapInput)(nil)).Elem(), ResourcePolicyMap{})
	pulumi.RegisterOutputType(ResourcePolicyOutput{})
	pulumi.RegisterOutputType(ResourcePolicyArrayOutput{})
	pulumi.RegisterOutputType(ResourcePolicyMapOutput{})
}
