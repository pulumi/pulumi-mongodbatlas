# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetPrivatelinkEndpointServiceAdlResult',
    'AwaitableGetPrivatelinkEndpointServiceAdlResult',
    'get_privatelink_endpoint_service_adl',
    'get_privatelink_endpoint_service_adl_output',
]

@pulumi.output_type
class GetPrivatelinkEndpointServiceAdlResult:
    """
    A collection of values returned by getPrivatelinkEndpointServiceAdl.
    """
    def __init__(__self__, comment=None, endpoint_id=None, id=None, project_id=None, provider_name=None, type=None):
        if comment and not isinstance(comment, str):
            raise TypeError("Expected argument 'comment' to be a str")
        pulumi.set(__self__, "comment", comment)
        if endpoint_id and not isinstance(endpoint_id, str):
            raise TypeError("Expected argument 'endpoint_id' to be a str")
        pulumi.set(__self__, "endpoint_id", endpoint_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if project_id and not isinstance(project_id, str):
            raise TypeError("Expected argument 'project_id' to be a str")
        pulumi.set(__self__, "project_id", project_id)
        if provider_name and not isinstance(provider_name, str):
            raise TypeError("Expected argument 'provider_name' to be a str")
        pulumi.set(__self__, "provider_name", provider_name)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def comment(self) -> str:
        """
        Human-readable string to associate with this private endpoint.
        """
        return pulumi.get(self, "comment")

    @property
    @pulumi.getter(name="endpointId")
    def endpoint_id(self) -> str:
        return pulumi.get(self, "endpoint_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> str:
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="providerName")
    def provider_name(self) -> str:
        """
        Human-readable label that identifies the cloud provider for this endpoint.
        """
        return pulumi.get(self, "provider_name")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Human-readable label that identifies the type of resource to associate with this private endpoint.
        """
        return pulumi.get(self, "type")


class AwaitableGetPrivatelinkEndpointServiceAdlResult(GetPrivatelinkEndpointServiceAdlResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPrivatelinkEndpointServiceAdlResult(
            comment=self.comment,
            endpoint_id=self.endpoint_id,
            id=self.id,
            project_id=self.project_id,
            provider_name=self.provider_name,
            type=self.type)


def get_privatelink_endpoint_service_adl(endpoint_id: Optional[str] = None,
                                         project_id: Optional[str] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPrivatelinkEndpointServiceAdlResult:
    """
    `privatelink_endpoint_service_adl` Provides an Atlas Data Lake (ADL) and Online Archive PrivateLink endpoint resource.

    > **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.

    ## Example Usage


    :param str endpoint_id: Unique 22-character alphanumeric string that identifies the private endpoint. Atlas supports AWS private endpoints using the [|aws| PrivateLink](https://aws.amazon.com/privatelink/) feature.
    :param str project_id: Unique 24-digit hexadecimal string that identifies the project.
    """
    __args__ = dict()
    __args__['endpointId'] = endpoint_id
    __args__['projectId'] = project_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('mongodbatlas:index/getPrivatelinkEndpointServiceAdl:getPrivatelinkEndpointServiceAdl', __args__, opts=opts, typ=GetPrivatelinkEndpointServiceAdlResult).value

    return AwaitableGetPrivatelinkEndpointServiceAdlResult(
        comment=pulumi.get(__ret__, 'comment'),
        endpoint_id=pulumi.get(__ret__, 'endpoint_id'),
        id=pulumi.get(__ret__, 'id'),
        project_id=pulumi.get(__ret__, 'project_id'),
        provider_name=pulumi.get(__ret__, 'provider_name'),
        type=pulumi.get(__ret__, 'type'))


@_utilities.lift_output_func(get_privatelink_endpoint_service_adl)
def get_privatelink_endpoint_service_adl_output(endpoint_id: Optional[pulumi.Input[str]] = None,
                                                project_id: Optional[pulumi.Input[str]] = None,
                                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetPrivatelinkEndpointServiceAdlResult]:
    """
    `privatelink_endpoint_service_adl` Provides an Atlas Data Lake (ADL) and Online Archive PrivateLink endpoint resource.

    > **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.

    ## Example Usage


    :param str endpoint_id: Unique 22-character alphanumeric string that identifies the private endpoint. Atlas supports AWS private endpoints using the [|aws| PrivateLink](https://aws.amazon.com/privatelink/) feature.
    :param str project_id: Unique 24-digit hexadecimal string that identifies the project.
    """
    ...
