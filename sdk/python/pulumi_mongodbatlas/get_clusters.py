# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetClustersResult:
    """
    A collection of values returned by getClusters.
    """
    def __init__(__self__, id=None, project_id=None, results=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if project_id and not isinstance(project_id, str):
            raise TypeError("Expected argument 'project_id' to be a str")
        __self__.project_id = project_id
        if results and not isinstance(results, list):
            raise TypeError("Expected argument 'results' to be a list")
        __self__.results = results
        """
        A list where each represents a Cluster. See Cluster below for more details.
        """
class AwaitableGetClustersResult(GetClustersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetClustersResult(
            id=self.id,
            project_id=self.project_id,
            results=self.results)

def get_clusters(project_id=None,opts=None):
    """
    `Cluster` describes all Clusters by the provided project_id. The data source requires your Project ID.

    > **NOTE:** Groups and projects are synonymous terms. You may find group_id in the official documentation.

    > **IMPORTANT:**
    <br> &#8226; Changes to cluster configurations can affect costs. Before making changes, please see [Billing](https://docs.atlas.mongodb.com/billing/).
    <br> &#8226; If your Atlas project contains a custom role that uses actions introduced in a specific MongoDB version, you cannot create a cluster with a MongoDB version less than that version unless you delete the custom role.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_mongodbatlas as mongodbatlas

    test_cluster = mongodbatlas.Cluster("testCluster",
        project_id="<YOUR-PROJECT-ID>",
        disk_size_gb=100,
        num_shards=1,
        replication_factor=3,
        provider_backup_enabled=True,
        auto_scaling_disk_gb_enabled=True,
        provider_name="AWS",
        provider_disk_iops=300,
        provider_volume_type="STANDARD",
        provider_encrypt_ebs_volume=True,
        provider_instance_size_name="M40",
        provider_region_name="US_EAST_1")
    test_clusters = test_cluster.project_id.apply(lambda project_id: mongodbatlas.get_clusters(project_id=project_id))
    ```


    :param str project_id: The unique ID for the project to get the clusters.
    """
    __args__ = dict()


    __args__['projectId'] = project_id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('mongodbatlas:index/getClusters:getClusters', __args__, opts=opts).value

    return AwaitableGetClustersResult(
        id=__ret__.get('id'),
        project_id=__ret__.get('projectId'),
        results=__ret__.get('results'))
