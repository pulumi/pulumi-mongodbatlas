# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables


class EncryptionAtRest(pulumi.CustomResource):
    aws_kms: pulumi.Output[dict]
    """
    Specifies AWS KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.

      * `access_key_id` (`str`) - The IAM access key ID with permissions to access the customer master key specified by customerMasterKeyID.
      * `customer_master_key_id` (`str`) - The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
      * `enabled` (`bool`) - Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
      * `region` (`str`) - The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
      * `secret_access_key` (`str`) - The IAM secret access key with permissions to access the customer master key specified by customerMasterKeyID.
    """
    azure_key_vault: pulumi.Output[dict]
    """
    Specifies Azure Key Vault configuration details and whether Encryption at Rest is enabled for an Atlas project.

      * `azure_environment` (`str`) - The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
      * `client_id` (`str`) - The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
      * `enabled` (`bool`) - Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
      * `key_identifier` (`str`) - The unique identifier of a key in an Azure Key Vault.
      * `key_vault_name` (`str`) - The name of an Azure Key Vault containing your key.
      * `resource_group_name` (`str`) - The name of the Azure Resource group that contains an Azure Key Vault.
      * `secret` (`str`) - The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
      * `subscription_id` (`str`) - The unique identifier associated with an Azure subscription.
      * `tenant_id` (`str`) - The unique identifier for an Azure AD tenant within an Azure subscription.
    """
    google_cloud_kms: pulumi.Output[dict]
    """
    Specifies GCP KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.

      * `enabled` (`bool`) - Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
      * `key_version_resource_id` (`str`) - The Key Version Resource ID from your GCP account.
      * `service_account_key` (`str`) - String-formatted JSON object containing GCP KMS credentials from your GCP account.
    """
    project_id: pulumi.Output[str]
    """
    The unique identifier for the project.
    """
    def __init__(__self__, resource_name, opts=None, aws_kms=None, azure_key_vault=None, google_cloud_kms=None, project_id=None, __props__=None, __name__=None, __opts__=None):
        """
        `EncryptionAtRest` Allows management of encryption at rest for an Atlas project with one of the following providers:

        [Amazon Web Services Key Management Service](https://docs.atlas.mongodb.com/security-aws-kms/#security-aws-kms)
        [Azure Key Vault](https://docs.atlas.mongodb.com/security-azure-kms/#security-azure-kms)
        [Google Cloud KMS](https://docs.atlas.mongodb.com/security-gcp-kms/#security-gcp-kms)

        After configuring at least one Encryption at Rest provider for the Atlas project, Project Owners can enable Encryption at Rest for each Atlas cluster for which they require encryption. The Encryption at Rest provider does not have to match the cluster cloud service provider.

        Atlas does not automatically rotate user-managed encryption keys. Defer to your preferred Encryption at Rest providerâ€™s documentation and guidance for best practices on key rotation. Atlas automatically creates a 365-day key rotation alert when you configure Encryption at Rest using your Key Management in an Atlas project.

        See [Encryption at Rest](https://docs.atlas.mongodb.com/security-kms-encryption/index.html) for more information, including prerequisites and restrictions.

        > **IMPORTANT** Atlas encrypts all cluster storage and snapshot volumes, securing all cluster data on disk: a concept known as encryption at rest, by default.

        > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_mongodbatlas as mongodbatlas

        test = mongodbatlas.EncryptionAtRest("test",
            aws_kms={
                "access_key_id": "AKIAIOSFODNN7EXAMPLE",
                "customer_master_key_id": "030gce02-586d-48d2-a966-05ea954fde0g",
                "enabled": True,
                "region": "US_EAST_1",
                "secret_access_key": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
            },
            azure_key_vault={
                "azure_environment": "AZURE",
                "client_id": "g54f9e2-89e3-40fd-8188-EXAMPLEID",
                "enabled": True,
                "key_identifier": "https://EXAMPLEKeyVault.vault.azure.net/keys/EXAMPLEKey/d891821e3d364e9eb88fbd3d11807b86",
                "key_vault_name": "EXAMPLEKeyVault",
                "resource_group_name": "ExampleRGName",
                "secret": "EXAMPLESECRET",
                "subscription_id": "0ec944e3-g725-44f9-a147-EXAMPLEID",
                "tenant_id": "e8e4b6ba-ff32-4c88-a9af-EXAMPLEID",
            },
            google_cloud_kms={
                "enabled": True,
                "key_version_resource_id": "projects/my-project-common-0/locations/us-east4/keyRings/my-key-ring-0/cryptoKeys/my-key-0/cryptoKeyVersions/1",
                "service_account_key": "{\"type\": \"service_account\",\"project_id\": \"my-project-common-0\",\"private_key_id\": \"e120598ea4f88249469fcdd75a9a785c1bb3\",\"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEuwIBA(truncated)SfecnS0mT94D9\\n-----END PRIVATE KEY-----\\n\",\"client_email\": \"my-email-kms-0@my-project-common-0.iam.gserviceaccount.com\",\"client_id\": \"10180967717292066\",\"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/my-email-kms-0%40my-project-common-0.iam.gserviceaccount.com\"}",
            },
            project_id="<PROJECT-ID>")
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] aws_kms: Specifies AWS KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
        :param pulumi.Input[dict] azure_key_vault: Specifies Azure Key Vault configuration details and whether Encryption at Rest is enabled for an Atlas project.
        :param pulumi.Input[dict] google_cloud_kms: Specifies GCP KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
        :param pulumi.Input[str] project_id: The unique identifier for the project.

        The **aws_kms** object supports the following:

          * `access_key_id` (`pulumi.Input[str]`) - The IAM access key ID with permissions to access the customer master key specified by customerMasterKeyID.
          * `customer_master_key_id` (`pulumi.Input[str]`) - The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
          * `enabled` (`pulumi.Input[bool]`) - Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
          * `region` (`pulumi.Input[str]`) - The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
          * `secret_access_key` (`pulumi.Input[str]`) - The IAM secret access key with permissions to access the customer master key specified by customerMasterKeyID.

        The **azure_key_vault** object supports the following:

          * `azure_environment` (`pulumi.Input[str]`) - The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
          * `client_id` (`pulumi.Input[str]`) - The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
          * `enabled` (`pulumi.Input[bool]`) - Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
          * `key_identifier` (`pulumi.Input[str]`) - The unique identifier of a key in an Azure Key Vault.
          * `key_vault_name` (`pulumi.Input[str]`) - The name of an Azure Key Vault containing your key.
          * `resource_group_name` (`pulumi.Input[str]`) - The name of the Azure Resource group that contains an Azure Key Vault.
          * `secret` (`pulumi.Input[str]`) - The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
          * `subscription_id` (`pulumi.Input[str]`) - The unique identifier associated with an Azure subscription.
          * `tenant_id` (`pulumi.Input[str]`) - The unique identifier for an Azure AD tenant within an Azure subscription.

        The **google_cloud_kms** object supports the following:

          * `enabled` (`pulumi.Input[bool]`) - Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
          * `key_version_resource_id` (`pulumi.Input[str]`) - The Key Version Resource ID from your GCP account.
          * `service_account_key` (`pulumi.Input[str]`) - String-formatted JSON object containing GCP KMS credentials from your GCP account.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['aws_kms'] = aws_kms
            __props__['azure_key_vault'] = azure_key_vault
            __props__['google_cloud_kms'] = google_cloud_kms
            if project_id is None:
                raise TypeError("Missing required property 'project_id'")
            __props__['project_id'] = project_id
        super(EncryptionAtRest, __self__).__init__(
            'mongodbatlas:index/encryptionAtRest:EncryptionAtRest',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, aws_kms=None, azure_key_vault=None, google_cloud_kms=None, project_id=None):
        """
        Get an existing EncryptionAtRest resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] aws_kms: Specifies AWS KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
        :param pulumi.Input[dict] azure_key_vault: Specifies Azure Key Vault configuration details and whether Encryption at Rest is enabled for an Atlas project.
        :param pulumi.Input[dict] google_cloud_kms: Specifies GCP KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.
        :param pulumi.Input[str] project_id: The unique identifier for the project.

        The **aws_kms** object supports the following:

          * `access_key_id` (`pulumi.Input[str]`) - The IAM access key ID with permissions to access the customer master key specified by customerMasterKeyID.
          * `customer_master_key_id` (`pulumi.Input[str]`) - The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
          * `enabled` (`pulumi.Input[bool]`) - Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
          * `region` (`pulumi.Input[str]`) - The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
          * `secret_access_key` (`pulumi.Input[str]`) - The IAM secret access key with permissions to access the customer master key specified by customerMasterKeyID.

        The **azure_key_vault** object supports the following:

          * `azure_environment` (`pulumi.Input[str]`) - The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
          * `client_id` (`pulumi.Input[str]`) - The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
          * `enabled` (`pulumi.Input[bool]`) - Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
          * `key_identifier` (`pulumi.Input[str]`) - The unique identifier of a key in an Azure Key Vault.
          * `key_vault_name` (`pulumi.Input[str]`) - The name of an Azure Key Vault containing your key.
          * `resource_group_name` (`pulumi.Input[str]`) - The name of the Azure Resource group that contains an Azure Key Vault.
          * `secret` (`pulumi.Input[str]`) - The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
          * `subscription_id` (`pulumi.Input[str]`) - The unique identifier associated with an Azure subscription.
          * `tenant_id` (`pulumi.Input[str]`) - The unique identifier for an Azure AD tenant within an Azure subscription.

        The **google_cloud_kms** object supports the following:

          * `enabled` (`pulumi.Input[bool]`) - Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
          * `key_version_resource_id` (`pulumi.Input[str]`) - The Key Version Resource ID from your GCP account.
          * `service_account_key` (`pulumi.Input[str]`) - String-formatted JSON object containing GCP KMS credentials from your GCP account.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["aws_kms"] = aws_kms
        __props__["azure_key_vault"] = azure_key_vault
        __props__["google_cloud_kms"] = google_cloud_kms
        __props__["project_id"] = project_id
        return EncryptionAtRest(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
