# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

import types

__config__ = pulumi.Config('mongodbatlas')


class _ExportableConfig(types.ModuleType):
    @property
    def assume_role(self) -> Optional[str]:
        return __config__.get('assumeRole')

    @property
    def aws_access_key_id(self) -> Optional[str]:
        """
        AWS API Access Key.
        """
        return __config__.get('awsAccessKeyId')

    @property
    def aws_secret_access_key(self) -> Optional[str]:
        """
        AWS API Access Secret Key.
        """
        return __config__.get('awsSecretAccessKey')

    @property
    def aws_session_token(self) -> Optional[str]:
        """
        AWS Security Token Service provided session token.
        """
        return __config__.get('awsSessionToken')

    @property
    def base_url(self) -> Optional[str]:
        """
        MongoDB Atlas Base URL
        """
        return __config__.get('baseUrl')

    @property
    def is_mongodbgov_cloud(self) -> Optional[bool]:
        """
        MongoDB Atlas Base URL default to gov
        """
        return __config__.get_bool('isMongodbgovCloud')

    @property
    def private_key(self) -> Optional[str]:
        """
        MongoDB Atlas Programmatic Private Key
        """
        return __config__.get('privateKey')

    @property
    def public_key(self) -> Optional[str]:
        """
        MongoDB Atlas Programmatic Public Key
        """
        return __config__.get('publicKey')

    @property
    def realm_base_url(self) -> Optional[str]:
        """
        MongoDB Realm Base URL
        """
        return __config__.get('realmBaseUrl')

    @property
    def region(self) -> Optional[str]:
        """
        Region where secret is stored as part of AWS Secret Manager.
        """
        return __config__.get('region')

    @property
    def secret_name(self) -> Optional[str]:
        """
        Name of secret stored in AWS Secret Manager.
        """
        return __config__.get('secretName')

    @property
    def sts_endpoint(self) -> Optional[str]:
        """
        AWS Security Token Service endpoint. Required for cross-AWS region or cross-AWS account secrets.
        """
        return __config__.get('stsEndpoint')

